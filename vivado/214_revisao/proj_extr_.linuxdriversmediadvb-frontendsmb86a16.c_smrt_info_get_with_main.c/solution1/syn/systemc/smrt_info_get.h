// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _smrt_info_get_HH_
#define _smrt_info_get_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct smrt_info_get : public sc_module {
    // Port declarations 13
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<32> > state_deci;
    sc_out< sc_logic > state_deci_ap_vld;
    sc_out< sc_lv<32> > state_csel;
    sc_out< sc_logic > state_csel_ap_vld;
    sc_out< sc_lv<32> > state_rsel;
    sc_out< sc_logic > state_rsel_ap_vld;
    sc_out< sc_lv<32> > state_master_clk;
    sc_out< sc_logic > state_master_clk_ap_vld;
    sc_in< sc_lv<32> > rate;
    // Port declarations for the virtual clock. 
    sc_in_clk ap_virtual_clock;


    // Module declarations
    smrt_info_get(sc_module_name name);
    SC_HAS_PROCESS(smrt_info_get);

    ~smrt_info_get();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    sc_signal< sc_lv<17> > ap_phi_mux_phi_ln68_phi_fu_129_p46;
    sc_signal< sc_lv<1> > icmp_ln18_fu_200_p2;
    sc_signal< sc_lv<1> > icmp_ln20_fu_206_p2;
    sc_signal< sc_lv<1> > icmp_ln22_fu_212_p2;
    sc_signal< sc_lv<1> > icmp_ln24_fu_218_p2;
    sc_signal< sc_lv<1> > icmp_ln26_fu_224_p2;
    sc_signal< sc_lv<1> > icmp_ln28_fu_230_p2;
    sc_signal< sc_lv<1> > icmp_ln30_fu_236_p2;
    sc_signal< sc_lv<1> > icmp_ln32_fu_242_p2;
    sc_signal< sc_lv<1> > icmp_ln34_fu_248_p2;
    sc_signal< sc_lv<1> > icmp_ln36_fu_254_p2;
    sc_signal< sc_lv<1> > icmp_ln38_fu_260_p2;
    sc_signal< sc_lv<1> > icmp_ln40_fu_266_p2;
    sc_signal< sc_lv<1> > icmp_ln42_fu_272_p2;
    sc_signal< sc_lv<1> > icmp_ln44_fu_278_p2;
    sc_signal< sc_lv<1> > icmp_ln46_fu_284_p2;
    sc_signal< sc_lv<1> > icmp_ln48_fu_290_p2;
    sc_signal< sc_lv<1> > icmp_ln50_fu_296_p2;
    sc_signal< sc_lv<1> > icmp_ln52_fu_302_p2;
    sc_signal< sc_lv<1> > icmp_ln54_fu_308_p2;
    sc_signal< sc_lv<1> > icmp_ln56_fu_314_p2;
    sc_signal< sc_lv<1> > icmp_ln58_fu_320_p2;
    sc_signal< sc_lv<1> > icmp_ln60_fu_326_p2;
    sc_signal< sc_lv<32> > zext_ln62_fu_338_p1;
    sc_signal< sc_lv<1> > icmp_ln62_fu_332_p2;
    static const sc_logic ap_const_logic_1;
    static const sc_lv<17> ap_const_lv17_16760;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<17> ap_const_lv17_EF95;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_927C;
    static const sc_lv<32> ap_const_lv32_7530;
    static const sc_lv<32> ap_const_lv32_668A;
    static const sc_lv<32> ap_const_lv32_57E4;
    static const sc_lv<32> ap_const_lv32_493E;
    static const sc_lv<32> ap_const_lv32_3A98;
    static const sc_lv<32> ap_const_lv32_3345;
    static const sc_lv<32> ap_const_lv32_2BF2;
    static const sc_lv<32> ap_const_lv32_249F;
    static const sc_lv<32> ap_const_lv32_1D4C;
    static const sc_lv<32> ap_const_lv32_19A2;
    static const sc_lv<32> ap_const_lv32_15F9;
    static const sc_lv<32> ap_const_lv32_124F;
    static const sc_lv<32> ap_const_lv32_EA6;
    static const sc_lv<32> ap_const_lv32_CD1;
    static const sc_lv<32> ap_const_lv32_AFD;
    static const sc_lv<32> ap_const_lv32_927;
    static const sc_lv<32> ap_const_lv32_753;
    static const sc_lv<32> ap_const_lv32_668;
    static const sc_lv<32> ap_const_lv32_57E;
    static const sc_lv<32> ap_const_lv32_493;
    static const sc_lv<32> ap_const_lv32_3AA;
    static const sc_lv<32> ap_const_lv32_335;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_phi_mux_phi_ln68_phi_fu_129_p46();
    void thread_ap_ready();
    void thread_icmp_ln18_fu_200_p2();
    void thread_icmp_ln20_fu_206_p2();
    void thread_icmp_ln22_fu_212_p2();
    void thread_icmp_ln24_fu_218_p2();
    void thread_icmp_ln26_fu_224_p2();
    void thread_icmp_ln28_fu_230_p2();
    void thread_icmp_ln30_fu_236_p2();
    void thread_icmp_ln32_fu_242_p2();
    void thread_icmp_ln34_fu_248_p2();
    void thread_icmp_ln36_fu_254_p2();
    void thread_icmp_ln38_fu_260_p2();
    void thread_icmp_ln40_fu_266_p2();
    void thread_icmp_ln42_fu_272_p2();
    void thread_icmp_ln44_fu_278_p2();
    void thread_icmp_ln46_fu_284_p2();
    void thread_icmp_ln48_fu_290_p2();
    void thread_icmp_ln50_fu_296_p2();
    void thread_icmp_ln52_fu_302_p2();
    void thread_icmp_ln54_fu_308_p2();
    void thread_icmp_ln56_fu_314_p2();
    void thread_icmp_ln58_fu_320_p2();
    void thread_icmp_ln60_fu_326_p2();
    void thread_icmp_ln62_fu_332_p2();
    void thread_state_csel();
    void thread_state_csel_ap_vld();
    void thread_state_deci();
    void thread_state_deci_ap_vld();
    void thread_state_master_clk();
    void thread_state_master_clk_ap_vld();
    void thread_state_rsel();
    void thread_state_rsel_ap_vld();
    void thread_zext_ln62_fu_338_p1();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
