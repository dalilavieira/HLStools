#include "hls_design_meta.h"
const Port_Property HLS_Design_Meta::port_props[]={
	Port_Property("ap_clk", 1, hls_in, -1, "", "", 1),
	Port_Property("ap_rst", 1, hls_in, -1, "", "", 1),
	Port_Property("ap_start", 1, hls_in, -1, "", "", 1),
	Port_Property("ap_done", 1, hls_out, -1, "", "", 1),
	Port_Property("ap_idle", 1, hls_out, -1, "", "", 1),
	Port_Property("ap_ready", 1, hls_out, -1, "", "", 1),
	Port_Property("itv_yuv_info_osd_x_offset", 32, hls_in, 0, "ap_none", "in_data", 1),
	Port_Property("itv_yuv_info_osd_y_offset", 32, hls_in, 1, "ap_none", "in_data", 1),
	Port_Property("itv_yuv_info_track_osd", 32, hls_in, 2, "ap_none", "in_data", 1),
	Port_Property("itv_yuv_info_old_frame_info_src_x", 32, hls_in, 3, "ap_none", "in_data", 1),
	Port_Property("itv_yuv_info_old_frame_info_src_y", 32, hls_in, 4, "ap_none", "in_data", 1),
	Port_Property("itv_yuv_info_old_frame_info_src_w", 32, hls_in, 5, "ap_none", "in_data", 1),
	Port_Property("itv_yuv_info_old_frame_info_dst_w", 32, hls_in, 6, "ap_none", "in_data", 1),
	Port_Property("itv_yuv_info_old_frame_info_src_h", 32, hls_in, 7, "ap_none", "in_data", 1),
	Port_Property("itv_yuv_info_old_frame_info_dst_h", 32, hls_in, 8, "ap_none", "in_data", 1),
	Port_Property("itv_yuv_info_old_frame_info_interlaced_y", 32, hls_in, 9, "ap_none", "in_data", 1),
	Port_Property("itv_yuv_info_old_frame_info_pan_y", 32, hls_in, 10, "ap_none", "in_data", 1),
	Port_Property("itv_yuv_info_old_frame_info_dst_y", 32, hls_in, 11, "ap_none", "in_data", 1),
	Port_Property("itv_yuv_info_old_frame_info_vis_h", 32, hls_in, 12, "ap_none", "in_data", 1),
	Port_Property("itv_yuv_info_old_frame_info_pan_x", 32, hls_in, 13, "ap_none", "in_data", 1),
	Port_Property("itv_yuv_info_old_frame_info_dst_x", 32, hls_in, 14, "ap_none", "in_data", 1),
	Port_Property("itv_yuv_info_old_frame_info_vis_w", 32, hls_in, 15, "ap_none", "in_data", 1),
	Port_Property("itv_yuv_info_old_frame_info_lace_mode", 32, hls_in, 16, "ap_none", "in_data", 1),
	Port_Property("itv_yuv_info_old_frame_info_interlaced_uv", 32, hls_in, 17, "ap_none", "in_data", 1),
	Port_Property("f_src_x_i", 32, hls_in, 18, "ap_ovld", "in_data", 1),
	Port_Property("f_src_x_o", 32, hls_out, 18, "ap_ovld", "out_data", 1),
	Port_Property("f_src_x_o_ap_vld", 1, hls_out, 18, "ap_ovld", "out_vld", 1),
	Port_Property("f_src_y_i", 32, hls_in, 19, "ap_ovld", "in_data", 1),
	Port_Property("f_src_y_o", 32, hls_out, 19, "ap_ovld", "out_data", 1),
	Port_Property("f_src_y_o_ap_vld", 1, hls_out, 19, "ap_ovld", "out_vld", 1),
	Port_Property("f_src_w_i", 32, hls_in, 20, "ap_ovld", "in_data", 1),
	Port_Property("f_src_w_o", 32, hls_out, 20, "ap_ovld", "out_data", 1),
	Port_Property("f_src_w_o_ap_vld", 1, hls_out, 20, "ap_ovld", "out_vld", 1),
	Port_Property("f_dst_w_i", 32, hls_in, 21, "ap_ovld", "in_data", 1),
	Port_Property("f_dst_w_o", 32, hls_out, 21, "ap_ovld", "out_data", 1),
	Port_Property("f_dst_w_o_ap_vld", 1, hls_out, 21, "ap_ovld", "out_vld", 1),
	Port_Property("f_src_h_i", 32, hls_in, 22, "ap_ovld", "in_data", 1),
	Port_Property("f_src_h_o", 32, hls_out, 22, "ap_ovld", "out_data", 1),
	Port_Property("f_src_h_o_ap_vld", 1, hls_out, 22, "ap_ovld", "out_vld", 1),
	Port_Property("f_dst_h_i", 32, hls_in, 23, "ap_ovld", "in_data", 1),
	Port_Property("f_dst_h_o", 32, hls_out, 23, "ap_ovld", "out_data", 1),
	Port_Property("f_dst_h_o_ap_vld", 1, hls_out, 23, "ap_ovld", "out_vld", 1),
	Port_Property("f_interlaced_y_i", 32, hls_in, 24, "ap_ovld", "in_data", 1),
	Port_Property("f_interlaced_y_o", 32, hls_out, 24, "ap_ovld", "out_data", 1),
	Port_Property("f_interlaced_y_o_ap_vld", 1, hls_out, 24, "ap_ovld", "out_vld", 1),
	Port_Property("f_pan_y", 32, hls_in, 25, "ap_none", "in_data", 1),
	Port_Property("f_dst_y_i", 32, hls_in, 26, "ap_ovld", "in_data", 1),
	Port_Property("f_dst_y_o", 32, hls_out, 26, "ap_ovld", "out_data", 1),
	Port_Property("f_dst_y_o_ap_vld", 1, hls_out, 26, "ap_ovld", "out_vld", 1),
	Port_Property("f_vis_h", 32, hls_in, 27, "ap_none", "in_data", 1),
	Port_Property("f_pan_x", 32, hls_in, 28, "ap_none", "in_data", 1),
	Port_Property("f_dst_x_i", 32, hls_in, 29, "ap_ovld", "in_data", 1),
	Port_Property("f_dst_x_o", 32, hls_out, 29, "ap_ovld", "out_data", 1),
	Port_Property("f_dst_x_o_ap_vld", 1, hls_out, 29, "ap_ovld", "out_vld", 1),
	Port_Property("f_vis_w", 32, hls_in, 30, "ap_none", "in_data", 1),
	Port_Property("f_lace_mode", 32, hls_in, 31, "ap_none", "in_data", 1),
	Port_Property("f_interlaced_uv", 32, hls_in, 32, "ap_none", "in_data", 1),
	Port_Property("ap_return", 32, hls_out, -1, "", "", 1),
};
const char* HLS_Design_Meta::dut_name = "ivtv_yuv_window_setup";
