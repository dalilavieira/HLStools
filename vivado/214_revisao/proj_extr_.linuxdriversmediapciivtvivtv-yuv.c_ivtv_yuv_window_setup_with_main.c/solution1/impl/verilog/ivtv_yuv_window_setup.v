// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="ivtv_yuv_window_setup,hls_ip_2019_1,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7k160t-fbg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.523000,HLS_SYN_LAT=30,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=12,HLS_SYN_FF=2060,HLS_SYN_LUT=3914,HLS_VERSION=2019_1}" *)

module ivtv_yuv_window_setup (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        itv_yuv_info_osd_x_offset,
        itv_yuv_info_osd_y_offset,
        itv_yuv_info_track_osd,
        itv_yuv_info_old_frame_info_src_x,
        itv_yuv_info_old_frame_info_src_y,
        itv_yuv_info_old_frame_info_src_w,
        itv_yuv_info_old_frame_info_dst_w,
        itv_yuv_info_old_frame_info_src_h,
        itv_yuv_info_old_frame_info_dst_h,
        itv_yuv_info_old_frame_info_interlaced_y,
        itv_yuv_info_old_frame_info_pan_y,
        itv_yuv_info_old_frame_info_dst_y,
        itv_yuv_info_old_frame_info_vis_h,
        itv_yuv_info_old_frame_info_pan_x,
        itv_yuv_info_old_frame_info_dst_x,
        itv_yuv_info_old_frame_info_vis_w,
        itv_yuv_info_old_frame_info_lace_mode,
        itv_yuv_info_old_frame_info_interlaced_uv,
        f_src_x_i,
        f_src_x_o,
        f_src_x_o_ap_vld,
        f_src_y_i,
        f_src_y_o,
        f_src_y_o_ap_vld,
        f_src_w_i,
        f_src_w_o,
        f_src_w_o_ap_vld,
        f_dst_w_i,
        f_dst_w_o,
        f_dst_w_o_ap_vld,
        f_src_h_i,
        f_src_h_o,
        f_src_h_o_ap_vld,
        f_dst_h_i,
        f_dst_h_o,
        f_dst_h_o_ap_vld,
        f_interlaced_y_i,
        f_interlaced_y_o,
        f_interlaced_y_o_ap_vld,
        f_pan_y,
        f_dst_y_i,
        f_dst_y_o,
        f_dst_y_o_ap_vld,
        f_vis_h,
        f_pan_x,
        f_dst_x_i,
        f_dst_x_o,
        f_dst_x_o_ap_vld,
        f_vis_w,
        f_lace_mode,
        f_interlaced_uv,
        ap_return
);

parameter    ap_ST_fsm_state1 = 40'd1;
parameter    ap_ST_fsm_state2 = 40'd2;
parameter    ap_ST_fsm_state3 = 40'd4;
parameter    ap_ST_fsm_state4 = 40'd8;
parameter    ap_ST_fsm_state5 = 40'd16;
parameter    ap_ST_fsm_state6 = 40'd32;
parameter    ap_ST_fsm_state7 = 40'd64;
parameter    ap_ST_fsm_state8 = 40'd128;
parameter    ap_ST_fsm_state9 = 40'd256;
parameter    ap_ST_fsm_state10 = 40'd512;
parameter    ap_ST_fsm_state11 = 40'd1024;
parameter    ap_ST_fsm_state12 = 40'd2048;
parameter    ap_ST_fsm_state13 = 40'd4096;
parameter    ap_ST_fsm_state14 = 40'd8192;
parameter    ap_ST_fsm_state15 = 40'd16384;
parameter    ap_ST_fsm_state16 = 40'd32768;
parameter    ap_ST_fsm_state17 = 40'd65536;
parameter    ap_ST_fsm_state18 = 40'd131072;
parameter    ap_ST_fsm_state19 = 40'd262144;
parameter    ap_ST_fsm_state20 = 40'd524288;
parameter    ap_ST_fsm_state21 = 40'd1048576;
parameter    ap_ST_fsm_state22 = 40'd2097152;
parameter    ap_ST_fsm_state23 = 40'd4194304;
parameter    ap_ST_fsm_state24 = 40'd8388608;
parameter    ap_ST_fsm_state25 = 40'd16777216;
parameter    ap_ST_fsm_state26 = 40'd33554432;
parameter    ap_ST_fsm_state27 = 40'd67108864;
parameter    ap_ST_fsm_state28 = 40'd134217728;
parameter    ap_ST_fsm_state29 = 40'd268435456;
parameter    ap_ST_fsm_state30 = 40'd536870912;
parameter    ap_ST_fsm_state31 = 40'd1073741824;
parameter    ap_ST_fsm_state32 = 40'd2147483648;
parameter    ap_ST_fsm_state33 = 40'd4294967296;
parameter    ap_ST_fsm_state34 = 40'd8589934592;
parameter    ap_ST_fsm_state35 = 40'd17179869184;
parameter    ap_ST_fsm_state36 = 40'd34359738368;
parameter    ap_ST_fsm_state37 = 40'd68719476736;
parameter    ap_ST_fsm_state38 = 40'd137438953472;
parameter    ap_ST_fsm_state39 = 40'd274877906944;
parameter    ap_ST_fsm_state40 = 40'd549755813888;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] itv_yuv_info_osd_x_offset;
input  [31:0] itv_yuv_info_osd_y_offset;
input  [31:0] itv_yuv_info_track_osd;
input  [31:0] itv_yuv_info_old_frame_info_src_x;
input  [31:0] itv_yuv_info_old_frame_info_src_y;
input  [31:0] itv_yuv_info_old_frame_info_src_w;
input  [31:0] itv_yuv_info_old_frame_info_dst_w;
input  [31:0] itv_yuv_info_old_frame_info_src_h;
input  [31:0] itv_yuv_info_old_frame_info_dst_h;
input  [31:0] itv_yuv_info_old_frame_info_interlaced_y;
input  [31:0] itv_yuv_info_old_frame_info_pan_y;
input  [31:0] itv_yuv_info_old_frame_info_dst_y;
input  [31:0] itv_yuv_info_old_frame_info_vis_h;
input  [31:0] itv_yuv_info_old_frame_info_pan_x;
input  [31:0] itv_yuv_info_old_frame_info_dst_x;
input  [31:0] itv_yuv_info_old_frame_info_vis_w;
input  [31:0] itv_yuv_info_old_frame_info_lace_mode;
input  [31:0] itv_yuv_info_old_frame_info_interlaced_uv;
input  [31:0] f_src_x_i;
output  [31:0] f_src_x_o;
output   f_src_x_o_ap_vld;
input  [31:0] f_src_y_i;
output  [31:0] f_src_y_o;
output   f_src_y_o_ap_vld;
input  [31:0] f_src_w_i;
output  [31:0] f_src_w_o;
output   f_src_w_o_ap_vld;
input  [31:0] f_dst_w_i;
output  [31:0] f_dst_w_o;
output   f_dst_w_o_ap_vld;
input  [31:0] f_src_h_i;
output  [31:0] f_src_h_o;
output   f_src_h_o_ap_vld;
input  [31:0] f_dst_h_i;
output  [31:0] f_dst_h_o;
output   f_dst_h_o_ap_vld;
input  [31:0] f_interlaced_y_i;
output  [31:0] f_interlaced_y_o;
output   f_interlaced_y_o_ap_vld;
input  [31:0] f_pan_y;
input  [31:0] f_dst_y_i;
output  [31:0] f_dst_y_o;
output   f_dst_y_o_ap_vld;
input  [31:0] f_vis_h;
input  [31:0] f_pan_x;
input  [31:0] f_dst_x_i;
output  [31:0] f_dst_x_o;
output   f_dst_x_o_ap_vld;
input  [31:0] f_vis_w;
input  [31:0] f_lace_mode;
input  [31:0] f_interlaced_uv;
output  [31:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[31:0] f_src_x_o;
reg f_src_x_o_ap_vld;
reg[31:0] f_src_y_o;
reg f_src_y_o_ap_vld;
reg[31:0] f_src_w_o;
reg f_src_w_o_ap_vld;
reg[31:0] f_dst_w_o;
reg f_dst_w_o_ap_vld;
reg[31:0] f_src_h_o;
reg f_src_h_o_ap_vld;
reg[31:0] f_dst_h_o;
reg f_dst_h_o_ap_vld;
reg[31:0] f_interlaced_y_o;
reg f_interlaced_y_o_ap_vld;
reg[31:0] f_dst_y_o;
reg f_dst_y_o_ap_vld;
reg[31:0] f_dst_x_o;
reg f_dst_x_o_ap_vld;

(* fsm_encoding = "none" *) reg   [39:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [31:0] shl_ln37_fu_631_p2;
wire   [0:0] icmp_ln37_fu_643_p2;
wire   [0:0] or_ln37_fu_691_p2;
wire   [31:0] select_ln37_fu_697_p3;
wire   [31:0] select_ln37_1_fu_705_p3;
reg   [31:0] select_ln37_1_reg_1822;
wire   [31:0] select_ln37_2_fu_713_p3;
reg   [31:0] select_ln37_2_reg_1828;
wire   [31:0] select_ln37_3_fu_721_p3;
reg   [31:0] select_ln37_3_reg_1834;
wire   [0:0] or_ln60_2_fu_889_p2;
wire  signed [31:0] grp_fu_901_p2;
reg  signed [31:0] osd_scale_reg_1861;
wire    ap_CS_fsm_state36;
wire  signed [31:0] osd_crop_2_fu_919_p2;
reg  signed [31:0] osd_crop_2_reg_1872;
wire   [0:0] icmp_ln68_fu_925_p2;
reg   [0:0] icmp_ln68_reg_1877;
wire   [31:0] select_ln68_3_fu_951_p3;
reg   [31:0] select_ln68_3_reg_1883;
wire  signed [31:0] osd_crop_3_fu_965_p2;
reg  signed [31:0] osd_crop_3_reg_1893;
wire   [0:0] icmp_ln78_fu_971_p2;
reg   [0:0] icmp_ln78_reg_1899;
wire  signed [31:0] grp_fu_913_p2;
reg  signed [31:0] osd_scale_1_reg_1905;
wire  signed [31:0] osd_crop_4_fu_977_p2;
reg  signed [31:0] osd_crop_4_reg_1911;
wire   [0:0] icmp_ln86_fu_983_p2;
reg   [0:0] icmp_ln86_reg_1916;
wire   [31:0] select_ln86_3_fu_1008_p3;
reg   [31:0] select_ln86_3_reg_1922;
wire  signed [31:0] osd_crop_5_fu_1021_p2;
reg  signed [31:0] osd_crop_5_reg_1927;
wire   [0:0] icmp_ln96_fu_1027_p2;
reg   [0:0] icmp_ln96_reg_1933;
reg   [30:0] tmp_5_reg_1939;
reg   [30:0] tmp_10_reg_1944;
wire   [30:0] select_ln102_1_fu_1128_p3;
reg   [30:0] select_ln102_1_reg_1949;
reg   [15:0] trunc_ln6_reg_1954;
wire    ap_CS_fsm_state37;
reg   [15:0] trunc_ln8_reg_1959;
reg   [15:0] trunc_ln9_reg_1964;
reg   [15:0] trunc_ln_reg_1969;
wire   [30:0] select_ln96_1_fu_1210_p3;
reg   [30:0] select_ln96_1_reg_1974;
wire   [30:0] select_ln78_1_fu_1226_p3;
reg   [30:0] select_ln78_1_reg_1979;
reg   [30:0] tmp_8_reg_1984;
wire    ap_CS_fsm_state38;
wire   [31:0] and_ln3_fu_1356_p3;
reg   [31:0] and_ln3_reg_1989;
reg   [30:0] tmp_13_reg_1994;
wire   [31:0] and_ln7_fu_1394_p3;
reg   [31:0] and_ln7_reg_1999;
reg   [0:0] tmp_15_reg_2004;
reg   [29:0] tmp_16_reg_2010;
wire   [29:0] tmp_17_fu_1426_p4;
reg   [29:0] tmp_17_reg_2015;
wire   [31:0] and_ln8_fu_1436_p3;
reg   [31:0] and_ln8_reg_2020;
reg   [29:0] tmp_18_reg_2025;
reg   [0:0] tmp_19_reg_2030;
reg   [29:0] tmp_20_reg_2036;
wire   [29:0] tmp_21_fu_1484_p4;
reg   [29:0] tmp_21_reg_2041;
wire   [31:0] and_ln9_fu_1494_p3;
reg   [31:0] and_ln9_reg_2046;
reg   [29:0] tmp_22_reg_2051;
wire   [31:0] and_ln2_fu_1525_p3;
wire    ap_CS_fsm_state39;
wire   [31:0] and_ln6_fu_1547_p3;
wire   [31:0] select_ln131_1_fu_1617_p3;
wire   [31:0] select_ln131_2_fu_1623_p3;
wire   [31:0] select_ln136_1_fu_1694_p3;
wire   [31:0] select_ln136_2_fu_1700_p3;
reg   [0:0] ap_phi_mux_f_src_y_flag_1_phi_fu_339_p6;
wire   [0:0] select_ln45_fu_777_p3;
wire   [0:0] icmp_ln50_fu_802_p2;
wire   [0:0] tmp_1_fu_603_p3;
wire   [31:0] add_ln52_fu_822_p2;
reg   [31:0] ap_phi_mux_f_src_y_new_1_phi_fu_352_p6;
reg   [0:0] ap_phi_mux_f_src_h_flag_0_phi_fu_366_p6;
reg   [31:0] empty_reg_378;
wire   [31:0] zext_ln33_fu_621_p1;
wire   [31:0] shl_ln50_fu_789_p2;
reg   [31:0] ap_phi_mux_empty_4_phi_fu_393_p6;
reg   [31:0] empty_4_reg_390;
wire  signed [31:0] sext_ln55_1_fu_848_p1;
reg   [31:0] ap_phi_mux_empty_5_phi_fu_407_p6;
reg   [31:0] empty_5_reg_404;
wire   [0:0] ap_phi_mux_f_src_x_flag_2_phi_fu_422_p8;
reg   [0:0] f_src_x_flag_2_reg_418;
wire   [0:0] or_ln143_2_fu_1744_p2;
wire   [0:0] icmp_ln155_fu_1750_p2;
wire   [0:0] icmp_ln155_1_fu_1756_p2;
wire   [0:0] icmp_ln155_2_fu_1762_p2;
wire   [0:0] icmp_ln155_3_fu_1768_p2;
wire   [0:0] icmp_ln155_4_fu_1774_p2;
wire   [0:0] icmp_ln155_5_fu_1779_p2;
wire   [0:0] icmp_ln155_6_fu_1784_p2;
wire   [0:0] icmp_ln155_7_fu_1790_p2;
wire   [0:0] icmp_ln155_8_fu_1796_p2;
reg   [31:0] f_src_x_new_2_reg_435;
wire   [0:0] ap_phi_mux_f_src_y_flag_2_phi_fu_453_p8;
reg   [0:0] f_src_y_flag_2_reg_449;
reg   [31:0] f_src_y_new_2_reg_467;
wire   [0:0] ap_phi_mux_f_src_w_flag_2_phi_fu_486_p8;
reg   [0:0] f_src_w_flag_2_reg_482;
reg   [31:0] f_src_w_new_2_reg_499;
reg   [31:0] f_dst_w_new_2_reg_513;
wire   [0:0] ap_phi_mux_f_src_h_flag_2_phi_fu_531_p8;
reg   [0:0] f_src_h_flag_2_reg_527;
reg   [31:0] f_src_h_new_2_reg_545;
reg   [31:0] f_dst_h_new_2_reg_560;
wire   [31:0] and_ln1_fu_1089_p3;
wire   [31:0] and_ln5_fu_1539_p3;
wire    ap_CS_fsm_state40;
wire   [0:0] tmp_fu_579_p3;
wire   [30:0] trunc_ln31_fu_575_p1;
wire   [30:0] select_ln31_fu_587_p3;
wire   [30:0] trunc_ln33_fu_599_p1;
wire   [30:0] select_ln33_fu_613_p3;
wire   [31:0] osd_crop_fu_637_p2;
wire   [30:0] lshr_ln_fu_649_p4;
wire   [31:0] zext_ln31_fu_595_p1;
wire   [31:0] zext_ln38_fu_659_p1;
wire   [29:0] trunc_ln37_fu_627_p1;
wire   [0:0] trunc_ln41_fu_673_p1;
wire  signed [30:0] sext_ln41_fu_669_p1;
wire   [30:0] zext_ln41_fu_677_p1;
wire   [30:0] add_ln41_fu_681_p2;
wire   [31:0] add_ln38_fu_663_p2;
wire  signed [31:0] sext_ln41_1_fu_687_p1;
wire   [32:0] tmp_3_fu_737_p3;
wire  signed [31:0] sext_ln45_1_fu_749_p0;
wire  signed [34:0] sext_ln45_fu_745_p1;
wire  signed [34:0] sext_ln45_1_fu_749_p1;
wire   [0:0] icmp_ln45_fu_753_p2;
wire   [0:0] icmp_ln45_1_fu_765_p2;
wire   [0:0] tmp_2_fu_729_p3;
wire   [0:0] xor_ln45_fu_759_p2;
wire   [0:0] xor_ln45_1_fu_771_p2;
wire  signed [31:0] osd_crop_1_fu_796_p0;
wire   [31:0] osd_crop_1_fu_796_p2;
wire   [30:0] lshr_ln1_fu_808_p4;
wire   [31:0] zext_ln52_fu_818_p1;
wire   [29:0] trunc_ln50_fu_785_p1;
wire   [0:0] trunc_ln55_fu_834_p1;
wire  signed [30:0] sext_ln55_fu_830_p1;
wire   [30:0] zext_ln55_fu_838_p1;
wire   [30:0] add_ln55_fu_842_p2;
wire   [0:0] icmp_ln60_fu_853_p2;
wire   [0:0] icmp_ln60_1_fu_859_p2;
wire   [0:0] icmp_ln60_2_fu_865_p2;
wire   [0:0] icmp_ln60_3_fu_871_p2;
wire   [0:0] or_ln60_1_fu_883_p2;
wire   [0:0] or_ln60_fu_877_p2;
wire   [31:0] grp_fu_901_p0;
wire   [31:0] grp_fu_913_p0;
wire   [31:0] sub_ln75_fu_937_p2;
wire   [31:0] sub_ln72_fu_931_p2;
wire   [31:0] select_ln68_fu_943_p3;
wire   [31:0] add_ln78_fu_959_p2;
wire   [31:0] sub_ln93_fu_994_p2;
wire   [31:0] sub_ln90_fu_989_p2;
wire   [31:0] select_ln86_fu_1000_p3;
wire   [31:0] add_ln96_fu_1015_p2;
wire   [31:0] add_ln104_fu_1039_p2;
wire   [0:0] icmp_ln102_fu_1033_p2;
wire   [30:0] tmp_6_fu_1061_p4;
wire   [30:0] tmp_7_fu_1071_p4;
wire   [30:0] select_ln102_fu_1081_p3;
wire   [31:0] add_ln105_fu_1045_p2;
wire   [30:0] tmp_11_fu_1108_p4;
wire   [30:0] tmp_12_fu_1118_p4;
wire   [31:0] mul_ln70_fu_1136_p2;
wire   [31:0] mul_ln81_fu_1154_p2;
wire   [31:0] mul_ln88_fu_1168_p2;
wire   [31:0] mul_ln99_fu_1186_p2;
wire   [31:0] sub_ln98_fu_1182_p2;
wire   [30:0] tmp_4_fu_1200_p4;
wire   [31:0] sub_ln80_fu_1150_p2;
wire   [30:0] tmp_s_fu_1216_p4;
wire  signed [31:0] sext_ln70_fu_1232_p1;
wire   [31:0] add_ln70_fu_1235_p2;
wire   [31:0] select_ln68_1_fu_1247_p3;
wire   [31:0] sub_ln71_fu_1241_p2;
wire   [31:0] select_ln68_2_fu_1258_p3;
wire  signed [31:0] sext_ln81_fu_1265_p1;
wire   [31:0] sub_ln81_fu_1268_p2;
wire  signed [31:0] sext_ln88_fu_1281_p1;
wire   [31:0] add_ln88_fu_1284_p2;
wire   [31:0] select_ln86_1_fu_1294_p3;
wire   [31:0] sub_ln89_fu_1289_p2;
wire   [31:0] select_ln86_2_fu_1304_p3;
wire  signed [31:0] sext_ln99_fu_1310_p1;
wire   [31:0] sub_ln99_fu_1313_p2;
wire   [0:0] trunc_ln86_fu_1300_p1;
wire   [31:0] select_ln96_fu_1319_p3;
wire   [31:0] zext_ln113_fu_1326_p1;
wire   [31:0] add_ln113_fu_1330_p2;
wire   [30:0] tmp_9_fu_1346_p4;
wire   [0:0] trunc_ln68_fu_1254_p1;
wire   [31:0] select_ln78_fu_1274_p3;
wire   [31:0] zext_ln122_fu_1364_p1;
wire   [31:0] add_ln122_fu_1368_p2;
wire   [30:0] tmp_14_fu_1384_p4;
wire   [31:0] sub_ln131_fu_1410_p2;
wire   [31:0] sub_ln133_fu_1444_p2;
wire   [31:0] sub_ln136_fu_1468_p2;
wire   [31:0] sub_ln138_fu_1502_p2;
wire   [30:0] zext_ln131_fu_1554_p1;
wire   [30:0] sub_ln131_1_fu_1557_p2;
wire   [30:0] zext_ln131_1_fu_1563_p1;
wire   [30:0] select_ln131_fu_1566_p3;
wire   [31:0] and_ln_fu_1518_p3;
wire  signed [31:0] sext_ln131_fu_1573_p1;
wire   [30:0] zext_ln133_fu_1583_p1;
wire   [30:0] sub_ln133_1_fu_1586_p2;
wire  signed [30:0] select_ln133_fu_1592_p3;
wire   [0:0] trunc_ln133_fu_1603_p1;
wire   [31:0] zext_ln134_fu_1607_p1;
wire  signed [31:0] sext_ln133_fu_1599_p1;
wire   [0:0] icmp_ln131_fu_1577_p2;
wire   [31:0] add_ln134_fu_1611_p2;
wire   [30:0] zext_ln136_fu_1631_p1;
wire   [30:0] sub_ln136_1_fu_1634_p2;
wire   [30:0] zext_ln136_1_fu_1640_p1;
wire   [30:0] select_ln136_fu_1643_p3;
wire   [31:0] and_ln4_fu_1532_p3;
wire  signed [31:0] sext_ln136_fu_1650_p1;
wire   [30:0] zext_ln138_fu_1660_p1;
wire   [30:0] sub_ln138_1_fu_1663_p2;
wire  signed [30:0] select_ln138_fu_1669_p3;
wire   [0:0] trunc_ln138_fu_1680_p1;
wire   [31:0] zext_ln139_fu_1684_p1;
wire  signed [31:0] sext_ln138_fu_1676_p1;
wire   [0:0] icmp_ln136_fu_1654_p2;
wire   [31:0] add_ln139_fu_1688_p2;
wire   [0:0] icmp_ln143_fu_1708_p2;
wire   [0:0] icmp_ln143_1_fu_1714_p2;
wire   [0:0] icmp_ln143_2_fu_1720_p2;
wire   [0:0] icmp_ln143_3_fu_1726_p2;
wire   [0:0] or_ln143_1_fu_1738_p2;
wire   [0:0] or_ln143_fu_1732_p2;
reg    grp_fu_901_ap_start;
wire    grp_fu_901_ap_done;
reg    grp_fu_913_ap_start;
wire    grp_fu_913_ap_done;
reg   [39:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 40'd1;
end

ivtv_yuv_window_setup_sdiv_32ns_32ns_32_36_seq_1 #(
    .ID( 1 ),
    .NUM_STAGE( 36 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
ivtv_yuv_window_setup_sdiv_32ns_32ns_32_36_seq_1_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_901_ap_start),
    .done(grp_fu_901_ap_done),
    .din0(grp_fu_901_p0),
    .din1(ap_phi_mux_empty_5_phi_fu_407_p6),
    .ce(1'b1),
    .dout(grp_fu_901_p2)
);

ivtv_yuv_window_setup_sdiv_32ns_32ns_32_36_seq_1 #(
    .ID( 1 ),
    .NUM_STAGE( 36 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
ivtv_yuv_window_setup_sdiv_32ns_32ns_32_36_seq_1_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_913_ap_start),
    .done(grp_fu_913_ap_done),
    .din0(grp_fu_913_p0),
    .din1(select_ln37_3_fu_721_p3),
    .ce(1'b1),
    .dout(grp_fu_913_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (select_ln45_fu_777_p3 == 1'd0)) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (select_ln45_fu_777_p3 == 1'd1) & (icmp_ln50_fu_802_p2 == 1'd0)))) begin
        empty_4_reg_390 <= f_src_h_i;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (icmp_ln50_fu_802_p2 == 1'd1) & (select_ln45_fu_777_p3 == 1'd1))) begin
        empty_4_reg_390 <= shl_ln50_fu_789_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (select_ln45_fu_777_p3 == 1'd0)) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (select_ln45_fu_777_p3 == 1'd1) & (icmp_ln50_fu_802_p2 == 1'd0)))) begin
        empty_5_reg_404 <= f_dst_h_i;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (icmp_ln50_fu_802_p2 == 1'd1) & (select_ln45_fu_777_p3 == 1'd1))) begin
        empty_5_reg_404 <= sext_ln55_1_fu_848_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (select_ln45_fu_777_p3 == 1'd0)) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (select_ln45_fu_777_p3 == 1'd1) & (icmp_ln50_fu_802_p2 == 1'd0)))) begin
        empty_reg_378 <= zext_ln33_fu_621_p1;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (icmp_ln50_fu_802_p2 == 1'd1) & (select_ln45_fu_777_p3 == 1'd1))) begin
        empty_reg_378 <= add_ln52_fu_822_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (or_ln60_2_fu_889_p2 == 1'd1))) begin
        f_dst_h_new_2_reg_560 <= ap_phi_mux_empty_5_phi_fu_407_p6;
    end else if ((((1'b1 == ap_CS_fsm_state39) & (or_ln143_2_fu_1744_p2 == 1'd1)) | ((1'b1 == ap_CS_fsm_state39) & ((((((((((icmp_ln155_7_fu_1790_p2 == 1'd0) & (or_ln143_2_fu_1744_p2 == 1'd0)) | ((icmp_ln155_8_fu_1796_p2 == 1'd0) & (or_ln143_2_fu_1744_p2 == 1'd0))) | ((icmp_ln155_6_fu_1784_p2 == 1'd0) & (or_ln143_2_fu_1744_p2 == 1'd0))) | ((icmp_ln155_5_fu_1779_p2 == 1'd0) & (or_ln143_2_fu_1744_p2 == 1'd0))) | ((icmp_ln155_4_fu_1774_p2 == 1'd0) & (or_ln143_2_fu_1744_p2 == 1'd0))) | ((icmp_ln155_3_fu_1768_p2 == 1'd0) & (or_ln143_2_fu_1744_p2 == 1'd0))) | ((icmp_ln155_2_fu_1762_p2 == 1'd0) & (or_ln143_2_fu_1744_p2 == 1'd0))) | ((icmp_ln155_1_fu_1756_p2 == 1'd0) & (or_ln143_2_fu_1744_p2 == 1'd0))) | ((icmp_ln155_fu_1750_p2 == 1'd0) & (or_ln143_2_fu_1744_p2 == 1'd0)))) | ((1'b1 == ap_CS_fsm_state39) & (icmp_ln155_8_fu_1796_p2 == 1'd1) & (icmp_ln155_7_fu_1790_p2 == 1'd1) & (icmp_ln155_6_fu_1784_p2 == 1'd1) & (icmp_ln155_5_fu_1779_p2 == 1'd1) & (icmp_ln155_4_fu_1774_p2 == 1'd1) & (icmp_ln155_3_fu_1768_p2 == 1'd1) & (icmp_ln155_2_fu_1762_p2 == 1'd1) & (icmp_ln155_1_fu_1756_p2 == 1'd1) & (icmp_ln155_fu_1750_p2 == 1'd1) & (or_ln143_2_fu_1744_p2 == 1'd0)))) begin
        f_dst_h_new_2_reg_560 <= select_ln136_2_fu_1700_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (or_ln60_2_fu_889_p2 == 1'd1))) begin
        f_dst_w_new_2_reg_513 <= select_ln37_3_fu_721_p3;
    end else if ((((1'b1 == ap_CS_fsm_state39) & (or_ln143_2_fu_1744_p2 == 1'd1)) | ((1'b1 == ap_CS_fsm_state39) & ((((((((((icmp_ln155_7_fu_1790_p2 == 1'd0) & (or_ln143_2_fu_1744_p2 == 1'd0)) | ((icmp_ln155_8_fu_1796_p2 == 1'd0) & (or_ln143_2_fu_1744_p2 == 1'd0))) | ((icmp_ln155_6_fu_1784_p2 == 1'd0) & (or_ln143_2_fu_1744_p2 == 1'd0))) | ((icmp_ln155_5_fu_1779_p2 == 1'd0) & (or_ln143_2_fu_1744_p2 == 1'd0))) | ((icmp_ln155_4_fu_1774_p2 == 1'd0) & (or_ln143_2_fu_1744_p2 == 1'd0))) | ((icmp_ln155_3_fu_1768_p2 == 1'd0) & (or_ln143_2_fu_1744_p2 == 1'd0))) | ((icmp_ln155_2_fu_1762_p2 == 1'd0) & (or_ln143_2_fu_1744_p2 == 1'd0))) | ((icmp_ln155_1_fu_1756_p2 == 1'd0) & (or_ln143_2_fu_1744_p2 == 1'd0))) | ((icmp_ln155_fu_1750_p2 == 1'd0) & (or_ln143_2_fu_1744_p2 == 1'd0)))) | ((1'b1 == ap_CS_fsm_state39) & (icmp_ln155_8_fu_1796_p2 == 1'd1) & (icmp_ln155_7_fu_1790_p2 == 1'd1) & (icmp_ln155_6_fu_1784_p2 == 1'd1) & (icmp_ln155_5_fu_1779_p2 == 1'd1) & (icmp_ln155_4_fu_1774_p2 == 1'd1) & (icmp_ln155_3_fu_1768_p2 == 1'd1) & (icmp_ln155_2_fu_1762_p2 == 1'd1) & (icmp_ln155_1_fu_1756_p2 == 1'd1) & (icmp_ln155_fu_1750_p2 == 1'd1) & (or_ln143_2_fu_1744_p2 == 1'd0)))) begin
        f_dst_w_new_2_reg_513 <= select_ln131_2_fu_1623_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (or_ln60_2_fu_889_p2 == 1'd1))) begin
        f_src_h_flag_2_reg_527 <= ap_phi_mux_f_src_h_flag_0_phi_fu_366_p6;
    end else if ((((1'b1 == ap_CS_fsm_state39) & (or_ln143_2_fu_1744_p2 == 1'd1)) | ((1'b1 == ap_CS_fsm_state39) & ((((((((((icmp_ln155_7_fu_1790_p2 == 1'd0) & (or_ln143_2_fu_1744_p2 == 1'd0)) | ((icmp_ln155_8_fu_1796_p2 == 1'd0) & (or_ln143_2_fu_1744_p2 == 1'd0))) | ((icmp_ln155_6_fu_1784_p2 == 1'd0) & (or_ln143_2_fu_1744_p2 == 1'd0))) | ((icmp_ln155_5_fu_1779_p2 == 1'd0) & (or_ln143_2_fu_1744_p2 == 1'd0))) | ((icmp_ln155_4_fu_1774_p2 == 1'd0) & (or_ln143_2_fu_1744_p2 == 1'd0))) | ((icmp_ln155_3_fu_1768_p2 == 1'd0) & (or_ln143_2_fu_1744_p2 == 1'd0))) | ((icmp_ln155_2_fu_1762_p2 == 1'd0) & (or_ln143_2_fu_1744_p2 == 1'd0))) | ((icmp_ln155_1_fu_1756_p2 == 1'd0) & (or_ln143_2_fu_1744_p2 == 1'd0))) | ((icmp_ln155_fu_1750_p2 == 1'd0) & (or_ln143_2_fu_1744_p2 == 1'd0)))) | ((1'b1 == ap_CS_fsm_state39) & (icmp_ln155_8_fu_1796_p2 == 1'd1) & (icmp_ln155_7_fu_1790_p2 == 1'd1) & (icmp_ln155_6_fu_1784_p2 == 1'd1) & (icmp_ln155_5_fu_1779_p2 == 1'd1) & (icmp_ln155_4_fu_1774_p2 == 1'd1) & (icmp_ln155_3_fu_1768_p2 == 1'd1) & (icmp_ln155_2_fu_1762_p2 == 1'd1) & (icmp_ln155_1_fu_1756_p2 == 1'd1) & (icmp_ln155_fu_1750_p2 == 1'd1) & (or_ln143_2_fu_1744_p2 == 1'd0)))) begin
        f_src_h_flag_2_reg_527 <= 1'd1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (or_ln60_2_fu_889_p2 == 1'd1))) begin
        f_src_h_new_2_reg_545 <= ap_phi_mux_empty_4_phi_fu_393_p6;
    end else if ((((1'b1 == ap_CS_fsm_state39) & (or_ln143_2_fu_1744_p2 == 1'd1)) | ((1'b1 == ap_CS_fsm_state39) & ((((((((((icmp_ln155_7_fu_1790_p2 == 1'd0) & (or_ln143_2_fu_1744_p2 == 1'd0)) | ((icmp_ln155_8_fu_1796_p2 == 1'd0) & (or_ln143_2_fu_1744_p2 == 1'd0))) | ((icmp_ln155_6_fu_1784_p2 == 1'd0) & (or_ln143_2_fu_1744_p2 == 1'd0))) | ((icmp_ln155_5_fu_1779_p2 == 1'd0) & (or_ln143_2_fu_1744_p2 == 1'd0))) | ((icmp_ln155_4_fu_1774_p2 == 1'd0) & (or_ln143_2_fu_1744_p2 == 1'd0))) | ((icmp_ln155_3_fu_1768_p2 == 1'd0) & (or_ln143_2_fu_1744_p2 == 1'd0))) | ((icmp_ln155_2_fu_1762_p2 == 1'd0) & (or_ln143_2_fu_1744_p2 == 1'd0))) | ((icmp_ln155_1_fu_1756_p2 == 1'd0) & (or_ln143_2_fu_1744_p2 == 1'd0))) | ((icmp_ln155_fu_1750_p2 == 1'd0) & (or_ln143_2_fu_1744_p2 == 1'd0)))) | ((1'b1 == ap_CS_fsm_state39) & (icmp_ln155_8_fu_1796_p2 == 1'd1) & (icmp_ln155_7_fu_1790_p2 == 1'd1) & (icmp_ln155_6_fu_1784_p2 == 1'd1) & (icmp_ln155_5_fu_1779_p2 == 1'd1) & (icmp_ln155_4_fu_1774_p2 == 1'd1) & (icmp_ln155_3_fu_1768_p2 == 1'd1) & (icmp_ln155_2_fu_1762_p2 == 1'd1) & (icmp_ln155_1_fu_1756_p2 == 1'd1) & (icmp_ln155_fu_1750_p2 == 1'd1) & (or_ln143_2_fu_1744_p2 == 1'd0)))) begin
        f_src_h_new_2_reg_545 <= select_ln136_1_fu_1694_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (or_ln60_2_fu_889_p2 == 1'd1))) begin
        f_src_w_flag_2_reg_482 <= icmp_ln37_fu_643_p2;
    end else if ((((1'b1 == ap_CS_fsm_state39) & (or_ln143_2_fu_1744_p2 == 1'd1)) | ((1'b1 == ap_CS_fsm_state39) & ((((((((((icmp_ln155_7_fu_1790_p2 == 1'd0) & (or_ln143_2_fu_1744_p2 == 1'd0)) | ((icmp_ln155_8_fu_1796_p2 == 1'd0) & (or_ln143_2_fu_1744_p2 == 1'd0))) | ((icmp_ln155_6_fu_1784_p2 == 1'd0) & (or_ln143_2_fu_1744_p2 == 1'd0))) | ((icmp_ln155_5_fu_1779_p2 == 1'd0) & (or_ln143_2_fu_1744_p2 == 1'd0))) | ((icmp_ln155_4_fu_1774_p2 == 1'd0) & (or_ln143_2_fu_1744_p2 == 1'd0))) | ((icmp_ln155_3_fu_1768_p2 == 1'd0) & (or_ln143_2_fu_1744_p2 == 1'd0))) | ((icmp_ln155_2_fu_1762_p2 == 1'd0) & (or_ln143_2_fu_1744_p2 == 1'd0))) | ((icmp_ln155_1_fu_1756_p2 == 1'd0) & (or_ln143_2_fu_1744_p2 == 1'd0))) | ((icmp_ln155_fu_1750_p2 == 1'd0) & (or_ln143_2_fu_1744_p2 == 1'd0)))) | ((1'b1 == ap_CS_fsm_state39) & (icmp_ln155_8_fu_1796_p2 == 1'd1) & (icmp_ln155_7_fu_1790_p2 == 1'd1) & (icmp_ln155_6_fu_1784_p2 == 1'd1) & (icmp_ln155_5_fu_1779_p2 == 1'd1) & (icmp_ln155_4_fu_1774_p2 == 1'd1) & (icmp_ln155_3_fu_1768_p2 == 1'd1) & (icmp_ln155_2_fu_1762_p2 == 1'd1) & (icmp_ln155_1_fu_1756_p2 == 1'd1) & (icmp_ln155_fu_1750_p2 == 1'd1) & (or_ln143_2_fu_1744_p2 == 1'd0)))) begin
        f_src_w_flag_2_reg_482 <= 1'd1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (or_ln60_2_fu_889_p2 == 1'd1))) begin
                f_src_w_new_2_reg_499[31 : 1] <= shl_ln37_fu_631_p2[31 : 1];
    end else if ((((1'b1 == ap_CS_fsm_state39) & (or_ln143_2_fu_1744_p2 == 1'd1)) | ((1'b1 == ap_CS_fsm_state39) & ((((((((((icmp_ln155_7_fu_1790_p2 == 1'd0) & (or_ln143_2_fu_1744_p2 == 1'd0)) | ((icmp_ln155_8_fu_1796_p2 == 1'd0) & (or_ln143_2_fu_1744_p2 == 1'd0))) | ((icmp_ln155_6_fu_1784_p2 == 1'd0) & (or_ln143_2_fu_1744_p2 == 1'd0))) | ((icmp_ln155_5_fu_1779_p2 == 1'd0) & (or_ln143_2_fu_1744_p2 == 1'd0))) | ((icmp_ln155_4_fu_1774_p2 == 1'd0) & (or_ln143_2_fu_1744_p2 == 1'd0))) | ((icmp_ln155_3_fu_1768_p2 == 1'd0) & (or_ln143_2_fu_1744_p2 == 1'd0))) | ((icmp_ln155_2_fu_1762_p2 == 1'd0) & (or_ln143_2_fu_1744_p2 == 1'd0))) | ((icmp_ln155_1_fu_1756_p2 == 1'd0) & (or_ln143_2_fu_1744_p2 == 1'd0))) | ((icmp_ln155_fu_1750_p2 == 1'd0) & (or_ln143_2_fu_1744_p2 == 1'd0)))) | ((1'b1 == ap_CS_fsm_state39) & (icmp_ln155_8_fu_1796_p2 == 1'd1) & (icmp_ln155_7_fu_1790_p2 == 1'd1) & (icmp_ln155_6_fu_1784_p2 == 1'd1) & (icmp_ln155_5_fu_1779_p2 == 1'd1) & (icmp_ln155_4_fu_1774_p2 == 1'd1) & (icmp_ln155_3_fu_1768_p2 == 1'd1) & (icmp_ln155_2_fu_1762_p2 == 1'd1) & (icmp_ln155_1_fu_1756_p2 == 1'd1) & (icmp_ln155_fu_1750_p2 == 1'd1) & (or_ln143_2_fu_1744_p2 == 1'd0)))) begin
                f_src_w_new_2_reg_499[31 : 1] <= select_ln131_1_fu_1617_p3[31 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (or_ln60_2_fu_889_p2 == 1'd1))) begin
        f_src_x_flag_2_reg_418 <= or_ln37_fu_691_p2;
    end else if ((((1'b1 == ap_CS_fsm_state39) & (or_ln143_2_fu_1744_p2 == 1'd1)) | ((1'b1 == ap_CS_fsm_state39) & ((((((((((icmp_ln155_7_fu_1790_p2 == 1'd0) & (or_ln143_2_fu_1744_p2 == 1'd0)) | ((icmp_ln155_8_fu_1796_p2 == 1'd0) & (or_ln143_2_fu_1744_p2 == 1'd0))) | ((icmp_ln155_6_fu_1784_p2 == 1'd0) & (or_ln143_2_fu_1744_p2 == 1'd0))) | ((icmp_ln155_5_fu_1779_p2 == 1'd0) & (or_ln143_2_fu_1744_p2 == 1'd0))) | ((icmp_ln155_4_fu_1774_p2 == 1'd0) & (or_ln143_2_fu_1744_p2 == 1'd0))) | ((icmp_ln155_3_fu_1768_p2 == 1'd0) & (or_ln143_2_fu_1744_p2 == 1'd0))) | ((icmp_ln155_2_fu_1762_p2 == 1'd0) & (or_ln143_2_fu_1744_p2 == 1'd0))) | ((icmp_ln155_1_fu_1756_p2 == 1'd0) & (or_ln143_2_fu_1744_p2 == 1'd0))) | ((icmp_ln155_fu_1750_p2 == 1'd0) & (or_ln143_2_fu_1744_p2 == 1'd0)))) | ((1'b1 == ap_CS_fsm_state39) & (icmp_ln155_8_fu_1796_p2 == 1'd1) & (icmp_ln155_7_fu_1790_p2 == 1'd1) & (icmp_ln155_6_fu_1784_p2 == 1'd1) & (icmp_ln155_5_fu_1779_p2 == 1'd1) & (icmp_ln155_4_fu_1774_p2 == 1'd1) & (icmp_ln155_3_fu_1768_p2 == 1'd1) & (icmp_ln155_2_fu_1762_p2 == 1'd1) & (icmp_ln155_1_fu_1756_p2 == 1'd1) & (icmp_ln155_fu_1750_p2 == 1'd1) & (or_ln143_2_fu_1744_p2 == 1'd0)))) begin
        f_src_x_flag_2_reg_418 <= 1'd1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (or_ln60_2_fu_889_p2 == 1'd1))) begin
        f_src_x_new_2_reg_435 <= select_ln37_fu_697_p3;
    end else if ((((1'b1 == ap_CS_fsm_state39) & (or_ln143_2_fu_1744_p2 == 1'd1)) | ((1'b1 == ap_CS_fsm_state39) & ((((((((((icmp_ln155_7_fu_1790_p2 == 1'd0) & (or_ln143_2_fu_1744_p2 == 1'd0)) | ((icmp_ln155_8_fu_1796_p2 == 1'd0) & (or_ln143_2_fu_1744_p2 == 1'd0))) | ((icmp_ln155_6_fu_1784_p2 == 1'd0) & (or_ln143_2_fu_1744_p2 == 1'd0))) | ((icmp_ln155_5_fu_1779_p2 == 1'd0) & (or_ln143_2_fu_1744_p2 == 1'd0))) | ((icmp_ln155_4_fu_1774_p2 == 1'd0) & (or_ln143_2_fu_1744_p2 == 1'd0))) | ((icmp_ln155_3_fu_1768_p2 == 1'd0) & (or_ln143_2_fu_1744_p2 == 1'd0))) | ((icmp_ln155_2_fu_1762_p2 == 1'd0) & (or_ln143_2_fu_1744_p2 == 1'd0))) | ((icmp_ln155_1_fu_1756_p2 == 1'd0) & (or_ln143_2_fu_1744_p2 == 1'd0))) | ((icmp_ln155_fu_1750_p2 == 1'd0) & (or_ln143_2_fu_1744_p2 == 1'd0)))) | ((1'b1 == ap_CS_fsm_state39) & (icmp_ln155_8_fu_1796_p2 == 1'd1) & (icmp_ln155_7_fu_1790_p2 == 1'd1) & (icmp_ln155_6_fu_1784_p2 == 1'd1) & (icmp_ln155_5_fu_1779_p2 == 1'd1) & (icmp_ln155_4_fu_1774_p2 == 1'd1) & (icmp_ln155_3_fu_1768_p2 == 1'd1) & (icmp_ln155_2_fu_1762_p2 == 1'd1) & (icmp_ln155_1_fu_1756_p2 == 1'd1) & (icmp_ln155_fu_1750_p2 == 1'd1) & (or_ln143_2_fu_1744_p2 == 1'd0)))) begin
        f_src_x_new_2_reg_435 <= and_ln2_fu_1525_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (or_ln60_2_fu_889_p2 == 1'd1))) begin
        f_src_y_flag_2_reg_449 <= ap_phi_mux_f_src_y_flag_1_phi_fu_339_p6;
    end else if ((((1'b1 == ap_CS_fsm_state39) & (or_ln143_2_fu_1744_p2 == 1'd1)) | ((1'b1 == ap_CS_fsm_state39) & ((((((((((icmp_ln155_7_fu_1790_p2 == 1'd0) & (or_ln143_2_fu_1744_p2 == 1'd0)) | ((icmp_ln155_8_fu_1796_p2 == 1'd0) & (or_ln143_2_fu_1744_p2 == 1'd0))) | ((icmp_ln155_6_fu_1784_p2 == 1'd0) & (or_ln143_2_fu_1744_p2 == 1'd0))) | ((icmp_ln155_5_fu_1779_p2 == 1'd0) & (or_ln143_2_fu_1744_p2 == 1'd0))) | ((icmp_ln155_4_fu_1774_p2 == 1'd0) & (or_ln143_2_fu_1744_p2 == 1'd0))) | ((icmp_ln155_3_fu_1768_p2 == 1'd0) & (or_ln143_2_fu_1744_p2 == 1'd0))) | ((icmp_ln155_2_fu_1762_p2 == 1'd0) & (or_ln143_2_fu_1744_p2 == 1'd0))) | ((icmp_ln155_1_fu_1756_p2 == 1'd0) & (or_ln143_2_fu_1744_p2 == 1'd0))) | ((icmp_ln155_fu_1750_p2 == 1'd0) & (or_ln143_2_fu_1744_p2 == 1'd0)))) | ((1'b1 == ap_CS_fsm_state39) & (icmp_ln155_8_fu_1796_p2 == 1'd1) & (icmp_ln155_7_fu_1790_p2 == 1'd1) & (icmp_ln155_6_fu_1784_p2 == 1'd1) & (icmp_ln155_5_fu_1779_p2 == 1'd1) & (icmp_ln155_4_fu_1774_p2 == 1'd1) & (icmp_ln155_3_fu_1768_p2 == 1'd1) & (icmp_ln155_2_fu_1762_p2 == 1'd1) & (icmp_ln155_1_fu_1756_p2 == 1'd1) & (icmp_ln155_fu_1750_p2 == 1'd1) & (or_ln143_2_fu_1744_p2 == 1'd0)))) begin
        f_src_y_flag_2_reg_449 <= 1'd1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (or_ln60_2_fu_889_p2 == 1'd1))) begin
        f_src_y_new_2_reg_467 <= ap_phi_mux_f_src_y_new_1_phi_fu_352_p6;
    end else if ((((1'b1 == ap_CS_fsm_state39) & (or_ln143_2_fu_1744_p2 == 1'd1)) | ((1'b1 == ap_CS_fsm_state39) & ((((((((((icmp_ln155_7_fu_1790_p2 == 1'd0) & (or_ln143_2_fu_1744_p2 == 1'd0)) | ((icmp_ln155_8_fu_1796_p2 == 1'd0) & (or_ln143_2_fu_1744_p2 == 1'd0))) | ((icmp_ln155_6_fu_1784_p2 == 1'd0) & (or_ln143_2_fu_1744_p2 == 1'd0))) | ((icmp_ln155_5_fu_1779_p2 == 1'd0) & (or_ln143_2_fu_1744_p2 == 1'd0))) | ((icmp_ln155_4_fu_1774_p2 == 1'd0) & (or_ln143_2_fu_1744_p2 == 1'd0))) | ((icmp_ln155_3_fu_1768_p2 == 1'd0) & (or_ln143_2_fu_1744_p2 == 1'd0))) | ((icmp_ln155_2_fu_1762_p2 == 1'd0) & (or_ln143_2_fu_1744_p2 == 1'd0))) | ((icmp_ln155_1_fu_1756_p2 == 1'd0) & (or_ln143_2_fu_1744_p2 == 1'd0))) | ((icmp_ln155_fu_1750_p2 == 1'd0) & (or_ln143_2_fu_1744_p2 == 1'd0)))) | ((1'b1 == ap_CS_fsm_state39) & (icmp_ln155_8_fu_1796_p2 == 1'd1) & (icmp_ln155_7_fu_1790_p2 == 1'd1) & (icmp_ln155_6_fu_1784_p2 == 1'd1) & (icmp_ln155_5_fu_1779_p2 == 1'd1) & (icmp_ln155_4_fu_1774_p2 == 1'd1) & (icmp_ln155_3_fu_1768_p2 == 1'd1) & (icmp_ln155_2_fu_1762_p2 == 1'd1) & (icmp_ln155_1_fu_1756_p2 == 1'd1) & (icmp_ln155_fu_1750_p2 == 1'd1) & (or_ln143_2_fu_1744_p2 == 1'd0)))) begin
        f_src_y_new_2_reg_467 <= and_ln6_fu_1547_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        and_ln3_reg_1989[31 : 1] <= and_ln3_fu_1356_p3[31 : 1];
        and_ln7_reg_1999[31 : 1] <= and_ln7_fu_1394_p3[31 : 1];
        and_ln8_reg_2020[31 : 2] <= and_ln8_fu_1436_p3[31 : 2];
        and_ln9_reg_2046[31 : 2] <= and_ln9_fu_1494_p3[31 : 2];
        tmp_13_reg_1994 <= {{select_ln68_1_fu_1247_p3[31:1]}};
        tmp_15_reg_2004 <= add_ln113_fu_1330_p2[32'd31];
        tmp_16_reg_2010 <= {{sub_ln131_fu_1410_p2[31:2]}};
        tmp_17_reg_2015 <= {{add_ln113_fu_1330_p2[31:2]}};
        tmp_18_reg_2025 <= {{sub_ln133_fu_1444_p2[31:2]}};
        tmp_19_reg_2030 <= add_ln122_fu_1368_p2[32'd31];
        tmp_20_reg_2036 <= {{sub_ln136_fu_1468_p2[31:2]}};
        tmp_21_reg_2041 <= {{add_ln122_fu_1368_p2[31:2]}};
        tmp_22_reg_2051 <= {{sub_ln138_fu_1502_p2[31:2]}};
        tmp_8_reg_1984 <= {{select_ln86_1_fu_1294_p3[31:1]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        icmp_ln68_reg_1877 <= icmp_ln68_fu_925_p2;
        icmp_ln78_reg_1899 <= icmp_ln78_fu_971_p2;
        icmp_ln86_reg_1916 <= icmp_ln86_fu_983_p2;
        icmp_ln96_reg_1933 <= icmp_ln96_fu_1027_p2;
        osd_crop_2_reg_1872 <= osd_crop_2_fu_919_p2;
        osd_crop_3_reg_1893 <= osd_crop_3_fu_965_p2;
        osd_crop_4_reg_1911 <= osd_crop_4_fu_977_p2;
        osd_crop_5_reg_1927 <= osd_crop_5_fu_1021_p2;
        osd_scale_1_reg_1905 <= grp_fu_913_p2;
        osd_scale_reg_1861 <= grp_fu_901_p2;
        select_ln102_1_reg_1949 <= select_ln102_1_fu_1128_p3;
        select_ln68_3_reg_1883 <= select_ln68_3_fu_951_p3;
        select_ln86_3_reg_1922 <= select_ln86_3_fu_1008_p3;
        tmp_10_reg_1944 <= {{select_ln68_3_fu_951_p3[31:1]}};
        tmp_5_reg_1939 <= {{select_ln86_3_fu_1008_p3[31:1]}};
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        select_ln37_1_reg_1822 <= select_ln37_1_fu_705_p3;
        select_ln37_2_reg_1828 <= select_ln37_2_fu_713_p3;
        select_ln37_3_reg_1834 <= select_ln37_3_fu_721_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        select_ln78_1_reg_1979 <= select_ln78_1_fu_1226_p3;
        select_ln96_1_reg_1974 <= select_ln96_1_fu_1210_p3;
        trunc_ln6_reg_1954 <= {{mul_ln70_fu_1136_p2[31:16]}};
        trunc_ln9_reg_1964 <= {{mul_ln88_fu_1168_p2[31:16]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state37) & (icmp_ln78_reg_1899 == 1'd1))) begin
        trunc_ln8_reg_1959 <= {{mul_ln81_fu_1154_p2[31:16]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state37) & (icmp_ln96_reg_1933 == 1'd1))) begin
        trunc_ln_reg_1969 <= {{mul_ln99_fu_1186_p2[31:16]}};
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state1) & (select_ln45_fu_777_p3 == 1'd0)) | ((1'b1 == ap_CS_fsm_state1) & (select_ln45_fu_777_p3 == 1'd1) & (icmp_ln50_fu_802_p2 == 1'd0)))) begin
        ap_phi_mux_empty_4_phi_fu_393_p6 = f_src_h_i;
    end else if (((1'b1 == ap_CS_fsm_state1) & (icmp_ln50_fu_802_p2 == 1'd1) & (select_ln45_fu_777_p3 == 1'd1))) begin
        ap_phi_mux_empty_4_phi_fu_393_p6 = shl_ln50_fu_789_p2;
    end else begin
        ap_phi_mux_empty_4_phi_fu_393_p6 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state1) & (select_ln45_fu_777_p3 == 1'd0)) | ((1'b1 == ap_CS_fsm_state1) & (select_ln45_fu_777_p3 == 1'd1) & (icmp_ln50_fu_802_p2 == 1'd0)))) begin
        ap_phi_mux_empty_5_phi_fu_407_p6 = f_dst_h_i;
    end else if (((1'b1 == ap_CS_fsm_state1) & (icmp_ln50_fu_802_p2 == 1'd1) & (select_ln45_fu_777_p3 == 1'd1))) begin
        ap_phi_mux_empty_5_phi_fu_407_p6 = sext_ln55_1_fu_848_p1;
    end else begin
        ap_phi_mux_empty_5_phi_fu_407_p6 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state1) & (select_ln45_fu_777_p3 == 1'd0)) | ((1'b1 == ap_CS_fsm_state1) & (select_ln45_fu_777_p3 == 1'd1) & (icmp_ln50_fu_802_p2 == 1'd0)))) begin
        ap_phi_mux_f_src_h_flag_0_phi_fu_366_p6 = 1'd0;
    end else if (((1'b1 == ap_CS_fsm_state1) & (icmp_ln50_fu_802_p2 == 1'd1) & (select_ln45_fu_777_p3 == 1'd1))) begin
        ap_phi_mux_f_src_h_flag_0_phi_fu_366_p6 = 1'd1;
    end else begin
        ap_phi_mux_f_src_h_flag_0_phi_fu_366_p6 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state1) & (select_ln45_fu_777_p3 == 1'd0)) | ((1'b1 == ap_CS_fsm_state1) & (select_ln45_fu_777_p3 == 1'd1) & (icmp_ln50_fu_802_p2 == 1'd0)))) begin
        ap_phi_mux_f_src_y_flag_1_phi_fu_339_p6 = f_src_y_i[32'd31];
    end else if (((1'b1 == ap_CS_fsm_state1) & (icmp_ln50_fu_802_p2 == 1'd1) & (select_ln45_fu_777_p3 == 1'd1))) begin
        ap_phi_mux_f_src_y_flag_1_phi_fu_339_p6 = 1'd1;
    end else begin
        ap_phi_mux_f_src_y_flag_1_phi_fu_339_p6 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state1) & (select_ln45_fu_777_p3 == 1'd0)) | ((1'b1 == ap_CS_fsm_state1) & (select_ln45_fu_777_p3 == 1'd1) & (icmp_ln50_fu_802_p2 == 1'd0)))) begin
        ap_phi_mux_f_src_y_new_1_phi_fu_352_p6 = 32'd0;
    end else if (((1'b1 == ap_CS_fsm_state1) & (icmp_ln50_fu_802_p2 == 1'd1) & (select_ln45_fu_777_p3 == 1'd1))) begin
        ap_phi_mux_f_src_y_new_1_phi_fu_352_p6 = add_ln52_fu_822_p2;
    end else begin
        ap_phi_mux_f_src_y_new_1_phi_fu_352_p6 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state40) & (ap_phi_mux_f_src_h_flag_2_phi_fu_531_p8 == 1'd1))) begin
        f_dst_h_o = f_dst_h_new_2_reg_560;
    end else begin
        f_dst_h_o = f_dst_h_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state40) & (ap_phi_mux_f_src_h_flag_2_phi_fu_531_p8 == 1'd1))) begin
        f_dst_h_o_ap_vld = 1'b1;
    end else begin
        f_dst_h_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state40) & (ap_phi_mux_f_src_w_flag_2_phi_fu_486_p8 == 1'd1))) begin
        f_dst_w_o = f_dst_w_new_2_reg_513;
    end else begin
        f_dst_w_o = f_dst_w_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state40) & (ap_phi_mux_f_src_w_flag_2_phi_fu_486_p8 == 1'd1))) begin
        f_dst_w_o_ap_vld = 1'b1;
    end else begin
        f_dst_w_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        f_dst_x_o = and_ln1_fu_1089_p3;
    end else begin
        f_dst_x_o = f_dst_x_i;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        f_dst_x_o_ap_vld = 1'b1;
    end else begin
        f_dst_x_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        f_dst_y_o = and_ln5_fu_1539_p3;
    end else begin
        f_dst_y_o = f_dst_y_i;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        f_dst_y_o_ap_vld = 1'b1;
    end else begin
        f_dst_y_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (select_ln45_fu_777_p3 == 1'd1))) begin
        f_interlaced_y_o = 32'd1;
    end else begin
        f_interlaced_y_o = f_interlaced_y_i;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (select_ln45_fu_777_p3 == 1'd1))) begin
        f_interlaced_y_o_ap_vld = 1'b1;
    end else begin
        f_interlaced_y_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state40) & (ap_phi_mux_f_src_h_flag_2_phi_fu_531_p8 == 1'd1))) begin
        f_src_h_o = f_src_h_new_2_reg_545;
    end else begin
        f_src_h_o = f_src_h_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state40) & (ap_phi_mux_f_src_h_flag_2_phi_fu_531_p8 == 1'd1))) begin
        f_src_h_o_ap_vld = 1'b1;
    end else begin
        f_src_h_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state40) & (ap_phi_mux_f_src_w_flag_2_phi_fu_486_p8 == 1'd1))) begin
        f_src_w_o = f_src_w_new_2_reg_499;
    end else begin
        f_src_w_o = f_src_w_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state40) & (ap_phi_mux_f_src_w_flag_2_phi_fu_486_p8 == 1'd1))) begin
        f_src_w_o_ap_vld = 1'b1;
    end else begin
        f_src_w_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state40) & (ap_phi_mux_f_src_x_flag_2_phi_fu_422_p8 == 1'd1))) begin
        f_src_x_o = f_src_x_new_2_reg_435;
    end else begin
        f_src_x_o = f_src_x_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state40) & (ap_phi_mux_f_src_x_flag_2_phi_fu_422_p8 == 1'd1))) begin
        f_src_x_o_ap_vld = 1'b1;
    end else begin
        f_src_x_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state40) & (ap_phi_mux_f_src_y_flag_2_phi_fu_453_p8 == 1'd1))) begin
        f_src_y_o = f_src_y_new_2_reg_467;
    end else begin
        f_src_y_o = f_src_y_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state40) & (ap_phi_mux_f_src_y_flag_2_phi_fu_453_p8 == 1'd1))) begin
        f_src_y_o_ap_vld = 1'b1;
    end else begin
        f_src_y_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (or_ln60_2_fu_889_p2 == 1'd0))) begin
        grp_fu_901_ap_start = 1'b1;
    end else begin
        grp_fu_901_ap_start = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (or_ln60_2_fu_889_p2 == 1'd0))) begin
        grp_fu_913_ap_start = 1'b1;
    end else begin
        grp_fu_913_ap_start = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (or_ln60_2_fu_889_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state40;
            end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (or_ln60_2_fu_889_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln104_fu_1039_p2 = (select_ln86_fu_1000_p3 + itv_yuv_info_osd_x_offset);

assign add_ln105_fu_1045_p2 = (select_ln68_fu_943_p3 + itv_yuv_info_osd_y_offset);

assign add_ln113_fu_1330_p2 = (select_ln96_fu_1319_p3 + zext_ln113_fu_1326_p1);

assign add_ln122_fu_1368_p2 = (select_ln78_fu_1274_p3 + zext_ln122_fu_1364_p1);

assign add_ln134_fu_1611_p2 = ($signed(zext_ln134_fu_1607_p1) + $signed(sext_ln133_fu_1599_p1));

assign add_ln139_fu_1688_p2 = ($signed(zext_ln139_fu_1684_p1) + $signed(sext_ln138_fu_1676_p1));

assign add_ln38_fu_663_p2 = (zext_ln31_fu_595_p1 + zext_ln38_fu_659_p1);

assign add_ln41_fu_681_p2 = ($signed(sext_ln41_fu_669_p1) + $signed(zext_ln41_fu_677_p1));

assign add_ln52_fu_822_p2 = (zext_ln33_fu_621_p1 + zext_ln52_fu_818_p1);

assign add_ln55_fu_842_p2 = ($signed(sext_ln55_fu_830_p1) + $signed(zext_ln55_fu_838_p1));

assign add_ln70_fu_1235_p2 = ($signed(sext_ln70_fu_1232_p1) + $signed(empty_reg_378));

assign add_ln78_fu_959_p2 = (select_ln68_fu_943_p3 + select_ln68_3_fu_951_p3);

assign add_ln88_fu_1284_p2 = ($signed(sext_ln88_fu_1281_p1) + $signed(select_ln37_1_reg_1822));

assign add_ln96_fu_1015_p2 = (select_ln86_fu_1000_p3 + select_ln86_3_fu_1008_p3);

assign and_ln1_fu_1089_p3 = {{select_ln102_fu_1081_p3}, {1'd0}};

assign and_ln2_fu_1525_p3 = {{tmp_8_reg_1984}, {1'd0}};

assign and_ln3_fu_1356_p3 = {{tmp_9_fu_1346_p4}, {1'd0}};

assign and_ln4_fu_1532_p3 = {{select_ln78_1_reg_1979}, {1'd0}};

assign and_ln5_fu_1539_p3 = {{select_ln102_1_reg_1949}, {1'd0}};

assign and_ln6_fu_1547_p3 = {{tmp_13_reg_1994}, {1'd0}};

assign and_ln7_fu_1394_p3 = {{tmp_14_fu_1384_p4}, {1'd0}};

assign and_ln8_fu_1436_p3 = {{tmp_17_fu_1426_p4}, {2'd0}};

assign and_ln9_fu_1494_p3 = {{tmp_21_fu_1484_p4}, {2'd0}};

assign and_ln_fu_1518_p3 = {{select_ln96_1_reg_1974}, {1'd0}};

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd39];

assign ap_phi_mux_f_src_h_flag_2_phi_fu_531_p8 = f_src_h_flag_2_reg_527;

assign ap_phi_mux_f_src_w_flag_2_phi_fu_486_p8 = f_src_w_flag_2_reg_482;

assign ap_phi_mux_f_src_x_flag_2_phi_fu_422_p8 = f_src_x_flag_2_reg_418;

assign ap_phi_mux_f_src_y_flag_2_phi_fu_453_p8 = f_src_y_flag_2_reg_449;

assign ap_return = 32'd0;

assign grp_fu_901_p0 = ap_phi_mux_empty_4_phi_fu_393_p6 << 32'd16;

assign grp_fu_913_p0 = select_ln37_2_fu_713_p3 << 32'd16;

assign icmp_ln102_fu_1033_p2 = ((itv_yuv_info_track_osd == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln131_fu_1577_p2 = (($signed(and_ln_fu_1518_p3) < $signed(sext_ln131_fu_1573_p1)) ? 1'b1 : 1'b0);

assign icmp_ln136_fu_1654_p2 = (($signed(and_ln4_fu_1532_p3) < $signed(sext_ln136_fu_1650_p1)) ? 1'b1 : 1'b0);

assign icmp_ln143_1_fu_1714_p2 = (($signed(select_ln136_2_fu_1700_p3) < $signed(32'd3)) ? 1'b1 : 1'b0);

assign icmp_ln143_2_fu_1720_p2 = (($signed(select_ln131_1_fu_1617_p3) < $signed(32'd3)) ? 1'b1 : 1'b0);

assign icmp_ln143_3_fu_1726_p2 = (($signed(select_ln136_1_fu_1694_p3) < $signed(32'd3)) ? 1'b1 : 1'b0);

assign icmp_ln143_fu_1708_p2 = (($signed(select_ln131_2_fu_1623_p3) < $signed(32'd3)) ? 1'b1 : 1'b0);

assign icmp_ln155_1_fu_1756_p2 = ((itv_yuv_info_old_frame_info_dst_h == select_ln136_2_fu_1700_p3) ? 1'b1 : 1'b0);

assign icmp_ln155_2_fu_1762_p2 = ((itv_yuv_info_old_frame_info_dst_y == and_ln5_fu_1539_p3) ? 1'b1 : 1'b0);

assign icmp_ln155_3_fu_1768_p2 = ((itv_yuv_info_old_frame_info_src_y == and_ln6_fu_1547_p3) ? 1'b1 : 1'b0);

assign icmp_ln155_4_fu_1774_p2 = ((itv_yuv_info_old_frame_info_pan_y == f_pan_y) ? 1'b1 : 1'b0);

assign icmp_ln155_5_fu_1779_p2 = ((itv_yuv_info_old_frame_info_vis_h == f_vis_h) ? 1'b1 : 1'b0);

assign icmp_ln155_6_fu_1784_p2 = ((itv_yuv_info_old_frame_info_lace_mode == f_lace_mode) ? 1'b1 : 1'b0);

assign icmp_ln155_7_fu_1790_p2 = ((itv_yuv_info_old_frame_info_interlaced_y == f_interlaced_y_i) ? 1'b1 : 1'b0);

assign icmp_ln155_8_fu_1796_p2 = ((itv_yuv_info_old_frame_info_interlaced_uv == f_interlaced_uv) ? 1'b1 : 1'b0);

assign icmp_ln155_fu_1750_p2 = ((itv_yuv_info_old_frame_info_src_h == select_ln136_1_fu_1694_p3) ? 1'b1 : 1'b0);

assign icmp_ln37_fu_643_p2 = (($signed(osd_crop_fu_637_p2) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln45_1_fu_765_p2 = (($signed(sext_ln45_1_fu_749_p1) < $signed(sext_ln45_fu_745_p1)) ? 1'b1 : 1'b0);

assign icmp_ln45_fu_753_p2 = (($signed(sext_ln45_fu_745_p1) < $signed(sext_ln45_1_fu_749_p1)) ? 1'b1 : 1'b0);

assign icmp_ln50_fu_802_p2 = (($signed(osd_crop_1_fu_796_p2) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln60_1_fu_859_p2 = (($signed(ap_phi_mux_empty_5_phi_fu_407_p6) < $signed(32'd3)) ? 1'b1 : 1'b0);

assign icmp_ln60_2_fu_865_p2 = (($signed(select_ln37_2_fu_713_p3) < $signed(32'd3)) ? 1'b1 : 1'b0);

assign icmp_ln60_3_fu_871_p2 = (($signed(ap_phi_mux_empty_4_phi_fu_393_p6) < $signed(32'd3)) ? 1'b1 : 1'b0);

assign icmp_ln60_fu_853_p2 = (($signed(select_ln37_3_fu_721_p3) < $signed(32'd3)) ? 1'b1 : 1'b0);

assign icmp_ln68_fu_925_p2 = (($signed(osd_crop_2_fu_919_p2) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln78_fu_971_p2 = (($signed(osd_crop_3_fu_965_p2) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln86_fu_983_p2 = (($signed(osd_crop_4_fu_977_p2) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln96_fu_1027_p2 = (($signed(osd_crop_5_fu_1021_p2) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign lshr_ln1_fu_808_p4 = {{osd_crop_1_fu_796_p2[31:1]}};

assign lshr_ln_fu_649_p4 = {{osd_crop_fu_637_p2[31:1]}};

assign mul_ln70_fu_1136_p2 = ($signed(osd_crop_2_reg_1872) * $signed(osd_scale_reg_1861));

assign mul_ln81_fu_1154_p2 = ($signed(osd_crop_3_reg_1893) * $signed(osd_scale_reg_1861));

assign mul_ln88_fu_1168_p2 = ($signed(osd_crop_4_reg_1911) * $signed(osd_scale_1_reg_1905));

assign mul_ln99_fu_1186_p2 = ($signed(osd_crop_5_reg_1927) * $signed(osd_scale_1_reg_1905));

assign or_ln143_1_fu_1738_p2 = (icmp_ln143_3_fu_1726_p2 | icmp_ln143_2_fu_1720_p2);

assign or_ln143_2_fu_1744_p2 = (or_ln143_fu_1732_p2 | or_ln143_1_fu_1738_p2);

assign or_ln143_fu_1732_p2 = (icmp_ln143_fu_1708_p2 | icmp_ln143_1_fu_1714_p2);

assign or_ln37_fu_691_p2 = (tmp_fu_579_p3 | icmp_ln37_fu_643_p2);

assign or_ln60_1_fu_883_p2 = (icmp_ln60_3_fu_871_p2 | icmp_ln60_2_fu_865_p2);

assign or_ln60_2_fu_889_p2 = (or_ln60_fu_877_p2 | or_ln60_1_fu_883_p2);

assign or_ln60_fu_877_p2 = (icmp_ln60_fu_853_p2 | icmp_ln60_1_fu_859_p2);

assign osd_crop_1_fu_796_p0 = f_src_h_i;

assign osd_crop_1_fu_796_p2 = ($signed(osd_crop_1_fu_796_p0) - $signed(shl_ln50_fu_789_p2));

assign osd_crop_2_fu_919_p2 = (f_pan_y - f_dst_y_i);

assign osd_crop_3_fu_965_p2 = (add_ln78_fu_959_p2 - f_vis_h);

assign osd_crop_4_fu_977_p2 = (f_pan_x - f_dst_x_i);

assign osd_crop_5_fu_1021_p2 = (add_ln96_fu_1015_p2 - f_vis_w);

assign osd_crop_fu_637_p2 = (f_src_w_i - shl_ln37_fu_631_p2);

assign select_ln102_1_fu_1128_p3 = ((icmp_ln102_fu_1033_p2[0:0] === 1'b1) ? tmp_11_fu_1108_p4 : tmp_12_fu_1118_p4);

assign select_ln102_fu_1081_p3 = ((icmp_ln102_fu_1033_p2[0:0] === 1'b1) ? tmp_6_fu_1061_p4 : tmp_7_fu_1071_p4);

assign select_ln131_1_fu_1617_p3 = ((icmp_ln131_fu_1577_p2[0:0] === 1'b1) ? and_ln8_reg_2020 : and_ln3_reg_1989);

assign select_ln131_2_fu_1623_p3 = ((icmp_ln131_fu_1577_p2[0:0] === 1'b1) ? add_ln134_fu_1611_p2 : and_ln_fu_1518_p3);

assign select_ln131_fu_1566_p3 = ((tmp_15_reg_2004[0:0] === 1'b1) ? sub_ln131_1_fu_1557_p2 : zext_ln131_1_fu_1563_p1);

assign select_ln133_fu_1592_p3 = ((tmp_15_reg_2004[0:0] === 1'b1) ? sub_ln133_1_fu_1586_p2 : zext_ln131_1_fu_1563_p1);

assign select_ln136_1_fu_1694_p3 = ((icmp_ln136_fu_1654_p2[0:0] === 1'b1) ? and_ln9_reg_2046 : and_ln7_reg_1999);

assign select_ln136_2_fu_1700_p3 = ((icmp_ln136_fu_1654_p2[0:0] === 1'b1) ? add_ln139_fu_1688_p2 : and_ln4_fu_1532_p3);

assign select_ln136_fu_1643_p3 = ((tmp_19_reg_2030[0:0] === 1'b1) ? sub_ln136_1_fu_1634_p2 : zext_ln136_1_fu_1640_p1);

assign select_ln138_fu_1669_p3 = ((tmp_19_reg_2030[0:0] === 1'b1) ? sub_ln138_1_fu_1663_p2 : zext_ln136_1_fu_1640_p1);

assign select_ln31_fu_587_p3 = ((tmp_fu_579_p3[0:0] === 1'b1) ? 31'd0 : trunc_ln31_fu_575_p1);

assign select_ln33_fu_613_p3 = ((tmp_1_fu_603_p3[0:0] === 1'b1) ? 31'd0 : trunc_ln33_fu_599_p1);

assign select_ln37_1_fu_705_p3 = ((icmp_ln37_fu_643_p2[0:0] === 1'b1) ? add_ln38_fu_663_p2 : zext_ln31_fu_595_p1);

assign select_ln37_2_fu_713_p3 = ((icmp_ln37_fu_643_p2[0:0] === 1'b1) ? shl_ln37_fu_631_p2 : f_src_w_i);

assign select_ln37_3_fu_721_p3 = ((icmp_ln37_fu_643_p2[0:0] === 1'b1) ? sext_ln41_1_fu_687_p1 : f_dst_w_i);

assign select_ln37_fu_697_p3 = ((icmp_ln37_fu_643_p2[0:0] === 1'b1) ? add_ln38_fu_663_p2 : 32'd0);

assign select_ln45_fu_777_p3 = ((tmp_2_fu_729_p3[0:0] === 1'b1) ? xor_ln45_fu_759_p2 : xor_ln45_1_fu_771_p2);

assign select_ln68_1_fu_1247_p3 = ((icmp_ln68_reg_1877[0:0] === 1'b1) ? add_ln70_fu_1235_p2 : empty_reg_378);

assign select_ln68_2_fu_1258_p3 = ((icmp_ln68_reg_1877[0:0] === 1'b1) ? sub_ln71_fu_1241_p2 : empty_4_reg_390);

assign select_ln68_3_fu_951_p3 = ((icmp_ln68_fu_925_p2[0:0] === 1'b1) ? sub_ln72_fu_931_p2 : empty_5_reg_404);

assign select_ln68_fu_943_p3 = ((icmp_ln68_fu_925_p2[0:0] === 1'b1) ? 32'd0 : sub_ln75_fu_937_p2);

assign select_ln78_1_fu_1226_p3 = ((icmp_ln78_reg_1899[0:0] === 1'b1) ? tmp_s_fu_1216_p4 : tmp_10_reg_1944);

assign select_ln78_fu_1274_p3 = ((icmp_ln78_reg_1899[0:0] === 1'b1) ? sub_ln81_fu_1268_p2 : select_ln68_2_fu_1258_p3);

assign select_ln86_1_fu_1294_p3 = ((icmp_ln86_reg_1916[0:0] === 1'b1) ? add_ln88_fu_1284_p2 : select_ln37_1_reg_1822);

assign select_ln86_2_fu_1304_p3 = ((icmp_ln86_reg_1916[0:0] === 1'b1) ? sub_ln89_fu_1289_p2 : select_ln37_2_reg_1828);

assign select_ln86_3_fu_1008_p3 = ((icmp_ln86_fu_983_p2[0:0] === 1'b1) ? sub_ln90_fu_989_p2 : select_ln37_3_reg_1834);

assign select_ln86_fu_1000_p3 = ((icmp_ln86_fu_983_p2[0:0] === 1'b1) ? 32'd0 : sub_ln93_fu_994_p2);

assign select_ln96_1_fu_1210_p3 = ((icmp_ln96_reg_1933[0:0] === 1'b1) ? tmp_4_fu_1200_p4 : tmp_5_reg_1939);

assign select_ln96_fu_1319_p3 = ((icmp_ln96_reg_1933[0:0] === 1'b1) ? sub_ln99_fu_1313_p2 : select_ln86_2_fu_1304_p3);

assign sext_ln131_fu_1573_p1 = $signed(select_ln131_fu_1566_p3);

assign sext_ln133_fu_1599_p1 = select_ln133_fu_1592_p3;

assign sext_ln136_fu_1650_p1 = $signed(select_ln136_fu_1643_p3);

assign sext_ln138_fu_1676_p1 = select_ln138_fu_1669_p3;

assign sext_ln41_1_fu_687_p1 = $signed(add_ln41_fu_681_p2);

assign sext_ln41_fu_669_p1 = $signed(trunc_ln37_fu_627_p1);

assign sext_ln45_1_fu_749_p0 = f_src_h_i;

assign sext_ln45_1_fu_749_p1 = sext_ln45_1_fu_749_p0;

assign sext_ln45_fu_745_p1 = $signed(tmp_3_fu_737_p3);

assign sext_ln55_1_fu_848_p1 = $signed(add_ln55_fu_842_p2);

assign sext_ln55_fu_830_p1 = $signed(trunc_ln50_fu_785_p1);

assign sext_ln70_fu_1232_p1 = $signed(trunc_ln6_reg_1954);

assign sext_ln81_fu_1265_p1 = $signed(trunc_ln8_reg_1959);

assign sext_ln88_fu_1281_p1 = $signed(trunc_ln9_reg_1964);

assign sext_ln99_fu_1310_p1 = $signed(trunc_ln_reg_1969);

assign shl_ln37_fu_631_p2 = f_dst_w_i << 32'd2;

assign shl_ln50_fu_789_p2 = f_dst_h_i << 32'd2;

assign sub_ln131_1_fu_1557_p2 = (31'd0 - zext_ln131_fu_1554_p1);

assign sub_ln131_fu_1410_p2 = (32'd0 - and_ln3_fu_1356_p3);

assign sub_ln133_1_fu_1586_p2 = (31'd0 - zext_ln133_fu_1583_p1);

assign sub_ln133_fu_1444_p2 = (32'd0 - and_ln8_fu_1436_p3);

assign sub_ln136_1_fu_1634_p2 = (31'd0 - zext_ln136_fu_1631_p1);

assign sub_ln136_fu_1468_p2 = (32'd0 - and_ln7_fu_1394_p3);

assign sub_ln138_1_fu_1663_p2 = (31'd0 - zext_ln138_fu_1660_p1);

assign sub_ln138_fu_1502_p2 = (32'd0 - and_ln9_fu_1494_p3);

assign sub_ln71_fu_1241_p2 = ($signed(empty_4_reg_390) - $signed(sext_ln70_fu_1232_p1));

assign sub_ln72_fu_931_p2 = ($signed(empty_5_reg_404) - $signed(osd_crop_2_fu_919_p2));

assign sub_ln75_fu_937_p2 = (f_dst_y_i - f_pan_y);

assign sub_ln80_fu_1150_p2 = ($signed(select_ln68_3_reg_1883) - $signed(osd_crop_3_reg_1893));

assign sub_ln81_fu_1268_p2 = ($signed(select_ln68_2_fu_1258_p3) - $signed(sext_ln81_fu_1265_p1));

assign sub_ln89_fu_1289_p2 = ($signed(select_ln37_2_reg_1828) - $signed(sext_ln88_fu_1281_p1));

assign sub_ln90_fu_989_p2 = ($signed(select_ln37_3_reg_1834) - $signed(osd_crop_4_fu_977_p2));

assign sub_ln93_fu_994_p2 = (f_dst_x_i - f_pan_x);

assign sub_ln98_fu_1182_p2 = ($signed(select_ln86_3_reg_1922) - $signed(osd_crop_5_reg_1927));

assign sub_ln99_fu_1313_p2 = ($signed(select_ln86_2_fu_1304_p3) - $signed(sext_ln99_fu_1310_p1));

assign tmp_11_fu_1108_p4 = {{select_ln68_fu_943_p3[31:1]}};

assign tmp_12_fu_1118_p4 = {{add_ln105_fu_1045_p2[31:1]}};

assign tmp_14_fu_1384_p4 = {{add_ln122_fu_1368_p2[31:1]}};

assign tmp_17_fu_1426_p4 = {{add_ln113_fu_1330_p2[31:2]}};

assign tmp_1_fu_603_p3 = f_src_y_i[32'd31];

assign tmp_21_fu_1484_p4 = {{add_ln122_fu_1368_p2[31:2]}};

assign tmp_2_fu_729_p3 = f_dst_h_i[32'd31];

assign tmp_3_fu_737_p3 = {{f_dst_h_i}, {1'd0}};

assign tmp_4_fu_1200_p4 = {{sub_ln98_fu_1182_p2[31:1]}};

assign tmp_6_fu_1061_p4 = {{select_ln86_fu_1000_p3[31:1]}};

assign tmp_7_fu_1071_p4 = {{add_ln104_fu_1039_p2[31:1]}};

assign tmp_9_fu_1346_p4 = {{add_ln113_fu_1330_p2[31:1]}};

assign tmp_fu_579_p3 = f_src_x_i[32'd31];

assign tmp_s_fu_1216_p4 = {{sub_ln80_fu_1150_p2[31:1]}};

assign trunc_ln133_fu_1603_p1 = select_ln133_fu_1592_p3[0:0];

assign trunc_ln138_fu_1680_p1 = select_ln138_fu_1669_p3[0:0];

assign trunc_ln31_fu_575_p1 = f_src_x_i[30:0];

assign trunc_ln33_fu_599_p1 = f_src_y_i[30:0];

assign trunc_ln37_fu_627_p1 = f_dst_w_i[29:0];

assign trunc_ln41_fu_673_p1 = f_dst_w_i[0:0];

assign trunc_ln50_fu_785_p1 = f_dst_h_i[29:0];

assign trunc_ln55_fu_834_p1 = f_dst_h_i[0:0];

assign trunc_ln68_fu_1254_p1 = select_ln68_1_fu_1247_p3[0:0];

assign trunc_ln86_fu_1300_p1 = select_ln86_1_fu_1294_p3[0:0];

assign xor_ln45_1_fu_771_p2 = (icmp_ln45_1_fu_765_p2 ^ 1'd1);

assign xor_ln45_fu_759_p2 = (icmp_ln45_fu_753_p2 ^ 1'd1);

assign zext_ln113_fu_1326_p1 = trunc_ln86_fu_1300_p1;

assign zext_ln122_fu_1364_p1 = trunc_ln68_fu_1254_p1;

assign zext_ln131_1_fu_1563_p1 = tmp_17_reg_2015;

assign zext_ln131_fu_1554_p1 = tmp_16_reg_2010;

assign zext_ln133_fu_1583_p1 = tmp_18_reg_2025;

assign zext_ln134_fu_1607_p1 = trunc_ln133_fu_1603_p1;

assign zext_ln136_1_fu_1640_p1 = tmp_21_reg_2041;

assign zext_ln136_fu_1631_p1 = tmp_20_reg_2036;

assign zext_ln138_fu_1660_p1 = tmp_22_reg_2051;

assign zext_ln139_fu_1684_p1 = trunc_ln138_fu_1680_p1;

assign zext_ln31_fu_595_p1 = select_ln31_fu_587_p3;

assign zext_ln33_fu_621_p1 = select_ln33_fu_613_p3;

assign zext_ln38_fu_659_p1 = lshr_ln_fu_649_p4;

assign zext_ln41_fu_677_p1 = trunc_ln41_fu_673_p1;

assign zext_ln52_fu_818_p1 = lshr_ln1_fu_808_p4;

assign zext_ln55_fu_838_p1 = trunc_ln55_fu_834_p1;

always @ (posedge ap_clk) begin
    and_ln3_reg_1989[0] <= 1'b0;
    and_ln7_reg_1999[0] <= 1'b0;
    and_ln8_reg_2020[1:0] <= 2'b00;
    and_ln9_reg_2046[1:0] <= 2'b00;
    f_src_w_new_2_reg_499[0] <= 1'b0;
end

endmodule //ivtv_yuv_window_setup
