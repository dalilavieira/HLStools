// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "calc_crc8.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic calc_crc8::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic calc_crc8::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<22> calc_crc8::ap_ST_fsm_state1 = "1";
const sc_lv<22> calc_crc8::ap_ST_fsm_state2 = "10";
const sc_lv<22> calc_crc8::ap_ST_fsm_state3 = "100";
const sc_lv<22> calc_crc8::ap_ST_fsm_state4 = "1000";
const sc_lv<22> calc_crc8::ap_ST_fsm_state5 = "10000";
const sc_lv<22> calc_crc8::ap_ST_fsm_state6 = "100000";
const sc_lv<22> calc_crc8::ap_ST_fsm_state7 = "1000000";
const sc_lv<22> calc_crc8::ap_ST_fsm_state8 = "10000000";
const sc_lv<22> calc_crc8::ap_ST_fsm_state9 = "100000000";
const sc_lv<22> calc_crc8::ap_ST_fsm_state10 = "1000000000";
const sc_lv<22> calc_crc8::ap_ST_fsm_state11 = "10000000000";
const sc_lv<22> calc_crc8::ap_ST_fsm_state12 = "100000000000";
const sc_lv<22> calc_crc8::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<22> calc_crc8::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<22> calc_crc8::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<22> calc_crc8::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<22> calc_crc8::ap_ST_fsm_state17 = "10000000000000000";
const sc_lv<22> calc_crc8::ap_ST_fsm_state18 = "100000000000000000";
const sc_lv<22> calc_crc8::ap_ST_fsm_state19 = "1000000000000000000";
const sc_lv<22> calc_crc8::ap_ST_fsm_state20 = "10000000000000000000";
const sc_lv<22> calc_crc8::ap_ST_fsm_state21 = "100000000000000000000";
const sc_lv<22> calc_crc8::ap_ST_fsm_state22 = "1000000000000000000000";
const sc_lv<32> calc_crc8::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> calc_crc8::ap_const_lv32_1 = "1";
const sc_lv<1> calc_crc8::ap_const_lv1_0 = "0";
const sc_lv<32> calc_crc8::ap_const_lv32_2 = "10";
const sc_lv<1> calc_crc8::ap_const_lv1_1 = "1";
const sc_lv<32> calc_crc8::ap_const_lv32_3 = "11";
const sc_lv<32> calc_crc8::ap_const_lv32_4 = "100";
const sc_lv<32> calc_crc8::ap_const_lv32_5 = "101";
const sc_lv<32> calc_crc8::ap_const_lv32_6 = "110";
const sc_lv<32> calc_crc8::ap_const_lv32_7 = "111";
const sc_lv<32> calc_crc8::ap_const_lv32_8 = "1000";
const sc_lv<32> calc_crc8::ap_const_lv32_9 = "1001";
const sc_lv<32> calc_crc8::ap_const_lv32_A = "1010";
const sc_lv<32> calc_crc8::ap_const_lv32_B = "1011";
const sc_lv<32> calc_crc8::ap_const_lv32_C = "1100";
const sc_lv<32> calc_crc8::ap_const_lv32_D = "1101";
const sc_lv<32> calc_crc8::ap_const_lv32_E = "1110";
const sc_lv<32> calc_crc8::ap_const_lv32_F = "1111";
const sc_lv<32> calc_crc8::ap_const_lv32_10 = "10000";
const sc_lv<32> calc_crc8::ap_const_lv32_11 = "10001";
const sc_lv<32> calc_crc8::ap_const_lv32_12 = "10010";
const sc_lv<32> calc_crc8::ap_const_lv32_14 = "10100";
const sc_lv<32> calc_crc8::ap_const_lv32_15 = "10101";
const sc_lv<6> calc_crc8::ap_const_lv6_0 = "000000";
const sc_lv<4> calc_crc8::ap_const_lv4_0 = "0000";
const sc_lv<32> calc_crc8::ap_const_lv32_13 = "10011";
const sc_lv<64> calc_crc8::ap_const_lv64_1F = "11111";
const sc_lv<64> calc_crc8::ap_const_lv64_1E = "11110";
const sc_lv<64> calc_crc8::ap_const_lv64_1C = "11100";
const sc_lv<64> calc_crc8::ap_const_lv64_17 = "10111";
const sc_lv<64> calc_crc8::ap_const_lv64_15 = "10101";
const sc_lv<64> calc_crc8::ap_const_lv64_13 = "10011";
const sc_lv<64> calc_crc8::ap_const_lv64_12 = "10010";
const sc_lv<64> calc_crc8::ap_const_lv64_10 = "10000";
const sc_lv<64> calc_crc8::ap_const_lv64_E = "1110";
const sc_lv<64> calc_crc8::ap_const_lv64_C = "1100";
const sc_lv<64> calc_crc8::ap_const_lv64_8 = "1000";
const sc_lv<64> calc_crc8::ap_const_lv64_7 = "111";
const sc_lv<64> calc_crc8::ap_const_lv64_6 = "110";
const sc_lv<64> calc_crc8::ap_const_lv64_0 = "0000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<64> calc_crc8::ap_const_lv64_1D = "11101";
const sc_lv<64> calc_crc8::ap_const_lv64_18 = "11000";
const sc_lv<64> calc_crc8::ap_const_lv64_16 = "10110";
const sc_lv<64> calc_crc8::ap_const_lv64_14 = "10100";
const sc_lv<64> calc_crc8::ap_const_lv64_4 = "100";
const sc_lv<64> calc_crc8::ap_const_lv64_11 = "10001";
const sc_lv<64> calc_crc8::ap_const_lv64_F = "1111";
const sc_lv<64> calc_crc8::ap_const_lv64_D = "1101";
const sc_lv<64> calc_crc8::ap_const_lv64_9 = "1001";
const sc_lv<64> calc_crc8::ap_const_lv64_1 = "1";
const sc_lv<64> calc_crc8::ap_const_lv64_5 = "101";
const sc_lv<64> calc_crc8::ap_const_lv64_19 = "11001";
const sc_lv<64> calc_crc8::ap_const_lv64_A = "1010";
const sc_lv<64> calc_crc8::ap_const_lv64_2 = "10";
const sc_lv<64> calc_crc8::ap_const_lv64_1A = "11010";
const sc_lv<64> calc_crc8::ap_const_lv64_B = "1011";
const sc_lv<64> calc_crc8::ap_const_lv64_3 = "11";
const sc_lv<64> calc_crc8::ap_const_lv64_1B = "11011";
const sc_lv<6> calc_crc8::ap_const_lv6_20 = "100000";
const sc_lv<6> calc_crc8::ap_const_lv6_1 = "1";
const sc_lv<32> calc_crc8::ap_const_lv32_1F = "11111";
const sc_lv<4> calc_crc8::ap_const_lv4_8 = "1000";
const sc_lv<4> calc_crc8::ap_const_lv4_1 = "1";
const bool calc_crc8::ap_const_boolean_1 = true;

calc_crc8::calc_crc8(sc_module_name name) : sc_module(name), mVcdFile(0) {
    D_U = new calc_crc8_D("D_U");
    D_U->clk(ap_clk);
    D_U->reset(ap_rst);
    D_U->address0(D_address0);
    D_U->ce0(D_ce0);
    D_U->we0(D_we0);
    D_U->d0(D_d0);
    D_U->q0(D_q0);
    D_U->address1(D_address1);
    D_U->ce1(D_ce1);
    D_U->q1(D_q1);
    NewCRC_U = new calc_crc8_NewCRC("NewCRC_U");
    NewCRC_U->clk(ap_clk);
    NewCRC_U->reset(ap_rst);
    NewCRC_U->address0(NewCRC_address0);
    NewCRC_U->ce0(NewCRC_ce0);
    NewCRC_U->we0(NewCRC_we0);
    NewCRC_U->d0(NewCRC_d0);
    NewCRC_U->address1(NewCRC_address1);
    NewCRC_U->ce1(NewCRC_ce1);
    NewCRC_U->we1(NewCRC_we1);
    NewCRC_U->d1(NewCRC_d1);
    NewCRC_U->q1(NewCRC_q1);
    C_U = new calc_crc8_C("C_U");
    C_U->clk(ap_clk);
    C_U->reset(ap_rst);
    C_U->address0(C_address0);
    C_U->ce0(C_ce0);
    C_U->we0(C_we0);
    C_U->d0(C_d0);
    C_U->q0(C_q0);
    C_U->address1(C_address1);
    C_U->ce1(C_ce1);
    C_U->q1(C_q1);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_C_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( zext_ln33_fu_673_p1 );

    SC_METHOD(thread_C_address1);
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state17 );

    SC_METHOD(thread_C_ce0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state18 );

    SC_METHOD(thread_C_ce1);
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state17 );

    SC_METHOD(thread_C_d0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( p_01_reg_593 );

    SC_METHOD(thread_C_we0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( icmp_ln32_fu_661_p2 );

    SC_METHOD(thread_D_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( zext_ln27_fu_637_p1 );

    SC_METHOD(thread_D_address1);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state18 );

    SC_METHOD(thread_D_ce0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state18 );

    SC_METHOD(thread_D_ce1);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state18 );

    SC_METHOD(thread_D_d0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( p_0_reg_573 );

    SC_METHOD(thread_D_we0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln26_fu_625_p2 );

    SC_METHOD(thread_NewCRC_address0);
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state20 );

    SC_METHOD(thread_NewCRC_address1);
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( zext_ln65_fu_1347_p1 );

    SC_METHOD(thread_NewCRC_ce0);
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state20 );

    SC_METHOD(thread_NewCRC_ce1);
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( ap_CS_fsm_state20 );

    SC_METHOD(thread_NewCRC_d0);
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( xor_ln59_12_reg_1962 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( xor_ln37_15_fu_772_p2 );
    sensitive << ( xor_ln40_18_fu_1001_p2 );
    sensitive << ( xor_ln44_15_fu_1083_p2 );
    sensitive << ( xor_ln47_14_fu_1130_p2 );
    sensitive << ( xor_ln50_15_fu_1224_p2 );

    SC_METHOD(thread_NewCRC_d1);
    sensitive << ( xor_ln56_12_reg_1957 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( xor_ln53_15_fu_1273_p2 );

    SC_METHOD(thread_NewCRC_we0);
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state20 );

    SC_METHOD(thread_NewCRC_we1);
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state20 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state13);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state14);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state15);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state16);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state17);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state18);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state19);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state20);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state21);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state22);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( icmp_ln64_fu_1335_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( icmp_ln64_fu_1335_p2 );

    SC_METHOD(thread_ap_return);
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( icmp_ln64_fu_1335_p2 );
    sensitive << ( crc_res_0_reg_613 );

    SC_METHOD(thread_crc_res_fu_1381_p3);
    sensitive << ( tmp_fu_1371_p4 );
    sensitive << ( or_ln65_fu_1365_p2 );

    SC_METHOD(thread_i_3_fu_667_p2);
    sensitive << ( i_1_reg_582 );

    SC_METHOD(thread_i_4_fu_1341_p2);
    sensitive << ( i_2_reg_602 );

    SC_METHOD(thread_i_fu_631_p2);
    sensitive << ( i_0_reg_562 );

    SC_METHOD(thread_icmp_ln26_fu_625_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( i_0_reg_562 );

    SC_METHOD(thread_icmp_ln32_fu_661_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( i_1_reg_582 );

    SC_METHOD(thread_icmp_ln64_fu_1335_p2);
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( i_2_reg_602 );

    SC_METHOD(thread_or_ln65_fu_1365_p2);
    sensitive << ( trunc_ln65_fu_1361_p1 );
    sensitive << ( shl_ln65_fu_1356_p2 );

    SC_METHOD(thread_sext_ln28_fu_657_p1);
    sensitive << ( trunc_ln1_fu_647_p4 );

    SC_METHOD(thread_sext_ln34_fu_693_p1);
    sensitive << ( trunc_ln3_fu_683_p4 );

    SC_METHOD(thread_shl_ln65_fu_1356_p2);
    sensitive << ( zext_ln64_reg_1967 );
    sensitive << ( zext_ln65_1_fu_1352_p1 );

    SC_METHOD(thread_tmp_fu_1371_p4);
    sensitive << ( crc_res_0_reg_613 );

    SC_METHOD(thread_trunc_ln1_fu_647_p4);
    sensitive << ( p_0_reg_573 );

    SC_METHOD(thread_trunc_ln3_fu_683_p4);
    sensitive << ( p_01_reg_593 );

    SC_METHOD(thread_trunc_ln65_fu_1361_p1);
    sensitive << ( crc_res_0_reg_613 );

    SC_METHOD(thread_xor_ln37_10_fu_743_p2);
    sensitive << ( xor_ln37_9_fu_739_p2 );
    sensitive << ( xor_ln37_8_fu_735_p2 );

    SC_METHOD(thread_xor_ln37_11_fu_749_p2);
    sensitive << ( C_q0 );
    sensitive << ( C_load_reg_1652 );

    SC_METHOD(thread_xor_ln37_12_fu_754_p2);
    sensitive << ( C_q1 );
    sensitive << ( xor_ln37_fu_697_p2 );

    SC_METHOD(thread_xor_ln37_13_fu_760_p2);
    sensitive << ( xor_ln37_12_fu_754_p2 );
    sensitive << ( xor_ln37_11_fu_749_p2 );

    SC_METHOD(thread_xor_ln37_14_fu_766_p2);
    sensitive << ( xor_ln37_13_fu_760_p2 );
    sensitive << ( xor_ln37_10_fu_743_p2 );

    SC_METHOD(thread_xor_ln37_15_fu_772_p2);
    sensitive << ( xor_ln37_14_fu_766_p2 );
    sensitive << ( xor_ln37_7_fu_729_p2 );

    SC_METHOD(thread_xor_ln37_1_fu_701_p2);
    sensitive << ( D_load_2_reg_1457 );
    sensitive << ( D_load_3_reg_1464 );

    SC_METHOD(thread_xor_ln37_2_fu_705_p2);
    sensitive << ( D_load_4_reg_1480 );
    sensitive << ( D_load_5_reg_1487 );

    SC_METHOD(thread_xor_ln37_3_fu_709_p2);
    sensitive << ( xor_ln37_2_fu_705_p2 );
    sensitive << ( xor_ln37_1_fu_701_p2 );

    SC_METHOD(thread_xor_ln37_4_fu_715_p2);
    sensitive << ( D_load_6_reg_1504 );
    sensitive << ( D_load_7_reg_1511 );

    SC_METHOD(thread_xor_ln37_5_fu_719_p2);
    sensitive << ( D_load_8_reg_1528 );
    sensitive << ( D_load_9_reg_1536 );

    SC_METHOD(thread_xor_ln37_6_fu_723_p2);
    sensitive << ( xor_ln37_5_fu_719_p2 );
    sensitive << ( xor_ln37_4_fu_715_p2 );

    SC_METHOD(thread_xor_ln37_7_fu_729_p2);
    sensitive << ( xor_ln37_6_fu_723_p2 );
    sensitive << ( xor_ln37_3_fu_709_p2 );

    SC_METHOD(thread_xor_ln37_8_fu_735_p2);
    sensitive << ( D_load_10_reg_1553 );
    sensitive << ( D_load_11_reg_1559 );

    SC_METHOD(thread_xor_ln37_9_fu_739_p2);
    sensitive << ( D_load_12_reg_1576 );
    sensitive << ( D_load_13_reg_1584 );

    SC_METHOD(thread_xor_ln37_fu_697_p2);
    sensitive << ( D_load_reg_1435 );
    sensitive << ( D_load_1_reg_1441 );

    SC_METHOD(thread_xor_ln40_10_fu_958_p2);
    sensitive << ( D_load_17_reg_1635 );
    sensitive << ( xor_ln40_9_reg_1749 );

    SC_METHOD(thread_xor_ln40_11_fu_962_p2);
    sensitive << ( xor_ln40_10_fu_958_p2 );
    sensitive << ( xor_ln40_8_fu_954_p2 );

    SC_METHOD(thread_xor_ln40_12_fu_968_p2);
    sensitive << ( D_q1 );
    sensitive << ( D_load_21_reg_1716 );

    SC_METHOD(thread_xor_ln40_13_fu_973_p2);
    sensitive << ( D_load_20_reg_1710 );
    sensitive << ( xor_ln40_12_fu_968_p2 );

    SC_METHOD(thread_xor_ln40_14_fu_978_p2);
    sensitive << ( C_q0 );
    sensitive << ( xor_ln40_reg_1737 );

    SC_METHOD(thread_xor_ln40_15_fu_983_p2);
    sensitive << ( C_q1 );
    sensitive << ( xor_ln40_14_fu_978_p2 );

    SC_METHOD(thread_xor_ln40_16_fu_989_p2);
    sensitive << ( xor_ln40_15_fu_983_p2 );
    sensitive << ( xor_ln40_13_fu_973_p2 );

    SC_METHOD(thread_xor_ln40_17_fu_995_p2);
    sensitive << ( xor_ln40_16_fu_989_p2 );
    sensitive << ( xor_ln40_11_fu_962_p2 );

    SC_METHOD(thread_xor_ln40_18_fu_1001_p2);
    sensitive << ( xor_ln40_7_reg_1744 );
    sensitive << ( xor_ln40_17_fu_995_p2 );

    SC_METHOD(thread_xor_ln40_1_fu_783_p2);
    sensitive << ( D_load_4_reg_1480 );
    sensitive << ( xor_ln37_4_fu_715_p2 );

    SC_METHOD(thread_xor_ln40_2_fu_788_p2);
    sensitive << ( xor_ln37_1_fu_701_p2 );
    sensitive << ( xor_ln40_1_fu_783_p2 );

    SC_METHOD(thread_xor_ln40_3_fu_794_p2);
    sensitive << ( D_load_9_reg_1536 );
    sensitive << ( D_load_12_reg_1576 );

    SC_METHOD(thread_xor_ln40_4_fu_798_p2);
    sensitive << ( D_load_8_reg_1528 );
    sensitive << ( xor_ln40_3_fu_794_p2 );

    SC_METHOD(thread_xor_ln40_5_fu_803_p2);
    sensitive << ( D_load_13_reg_1584 );
    sensitive << ( xor_ln37_11_fu_749_p2 );

    SC_METHOD(thread_xor_ln40_6_fu_808_p2);
    sensitive << ( xor_ln40_5_fu_803_p2 );
    sensitive << ( xor_ln40_4_fu_798_p2 );

    SC_METHOD(thread_xor_ln40_7_fu_814_p2);
    sensitive << ( xor_ln40_6_fu_808_p2 );
    sensitive << ( xor_ln40_2_fu_788_p2 );

    SC_METHOD(thread_xor_ln40_8_fu_954_p2);
    sensitive << ( D_load_15_reg_1606 );
    sensitive << ( D_load_16_reg_1628 );

    SC_METHOD(thread_xor_ln40_9_fu_820_p2);
    sensitive << ( D_load_18_reg_1670 );
    sensitive << ( D_load_19_reg_1677 );

    SC_METHOD(thread_xor_ln40_fu_779_p2);
    sensitive << ( D_load_1_reg_1441 );
    sensitive << ( D_load_14_reg_1600 );

    SC_METHOD(thread_xor_ln44_10_fu_1055_p2);
    sensitive << ( D_q1 );
    sensitive << ( D_load_23_reg_1820 );

    SC_METHOD(thread_xor_ln44_11_fu_1060_p2);
    sensitive << ( C_q1 );
    sensitive << ( xor_ln44_reg_1760 );

    SC_METHOD(thread_xor_ln44_12_fu_1065_p2);
    sensitive << ( D_q0 );
    sensitive << ( xor_ln44_11_fu_1060_p2 );

    SC_METHOD(thread_xor_ln44_13_fu_1071_p2);
    sensitive << ( xor_ln44_12_fu_1065_p2 );
    sensitive << ( xor_ln44_10_fu_1055_p2 );

    SC_METHOD(thread_xor_ln44_14_fu_1077_p2);
    sensitive << ( xor_ln44_13_fu_1071_p2 );
    sensitive << ( xor_ln44_9_fu_1049_p2 );

    SC_METHOD(thread_xor_ln44_15_fu_1083_p2);
    sensitive << ( xor_ln44_6_reg_1766 );
    sensitive << ( xor_ln44_14_fu_1077_p2 );

    SC_METHOD(thread_xor_ln44_1_fu_828_p2);
    sensitive << ( D_load_9_reg_1536 );
    sensitive << ( D_load_10_reg_1553 );

    SC_METHOD(thread_xor_ln44_2_fu_832_p2);
    sensitive << ( xor_ln37_9_fu_739_p2 );
    sensitive << ( xor_ln44_1_fu_828_p2 );

    SC_METHOD(thread_xor_ln44_3_fu_838_p2);
    sensitive << ( D_load_15_reg_1606 );
    sensitive << ( C_load_reg_1652 );

    SC_METHOD(thread_xor_ln44_4_fu_842_p2);
    sensitive << ( D_load_16_reg_1628 );
    sensitive << ( xor_ln40_9_fu_820_p2 );

    SC_METHOD(thread_xor_ln44_5_fu_847_p2);
    sensitive << ( xor_ln44_4_fu_842_p2 );
    sensitive << ( xor_ln44_3_fu_838_p2 );

    SC_METHOD(thread_xor_ln44_6_fu_853_p2);
    sensitive << ( xor_ln44_5_fu_847_p2 );
    sensitive << ( xor_ln44_2_fu_832_p2 );

    SC_METHOD(thread_xor_ln44_7_fu_1041_p2);
    sensitive << ( D_load_20_reg_1710 );
    sensitive << ( D_load_22_reg_1801 );

    SC_METHOD(thread_xor_ln44_8_fu_1045_p2);
    sensitive << ( C_load_3_reg_1806 );
    sensitive << ( C_load_4_reg_1812 );

    SC_METHOD(thread_xor_ln44_9_fu_1049_p2);
    sensitive << ( xor_ln44_8_fu_1045_p2 );
    sensitive << ( xor_ln44_7_fu_1041_p2 );

    SC_METHOD(thread_xor_ln44_fu_824_p2);
    sensitive << ( D_load_2_reg_1457 );
    sensitive << ( D_load_14_reg_1600 );

    SC_METHOD(thread_xor_ln47_10_fu_1107_p2);
    sensitive << ( C_q1 );
    sensitive << ( xor_ln40_reg_1737 );

    SC_METHOD(thread_xor_ln47_11_fu_1112_p2);
    sensitive << ( D_q1 );
    sensitive << ( xor_ln47_10_fu_1107_p2 );

    SC_METHOD(thread_xor_ln47_12_fu_1118_p2);
    sensitive << ( xor_ln47_11_fu_1112_p2 );
    sensitive << ( xor_ln47_9_fu_1103_p2 );

    SC_METHOD(thread_xor_ln47_13_fu_1124_p2);
    sensitive << ( xor_ln47_12_fu_1118_p2 );
    sensitive << ( xor_ln47_8_fu_1097_p2 );

    SC_METHOD(thread_xor_ln47_14_fu_1130_p2);
    sensitive << ( xor_ln47_5_reg_1842 );
    sensitive << ( xor_ln47_13_fu_1124_p2 );

    SC_METHOD(thread_xor_ln47_1_fu_863_p2);
    sensitive << ( D_load_7_reg_1511 );
    sensitive << ( D_load_8_reg_1528 );

    SC_METHOD(thread_xor_ln47_2_fu_867_p2);
    sensitive << ( xor_ln47_1_fu_863_p2 );
    sensitive << ( xor_ln47_fu_859_p2 );

    SC_METHOD(thread_xor_ln47_3_fu_1007_p2);
    sensitive << ( D_load_11_reg_1559 );
    sensitive << ( C_load_1_reg_1693 );

    SC_METHOD(thread_xor_ln47_4_fu_1011_p2);
    sensitive << ( xor_ln40_13_fu_973_p2 );
    sensitive << ( xor_ln47_3_fu_1007_p2 );

    SC_METHOD(thread_xor_ln47_5_fu_1017_p2);
    sensitive << ( xor_ln47_2_reg_1771 );
    sensitive << ( xor_ln47_4_fu_1011_p2 );

    SC_METHOD(thread_xor_ln47_6_fu_1089_p2);
    sensitive << ( C_load_4_reg_1812 );
    sensitive << ( D_load_23_reg_1820 );

    SC_METHOD(thread_xor_ln47_7_fu_1093_p2);
    sensitive << ( D_load_25_reg_1858 );
    sensitive << ( C_load_5_reg_1864 );

    SC_METHOD(thread_xor_ln47_8_fu_1097_p2);
    sensitive << ( xor_ln47_7_fu_1093_p2 );
    sensitive << ( xor_ln47_6_fu_1089_p2 );

    SC_METHOD(thread_xor_ln47_9_fu_1103_p2);
    sensitive << ( D_load_26_reg_1880 );
    sensitive << ( D_load_27_reg_1887 );

    SC_METHOD(thread_xor_ln47_fu_859_p2);
    sensitive << ( D_load_3_reg_1464 );
    sensitive << ( D_load_6_reg_1504 );

    SC_METHOD(thread_xor_ln50_10_fu_1198_p2);
    sensitive << ( C_load_6_reg_1914 );
    sensitive << ( D_load_29_reg_1920 );

    SC_METHOD(thread_xor_ln50_11_fu_1202_p2);
    sensitive << ( C_q0 );
    sensitive << ( xor_ln37_reg_1705 );

    SC_METHOD(thread_xor_ln50_12_fu_1207_p2);
    sensitive << ( D_q1 );
    sensitive << ( xor_ln50_11_fu_1202_p2 );

    SC_METHOD(thread_xor_ln50_13_fu_1213_p2);
    sensitive << ( xor_ln50_12_fu_1207_p2 );
    sensitive << ( xor_ln50_10_fu_1198_p2 );

    SC_METHOD(thread_xor_ln50_14_fu_1219_p2);
    sensitive << ( xor_ln50_9_reg_1937 );
    sensitive << ( xor_ln50_13_fu_1213_p2 );

    SC_METHOD(thread_xor_ln50_15_fu_1224_p2);
    sensitive << ( xor_ln50_14_fu_1219_p2 );
    sensitive << ( xor_ln50_5_fu_1193_p2 );

    SC_METHOD(thread_xor_ln50_1_fu_877_p2);
    sensitive << ( xor_ln44_1_fu_828_p2 );
    sensitive << ( xor_ln50_fu_873_p2 );

    SC_METHOD(thread_xor_ln50_2_fu_1179_p2);
    sensitive << ( C_load_1_reg_1693 );
    sensitive << ( C_load_2_reg_1700 );

    SC_METHOD(thread_xor_ln50_3_fu_1183_p2);
    sensitive << ( D_load_15_reg_1606 );
    sensitive << ( xor_ln40_9_reg_1749 );

    SC_METHOD(thread_xor_ln50_4_fu_1187_p2);
    sensitive << ( xor_ln50_3_fu_1183_p2 );
    sensitive << ( xor_ln50_2_fu_1179_p2 );

    SC_METHOD(thread_xor_ln50_5_fu_1193_p2);
    sensitive << ( xor_ln50_1_reg_1776 );
    sensitive << ( xor_ln50_4_fu_1187_p2 );

    SC_METHOD(thread_xor_ln50_6_fu_1136_p2);
    sensitive << ( C_load_3_reg_1806 );
    sensitive << ( D_load_24_reg_1852 );

    SC_METHOD(thread_xor_ln50_7_fu_1140_p2);
    sensitive << ( D_q1 );
    sensitive << ( D_load_26_reg_1880 );

    SC_METHOD(thread_xor_ln50_8_fu_1145_p2);
    sensitive << ( D_load_25_reg_1858 );
    sensitive << ( xor_ln50_7_fu_1140_p2 );

    SC_METHOD(thread_xor_ln50_9_fu_1150_p2);
    sensitive << ( xor_ln50_8_fu_1145_p2 );
    sensitive << ( xor_ln50_6_fu_1136_p2 );

    SC_METHOD(thread_xor_ln50_fu_873_p2);
    sensitive << ( D_load_5_reg_1487 );
    sensitive << ( D_load_8_reg_1528 );

    SC_METHOD(thread_xor_ln53_10_fu_1245_p2);
    sensitive << ( D_load_28_reg_1909 );
    sensitive << ( D_load_29_reg_1920 );

    SC_METHOD(thread_xor_ln53_11_fu_1249_p2);
    sensitive << ( D_q0 );
    sensitive << ( C_q0 );

    SC_METHOD(thread_xor_ln53_12_fu_1255_p2);
    sensitive << ( D_q1 );
    sensitive << ( xor_ln53_11_fu_1249_p2 );

    SC_METHOD(thread_xor_ln53_13_fu_1261_p2);
    sensitive << ( xor_ln53_12_fu_1255_p2 );
    sensitive << ( xor_ln53_10_fu_1245_p2 );

    SC_METHOD(thread_xor_ln53_14_fu_1267_p2);
    sensitive << ( xor_ln53_13_fu_1261_p2 );
    sensitive << ( xor_ln53_9_fu_1239_p2 );

    SC_METHOD(thread_xor_ln53_15_fu_1273_p2);
    sensitive << ( xor_ln53_6_reg_1786 );
    sensitive << ( xor_ln53_14_fu_1267_p2 );

    SC_METHOD(thread_xor_ln53_1_fu_887_p2);
    sensitive << ( xor_ln37_4_fu_715_p2 );
    sensitive << ( xor_ln53_fu_883_p2 );

    SC_METHOD(thread_xor_ln53_2_fu_893_p2);
    sensitive << ( C_load_reg_1652 );
    sensitive << ( C_q1 );

    SC_METHOD(thread_xor_ln53_3_fu_898_p2);
    sensitive << ( D_q1 );
    sensitive << ( D_load_19_reg_1677 );

    SC_METHOD(thread_xor_ln53_4_fu_903_p2);
    sensitive << ( D_load_17_reg_1635 );
    sensitive << ( xor_ln53_3_fu_898_p2 );

    SC_METHOD(thread_xor_ln53_5_fu_908_p2);
    sensitive << ( xor_ln53_4_fu_903_p2 );
    sensitive << ( xor_ln53_2_fu_893_p2 );

    SC_METHOD(thread_xor_ln53_6_fu_914_p2);
    sensitive << ( xor_ln53_5_fu_908_p2 );
    sensitive << ( xor_ln53_1_fu_887_p2 );

    SC_METHOD(thread_xor_ln53_7_fu_1231_p2);
    sensitive << ( D_load_21_reg_1716 );
    sensitive << ( D_load_23_reg_1820 );

    SC_METHOD(thread_xor_ln53_8_fu_1235_p2);
    sensitive << ( C_load_5_reg_1864 );
    sensitive << ( D_load_27_reg_1887 );

    SC_METHOD(thread_xor_ln53_9_fu_1239_p2);
    sensitive << ( xor_ln53_8_fu_1235_p2 );
    sensitive << ( xor_ln53_7_fu_1231_p2 );

    SC_METHOD(thread_xor_ln53_fu_883_p2);
    sensitive << ( D_load_reg_1435 );
    sensitive << ( D_load_2_reg_1457 );

    SC_METHOD(thread_xor_ln56_10_fu_1289_p2);
    sensitive << ( xor_ln56_9_fu_1284_p2 );
    sensitive << ( xor_ln56_8_fu_1279_p2 );

    SC_METHOD(thread_xor_ln56_11_fu_1295_p2);
    sensitive << ( xor_ln56_7_reg_1947 );
    sensitive << ( xor_ln56_10_fu_1289_p2 );

    SC_METHOD(thread_xor_ln56_12_fu_1300_p2);
    sensitive << ( xor_ln56_4_reg_1791 );
    sensitive << ( xor_ln56_11_fu_1295_p2 );

    SC_METHOD(thread_xor_ln56_1_fu_924_p2);
    sensitive << ( D_load_5_reg_1487 );
    sensitive << ( xor_ln56_fu_920_p2 );

    SC_METHOD(thread_xor_ln56_2_fu_929_p2);
    sensitive << ( D_load_12_reg_1576 );
    sensitive << ( C_load_reg_1652 );

    SC_METHOD(thread_xor_ln56_3_fu_933_p2);
    sensitive << ( xor_ln37_5_fu_719_p2 );
    sensitive << ( xor_ln56_2_fu_929_p2 );

    SC_METHOD(thread_xor_ln56_4_fu_939_p2);
    sensitive << ( xor_ln56_3_fu_933_p2 );
    sensitive << ( xor_ln56_1_fu_924_p2 );

    SC_METHOD(thread_xor_ln56_5_fu_1156_p2);
    sensitive << ( D_load_18_reg_1670 );
    sensitive << ( C_load_4_reg_1812 );

    SC_METHOD(thread_xor_ln56_6_fu_1160_p2);
    sensitive << ( D_load_24_reg_1852 );
    sensitive << ( D_load_26_reg_1880 );

    SC_METHOD(thread_xor_ln56_7_fu_1164_p2);
    sensitive << ( xor_ln56_6_fu_1160_p2 );
    sensitive << ( xor_ln56_5_fu_1156_p2 );

    SC_METHOD(thread_xor_ln56_8_fu_1279_p2);
    sensitive << ( D_q1 );
    sensitive << ( C_load_6_reg_1914 );

    SC_METHOD(thread_xor_ln56_9_fu_1284_p2);
    sensitive << ( D_q0 );
    sensitive << ( xor_ln44_reg_1760 );

    SC_METHOD(thread_xor_ln56_fu_920_p2);
    sensitive << ( D_load_4_reg_1480 );
    sensitive << ( D_load_7_reg_1511 );

    SC_METHOD(thread_xor_ln59_10_fu_1315_p2);
    sensitive << ( xor_ln59_9_fu_1310_p2 );
    sensitive << ( xor_ln59_8_fu_1305_p2 );

    SC_METHOD(thread_xor_ln59_11_fu_1321_p2);
    sensitive << ( xor_ln59_7_reg_1952 );
    sensitive << ( xor_ln59_10_fu_1315_p2 );

    SC_METHOD(thread_xor_ln59_12_fu_1326_p2);
    sensitive << ( xor_ln59_5_reg_1847 );
    sensitive << ( xor_ln59_11_fu_1321_p2 );

    SC_METHOD(thread_xor_ln59_1_fu_949_p2);
    sensitive << ( D_load_11_reg_1559 );
    sensitive << ( xor_ln59_fu_945_p2 );

    SC_METHOD(thread_xor_ln59_2_fu_1022_p2);
    sensitive << ( D_load_16_reg_1628 );
    sensitive << ( C_load_1_reg_1693 );

    SC_METHOD(thread_xor_ln59_3_fu_1026_p2);
    sensitive << ( D_load_17_reg_1635 );
    sensitive << ( D_load_18_reg_1670 );

    SC_METHOD(thread_xor_ln59_4_fu_1030_p2);
    sensitive << ( xor_ln59_3_fu_1026_p2 );
    sensitive << ( xor_ln59_2_fu_1022_p2 );

    SC_METHOD(thread_xor_ln59_5_fu_1036_p2);
    sensitive << ( xor_ln59_1_reg_1796 );
    sensitive << ( xor_ln59_4_fu_1030_p2 );

    SC_METHOD(thread_xor_ln59_6_fu_1170_p2);
    sensitive << ( C_load_4_reg_1812 );
    sensitive << ( D_load_27_reg_1887 );

    SC_METHOD(thread_xor_ln59_7_fu_1174_p2);
    sensitive << ( xor_ln53_3_reg_1781 );
    sensitive << ( xor_ln59_6_fu_1170_p2 );

    SC_METHOD(thread_xor_ln59_8_fu_1305_p2);
    sensitive << ( C_q0 );
    sensitive << ( D_load_29_reg_1920 );

    SC_METHOD(thread_xor_ln59_9_fu_1310_p2);
    sensitive << ( D_q0 );
    sensitive << ( xor_ln40_reg_1737 );

    SC_METHOD(thread_xor_ln59_fu_945_p2);
    sensitive << ( D_load_6_reg_1504 );
    sensitive << ( D_load_12_reg_1576 );

    SC_METHOD(thread_zext_ln27_fu_637_p1);
    sensitive << ( i_0_reg_562 );

    SC_METHOD(thread_zext_ln33_fu_673_p1);
    sensitive << ( i_1_reg_582 );

    SC_METHOD(thread_zext_ln64_fu_1331_p1);
    sensitive << ( i_2_reg_602 );

    SC_METHOD(thread_zext_ln65_1_fu_1352_p1);
    sensitive << ( NewCRC_q1 );

    SC_METHOD(thread_zext_ln65_fu_1347_p1);
    sensitive << ( i_2_reg_602 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln26_fu_625_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( icmp_ln32_fu_661_p2 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( icmp_ln64_fu_1335_p2 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    ap_CS_fsm = "0000000000000000000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "calc_crc8_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, data, "(port)data");
    sc_trace(mVcdFile, crc, "(port)crc");
    sc_trace(mVcdFile, ap_return, "(port)ap_return");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, i_fu_631_p2, "i_fu_631_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, sext_ln28_fu_657_p1, "sext_ln28_fu_657_p1");
    sc_trace(mVcdFile, icmp_ln26_fu_625_p2, "icmp_ln26_fu_625_p2");
    sc_trace(mVcdFile, i_3_fu_667_p2, "i_3_fu_667_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, sext_ln34_fu_693_p1, "sext_ln34_fu_693_p1");
    sc_trace(mVcdFile, icmp_ln32_fu_661_p2, "icmp_ln32_fu_661_p2");
    sc_trace(mVcdFile, D_q0, "D_q0");
    sc_trace(mVcdFile, D_load_reg_1435, "D_load_reg_1435");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, D_q1, "D_q1");
    sc_trace(mVcdFile, D_load_1_reg_1441, "D_load_1_reg_1441");
    sc_trace(mVcdFile, D_load_2_reg_1457, "D_load_2_reg_1457");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, D_load_3_reg_1464, "D_load_3_reg_1464");
    sc_trace(mVcdFile, D_load_4_reg_1480, "D_load_4_reg_1480");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, D_load_5_reg_1487, "D_load_5_reg_1487");
    sc_trace(mVcdFile, D_load_6_reg_1504, "D_load_6_reg_1504");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, D_load_7_reg_1511, "D_load_7_reg_1511");
    sc_trace(mVcdFile, D_load_8_reg_1528, "D_load_8_reg_1528");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, D_load_9_reg_1536, "D_load_9_reg_1536");
    sc_trace(mVcdFile, D_load_10_reg_1553, "D_load_10_reg_1553");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, D_load_11_reg_1559, "D_load_11_reg_1559");
    sc_trace(mVcdFile, D_load_12_reg_1576, "D_load_12_reg_1576");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, D_load_13_reg_1584, "D_load_13_reg_1584");
    sc_trace(mVcdFile, D_load_14_reg_1600, "D_load_14_reg_1600");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, D_load_15_reg_1606, "D_load_15_reg_1606");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, D_load_16_reg_1628, "D_load_16_reg_1628");
    sc_trace(mVcdFile, D_load_17_reg_1635, "D_load_17_reg_1635");
    sc_trace(mVcdFile, C_q0, "C_q0");
    sc_trace(mVcdFile, C_load_reg_1652, "C_load_reg_1652");
    sc_trace(mVcdFile, ap_CS_fsm_state13, "ap_CS_fsm_state13");
    sc_trace(mVcdFile, D_load_18_reg_1670, "D_load_18_reg_1670");
    sc_trace(mVcdFile, D_load_19_reg_1677, "D_load_19_reg_1677");
    sc_trace(mVcdFile, C_load_1_reg_1693, "C_load_1_reg_1693");
    sc_trace(mVcdFile, ap_CS_fsm_state14, "ap_CS_fsm_state14");
    sc_trace(mVcdFile, C_q1, "C_q1");
    sc_trace(mVcdFile, C_load_2_reg_1700, "C_load_2_reg_1700");
    sc_trace(mVcdFile, xor_ln37_fu_697_p2, "xor_ln37_fu_697_p2");
    sc_trace(mVcdFile, xor_ln37_reg_1705, "xor_ln37_reg_1705");
    sc_trace(mVcdFile, D_load_20_reg_1710, "D_load_20_reg_1710");
    sc_trace(mVcdFile, D_load_21_reg_1716, "D_load_21_reg_1716");
    sc_trace(mVcdFile, xor_ln40_fu_779_p2, "xor_ln40_fu_779_p2");
    sc_trace(mVcdFile, xor_ln40_reg_1737, "xor_ln40_reg_1737");
    sc_trace(mVcdFile, xor_ln40_7_fu_814_p2, "xor_ln40_7_fu_814_p2");
    sc_trace(mVcdFile, xor_ln40_7_reg_1744, "xor_ln40_7_reg_1744");
    sc_trace(mVcdFile, xor_ln40_9_fu_820_p2, "xor_ln40_9_fu_820_p2");
    sc_trace(mVcdFile, xor_ln40_9_reg_1749, "xor_ln40_9_reg_1749");
    sc_trace(mVcdFile, xor_ln44_fu_824_p2, "xor_ln44_fu_824_p2");
    sc_trace(mVcdFile, xor_ln44_reg_1760, "xor_ln44_reg_1760");
    sc_trace(mVcdFile, xor_ln44_6_fu_853_p2, "xor_ln44_6_fu_853_p2");
    sc_trace(mVcdFile, xor_ln44_6_reg_1766, "xor_ln44_6_reg_1766");
    sc_trace(mVcdFile, xor_ln47_2_fu_867_p2, "xor_ln47_2_fu_867_p2");
    sc_trace(mVcdFile, xor_ln47_2_reg_1771, "xor_ln47_2_reg_1771");
    sc_trace(mVcdFile, xor_ln50_1_fu_877_p2, "xor_ln50_1_fu_877_p2");
    sc_trace(mVcdFile, xor_ln50_1_reg_1776, "xor_ln50_1_reg_1776");
    sc_trace(mVcdFile, xor_ln53_3_fu_898_p2, "xor_ln53_3_fu_898_p2");
    sc_trace(mVcdFile, xor_ln53_3_reg_1781, "xor_ln53_3_reg_1781");
    sc_trace(mVcdFile, xor_ln53_6_fu_914_p2, "xor_ln53_6_fu_914_p2");
    sc_trace(mVcdFile, xor_ln53_6_reg_1786, "xor_ln53_6_reg_1786");
    sc_trace(mVcdFile, xor_ln56_4_fu_939_p2, "xor_ln56_4_fu_939_p2");
    sc_trace(mVcdFile, xor_ln56_4_reg_1791, "xor_ln56_4_reg_1791");
    sc_trace(mVcdFile, xor_ln59_1_fu_949_p2, "xor_ln59_1_fu_949_p2");
    sc_trace(mVcdFile, xor_ln59_1_reg_1796, "xor_ln59_1_reg_1796");
    sc_trace(mVcdFile, D_load_22_reg_1801, "D_load_22_reg_1801");
    sc_trace(mVcdFile, ap_CS_fsm_state15, "ap_CS_fsm_state15");
    sc_trace(mVcdFile, C_load_3_reg_1806, "C_load_3_reg_1806");
    sc_trace(mVcdFile, C_load_4_reg_1812, "C_load_4_reg_1812");
    sc_trace(mVcdFile, D_load_23_reg_1820, "D_load_23_reg_1820");
    sc_trace(mVcdFile, xor_ln47_5_fu_1017_p2, "xor_ln47_5_fu_1017_p2");
    sc_trace(mVcdFile, xor_ln47_5_reg_1842, "xor_ln47_5_reg_1842");
    sc_trace(mVcdFile, xor_ln59_5_fu_1036_p2, "xor_ln59_5_fu_1036_p2");
    sc_trace(mVcdFile, xor_ln59_5_reg_1847, "xor_ln59_5_reg_1847");
    sc_trace(mVcdFile, D_load_24_reg_1852, "D_load_24_reg_1852");
    sc_trace(mVcdFile, ap_CS_fsm_state16, "ap_CS_fsm_state16");
    sc_trace(mVcdFile, D_load_25_reg_1858, "D_load_25_reg_1858");
    sc_trace(mVcdFile, C_load_5_reg_1864, "C_load_5_reg_1864");
    sc_trace(mVcdFile, D_load_26_reg_1880, "D_load_26_reg_1880");
    sc_trace(mVcdFile, ap_CS_fsm_state17, "ap_CS_fsm_state17");
    sc_trace(mVcdFile, D_load_27_reg_1887, "D_load_27_reg_1887");
    sc_trace(mVcdFile, D_load_28_reg_1909, "D_load_28_reg_1909");
    sc_trace(mVcdFile, ap_CS_fsm_state18, "ap_CS_fsm_state18");
    sc_trace(mVcdFile, C_load_6_reg_1914, "C_load_6_reg_1914");
    sc_trace(mVcdFile, D_load_29_reg_1920, "D_load_29_reg_1920");
    sc_trace(mVcdFile, xor_ln50_9_fu_1150_p2, "xor_ln50_9_fu_1150_p2");
    sc_trace(mVcdFile, xor_ln50_9_reg_1937, "xor_ln50_9_reg_1937");
    sc_trace(mVcdFile, xor_ln56_7_fu_1164_p2, "xor_ln56_7_fu_1164_p2");
    sc_trace(mVcdFile, xor_ln56_7_reg_1947, "xor_ln56_7_reg_1947");
    sc_trace(mVcdFile, xor_ln59_7_fu_1174_p2, "xor_ln59_7_fu_1174_p2");
    sc_trace(mVcdFile, xor_ln59_7_reg_1952, "xor_ln59_7_reg_1952");
    sc_trace(mVcdFile, xor_ln56_12_fu_1300_p2, "xor_ln56_12_fu_1300_p2");
    sc_trace(mVcdFile, xor_ln56_12_reg_1957, "xor_ln56_12_reg_1957");
    sc_trace(mVcdFile, ap_CS_fsm_state19, "ap_CS_fsm_state19");
    sc_trace(mVcdFile, xor_ln59_12_fu_1326_p2, "xor_ln59_12_fu_1326_p2");
    sc_trace(mVcdFile, xor_ln59_12_reg_1962, "xor_ln59_12_reg_1962");
    sc_trace(mVcdFile, zext_ln64_fu_1331_p1, "zext_ln64_fu_1331_p1");
    sc_trace(mVcdFile, zext_ln64_reg_1967, "zext_ln64_reg_1967");
    sc_trace(mVcdFile, ap_CS_fsm_state21, "ap_CS_fsm_state21");
    sc_trace(mVcdFile, i_4_fu_1341_p2, "i_4_fu_1341_p2");
    sc_trace(mVcdFile, i_4_reg_1975, "i_4_reg_1975");
    sc_trace(mVcdFile, icmp_ln64_fu_1335_p2, "icmp_ln64_fu_1335_p2");
    sc_trace(mVcdFile, crc_res_fu_1381_p3, "crc_res_fu_1381_p3");
    sc_trace(mVcdFile, ap_CS_fsm_state22, "ap_CS_fsm_state22");
    sc_trace(mVcdFile, D_address0, "D_address0");
    sc_trace(mVcdFile, D_ce0, "D_ce0");
    sc_trace(mVcdFile, D_we0, "D_we0");
    sc_trace(mVcdFile, D_d0, "D_d0");
    sc_trace(mVcdFile, D_address1, "D_address1");
    sc_trace(mVcdFile, D_ce1, "D_ce1");
    sc_trace(mVcdFile, NewCRC_address0, "NewCRC_address0");
    sc_trace(mVcdFile, NewCRC_ce0, "NewCRC_ce0");
    sc_trace(mVcdFile, NewCRC_we0, "NewCRC_we0");
    sc_trace(mVcdFile, NewCRC_d0, "NewCRC_d0");
    sc_trace(mVcdFile, NewCRC_address1, "NewCRC_address1");
    sc_trace(mVcdFile, NewCRC_ce1, "NewCRC_ce1");
    sc_trace(mVcdFile, NewCRC_we1, "NewCRC_we1");
    sc_trace(mVcdFile, NewCRC_d1, "NewCRC_d1");
    sc_trace(mVcdFile, NewCRC_q1, "NewCRC_q1");
    sc_trace(mVcdFile, C_address0, "C_address0");
    sc_trace(mVcdFile, C_ce0, "C_ce0");
    sc_trace(mVcdFile, C_we0, "C_we0");
    sc_trace(mVcdFile, C_d0, "C_d0");
    sc_trace(mVcdFile, C_address1, "C_address1");
    sc_trace(mVcdFile, C_ce1, "C_ce1");
    sc_trace(mVcdFile, i_0_reg_562, "i_0_reg_562");
    sc_trace(mVcdFile, p_0_reg_573, "p_0_reg_573");
    sc_trace(mVcdFile, i_1_reg_582, "i_1_reg_582");
    sc_trace(mVcdFile, p_01_reg_593, "p_01_reg_593");
    sc_trace(mVcdFile, i_2_reg_602, "i_2_reg_602");
    sc_trace(mVcdFile, ap_CS_fsm_state20, "ap_CS_fsm_state20");
    sc_trace(mVcdFile, crc_res_0_reg_613, "crc_res_0_reg_613");
    sc_trace(mVcdFile, zext_ln27_fu_637_p1, "zext_ln27_fu_637_p1");
    sc_trace(mVcdFile, zext_ln33_fu_673_p1, "zext_ln33_fu_673_p1");
    sc_trace(mVcdFile, zext_ln65_fu_1347_p1, "zext_ln65_fu_1347_p1");
    sc_trace(mVcdFile, xor_ln37_15_fu_772_p2, "xor_ln37_15_fu_772_p2");
    sc_trace(mVcdFile, xor_ln40_18_fu_1001_p2, "xor_ln40_18_fu_1001_p2");
    sc_trace(mVcdFile, xor_ln44_15_fu_1083_p2, "xor_ln44_15_fu_1083_p2");
    sc_trace(mVcdFile, xor_ln47_14_fu_1130_p2, "xor_ln47_14_fu_1130_p2");
    sc_trace(mVcdFile, xor_ln50_15_fu_1224_p2, "xor_ln50_15_fu_1224_p2");
    sc_trace(mVcdFile, xor_ln53_15_fu_1273_p2, "xor_ln53_15_fu_1273_p2");
    sc_trace(mVcdFile, trunc_ln1_fu_647_p4, "trunc_ln1_fu_647_p4");
    sc_trace(mVcdFile, trunc_ln3_fu_683_p4, "trunc_ln3_fu_683_p4");
    sc_trace(mVcdFile, xor_ln37_2_fu_705_p2, "xor_ln37_2_fu_705_p2");
    sc_trace(mVcdFile, xor_ln37_1_fu_701_p2, "xor_ln37_1_fu_701_p2");
    sc_trace(mVcdFile, xor_ln37_5_fu_719_p2, "xor_ln37_5_fu_719_p2");
    sc_trace(mVcdFile, xor_ln37_4_fu_715_p2, "xor_ln37_4_fu_715_p2");
    sc_trace(mVcdFile, xor_ln37_6_fu_723_p2, "xor_ln37_6_fu_723_p2");
    sc_trace(mVcdFile, xor_ln37_3_fu_709_p2, "xor_ln37_3_fu_709_p2");
    sc_trace(mVcdFile, xor_ln37_9_fu_739_p2, "xor_ln37_9_fu_739_p2");
    sc_trace(mVcdFile, xor_ln37_8_fu_735_p2, "xor_ln37_8_fu_735_p2");
    sc_trace(mVcdFile, xor_ln37_12_fu_754_p2, "xor_ln37_12_fu_754_p2");
    sc_trace(mVcdFile, xor_ln37_11_fu_749_p2, "xor_ln37_11_fu_749_p2");
    sc_trace(mVcdFile, xor_ln37_13_fu_760_p2, "xor_ln37_13_fu_760_p2");
    sc_trace(mVcdFile, xor_ln37_10_fu_743_p2, "xor_ln37_10_fu_743_p2");
    sc_trace(mVcdFile, xor_ln37_14_fu_766_p2, "xor_ln37_14_fu_766_p2");
    sc_trace(mVcdFile, xor_ln37_7_fu_729_p2, "xor_ln37_7_fu_729_p2");
    sc_trace(mVcdFile, xor_ln40_1_fu_783_p2, "xor_ln40_1_fu_783_p2");
    sc_trace(mVcdFile, xor_ln40_3_fu_794_p2, "xor_ln40_3_fu_794_p2");
    sc_trace(mVcdFile, xor_ln40_5_fu_803_p2, "xor_ln40_5_fu_803_p2");
    sc_trace(mVcdFile, xor_ln40_4_fu_798_p2, "xor_ln40_4_fu_798_p2");
    sc_trace(mVcdFile, xor_ln40_6_fu_808_p2, "xor_ln40_6_fu_808_p2");
    sc_trace(mVcdFile, xor_ln40_2_fu_788_p2, "xor_ln40_2_fu_788_p2");
    sc_trace(mVcdFile, xor_ln44_1_fu_828_p2, "xor_ln44_1_fu_828_p2");
    sc_trace(mVcdFile, xor_ln44_4_fu_842_p2, "xor_ln44_4_fu_842_p2");
    sc_trace(mVcdFile, xor_ln44_3_fu_838_p2, "xor_ln44_3_fu_838_p2");
    sc_trace(mVcdFile, xor_ln44_5_fu_847_p2, "xor_ln44_5_fu_847_p2");
    sc_trace(mVcdFile, xor_ln44_2_fu_832_p2, "xor_ln44_2_fu_832_p2");
    sc_trace(mVcdFile, xor_ln47_1_fu_863_p2, "xor_ln47_1_fu_863_p2");
    sc_trace(mVcdFile, xor_ln47_fu_859_p2, "xor_ln47_fu_859_p2");
    sc_trace(mVcdFile, xor_ln50_fu_873_p2, "xor_ln50_fu_873_p2");
    sc_trace(mVcdFile, xor_ln53_fu_883_p2, "xor_ln53_fu_883_p2");
    sc_trace(mVcdFile, xor_ln53_4_fu_903_p2, "xor_ln53_4_fu_903_p2");
    sc_trace(mVcdFile, xor_ln53_2_fu_893_p2, "xor_ln53_2_fu_893_p2");
    sc_trace(mVcdFile, xor_ln53_5_fu_908_p2, "xor_ln53_5_fu_908_p2");
    sc_trace(mVcdFile, xor_ln53_1_fu_887_p2, "xor_ln53_1_fu_887_p2");
    sc_trace(mVcdFile, xor_ln56_fu_920_p2, "xor_ln56_fu_920_p2");
    sc_trace(mVcdFile, xor_ln56_2_fu_929_p2, "xor_ln56_2_fu_929_p2");
    sc_trace(mVcdFile, xor_ln56_3_fu_933_p2, "xor_ln56_3_fu_933_p2");
    sc_trace(mVcdFile, xor_ln56_1_fu_924_p2, "xor_ln56_1_fu_924_p2");
    sc_trace(mVcdFile, xor_ln59_fu_945_p2, "xor_ln59_fu_945_p2");
    sc_trace(mVcdFile, xor_ln40_10_fu_958_p2, "xor_ln40_10_fu_958_p2");
    sc_trace(mVcdFile, xor_ln40_8_fu_954_p2, "xor_ln40_8_fu_954_p2");
    sc_trace(mVcdFile, xor_ln40_12_fu_968_p2, "xor_ln40_12_fu_968_p2");
    sc_trace(mVcdFile, xor_ln40_14_fu_978_p2, "xor_ln40_14_fu_978_p2");
    sc_trace(mVcdFile, xor_ln40_15_fu_983_p2, "xor_ln40_15_fu_983_p2");
    sc_trace(mVcdFile, xor_ln40_13_fu_973_p2, "xor_ln40_13_fu_973_p2");
    sc_trace(mVcdFile, xor_ln40_16_fu_989_p2, "xor_ln40_16_fu_989_p2");
    sc_trace(mVcdFile, xor_ln40_11_fu_962_p2, "xor_ln40_11_fu_962_p2");
    sc_trace(mVcdFile, xor_ln40_17_fu_995_p2, "xor_ln40_17_fu_995_p2");
    sc_trace(mVcdFile, xor_ln47_3_fu_1007_p2, "xor_ln47_3_fu_1007_p2");
    sc_trace(mVcdFile, xor_ln47_4_fu_1011_p2, "xor_ln47_4_fu_1011_p2");
    sc_trace(mVcdFile, xor_ln59_3_fu_1026_p2, "xor_ln59_3_fu_1026_p2");
    sc_trace(mVcdFile, xor_ln59_2_fu_1022_p2, "xor_ln59_2_fu_1022_p2");
    sc_trace(mVcdFile, xor_ln59_4_fu_1030_p2, "xor_ln59_4_fu_1030_p2");
    sc_trace(mVcdFile, xor_ln44_8_fu_1045_p2, "xor_ln44_8_fu_1045_p2");
    sc_trace(mVcdFile, xor_ln44_7_fu_1041_p2, "xor_ln44_7_fu_1041_p2");
    sc_trace(mVcdFile, xor_ln44_11_fu_1060_p2, "xor_ln44_11_fu_1060_p2");
    sc_trace(mVcdFile, xor_ln44_12_fu_1065_p2, "xor_ln44_12_fu_1065_p2");
    sc_trace(mVcdFile, xor_ln44_10_fu_1055_p2, "xor_ln44_10_fu_1055_p2");
    sc_trace(mVcdFile, xor_ln44_13_fu_1071_p2, "xor_ln44_13_fu_1071_p2");
    sc_trace(mVcdFile, xor_ln44_9_fu_1049_p2, "xor_ln44_9_fu_1049_p2");
    sc_trace(mVcdFile, xor_ln44_14_fu_1077_p2, "xor_ln44_14_fu_1077_p2");
    sc_trace(mVcdFile, xor_ln47_7_fu_1093_p2, "xor_ln47_7_fu_1093_p2");
    sc_trace(mVcdFile, xor_ln47_6_fu_1089_p2, "xor_ln47_6_fu_1089_p2");
    sc_trace(mVcdFile, xor_ln47_10_fu_1107_p2, "xor_ln47_10_fu_1107_p2");
    sc_trace(mVcdFile, xor_ln47_11_fu_1112_p2, "xor_ln47_11_fu_1112_p2");
    sc_trace(mVcdFile, xor_ln47_9_fu_1103_p2, "xor_ln47_9_fu_1103_p2");
    sc_trace(mVcdFile, xor_ln47_12_fu_1118_p2, "xor_ln47_12_fu_1118_p2");
    sc_trace(mVcdFile, xor_ln47_8_fu_1097_p2, "xor_ln47_8_fu_1097_p2");
    sc_trace(mVcdFile, xor_ln47_13_fu_1124_p2, "xor_ln47_13_fu_1124_p2");
    sc_trace(mVcdFile, xor_ln50_7_fu_1140_p2, "xor_ln50_7_fu_1140_p2");
    sc_trace(mVcdFile, xor_ln50_8_fu_1145_p2, "xor_ln50_8_fu_1145_p2");
    sc_trace(mVcdFile, xor_ln50_6_fu_1136_p2, "xor_ln50_6_fu_1136_p2");
    sc_trace(mVcdFile, xor_ln56_6_fu_1160_p2, "xor_ln56_6_fu_1160_p2");
    sc_trace(mVcdFile, xor_ln56_5_fu_1156_p2, "xor_ln56_5_fu_1156_p2");
    sc_trace(mVcdFile, xor_ln59_6_fu_1170_p2, "xor_ln59_6_fu_1170_p2");
    sc_trace(mVcdFile, xor_ln50_3_fu_1183_p2, "xor_ln50_3_fu_1183_p2");
    sc_trace(mVcdFile, xor_ln50_2_fu_1179_p2, "xor_ln50_2_fu_1179_p2");
    sc_trace(mVcdFile, xor_ln50_4_fu_1187_p2, "xor_ln50_4_fu_1187_p2");
    sc_trace(mVcdFile, xor_ln50_11_fu_1202_p2, "xor_ln50_11_fu_1202_p2");
    sc_trace(mVcdFile, xor_ln50_12_fu_1207_p2, "xor_ln50_12_fu_1207_p2");
    sc_trace(mVcdFile, xor_ln50_10_fu_1198_p2, "xor_ln50_10_fu_1198_p2");
    sc_trace(mVcdFile, xor_ln50_13_fu_1213_p2, "xor_ln50_13_fu_1213_p2");
    sc_trace(mVcdFile, xor_ln50_14_fu_1219_p2, "xor_ln50_14_fu_1219_p2");
    sc_trace(mVcdFile, xor_ln50_5_fu_1193_p2, "xor_ln50_5_fu_1193_p2");
    sc_trace(mVcdFile, xor_ln53_8_fu_1235_p2, "xor_ln53_8_fu_1235_p2");
    sc_trace(mVcdFile, xor_ln53_7_fu_1231_p2, "xor_ln53_7_fu_1231_p2");
    sc_trace(mVcdFile, xor_ln53_11_fu_1249_p2, "xor_ln53_11_fu_1249_p2");
    sc_trace(mVcdFile, xor_ln53_12_fu_1255_p2, "xor_ln53_12_fu_1255_p2");
    sc_trace(mVcdFile, xor_ln53_10_fu_1245_p2, "xor_ln53_10_fu_1245_p2");
    sc_trace(mVcdFile, xor_ln53_13_fu_1261_p2, "xor_ln53_13_fu_1261_p2");
    sc_trace(mVcdFile, xor_ln53_9_fu_1239_p2, "xor_ln53_9_fu_1239_p2");
    sc_trace(mVcdFile, xor_ln53_14_fu_1267_p2, "xor_ln53_14_fu_1267_p2");
    sc_trace(mVcdFile, xor_ln56_9_fu_1284_p2, "xor_ln56_9_fu_1284_p2");
    sc_trace(mVcdFile, xor_ln56_8_fu_1279_p2, "xor_ln56_8_fu_1279_p2");
    sc_trace(mVcdFile, xor_ln56_10_fu_1289_p2, "xor_ln56_10_fu_1289_p2");
    sc_trace(mVcdFile, xor_ln56_11_fu_1295_p2, "xor_ln56_11_fu_1295_p2");
    sc_trace(mVcdFile, xor_ln59_9_fu_1310_p2, "xor_ln59_9_fu_1310_p2");
    sc_trace(mVcdFile, xor_ln59_8_fu_1305_p2, "xor_ln59_8_fu_1305_p2");
    sc_trace(mVcdFile, xor_ln59_10_fu_1315_p2, "xor_ln59_10_fu_1315_p2");
    sc_trace(mVcdFile, xor_ln59_11_fu_1321_p2, "xor_ln59_11_fu_1321_p2");
    sc_trace(mVcdFile, zext_ln65_1_fu_1352_p1, "zext_ln65_1_fu_1352_p1");
    sc_trace(mVcdFile, trunc_ln65_fu_1361_p1, "trunc_ln65_fu_1361_p1");
    sc_trace(mVcdFile, shl_ln65_fu_1356_p2, "shl_ln65_fu_1356_p2");
    sc_trace(mVcdFile, tmp_fu_1371_p4, "tmp_fu_1371_p4");
    sc_trace(mVcdFile, or_ln65_fu_1365_p2, "or_ln65_fu_1365_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
    mHdltvinHandle.open("calc_crc8.hdltvin.dat");
    mHdltvoutHandle.open("calc_crc8.hdltvout.dat");
}

calc_crc8::~calc_crc8() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete D_U;
    delete NewCRC_U;
    delete C_U;
}

void calc_crc8::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())) {
        crc_res_0_reg_613 = crc_res_fu_1381_p3.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) {
        crc_res_0_reg_613 = ap_const_lv32_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln26_fu_625_p2.read(), ap_const_lv1_0))) {
        i_0_reg_562 = i_fu_631_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i_0_reg_562 = ap_const_lv6_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln26_fu_625_p2.read(), ap_const_lv1_1))) {
        i_1_reg_582 = ap_const_lv4_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln32_fu_661_p2.read()))) {
        i_1_reg_582 = i_3_fu_667_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())) {
        i_2_reg_602 = i_4_reg_1975.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) {
        i_2_reg_602 = ap_const_lv4_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln26_fu_625_p2.read(), ap_const_lv1_1))) {
        p_01_reg_593 = crc.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln32_fu_661_p2.read()))) {
        p_01_reg_593 = sext_ln34_fu_693_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln26_fu_625_p2.read(), ap_const_lv1_0))) {
        p_0_reg_573 = sext_ln28_fu_657_p1.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        p_0_reg_573 = data.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        C_load_1_reg_1693 = C_q0.read();
        C_load_2_reg_1700 = C_q1.read();
        D_load_20_reg_1710 = D_q1.read();
        D_load_21_reg_1716 = D_q0.read();
        xor_ln37_reg_1705 = xor_ln37_fu_697_p2.read();
        xor_ln40_7_reg_1744 = xor_ln40_7_fu_814_p2.read();
        xor_ln40_9_reg_1749 = xor_ln40_9_fu_820_p2.read();
        xor_ln40_reg_1737 = xor_ln40_fu_779_p2.read();
        xor_ln44_6_reg_1766 = xor_ln44_6_fu_853_p2.read();
        xor_ln44_reg_1760 = xor_ln44_fu_824_p2.read();
        xor_ln47_2_reg_1771 = xor_ln47_2_fu_867_p2.read();
        xor_ln50_1_reg_1776 = xor_ln50_1_fu_877_p2.read();
        xor_ln53_3_reg_1781 = xor_ln53_3_fu_898_p2.read();
        xor_ln53_6_reg_1786 = xor_ln53_6_fu_914_p2.read();
        xor_ln56_4_reg_1791 = xor_ln56_4_fu_939_p2.read();
        xor_ln59_1_reg_1796 = xor_ln59_1_fu_949_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        C_load_3_reg_1806 = C_q1.read();
        C_load_4_reg_1812 = C_q0.read();
        D_load_22_reg_1801 = D_q1.read();
        D_load_23_reg_1820 = D_q0.read();
        xor_ln47_5_reg_1842 = xor_ln47_5_fu_1017_p2.read();
        xor_ln59_5_reg_1847 = xor_ln59_5_fu_1036_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        C_load_5_reg_1864 = C_q1.read();
        D_load_24_reg_1852 = D_q1.read();
        D_load_25_reg_1858 = D_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        C_load_6_reg_1914 = C_q1.read();
        D_load_28_reg_1909 = D_q1.read();
        D_load_29_reg_1920 = D_q0.read();
        xor_ln50_9_reg_1937 = xor_ln50_9_fu_1150_p2.read();
        xor_ln56_7_reg_1947 = xor_ln56_7_fu_1164_p2.read();
        xor_ln59_7_reg_1952 = xor_ln59_7_fu_1174_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        C_load_reg_1652 = C_q0.read();
        D_load_18_reg_1670 = D_q1.read();
        D_load_19_reg_1677 = D_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        D_load_10_reg_1553 = D_q1.read();
        D_load_11_reg_1559 = D_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        D_load_12_reg_1576 = D_q1.read();
        D_load_13_reg_1584 = D_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        D_load_14_reg_1600 = D_q1.read();
        D_load_15_reg_1606 = D_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        D_load_16_reg_1628 = D_q1.read();
        D_load_17_reg_1635 = D_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        D_load_1_reg_1441 = D_q1.read();
        D_load_reg_1435 = D_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        D_load_26_reg_1880 = D_q1.read();
        D_load_27_reg_1887 = D_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        D_load_2_reg_1457 = D_q1.read();
        D_load_3_reg_1464 = D_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        D_load_4_reg_1480 = D_q1.read();
        D_load_5_reg_1487 = D_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        D_load_6_reg_1504 = D_q1.read();
        D_load_7_reg_1511 = D_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        D_load_8_reg_1528 = D_q1.read();
        D_load_9_reg_1536 = D_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read())) {
        i_4_reg_1975 = i_4_fu_1341_p2.read();
        zext_ln64_reg_1967 = zext_ln64_fu_1331_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read())) {
        xor_ln56_12_reg_1957 = xor_ln56_12_fu_1300_p2.read();
        xor_ln59_12_reg_1962 = xor_ln59_12_fu_1326_p2.read();
    }
}

void calc_crc8::thread_C_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        C_address0 =  (sc_lv<3>) (ap_const_lv64_3);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        C_address0 =  (sc_lv<3>) (ap_const_lv64_5);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        C_address0 =  (sc_lv<3>) (ap_const_lv64_6);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        C_address0 =  (sc_lv<3>) (ap_const_lv64_4);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        C_address0 =  (sc_lv<3>) (zext_ln33_fu_673_p1.read());
    } else {
        C_address0 = "XXX";
    }
}

void calc_crc8::thread_C_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        C_address1 =  (sc_lv<3>) (ap_const_lv64_2);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        C_address1 =  (sc_lv<3>) (ap_const_lv64_1);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        C_address1 =  (sc_lv<3>) (ap_const_lv64_0);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        C_address1 =  (sc_lv<3>) (ap_const_lv64_7);
    } else {
        C_address1 = "XXX";
    }
}

void calc_crc8::thread_C_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()))) {
        C_ce0 = ap_const_logic_1;
    } else {
        C_ce0 = ap_const_logic_0;
    }
}

void calc_crc8::thread_C_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()))) {
        C_ce1 = ap_const_logic_1;
    } else {
        C_ce1 = ap_const_logic_0;
    }
}

void calc_crc8::thread_C_d0() {
    C_d0 = p_01_reg_593.read().range(1-1, 0);
}

void calc_crc8::thread_C_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln32_fu_661_p2.read()))) {
        C_we0 = ap_const_logic_1;
    } else {
        C_we0 = ap_const_logic_0;
    }
}

void calc_crc8::thread_D_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        D_address0 =  (sc_lv<5>) (ap_const_lv64_5);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        D_address0 =  (sc_lv<5>) (ap_const_lv64_1B);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        D_address0 =  (sc_lv<5>) (ap_const_lv64_B);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        D_address0 =  (sc_lv<5>) (ap_const_lv64_2);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        D_address0 =  (sc_lv<5>) (ap_const_lv64_19);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        D_address0 =  (sc_lv<5>) (ap_const_lv64_9);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        D_address0 =  (sc_lv<5>) (ap_const_lv64_F);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        D_address0 =  (sc_lv<5>) (ap_const_lv64_14);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        D_address0 =  (sc_lv<5>) (ap_const_lv64_18);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        D_address0 =  (sc_lv<5>) (ap_const_lv64_0);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        D_address0 =  (sc_lv<5>) (ap_const_lv64_7);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        D_address0 =  (sc_lv<5>) (ap_const_lv64_C);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        D_address0 =  (sc_lv<5>) (ap_const_lv64_10);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        D_address0 =  (sc_lv<5>) (ap_const_lv64_13);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        D_address0 =  (sc_lv<5>) (ap_const_lv64_17);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        D_address0 =  (sc_lv<5>) (ap_const_lv64_1F);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        D_address0 =  (sc_lv<5>) (zext_ln27_fu_637_p1.read());
    } else {
        D_address0 =  (sc_lv<5>) ("XXXXX");
    }
}

void calc_crc8::thread_D_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        D_address1 =  (sc_lv<5>) (ap_const_lv64_4);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        D_address1 =  (sc_lv<5>) (ap_const_lv64_3);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        D_address1 =  (sc_lv<5>) (ap_const_lv64_1A);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        D_address1 =  (sc_lv<5>) (ap_const_lv64_A);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        D_address1 =  (sc_lv<5>) (ap_const_lv64_1);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        D_address1 =  (sc_lv<5>) (ap_const_lv64_D);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        D_address1 =  (sc_lv<5>) (ap_const_lv64_11);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        D_address1 =  (sc_lv<5>) (ap_const_lv64_16);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        D_address1 =  (sc_lv<5>) (ap_const_lv64_1D);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        D_address1 =  (sc_lv<5>) (ap_const_lv64_6);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        D_address1 =  (sc_lv<5>) (ap_const_lv64_8);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        D_address1 =  (sc_lv<5>) (ap_const_lv64_E);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        D_address1 =  (sc_lv<5>) (ap_const_lv64_12);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        D_address1 =  (sc_lv<5>) (ap_const_lv64_15);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        D_address1 =  (sc_lv<5>) (ap_const_lv64_1C);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        D_address1 =  (sc_lv<5>) (ap_const_lv64_1E);
    } else {
        D_address1 =  (sc_lv<5>) ("XXXXX");
    }
}

void calc_crc8::thread_D_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()))) {
        D_ce0 = ap_const_logic_1;
    } else {
        D_ce0 = ap_const_logic_0;
    }
}

void calc_crc8::thread_D_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()))) {
        D_ce1 = ap_const_logic_1;
    } else {
        D_ce1 = ap_const_logic_0;
    }
}

void calc_crc8::thread_D_d0() {
    D_d0 = p_0_reg_573.read().range(1-1, 0);
}

void calc_crc8::thread_D_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln26_fu_625_p2.read(), ap_const_lv1_0))) {
        D_we0 = ap_const_logic_1;
    } else {
        D_we0 = ap_const_logic_0;
    }
}

void calc_crc8::thread_NewCRC_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) {
        NewCRC_address0 =  (sc_lv<3>) (ap_const_lv64_7);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read())) {
        NewCRC_address0 =  (sc_lv<3>) (ap_const_lv64_4);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        NewCRC_address0 =  (sc_lv<3>) (ap_const_lv64_3);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        NewCRC_address0 =  (sc_lv<3>) (ap_const_lv64_2);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        NewCRC_address0 =  (sc_lv<3>) (ap_const_lv64_1);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        NewCRC_address0 =  (sc_lv<3>) (ap_const_lv64_0);
    } else {
        NewCRC_address0 = "XXX";
    }
}

void calc_crc8::thread_NewCRC_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read())) {
        NewCRC_address1 =  (sc_lv<3>) (zext_ln65_fu_1347_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) {
        NewCRC_address1 =  (sc_lv<3>) (ap_const_lv64_6);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read())) {
        NewCRC_address1 =  (sc_lv<3>) (ap_const_lv64_5);
    } else {
        NewCRC_address1 = "XXX";
    }
}

void calc_crc8::thread_NewCRC_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()))) {
        NewCRC_ce0 = ap_const_logic_1;
    } else {
        NewCRC_ce0 = ap_const_logic_0;
    }
}

void calc_crc8::thread_NewCRC_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()))) {
        NewCRC_ce1 = ap_const_logic_1;
    } else {
        NewCRC_ce1 = ap_const_logic_0;
    }
}

void calc_crc8::thread_NewCRC_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) {
        NewCRC_d0 = xor_ln59_12_reg_1962.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read())) {
        NewCRC_d0 = xor_ln50_15_fu_1224_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        NewCRC_d0 = xor_ln47_14_fu_1130_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        NewCRC_d0 = xor_ln44_15_fu_1083_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        NewCRC_d0 = xor_ln40_18_fu_1001_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        NewCRC_d0 = xor_ln37_15_fu_772_p2.read();
    } else {
        NewCRC_d0 =  (sc_lv<1>) ("X");
    }
}

void calc_crc8::thread_NewCRC_d1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) {
        NewCRC_d1 = xor_ln56_12_reg_1957.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read())) {
        NewCRC_d1 = xor_ln53_15_fu_1273_p2.read();
    } else {
        NewCRC_d1 =  (sc_lv<1>) ("X");
    }
}

void calc_crc8::thread_NewCRC_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()))) {
        NewCRC_we0 = ap_const_logic_1;
    } else {
        NewCRC_we0 = ap_const_logic_0;
    }
}

void calc_crc8::thread_NewCRC_we1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()))) {
        NewCRC_we1 = ap_const_logic_1;
    } else {
        NewCRC_we1 = ap_const_logic_0;
    }
}

void calc_crc8::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void calc_crc8::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void calc_crc8::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void calc_crc8::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[11];
}

void calc_crc8::thread_ap_CS_fsm_state13() {
    ap_CS_fsm_state13 = ap_CS_fsm.read()[12];
}

void calc_crc8::thread_ap_CS_fsm_state14() {
    ap_CS_fsm_state14 = ap_CS_fsm.read()[13];
}

void calc_crc8::thread_ap_CS_fsm_state15() {
    ap_CS_fsm_state15 = ap_CS_fsm.read()[14];
}

void calc_crc8::thread_ap_CS_fsm_state16() {
    ap_CS_fsm_state16 = ap_CS_fsm.read()[15];
}

void calc_crc8::thread_ap_CS_fsm_state17() {
    ap_CS_fsm_state17 = ap_CS_fsm.read()[16];
}

void calc_crc8::thread_ap_CS_fsm_state18() {
    ap_CS_fsm_state18 = ap_CS_fsm.read()[17];
}

void calc_crc8::thread_ap_CS_fsm_state19() {
    ap_CS_fsm_state19 = ap_CS_fsm.read()[18];
}

void calc_crc8::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void calc_crc8::thread_ap_CS_fsm_state20() {
    ap_CS_fsm_state20 = ap_CS_fsm.read()[19];
}

void calc_crc8::thread_ap_CS_fsm_state21() {
    ap_CS_fsm_state21 = ap_CS_fsm.read()[20];
}

void calc_crc8::thread_ap_CS_fsm_state22() {
    ap_CS_fsm_state22 = ap_CS_fsm.read()[21];
}

void calc_crc8::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void calc_crc8::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void calc_crc8::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void calc_crc8::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void calc_crc8::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void calc_crc8::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void calc_crc8::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void calc_crc8::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln64_fu_1335_p2.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void calc_crc8::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void calc_crc8::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln64_fu_1335_p2.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void calc_crc8::thread_ap_return() {
    ap_return = crc_res_0_reg_613.read();
}

void calc_crc8::thread_crc_res_fu_1381_p3() {
    crc_res_fu_1381_p3 = esl_concat<24,8>(tmp_fu_1371_p4.read(), or_ln65_fu_1365_p2.read());
}

void calc_crc8::thread_i_3_fu_667_p2() {
    i_3_fu_667_p2 = (!i_1_reg_582.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(i_1_reg_582.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void calc_crc8::thread_i_4_fu_1341_p2() {
    i_4_fu_1341_p2 = (!i_2_reg_602.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(i_2_reg_602.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void calc_crc8::thread_i_fu_631_p2() {
    i_fu_631_p2 = (!i_0_reg_562.read().is_01() || !ap_const_lv6_1.is_01())? sc_lv<6>(): (sc_biguint<6>(i_0_reg_562.read()) + sc_biguint<6>(ap_const_lv6_1));
}

void calc_crc8::thread_icmp_ln26_fu_625_p2() {
    icmp_ln26_fu_625_p2 = (!i_0_reg_562.read().is_01() || !ap_const_lv6_20.is_01())? sc_lv<1>(): sc_lv<1>(i_0_reg_562.read() == ap_const_lv6_20);
}

void calc_crc8::thread_icmp_ln32_fu_661_p2() {
    icmp_ln32_fu_661_p2 = (!i_1_reg_582.read().is_01() || !ap_const_lv4_8.is_01())? sc_lv<1>(): sc_lv<1>(i_1_reg_582.read() == ap_const_lv4_8);
}

void calc_crc8::thread_icmp_ln64_fu_1335_p2() {
    icmp_ln64_fu_1335_p2 = (!i_2_reg_602.read().is_01() || !ap_const_lv4_8.is_01())? sc_lv<1>(): sc_lv<1>(i_2_reg_602.read() == ap_const_lv4_8);
}

void calc_crc8::thread_or_ln65_fu_1365_p2() {
    or_ln65_fu_1365_p2 = (trunc_ln65_fu_1361_p1.read() | shl_ln65_fu_1356_p2.read());
}

void calc_crc8::thread_sext_ln28_fu_657_p1() {
    sext_ln28_fu_657_p1 = esl_sext<32,31>(trunc_ln1_fu_647_p4.read());
}

void calc_crc8::thread_sext_ln34_fu_693_p1() {
    sext_ln34_fu_693_p1 = esl_sext<32,31>(trunc_ln3_fu_683_p4.read());
}

void calc_crc8::thread_shl_ln65_fu_1356_p2() {
    shl_ln65_fu_1356_p2 = (!zext_ln64_reg_1967.read().is_01())? sc_lv<8>(): zext_ln65_1_fu_1352_p1.read() << (unsigned short)zext_ln64_reg_1967.read().to_uint();
}

void calc_crc8::thread_tmp_fu_1371_p4() {
    tmp_fu_1371_p4 = crc_res_0_reg_613.read().range(31, 8);
}

void calc_crc8::thread_trunc_ln1_fu_647_p4() {
    trunc_ln1_fu_647_p4 = p_0_reg_573.read().range(31, 1);
}

void calc_crc8::thread_trunc_ln3_fu_683_p4() {
    trunc_ln3_fu_683_p4 = p_01_reg_593.read().range(31, 1);
}

void calc_crc8::thread_trunc_ln65_fu_1361_p1() {
    trunc_ln65_fu_1361_p1 = crc_res_0_reg_613.read().range(8-1, 0);
}

void calc_crc8::thread_xor_ln37_10_fu_743_p2() {
    xor_ln37_10_fu_743_p2 = (xor_ln37_9_fu_739_p2.read() ^ xor_ln37_8_fu_735_p2.read());
}

void calc_crc8::thread_xor_ln37_11_fu_749_p2() {
    xor_ln37_11_fu_749_p2 = (C_load_reg_1652.read() ^ C_q0.read());
}

void calc_crc8::thread_xor_ln37_12_fu_754_p2() {
    xor_ln37_12_fu_754_p2 = (C_q1.read() ^ xor_ln37_fu_697_p2.read());
}

void calc_crc8::thread_xor_ln37_13_fu_760_p2() {
    xor_ln37_13_fu_760_p2 = (xor_ln37_12_fu_754_p2.read() ^ xor_ln37_11_fu_749_p2.read());
}

void calc_crc8::thread_xor_ln37_14_fu_766_p2() {
    xor_ln37_14_fu_766_p2 = (xor_ln37_13_fu_760_p2.read() ^ xor_ln37_10_fu_743_p2.read());
}

void calc_crc8::thread_xor_ln37_15_fu_772_p2() {
    xor_ln37_15_fu_772_p2 = (xor_ln37_14_fu_766_p2.read() ^ xor_ln37_7_fu_729_p2.read());
}

void calc_crc8::thread_xor_ln37_1_fu_701_p2() {
    xor_ln37_1_fu_701_p2 = (D_load_2_reg_1457.read() ^ D_load_3_reg_1464.read());
}

void calc_crc8::thread_xor_ln37_2_fu_705_p2() {
    xor_ln37_2_fu_705_p2 = (D_load_4_reg_1480.read() ^ D_load_5_reg_1487.read());
}

void calc_crc8::thread_xor_ln37_3_fu_709_p2() {
    xor_ln37_3_fu_709_p2 = (xor_ln37_2_fu_705_p2.read() ^ xor_ln37_1_fu_701_p2.read());
}

void calc_crc8::thread_xor_ln37_4_fu_715_p2() {
    xor_ln37_4_fu_715_p2 = (D_load_6_reg_1504.read() ^ D_load_7_reg_1511.read());
}

void calc_crc8::thread_xor_ln37_5_fu_719_p2() {
    xor_ln37_5_fu_719_p2 = (D_load_8_reg_1528.read() ^ D_load_9_reg_1536.read());
}

void calc_crc8::thread_xor_ln37_6_fu_723_p2() {
    xor_ln37_6_fu_723_p2 = (xor_ln37_5_fu_719_p2.read() ^ xor_ln37_4_fu_715_p2.read());
}

void calc_crc8::thread_xor_ln37_7_fu_729_p2() {
    xor_ln37_7_fu_729_p2 = (xor_ln37_6_fu_723_p2.read() ^ xor_ln37_3_fu_709_p2.read());
}

void calc_crc8::thread_xor_ln37_8_fu_735_p2() {
    xor_ln37_8_fu_735_p2 = (D_load_10_reg_1553.read() ^ D_load_11_reg_1559.read());
}

void calc_crc8::thread_xor_ln37_9_fu_739_p2() {
    xor_ln37_9_fu_739_p2 = (D_load_12_reg_1576.read() ^ D_load_13_reg_1584.read());
}

void calc_crc8::thread_xor_ln37_fu_697_p2() {
    xor_ln37_fu_697_p2 = (D_load_1_reg_1441.read() ^ D_load_reg_1435.read());
}

void calc_crc8::thread_xor_ln40_10_fu_958_p2() {
    xor_ln40_10_fu_958_p2 = (xor_ln40_9_reg_1749.read() ^ D_load_17_reg_1635.read());
}

void calc_crc8::thread_xor_ln40_11_fu_962_p2() {
    xor_ln40_11_fu_962_p2 = (xor_ln40_10_fu_958_p2.read() ^ xor_ln40_8_fu_954_p2.read());
}

void calc_crc8::thread_xor_ln40_12_fu_968_p2() {
    xor_ln40_12_fu_968_p2 = (D_load_21_reg_1716.read() ^ D_q1.read());
}

void calc_crc8::thread_xor_ln40_13_fu_973_p2() {
    xor_ln40_13_fu_973_p2 = (xor_ln40_12_fu_968_p2.read() ^ D_load_20_reg_1710.read());
}

void calc_crc8::thread_xor_ln40_14_fu_978_p2() {
    xor_ln40_14_fu_978_p2 = (C_q0.read() ^ xor_ln40_reg_1737.read());
}

void calc_crc8::thread_xor_ln40_15_fu_983_p2() {
    xor_ln40_15_fu_983_p2 = (xor_ln40_14_fu_978_p2.read() ^ C_q1.read());
}

void calc_crc8::thread_xor_ln40_16_fu_989_p2() {
    xor_ln40_16_fu_989_p2 = (xor_ln40_15_fu_983_p2.read() ^ xor_ln40_13_fu_973_p2.read());
}

void calc_crc8::thread_xor_ln40_17_fu_995_p2() {
    xor_ln40_17_fu_995_p2 = (xor_ln40_16_fu_989_p2.read() ^ xor_ln40_11_fu_962_p2.read());
}

void calc_crc8::thread_xor_ln40_18_fu_1001_p2() {
    xor_ln40_18_fu_1001_p2 = (xor_ln40_17_fu_995_p2.read() ^ xor_ln40_7_reg_1744.read());
}

void calc_crc8::thread_xor_ln40_1_fu_783_p2() {
    xor_ln40_1_fu_783_p2 = (xor_ln37_4_fu_715_p2.read() ^ D_load_4_reg_1480.read());
}

void calc_crc8::thread_xor_ln40_2_fu_788_p2() {
    xor_ln40_2_fu_788_p2 = (xor_ln40_1_fu_783_p2.read() ^ xor_ln37_1_fu_701_p2.read());
}

void calc_crc8::thread_xor_ln40_3_fu_794_p2() {
    xor_ln40_3_fu_794_p2 = (D_load_9_reg_1536.read() ^ D_load_12_reg_1576.read());
}

void calc_crc8::thread_xor_ln40_4_fu_798_p2() {
    xor_ln40_4_fu_798_p2 = (xor_ln40_3_fu_794_p2.read() ^ D_load_8_reg_1528.read());
}

void calc_crc8::thread_xor_ln40_5_fu_803_p2() {
    xor_ln40_5_fu_803_p2 = (xor_ln37_11_fu_749_p2.read() ^ D_load_13_reg_1584.read());
}

void calc_crc8::thread_xor_ln40_6_fu_808_p2() {
    xor_ln40_6_fu_808_p2 = (xor_ln40_5_fu_803_p2.read() ^ xor_ln40_4_fu_798_p2.read());
}

void calc_crc8::thread_xor_ln40_7_fu_814_p2() {
    xor_ln40_7_fu_814_p2 = (xor_ln40_6_fu_808_p2.read() ^ xor_ln40_2_fu_788_p2.read());
}

void calc_crc8::thread_xor_ln40_8_fu_954_p2() {
    xor_ln40_8_fu_954_p2 = (D_load_15_reg_1606.read() ^ D_load_16_reg_1628.read());
}

void calc_crc8::thread_xor_ln40_9_fu_820_p2() {
    xor_ln40_9_fu_820_p2 = (D_load_18_reg_1670.read() ^ D_load_19_reg_1677.read());
}

void calc_crc8::thread_xor_ln40_fu_779_p2() {
    xor_ln40_fu_779_p2 = (D_load_14_reg_1600.read() ^ D_load_1_reg_1441.read());
}

void calc_crc8::thread_xor_ln44_10_fu_1055_p2() {
    xor_ln44_10_fu_1055_p2 = (D_load_23_reg_1820.read() ^ D_q1.read());
}

void calc_crc8::thread_xor_ln44_11_fu_1060_p2() {
    xor_ln44_11_fu_1060_p2 = (C_q1.read() ^ xor_ln44_reg_1760.read());
}

void calc_crc8::thread_xor_ln44_12_fu_1065_p2() {
    xor_ln44_12_fu_1065_p2 = (xor_ln44_11_fu_1060_p2.read() ^ D_q0.read());
}

void calc_crc8::thread_xor_ln44_13_fu_1071_p2() {
    xor_ln44_13_fu_1071_p2 = (xor_ln44_12_fu_1065_p2.read() ^ xor_ln44_10_fu_1055_p2.read());
}

void calc_crc8::thread_xor_ln44_14_fu_1077_p2() {
    xor_ln44_14_fu_1077_p2 = (xor_ln44_13_fu_1071_p2.read() ^ xor_ln44_9_fu_1049_p2.read());
}

void calc_crc8::thread_xor_ln44_15_fu_1083_p2() {
    xor_ln44_15_fu_1083_p2 = (xor_ln44_14_fu_1077_p2.read() ^ xor_ln44_6_reg_1766.read());
}

void calc_crc8::thread_xor_ln44_1_fu_828_p2() {
    xor_ln44_1_fu_828_p2 = (D_load_10_reg_1553.read() ^ D_load_9_reg_1536.read());
}

void calc_crc8::thread_xor_ln44_2_fu_832_p2() {
    xor_ln44_2_fu_832_p2 = (xor_ln37_9_fu_739_p2.read() ^ xor_ln44_1_fu_828_p2.read());
}

void calc_crc8::thread_xor_ln44_3_fu_838_p2() {
    xor_ln44_3_fu_838_p2 = (C_load_reg_1652.read() ^ D_load_15_reg_1606.read());
}

void calc_crc8::thread_xor_ln44_4_fu_842_p2() {
    xor_ln44_4_fu_842_p2 = (xor_ln40_9_fu_820_p2.read() ^ D_load_16_reg_1628.read());
}

void calc_crc8::thread_xor_ln44_5_fu_847_p2() {
    xor_ln44_5_fu_847_p2 = (xor_ln44_4_fu_842_p2.read() ^ xor_ln44_3_fu_838_p2.read());
}

void calc_crc8::thread_xor_ln44_6_fu_853_p2() {
    xor_ln44_6_fu_853_p2 = (xor_ln44_5_fu_847_p2.read() ^ xor_ln44_2_fu_832_p2.read());
}

void calc_crc8::thread_xor_ln44_7_fu_1041_p2() {
    xor_ln44_7_fu_1041_p2 = (D_load_20_reg_1710.read() ^ D_load_22_reg_1801.read());
}

void calc_crc8::thread_xor_ln44_8_fu_1045_p2() {
    xor_ln44_8_fu_1045_p2 = (C_load_3_reg_1806.read() ^ C_load_4_reg_1812.read());
}

void calc_crc8::thread_xor_ln44_9_fu_1049_p2() {
    xor_ln44_9_fu_1049_p2 = (xor_ln44_8_fu_1045_p2.read() ^ xor_ln44_7_fu_1041_p2.read());
}

void calc_crc8::thread_xor_ln44_fu_824_p2() {
    xor_ln44_fu_824_p2 = (D_load_14_reg_1600.read() ^ D_load_2_reg_1457.read());
}

void calc_crc8::thread_xor_ln47_10_fu_1107_p2() {
    xor_ln47_10_fu_1107_p2 = (C_q1.read() ^ xor_ln40_reg_1737.read());
}

void calc_crc8::thread_xor_ln47_11_fu_1112_p2() {
    xor_ln47_11_fu_1112_p2 = (xor_ln47_10_fu_1107_p2.read() ^ D_q1.read());
}

void calc_crc8::thread_xor_ln47_12_fu_1118_p2() {
    xor_ln47_12_fu_1118_p2 = (xor_ln47_11_fu_1112_p2.read() ^ xor_ln47_9_fu_1103_p2.read());
}

void calc_crc8::thread_xor_ln47_13_fu_1124_p2() {
    xor_ln47_13_fu_1124_p2 = (xor_ln47_12_fu_1118_p2.read() ^ xor_ln47_8_fu_1097_p2.read());
}

void calc_crc8::thread_xor_ln47_14_fu_1130_p2() {
    xor_ln47_14_fu_1130_p2 = (xor_ln47_13_fu_1124_p2.read() ^ xor_ln47_5_reg_1842.read());
}

void calc_crc8::thread_xor_ln47_1_fu_863_p2() {
    xor_ln47_1_fu_863_p2 = (D_load_7_reg_1511.read() ^ D_load_8_reg_1528.read());
}

void calc_crc8::thread_xor_ln47_2_fu_867_p2() {
    xor_ln47_2_fu_867_p2 = (xor_ln47_1_fu_863_p2.read() ^ xor_ln47_fu_859_p2.read());
}

void calc_crc8::thread_xor_ln47_3_fu_1007_p2() {
    xor_ln47_3_fu_1007_p2 = (D_load_11_reg_1559.read() ^ C_load_1_reg_1693.read());
}

void calc_crc8::thread_xor_ln47_4_fu_1011_p2() {
    xor_ln47_4_fu_1011_p2 = (xor_ln40_13_fu_973_p2.read() ^ xor_ln47_3_fu_1007_p2.read());
}

void calc_crc8::thread_xor_ln47_5_fu_1017_p2() {
    xor_ln47_5_fu_1017_p2 = (xor_ln47_4_fu_1011_p2.read() ^ xor_ln47_2_reg_1771.read());
}

void calc_crc8::thread_xor_ln47_6_fu_1089_p2() {
    xor_ln47_6_fu_1089_p2 = (C_load_4_reg_1812.read() ^ D_load_23_reg_1820.read());
}

void calc_crc8::thread_xor_ln47_7_fu_1093_p2() {
    xor_ln47_7_fu_1093_p2 = (D_load_25_reg_1858.read() ^ C_load_5_reg_1864.read());
}

void calc_crc8::thread_xor_ln47_8_fu_1097_p2() {
    xor_ln47_8_fu_1097_p2 = (xor_ln47_7_fu_1093_p2.read() ^ xor_ln47_6_fu_1089_p2.read());
}

void calc_crc8::thread_xor_ln47_9_fu_1103_p2() {
    xor_ln47_9_fu_1103_p2 = (D_load_26_reg_1880.read() ^ D_load_27_reg_1887.read());
}

void calc_crc8::thread_xor_ln47_fu_859_p2() {
    xor_ln47_fu_859_p2 = (D_load_6_reg_1504.read() ^ D_load_3_reg_1464.read());
}

void calc_crc8::thread_xor_ln50_10_fu_1198_p2() {
    xor_ln50_10_fu_1198_p2 = (C_load_6_reg_1914.read() ^ D_load_29_reg_1920.read());
}

void calc_crc8::thread_xor_ln50_11_fu_1202_p2() {
    xor_ln50_11_fu_1202_p2 = (C_q0.read() ^ xor_ln37_reg_1705.read());
}

void calc_crc8::thread_xor_ln50_12_fu_1207_p2() {
    xor_ln50_12_fu_1207_p2 = (xor_ln50_11_fu_1202_p2.read() ^ D_q1.read());
}

void calc_crc8::thread_xor_ln50_13_fu_1213_p2() {
    xor_ln50_13_fu_1213_p2 = (xor_ln50_12_fu_1207_p2.read() ^ xor_ln50_10_fu_1198_p2.read());
}

void calc_crc8::thread_xor_ln50_14_fu_1219_p2() {
    xor_ln50_14_fu_1219_p2 = (xor_ln50_13_fu_1213_p2.read() ^ xor_ln50_9_reg_1937.read());
}

void calc_crc8::thread_xor_ln50_15_fu_1224_p2() {
    xor_ln50_15_fu_1224_p2 = (xor_ln50_14_fu_1219_p2.read() ^ xor_ln50_5_fu_1193_p2.read());
}

void calc_crc8::thread_xor_ln50_1_fu_877_p2() {
    xor_ln50_1_fu_877_p2 = (xor_ln44_1_fu_828_p2.read() ^ xor_ln50_fu_873_p2.read());
}

void calc_crc8::thread_xor_ln50_2_fu_1179_p2() {
    xor_ln50_2_fu_1179_p2 = (C_load_1_reg_1693.read() ^ C_load_2_reg_1700.read());
}

void calc_crc8::thread_xor_ln50_3_fu_1183_p2() {
    xor_ln50_3_fu_1183_p2 = (xor_ln40_9_reg_1749.read() ^ D_load_15_reg_1606.read());
}

void calc_crc8::thread_xor_ln50_4_fu_1187_p2() {
    xor_ln50_4_fu_1187_p2 = (xor_ln50_3_fu_1183_p2.read() ^ xor_ln50_2_fu_1179_p2.read());
}

void calc_crc8::thread_xor_ln50_5_fu_1193_p2() {
    xor_ln50_5_fu_1193_p2 = (xor_ln50_4_fu_1187_p2.read() ^ xor_ln50_1_reg_1776.read());
}

void calc_crc8::thread_xor_ln50_6_fu_1136_p2() {
    xor_ln50_6_fu_1136_p2 = (C_load_3_reg_1806.read() ^ D_load_24_reg_1852.read());
}

void calc_crc8::thread_xor_ln50_7_fu_1140_p2() {
    xor_ln50_7_fu_1140_p2 = (D_load_26_reg_1880.read() ^ D_q1.read());
}

void calc_crc8::thread_xor_ln50_8_fu_1145_p2() {
    xor_ln50_8_fu_1145_p2 = (xor_ln50_7_fu_1140_p2.read() ^ D_load_25_reg_1858.read());
}

void calc_crc8::thread_xor_ln50_9_fu_1150_p2() {
    xor_ln50_9_fu_1150_p2 = (xor_ln50_8_fu_1145_p2.read() ^ xor_ln50_6_fu_1136_p2.read());
}

void calc_crc8::thread_xor_ln50_fu_873_p2() {
    xor_ln50_fu_873_p2 = (D_load_5_reg_1487.read() ^ D_load_8_reg_1528.read());
}

void calc_crc8::thread_xor_ln53_10_fu_1245_p2() {
    xor_ln53_10_fu_1245_p2 = (D_load_28_reg_1909.read() ^ D_load_29_reg_1920.read());
}

void calc_crc8::thread_xor_ln53_11_fu_1249_p2() {
    xor_ln53_11_fu_1249_p2 = (C_q0.read() ^ D_q0.read());
}

void calc_crc8::thread_xor_ln53_12_fu_1255_p2() {
    xor_ln53_12_fu_1255_p2 = (xor_ln53_11_fu_1249_p2.read() ^ D_q1.read());
}

void calc_crc8::thread_xor_ln53_13_fu_1261_p2() {
    xor_ln53_13_fu_1261_p2 = (xor_ln53_12_fu_1255_p2.read() ^ xor_ln53_10_fu_1245_p2.read());
}

void calc_crc8::thread_xor_ln53_14_fu_1267_p2() {
    xor_ln53_14_fu_1267_p2 = (xor_ln53_13_fu_1261_p2.read() ^ xor_ln53_9_fu_1239_p2.read());
}

void calc_crc8::thread_xor_ln53_15_fu_1273_p2() {
    xor_ln53_15_fu_1273_p2 = (xor_ln53_14_fu_1267_p2.read() ^ xor_ln53_6_reg_1786.read());
}

void calc_crc8::thread_xor_ln53_1_fu_887_p2() {
    xor_ln53_1_fu_887_p2 = (xor_ln37_4_fu_715_p2.read() ^ xor_ln53_fu_883_p2.read());
}

void calc_crc8::thread_xor_ln53_2_fu_893_p2() {
    xor_ln53_2_fu_893_p2 = (C_load_reg_1652.read() ^ C_q1.read());
}

void calc_crc8::thread_xor_ln53_3_fu_898_p2() {
    xor_ln53_3_fu_898_p2 = (D_load_19_reg_1677.read() ^ D_q1.read());
}

void calc_crc8::thread_xor_ln53_4_fu_903_p2() {
    xor_ln53_4_fu_903_p2 = (xor_ln53_3_fu_898_p2.read() ^ D_load_17_reg_1635.read());
}

void calc_crc8::thread_xor_ln53_5_fu_908_p2() {
    xor_ln53_5_fu_908_p2 = (xor_ln53_4_fu_903_p2.read() ^ xor_ln53_2_fu_893_p2.read());
}

void calc_crc8::thread_xor_ln53_6_fu_914_p2() {
    xor_ln53_6_fu_914_p2 = (xor_ln53_5_fu_908_p2.read() ^ xor_ln53_1_fu_887_p2.read());
}

void calc_crc8::thread_xor_ln53_7_fu_1231_p2() {
    xor_ln53_7_fu_1231_p2 = (D_load_21_reg_1716.read() ^ D_load_23_reg_1820.read());
}

void calc_crc8::thread_xor_ln53_8_fu_1235_p2() {
    xor_ln53_8_fu_1235_p2 = (C_load_5_reg_1864.read() ^ D_load_27_reg_1887.read());
}

void calc_crc8::thread_xor_ln53_9_fu_1239_p2() {
    xor_ln53_9_fu_1239_p2 = (xor_ln53_8_fu_1235_p2.read() ^ xor_ln53_7_fu_1231_p2.read());
}

void calc_crc8::thread_xor_ln53_fu_883_p2() {
    xor_ln53_fu_883_p2 = (D_load_2_reg_1457.read() ^ D_load_reg_1435.read());
}

void calc_crc8::thread_xor_ln56_10_fu_1289_p2() {
    xor_ln56_10_fu_1289_p2 = (xor_ln56_9_fu_1284_p2.read() ^ xor_ln56_8_fu_1279_p2.read());
}

void calc_crc8::thread_xor_ln56_11_fu_1295_p2() {
    xor_ln56_11_fu_1295_p2 = (xor_ln56_10_fu_1289_p2.read() ^ xor_ln56_7_reg_1947.read());
}

void calc_crc8::thread_xor_ln56_12_fu_1300_p2() {
    xor_ln56_12_fu_1300_p2 = (xor_ln56_11_fu_1295_p2.read() ^ xor_ln56_4_reg_1791.read());
}

void calc_crc8::thread_xor_ln56_1_fu_924_p2() {
    xor_ln56_1_fu_924_p2 = (xor_ln56_fu_920_p2.read() ^ D_load_5_reg_1487.read());
}

void calc_crc8::thread_xor_ln56_2_fu_929_p2() {
    xor_ln56_2_fu_929_p2 = (D_load_12_reg_1576.read() ^ C_load_reg_1652.read());
}

void calc_crc8::thread_xor_ln56_3_fu_933_p2() {
    xor_ln56_3_fu_933_p2 = (xor_ln56_2_fu_929_p2.read() ^ xor_ln37_5_fu_719_p2.read());
}

void calc_crc8::thread_xor_ln56_4_fu_939_p2() {
    xor_ln56_4_fu_939_p2 = (xor_ln56_3_fu_933_p2.read() ^ xor_ln56_1_fu_924_p2.read());
}

void calc_crc8::thread_xor_ln56_5_fu_1156_p2() {
    xor_ln56_5_fu_1156_p2 = (D_load_18_reg_1670.read() ^ C_load_4_reg_1812.read());
}

void calc_crc8::thread_xor_ln56_6_fu_1160_p2() {
    xor_ln56_6_fu_1160_p2 = (D_load_24_reg_1852.read() ^ D_load_26_reg_1880.read());
}

void calc_crc8::thread_xor_ln56_7_fu_1164_p2() {
    xor_ln56_7_fu_1164_p2 = (xor_ln56_6_fu_1160_p2.read() ^ xor_ln56_5_fu_1156_p2.read());
}

void calc_crc8::thread_xor_ln56_8_fu_1279_p2() {
    xor_ln56_8_fu_1279_p2 = (C_load_6_reg_1914.read() ^ D_q1.read());
}

void calc_crc8::thread_xor_ln56_9_fu_1284_p2() {
    xor_ln56_9_fu_1284_p2 = (D_q0.read() ^ xor_ln44_reg_1760.read());
}

void calc_crc8::thread_xor_ln56_fu_920_p2() {
    xor_ln56_fu_920_p2 = (D_load_4_reg_1480.read() ^ D_load_7_reg_1511.read());
}

void calc_crc8::thread_xor_ln59_10_fu_1315_p2() {
    xor_ln59_10_fu_1315_p2 = (xor_ln59_9_fu_1310_p2.read() ^ xor_ln59_8_fu_1305_p2.read());
}

void calc_crc8::thread_xor_ln59_11_fu_1321_p2() {
    xor_ln59_11_fu_1321_p2 = (xor_ln59_10_fu_1315_p2.read() ^ xor_ln59_7_reg_1952.read());
}

void calc_crc8::thread_xor_ln59_12_fu_1326_p2() {
    xor_ln59_12_fu_1326_p2 = (xor_ln59_11_fu_1321_p2.read() ^ xor_ln59_5_reg_1847.read());
}

void calc_crc8::thread_xor_ln59_1_fu_949_p2() {
    xor_ln59_1_fu_949_p2 = (xor_ln59_fu_945_p2.read() ^ D_load_11_reg_1559.read());
}

void calc_crc8::thread_xor_ln59_2_fu_1022_p2() {
    xor_ln59_2_fu_1022_p2 = (C_load_1_reg_1693.read() ^ D_load_16_reg_1628.read());
}

void calc_crc8::thread_xor_ln59_3_fu_1026_p2() {
    xor_ln59_3_fu_1026_p2 = (D_load_17_reg_1635.read() ^ D_load_18_reg_1670.read());
}

void calc_crc8::thread_xor_ln59_4_fu_1030_p2() {
    xor_ln59_4_fu_1030_p2 = (xor_ln59_3_fu_1026_p2.read() ^ xor_ln59_2_fu_1022_p2.read());
}

void calc_crc8::thread_xor_ln59_5_fu_1036_p2() {
    xor_ln59_5_fu_1036_p2 = (xor_ln59_4_fu_1030_p2.read() ^ xor_ln59_1_reg_1796.read());
}

void calc_crc8::thread_xor_ln59_6_fu_1170_p2() {
    xor_ln59_6_fu_1170_p2 = (C_load_4_reg_1812.read() ^ D_load_27_reg_1887.read());
}

void calc_crc8::thread_xor_ln59_7_fu_1174_p2() {
    xor_ln59_7_fu_1174_p2 = (xor_ln59_6_fu_1170_p2.read() ^ xor_ln53_3_reg_1781.read());
}

void calc_crc8::thread_xor_ln59_8_fu_1305_p2() {
    xor_ln59_8_fu_1305_p2 = (D_load_29_reg_1920.read() ^ C_q0.read());
}

void calc_crc8::thread_xor_ln59_9_fu_1310_p2() {
    xor_ln59_9_fu_1310_p2 = (D_q0.read() ^ xor_ln40_reg_1737.read());
}

void calc_crc8::thread_xor_ln59_fu_945_p2() {
    xor_ln59_fu_945_p2 = (D_load_6_reg_1504.read() ^ D_load_12_reg_1576.read());
}

void calc_crc8::thread_zext_ln27_fu_637_p1() {
    zext_ln27_fu_637_p1 = esl_zext<64,6>(i_0_reg_562.read());
}

void calc_crc8::thread_zext_ln33_fu_673_p1() {
    zext_ln33_fu_673_p1 = esl_zext<64,4>(i_1_reg_582.read());
}

void calc_crc8::thread_zext_ln64_fu_1331_p1() {
    zext_ln64_fu_1331_p1 = esl_zext<8,4>(i_2_reg_602.read());
}

void calc_crc8::thread_zext_ln65_1_fu_1352_p1() {
    zext_ln65_1_fu_1352_p1 = esl_zext<8,1>(NewCRC_q1.read());
}

void calc_crc8::thread_zext_ln65_fu_1347_p1() {
    zext_ln65_fu_1347_p1 = esl_zext<64,4>(i_2_reg_602.read());
}

void calc_crc8::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln26_fu_625_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state2;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln32_fu_661_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state12;
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state13;
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_fsm_state14;
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_fsm_state15;
            break;
        case 16384 : 
            ap_NS_fsm = ap_ST_fsm_state16;
            break;
        case 32768 : 
            ap_NS_fsm = ap_ST_fsm_state17;
            break;
        case 65536 : 
            ap_NS_fsm = ap_ST_fsm_state18;
            break;
        case 131072 : 
            ap_NS_fsm = ap_ST_fsm_state19;
            break;
        case 262144 : 
            ap_NS_fsm = ap_ST_fsm_state20;
            break;
        case 524288 : 
            ap_NS_fsm = ap_ST_fsm_state21;
            break;
        case 1048576 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln64_fu_1335_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state22;
            }
            break;
        case 2097152 : 
            ap_NS_fsm = ap_ST_fsm_state21;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<22>) ("XXXXXXXXXXXXXXXXXXXXXX");
            break;
    }
}

void calc_crc8::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"data\" :  \"" << data.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"crc\" :  \"" << crc.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_return\" :  \"" << ap_return.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

