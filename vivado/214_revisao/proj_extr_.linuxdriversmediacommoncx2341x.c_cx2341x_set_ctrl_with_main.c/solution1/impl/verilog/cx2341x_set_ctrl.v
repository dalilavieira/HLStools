// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="cx2341x_set_ctrl,hls_ip_2019_1,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7k160t-fbg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=4.370000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=1017,HLS_SYN_LUT=1152,HLS_VERSION=2019_1}" *)

module cx2341x_set_ctrl (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        params_audio_sampling_freq,
        params_audio_sampling_freq_ap_vld,
        params_capabilities,
        params_audio_encoding,
        params_audio_encoding_ap_vld,
        params_audio_l2_bitrate,
        params_audio_l2_bitrate_ap_vld,
        params_audio_ac3_bitrate,
        params_audio_mode,
        params_audio_mode_ap_vld,
        params_audio_mode_extension,
        params_audio_mode_extension_ap_vld,
        params_audio_emphasis,
        params_audio_emphasis_ap_vld,
        params_audio_crc,
        params_audio_crc_ap_vld,
        params_audio_mute,
        params_audio_mute_ap_vld,
        params_video_aspect,
        params_video_aspect_ap_vld,
        params_video_gop_size_i,
        params_video_gop_size_o,
        params_video_gop_size_o_ap_vld,
        params_video_b_frames_i,
        params_video_b_frames_o,
        params_video_b_frames_o_ap_vld,
        params_video_gop_closure,
        params_video_gop_closure_ap_vld,
        params_video_bitrate_mode,
        params_video_bitrate_mode_ap_vld,
        params_video_bitrate,
        params_video_bitrate_ap_vld,
        params_video_bitrate_peak,
        params_video_bitrate_peak_ap_vld,
        params_video_temporal_decimation,
        params_video_temporal_decimation_ap_vld,
        params_video_mute,
        params_video_mute_ap_vld,
        params_video_mute_yuv,
        params_video_mute_yuv_ap_vld,
        params_stream_type,
        params_stream_type_ap_vld,
        params_stream_vbi_fmt,
        params_stream_vbi_fmt_ap_vld,
        params_video_spatial_filter_mode,
        params_video_spatial_filter_mode_ap_vld,
        params_video_spatial_filter,
        params_video_spatial_filter_ap_vld,
        params_video_luma_spatial_filter_type,
        params_video_luma_spatial_filter_type_ap_vld,
        params_video_chroma_spatial_filter_type,
        params_video_chroma_spatial_filter_type_ap_vld,
        params_video_temporal_filter_mode,
        params_video_temporal_filter_mode_ap_vld,
        params_video_temporal_filter,
        params_video_temporal_filter_ap_vld,
        params_video_median_filter_type,
        params_video_median_filter_type_ap_vld,
        params_video_luma_median_filter_top,
        params_video_luma_median_filter_top_ap_vld,
        params_video_luma_median_filter_bottom,
        params_video_luma_median_filter_bottom_ap_vld,
        params_video_chroma_median_filter_top,
        params_video_chroma_median_filter_top_ap_vld,
        params_video_chroma_median_filter_bottom,
        params_video_chroma_median_filter_bottom_ap_vld,
        params_stream_insert_nav_packets,
        params_stream_insert_nav_packets_ap_vld,
        params_video_encoding_i,
        params_video_encoding_o,
        params_video_encoding_o_ap_vld,
        busy,
        ctrl_id,
        ctrl_value_i,
        ctrl_value_o,
        ctrl_value_o_ap_vld,
        ap_return
);

parameter    ap_ST_fsm_state1 = 37'd1;
parameter    ap_ST_fsm_state2 = 37'd2;
parameter    ap_ST_fsm_state3 = 37'd4;
parameter    ap_ST_fsm_state4 = 37'd8;
parameter    ap_ST_fsm_state5 = 37'd16;
parameter    ap_ST_fsm_state6 = 37'd32;
parameter    ap_ST_fsm_state7 = 37'd64;
parameter    ap_ST_fsm_state8 = 37'd128;
parameter    ap_ST_fsm_state9 = 37'd256;
parameter    ap_ST_fsm_state10 = 37'd512;
parameter    ap_ST_fsm_state11 = 37'd1024;
parameter    ap_ST_fsm_state12 = 37'd2048;
parameter    ap_ST_fsm_state13 = 37'd4096;
parameter    ap_ST_fsm_state14 = 37'd8192;
parameter    ap_ST_fsm_state15 = 37'd16384;
parameter    ap_ST_fsm_state16 = 37'd32768;
parameter    ap_ST_fsm_state17 = 37'd65536;
parameter    ap_ST_fsm_state18 = 37'd131072;
parameter    ap_ST_fsm_state19 = 37'd262144;
parameter    ap_ST_fsm_state20 = 37'd524288;
parameter    ap_ST_fsm_state21 = 37'd1048576;
parameter    ap_ST_fsm_state22 = 37'd2097152;
parameter    ap_ST_fsm_state23 = 37'd4194304;
parameter    ap_ST_fsm_state24 = 37'd8388608;
parameter    ap_ST_fsm_state25 = 37'd16777216;
parameter    ap_ST_fsm_state26 = 37'd33554432;
parameter    ap_ST_fsm_state27 = 37'd67108864;
parameter    ap_ST_fsm_state28 = 37'd134217728;
parameter    ap_ST_fsm_state29 = 37'd268435456;
parameter    ap_ST_fsm_state30 = 37'd536870912;
parameter    ap_ST_fsm_state31 = 37'd1073741824;
parameter    ap_ST_fsm_state32 = 37'd2147483648;
parameter    ap_ST_fsm_state33 = 37'd4294967296;
parameter    ap_ST_fsm_state34 = 37'd8589934592;
parameter    ap_ST_fsm_state35 = 37'd17179869184;
parameter    ap_ST_fsm_state36 = 37'd34359738368;
parameter    ap_ST_fsm_state37 = 37'd68719476736;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [31:0] params_audio_sampling_freq;
output   params_audio_sampling_freq_ap_vld;
input  [31:0] params_capabilities;
output  [31:0] params_audio_encoding;
output   params_audio_encoding_ap_vld;
output  [31:0] params_audio_l2_bitrate;
output   params_audio_l2_bitrate_ap_vld;
input  [31:0] params_audio_ac3_bitrate;
output  [31:0] params_audio_mode;
output   params_audio_mode_ap_vld;
output  [31:0] params_audio_mode_extension;
output   params_audio_mode_extension_ap_vld;
output  [31:0] params_audio_emphasis;
output   params_audio_emphasis_ap_vld;
output  [31:0] params_audio_crc;
output   params_audio_crc_ap_vld;
output  [31:0] params_audio_mute;
output   params_audio_mute_ap_vld;
output  [31:0] params_video_aspect;
output   params_video_aspect_ap_vld;
input  [31:0] params_video_gop_size_i;
output  [31:0] params_video_gop_size_o;
output   params_video_gop_size_o_ap_vld;
input  [31:0] params_video_b_frames_i;
output  [31:0] params_video_b_frames_o;
output   params_video_b_frames_o_ap_vld;
output  [31:0] params_video_gop_closure;
output   params_video_gop_closure_ap_vld;
output  [31:0] params_video_bitrate_mode;
output   params_video_bitrate_mode_ap_vld;
output  [31:0] params_video_bitrate;
output   params_video_bitrate_ap_vld;
output  [31:0] params_video_bitrate_peak;
output   params_video_bitrate_peak_ap_vld;
output  [31:0] params_video_temporal_decimation;
output   params_video_temporal_decimation_ap_vld;
output  [31:0] params_video_mute;
output   params_video_mute_ap_vld;
output  [31:0] params_video_mute_yuv;
output   params_video_mute_yuv_ap_vld;
output  [31:0] params_stream_type;
output   params_stream_type_ap_vld;
output  [31:0] params_stream_vbi_fmt;
output   params_stream_vbi_fmt_ap_vld;
output  [31:0] params_video_spatial_filter_mode;
output   params_video_spatial_filter_mode_ap_vld;
output  [31:0] params_video_spatial_filter;
output   params_video_spatial_filter_ap_vld;
output  [31:0] params_video_luma_spatial_filter_type;
output   params_video_luma_spatial_filter_type_ap_vld;
output  [31:0] params_video_chroma_spatial_filter_type;
output   params_video_chroma_spatial_filter_type_ap_vld;
output  [31:0] params_video_temporal_filter_mode;
output   params_video_temporal_filter_mode_ap_vld;
output  [31:0] params_video_temporal_filter;
output   params_video_temporal_filter_ap_vld;
output  [31:0] params_video_median_filter_type;
output   params_video_median_filter_type_ap_vld;
output  [31:0] params_video_luma_median_filter_top;
output   params_video_luma_median_filter_top_ap_vld;
output  [31:0] params_video_luma_median_filter_bottom;
output   params_video_luma_median_filter_bottom_ap_vld;
output  [31:0] params_video_chroma_median_filter_top;
output   params_video_chroma_median_filter_top_ap_vld;
output  [31:0] params_video_chroma_median_filter_bottom;
output   params_video_chroma_median_filter_bottom_ap_vld;
output  [31:0] params_stream_insert_nav_packets;
output   params_stream_insert_nav_packets_ap_vld;
input  [31:0] params_video_encoding_i;
output  [31:0] params_video_encoding_o;
output   params_video_encoding_o_ap_vld;
input  [31:0] busy;
input  [31:0] ctrl_id;
input  [31:0] ctrl_value_i;
output  [31:0] ctrl_value_o;
output   ctrl_value_o_ap_vld;
output  [31:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg params_audio_sampling_freq_ap_vld;
reg params_audio_encoding_ap_vld;
reg params_audio_l2_bitrate_ap_vld;
reg params_audio_mode_ap_vld;
reg params_audio_mode_extension_ap_vld;
reg params_audio_emphasis_ap_vld;
reg params_audio_crc_ap_vld;
reg params_audio_mute_ap_vld;
reg params_video_aspect_ap_vld;
reg[31:0] params_video_gop_size_o;
reg params_video_gop_size_o_ap_vld;
reg[31:0] params_video_b_frames_o;
reg params_video_b_frames_o_ap_vld;
reg params_video_gop_closure_ap_vld;
reg[31:0] params_video_bitrate_mode;
reg params_video_bitrate_mode_ap_vld;
reg params_video_bitrate_ap_vld;
reg params_video_bitrate_peak_ap_vld;
reg params_video_temporal_decimation_ap_vld;
reg params_video_mute_ap_vld;
reg params_video_mute_yuv_ap_vld;
reg params_stream_type_ap_vld;
reg params_stream_vbi_fmt_ap_vld;
reg params_video_spatial_filter_mode_ap_vld;
reg params_video_spatial_filter_ap_vld;
reg params_video_luma_spatial_filter_type_ap_vld;
reg params_video_chroma_spatial_filter_type_ap_vld;
reg params_video_temporal_filter_mode_ap_vld;
reg params_video_temporal_filter_ap_vld;
reg params_video_median_filter_type_ap_vld;
reg params_video_luma_median_filter_top_ap_vld;
reg params_video_luma_median_filter_bottom_ap_vld;
reg params_video_chroma_median_filter_top_ap_vld;
reg params_video_chroma_median_filter_bottom_ap_vld;
reg params_stream_insert_nav_packets_ap_vld;
reg[31:0] params_video_encoding_o;
reg params_video_encoding_o_ap_vld;
reg[31:0] ctrl_value_o;
reg ctrl_value_o_ap_vld;

(* fsm_encoding = "none" *) reg   [36:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [31:0] ctrl_id_read_read_fu_164_p2;
wire   [0:0] icmp_ln66_fu_485_p2;
wire   [0:0] or_ln136_fu_514_p2;
wire   [31:0] b_1_fu_520_p2;
reg   [31:0] b_1_reg_600;
wire   [31:0] add_ln122_fu_526_p2;
reg   [31:0] add_ln122_reg_606;
wire   [31:0] b_fu_538_p2;
reg   [31:0] b_reg_612;
wire   [31:0] add_ln113_fu_544_p2;
reg   [31:0] add_ln113_reg_618;
wire   [31:0] sub_ln122_fu_556_p2;
wire    ap_CS_fsm_state36;
wire   [31:0] sub_ln113_fu_561_p2;
wire   [31:0] sub_ln125_fu_572_p2;
wire    ap_CS_fsm_state37;
wire   [0:0] icmp_ln124_fu_566_p2;
wire   [31:0] sub_ln116_fu_583_p2;
wire   [0:0] icmp_ln115_fu_577_p2;
reg   [31:0] storemerge_reg_464;
reg   [31:0] storemerge1_reg_475;
wire   [0:0] icmp_ln155_fu_491_p2;
wire   [0:0] icmp_ln136_fu_502_p2;
wire   [0:0] icmp_ln136_1_fu_508_p2;
wire   [31:0] grp_fu_532_p0;
wire   [31:0] grp_fu_532_p1;
wire   [31:0] grp_fu_550_p0;
wire   [31:0] grp_fu_550_p1;
wire   [31:0] grp_fu_532_p2;
wire   [31:0] grp_fu_550_p2;
reg    grp_fu_532_ap_start;
wire    grp_fu_532_ap_done;
reg    grp_fu_550_ap_start;
wire    grp_fu_550_ap_done;
reg   [36:0] ap_NS_fsm;
reg    ap_condition_632;

// power-on initialization
initial begin
#0 ap_CS_fsm = 37'd1;
end

cx2341x_set_ctrl_srem_32ns_32ns_32_36_seq_1 #(
    .ID( 1 ),
    .NUM_STAGE( 36 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
cx2341x_set_ctrl_srem_32ns_32ns_32_36_seq_1_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_532_ap_start),
    .done(grp_fu_532_ap_done),
    .din0(grp_fu_532_p0),
    .din1(grp_fu_532_p1),
    .ce(1'b1),
    .dout(grp_fu_532_p2)
);

cx2341x_set_ctrl_srem_32ns_32ns_32_36_seq_1 #(
    .ID( 1 ),
    .NUM_STAGE( 36 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
cx2341x_set_ctrl_srem_32ns_32ns_32_36_seq_1_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_550_ap_start),
    .done(grp_fu_550_ap_done),
    .din0(grp_fu_550_p0),
    .din1(grp_fu_550_p1),
    .ce(1'b1),
    .dout(grp_fu_550_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if ((ctrl_id_read_read_fu_164_p2 == 32'd133)) begin
        if (((1'b1 == ap_CS_fsm_state37) & (icmp_ln115_fu_577_p2 == 1'd1))) begin
            storemerge1_reg_475 <= sub_ln116_fu_583_p2;
        end else if ((1'b1 == ap_CS_fsm_state36)) begin
            storemerge1_reg_475 <= sub_ln113_fu_561_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((ctrl_id_read_read_fu_164_p2 == 32'd131)) begin
        if (((1'b1 == ap_CS_fsm_state37) & (icmp_ln124_fu_566_p2 == 1'd1))) begin
            storemerge_reg_464 <= sub_ln125_fu_572_p2;
        end else if ((1'b1 == ap_CS_fsm_state36)) begin
            storemerge_reg_464 <= sub_ln122_fu_556_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (ctrl_id_read_read_fu_164_p2 == 32'd133))) begin
        add_ln113_reg_618 <= add_ln113_fu_544_p2;
        b_reg_612 <= b_fu_538_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (ctrl_id_read_read_fu_164_p2 == 32'd131))) begin
        add_ln122_reg_606 <= add_ln122_fu_526_p2;
        b_1_reg_600 <= b_1_fu_520_p2;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state37) & (((~(ctrl_id_read_read_fu_164_p2 == 32'd131) & (icmp_ln115_fu_577_p2 == 1'd0)) | ((icmp_ln124_fu_566_p2 == 1'd0) & (ctrl_id_read_read_fu_164_p2 == 32'd131))) | (~(ctrl_id_read_read_fu_164_p2 == 32'd133) & ~(ctrl_id_read_read_fu_164_p2 == 32'd131))))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state37) & (((~(ctrl_id_read_read_fu_164_p2 == 32'd131) & (icmp_ln115_fu_577_p2 == 1'd0)) | ((icmp_ln124_fu_566_p2 == 1'd0) & (ctrl_id_read_read_fu_164_p2 == 32'd131))) | (~(ctrl_id_read_read_fu_164_p2 == 32'd133) & ~(ctrl_id_read_read_fu_164_p2 == 32'd131))))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state37) & (icmp_ln124_fu_566_p2 == 1'd0) & (ctrl_id_read_read_fu_164_p2 == 32'd131))) begin
        ctrl_value_o = storemerge_reg_464;
    end else begin
        ctrl_value_o = ctrl_value_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state37) & (icmp_ln124_fu_566_p2 == 1'd0) & (ctrl_id_read_read_fu_164_p2 == 32'd131))) begin
        ctrl_value_o_ap_vld = 1'b1;
    end else begin
        ctrl_value_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (ctrl_id_read_read_fu_164_p2 == 32'd131))) begin
        grp_fu_532_ap_start = 1'b1;
    end else begin
        grp_fu_532_ap_start = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (ctrl_id_read_read_fu_164_p2 == 32'd133))) begin
        grp_fu_550_ap_start = 1'b1;
    end else begin
        grp_fu_550_ap_start = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (ctrl_id_read_read_fu_164_p2 == 32'd159))) begin
        params_audio_crc_ap_vld = 1'b1;
    end else begin
        params_audio_crc_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (ctrl_id_read_read_fu_164_p2 == 32'd158))) begin
        params_audio_emphasis_ap_vld = 1'b1;
    end else begin
        params_audio_emphasis_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (icmp_ln66_fu_485_p2 == 1'd1) & (ctrl_id_read_read_fu_164_p2 == 32'd157))) begin
        params_audio_encoding_ap_vld = 1'b1;
    end else begin
        params_audio_encoding_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (icmp_ln66_fu_485_p2 == 1'd1) & (ctrl_id_read_read_fu_164_p2 == 32'd156))) begin
        params_audio_l2_bitrate_ap_vld = 1'b1;
    end else begin
        params_audio_l2_bitrate_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (ctrl_id_read_read_fu_164_p2 == 32'd155))) begin
        params_audio_mode_ap_vld = 1'b1;
    end else begin
        params_audio_mode_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (ctrl_id_read_read_fu_164_p2 == 32'd154))) begin
        params_audio_mode_extension_ap_vld = 1'b1;
    end else begin
        params_audio_mode_extension_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (ctrl_id_read_read_fu_164_p2 == 32'd153))) begin
        params_audio_mute_ap_vld = 1'b1;
    end else begin
        params_audio_mute_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (icmp_ln66_fu_485_p2 == 1'd1) & (ctrl_id_read_read_fu_164_p2 == 32'd152))) begin
        params_audio_sampling_freq_ap_vld = 1'b1;
    end else begin
        params_audio_sampling_freq_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (ctrl_id_read_read_fu_164_p2 == 32'd151))) begin
        params_stream_insert_nav_packets_ap_vld = 1'b1;
    end else begin
        params_stream_insert_nav_packets_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (icmp_ln66_fu_485_p2 == 1'd1) & (ctrl_id_read_read_fu_164_p2 == 32'd139))) begin
        params_stream_type_ap_vld = 1'b1;
    end else begin
        params_stream_type_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (ctrl_id_read_read_fu_164_p2 == 32'd138))) begin
        params_stream_vbi_fmt_ap_vld = 1'b1;
    end else begin
        params_stream_vbi_fmt_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (ctrl_id_read_read_fu_164_p2 == 32'd137))) begin
        params_video_aspect_ap_vld = 1'b1;
    end else begin
        params_video_aspect_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (ctrl_id_read_read_fu_164_p2 == 32'd133))) begin
        params_video_b_frames_o = ctrl_value_i;
    end else begin
        params_video_b_frames_o = params_video_b_frames_i;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (ctrl_id_read_read_fu_164_p2 == 32'd133))) begin
        params_video_b_frames_o_ap_vld = 1'b1;
    end else begin
        params_video_b_frames_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (icmp_ln66_fu_485_p2 == 1'd1) & (ctrl_id_read_read_fu_164_p2 == 32'd136))) begin
        params_video_bitrate_ap_vld = 1'b1;
    end else begin
        params_video_bitrate_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_632)) begin
        if (((or_ln136_fu_514_p2 == 1'd1) & (ctrl_id_read_read_fu_164_p2 == 32'd135))) begin
            params_video_bitrate_mode = ctrl_value_i;
        end else if ((ctrl_id_read_read_fu_164_p2 == 32'd139)) begin
            params_video_bitrate_mode = 32'd0;
        end else begin
            params_video_bitrate_mode = 'bx;
        end
    end else begin
        params_video_bitrate_mode = 'bx;
    end
end

always @ (*) begin
    if ((((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (icmp_ln66_fu_485_p2 == 1'd1) & (ctrl_id_read_read_fu_164_p2 == 32'd139)) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (or_ln136_fu_514_p2 == 1'd1) & (icmp_ln66_fu_485_p2 == 1'd1) & (ctrl_id_read_read_fu_164_p2 == 32'd135)))) begin
        params_video_bitrate_mode_ap_vld = 1'b1;
    end else begin
        params_video_bitrate_mode_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (icmp_ln66_fu_485_p2 == 1'd1) & (ctrl_id_read_read_fu_164_p2 == 32'd134))) begin
        params_video_bitrate_peak_ap_vld = 1'b1;
    end else begin
        params_video_bitrate_peak_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (ctrl_id_read_read_fu_164_p2 == 32'd150))) begin
        params_video_chroma_median_filter_bottom_ap_vld = 1'b1;
    end else begin
        params_video_chroma_median_filter_bottom_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (ctrl_id_read_read_fu_164_p2 == 32'd149))) begin
        params_video_chroma_median_filter_top_ap_vld = 1'b1;
    end else begin
        params_video_chroma_median_filter_top_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (ctrl_id_read_read_fu_164_p2 == 32'd148))) begin
        params_video_chroma_spatial_filter_type_ap_vld = 1'b1;
    end else begin
        params_video_chroma_spatial_filter_type_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (icmp_ln66_fu_485_p2 == 1'd1) & (ctrl_id_read_read_fu_164_p2 == 32'd139))) begin
        params_video_encoding_o = 32'd0;
    end else begin
        params_video_encoding_o = params_video_encoding_i;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (icmp_ln66_fu_485_p2 == 1'd1) & (ctrl_id_read_read_fu_164_p2 == 32'd139))) begin
        params_video_encoding_o_ap_vld = 1'b1;
    end else begin
        params_video_encoding_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (ctrl_id_read_read_fu_164_p2 == 32'd132))) begin
        params_video_gop_closure_ap_vld = 1'b1;
    end else begin
        params_video_gop_closure_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        if (((icmp_ln115_fu_577_p2 == 1'd0) & (ctrl_id_read_read_fu_164_p2 == 32'd133))) begin
            params_video_gop_size_o = storemerge1_reg_475;
        end else if (((icmp_ln124_fu_566_p2 == 1'd0) & (ctrl_id_read_read_fu_164_p2 == 32'd131))) begin
            params_video_gop_size_o = storemerge_reg_464;
        end else begin
            params_video_gop_size_o = params_video_gop_size_i;
        end
    end else begin
        params_video_gop_size_o = params_video_gop_size_i;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state37) & (icmp_ln115_fu_577_p2 == 1'd0) & (ctrl_id_read_read_fu_164_p2 == 32'd133)) | ((1'b1 == ap_CS_fsm_state37) & (icmp_ln124_fu_566_p2 == 1'd0) & (ctrl_id_read_read_fu_164_p2 == 32'd131)))) begin
        params_video_gop_size_o_ap_vld = 1'b1;
    end else begin
        params_video_gop_size_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (ctrl_id_read_read_fu_164_p2 == 32'd147))) begin
        params_video_luma_median_filter_bottom_ap_vld = 1'b1;
    end else begin
        params_video_luma_median_filter_bottom_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (ctrl_id_read_read_fu_164_p2 == 32'd146))) begin
        params_video_luma_median_filter_top_ap_vld = 1'b1;
    end else begin
        params_video_luma_median_filter_top_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (ctrl_id_read_read_fu_164_p2 == 32'd145))) begin
        params_video_luma_spatial_filter_type_ap_vld = 1'b1;
    end else begin
        params_video_luma_spatial_filter_type_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (ctrl_id_read_read_fu_164_p2 == 32'd144))) begin
        params_video_median_filter_type_ap_vld = 1'b1;
    end else begin
        params_video_median_filter_type_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (ctrl_id_read_read_fu_164_p2 == 32'd130))) begin
        params_video_mute_ap_vld = 1'b1;
    end else begin
        params_video_mute_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (ctrl_id_read_read_fu_164_p2 == 32'd129))) begin
        params_video_mute_yuv_ap_vld = 1'b1;
    end else begin
        params_video_mute_yuv_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (ctrl_id_read_read_fu_164_p2 == 32'd143))) begin
        params_video_spatial_filter_ap_vld = 1'b1;
    end else begin
        params_video_spatial_filter_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (ctrl_id_read_read_fu_164_p2 == 32'd142))) begin
        params_video_spatial_filter_mode_ap_vld = 1'b1;
    end else begin
        params_video_spatial_filter_mode_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (ctrl_id_read_read_fu_164_p2 == 32'd128))) begin
        params_video_temporal_decimation_ap_vld = 1'b1;
    end else begin
        params_video_temporal_decimation_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (ctrl_id_read_read_fu_164_p2 == 32'd141))) begin
        params_video_temporal_filter_ap_vld = 1'b1;
    end else begin
        params_video_temporal_filter_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (ctrl_id_read_read_fu_164_p2 == 32'd140))) begin
        params_video_temporal_filter_mode_ap_vld = 1'b1;
    end else begin
        params_video_temporal_filter_mode_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~(ctrl_id_read_read_fu_164_p2 == 32'd133) & ~(ctrl_id_read_read_fu_164_p2 == 32'd131) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state37;
            end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & ((ctrl_id_read_read_fu_164_p2 == 32'd133) | (ctrl_id_read_read_fu_164_p2 == 32'd131)))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            if (((1'b1 == ap_CS_fsm_state37) & (((~(ctrl_id_read_read_fu_164_p2 == 32'd131) & (icmp_ln115_fu_577_p2 == 1'd0)) | ((icmp_ln124_fu_566_p2 == 1'd0) & (ctrl_id_read_read_fu_164_p2 == 32'd131))) | (~(ctrl_id_read_read_fu_164_p2 == 32'd133) & ~(ctrl_id_read_read_fu_164_p2 == 32'd131))))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state37;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln113_fu_544_p2 = (params_video_gop_size_i + ctrl_value_i);

assign add_ln122_fu_526_p2 = (ctrl_value_i + params_video_b_frames_i);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd36];

always @ (*) begin
    ap_condition_632 = ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (icmp_ln66_fu_485_p2 == 1'd1));
end

assign ap_return = 32'd0;

assign b_1_fu_520_p2 = (params_video_b_frames_i + 32'd1);

assign b_fu_538_p2 = (ctrl_value_i + 32'd1);

assign ctrl_id_read_read_fu_164_p2 = ctrl_id;

assign grp_fu_532_p0 = (ctrl_value_i + params_video_b_frames_i);

assign grp_fu_532_p1 = (params_video_b_frames_i + 32'd1);

assign grp_fu_550_p0 = (params_video_gop_size_i + ctrl_value_i);

assign grp_fu_550_p1 = (ctrl_value_i + 32'd1);

assign icmp_ln115_fu_577_p2 = (($signed(storemerge1_reg_475) > $signed(32'd34)) ? 1'b1 : 1'b0);

assign icmp_ln124_fu_566_p2 = (($signed(storemerge_reg_464) > $signed(32'd34)) ? 1'b1 : 1'b0);

assign icmp_ln136_1_fu_508_p2 = ((ctrl_value_i == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln136_fu_502_p2 = ((params_video_encoding_i != 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln155_fu_491_p2 = ((ctrl_value_i != 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln66_fu_485_p2 = ((busy == 32'd0) ? 1'b1 : 1'b0);

assign or_ln136_fu_514_p2 = (icmp_ln136_fu_502_p2 | icmp_ln136_1_fu_508_p2);

assign params_audio_crc = ctrl_value_i;

assign params_audio_emphasis = ctrl_value_i;

assign params_audio_encoding = ctrl_value_i;

assign params_audio_l2_bitrate = ctrl_value_i;

assign params_audio_mode = ctrl_value_i;

assign params_audio_mode_extension = ctrl_value_i;

assign params_audio_mute = ctrl_value_i;

assign params_audio_sampling_freq = ctrl_value_i;

assign params_stream_insert_nav_packets = ctrl_value_i;

assign params_stream_type = ctrl_value_i;

assign params_stream_vbi_fmt = ctrl_value_i;

assign params_video_aspect = ctrl_value_i;

assign params_video_bitrate = ctrl_value_i;

assign params_video_bitrate_peak = ctrl_value_i;

assign params_video_chroma_median_filter_bottom = ctrl_value_i;

assign params_video_chroma_median_filter_top = ctrl_value_i;

assign params_video_chroma_spatial_filter_type = ctrl_value_i;

assign params_video_gop_closure = ctrl_value_i;

assign params_video_luma_median_filter_bottom = ctrl_value_i;

assign params_video_luma_median_filter_top = ctrl_value_i;

assign params_video_luma_spatial_filter_type = ctrl_value_i;

assign params_video_median_filter_type = ctrl_value_i;

assign params_video_mute = icmp_ln155_fu_491_p2;

assign params_video_mute_yuv = ctrl_value_i;

assign params_video_spatial_filter = ctrl_value_i;

assign params_video_spatial_filter_mode = ctrl_value_i;

assign params_video_temporal_decimation = ctrl_value_i;

assign params_video_temporal_filter = ctrl_value_i;

assign params_video_temporal_filter_mode = ctrl_value_i;

assign sub_ln113_fu_561_p2 = (add_ln113_reg_618 - grp_fu_550_p2);

assign sub_ln116_fu_583_p2 = (storemerge1_reg_475 - b_reg_612);

assign sub_ln122_fu_556_p2 = (add_ln122_reg_606 - grp_fu_532_p2);

assign sub_ln125_fu_572_p2 = (storemerge_reg_464 - b_1_reg_600);

endmodule //cx2341x_set_ctrl
