-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2019.1
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity init_dlist_pointers is
port (
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    table_Viewport : OUT STD_LOGIC_VECTOR (31 downto 0);
    table_Viewport_ap_vld : OUT STD_LOGIC;
    table_VertexPointer : OUT STD_LOGIC_VECTOR (31 downto 0);
    table_VertexPointer_ap_vld : OUT STD_LOGIC;
    table_Vertex3fv : OUT STD_LOGIC_VECTOR (31 downto 0);
    table_Vertex3fv_ap_vld : OUT STD_LOGIC;
    table_Vertex4f : OUT STD_LOGIC_VECTOR (31 downto 0);
    table_Vertex4f_ap_vld : OUT STD_LOGIC;
    table_Vertex3f : OUT STD_LOGIC_VECTOR (31 downto 0);
    table_Vertex3f_ap_vld : OUT STD_LOGIC;
    table_Vertex2f : OUT STD_LOGIC_VECTOR (31 downto 0);
    table_Vertex2f_ap_vld : OUT STD_LOGIC;
    table_Translatef : OUT STD_LOGIC_VECTOR (31 downto 0);
    table_Translatef_ap_vld : OUT STD_LOGIC;
    table_TexParameterfv : OUT STD_LOGIC_VECTOR (31 downto 0);
    table_TexParameterfv_ap_vld : OUT STD_LOGIC;
    table_TexSubImage2D : OUT STD_LOGIC_VECTOR (31 downto 0);
    table_TexSubImage2D_ap_vld : OUT STD_LOGIC;
    table_TexSubImage1D : OUT STD_LOGIC_VECTOR (31 downto 0);
    table_TexSubImage1D_ap_vld : OUT STD_LOGIC;
    table_TexImage2D : OUT STD_LOGIC_VECTOR (31 downto 0);
    table_TexImage2D_ap_vld : OUT STD_LOGIC;
    table_TexImage1D : OUT STD_LOGIC_VECTOR (31 downto 0);
    table_TexImage1D_ap_vld : OUT STD_LOGIC;
    table_TexGenfv : OUT STD_LOGIC_VECTOR (31 downto 0);
    table_TexGenfv_ap_vld : OUT STD_LOGIC;
    table_TexEnvfv : OUT STD_LOGIC_VECTOR (31 downto 0);
    table_TexEnvfv_ap_vld : OUT STD_LOGIC;
    table_TexCoordPointer : OUT STD_LOGIC_VECTOR (31 downto 0);
    table_TexCoordPointer_ap_vld : OUT STD_LOGIC;
    table_TexCoord4f : OUT STD_LOGIC_VECTOR (31 downto 0);
    table_TexCoord4f_ap_vld : OUT STD_LOGIC;
    table_TexCoord2f : OUT STD_LOGIC_VECTOR (31 downto 0);
    table_TexCoord2f_ap_vld : OUT STD_LOGIC;
    table_StencilOp : OUT STD_LOGIC_VECTOR (31 downto 0);
    table_StencilOp_ap_vld : OUT STD_LOGIC;
    table_StencilMask : OUT STD_LOGIC_VECTOR (31 downto 0);
    table_StencilMask_ap_vld : OUT STD_LOGIC;
    table_StencilFunc : OUT STD_LOGIC_VECTOR (31 downto 0);
    table_StencilFunc_ap_vld : OUT STD_LOGIC;
    table_ShadeModel : OUT STD_LOGIC_VECTOR (31 downto 0);
    table_ShadeModel_ap_vld : OUT STD_LOGIC;
    table_SelectBuffer : OUT STD_LOGIC_VECTOR (31 downto 0);
    table_SelectBuffer_ap_vld : OUT STD_LOGIC;
    table_Scissor : OUT STD_LOGIC_VECTOR (31 downto 0);
    table_Scissor_ap_vld : OUT STD_LOGIC;
    table_Scalef : OUT STD_LOGIC_VECTOR (31 downto 0);
    table_Scalef_ap_vld : OUT STD_LOGIC;
    table_Rotatef : OUT STD_LOGIC_VECTOR (31 downto 0);
    table_Rotatef_ap_vld : OUT STD_LOGIC;
    table_RenderMode : OUT STD_LOGIC_VECTOR (31 downto 0);
    table_RenderMode_ap_vld : OUT STD_LOGIC;
    table_Rectf : OUT STD_LOGIC_VECTOR (31 downto 0);
    table_Rectf_ap_vld : OUT STD_LOGIC;
    table_ReadPixels : OUT STD_LOGIC_VECTOR (31 downto 0);
    table_ReadPixels_ap_vld : OUT STD_LOGIC;
    table_ReadBuffer : OUT STD_LOGIC_VECTOR (31 downto 0);
    table_ReadBuffer_ap_vld : OUT STD_LOGIC;
    table_RasterPos4f : OUT STD_LOGIC_VECTOR (31 downto 0);
    table_RasterPos4f_ap_vld : OUT STD_LOGIC;
    table_PushName : OUT STD_LOGIC_VECTOR (31 downto 0);
    table_PushName_ap_vld : OUT STD_LOGIC;
    table_PushMatrix : OUT STD_LOGIC_VECTOR (31 downto 0);
    table_PushMatrix_ap_vld : OUT STD_LOGIC;
    table_PushClientAttrib : OUT STD_LOGIC_VECTOR (31 downto 0);
    table_PushClientAttrib_ap_vld : OUT STD_LOGIC;
    table_PushAttrib : OUT STD_LOGIC_VECTOR (31 downto 0);
    table_PushAttrib_ap_vld : OUT STD_LOGIC;
    table_PrioritizeTextures : OUT STD_LOGIC_VECTOR (31 downto 0);
    table_PrioritizeTextures_ap_vld : OUT STD_LOGIC;
    table_PopName : OUT STD_LOGIC_VECTOR (31 downto 0);
    table_PopName_ap_vld : OUT STD_LOGIC;
    table_PopMatrix : OUT STD_LOGIC_VECTOR (31 downto 0);
    table_PopMatrix_ap_vld : OUT STD_LOGIC;
    table_PopClientAttrib : OUT STD_LOGIC_VECTOR (31 downto 0);
    table_PopClientAttrib_ap_vld : OUT STD_LOGIC;
    table_PopAttrib : OUT STD_LOGIC_VECTOR (31 downto 0);
    table_PopAttrib_ap_vld : OUT STD_LOGIC;
    table_PolygonStipple : OUT STD_LOGIC_VECTOR (31 downto 0);
    table_PolygonStipple_ap_vld : OUT STD_LOGIC;
    table_PolygonOffset : OUT STD_LOGIC_VECTOR (31 downto 0);
    table_PolygonOffset_ap_vld : OUT STD_LOGIC;
    table_PolygonMode : OUT STD_LOGIC_VECTOR (31 downto 0);
    table_PolygonMode_ap_vld : OUT STD_LOGIC;
    table_PointSize : OUT STD_LOGIC_VECTOR (31 downto 0);
    table_PointSize_ap_vld : OUT STD_LOGIC;
    table_PixelZoom : OUT STD_LOGIC_VECTOR (31 downto 0);
    table_PixelZoom_ap_vld : OUT STD_LOGIC;
    table_PixelTransferf : OUT STD_LOGIC_VECTOR (31 downto 0);
    table_PixelTransferf_ap_vld : OUT STD_LOGIC;
    table_PixelStorei : OUT STD_LOGIC_VECTOR (31 downto 0);
    table_PixelStorei_ap_vld : OUT STD_LOGIC;
    table_PixelMapfv : OUT STD_LOGIC_VECTOR (31 downto 0);
    table_PixelMapfv_ap_vld : OUT STD_LOGIC;
    table_PassThrough : OUT STD_LOGIC_VECTOR (31 downto 0);
    table_PassThrough_ap_vld : OUT STD_LOGIC;
    table_Ortho : OUT STD_LOGIC_VECTOR (31 downto 0);
    table_Ortho_ap_vld : OUT STD_LOGIC;
    table_NormalPointer : OUT STD_LOGIC_VECTOR (31 downto 0);
    table_NormalPointer_ap_vld : OUT STD_LOGIC;
    table_Normal3fv : OUT STD_LOGIC_VECTOR (31 downto 0);
    table_Normal3fv_ap_vld : OUT STD_LOGIC;
    table_Normal3f : OUT STD_LOGIC_VECTOR (31 downto 0);
    table_Normal3f_ap_vld : OUT STD_LOGIC;
    table_NewList : OUT STD_LOGIC_VECTOR (31 downto 0);
    table_NewList_ap_vld : OUT STD_LOGIC;
    table_MultMatrixf : OUT STD_LOGIC_VECTOR (31 downto 0);
    table_MultMatrixf_ap_vld : OUT STD_LOGIC;
    table_MatrixMode : OUT STD_LOGIC_VECTOR (31 downto 0);
    table_MatrixMode_ap_vld : OUT STD_LOGIC;
    table_Materialfv : OUT STD_LOGIC_VECTOR (31 downto 0);
    table_Materialfv_ap_vld : OUT STD_LOGIC;
    table_MapGrid2f : OUT STD_LOGIC_VECTOR (31 downto 0);
    table_MapGrid2f_ap_vld : OUT STD_LOGIC;
    table_MapGrid1f : OUT STD_LOGIC_VECTOR (31 downto 0);
    table_MapGrid1f_ap_vld : OUT STD_LOGIC;
    table_Map2f : OUT STD_LOGIC_VECTOR (31 downto 0);
    table_Map2f_ap_vld : OUT STD_LOGIC;
    table_Map1f : OUT STD_LOGIC_VECTOR (31 downto 0);
    table_Map1f_ap_vld : OUT STD_LOGIC;
    table_LogicOp : OUT STD_LOGIC_VECTOR (31 downto 0);
    table_LogicOp_ap_vld : OUT STD_LOGIC;
    table_LoadName : OUT STD_LOGIC_VECTOR (31 downto 0);
    table_LoadName_ap_vld : OUT STD_LOGIC;
    table_LoadMatrixf : OUT STD_LOGIC_VECTOR (31 downto 0);
    table_LoadMatrixf_ap_vld : OUT STD_LOGIC;
    table_LoadIdentity : OUT STD_LOGIC_VECTOR (31 downto 0);
    table_LoadIdentity_ap_vld : OUT STD_LOGIC;
    table_ListBase : OUT STD_LOGIC_VECTOR (31 downto 0);
    table_ListBase_ap_vld : OUT STD_LOGIC;
    table_LineWidth : OUT STD_LOGIC_VECTOR (31 downto 0);
    table_LineWidth_ap_vld : OUT STD_LOGIC;
    table_LineStipple : OUT STD_LOGIC_VECTOR (31 downto 0);
    table_LineStipple_ap_vld : OUT STD_LOGIC;
    table_Lightfv : OUT STD_LOGIC_VECTOR (31 downto 0);
    table_Lightfv_ap_vld : OUT STD_LOGIC;
    table_LightModelfv : OUT STD_LOGIC_VECTOR (31 downto 0);
    table_LightModelfv_ap_vld : OUT STD_LOGIC;
    table_IsList : OUT STD_LOGIC_VECTOR (31 downto 0);
    table_IsList_ap_vld : OUT STD_LOGIC;
    table_IsTexture : OUT STD_LOGIC_VECTOR (31 downto 0);
    table_IsTexture_ap_vld : OUT STD_LOGIC;
    table_IsEnabled : OUT STD_LOGIC_VECTOR (31 downto 0);
    table_IsEnabled_ap_vld : OUT STD_LOGIC;
    table_InterleavedArrays : OUT STD_LOGIC_VECTOR (31 downto 0);
    table_InterleavedArrays_ap_vld : OUT STD_LOGIC;
    table_InitNames : OUT STD_LOGIC_VECTOR (31 downto 0);
    table_InitNames_ap_vld : OUT STD_LOGIC;
    table_IndexPointer : OUT STD_LOGIC_VECTOR (31 downto 0);
    table_IndexPointer_ap_vld : OUT STD_LOGIC;
    table_Indexi : OUT STD_LOGIC_VECTOR (31 downto 0);
    table_Indexi_ap_vld : OUT STD_LOGIC;
    table_Indexf : OUT STD_LOGIC_VECTOR (31 downto 0);
    table_Indexf_ap_vld : OUT STD_LOGIC;
    table_IndexMask : OUT STD_LOGIC_VECTOR (31 downto 0);
    table_IndexMask_ap_vld : OUT STD_LOGIC;
    table_Hint : OUT STD_LOGIC_VECTOR (31 downto 0);
    table_Hint_ap_vld : OUT STD_LOGIC;
    table_GetTexParameteriv : OUT STD_LOGIC_VECTOR (31 downto 0);
    table_GetTexParameteriv_ap_vld : OUT STD_LOGIC;
    table_GetTexParameterfv : OUT STD_LOGIC_VECTOR (31 downto 0);
    table_GetTexParameterfv_ap_vld : OUT STD_LOGIC;
    table_GetTexLevelParameteriv : OUT STD_LOGIC_VECTOR (31 downto 0);
    table_GetTexLevelParameteriv_ap_vld : OUT STD_LOGIC;
    table_GetTexLevelParameterfv : OUT STD_LOGIC_VECTOR (31 downto 0);
    table_GetTexLevelParameterfv_ap_vld : OUT STD_LOGIC;
    table_GetTexImage : OUT STD_LOGIC_VECTOR (31 downto 0);
    table_GetTexImage_ap_vld : OUT STD_LOGIC;
    table_GetTexGeniv : OUT STD_LOGIC_VECTOR (31 downto 0);
    table_GetTexGeniv_ap_vld : OUT STD_LOGIC;
    table_GetTexGenfv : OUT STD_LOGIC_VECTOR (31 downto 0);
    table_GetTexGenfv_ap_vld : OUT STD_LOGIC;
    table_GetTexGendv : OUT STD_LOGIC_VECTOR (31 downto 0);
    table_GetTexGendv_ap_vld : OUT STD_LOGIC;
    table_GetTexEnviv : OUT STD_LOGIC_VECTOR (31 downto 0);
    table_GetTexEnviv_ap_vld : OUT STD_LOGIC;
    table_GetTexEnvfv : OUT STD_LOGIC_VECTOR (31 downto 0);
    table_GetTexEnvfv_ap_vld : OUT STD_LOGIC;
    table_GetPolygonStipple : OUT STD_LOGIC_VECTOR (31 downto 0);
    table_GetPolygonStipple_ap_vld : OUT STD_LOGIC;
    table_GetPointerv : OUT STD_LOGIC_VECTOR (31 downto 0);
    table_GetPointerv_ap_vld : OUT STD_LOGIC;
    table_GetPixelMapusv : OUT STD_LOGIC_VECTOR (31 downto 0);
    table_GetPixelMapusv_ap_vld : OUT STD_LOGIC;
    table_GetPixelMapuiv : OUT STD_LOGIC_VECTOR (31 downto 0);
    table_GetPixelMapuiv_ap_vld : OUT STD_LOGIC;
    table_GetPixelMapfv : OUT STD_LOGIC_VECTOR (31 downto 0);
    table_GetPixelMapfv_ap_vld : OUT STD_LOGIC;
    table_GetMaterialiv : OUT STD_LOGIC_VECTOR (31 downto 0);
    table_GetMaterialiv_ap_vld : OUT STD_LOGIC;
    table_GetMaterialfv : OUT STD_LOGIC_VECTOR (31 downto 0);
    table_GetMaterialfv_ap_vld : OUT STD_LOGIC;
    table_GetMapiv : OUT STD_LOGIC_VECTOR (31 downto 0);
    table_GetMapiv_ap_vld : OUT STD_LOGIC;
    table_GetMapfv : OUT STD_LOGIC_VECTOR (31 downto 0);
    table_GetMapfv_ap_vld : OUT STD_LOGIC;
    table_GetMapdv : OUT STD_LOGIC_VECTOR (31 downto 0);
    table_GetMapdv_ap_vld : OUT STD_LOGIC;
    table_GetLightiv : OUT STD_LOGIC_VECTOR (31 downto 0);
    table_GetLightiv_ap_vld : OUT STD_LOGIC;
    table_GetLightfv : OUT STD_LOGIC_VECTOR (31 downto 0);
    table_GetLightfv_ap_vld : OUT STD_LOGIC;
    table_GetString : OUT STD_LOGIC_VECTOR (31 downto 0);
    table_GetString_ap_vld : OUT STD_LOGIC;
    table_GetIntegerv : OUT STD_LOGIC_VECTOR (31 downto 0);
    table_GetIntegerv_ap_vld : OUT STD_LOGIC;
    table_GetFloatv : OUT STD_LOGIC_VECTOR (31 downto 0);
    table_GetFloatv_ap_vld : OUT STD_LOGIC;
    table_GetError : OUT STD_LOGIC_VECTOR (31 downto 0);
    table_GetError_ap_vld : OUT STD_LOGIC;
    table_GetDoublev : OUT STD_LOGIC_VECTOR (31 downto 0);
    table_GetDoublev_ap_vld : OUT STD_LOGIC;
    table_GetColorTableParameteriv : OUT STD_LOGIC_VECTOR (31 downto 0);
    table_GetColorTableParameteriv_ap_vld : OUT STD_LOGIC;
    table_GetColorTable : OUT STD_LOGIC_VECTOR (31 downto 0);
    table_GetColorTable_ap_vld : OUT STD_LOGIC;
    table_GetClipPlane : OUT STD_LOGIC_VECTOR (31 downto 0);
    table_GetClipPlane_ap_vld : OUT STD_LOGIC;
    table_GetBooleanv : OUT STD_LOGIC_VECTOR (31 downto 0);
    table_GetBooleanv_ap_vld : OUT STD_LOGIC;
    table_GenTextures : OUT STD_LOGIC_VECTOR (31 downto 0);
    table_GenTextures_ap_vld : OUT STD_LOGIC;
    table_GenLists : OUT STD_LOGIC_VECTOR (31 downto 0);
    table_GenLists_ap_vld : OUT STD_LOGIC;
    table_Frustum : OUT STD_LOGIC_VECTOR (31 downto 0);
    table_Frustum_ap_vld : OUT STD_LOGIC;
    table_FrontFace : OUT STD_LOGIC_VECTOR (31 downto 0);
    table_FrontFace_ap_vld : OUT STD_LOGIC;
    table_Fogfv : OUT STD_LOGIC_VECTOR (31 downto 0);
    table_Fogfv_ap_vld : OUT STD_LOGIC;
    table_Flush : OUT STD_LOGIC_VECTOR (31 downto 0);
    table_Flush_ap_vld : OUT STD_LOGIC;
    table_Finish : OUT STD_LOGIC_VECTOR (31 downto 0);
    table_Finish_ap_vld : OUT STD_LOGIC;
    table_FeedbackBuffer : OUT STD_LOGIC_VECTOR (31 downto 0);
    table_FeedbackBuffer_ap_vld : OUT STD_LOGIC;
    table_EvalPoint2 : OUT STD_LOGIC_VECTOR (31 downto 0);
    table_EvalPoint2_ap_vld : OUT STD_LOGIC;
    table_EvalPoint1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    table_EvalPoint1_ap_vld : OUT STD_LOGIC;
    table_EvalMesh2 : OUT STD_LOGIC_VECTOR (31 downto 0);
    table_EvalMesh2_ap_vld : OUT STD_LOGIC;
    table_EvalMesh1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    table_EvalMesh1_ap_vld : OUT STD_LOGIC;
    table_EvalCoord2f : OUT STD_LOGIC_VECTOR (31 downto 0);
    table_EvalCoord2f_ap_vld : OUT STD_LOGIC;
    table_EvalCoord1f : OUT STD_LOGIC_VECTOR (31 downto 0);
    table_EvalCoord1f_ap_vld : OUT STD_LOGIC;
    table_EndList : OUT STD_LOGIC_VECTOR (31 downto 0);
    table_EndList_ap_vld : OUT STD_LOGIC;
    table_End : OUT STD_LOGIC_VECTOR (31 downto 0);
    table_End_ap_vld : OUT STD_LOGIC;
    table_EnableClientState : OUT STD_LOGIC_VECTOR (31 downto 0);
    table_EnableClientState_ap_vld : OUT STD_LOGIC;
    table_Enable : OUT STD_LOGIC_VECTOR (31 downto 0);
    table_Enable_ap_vld : OUT STD_LOGIC;
    table_EdgeFlagPointer : OUT STD_LOGIC_VECTOR (31 downto 0);
    table_EdgeFlagPointer_ap_vld : OUT STD_LOGIC;
    table_EdgeFlag : OUT STD_LOGIC_VECTOR (31 downto 0);
    table_EdgeFlag_ap_vld : OUT STD_LOGIC;
    table_DrawPixels : OUT STD_LOGIC_VECTOR (31 downto 0);
    table_DrawPixels_ap_vld : OUT STD_LOGIC;
    table_DrawElements : OUT STD_LOGIC_VECTOR (31 downto 0);
    table_DrawElements_ap_vld : OUT STD_LOGIC;
    table_DrawBuffer : OUT STD_LOGIC_VECTOR (31 downto 0);
    table_DrawBuffer_ap_vld : OUT STD_LOGIC;
    table_DrawArrays : OUT STD_LOGIC_VECTOR (31 downto 0);
    table_DrawArrays_ap_vld : OUT STD_LOGIC;
    table_DisableClientState : OUT STD_LOGIC_VECTOR (31 downto 0);
    table_DisableClientState_ap_vld : OUT STD_LOGIC;
    table_Disable : OUT STD_LOGIC_VECTOR (31 downto 0);
    table_Disable_ap_vld : OUT STD_LOGIC;
    table_DepthRange : OUT STD_LOGIC_VECTOR (31 downto 0);
    table_DepthRange_ap_vld : OUT STD_LOGIC;
    table_DepthMask : OUT STD_LOGIC_VECTOR (31 downto 0);
    table_DepthMask_ap_vld : OUT STD_LOGIC;
    table_DepthFunc : OUT STD_LOGIC_VECTOR (31 downto 0);
    table_DepthFunc_ap_vld : OUT STD_LOGIC;
    table_DeleteTextures : OUT STD_LOGIC_VECTOR (31 downto 0);
    table_DeleteTextures_ap_vld : OUT STD_LOGIC;
    table_DeleteLists : OUT STD_LOGIC_VECTOR (31 downto 0);
    table_DeleteLists_ap_vld : OUT STD_LOGIC;
    table_CullFace : OUT STD_LOGIC_VECTOR (31 downto 0);
    table_CullFace_ap_vld : OUT STD_LOGIC;
    table_CopyTexSubImage2D : OUT STD_LOGIC_VECTOR (31 downto 0);
    table_CopyTexSubImage2D_ap_vld : OUT STD_LOGIC;
    table_CopyTexSubImage1D : OUT STD_LOGIC_VECTOR (31 downto 0);
    table_CopyTexSubImage1D_ap_vld : OUT STD_LOGIC;
    table_CopyTexImage2D : OUT STD_LOGIC_VECTOR (31 downto 0);
    table_CopyTexImage2D_ap_vld : OUT STD_LOGIC;
    table_CopyTexImage1D : OUT STD_LOGIC_VECTOR (31 downto 0);
    table_CopyTexImage1D_ap_vld : OUT STD_LOGIC;
    table_CopyPixels : OUT STD_LOGIC_VECTOR (31 downto 0);
    table_CopyPixels_ap_vld : OUT STD_LOGIC;
    table_ColorSubTable : OUT STD_LOGIC_VECTOR (31 downto 0);
    table_ColorSubTable_ap_vld : OUT STD_LOGIC;
    table_ColorTable : OUT STD_LOGIC_VECTOR (31 downto 0);
    table_ColorTable_ap_vld : OUT STD_LOGIC;
    table_ColorPointer : OUT STD_LOGIC_VECTOR (31 downto 0);
    table_ColorPointer_ap_vld : OUT STD_LOGIC;
    table_ColorMaterial : OUT STD_LOGIC_VECTOR (31 downto 0);
    table_ColorMaterial_ap_vld : OUT STD_LOGIC;
    table_ColorMask : OUT STD_LOGIC_VECTOR (31 downto 0);
    table_ColorMask_ap_vld : OUT STD_LOGIC;
    table_Color4ubv : OUT STD_LOGIC_VECTOR (31 downto 0);
    table_Color4ubv_ap_vld : OUT STD_LOGIC;
    table_Color4ub : OUT STD_LOGIC_VECTOR (31 downto 0);
    table_Color4ub_ap_vld : OUT STD_LOGIC;
    table_Color4fv : OUT STD_LOGIC_VECTOR (31 downto 0);
    table_Color4fv_ap_vld : OUT STD_LOGIC;
    table_Color4f : OUT STD_LOGIC_VECTOR (31 downto 0);
    table_Color4f_ap_vld : OUT STD_LOGIC;
    table_Color3fv : OUT STD_LOGIC_VECTOR (31 downto 0);
    table_Color3fv_ap_vld : OUT STD_LOGIC;
    table_Color3f : OUT STD_LOGIC_VECTOR (31 downto 0);
    table_Color3f_ap_vld : OUT STD_LOGIC;
    table_ClipPlane : OUT STD_LOGIC_VECTOR (31 downto 0);
    table_ClipPlane_ap_vld : OUT STD_LOGIC;
    table_ClearStencil : OUT STD_LOGIC_VECTOR (31 downto 0);
    table_ClearStencil_ap_vld : OUT STD_LOGIC;
    table_ClearIndex : OUT STD_LOGIC_VECTOR (31 downto 0);
    table_ClearIndex_ap_vld : OUT STD_LOGIC;
    table_ClearDepth : OUT STD_LOGIC_VECTOR (31 downto 0);
    table_ClearDepth_ap_vld : OUT STD_LOGIC;
    table_ClearColor : OUT STD_LOGIC_VECTOR (31 downto 0);
    table_ClearColor_ap_vld : OUT STD_LOGIC;
    table_ClearAccum : OUT STD_LOGIC_VECTOR (31 downto 0);
    table_ClearAccum_ap_vld : OUT STD_LOGIC;
    table_Clear : OUT STD_LOGIC_VECTOR (31 downto 0);
    table_Clear_ap_vld : OUT STD_LOGIC;
    table_CallLists : OUT STD_LOGIC_VECTOR (31 downto 0);
    table_CallLists_ap_vld : OUT STD_LOGIC;
    table_CallList : OUT STD_LOGIC_VECTOR (31 downto 0);
    table_CallList_ap_vld : OUT STD_LOGIC;
    table_BlendFunc : OUT STD_LOGIC_VECTOR (31 downto 0);
    table_BlendFunc_ap_vld : OUT STD_LOGIC;
    table_Bitmap : OUT STD_LOGIC_VECTOR (31 downto 0);
    table_Bitmap_ap_vld : OUT STD_LOGIC;
    table_BindTexture : OUT STD_LOGIC_VECTOR (31 downto 0);
    table_BindTexture_ap_vld : OUT STD_LOGIC;
    table_Begin : OUT STD_LOGIC_VECTOR (31 downto 0);
    table_Begin_ap_vld : OUT STD_LOGIC;
    table_ArrayElement : OUT STD_LOGIC_VECTOR (31 downto 0);
    table_ArrayElement_ap_vld : OUT STD_LOGIC;
    table_AreTexturesResident : OUT STD_LOGIC_VECTOR (31 downto 0);
    table_AreTexturesResident_ap_vld : OUT STD_LOGIC;
    table_AlphaFunc : OUT STD_LOGIC_VECTOR (31 downto 0);
    table_AlphaFunc_ap_vld : OUT STD_LOGIC;
    table_Accum : OUT STD_LOGIC_VECTOR (31 downto 0);
    table_Accum_ap_vld : OUT STD_LOGIC );
end;


architecture behav of init_dlist_pointers is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "init_dlist_pointers,hls_ip_2019_1,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7k160t-fbg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=0.000000,HLS_SYN_LAT=0,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=0,HLS_SYN_LUT=0,HLS_VERSION=2019_1}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_boolean_1 : BOOLEAN := true;



begin



    ap_done <= ap_start;
    ap_idle <= ap_const_logic_1;
    ap_ready <= ap_start;
    table_Accum <= ap_const_lv32_0;

    table_Accum_ap_vld_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_1)) then 
            table_Accum_ap_vld <= ap_const_logic_1;
        else 
            table_Accum_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    table_AlphaFunc <= ap_const_lv32_0;

    table_AlphaFunc_ap_vld_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_1)) then 
            table_AlphaFunc_ap_vld <= ap_const_logic_1;
        else 
            table_AlphaFunc_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    table_AreTexturesResident <= ap_const_lv32_0;

    table_AreTexturesResident_ap_vld_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_1)) then 
            table_AreTexturesResident_ap_vld <= ap_const_logic_1;
        else 
            table_AreTexturesResident_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    table_ArrayElement <= ap_const_lv32_0;

    table_ArrayElement_ap_vld_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_1)) then 
            table_ArrayElement_ap_vld <= ap_const_logic_1;
        else 
            table_ArrayElement_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    table_Begin <= ap_const_lv32_0;

    table_Begin_ap_vld_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_1)) then 
            table_Begin_ap_vld <= ap_const_logic_1;
        else 
            table_Begin_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    table_BindTexture <= ap_const_lv32_0;

    table_BindTexture_ap_vld_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_1)) then 
            table_BindTexture_ap_vld <= ap_const_logic_1;
        else 
            table_BindTexture_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    table_Bitmap <= ap_const_lv32_0;

    table_Bitmap_ap_vld_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_1)) then 
            table_Bitmap_ap_vld <= ap_const_logic_1;
        else 
            table_Bitmap_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    table_BlendFunc <= ap_const_lv32_0;

    table_BlendFunc_ap_vld_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_1)) then 
            table_BlendFunc_ap_vld <= ap_const_logic_1;
        else 
            table_BlendFunc_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    table_CallList <= ap_const_lv32_0;

    table_CallList_ap_vld_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_1)) then 
            table_CallList_ap_vld <= ap_const_logic_1;
        else 
            table_CallList_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    table_CallLists <= ap_const_lv32_0;

    table_CallLists_ap_vld_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_1)) then 
            table_CallLists_ap_vld <= ap_const_logic_1;
        else 
            table_CallLists_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    table_Clear <= ap_const_lv32_0;
    table_ClearAccum <= ap_const_lv32_0;

    table_ClearAccum_ap_vld_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_1)) then 
            table_ClearAccum_ap_vld <= ap_const_logic_1;
        else 
            table_ClearAccum_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    table_ClearColor <= ap_const_lv32_0;

    table_ClearColor_ap_vld_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_1)) then 
            table_ClearColor_ap_vld <= ap_const_logic_1;
        else 
            table_ClearColor_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    table_ClearDepth <= ap_const_lv32_0;

    table_ClearDepth_ap_vld_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_1)) then 
            table_ClearDepth_ap_vld <= ap_const_logic_1;
        else 
            table_ClearDepth_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    table_ClearIndex <= ap_const_lv32_0;

    table_ClearIndex_ap_vld_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_1)) then 
            table_ClearIndex_ap_vld <= ap_const_logic_1;
        else 
            table_ClearIndex_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    table_ClearStencil <= ap_const_lv32_0;

    table_ClearStencil_ap_vld_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_1)) then 
            table_ClearStencil_ap_vld <= ap_const_logic_1;
        else 
            table_ClearStencil_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    table_Clear_ap_vld_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_1)) then 
            table_Clear_ap_vld <= ap_const_logic_1;
        else 
            table_Clear_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    table_ClipPlane <= ap_const_lv32_0;

    table_ClipPlane_ap_vld_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_1)) then 
            table_ClipPlane_ap_vld <= ap_const_logic_1;
        else 
            table_ClipPlane_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    table_Color3f <= ap_const_lv32_0;

    table_Color3f_ap_vld_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_1)) then 
            table_Color3f_ap_vld <= ap_const_logic_1;
        else 
            table_Color3f_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    table_Color3fv <= ap_const_lv32_0;

    table_Color3fv_ap_vld_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_1)) then 
            table_Color3fv_ap_vld <= ap_const_logic_1;
        else 
            table_Color3fv_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    table_Color4f <= ap_const_lv32_0;

    table_Color4f_ap_vld_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_1)) then 
            table_Color4f_ap_vld <= ap_const_logic_1;
        else 
            table_Color4f_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    table_Color4fv <= ap_const_lv32_0;

    table_Color4fv_ap_vld_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_1)) then 
            table_Color4fv_ap_vld <= ap_const_logic_1;
        else 
            table_Color4fv_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    table_Color4ub <= ap_const_lv32_0;

    table_Color4ub_ap_vld_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_1)) then 
            table_Color4ub_ap_vld <= ap_const_logic_1;
        else 
            table_Color4ub_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    table_Color4ubv <= ap_const_lv32_0;

    table_Color4ubv_ap_vld_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_1)) then 
            table_Color4ubv_ap_vld <= ap_const_logic_1;
        else 
            table_Color4ubv_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    table_ColorMask <= ap_const_lv32_0;

    table_ColorMask_ap_vld_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_1)) then 
            table_ColorMask_ap_vld <= ap_const_logic_1;
        else 
            table_ColorMask_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    table_ColorMaterial <= ap_const_lv32_0;

    table_ColorMaterial_ap_vld_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_1)) then 
            table_ColorMaterial_ap_vld <= ap_const_logic_1;
        else 
            table_ColorMaterial_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    table_ColorPointer <= ap_const_lv32_0;

    table_ColorPointer_ap_vld_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_1)) then 
            table_ColorPointer_ap_vld <= ap_const_logic_1;
        else 
            table_ColorPointer_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    table_ColorSubTable <= ap_const_lv32_0;

    table_ColorSubTable_ap_vld_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_1)) then 
            table_ColorSubTable_ap_vld <= ap_const_logic_1;
        else 
            table_ColorSubTable_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    table_ColorTable <= ap_const_lv32_0;

    table_ColorTable_ap_vld_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_1)) then 
            table_ColorTable_ap_vld <= ap_const_logic_1;
        else 
            table_ColorTable_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    table_CopyPixels <= ap_const_lv32_0;

    table_CopyPixels_ap_vld_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_1)) then 
            table_CopyPixels_ap_vld <= ap_const_logic_1;
        else 
            table_CopyPixels_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    table_CopyTexImage1D <= ap_const_lv32_0;

    table_CopyTexImage1D_ap_vld_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_1)) then 
            table_CopyTexImage1D_ap_vld <= ap_const_logic_1;
        else 
            table_CopyTexImage1D_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    table_CopyTexImage2D <= ap_const_lv32_0;

    table_CopyTexImage2D_ap_vld_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_1)) then 
            table_CopyTexImage2D_ap_vld <= ap_const_logic_1;
        else 
            table_CopyTexImage2D_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    table_CopyTexSubImage1D <= ap_const_lv32_0;

    table_CopyTexSubImage1D_ap_vld_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_1)) then 
            table_CopyTexSubImage1D_ap_vld <= ap_const_logic_1;
        else 
            table_CopyTexSubImage1D_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    table_CopyTexSubImage2D <= ap_const_lv32_0;

    table_CopyTexSubImage2D_ap_vld_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_1)) then 
            table_CopyTexSubImage2D_ap_vld <= ap_const_logic_1;
        else 
            table_CopyTexSubImage2D_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    table_CullFace <= ap_const_lv32_0;

    table_CullFace_ap_vld_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_1)) then 
            table_CullFace_ap_vld <= ap_const_logic_1;
        else 
            table_CullFace_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    table_DeleteLists <= ap_const_lv32_0;

    table_DeleteLists_ap_vld_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_1)) then 
            table_DeleteLists_ap_vld <= ap_const_logic_1;
        else 
            table_DeleteLists_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    table_DeleteTextures <= ap_const_lv32_0;

    table_DeleteTextures_ap_vld_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_1)) then 
            table_DeleteTextures_ap_vld <= ap_const_logic_1;
        else 
            table_DeleteTextures_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    table_DepthFunc <= ap_const_lv32_0;

    table_DepthFunc_ap_vld_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_1)) then 
            table_DepthFunc_ap_vld <= ap_const_logic_1;
        else 
            table_DepthFunc_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    table_DepthMask <= ap_const_lv32_0;

    table_DepthMask_ap_vld_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_1)) then 
            table_DepthMask_ap_vld <= ap_const_logic_1;
        else 
            table_DepthMask_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    table_DepthRange <= ap_const_lv32_0;

    table_DepthRange_ap_vld_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_1)) then 
            table_DepthRange_ap_vld <= ap_const_logic_1;
        else 
            table_DepthRange_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    table_Disable <= ap_const_lv32_0;
    table_DisableClientState <= ap_const_lv32_0;

    table_DisableClientState_ap_vld_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_1)) then 
            table_DisableClientState_ap_vld <= ap_const_logic_1;
        else 
            table_DisableClientState_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    table_Disable_ap_vld_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_1)) then 
            table_Disable_ap_vld <= ap_const_logic_1;
        else 
            table_Disable_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    table_DrawArrays <= ap_const_lv32_0;

    table_DrawArrays_ap_vld_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_1)) then 
            table_DrawArrays_ap_vld <= ap_const_logic_1;
        else 
            table_DrawArrays_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    table_DrawBuffer <= ap_const_lv32_0;

    table_DrawBuffer_ap_vld_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_1)) then 
            table_DrawBuffer_ap_vld <= ap_const_logic_1;
        else 
            table_DrawBuffer_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    table_DrawElements <= ap_const_lv32_0;

    table_DrawElements_ap_vld_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_1)) then 
            table_DrawElements_ap_vld <= ap_const_logic_1;
        else 
            table_DrawElements_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    table_DrawPixels <= ap_const_lv32_0;

    table_DrawPixels_ap_vld_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_1)) then 
            table_DrawPixels_ap_vld <= ap_const_logic_1;
        else 
            table_DrawPixels_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    table_EdgeFlag <= ap_const_lv32_0;
    table_EdgeFlagPointer <= ap_const_lv32_0;

    table_EdgeFlagPointer_ap_vld_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_1)) then 
            table_EdgeFlagPointer_ap_vld <= ap_const_logic_1;
        else 
            table_EdgeFlagPointer_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    table_EdgeFlag_ap_vld_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_1)) then 
            table_EdgeFlag_ap_vld <= ap_const_logic_1;
        else 
            table_EdgeFlag_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    table_Enable <= ap_const_lv32_0;
    table_EnableClientState <= ap_const_lv32_0;

    table_EnableClientState_ap_vld_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_1)) then 
            table_EnableClientState_ap_vld <= ap_const_logic_1;
        else 
            table_EnableClientState_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    table_Enable_ap_vld_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_1)) then 
            table_Enable_ap_vld <= ap_const_logic_1;
        else 
            table_Enable_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    table_End <= ap_const_lv32_0;
    table_EndList <= ap_const_lv32_0;

    table_EndList_ap_vld_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_1)) then 
            table_EndList_ap_vld <= ap_const_logic_1;
        else 
            table_EndList_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    table_End_ap_vld_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_1)) then 
            table_End_ap_vld <= ap_const_logic_1;
        else 
            table_End_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    table_EvalCoord1f <= ap_const_lv32_0;

    table_EvalCoord1f_ap_vld_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_1)) then 
            table_EvalCoord1f_ap_vld <= ap_const_logic_1;
        else 
            table_EvalCoord1f_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    table_EvalCoord2f <= ap_const_lv32_0;

    table_EvalCoord2f_ap_vld_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_1)) then 
            table_EvalCoord2f_ap_vld <= ap_const_logic_1;
        else 
            table_EvalCoord2f_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    table_EvalMesh1 <= ap_const_lv32_0;

    table_EvalMesh1_ap_vld_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_1)) then 
            table_EvalMesh1_ap_vld <= ap_const_logic_1;
        else 
            table_EvalMesh1_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    table_EvalMesh2 <= ap_const_lv32_0;

    table_EvalMesh2_ap_vld_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_1)) then 
            table_EvalMesh2_ap_vld <= ap_const_logic_1;
        else 
            table_EvalMesh2_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    table_EvalPoint1 <= ap_const_lv32_0;

    table_EvalPoint1_ap_vld_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_1)) then 
            table_EvalPoint1_ap_vld <= ap_const_logic_1;
        else 
            table_EvalPoint1_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    table_EvalPoint2 <= ap_const_lv32_0;

    table_EvalPoint2_ap_vld_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_1)) then 
            table_EvalPoint2_ap_vld <= ap_const_logic_1;
        else 
            table_EvalPoint2_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    table_FeedbackBuffer <= ap_const_lv32_0;

    table_FeedbackBuffer_ap_vld_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_1)) then 
            table_FeedbackBuffer_ap_vld <= ap_const_logic_1;
        else 
            table_FeedbackBuffer_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    table_Finish <= ap_const_lv32_0;

    table_Finish_ap_vld_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_1)) then 
            table_Finish_ap_vld <= ap_const_logic_1;
        else 
            table_Finish_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    table_Flush <= ap_const_lv32_0;

    table_Flush_ap_vld_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_1)) then 
            table_Flush_ap_vld <= ap_const_logic_1;
        else 
            table_Flush_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    table_Fogfv <= ap_const_lv32_0;

    table_Fogfv_ap_vld_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_1)) then 
            table_Fogfv_ap_vld <= ap_const_logic_1;
        else 
            table_Fogfv_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    table_FrontFace <= ap_const_lv32_0;

    table_FrontFace_ap_vld_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_1)) then 
            table_FrontFace_ap_vld <= ap_const_logic_1;
        else 
            table_FrontFace_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    table_Frustum <= ap_const_lv32_0;

    table_Frustum_ap_vld_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_1)) then 
            table_Frustum_ap_vld <= ap_const_logic_1;
        else 
            table_Frustum_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    table_GenLists <= ap_const_lv32_0;

    table_GenLists_ap_vld_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_1)) then 
            table_GenLists_ap_vld <= ap_const_logic_1;
        else 
            table_GenLists_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    table_GenTextures <= ap_const_lv32_0;

    table_GenTextures_ap_vld_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_1)) then 
            table_GenTextures_ap_vld <= ap_const_logic_1;
        else 
            table_GenTextures_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    table_GetBooleanv <= ap_const_lv32_0;

    table_GetBooleanv_ap_vld_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_1)) then 
            table_GetBooleanv_ap_vld <= ap_const_logic_1;
        else 
            table_GetBooleanv_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    table_GetClipPlane <= ap_const_lv32_0;

    table_GetClipPlane_ap_vld_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_1)) then 
            table_GetClipPlane_ap_vld <= ap_const_logic_1;
        else 
            table_GetClipPlane_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    table_GetColorTable <= ap_const_lv32_0;
    table_GetColorTableParameteriv <= ap_const_lv32_0;

    table_GetColorTableParameteriv_ap_vld_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_1)) then 
            table_GetColorTableParameteriv_ap_vld <= ap_const_logic_1;
        else 
            table_GetColorTableParameteriv_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    table_GetColorTable_ap_vld_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_1)) then 
            table_GetColorTable_ap_vld <= ap_const_logic_1;
        else 
            table_GetColorTable_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    table_GetDoublev <= ap_const_lv32_0;

    table_GetDoublev_ap_vld_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_1)) then 
            table_GetDoublev_ap_vld <= ap_const_logic_1;
        else 
            table_GetDoublev_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    table_GetError <= ap_const_lv32_0;

    table_GetError_ap_vld_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_1)) then 
            table_GetError_ap_vld <= ap_const_logic_1;
        else 
            table_GetError_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    table_GetFloatv <= ap_const_lv32_0;

    table_GetFloatv_ap_vld_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_1)) then 
            table_GetFloatv_ap_vld <= ap_const_logic_1;
        else 
            table_GetFloatv_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    table_GetIntegerv <= ap_const_lv32_0;

    table_GetIntegerv_ap_vld_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_1)) then 
            table_GetIntegerv_ap_vld <= ap_const_logic_1;
        else 
            table_GetIntegerv_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    table_GetLightfv <= ap_const_lv32_0;

    table_GetLightfv_ap_vld_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_1)) then 
            table_GetLightfv_ap_vld <= ap_const_logic_1;
        else 
            table_GetLightfv_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    table_GetLightiv <= ap_const_lv32_0;

    table_GetLightiv_ap_vld_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_1)) then 
            table_GetLightiv_ap_vld <= ap_const_logic_1;
        else 
            table_GetLightiv_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    table_GetMapdv <= ap_const_lv32_0;

    table_GetMapdv_ap_vld_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_1)) then 
            table_GetMapdv_ap_vld <= ap_const_logic_1;
        else 
            table_GetMapdv_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    table_GetMapfv <= ap_const_lv32_0;

    table_GetMapfv_ap_vld_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_1)) then 
            table_GetMapfv_ap_vld <= ap_const_logic_1;
        else 
            table_GetMapfv_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    table_GetMapiv <= ap_const_lv32_0;

    table_GetMapiv_ap_vld_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_1)) then 
            table_GetMapiv_ap_vld <= ap_const_logic_1;
        else 
            table_GetMapiv_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    table_GetMaterialfv <= ap_const_lv32_0;

    table_GetMaterialfv_ap_vld_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_1)) then 
            table_GetMaterialfv_ap_vld <= ap_const_logic_1;
        else 
            table_GetMaterialfv_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    table_GetMaterialiv <= ap_const_lv32_0;

    table_GetMaterialiv_ap_vld_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_1)) then 
            table_GetMaterialiv_ap_vld <= ap_const_logic_1;
        else 
            table_GetMaterialiv_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    table_GetPixelMapfv <= ap_const_lv32_0;

    table_GetPixelMapfv_ap_vld_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_1)) then 
            table_GetPixelMapfv_ap_vld <= ap_const_logic_1;
        else 
            table_GetPixelMapfv_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    table_GetPixelMapuiv <= ap_const_lv32_0;

    table_GetPixelMapuiv_ap_vld_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_1)) then 
            table_GetPixelMapuiv_ap_vld <= ap_const_logic_1;
        else 
            table_GetPixelMapuiv_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    table_GetPixelMapusv <= ap_const_lv32_0;

    table_GetPixelMapusv_ap_vld_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_1)) then 
            table_GetPixelMapusv_ap_vld <= ap_const_logic_1;
        else 
            table_GetPixelMapusv_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    table_GetPointerv <= ap_const_lv32_0;

    table_GetPointerv_ap_vld_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_1)) then 
            table_GetPointerv_ap_vld <= ap_const_logic_1;
        else 
            table_GetPointerv_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    table_GetPolygonStipple <= ap_const_lv32_0;

    table_GetPolygonStipple_ap_vld_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_1)) then 
            table_GetPolygonStipple_ap_vld <= ap_const_logic_1;
        else 
            table_GetPolygonStipple_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    table_GetString <= ap_const_lv32_0;

    table_GetString_ap_vld_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_1)) then 
            table_GetString_ap_vld <= ap_const_logic_1;
        else 
            table_GetString_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    table_GetTexEnvfv <= ap_const_lv32_0;

    table_GetTexEnvfv_ap_vld_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_1)) then 
            table_GetTexEnvfv_ap_vld <= ap_const_logic_1;
        else 
            table_GetTexEnvfv_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    table_GetTexEnviv <= ap_const_lv32_0;

    table_GetTexEnviv_ap_vld_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_1)) then 
            table_GetTexEnviv_ap_vld <= ap_const_logic_1;
        else 
            table_GetTexEnviv_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    table_GetTexGendv <= ap_const_lv32_0;

    table_GetTexGendv_ap_vld_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_1)) then 
            table_GetTexGendv_ap_vld <= ap_const_logic_1;
        else 
            table_GetTexGendv_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    table_GetTexGenfv <= ap_const_lv32_0;

    table_GetTexGenfv_ap_vld_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_1)) then 
            table_GetTexGenfv_ap_vld <= ap_const_logic_1;
        else 
            table_GetTexGenfv_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    table_GetTexGeniv <= ap_const_lv32_0;

    table_GetTexGeniv_ap_vld_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_1)) then 
            table_GetTexGeniv_ap_vld <= ap_const_logic_1;
        else 
            table_GetTexGeniv_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    table_GetTexImage <= ap_const_lv32_0;

    table_GetTexImage_ap_vld_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_1)) then 
            table_GetTexImage_ap_vld <= ap_const_logic_1;
        else 
            table_GetTexImage_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    table_GetTexLevelParameterfv <= ap_const_lv32_0;

    table_GetTexLevelParameterfv_ap_vld_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_1)) then 
            table_GetTexLevelParameterfv_ap_vld <= ap_const_logic_1;
        else 
            table_GetTexLevelParameterfv_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    table_GetTexLevelParameteriv <= ap_const_lv32_0;

    table_GetTexLevelParameteriv_ap_vld_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_1)) then 
            table_GetTexLevelParameteriv_ap_vld <= ap_const_logic_1;
        else 
            table_GetTexLevelParameteriv_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    table_GetTexParameterfv <= ap_const_lv32_0;

    table_GetTexParameterfv_ap_vld_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_1)) then 
            table_GetTexParameterfv_ap_vld <= ap_const_logic_1;
        else 
            table_GetTexParameterfv_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    table_GetTexParameteriv <= ap_const_lv32_0;

    table_GetTexParameteriv_ap_vld_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_1)) then 
            table_GetTexParameteriv_ap_vld <= ap_const_logic_1;
        else 
            table_GetTexParameteriv_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    table_Hint <= ap_const_lv32_0;

    table_Hint_ap_vld_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_1)) then 
            table_Hint_ap_vld <= ap_const_logic_1;
        else 
            table_Hint_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    table_IndexMask <= ap_const_lv32_0;

    table_IndexMask_ap_vld_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_1)) then 
            table_IndexMask_ap_vld <= ap_const_logic_1;
        else 
            table_IndexMask_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    table_IndexPointer <= ap_const_lv32_0;

    table_IndexPointer_ap_vld_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_1)) then 
            table_IndexPointer_ap_vld <= ap_const_logic_1;
        else 
            table_IndexPointer_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    table_Indexf <= ap_const_lv32_0;

    table_Indexf_ap_vld_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_1)) then 
            table_Indexf_ap_vld <= ap_const_logic_1;
        else 
            table_Indexf_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    table_Indexi <= ap_const_lv32_0;

    table_Indexi_ap_vld_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_1)) then 
            table_Indexi_ap_vld <= ap_const_logic_1;
        else 
            table_Indexi_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    table_InitNames <= ap_const_lv32_0;

    table_InitNames_ap_vld_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_1)) then 
            table_InitNames_ap_vld <= ap_const_logic_1;
        else 
            table_InitNames_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    table_InterleavedArrays <= ap_const_lv32_0;

    table_InterleavedArrays_ap_vld_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_1)) then 
            table_InterleavedArrays_ap_vld <= ap_const_logic_1;
        else 
            table_InterleavedArrays_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    table_IsEnabled <= ap_const_lv32_0;

    table_IsEnabled_ap_vld_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_1)) then 
            table_IsEnabled_ap_vld <= ap_const_logic_1;
        else 
            table_IsEnabled_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    table_IsList <= ap_const_lv32_0;

    table_IsList_ap_vld_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_1)) then 
            table_IsList_ap_vld <= ap_const_logic_1;
        else 
            table_IsList_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    table_IsTexture <= ap_const_lv32_0;

    table_IsTexture_ap_vld_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_1)) then 
            table_IsTexture_ap_vld <= ap_const_logic_1;
        else 
            table_IsTexture_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    table_LightModelfv <= ap_const_lv32_0;

    table_LightModelfv_ap_vld_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_1)) then 
            table_LightModelfv_ap_vld <= ap_const_logic_1;
        else 
            table_LightModelfv_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    table_Lightfv <= ap_const_lv32_0;

    table_Lightfv_ap_vld_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_1)) then 
            table_Lightfv_ap_vld <= ap_const_logic_1;
        else 
            table_Lightfv_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    table_LineStipple <= ap_const_lv32_0;

    table_LineStipple_ap_vld_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_1)) then 
            table_LineStipple_ap_vld <= ap_const_logic_1;
        else 
            table_LineStipple_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    table_LineWidth <= ap_const_lv32_0;

    table_LineWidth_ap_vld_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_1)) then 
            table_LineWidth_ap_vld <= ap_const_logic_1;
        else 
            table_LineWidth_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    table_ListBase <= ap_const_lv32_0;

    table_ListBase_ap_vld_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_1)) then 
            table_ListBase_ap_vld <= ap_const_logic_1;
        else 
            table_ListBase_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    table_LoadIdentity <= ap_const_lv32_0;

    table_LoadIdentity_ap_vld_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_1)) then 
            table_LoadIdentity_ap_vld <= ap_const_logic_1;
        else 
            table_LoadIdentity_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    table_LoadMatrixf <= ap_const_lv32_0;

    table_LoadMatrixf_ap_vld_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_1)) then 
            table_LoadMatrixf_ap_vld <= ap_const_logic_1;
        else 
            table_LoadMatrixf_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    table_LoadName <= ap_const_lv32_0;

    table_LoadName_ap_vld_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_1)) then 
            table_LoadName_ap_vld <= ap_const_logic_1;
        else 
            table_LoadName_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    table_LogicOp <= ap_const_lv32_0;

    table_LogicOp_ap_vld_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_1)) then 
            table_LogicOp_ap_vld <= ap_const_logic_1;
        else 
            table_LogicOp_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    table_Map1f <= ap_const_lv32_0;

    table_Map1f_ap_vld_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_1)) then 
            table_Map1f_ap_vld <= ap_const_logic_1;
        else 
            table_Map1f_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    table_Map2f <= ap_const_lv32_0;

    table_Map2f_ap_vld_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_1)) then 
            table_Map2f_ap_vld <= ap_const_logic_1;
        else 
            table_Map2f_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    table_MapGrid1f <= ap_const_lv32_0;

    table_MapGrid1f_ap_vld_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_1)) then 
            table_MapGrid1f_ap_vld <= ap_const_logic_1;
        else 
            table_MapGrid1f_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    table_MapGrid2f <= ap_const_lv32_0;

    table_MapGrid2f_ap_vld_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_1)) then 
            table_MapGrid2f_ap_vld <= ap_const_logic_1;
        else 
            table_MapGrid2f_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    table_Materialfv <= ap_const_lv32_0;

    table_Materialfv_ap_vld_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_1)) then 
            table_Materialfv_ap_vld <= ap_const_logic_1;
        else 
            table_Materialfv_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    table_MatrixMode <= ap_const_lv32_0;

    table_MatrixMode_ap_vld_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_1)) then 
            table_MatrixMode_ap_vld <= ap_const_logic_1;
        else 
            table_MatrixMode_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    table_MultMatrixf <= ap_const_lv32_0;

    table_MultMatrixf_ap_vld_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_1)) then 
            table_MultMatrixf_ap_vld <= ap_const_logic_1;
        else 
            table_MultMatrixf_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    table_NewList <= ap_const_lv32_0;

    table_NewList_ap_vld_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_1)) then 
            table_NewList_ap_vld <= ap_const_logic_1;
        else 
            table_NewList_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    table_Normal3f <= ap_const_lv32_0;

    table_Normal3f_ap_vld_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_1)) then 
            table_Normal3f_ap_vld <= ap_const_logic_1;
        else 
            table_Normal3f_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    table_Normal3fv <= ap_const_lv32_0;

    table_Normal3fv_ap_vld_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_1)) then 
            table_Normal3fv_ap_vld <= ap_const_logic_1;
        else 
            table_Normal3fv_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    table_NormalPointer <= ap_const_lv32_0;

    table_NormalPointer_ap_vld_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_1)) then 
            table_NormalPointer_ap_vld <= ap_const_logic_1;
        else 
            table_NormalPointer_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    table_Ortho <= ap_const_lv32_0;

    table_Ortho_ap_vld_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_1)) then 
            table_Ortho_ap_vld <= ap_const_logic_1;
        else 
            table_Ortho_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    table_PassThrough <= ap_const_lv32_0;

    table_PassThrough_ap_vld_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_1)) then 
            table_PassThrough_ap_vld <= ap_const_logic_1;
        else 
            table_PassThrough_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    table_PixelMapfv <= ap_const_lv32_0;

    table_PixelMapfv_ap_vld_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_1)) then 
            table_PixelMapfv_ap_vld <= ap_const_logic_1;
        else 
            table_PixelMapfv_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    table_PixelStorei <= ap_const_lv32_0;

    table_PixelStorei_ap_vld_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_1)) then 
            table_PixelStorei_ap_vld <= ap_const_logic_1;
        else 
            table_PixelStorei_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    table_PixelTransferf <= ap_const_lv32_0;

    table_PixelTransferf_ap_vld_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_1)) then 
            table_PixelTransferf_ap_vld <= ap_const_logic_1;
        else 
            table_PixelTransferf_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    table_PixelZoom <= ap_const_lv32_0;

    table_PixelZoom_ap_vld_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_1)) then 
            table_PixelZoom_ap_vld <= ap_const_logic_1;
        else 
            table_PixelZoom_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    table_PointSize <= ap_const_lv32_0;

    table_PointSize_ap_vld_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_1)) then 
            table_PointSize_ap_vld <= ap_const_logic_1;
        else 
            table_PointSize_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    table_PolygonMode <= ap_const_lv32_0;

    table_PolygonMode_ap_vld_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_1)) then 
            table_PolygonMode_ap_vld <= ap_const_logic_1;
        else 
            table_PolygonMode_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    table_PolygonOffset <= ap_const_lv32_0;

    table_PolygonOffset_ap_vld_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_1)) then 
            table_PolygonOffset_ap_vld <= ap_const_logic_1;
        else 
            table_PolygonOffset_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    table_PolygonStipple <= ap_const_lv32_0;

    table_PolygonStipple_ap_vld_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_1)) then 
            table_PolygonStipple_ap_vld <= ap_const_logic_1;
        else 
            table_PolygonStipple_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    table_PopAttrib <= ap_const_lv32_0;

    table_PopAttrib_ap_vld_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_1)) then 
            table_PopAttrib_ap_vld <= ap_const_logic_1;
        else 
            table_PopAttrib_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    table_PopClientAttrib <= ap_const_lv32_0;

    table_PopClientAttrib_ap_vld_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_1)) then 
            table_PopClientAttrib_ap_vld <= ap_const_logic_1;
        else 
            table_PopClientAttrib_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    table_PopMatrix <= ap_const_lv32_0;

    table_PopMatrix_ap_vld_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_1)) then 
            table_PopMatrix_ap_vld <= ap_const_logic_1;
        else 
            table_PopMatrix_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    table_PopName <= ap_const_lv32_0;

    table_PopName_ap_vld_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_1)) then 
            table_PopName_ap_vld <= ap_const_logic_1;
        else 
            table_PopName_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    table_PrioritizeTextures <= ap_const_lv32_0;

    table_PrioritizeTextures_ap_vld_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_1)) then 
            table_PrioritizeTextures_ap_vld <= ap_const_logic_1;
        else 
            table_PrioritizeTextures_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    table_PushAttrib <= ap_const_lv32_0;

    table_PushAttrib_ap_vld_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_1)) then 
            table_PushAttrib_ap_vld <= ap_const_logic_1;
        else 
            table_PushAttrib_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    table_PushClientAttrib <= ap_const_lv32_0;

    table_PushClientAttrib_ap_vld_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_1)) then 
            table_PushClientAttrib_ap_vld <= ap_const_logic_1;
        else 
            table_PushClientAttrib_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    table_PushMatrix <= ap_const_lv32_0;

    table_PushMatrix_ap_vld_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_1)) then 
            table_PushMatrix_ap_vld <= ap_const_logic_1;
        else 
            table_PushMatrix_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    table_PushName <= ap_const_lv32_0;

    table_PushName_ap_vld_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_1)) then 
            table_PushName_ap_vld <= ap_const_logic_1;
        else 
            table_PushName_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    table_RasterPos4f <= ap_const_lv32_0;

    table_RasterPos4f_ap_vld_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_1)) then 
            table_RasterPos4f_ap_vld <= ap_const_logic_1;
        else 
            table_RasterPos4f_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    table_ReadBuffer <= ap_const_lv32_0;

    table_ReadBuffer_ap_vld_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_1)) then 
            table_ReadBuffer_ap_vld <= ap_const_logic_1;
        else 
            table_ReadBuffer_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    table_ReadPixels <= ap_const_lv32_0;

    table_ReadPixels_ap_vld_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_1)) then 
            table_ReadPixels_ap_vld <= ap_const_logic_1;
        else 
            table_ReadPixels_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    table_Rectf <= ap_const_lv32_0;

    table_Rectf_ap_vld_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_1)) then 
            table_Rectf_ap_vld <= ap_const_logic_1;
        else 
            table_Rectf_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    table_RenderMode <= ap_const_lv32_0;

    table_RenderMode_ap_vld_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_1)) then 
            table_RenderMode_ap_vld <= ap_const_logic_1;
        else 
            table_RenderMode_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    table_Rotatef <= ap_const_lv32_0;

    table_Rotatef_ap_vld_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_1)) then 
            table_Rotatef_ap_vld <= ap_const_logic_1;
        else 
            table_Rotatef_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    table_Scalef <= ap_const_lv32_0;

    table_Scalef_ap_vld_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_1)) then 
            table_Scalef_ap_vld <= ap_const_logic_1;
        else 
            table_Scalef_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    table_Scissor <= ap_const_lv32_0;

    table_Scissor_ap_vld_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_1)) then 
            table_Scissor_ap_vld <= ap_const_logic_1;
        else 
            table_Scissor_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    table_SelectBuffer <= ap_const_lv32_0;

    table_SelectBuffer_ap_vld_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_1)) then 
            table_SelectBuffer_ap_vld <= ap_const_logic_1;
        else 
            table_SelectBuffer_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    table_ShadeModel <= ap_const_lv32_0;

    table_ShadeModel_ap_vld_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_1)) then 
            table_ShadeModel_ap_vld <= ap_const_logic_1;
        else 
            table_ShadeModel_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    table_StencilFunc <= ap_const_lv32_0;

    table_StencilFunc_ap_vld_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_1)) then 
            table_StencilFunc_ap_vld <= ap_const_logic_1;
        else 
            table_StencilFunc_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    table_StencilMask <= ap_const_lv32_0;

    table_StencilMask_ap_vld_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_1)) then 
            table_StencilMask_ap_vld <= ap_const_logic_1;
        else 
            table_StencilMask_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    table_StencilOp <= ap_const_lv32_0;

    table_StencilOp_ap_vld_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_1)) then 
            table_StencilOp_ap_vld <= ap_const_logic_1;
        else 
            table_StencilOp_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    table_TexCoord2f <= ap_const_lv32_0;

    table_TexCoord2f_ap_vld_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_1)) then 
            table_TexCoord2f_ap_vld <= ap_const_logic_1;
        else 
            table_TexCoord2f_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    table_TexCoord4f <= ap_const_lv32_0;

    table_TexCoord4f_ap_vld_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_1)) then 
            table_TexCoord4f_ap_vld <= ap_const_logic_1;
        else 
            table_TexCoord4f_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    table_TexCoordPointer <= ap_const_lv32_0;

    table_TexCoordPointer_ap_vld_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_1)) then 
            table_TexCoordPointer_ap_vld <= ap_const_logic_1;
        else 
            table_TexCoordPointer_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    table_TexEnvfv <= ap_const_lv32_0;

    table_TexEnvfv_ap_vld_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_1)) then 
            table_TexEnvfv_ap_vld <= ap_const_logic_1;
        else 
            table_TexEnvfv_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    table_TexGenfv <= ap_const_lv32_0;

    table_TexGenfv_ap_vld_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_1)) then 
            table_TexGenfv_ap_vld <= ap_const_logic_1;
        else 
            table_TexGenfv_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    table_TexImage1D <= ap_const_lv32_0;

    table_TexImage1D_ap_vld_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_1)) then 
            table_TexImage1D_ap_vld <= ap_const_logic_1;
        else 
            table_TexImage1D_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    table_TexImage2D <= ap_const_lv32_0;

    table_TexImage2D_ap_vld_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_1)) then 
            table_TexImage2D_ap_vld <= ap_const_logic_1;
        else 
            table_TexImage2D_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    table_TexParameterfv <= ap_const_lv32_0;

    table_TexParameterfv_ap_vld_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_1)) then 
            table_TexParameterfv_ap_vld <= ap_const_logic_1;
        else 
            table_TexParameterfv_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    table_TexSubImage1D <= ap_const_lv32_0;

    table_TexSubImage1D_ap_vld_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_1)) then 
            table_TexSubImage1D_ap_vld <= ap_const_logic_1;
        else 
            table_TexSubImage1D_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    table_TexSubImage2D <= ap_const_lv32_0;

    table_TexSubImage2D_ap_vld_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_1)) then 
            table_TexSubImage2D_ap_vld <= ap_const_logic_1;
        else 
            table_TexSubImage2D_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    table_Translatef <= ap_const_lv32_0;

    table_Translatef_ap_vld_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_1)) then 
            table_Translatef_ap_vld <= ap_const_logic_1;
        else 
            table_Translatef_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    table_Vertex2f <= ap_const_lv32_0;

    table_Vertex2f_ap_vld_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_1)) then 
            table_Vertex2f_ap_vld <= ap_const_logic_1;
        else 
            table_Vertex2f_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    table_Vertex3f <= ap_const_lv32_0;

    table_Vertex3f_ap_vld_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_1)) then 
            table_Vertex3f_ap_vld <= ap_const_logic_1;
        else 
            table_Vertex3f_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    table_Vertex3fv <= ap_const_lv32_0;

    table_Vertex3fv_ap_vld_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_1)) then 
            table_Vertex3fv_ap_vld <= ap_const_logic_1;
        else 
            table_Vertex3fv_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    table_Vertex4f <= ap_const_lv32_0;

    table_Vertex4f_ap_vld_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_1)) then 
            table_Vertex4f_ap_vld <= ap_const_logic_1;
        else 
            table_Vertex4f_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    table_VertexPointer <= ap_const_lv32_0;

    table_VertexPointer_ap_vld_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_1)) then 
            table_VertexPointer_ap_vld <= ap_const_logic_1;
        else 
            table_VertexPointer_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    table_Viewport <= ap_const_lv32_0;

    table_Viewport_ap_vld_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_1)) then 
            table_Viewport_ap_vld <= ap_const_logic_1;
        else 
            table_Viewport_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

end behav;
