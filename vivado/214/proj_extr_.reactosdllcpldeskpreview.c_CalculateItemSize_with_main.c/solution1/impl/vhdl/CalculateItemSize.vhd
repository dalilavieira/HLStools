-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2019.1
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity CalculateItemSize is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    pPreviewData_cxEdge : IN STD_LOGIC_VECTOR (31 downto 0);
    pPreviewData_cySizeFrame : IN STD_LOGIC_VECTOR (31 downto 0);
    pPreviewData_cyEdge : IN STD_LOGIC_VECTOR (31 downto 0);
    pPreviewData_cyCaption : IN STD_LOGIC_VECTOR (31 downto 0);
    pPreviewData_cyBorder : IN STD_LOGIC_VECTOR (31 downto 0);
    pPreviewData_cyMenu : IN STD_LOGIC_VECTOR (31 downto 0);
    pPreviewData_rcDialogButton_left : OUT STD_LOGIC_VECTOR (31 downto 0);
    pPreviewData_rcDialogButton_left_ap_vld : OUT STD_LOGIC;
    pPreviewData_rcDialogButton_right : OUT STD_LOGIC_VECTOR (31 downto 0);
    pPreviewData_rcDialogButton_right_ap_vld : OUT STD_LOGIC;
    pPreviewData_rcDialogButton_bottom : OUT STD_LOGIC_VECTOR (31 downto 0);
    pPreviewData_rcDialogButton_bottom_ap_vld : OUT STD_LOGIC;
    pPreviewData_rcDialogButton_top : OUT STD_LOGIC_VECTOR (31 downto 0);
    pPreviewData_rcDialogButton_top_ap_vld : OUT STD_LOGIC;
    pPreviewData_rcDialogClient_left : OUT STD_LOGIC_VECTOR (31 downto 0);
    pPreviewData_rcDialogClient_left_ap_vld : OUT STD_LOGIC;
    pPreviewData_rcDialogClient_top : OUT STD_LOGIC_VECTOR (31 downto 0);
    pPreviewData_rcDialogClient_top_ap_vld : OUT STD_LOGIC;
    pPreviewData_rcDialogClient_right : OUT STD_LOGIC_VECTOR (31 downto 0);
    pPreviewData_rcDialogClient_right_ap_vld : OUT STD_LOGIC;
    pPreviewData_rcDialogClient_bottom : OUT STD_LOGIC_VECTOR (31 downto 0);
    pPreviewData_rcDialogClient_bottom_ap_vld : OUT STD_LOGIC;
    pPreviewData_rcDialogFrame_left : OUT STD_LOGIC_VECTOR (31 downto 0);
    pPreviewData_rcDialogFrame_left_ap_vld : OUT STD_LOGIC;
    pPreviewData_rcDialogFrame_top : OUT STD_LOGIC_VECTOR (31 downto 0);
    pPreviewData_rcDialogFrame_top_ap_vld : OUT STD_LOGIC;
    pPreviewData_rcDialogFrame_right : OUT STD_LOGIC_VECTOR (31 downto 0);
    pPreviewData_rcDialogFrame_right_ap_vld : OUT STD_LOGIC;
    pPreviewData_rcDialogFrame_bottom : OUT STD_LOGIC_VECTOR (31 downto 0);
    pPreviewData_rcDialogFrame_bottom_ap_vld : OUT STD_LOGIC;
    pPreviewData_rcDialogCaption_left : OUT STD_LOGIC_VECTOR (31 downto 0);
    pPreviewData_rcDialogCaption_left_ap_vld : OUT STD_LOGIC;
    pPreviewData_rcDialogCaption_top : OUT STD_LOGIC_VECTOR (31 downto 0);
    pPreviewData_rcDialogCaption_top_ap_vld : OUT STD_LOGIC;
    pPreviewData_rcDialogCaption_right : OUT STD_LOGIC_VECTOR (31 downto 0);
    pPreviewData_rcDialogCaption_right_ap_vld : OUT STD_LOGIC;
    pPreviewData_rcDialogCaption_bottom : OUT STD_LOGIC_VECTOR (31 downto 0);
    pPreviewData_rcDialogCaption_bottom_ap_vld : OUT STD_LOGIC;
    pPreviewData_rcDialogCaptionButtons_left : OUT STD_LOGIC_VECTOR (31 downto 0);
    pPreviewData_rcDialogCaptionButtons_left_ap_vld : OUT STD_LOGIC;
    pPreviewData_rcDialogCaptionButtons_top : OUT STD_LOGIC_VECTOR (31 downto 0);
    pPreviewData_rcDialogCaptionButtons_top_ap_vld : OUT STD_LOGIC;
    pPreviewData_rcDialogCaptionButtons_right : OUT STD_LOGIC_VECTOR (31 downto 0);
    pPreviewData_rcDialogCaptionButtons_right_ap_vld : OUT STD_LOGIC;
    pPreviewData_rcDialogCaptionButtons_bottom : OUT STD_LOGIC_VECTOR (31 downto 0);
    pPreviewData_rcDialogCaptionButtons_bottom_ap_vld : OUT STD_LOGIC;
    pPreviewData_rcDesktop_left : IN STD_LOGIC_VECTOR (31 downto 0);
    pPreviewData_rcDesktop_top : IN STD_LOGIC_VECTOR (31 downto 0);
    pPreviewData_rcDesktop_right : IN STD_LOGIC_VECTOR (31 downto 0);
    pPreviewData_rcDesktop_bottom : IN STD_LOGIC_VECTOR (31 downto 0);
    pPreviewData_rcActiveClient_left : OUT STD_LOGIC_VECTOR (31 downto 0);
    pPreviewData_rcActiveClient_left_ap_vld : OUT STD_LOGIC;
    pPreviewData_rcActiveClient_top : OUT STD_LOGIC_VECTOR (31 downto 0);
    pPreviewData_rcActiveClient_top_ap_vld : OUT STD_LOGIC;
    pPreviewData_rcActiveClient_right : OUT STD_LOGIC_VECTOR (31 downto 0);
    pPreviewData_rcActiveClient_right_ap_vld : OUT STD_LOGIC;
    pPreviewData_rcActiveClient_bottom : OUT STD_LOGIC_VECTOR (31 downto 0);
    pPreviewData_rcActiveClient_bottom_ap_vld : OUT STD_LOGIC;
    pPreviewData_rcActiveScroll_top : OUT STD_LOGIC_VECTOR (31 downto 0);
    pPreviewData_rcActiveScroll_top_ap_vld : OUT STD_LOGIC;
    pPreviewData_rcActiveScroll_right : OUT STD_LOGIC_VECTOR (31 downto 0);
    pPreviewData_rcActiveScroll_right_ap_vld : OUT STD_LOGIC;
    pPreviewData_rcActiveScroll_bottom : OUT STD_LOGIC_VECTOR (31 downto 0);
    pPreviewData_rcActiveScroll_bottom_ap_vld : OUT STD_LOGIC;
    pPreviewData_rcActiveScroll_left : OUT STD_LOGIC_VECTOR (31 downto 0);
    pPreviewData_rcActiveScroll_left_ap_vld : OUT STD_LOGIC;
    pPreviewData_cxScrollbar : IN STD_LOGIC_VECTOR (31 downto 0);
    pPreviewData_rcActiveFrame_left : OUT STD_LOGIC_VECTOR (31 downto 0);
    pPreviewData_rcActiveFrame_left_ap_vld : OUT STD_LOGIC;
    pPreviewData_rcActiveFrame_top : OUT STD_LOGIC_VECTOR (31 downto 0);
    pPreviewData_rcActiveFrame_top_ap_vld : OUT STD_LOGIC;
    pPreviewData_rcActiveFrame_right : OUT STD_LOGIC_VECTOR (31 downto 0);
    pPreviewData_rcActiveFrame_right_ap_vld : OUT STD_LOGIC;
    pPreviewData_rcActiveFrame_bottom : OUT STD_LOGIC_VECTOR (31 downto 0);
    pPreviewData_rcActiveFrame_bottom_ap_vld : OUT STD_LOGIC;
    pPreviewData_rcActiveMenuBar_left : OUT STD_LOGIC_VECTOR (31 downto 0);
    pPreviewData_rcActiveMenuBar_left_ap_vld : OUT STD_LOGIC;
    pPreviewData_rcActiveMenuBar_top : OUT STD_LOGIC_VECTOR (31 downto 0);
    pPreviewData_rcActiveMenuBar_top_ap_vld : OUT STD_LOGIC;
    pPreviewData_rcActiveMenuBar_right : OUT STD_LOGIC_VECTOR (31 downto 0);
    pPreviewData_rcActiveMenuBar_right_ap_vld : OUT STD_LOGIC;
    pPreviewData_rcActiveMenuBar_bottom : OUT STD_LOGIC_VECTOR (31 downto 0);
    pPreviewData_rcActiveMenuBar_bottom_ap_vld : OUT STD_LOGIC;
    pPreviewData_rcActiveCaption_left : OUT STD_LOGIC_VECTOR (31 downto 0);
    pPreviewData_rcActiveCaption_left_ap_vld : OUT STD_LOGIC;
    pPreviewData_rcActiveCaption_top : OUT STD_LOGIC_VECTOR (31 downto 0);
    pPreviewData_rcActiveCaption_top_ap_vld : OUT STD_LOGIC;
    pPreviewData_rcActiveCaption_right : OUT STD_LOGIC_VECTOR (31 downto 0);
    pPreviewData_rcActiveCaption_right_ap_vld : OUT STD_LOGIC;
    pPreviewData_rcActiveCaption_bottom : OUT STD_LOGIC_VECTOR (31 downto 0);
    pPreviewData_rcActiveCaption_bottom_ap_vld : OUT STD_LOGIC;
    pPreviewData_rcActiveCaptionButtons_left : OUT STD_LOGIC_VECTOR (31 downto 0);
    pPreviewData_rcActiveCaptionButtons_left_ap_vld : OUT STD_LOGIC;
    pPreviewData_rcActiveCaptionButtons_top : OUT STD_LOGIC_VECTOR (31 downto 0);
    pPreviewData_rcActiveCaptionButtons_top_ap_vld : OUT STD_LOGIC;
    pPreviewData_rcActiveCaptionButtons_right : OUT STD_LOGIC_VECTOR (31 downto 0);
    pPreviewData_rcActiveCaptionButtons_right_ap_vld : OUT STD_LOGIC;
    pPreviewData_rcActiveCaptionButtons_bottom : OUT STD_LOGIC_VECTOR (31 downto 0);
    pPreviewData_rcActiveCaptionButtons_bottom_ap_vld : OUT STD_LOGIC;
    pPreviewData_rcInactiveCaption_left : OUT STD_LOGIC_VECTOR (31 downto 0);
    pPreviewData_rcInactiveCaption_left_ap_vld : OUT STD_LOGIC;
    pPreviewData_rcInactiveCaption_top : OUT STD_LOGIC_VECTOR (31 downto 0);
    pPreviewData_rcInactiveCaption_top_ap_vld : OUT STD_LOGIC;
    pPreviewData_rcInactiveCaption_right : OUT STD_LOGIC_VECTOR (31 downto 0);
    pPreviewData_rcInactiveCaption_right_ap_vld : OUT STD_LOGIC;
    pPreviewData_rcInactiveCaption_bottom : OUT STD_LOGIC_VECTOR (31 downto 0);
    pPreviewData_rcInactiveCaption_bottom_ap_vld : OUT STD_LOGIC;
    pPreviewData_rcInactiveFrame_left : OUT STD_LOGIC_VECTOR (31 downto 0);
    pPreviewData_rcInactiveFrame_left_ap_vld : OUT STD_LOGIC;
    pPreviewData_rcInactiveFrame_top : OUT STD_LOGIC_VECTOR (31 downto 0);
    pPreviewData_rcInactiveFrame_top_ap_vld : OUT STD_LOGIC;
    pPreviewData_rcInactiveFrame_right : OUT STD_LOGIC_VECTOR (31 downto 0);
    pPreviewData_rcInactiveFrame_right_ap_vld : OUT STD_LOGIC;
    pPreviewData_rcInactiveFrame_bottom : OUT STD_LOGIC_VECTOR (31 downto 0);
    pPreviewData_rcInactiveFrame_bottom_ap_vld : OUT STD_LOGIC;
    pPreviewData_rcInactiveCaptionButtons_left : OUT STD_LOGIC_VECTOR (31 downto 0);
    pPreviewData_rcInactiveCaptionButtons_left_ap_vld : OUT STD_LOGIC;
    pPreviewData_rcInactiveCaptionButtons_top : OUT STD_LOGIC_VECTOR (31 downto 0);
    pPreviewData_rcInactiveCaptionButtons_top_ap_vld : OUT STD_LOGIC;
    pPreviewData_rcInactiveCaptionButtons_right : OUT STD_LOGIC_VECTOR (31 downto 0);
    pPreviewData_rcInactiveCaptionButtons_right_ap_vld : OUT STD_LOGIC;
    pPreviewData_rcInactiveCaptionButtons_bottom : OUT STD_LOGIC_VECTOR (31 downto 0);
    pPreviewData_rcInactiveCaptionButtons_bottom_ap_vld : OUT STD_LOGIC;
    ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of CalculateItemSize is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "CalculateItemSize,hls_ip_2019_1,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7k160t-fbg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.375000,HLS_SYN_LAT=2,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=8,HLS_SYN_FF=339,HLS_SYN_LUT=2942,HLS_VERSION=2019_1}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_FFFFFFE2 : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111100010";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_FFFFFFE7 : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111100111";
    constant ap_const_lv32_FFFFFFE6 : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111100110";
    constant ap_const_lv32_FFFFFFFE : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111110";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv65_147AE147B : STD_LOGIC_VECTOR (64 downto 0) := "00000000000000000000000000000000101000111101011100001010001111011";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_27 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100111";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv32_FFFFFFFB : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111011";
    constant ap_const_lv32_FFFFFFF8 : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111000";
    constant ap_const_lv32_FFFFFFF6 : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111110110";
    constant ap_const_lv32_FFFFFFDA : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111011010";
    constant ap_const_lv32_FFFFFFCC : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111001100";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_FFFFFFF5 : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111110101";
    constant ap_const_lv65_0 : STD_LOGIC_VECTOR (64 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv26_3 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000000000000011";
    constant ap_const_lv26_3FFFFFD : STD_LOGIC_VECTOR (25 downto 0) := "11111111111111111111111101";
    constant ap_const_lv26_2 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000000000000010";
    constant ap_const_lv26_3FFFFEB : STD_LOGIC_VECTOR (25 downto 0) := "11111111111111111111101011";
    constant ap_const_lv26_5 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000000000000101";
    constant ap_const_lv26_3FFFFFB : STD_LOGIC_VECTOR (25 downto 0) := "11111111111111111111111011";
    constant ap_const_lv26_3FFFFB4 : STD_LOGIC_VECTOR (25 downto 0) := "11111111111111111110110100";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_50 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010000";
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal ap_CS_fsm : STD_LOGIC_VECTOR (2 downto 0) := "001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal add_ln62_2_fu_700_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln62_2_reg_1374 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln111_fu_761_p2 : STD_LOGIC_VECTOR (64 downto 0);
    signal mul_ln111_reg_1381 : STD_LOGIC_VECTOR (64 downto 0);
    signal tmp_reg_1386 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_2_reg_1392 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln112_fu_801_p2 : STD_LOGIC_VECTOR (64 downto 0);
    signal mul_ln112_reg_1397 : STD_LOGIC_VECTOR (64 downto 0);
    signal tmp_3_reg_1402 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_5_reg_1408 : STD_LOGIC_VECTOR (25 downto 0);
    signal add_ln79_2_fu_976_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln79_2_reg_1413 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal add_ln82_fu_1020_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln82_reg_1423 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln119_1_fu_1182_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln119_1_reg_1431 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln137_fu_1228_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal add_ln137_reg_1437 : STD_LOGIC_VECTOR (25 downto 0);
    signal sub_ln100_1_fu_725_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln63_1_fu_895_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln64_fu_906_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln73_1_fu_945_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln80_1_fu_988_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln81_1_fu_1006_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln87_fu_1040_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln111_1_fu_1090_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln112_1_fu_1137_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln118_fu_1166_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal add_ln94_1_fu_1251_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln116_fu_1272_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln137_fu_1341_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln62_fu_688_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln62_1_fu_694_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln100_fu_713_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln100_fu_719_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln111_fu_739_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln111_1_fu_745_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln111_fu_751_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln111_fu_761_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln112_fu_785_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln112_fu_791_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln112_fu_801_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln61_fu_866_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln61_1_fu_872_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln63_fu_884_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln63_fu_889_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln64_fu_901_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln73_fu_940_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln79_fu_965_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln79_1_fu_970_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln80_fu_982_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln81_fu_995_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln81_fu_1000_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln82_fu_1014_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln111_1_fu_1055_p2 : STD_LOGIC_VECTOR (64 downto 0);
    signal tmp_1_fu_1060_p4 : STD_LOGIC_VECTOR (25 downto 0);
    signal sext_ln111_1_fu_1070_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln111_2_fu_1074_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln111_fu_1077_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln111_2_fu_1084_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln112_fu_1102_p2 : STD_LOGIC_VECTOR (64 downto 0);
    signal tmp_4_fu_1107_p4 : STD_LOGIC_VECTOR (25 downto 0);
    signal sext_ln112_1_fu_1117_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln112_2_fu_1121_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln112_fu_1124_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln112_1_fu_1131_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln111_fu_1098_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal add_ln117_fu_1149_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal trunc_ln112_fu_1145_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal add_ln118_fu_1160_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal add_ln119_fu_1172_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal sext_ln119_fu_1178_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln122_fu_1188_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal add_ln123_fu_1199_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal add_ln124_fu_1210_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal add_ln94_fu_1246_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln137_fu_1285_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln137_1_fu_1288_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln137_fu_1301_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal lshr_ln137_1_fu_1307_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal zext_ln137_fu_1317_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal lshr_ln137_2_fu_1327_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_6_fu_1293_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln137_1_fu_1321_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln137_1_fu_1337_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (2 downto 0);


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                add_ln119_1_reg_1431 <= add_ln119_1_fu_1182_p2;
                add_ln137_reg_1437 <= add_ln137_fu_1228_p2;
                add_ln79_2_reg_1413 <= add_ln79_2_fu_976_p2;
                add_ln82_reg_1423 <= add_ln82_fu_1020_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                add_ln62_2_reg_1374 <= add_ln62_2_fu_700_p2;
                    mul_ln111_reg_1381(64 downto 2) <= mul_ln111_fu_761_p2(64 downto 2);
                mul_ln112_reg_1397 <= mul_ln112_fu_801_p2;
                tmp_2_reg_1392 <= mul_ln111_fu_761_p2(64 downto 39);
                tmp_3_reg_1402 <= add_ln112_fu_791_p2(31 downto 31);
                tmp_5_reg_1408 <= mul_ln112_fu_801_p2(64 downto 39);
                tmp_reg_1386 <= sub_ln111_fu_751_p2(31 downto 31);
            end if;
        end if;
    end process;
    mul_ln111_reg_1381(1 downto 0) <= "00";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXX";
        end case;
    end process;
    add_ln100_fu_713_p2 <= std_logic_vector(signed(ap_const_lv32_FFFFFFE6) + signed(pPreviewData_rcDesktop_bottom));
    add_ln112_fu_791_p2 <= std_logic_vector(unsigned(shl_ln112_fu_785_p2) + unsigned(pPreviewData_rcDesktop_right));
    add_ln116_fu_1272_p2 <= std_logic_vector(unsigned(ap_const_lv32_7) + unsigned(add_ln79_2_reg_1413));
    add_ln117_fu_1149_p2 <= std_logic_vector(unsigned(ap_const_lv26_3) + unsigned(trunc_ln111_fu_1098_p1));
    add_ln118_fu_1160_p2 <= std_logic_vector(signed(ap_const_lv26_3FFFFFD) + signed(trunc_ln112_fu_1145_p1));
    add_ln119_1_fu_1182_p2 <= std_logic_vector(unsigned(pPreviewData_cyCaption) + unsigned(sext_ln119_fu_1178_p1));
    add_ln119_fu_1172_p2 <= std_logic_vector(unsigned(ap_const_lv26_2) + unsigned(trunc_ln111_fu_1098_p1));
    add_ln122_fu_1188_p2 <= std_logic_vector(signed(ap_const_lv26_3FFFFEB) + signed(trunc_ln112_fu_1145_p1));
    add_ln123_fu_1199_p2 <= std_logic_vector(unsigned(ap_const_lv26_5) + unsigned(trunc_ln111_fu_1098_p1));
    add_ln124_fu_1210_p2 <= std_logic_vector(signed(ap_const_lv26_3FFFFFB) + signed(trunc_ln112_fu_1145_p1));
    add_ln137_1_fu_1288_p2 <= std_logic_vector(unsigned(add_ln79_2_reg_1413) + unsigned(sext_ln137_fu_1285_p1));
    add_ln137_fu_1228_p2 <= std_logic_vector(signed(ap_const_lv26_3FFFFB4) + signed(trunc_ln112_fu_1145_p1));
    add_ln61_1_fu_872_p2 <= std_logic_vector(unsigned(ap_const_lv32_9) + unsigned(pPreviewData_cySizeFrame));
    add_ln61_fu_866_p2 <= std_logic_vector(unsigned(pPreviewData_cxEdge) + unsigned(pPreviewData_rcDesktop_left));
    add_ln62_1_fu_694_p2 <= std_logic_vector(unsigned(ap_const_lv32_9) + unsigned(pPreviewData_cyEdge));
    add_ln62_2_fu_700_p2 <= std_logic_vector(unsigned(add_ln62_fu_688_p2) + unsigned(add_ln62_1_fu_694_p2));
    add_ln62_fu_688_p2 <= std_logic_vector(unsigned(pPreviewData_rcDesktop_top) + unsigned(pPreviewData_cySizeFrame));
    add_ln63_fu_884_p2 <= std_logic_vector(signed(ap_const_lv32_FFFFFFE6) + signed(pPreviewData_rcDesktop_right));
    add_ln64_fu_901_p2 <= std_logic_vector(unsigned(add_ln62_2_reg_1374) + unsigned(pPreviewData_cyCaption));
    add_ln73_1_fu_945_p2 <= std_logic_vector(unsigned(pPreviewData_rcDesktop_left) + unsigned(add_ln73_fu_940_p2));
    add_ln73_fu_940_p2 <= std_logic_vector(unsigned(ap_const_lv32_B) + unsigned(pPreviewData_cySizeFrame));
    add_ln79_1_fu_970_p2 <= std_logic_vector(unsigned(ap_const_lv32_1) + unsigned(add_ln73_1_fu_945_p2));
    add_ln79_2_fu_976_p2 <= std_logic_vector(unsigned(add_ln79_fu_965_p2) + unsigned(add_ln79_1_fu_970_p2));
    add_ln79_fu_965_p2 <= std_logic_vector(unsigned(pPreviewData_cxEdge) + unsigned(pPreviewData_cySizeFrame));
    add_ln80_1_fu_988_p2 <= std_logic_vector(unsigned(add_ln79_fu_965_p2) + unsigned(add_ln80_fu_982_p2));
    add_ln80_fu_982_p2 <= std_logic_vector(unsigned(ap_const_lv32_2) + unsigned(sub_ln64_fu_906_p2));
    add_ln81_fu_995_p2 <= std_logic_vector(signed(ap_const_lv32_FFFFFFF5) + signed(pPreviewData_rcDesktop_right));
    add_ln82_fu_1020_p2 <= std_logic_vector(unsigned(sub_ln82_fu_1014_p2) + unsigned(add_ln80_1_fu_988_p2));
    add_ln87_fu_1040_p2 <= std_logic_vector(signed(ap_const_lv32_FFFFFFFE) + signed(sub_ln81_1_fu_1006_p2));
    add_ln94_1_fu_1251_p2 <= std_logic_vector(unsigned(pPreviewData_cyMenu) + unsigned(add_ln94_fu_1246_p2));
    add_ln94_fu_1246_p2 <= std_logic_vector(unsigned(ap_const_lv32_2) + unsigned(add_ln82_reg_1423));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);

    ap_done_assign_proc : process(ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    ap_return <= ap_const_lv32_0;
    lshr_ln137_1_fu_1307_p4 <= sub_ln137_fu_1301_p2(31 downto 1);
    lshr_ln137_2_fu_1327_p4 <= add_ln137_1_fu_1288_p2(31 downto 1);
    mul_ln111_fu_761_p1 <= sub_ln111_fu_751_p2;
    mul_ln111_fu_761_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed('0' &ap_const_lv65_147AE147B) * signed(mul_ln111_fu_761_p1))), 65));
    mul_ln112_fu_801_p1 <= add_ln112_fu_791_p2;
    mul_ln112_fu_801_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed('0' &ap_const_lv65_147AE147B) * signed(mul_ln112_fu_801_p1))), 65));
    pPreviewData_rcActiveCaptionButtons_bottom <= std_logic_vector(signed(ap_const_lv32_FFFFFFFE) + signed(add_ln82_reg_1423));

    pPreviewData_rcActiveCaptionButtons_bottom_ap_vld_assign_proc : process(ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            pPreviewData_rcActiveCaptionButtons_bottom_ap_vld <= ap_const_logic_1;
        else 
            pPreviewData_rcActiveCaptionButtons_bottom_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    pPreviewData_rcActiveCaptionButtons_left <= std_logic_vector(signed(ap_const_lv32_FFFFFFCC) + signed(sub_ln81_1_fu_1006_p2));

    pPreviewData_rcActiveCaptionButtons_left_ap_vld_assign_proc : process(ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            pPreviewData_rcActiveCaptionButtons_left_ap_vld <= ap_const_logic_1;
        else 
            pPreviewData_rcActiveCaptionButtons_left_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    pPreviewData_rcActiveCaptionButtons_right <= add_ln87_fu_1040_p2;

    pPreviewData_rcActiveCaptionButtons_right_ap_vld_assign_proc : process(ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            pPreviewData_rcActiveCaptionButtons_right_ap_vld <= ap_const_logic_1;
        else 
            pPreviewData_rcActiveCaptionButtons_right_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    pPreviewData_rcActiveCaptionButtons_top <= std_logic_vector(unsigned(ap_const_lv32_2) + unsigned(add_ln80_1_fu_988_p2));

    pPreviewData_rcActiveCaptionButtons_top_ap_vld_assign_proc : process(ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            pPreviewData_rcActiveCaptionButtons_top_ap_vld <= ap_const_logic_1;
        else 
            pPreviewData_rcActiveCaptionButtons_top_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    pPreviewData_rcActiveCaption_bottom <= add_ln82_reg_1423;

    pPreviewData_rcActiveCaption_bottom_ap_vld_assign_proc : process(ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            pPreviewData_rcActiveCaption_bottom_ap_vld <= ap_const_logic_1;
        else 
            pPreviewData_rcActiveCaption_bottom_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    pPreviewData_rcActiveCaption_left <= add_ln79_2_reg_1413;

    pPreviewData_rcActiveCaption_left_ap_vld_assign_proc : process(ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            pPreviewData_rcActiveCaption_left_ap_vld <= ap_const_logic_1;
        else 
            pPreviewData_rcActiveCaption_left_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    pPreviewData_rcActiveCaption_right <= sub_ln81_1_fu_1006_p2;

    pPreviewData_rcActiveCaption_right_ap_vld_assign_proc : process(ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            pPreviewData_rcActiveCaption_right_ap_vld <= ap_const_logic_1;
        else 
            pPreviewData_rcActiveCaption_right_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    pPreviewData_rcActiveCaption_top <= add_ln80_1_fu_988_p2;

    pPreviewData_rcActiveCaption_top_ap_vld_assign_proc : process(ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            pPreviewData_rcActiveCaption_top_ap_vld <= ap_const_logic_1;
        else 
            pPreviewData_rcActiveCaption_top_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    pPreviewData_rcActiveClient_bottom <= sub_ln100_1_fu_725_p2;

    pPreviewData_rcActiveClient_bottom_ap_vld_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            pPreviewData_rcActiveClient_bottom_ap_vld <= ap_const_logic_1;
        else 
            pPreviewData_rcActiveClient_bottom_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    pPreviewData_rcActiveClient_left <= add_ln79_2_reg_1413;

    pPreviewData_rcActiveClient_left_ap_vld_assign_proc : process(ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            pPreviewData_rcActiveClient_left_ap_vld <= ap_const_logic_1;
        else 
            pPreviewData_rcActiveClient_left_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    pPreviewData_rcActiveClient_right <= sub_ln81_1_fu_1006_p2;

    pPreviewData_rcActiveClient_right_ap_vld_assign_proc : process(ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            pPreviewData_rcActiveClient_right_ap_vld <= ap_const_logic_1;
        else 
            pPreviewData_rcActiveClient_right_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    pPreviewData_rcActiveClient_top <= add_ln94_1_fu_1251_p2;

    pPreviewData_rcActiveClient_top_ap_vld_assign_proc : process(ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            pPreviewData_rcActiveClient_top_ap_vld <= ap_const_logic_1;
        else 
            pPreviewData_rcActiveClient_top_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    pPreviewData_rcActiveFrame_bottom <= std_logic_vector(signed(ap_const_lv32_FFFFFFE7) + signed(pPreviewData_rcDesktop_bottom));

    pPreviewData_rcActiveFrame_bottom_ap_vld_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            pPreviewData_rcActiveFrame_bottom_ap_vld <= ap_const_logic_1;
        else 
            pPreviewData_rcActiveFrame_bottom_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    pPreviewData_rcActiveFrame_left <= add_ln73_1_fu_945_p2;

    pPreviewData_rcActiveFrame_left_ap_vld_assign_proc : process(ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            pPreviewData_rcActiveFrame_left_ap_vld <= ap_const_logic_1;
        else 
            pPreviewData_rcActiveFrame_left_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    pPreviewData_rcActiveFrame_right <= std_logic_vector(signed(ap_const_lv32_FFFFFFF6) + signed(pPreviewData_rcDesktop_right));

    pPreviewData_rcActiveFrame_right_ap_vld_assign_proc : process(ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            pPreviewData_rcActiveFrame_right_ap_vld <= ap_const_logic_1;
        else 
            pPreviewData_rcActiveFrame_right_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    pPreviewData_rcActiveFrame_top <= std_logic_vector(unsigned(ap_const_lv32_1) + unsigned(sub_ln64_fu_906_p2));

    pPreviewData_rcActiveFrame_top_ap_vld_assign_proc : process(ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            pPreviewData_rcActiveFrame_top_ap_vld <= ap_const_logic_1;
        else 
            pPreviewData_rcActiveFrame_top_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    pPreviewData_rcActiveMenuBar_bottom <= add_ln94_1_fu_1251_p2;

    pPreviewData_rcActiveMenuBar_bottom_ap_vld_assign_proc : process(ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            pPreviewData_rcActiveMenuBar_bottom_ap_vld <= ap_const_logic_1;
        else 
            pPreviewData_rcActiveMenuBar_bottom_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    pPreviewData_rcActiveMenuBar_left <= add_ln79_2_reg_1413;

    pPreviewData_rcActiveMenuBar_left_ap_vld_assign_proc : process(ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            pPreviewData_rcActiveMenuBar_left_ap_vld <= ap_const_logic_1;
        else 
            pPreviewData_rcActiveMenuBar_left_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    pPreviewData_rcActiveMenuBar_right <= sub_ln81_1_fu_1006_p2;

    pPreviewData_rcActiveMenuBar_right_ap_vld_assign_proc : process(ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            pPreviewData_rcActiveMenuBar_right_ap_vld <= ap_const_logic_1;
        else 
            pPreviewData_rcActiveMenuBar_right_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    pPreviewData_rcActiveMenuBar_top <= std_logic_vector(unsigned(ap_const_lv32_1) + unsigned(add_ln82_reg_1423));

    pPreviewData_rcActiveMenuBar_top_ap_vld_assign_proc : process(ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            pPreviewData_rcActiveMenuBar_top_ap_vld <= ap_const_logic_1;
        else 
            pPreviewData_rcActiveMenuBar_top_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    pPreviewData_rcActiveScroll_bottom <= std_logic_vector(signed(ap_const_lv32_FFFFFFFE) + signed(sub_ln100_1_fu_725_p2));

    pPreviewData_rcActiveScroll_bottom_ap_vld_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            pPreviewData_rcActiveScroll_bottom_ap_vld <= ap_const_logic_1;
        else 
            pPreviewData_rcActiveScroll_bottom_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    pPreviewData_rcActiveScroll_left <= std_logic_vector(unsigned(add_ln87_fu_1040_p2) - unsigned(pPreviewData_cxScrollbar));

    pPreviewData_rcActiveScroll_left_ap_vld_assign_proc : process(ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            pPreviewData_rcActiveScroll_left_ap_vld <= ap_const_logic_1;
        else 
            pPreviewData_rcActiveScroll_left_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    pPreviewData_rcActiveScroll_right <= add_ln87_fu_1040_p2;

    pPreviewData_rcActiveScroll_right_ap_vld_assign_proc : process(ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            pPreviewData_rcActiveScroll_right_ap_vld <= ap_const_logic_1;
        else 
            pPreviewData_rcActiveScroll_right_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    pPreviewData_rcActiveScroll_top <= std_logic_vector(unsigned(ap_const_lv32_2) + unsigned(add_ln94_1_fu_1251_p2));

    pPreviewData_rcActiveScroll_top_ap_vld_assign_proc : process(ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            pPreviewData_rcActiveScroll_top_ap_vld <= ap_const_logic_1;
        else 
            pPreviewData_rcActiveScroll_top_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    pPreviewData_rcDialogButton_bottom <= std_logic_vector(signed(ap_const_lv32_FFFFFFF6) + signed(pPreviewData_rcDesktop_bottom));

    pPreviewData_rcDialogButton_bottom_ap_vld_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            pPreviewData_rcDialogButton_bottom_ap_vld <= ap_const_logic_1;
        else 
            pPreviewData_rcDialogButton_bottom_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    pPreviewData_rcDialogButton_left <= select_ln137_fu_1341_p3;

    pPreviewData_rcDialogButton_left_ap_vld_assign_proc : process(ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            pPreviewData_rcDialogButton_left_ap_vld <= ap_const_logic_1;
        else 
            pPreviewData_rcDialogButton_left_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    pPreviewData_rcDialogButton_right <= std_logic_vector(unsigned(ap_const_lv32_50) + unsigned(select_ln137_fu_1341_p3));

    pPreviewData_rcDialogButton_right_ap_vld_assign_proc : process(ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            pPreviewData_rcDialogButton_right_ap_vld <= ap_const_logic_1;
        else 
            pPreviewData_rcDialogButton_right_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    pPreviewData_rcDialogButton_top <= std_logic_vector(signed(ap_const_lv32_FFFFFFDA) + signed(pPreviewData_rcDesktop_bottom));

    pPreviewData_rcDialogButton_top_ap_vld_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            pPreviewData_rcDialogButton_top_ap_vld <= ap_const_logic_1;
        else 
            pPreviewData_rcDialogButton_top_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    pPreviewData_rcDialogCaptionButtons_bottom <= std_logic_vector(unsigned(select_ln111_1_fu_1090_p3) + unsigned(pPreviewData_cyCaption));

    pPreviewData_rcDialogCaptionButtons_bottom_ap_vld_assign_proc : process(ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            pPreviewData_rcDialogCaptionButtons_bottom_ap_vld <= ap_const_logic_1;
        else 
            pPreviewData_rcDialogCaptionButtons_bottom_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

        pPreviewData_rcDialogCaptionButtons_left <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln122_fu_1188_p2),32));


    pPreviewData_rcDialogCaptionButtons_left_ap_vld_assign_proc : process(ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            pPreviewData_rcDialogCaptionButtons_left_ap_vld <= ap_const_logic_1;
        else 
            pPreviewData_rcDialogCaptionButtons_left_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

        pPreviewData_rcDialogCaptionButtons_right <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln124_fu_1210_p2),32));


    pPreviewData_rcDialogCaptionButtons_right_ap_vld_assign_proc : process(ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            pPreviewData_rcDialogCaptionButtons_right_ap_vld <= ap_const_logic_1;
        else 
            pPreviewData_rcDialogCaptionButtons_right_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

        pPreviewData_rcDialogCaptionButtons_top <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln123_fu_1199_p2),32));


    pPreviewData_rcDialogCaptionButtons_top_ap_vld_assign_proc : process(ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            pPreviewData_rcDialogCaptionButtons_top_ap_vld <= ap_const_logic_1;
        else 
            pPreviewData_rcDialogCaptionButtons_top_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    pPreviewData_rcDialogCaption_bottom <= add_ln119_1_reg_1431;

    pPreviewData_rcDialogCaption_bottom_ap_vld_assign_proc : process(ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            pPreviewData_rcDialogCaption_bottom_ap_vld <= ap_const_logic_1;
        else 
            pPreviewData_rcDialogCaption_bottom_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    pPreviewData_rcDialogCaption_left <= add_ln116_fu_1272_p2;

    pPreviewData_rcDialogCaption_left_ap_vld_assign_proc : process(ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            pPreviewData_rcDialogCaption_left_ap_vld <= ap_const_logic_1;
        else 
            pPreviewData_rcDialogCaption_left_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    pPreviewData_rcDialogCaption_right <= sext_ln118_fu_1166_p1;

    pPreviewData_rcDialogCaption_right_ap_vld_assign_proc : process(ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            pPreviewData_rcDialogCaption_right_ap_vld <= ap_const_logic_1;
        else 
            pPreviewData_rcDialogCaption_right_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

        pPreviewData_rcDialogCaption_top <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln117_fu_1149_p2),32));


    pPreviewData_rcDialogCaption_top_ap_vld_assign_proc : process(ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            pPreviewData_rcDialogCaption_top_ap_vld <= ap_const_logic_1;
        else 
            pPreviewData_rcDialogCaption_top_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    pPreviewData_rcDialogClient_bottom <= std_logic_vector(signed(ap_const_lv32_FFFFFFF8) + signed(pPreviewData_rcDesktop_bottom));

    pPreviewData_rcDialogClient_bottom_ap_vld_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            pPreviewData_rcDialogClient_bottom_ap_vld <= ap_const_logic_1;
        else 
            pPreviewData_rcDialogClient_bottom_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    pPreviewData_rcDialogClient_left <= add_ln116_fu_1272_p2;

    pPreviewData_rcDialogClient_left_ap_vld_assign_proc : process(ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            pPreviewData_rcDialogClient_left_ap_vld <= ap_const_logic_1;
        else 
            pPreviewData_rcDialogClient_left_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    pPreviewData_rcDialogClient_right <= sext_ln118_fu_1166_p1;

    pPreviewData_rcDialogClient_right_ap_vld_assign_proc : process(ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            pPreviewData_rcDialogClient_right_ap_vld <= ap_const_logic_1;
        else 
            pPreviewData_rcDialogClient_right_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    pPreviewData_rcDialogClient_top <= std_logic_vector(unsigned(ap_const_lv32_1) + unsigned(add_ln119_1_reg_1431));

    pPreviewData_rcDialogClient_top_ap_vld_assign_proc : process(ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            pPreviewData_rcDialogClient_top_ap_vld <= ap_const_logic_1;
        else 
            pPreviewData_rcDialogClient_top_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    pPreviewData_rcDialogFrame_bottom <= std_logic_vector(signed(ap_const_lv32_FFFFFFFB) + signed(pPreviewData_rcDesktop_bottom));

    pPreviewData_rcDialogFrame_bottom_ap_vld_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            pPreviewData_rcDialogFrame_bottom_ap_vld <= ap_const_logic_1;
        else 
            pPreviewData_rcDialogFrame_bottom_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    pPreviewData_rcDialogFrame_left <= std_logic_vector(unsigned(ap_const_lv32_4) + unsigned(add_ln79_2_reg_1413));

    pPreviewData_rcDialogFrame_left_ap_vld_assign_proc : process(ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            pPreviewData_rcDialogFrame_left_ap_vld <= ap_const_logic_1;
        else 
            pPreviewData_rcDialogFrame_left_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    pPreviewData_rcDialogFrame_right <= select_ln112_1_fu_1137_p3;

    pPreviewData_rcDialogFrame_right_ap_vld_assign_proc : process(ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            pPreviewData_rcDialogFrame_right_ap_vld <= ap_const_logic_1;
        else 
            pPreviewData_rcDialogFrame_right_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    pPreviewData_rcDialogFrame_top <= select_ln111_1_fu_1090_p3;

    pPreviewData_rcDialogFrame_top_ap_vld_assign_proc : process(ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            pPreviewData_rcDialogFrame_top_ap_vld <= ap_const_logic_1;
        else 
            pPreviewData_rcDialogFrame_top_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    pPreviewData_rcInactiveCaptionButtons_bottom <= std_logic_vector(signed(ap_const_lv32_FFFFFFFE) + signed(sub_ln64_fu_906_p2));

    pPreviewData_rcInactiveCaptionButtons_bottom_ap_vld_assign_proc : process(ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            pPreviewData_rcInactiveCaptionButtons_bottom_ap_vld <= ap_const_logic_1;
        else 
            pPreviewData_rcInactiveCaptionButtons_bottom_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    pPreviewData_rcInactiveCaptionButtons_left <= std_logic_vector(signed(ap_const_lv32_FFFFFFCC) + signed(sub_ln63_1_fu_895_p2));

    pPreviewData_rcInactiveCaptionButtons_left_ap_vld_assign_proc : process(ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            pPreviewData_rcInactiveCaptionButtons_left_ap_vld <= ap_const_logic_1;
        else 
            pPreviewData_rcInactiveCaptionButtons_left_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    pPreviewData_rcInactiveCaptionButtons_right <= std_logic_vector(signed(ap_const_lv32_FFFFFFFE) + signed(sub_ln63_1_fu_895_p2));

    pPreviewData_rcInactiveCaptionButtons_right_ap_vld_assign_proc : process(ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            pPreviewData_rcInactiveCaptionButtons_right_ap_vld <= ap_const_logic_1;
        else 
            pPreviewData_rcInactiveCaptionButtons_right_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    pPreviewData_rcInactiveCaptionButtons_top <= std_logic_vector(unsigned(ap_const_lv32_2) + unsigned(add_ln62_2_reg_1374));

    pPreviewData_rcInactiveCaptionButtons_top_ap_vld_assign_proc : process(ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            pPreviewData_rcInactiveCaptionButtons_top_ap_vld <= ap_const_logic_1;
        else 
            pPreviewData_rcInactiveCaptionButtons_top_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    pPreviewData_rcInactiveCaption_bottom <= sub_ln64_fu_906_p2;

    pPreviewData_rcInactiveCaption_bottom_ap_vld_assign_proc : process(ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            pPreviewData_rcInactiveCaption_bottom_ap_vld <= ap_const_logic_1;
        else 
            pPreviewData_rcInactiveCaption_bottom_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    pPreviewData_rcInactiveCaption_left <= std_logic_vector(unsigned(add_ln61_fu_866_p2) + unsigned(add_ln61_1_fu_872_p2));

    pPreviewData_rcInactiveCaption_left_ap_vld_assign_proc : process(ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            pPreviewData_rcInactiveCaption_left_ap_vld <= ap_const_logic_1;
        else 
            pPreviewData_rcInactiveCaption_left_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    pPreviewData_rcInactiveCaption_right <= sub_ln63_1_fu_895_p2;

    pPreviewData_rcInactiveCaption_right_ap_vld_assign_proc : process(ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            pPreviewData_rcInactiveCaption_right_ap_vld <= ap_const_logic_1;
        else 
            pPreviewData_rcInactiveCaption_right_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    pPreviewData_rcInactiveCaption_top <= add_ln62_2_reg_1374;

    pPreviewData_rcInactiveCaption_top_ap_vld_assign_proc : process(ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            pPreviewData_rcInactiveCaption_top_ap_vld <= ap_const_logic_1;
        else 
            pPreviewData_rcInactiveCaption_top_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    pPreviewData_rcInactiveFrame_bottom <= std_logic_vector(signed(ap_const_lv32_FFFFFFE2) + signed(pPreviewData_rcDesktop_bottom));

    pPreviewData_rcInactiveFrame_bottom_ap_vld_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            pPreviewData_rcInactiveFrame_bottom_ap_vld <= ap_const_logic_1;
        else 
            pPreviewData_rcInactiveFrame_bottom_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    pPreviewData_rcInactiveFrame_left <= std_logic_vector(unsigned(ap_const_lv32_8) + unsigned(pPreviewData_rcDesktop_left));

    pPreviewData_rcInactiveFrame_left_ap_vld_assign_proc : process(ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            pPreviewData_rcInactiveFrame_left_ap_vld <= ap_const_logic_1;
        else 
            pPreviewData_rcInactiveFrame_left_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    pPreviewData_rcInactiveFrame_right <= std_logic_vector(signed(ap_const_lv32_FFFFFFE7) + signed(pPreviewData_rcDesktop_right));

    pPreviewData_rcInactiveFrame_right_ap_vld_assign_proc : process(ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            pPreviewData_rcInactiveFrame_right_ap_vld <= ap_const_logic_1;
        else 
            pPreviewData_rcInactiveFrame_right_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    pPreviewData_rcInactiveFrame_top <= std_logic_vector(unsigned(ap_const_lv32_8) + unsigned(pPreviewData_rcDesktop_top));

    pPreviewData_rcInactiveFrame_top_ap_vld_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            pPreviewData_rcInactiveFrame_top_ap_vld <= ap_const_logic_1;
        else 
            pPreviewData_rcInactiveFrame_top_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    select_ln111_1_fu_1090_p3 <= 
        sub_ln111_2_fu_1084_p2 when (tmp_reg_1386(0) = '1') else 
        sext_ln111_2_fu_1074_p1;
    select_ln111_fu_1077_p3 <= 
        sext_ln111_1_fu_1070_p1 when (tmp_reg_1386(0) = '1') else 
        sext_ln111_2_fu_1074_p1;
    select_ln112_1_fu_1137_p3 <= 
        sub_ln112_1_fu_1131_p2 when (tmp_3_reg_1402(0) = '1') else 
        sext_ln112_2_fu_1121_p1;
    select_ln112_fu_1124_p3 <= 
        sext_ln112_1_fu_1117_p1 when (tmp_3_reg_1402(0) = '1') else 
        sext_ln112_2_fu_1121_p1;
    select_ln137_fu_1341_p3 <= 
        sub_ln137_1_fu_1321_p2 when (tmp_6_fu_1293_p3(0) = '1') else 
        zext_ln137_1_fu_1337_p1;
        sext_ln111_1_fu_1070_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_1_fu_1060_p4),32));

        sext_ln111_2_fu_1074_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_2_reg_1392),32));

        sext_ln112_1_fu_1117_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_4_fu_1107_p4),32));

        sext_ln112_2_fu_1121_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_5_reg_1408),32));

        sext_ln118_fu_1166_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln118_fu_1160_p2),32));

        sext_ln119_fu_1178_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln119_fu_1172_p2),32));

        sext_ln137_fu_1285_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln137_reg_1437),32));

    shl_ln111_1_fu_745_p2 <= std_logic_vector(shift_left(unsigned(pPreviewData_rcDesktop_bottom),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));
    shl_ln111_fu_739_p2 <= std_logic_vector(shift_left(unsigned(pPreviewData_rcDesktop_bottom),to_integer(unsigned('0' & ap_const_lv32_6(31-1 downto 0)))));
    shl_ln112_fu_785_p2 <= std_logic_vector(shift_left(unsigned(pPreviewData_rcDesktop_right),to_integer(unsigned('0' & ap_const_lv32_6(31-1 downto 0)))));
    sub_ln100_1_fu_725_p2 <= std_logic_vector(unsigned(sub_ln100_fu_719_p2) - unsigned(pPreviewData_cyEdge));
    sub_ln100_fu_719_p2 <= std_logic_vector(unsigned(add_ln100_fu_713_p2) - unsigned(pPreviewData_cySizeFrame));
    sub_ln111_1_fu_1055_p2 <= std_logic_vector(unsigned(ap_const_lv65_0) - unsigned(mul_ln111_reg_1381));
    sub_ln111_2_fu_1084_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(select_ln111_fu_1077_p3));
    sub_ln111_fu_751_p2 <= std_logic_vector(unsigned(shl_ln111_fu_739_p2) - unsigned(shl_ln111_1_fu_745_p2));
    sub_ln112_1_fu_1131_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(select_ln112_fu_1124_p3));
    sub_ln112_fu_1102_p2 <= std_logic_vector(unsigned(ap_const_lv65_0) - unsigned(mul_ln112_reg_1397));
    sub_ln137_1_fu_1321_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(zext_ln137_fu_1317_p1));
    sub_ln137_fu_1301_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(add_ln137_1_fu_1288_p2));
    sub_ln63_1_fu_895_p2 <= std_logic_vector(unsigned(sub_ln63_fu_889_p2) - unsigned(pPreviewData_cySizeFrame));
    sub_ln63_fu_889_p2 <= std_logic_vector(unsigned(add_ln63_fu_884_p2) - unsigned(pPreviewData_cxEdge));
    sub_ln64_fu_906_p2 <= std_logic_vector(unsigned(add_ln64_fu_901_p2) - unsigned(pPreviewData_cyBorder));
    sub_ln81_1_fu_1006_p2 <= std_logic_vector(unsigned(sub_ln81_fu_1000_p2) - unsigned(pPreviewData_cySizeFrame));
    sub_ln81_fu_1000_p2 <= std_logic_vector(unsigned(add_ln81_fu_995_p2) - unsigned(pPreviewData_cxEdge));
    sub_ln82_fu_1014_p2 <= std_logic_vector(unsigned(pPreviewData_cyCaption) - unsigned(pPreviewData_cyBorder));
    tmp_1_fu_1060_p4 <= sub_ln111_1_fu_1055_p2(64 downto 39);
    tmp_4_fu_1107_p4 <= sub_ln112_fu_1102_p2(64 downto 39);
    tmp_6_fu_1293_p3 <= add_ln137_1_fu_1288_p2(31 downto 31);
    trunc_ln111_fu_1098_p1 <= select_ln111_1_fu_1090_p3(26 - 1 downto 0);
    trunc_ln112_fu_1145_p1 <= select_ln112_1_fu_1137_p3(26 - 1 downto 0);
    zext_ln137_1_fu_1337_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln137_2_fu_1327_p4),32));
    zext_ln137_fu_1317_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln137_1_fu_1307_p4),32));
end behav;
