-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2019.1
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity usage_to_carbon is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    usage : IN STD_LOGIC_VECTOR (31 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of usage_to_carbon is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "usage_to_carbon,hls_ip_2019_1,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7k160t-fbg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.322000,HLS_SYN_LAT=1,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=13,HLS_SYN_LUT=1338,HLS_VERSION=2019_1}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_C6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011000110";
    constant ap_const_lv32_121 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100100001";
    constant ap_const_lv32_A2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010100010";
    constant ap_const_lv32_113 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100010011";
    constant ap_const_lv32_9D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010011101";
    constant ap_const_lv32_B9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010111001";
    constant ap_const_lv32_115 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100010101";
    constant ap_const_lv32_C5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011000101";
    constant ap_const_lv32_ED : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011101101";
    constant ap_const_lv32_9A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010011010";
    constant ap_const_lv32_99 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010011001";
    constant ap_const_lv32_C9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011001001";
    constant ap_const_lv32_CA : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011001010";
    constant ap_const_lv32_88 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010001000";
    constant ap_const_lv32_C8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011001000";
    constant ap_const_lv32_E4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011100100";
    constant ap_const_lv32_85 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010000101";
    constant ap_const_lv32_E2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011100010";
    constant ap_const_lv32_E3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011100011";
    constant ap_const_lv32_E0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011100000";
    constant ap_const_lv32_E1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011100001";
    constant ap_const_lv32_DE : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011011110";
    constant ap_const_lv32_DF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011011111";
    constant ap_const_lv32_DC : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011011100";
    constant ap_const_lv32_DD : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011011101";
    constant ap_const_lv32_D7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011010111";
    constant ap_const_lv32_D8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011011000";
    constant ap_const_lv32_D5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011010101";
    constant ap_const_lv32_D6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011010110";
    constant ap_const_lv32_D3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011010011";
    constant ap_const_lv32_D4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011010100";
    constant ap_const_lv32_D1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011010001";
    constant ap_const_lv32_D2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011010010";
    constant ap_const_lv32_120 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100100000";
    constant ap_const_lv32_D0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011010000";
    constant ap_const_lv32_11B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100011011";
    constant ap_const_lv32_A1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010100001";
    constant ap_const_lv32_B4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010110100";
    constant ap_const_lv32_119 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100011001";
    constant ap_const_lv32_A5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010100101";
    constant ap_const_lv32_B0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010110000";
    constant ap_const_lv32_BF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010111111";
    constant ap_const_lv32_BE : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010111110";
    constant ap_const_lv32_114 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100010100";
    constant ap_const_lv32_118 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100011000";
    constant ap_const_lv32_CD : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011001101";
    constant ap_const_lv32_108 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100001000";
    constant ap_const_lv32_CF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011001111";
    constant ap_const_lv32_CB : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011001011";
    constant ap_const_lv32_AC : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010101100";
    constant ap_const_lv32_CC : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011001100";
    constant ap_const_lv32_AE : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010101110";
    constant ap_const_lv32_AA : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010101010";
    constant ap_const_lv32_AB : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010101011";
    constant ap_const_lv32_94 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010010100";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv7_7F : STD_LOGIC_VECTOR (6 downto 0) := "1111111";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv7_36 : STD_LOGIC_VECTOR (6 downto 0) := "0110110";
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal ap_CS_fsm : STD_LOGIC_VECTOR (1 downto 0) := "01";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal and_ln304_43_fu_662_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln304_43_reg_798 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln304_45_fu_668_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln304_45_reg_803 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln304_46_fu_674_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln304_46_reg_808 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln304_47_fu_680_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln304_47_reg_813 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln304_48_fu_686_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln304_48_reg_818 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln304_49_fu_692_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln304_49_reg_823 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln304_50_fu_698_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln304_50_reg_828 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln304_51_fu_704_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln304_51_reg_833 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln304_52_fu_710_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln304_52_reg_838 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln304_53_fu_716_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln304_53_reg_843 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln304_54_fu_722_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln304_54_reg_848 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln304_2_fu_146_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln304_1_fu_140_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln304_fu_134_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln304_fu_152_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln304_4_fu_170_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln304_3_fu_164_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln304_1_fu_158_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln304_2_fu_176_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln304_6_fu_194_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln304_5_fu_188_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln304_3_fu_182_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln304_4_fu_200_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln304_8_fu_218_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln304_7_fu_212_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln304_5_fu_206_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln304_6_fu_224_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln304_10_fu_242_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln304_9_fu_236_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln304_7_fu_230_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln304_8_fu_248_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln304_12_fu_266_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln304_11_fu_260_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln304_9_fu_254_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln304_10_fu_272_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln304_14_fu_290_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln304_13_fu_284_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln304_11_fu_278_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln304_12_fu_296_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln304_16_fu_314_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln304_15_fu_308_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln304_13_fu_302_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln304_14_fu_320_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln304_18_fu_338_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln304_17_fu_332_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln304_15_fu_326_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln304_16_fu_344_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln304_20_fu_362_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln304_19_fu_356_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln304_17_fu_350_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln304_18_fu_368_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln304_22_fu_386_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln304_21_fu_380_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln304_19_fu_374_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln304_20_fu_392_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln304_24_fu_410_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln304_23_fu_404_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln304_21_fu_398_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln304_22_fu_416_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln304_26_fu_434_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln304_25_fu_428_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln304_23_fu_422_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln304_24_fu_440_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln304_28_fu_458_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln304_27_fu_452_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln304_25_fu_446_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln304_26_fu_464_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln304_30_fu_482_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln304_29_fu_476_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln304_27_fu_470_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln304_28_fu_488_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln304_32_fu_506_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln304_31_fu_500_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln304_29_fu_494_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln304_30_fu_512_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln304_34_fu_530_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln304_33_fu_524_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln304_31_fu_518_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln304_32_fu_536_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln304_36_fu_554_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln304_35_fu_548_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln304_33_fu_542_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln304_34_fu_560_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln304_38_fu_578_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln304_37_fu_572_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln304_35_fu_566_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln304_36_fu_584_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln304_40_fu_602_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln304_39_fu_596_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln304_37_fu_590_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln304_38_fu_608_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln304_42_fu_626_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln304_41_fu_620_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln304_39_fu_614_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln304_40_fu_632_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln304_44_fu_650_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln304_43_fu_644_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln304_41_fu_638_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln304_42_fu_656_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal and_ln304_44_fu_728_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln304_45_fu_732_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln304_46_fu_737_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln304_47_fu_741_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln304_48_fu_747_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln304_49_fu_751_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln304_50_fu_757_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln304_51_fu_761_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_fu_782_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln304_54_cast_fu_775_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln304_fu_767_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_0_fu_786_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (1 downto 0);


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                and_ln304_43_reg_798 <= and_ln304_43_fu_662_p2;
                icmp_ln304_45_reg_803 <= icmp_ln304_45_fu_668_p2;
                icmp_ln304_46_reg_808 <= icmp_ln304_46_fu_674_p2;
                icmp_ln304_47_reg_813 <= icmp_ln304_47_fu_680_p2;
                icmp_ln304_48_reg_818 <= icmp_ln304_48_fu_686_p2;
                icmp_ln304_49_reg_823 <= icmp_ln304_49_fu_692_p2;
                icmp_ln304_50_reg_828 <= icmp_ln304_50_fu_698_p2;
                icmp_ln304_51_reg_833 <= icmp_ln304_51_fu_704_p2;
                icmp_ln304_52_reg_838 <= icmp_ln304_52_fu_710_p2;
                icmp_ln304_53_reg_843 <= icmp_ln304_53_fu_716_p2;
                icmp_ln304_54_reg_848 <= icmp_ln304_54_fu_722_p2;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XX";
        end case;
    end process;
    and_ln304_10_fu_272_p2 <= (icmp_ln304_12_fu_266_p2 and icmp_ln304_11_fu_260_p2);
    and_ln304_11_fu_278_p2 <= (and_ln304_9_fu_254_p2 and and_ln304_10_fu_272_p2);
    and_ln304_12_fu_296_p2 <= (icmp_ln304_14_fu_290_p2 and icmp_ln304_13_fu_284_p2);
    and_ln304_13_fu_302_p2 <= (and_ln304_12_fu_296_p2 and and_ln304_11_fu_278_p2);
    and_ln304_14_fu_320_p2 <= (icmp_ln304_16_fu_314_p2 and icmp_ln304_15_fu_308_p2);
    and_ln304_15_fu_326_p2 <= (and_ln304_14_fu_320_p2 and and_ln304_13_fu_302_p2);
    and_ln304_16_fu_344_p2 <= (icmp_ln304_18_fu_338_p2 and icmp_ln304_17_fu_332_p2);
    and_ln304_17_fu_350_p2 <= (and_ln304_16_fu_344_p2 and and_ln304_15_fu_326_p2);
    and_ln304_18_fu_368_p2 <= (icmp_ln304_20_fu_362_p2 and icmp_ln304_19_fu_356_p2);
    and_ln304_19_fu_374_p2 <= (and_ln304_18_fu_368_p2 and and_ln304_17_fu_350_p2);
    and_ln304_1_fu_158_p2 <= (icmp_ln304_fu_134_p2 and and_ln304_fu_152_p2);
    and_ln304_20_fu_392_p2 <= (icmp_ln304_22_fu_386_p2 and icmp_ln304_21_fu_380_p2);
    and_ln304_21_fu_398_p2 <= (and_ln304_20_fu_392_p2 and and_ln304_19_fu_374_p2);
    and_ln304_22_fu_416_p2 <= (icmp_ln304_24_fu_410_p2 and icmp_ln304_23_fu_404_p2);
    and_ln304_23_fu_422_p2 <= (and_ln304_22_fu_416_p2 and and_ln304_21_fu_398_p2);
    and_ln304_24_fu_440_p2 <= (icmp_ln304_26_fu_434_p2 and icmp_ln304_25_fu_428_p2);
    and_ln304_25_fu_446_p2 <= (and_ln304_24_fu_440_p2 and and_ln304_23_fu_422_p2);
    and_ln304_26_fu_464_p2 <= (icmp_ln304_28_fu_458_p2 and icmp_ln304_27_fu_452_p2);
    and_ln304_27_fu_470_p2 <= (and_ln304_26_fu_464_p2 and and_ln304_25_fu_446_p2);
    and_ln304_28_fu_488_p2 <= (icmp_ln304_30_fu_482_p2 and icmp_ln304_29_fu_476_p2);
    and_ln304_29_fu_494_p2 <= (and_ln304_28_fu_488_p2 and and_ln304_27_fu_470_p2);
    and_ln304_2_fu_176_p2 <= (icmp_ln304_4_fu_170_p2 and icmp_ln304_3_fu_164_p2);
    and_ln304_30_fu_512_p2 <= (icmp_ln304_32_fu_506_p2 and icmp_ln304_31_fu_500_p2);
    and_ln304_31_fu_518_p2 <= (and_ln304_30_fu_512_p2 and and_ln304_29_fu_494_p2);
    and_ln304_32_fu_536_p2 <= (icmp_ln304_34_fu_530_p2 and icmp_ln304_33_fu_524_p2);
    and_ln304_33_fu_542_p2 <= (and_ln304_32_fu_536_p2 and and_ln304_31_fu_518_p2);
    and_ln304_34_fu_560_p2 <= (icmp_ln304_36_fu_554_p2 and icmp_ln304_35_fu_548_p2);
    and_ln304_35_fu_566_p2 <= (and_ln304_34_fu_560_p2 and and_ln304_33_fu_542_p2);
    and_ln304_36_fu_584_p2 <= (icmp_ln304_38_fu_578_p2 and icmp_ln304_37_fu_572_p2);
    and_ln304_37_fu_590_p2 <= (and_ln304_36_fu_584_p2 and and_ln304_35_fu_566_p2);
    and_ln304_38_fu_608_p2 <= (icmp_ln304_40_fu_602_p2 and icmp_ln304_39_fu_596_p2);
    and_ln304_39_fu_614_p2 <= (and_ln304_38_fu_608_p2 and and_ln304_37_fu_590_p2);
    and_ln304_3_fu_182_p2 <= (and_ln304_2_fu_176_p2 and and_ln304_1_fu_158_p2);
    and_ln304_40_fu_632_p2 <= (icmp_ln304_42_fu_626_p2 and icmp_ln304_41_fu_620_p2);
    and_ln304_41_fu_638_p2 <= (and_ln304_40_fu_632_p2 and and_ln304_39_fu_614_p2);
    and_ln304_42_fu_656_p2 <= (icmp_ln304_44_fu_650_p2 and icmp_ln304_43_fu_644_p2);
    and_ln304_43_fu_662_p2 <= (and_ln304_42_fu_656_p2 and and_ln304_41_fu_638_p2);
    and_ln304_44_fu_728_p2 <= (icmp_ln304_46_reg_808 and icmp_ln304_45_reg_803);
    and_ln304_45_fu_732_p2 <= (and_ln304_44_fu_728_p2 and and_ln304_43_reg_798);
    and_ln304_46_fu_737_p2 <= (icmp_ln304_48_reg_818 and icmp_ln304_47_reg_813);
    and_ln304_47_fu_741_p2 <= (and_ln304_46_fu_737_p2 and and_ln304_45_fu_732_p2);
    and_ln304_48_fu_747_p2 <= (icmp_ln304_50_reg_828 and icmp_ln304_49_reg_823);
    and_ln304_49_fu_751_p2 <= (and_ln304_48_fu_747_p2 and and_ln304_47_fu_741_p2);
    and_ln304_4_fu_200_p2 <= (icmp_ln304_6_fu_194_p2 and icmp_ln304_5_fu_188_p2);
    and_ln304_50_fu_757_p2 <= (icmp_ln304_52_reg_838 and icmp_ln304_51_reg_833);
    and_ln304_51_fu_761_p2 <= (and_ln304_50_fu_757_p2 and and_ln304_49_fu_751_p2);
    and_ln304_5_fu_206_p2 <= (and_ln304_4_fu_200_p2 and and_ln304_3_fu_182_p2);
    and_ln304_6_fu_224_p2 <= (icmp_ln304_8_fu_218_p2 and icmp_ln304_7_fu_212_p2);
    and_ln304_7_fu_230_p2 <= (and_ln304_6_fu_224_p2 and and_ln304_5_fu_206_p2);
    and_ln304_8_fu_248_p2 <= (icmp_ln304_9_fu_236_p2 and icmp_ln304_10_fu_242_p2);
    and_ln304_9_fu_254_p2 <= (and_ln304_8_fu_248_p2 and and_ln304_7_fu_230_p2);
    and_ln304_fu_152_p2 <= (icmp_ln304_2_fu_146_p2 and icmp_ln304_1_fu_140_p2);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);

    ap_done_assign_proc : process(ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    ap_return <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_0_fu_786_p3),32));
    empty_fu_782_p2 <= (icmp_ln304_54_reg_848 or icmp_ln304_53_reg_843);
    icmp_ln304_10_fu_242_p2 <= "0" when (usage = ap_const_lv32_99) else "1";
    icmp_ln304_11_fu_260_p2 <= "0" when (usage = ap_const_lv32_C9) else "1";
    icmp_ln304_12_fu_266_p2 <= "0" when (usage = ap_const_lv32_CA) else "1";
    icmp_ln304_13_fu_284_p2 <= "0" when (usage = ap_const_lv32_88) else "1";
    icmp_ln304_14_fu_290_p2 <= "0" when (usage = ap_const_lv32_C8) else "1";
    icmp_ln304_15_fu_308_p2 <= "0" when (usage = ap_const_lv32_E4) else "1";
    icmp_ln304_16_fu_314_p2 <= "0" when (usage = ap_const_lv32_85) else "1";
    icmp_ln304_17_fu_332_p2 <= "0" when (usage = ap_const_lv32_E2) else "1";
    icmp_ln304_18_fu_338_p2 <= "0" when (usage = ap_const_lv32_E3) else "1";
    icmp_ln304_19_fu_356_p2 <= "0" when (usage = ap_const_lv32_E0) else "1";
    icmp_ln304_1_fu_140_p2 <= "0" when (usage = ap_const_lv32_121) else "1";
    icmp_ln304_20_fu_362_p2 <= "0" when (usage = ap_const_lv32_E1) else "1";
    icmp_ln304_21_fu_380_p2 <= "0" when (usage = ap_const_lv32_DE) else "1";
    icmp_ln304_22_fu_386_p2 <= "0" when (usage = ap_const_lv32_DF) else "1";
    icmp_ln304_23_fu_404_p2 <= "0" when (usage = ap_const_lv32_DC) else "1";
    icmp_ln304_24_fu_410_p2 <= "0" when (usage = ap_const_lv32_DD) else "1";
    icmp_ln304_25_fu_428_p2 <= "0" when (usage = ap_const_lv32_D7) else "1";
    icmp_ln304_26_fu_434_p2 <= "0" when (usage = ap_const_lv32_D8) else "1";
    icmp_ln304_27_fu_452_p2 <= "0" when (usage = ap_const_lv32_D5) else "1";
    icmp_ln304_28_fu_458_p2 <= "0" when (usage = ap_const_lv32_D6) else "1";
    icmp_ln304_29_fu_476_p2 <= "0" when (usage = ap_const_lv32_D3) else "1";
    icmp_ln304_2_fu_146_p2 <= "0" when (usage = ap_const_lv32_A2) else "1";
    icmp_ln304_30_fu_482_p2 <= "0" when (usage = ap_const_lv32_D4) else "1";
    icmp_ln304_31_fu_500_p2 <= "0" when (usage = ap_const_lv32_D1) else "1";
    icmp_ln304_32_fu_506_p2 <= "0" when (usage = ap_const_lv32_D2) else "1";
    icmp_ln304_33_fu_524_p2 <= "0" when (usage = ap_const_lv32_120) else "1";
    icmp_ln304_34_fu_530_p2 <= "0" when (usage = ap_const_lv32_D0) else "1";
    icmp_ln304_35_fu_548_p2 <= "0" when (usage = ap_const_lv32_11B) else "1";
    icmp_ln304_36_fu_554_p2 <= "0" when (usage = ap_const_lv32_A1) else "1";
    icmp_ln304_37_fu_572_p2 <= "0" when (usage = ap_const_lv32_B4) else "1";
    icmp_ln304_38_fu_578_p2 <= "0" when (usage = ap_const_lv32_119) else "1";
    icmp_ln304_39_fu_596_p2 <= "0" when (usage = ap_const_lv32_A5) else "1";
    icmp_ln304_3_fu_164_p2 <= "0" when (usage = ap_const_lv32_113) else "1";
    icmp_ln304_40_fu_602_p2 <= "0" when (usage = ap_const_lv32_B0) else "1";
    icmp_ln304_41_fu_620_p2 <= "0" when (usage = ap_const_lv32_BF) else "1";
    icmp_ln304_42_fu_626_p2 <= "0" when (usage = ap_const_lv32_BE) else "1";
    icmp_ln304_43_fu_644_p2 <= "0" when (usage = ap_const_lv32_114) else "1";
    icmp_ln304_44_fu_650_p2 <= "0" when (usage = ap_const_lv32_118) else "1";
    icmp_ln304_45_fu_668_p2 <= "0" when (usage = ap_const_lv32_CD) else "1";
    icmp_ln304_46_fu_674_p2 <= "0" when (usage = ap_const_lv32_108) else "1";
    icmp_ln304_47_fu_680_p2 <= "0" when (usage = ap_const_lv32_CF) else "1";
    icmp_ln304_48_fu_686_p2 <= "0" when (usage = ap_const_lv32_CB) else "1";
    icmp_ln304_49_fu_692_p2 <= "0" when (usage = ap_const_lv32_AC) else "1";
    icmp_ln304_4_fu_170_p2 <= "0" when (usage = ap_const_lv32_9D) else "1";
    icmp_ln304_50_fu_698_p2 <= "0" when (usage = ap_const_lv32_CC) else "1";
    icmp_ln304_51_fu_704_p2 <= "0" when (usage = ap_const_lv32_AE) else "1";
    icmp_ln304_52_fu_710_p2 <= "0" when (usage = ap_const_lv32_AA) else "1";
    icmp_ln304_53_fu_716_p2 <= "1" when (usage = ap_const_lv32_AB) else "0";
    icmp_ln304_54_fu_722_p2 <= "1" when (usage = ap_const_lv32_94) else "0";
    icmp_ln304_5_fu_188_p2 <= "0" when (usage = ap_const_lv32_B9) else "1";
    icmp_ln304_6_fu_194_p2 <= "0" when (usage = ap_const_lv32_115) else "1";
    icmp_ln304_7_fu_212_p2 <= "0" when (usage = ap_const_lv32_C5) else "1";
    icmp_ln304_8_fu_218_p2 <= "0" when (usage = ap_const_lv32_ED) else "1";
    icmp_ln304_9_fu_236_p2 <= "0" when (usage = ap_const_lv32_9A) else "1";
    icmp_ln304_fu_134_p2 <= "1" when (usage = ap_const_lv32_C6) else "0";
    p_0_fu_786_p3 <= 
        select_ln304_54_cast_fu_775_p3 when (empty_fu_782_p2(0) = '1') else 
        select_ln304_fu_767_p3;
    select_ln304_54_cast_fu_775_p3 <= 
        ap_const_lv7_0 when (icmp_ln304_54_reg_848(0) = '1') else 
        ap_const_lv7_36;
    select_ln304_fu_767_p3 <= 
        ap_const_lv7_7F when (and_ln304_51_fu_761_p2(0) = '1') else 
        ap_const_lv7_0;
end behav;
