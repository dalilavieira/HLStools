// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="ttaenc_filter_process_c,hls_ip_2019_1,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7k160t-fbg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.365000,HLS_SYN_LAT=14,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=18,HLS_SYN_FF=797,HLS_SYN_LUT=1973,HLS_VERSION=2019_1}" *)

module ttaenc_filter_process_c (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        qm_address0,
        qm_ce0,
        qm_we0,
        qm_d0,
        qm_q0,
        qm_address1,
        qm_ce1,
        qm_we1,
        qm_d1,
        qm_q1,
        dx_address0,
        dx_ce0,
        dx_we0,
        dx_d0,
        dx_q0,
        dx_address1,
        dx_ce1,
        dx_we1,
        dx_d1,
        dx_q1,
        dl_address0,
        dl_ce0,
        dl_we0,
        dl_d0,
        dl_q0,
        dl_address1,
        dl_ce1,
        dl_we1,
        dl_d1,
        dl_q1,
        error_address0,
        error_ce0,
        error_we0,
        error_d0,
        error_q0,
        in_r_address0,
        in_r_ce0,
        in_r_we0,
        in_r_d0,
        in_r_q0,
        shift,
        round
);

parameter    ap_ST_fsm_state1 = 22'd1;
parameter    ap_ST_fsm_state2 = 22'd2;
parameter    ap_ST_fsm_state3 = 22'd4;
parameter    ap_ST_fsm_state4 = 22'd8;
parameter    ap_ST_fsm_state5 = 22'd16;
parameter    ap_ST_fsm_state6 = 22'd32;
parameter    ap_ST_fsm_state7 = 22'd64;
parameter    ap_ST_fsm_state8 = 22'd128;
parameter    ap_ST_fsm_state9 = 22'd256;
parameter    ap_ST_fsm_state10 = 22'd512;
parameter    ap_ST_fsm_state11 = 22'd1024;
parameter    ap_ST_fsm_state12 = 22'd2048;
parameter    ap_ST_fsm_state13 = 22'd4096;
parameter    ap_ST_fsm_state14 = 22'd8192;
parameter    ap_ST_fsm_state15 = 22'd16384;
parameter    ap_ST_fsm_state16 = 22'd32768;
parameter    ap_ST_fsm_state17 = 22'd65536;
parameter    ap_ST_fsm_state18 = 22'd131072;
parameter    ap_ST_fsm_state19 = 22'd262144;
parameter    ap_ST_fsm_state20 = 22'd524288;
parameter    ap_ST_fsm_state21 = 22'd1048576;
parameter    ap_ST_fsm_state22 = 22'd2097152;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [3:0] qm_address0;
output   qm_ce0;
output   qm_we0;
output  [31:0] qm_d0;
input  [31:0] qm_q0;
output  [3:0] qm_address1;
output   qm_ce1;
output   qm_we1;
output  [31:0] qm_d1;
input  [31:0] qm_q1;
output  [3:0] dx_address0;
output   dx_ce0;
output   dx_we0;
output  [31:0] dx_d0;
input  [31:0] dx_q0;
output  [3:0] dx_address1;
output   dx_ce1;
output   dx_we1;
output  [31:0] dx_d1;
input  [31:0] dx_q1;
output  [3:0] dl_address0;
output   dl_ce0;
output   dl_we0;
output  [31:0] dl_d0;
input  [31:0] dl_q0;
output  [3:0] dl_address1;
output   dl_ce1;
output   dl_we1;
output  [31:0] dl_d1;
input  [31:0] dl_q1;
output  [3:0] error_address0;
output   error_ce0;
output   error_we0;
output  [31:0] error_d0;
input  [31:0] error_q0;
output  [3:0] in_r_address0;
output   in_r_ce0;
output   in_r_we0;
output  [31:0] in_r_d0;
input  [31:0] in_r_q0;
input  [31:0] shift;
input  [31:0] round;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[3:0] qm_address0;
reg qm_ce0;
reg qm_we0;
reg[31:0] qm_d0;
reg[3:0] qm_address1;
reg qm_ce1;
reg qm_we1;
reg[31:0] qm_d1;
reg[3:0] dx_address0;
reg dx_ce0;
reg dx_we0;
reg[31:0] dx_d0;
reg[3:0] dx_address1;
reg dx_ce1;
reg dx_we1;
reg[31:0] dx_d1;
reg[3:0] dl_address0;
reg dl_ce0;
reg dl_we0;
reg[31:0] dl_d0;
reg[3:0] dl_address1;
reg dl_ce1;
reg dl_we1;
reg[31:0] dl_d1;
reg[3:0] error_address0;
reg error_ce0;
reg error_we0;
reg in_r_ce0;
reg in_r_we0;

(* fsm_encoding = "none" *) reg   [21:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [31:0] reg_603;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state10;
wire    ap_CS_fsm_state17;
wire    ap_CS_fsm_state18;
reg   [31:0] reg_608;
wire    ap_CS_fsm_state19;
reg   [31:0] reg_613;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state11;
reg   [31:0] reg_618;
reg   [31:0] reg_622;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_state12;
reg   [31:0] reg_626;
reg  signed [31:0] reg_630;
wire    ap_CS_fsm_state16;
reg  signed [31:0] reg_635;
reg   [31:0] reg_640;
reg   [31:0] reg_645;
wire   [31:0] grp_fu_664_p2;
reg   [31:0] reg_670;
wire    ap_CS_fsm_state20;
wire   [3:0] error_addr_reg_949;
wire    ap_CS_fsm_state2;
wire   [3:0] qm_addr_reg_979;
wire   [0:0] tmp_fu_674_p3;
reg   [0:0] tmp_reg_984;
wire   [0:0] icmp_ln22_fu_682_p2;
reg   [0:0] icmp_ln22_reg_988;
wire   [3:0] qm_addr_8_reg_992;
wire   [3:0] qm_addr_1_gep_fu_139_p3;
wire   [3:0] qm_addr_1_reg_997;
wire   [3:0] qm_addr_9_reg_1002;
wire   [3:0] qm_addr_10_reg_1007;
wire   [3:0] qm_addr_11_reg_1012;
wire   [3:0] qm_addr_12_reg_1017;
wire   [3:0] qm_addr_13_reg_1027;
wire   [3:0] qm_addr_14_reg_1032;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state8;
wire   [3:0] dl_addr_1_reg_1067;
wire    ap_CS_fsm_state9;
wire   [3:0] dx_addr_15_reg_1072;
wire   [3:0] dx_addr_16_reg_1078;
wire   [3:0] qm_addr_2_gep_fu_310_p3;
wire   [3:0] qm_addr_2_reg_1084;
wire   [3:0] qm_addr_3_gep_fu_319_p3;
wire   [3:0] qm_addr_3_reg_1089;
wire   [3:0] qm_addr_4_gep_fu_328_p3;
wire   [3:0] qm_addr_4_reg_1094;
wire   [3:0] qm_addr_5_gep_fu_337_p3;
wire   [3:0] qm_addr_5_reg_1099;
wire   [3:0] dx_addr_1_gep_fu_346_p3;
wire   [3:0] qm_addr_6_gep_fu_355_p3;
wire   [3:0] qm_addr_6_reg_1109;
wire   [3:0] qm_addr_7_gep_fu_364_p3;
wire   [3:0] qm_addr_7_reg_1114;
wire   [3:0] dx_addr_2_gep_fu_373_p3;
wire    ap_CS_fsm_state13;
wire   [3:0] dx_addr_3_gep_fu_382_p3;
reg   [31:0] qm_load_6_reg_1129;
reg   [31:0] qm_load_7_reg_1134;
wire   [3:0] dx_addr_4_gep_fu_391_p3;
wire    ap_CS_fsm_state14;
wire   [3:0] dx_addr_5_gep_fu_400_p3;
wire   [3:0] dx_addr_6_gep_fu_409_p3;
wire    ap_CS_fsm_state15;
wire   [3:0] dx_addr_7_gep_fu_418_p3;
wire   [3:0] qm_addr_15_gep_fu_427_p3;
wire   [3:0] dl_addr_2_reg_1164;
wire   [3:0] dl_addr_3_reg_1169;
wire   [3:0] dx_addr_17_reg_1174;
wire   [3:0] dx_addr_18_reg_1180;
wire   [3:0] qm_addr_16_gep_fu_472_p3;
reg  signed [31:0] dl_load_3_reg_1191;
wire   [3:0] qm_addr_17_gep_fu_481_p3;
wire   [31:0] mul_ln27_1_fu_770_p2;
reg   [31:0] mul_ln27_1_reg_1214;
reg  signed [31:0] dl_load_4_reg_1219;
wire   [3:0] qm_addr_18_gep_fu_508_p3;
reg  signed [31:0] dl_load_5_reg_1230;
wire   [3:0] qm_addr_19_gep_fu_517_p3;
wire   [3:0] dl_addr_6_reg_1241;
wire   [3:0] dl_addr_7_reg_1246;
wire   [31:0] add_ln27_fu_776_p2;
reg   [31:0] add_ln27_reg_1251;
reg   [1:0] trunc_ln_reg_1256;
reg   [0:0] tmp_1_reg_1261;
wire   [3:0] qm_addr_20_gep_fu_544_p3;
wire   [3:0] qm_addr_21_gep_fu_553_p3;
wire   [31:0] add_ln27_2_fu_796_p2;
reg   [31:0] add_ln27_2_reg_1276;
reg   [0:0] tmp_2_reg_1281;
reg   [0:0] tmp_3_reg_1286;
wire   [31:0] mul_ln27_5_fu_847_p2;
reg   [31:0] mul_ln27_5_reg_1291;
wire   [31:0] mul_ln27_7_fu_852_p2;
reg   [31:0] mul_ln27_7_reg_1296;
wire   [31:0] add_ln27_3_fu_858_p2;
reg   [31:0] add_ln27_3_reg_1301;
wire   [31:0] sub_ln40_fu_927_p2;
reg   [31:0] sub_ln40_reg_1306;
wire    ap_CS_fsm_state21;
wire   [31:0] sub_ln42_fu_938_p2;
reg   [31:0] sub_ln42_reg_1312;
wire   [3:0] dx_addr_19_gep_fu_562_p3;
wire   [3:0] dx_addr_20_gep_fu_571_p3;
wire   [3:0] dx_addr_21_gep_fu_580_p3;
wire    ap_CS_fsm_state22;
wire   [31:0] grp_fu_650_p2;
wire   [31:0] grp_fu_657_p2;
wire   [31:0] add_ln23_2_fu_688_p2;
wire   [31:0] add_ln23_3_fu_695_p2;
wire   [31:0] add_ln24_fu_702_p2;
wire   [31:0] add_ln24_1_fu_709_p2;
wire   [31:0] sub_ln21_2_fu_716_p2;
wire   [31:0] sub_ln21_3_fu_722_p2;
wire   [31:0] sub_ln20_fu_728_p2;
wire   [31:0] sub_ln20_1_fu_735_p2;
wire   [31:0] sub_ln20_2_fu_742_p2;
wire   [31:0] sub_ln20_3_fu_749_p2;
wire   [31:0] sub_ln21_fu_756_p2;
wire   [31:0] sub_ln21_1_fu_763_p2;
wire   [31:0] or_ln33_fu_804_p2;
wire  signed [31:0] sext_ln34_fu_824_p1;
wire  signed [31:0] sext_ln35_fu_877_p1;
wire  signed [31:0] sext_ln36_fu_895_p1;
wire   [31:0] sub_ln39_fu_920_p2;
wire   [31:0] sub_ln40_1_fu_944_p2;
wire  signed [31:0] grp_fu_595_p1;
wire  signed [31:0] grp_fu_664_p0;
wire  signed [31:0] mul_ln27_1_fu_770_p0;
wire  signed [31:0] trunc_ln_fu_781_p1;
wire   [31:0] add_ln27_1_fu_791_p2;
wire  signed [31:0] sext_ln33_fu_801_p1;
wire   [2:0] and_ln_fu_811_p3;
wire   [2:0] or_ln34_fu_818_p2;
wire  signed [31:0] tmp_2_fu_829_p1;
wire  signed [31:0] mul_ln27_3_fu_837_p0;
wire  signed [31:0] mul_ln27_4_fu_842_p0;
wire  signed [31:0] mul_ln27_5_fu_847_p0;
wire  signed [31:0] mul_ln27_7_fu_852_p0;
wire   [31:0] mul_ln27_4_fu_842_p2;
wire   [31:0] mul_ln27_3_fu_837_p2;
wire   [2:0] and_ln1_fu_864_p3;
wire   [2:0] or_ln35_fu_871_p2;
wire   [3:0] and_ln2_fu_882_p3;
wire   [3:0] or_ln36_fu_889_p2;
wire   [31:0] add_ln27_4_fu_900_p2;
wire   [31:0] add_ln27_5_fu_905_p2;
wire   [31:0] add_ln27_6_fu_910_p2;
wire   [31:0] add_ln27_7_fu_915_p2;
wire   [31:0] ashr_ln42_fu_933_p2;
reg   [21:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 22'd1;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17))) begin
        reg_603 <= qm_q1;
    end else if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state3))) begin
        reg_603 <= qm_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        reg_608 <= qm_q0;
    end else if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state3))) begin
        reg_608 <= qm_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        reg_613 <= qm_q1;
    end else if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state4))) begin
        reg_613 <= qm_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        add_ln27_2_reg_1276 <= add_ln27_2_fu_796_p2;
        tmp_2_reg_1281 <= tmp_2_fu_829_p1[32'd31];
        tmp_3_reg_1286 <= grp_fu_595_p1[32'd31];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        add_ln27_3_reg_1301 <= add_ln27_3_fu_858_p2;
        mul_ln27_5_reg_1291 <= mul_ln27_5_fu_847_p2;
        mul_ln27_7_reg_1296 <= mul_ln27_7_fu_852_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        add_ln27_reg_1251 <= add_ln27_fu_776_p2;
        dl_load_4_reg_1219 <= dl_q0;
        dl_load_5_reg_1230 <= dl_q1;
        mul_ln27_1_reg_1214 <= mul_ln27_1_fu_770_p2;
        tmp_1_reg_1261 <= grp_fu_595_p1[32'd31];
        trunc_ln_reg_1256 <= {{trunc_ln_fu_781_p1[31:30]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        dl_load_3_reg_1191 <= dl_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_fu_674_p3 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        icmp_ln22_reg_988 <= icmp_ln22_fu_682_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        qm_load_6_reg_1129 <= qm_q0;
        qm_load_7_reg_1134 <= qm_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state4))) begin
        reg_618 <= qm_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state5))) begin
        reg_622 <= qm_q0;
        reg_626 <= qm_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state17))) begin
        reg_630 <= dl_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state19))) begin
        reg_635 <= dl_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state17))) begin
        reg_640 <= dx_q0;
        reg_645 <= dx_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17))) begin
        reg_670 <= grp_fu_664_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        sub_ln40_reg_1306 <= sub_ln40_fu_927_p2;
        sub_ln42_reg_1312 <= sub_ln42_fu_938_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        tmp_reg_984 <= error_q0[32'd31];
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        dl_address0 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        dl_address0 = dl_addr_6_reg_1241;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        dl_address0 = dl_addr_2_reg_1164;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        dl_address0 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        dl_address0 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        dl_address0 = 64'd2;
    end else if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state19))) begin
        dl_address0 = 64'd0;
    end else begin
        dl_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        dl_address1 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        dl_address1 = dl_addr_7_reg_1246;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        dl_address1 = dl_addr_3_reg_1169;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        dl_address1 = dl_addr_1_reg_1067;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        dl_address1 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        dl_address1 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        dl_address1 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        dl_address1 = 64'd1;
    end else begin
        dl_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17))) begin
        dl_ce0 = 1'b1;
    end else begin
        dl_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17))) begin
        dl_ce1 = 1'b1;
    end else begin
        dl_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        dl_d0 = sub_ln40_reg_1306;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        dl_d0 = sub_ln39_fu_920_p2;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        dl_d0 = dl_load_3_reg_1191;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        dl_d0 = reg_635;
    end else begin
        dl_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        dl_d1 = sub_ln40_1_fu_944_p2;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        dl_d1 = in_r_q0;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        dl_d1 = dl_load_4_reg_1219;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        dl_d1 = reg_630;
    end else begin
        dl_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19))) begin
        dl_we0 = 1'b1;
    end else begin
        dl_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19))) begin
        dl_we1 = 1'b1;
    end else begin
        dl_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        dx_address0 = dx_addr_20_gep_fu_571_p3;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        dx_address0 = dx_addr_18_reg_1180;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        dx_address0 = dx_addr_16_reg_1078;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        dx_address0 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        dx_address0 = dx_addr_6_gep_fu_409_p3;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        dx_address0 = dx_addr_4_gep_fu_391_p3;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        dx_address0 = dx_addr_2_gep_fu_373_p3;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        dx_address0 = 64'd1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        dx_address0 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        dx_address0 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        dx_address0 = 64'd2;
    end else if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state17))) begin
        dx_address0 = 64'd0;
    end else begin
        dx_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        dx_address1 = dx_addr_21_gep_fu_580_p3;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        dx_address1 = dx_addr_19_gep_fu_562_p3;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        dx_address1 = dx_addr_17_reg_1174;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        dx_address1 = dx_addr_15_reg_1072;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        dx_address1 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        dx_address1 = dx_addr_7_gep_fu_418_p3;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        dx_address1 = dx_addr_5_gep_fu_400_p3;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        dx_address1 = dx_addr_3_gep_fu_382_p3;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        dx_address1 = dx_addr_1_gep_fu_346_p3;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        dx_address1 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        dx_address1 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        dx_address1 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        dx_address1 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        dx_address1 = 64'd1;
    end else begin
        dx_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state6))) begin
        dx_ce0 = 1'b1;
    end else begin
        dx_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state6))) begin
        dx_ce1 = 1'b1;
    end else begin
        dx_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        dx_d0 = sext_ln35_fu_877_p1;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        dx_d0 = or_ln33_fu_804_p2;
    end else if (((1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17))) begin
        dx_d0 = reg_640;
    end else begin
        dx_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        dx_d1 = sext_ln36_fu_895_p1;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        dx_d1 = sext_ln34_fu_824_p1;
    end else if (((1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17))) begin
        dx_d1 = reg_645;
    end else begin
        dx_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17))) begin
        dx_we0 = 1'b1;
    end else begin
        dx_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17))) begin
        dx_we1 = 1'b1;
    end else begin
        dx_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        error_address0 = error_addr_reg_949;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        error_address0 = 64'd0;
    end else begin
        error_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        error_ce0 = 1'b1;
    end else begin
        error_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        error_we0 = 1'b1;
    end else begin
        error_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state20))) begin
        in_r_ce0 = 1'b1;
    end else begin
        in_r_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        in_r_we0 = 1'b1;
    end else begin
        in_r_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        qm_address0 = qm_addr_20_gep_fu_544_p3;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        qm_address0 = qm_addr_18_gep_fu_508_p3;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        qm_address0 = qm_addr_16_gep_fu_472_p3;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        qm_address0 = qm_addr_4_reg_1094;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        qm_address0 = qm_addr_2_reg_1084;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        qm_address0 = qm_addr_6_gep_fu_355_p3;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        qm_address0 = qm_addr_4_gep_fu_328_p3;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        qm_address0 = qm_addr_2_gep_fu_310_p3;
    end else if (((tmp_reg_984 == 1'd1) & (1'b1 == ap_CS_fsm_state9))) begin
        qm_address0 = qm_addr_6_reg_1109;
    end else if (((icmp_ln22_reg_988 == 1'd1) & (tmp_reg_984 == 1'd0) & (1'b1 == ap_CS_fsm_state9))) begin
        qm_address0 = qm_addr_13_reg_1027;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        qm_address0 = qm_addr_11_reg_1012;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        qm_address0 = qm_addr_9_reg_1002;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state6))) begin
        qm_address0 = qm_addr_reg_979;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        qm_address0 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        qm_address0 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        qm_address0 = 64'd2;
    end else if ((((tmp_fu_674_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state2)) | ((icmp_ln22_fu_682_p2 == 1'd1) & (tmp_fu_674_p3 == 1'd0) & (1'b1 == ap_CS_fsm_state2)))) begin
        qm_address0 = 64'd0;
    end else begin
        qm_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        qm_address1 = qm_addr_21_gep_fu_553_p3;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        qm_address1 = qm_addr_19_gep_fu_517_p3;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        qm_address1 = qm_addr_17_gep_fu_481_p3;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        qm_address1 = qm_addr_15_gep_fu_427_p3;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        qm_address1 = qm_addr_5_reg_1099;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        qm_address1 = qm_addr_3_reg_1089;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        qm_address1 = qm_addr_1_reg_997;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        qm_address1 = qm_addr_7_gep_fu_364_p3;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        qm_address1 = qm_addr_5_gep_fu_337_p3;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        qm_address1 = qm_addr_3_gep_fu_319_p3;
    end else if (((tmp_reg_984 == 1'd1) & (1'b1 == ap_CS_fsm_state9))) begin
        qm_address1 = qm_addr_7_reg_1114;
    end else if (((icmp_ln22_reg_988 == 1'd1) & (tmp_reg_984 == 1'd0) & (1'b1 == ap_CS_fsm_state9))) begin
        qm_address1 = qm_addr_14_reg_1032;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        qm_address1 = qm_addr_12_reg_1017;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        qm_address1 = qm_addr_10_reg_1007;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        qm_address1 = qm_addr_8_reg_992;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        qm_address1 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        qm_address1 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        qm_address1 = 64'd3;
    end else if (((tmp_fu_674_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        qm_address1 = qm_addr_1_gep_fu_139_p3;
    end else if (((icmp_ln22_fu_682_p2 == 1'd1) & (tmp_fu_674_p3 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        qm_address1 = 64'd1;
    end else begin
        qm_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state3) | ((tmp_reg_984 == 1'd1) & (1'b1 == ap_CS_fsm_state9)) | ((icmp_ln22_reg_988 == 1'd1) & (tmp_reg_984 == 1'd0) & (1'b1 == ap_CS_fsm_state9)) | ((tmp_fu_674_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state2)) | ((icmp_ln22_fu_682_p2 == 1'd1) & (tmp_fu_674_p3 == 1'd0) & (1'b1 == ap_CS_fsm_state2)))) begin
        qm_ce0 = 1'b1;
    end else begin
        qm_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state3) | ((tmp_reg_984 == 1'd1) & (1'b1 == ap_CS_fsm_state9)) | ((icmp_ln22_reg_988 == 1'd1) & (tmp_reg_984 == 1'd0) & (1'b1 == ap_CS_fsm_state9)) | ((tmp_fu_674_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state2)) | ((icmp_ln22_fu_682_p2 == 1'd1) & (tmp_fu_674_p3 == 1'd0) & (1'b1 == ap_CS_fsm_state2)))) begin
        qm_ce1 = 1'b1;
    end else begin
        qm_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        qm_d0 = sub_ln21_fu_756_p2;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        qm_d0 = sub_ln20_2_fu_742_p2;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        qm_d0 = sub_ln20_fu_728_p2;
    end else if (((tmp_reg_984 == 1'd1) & (1'b1 == ap_CS_fsm_state9))) begin
        qm_d0 = sub_ln21_2_fu_716_p2;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        qm_d0 = add_ln24_fu_702_p2;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        qm_d0 = add_ln23_2_fu_688_p2;
    end else if (((1'b1 == ap_CS_fsm_state6) | ((icmp_ln22_reg_988 == 1'd1) & (tmp_reg_984 == 1'd0) & (1'b1 == ap_CS_fsm_state9)))) begin
        qm_d0 = grp_fu_650_p2;
    end else begin
        qm_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        qm_d1 = sub_ln21_1_fu_763_p2;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        qm_d1 = sub_ln20_3_fu_749_p2;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        qm_d1 = sub_ln20_1_fu_735_p2;
    end else if (((tmp_reg_984 == 1'd1) & (1'b1 == ap_CS_fsm_state9))) begin
        qm_d1 = sub_ln21_3_fu_722_p2;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        qm_d1 = add_ln24_1_fu_709_p2;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        qm_d1 = add_ln23_3_fu_695_p2;
    end else if (((1'b1 == ap_CS_fsm_state6) | ((icmp_ln22_reg_988 == 1'd1) & (tmp_reg_984 == 1'd0) & (1'b1 == ap_CS_fsm_state9)))) begin
        qm_d1 = grp_fu_657_p2;
    end else begin
        qm_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | ((tmp_reg_984 == 1'd1) & (1'b1 == ap_CS_fsm_state9)) | ((icmp_ln22_reg_988 == 1'd1) & (tmp_reg_984 == 1'd0) & (1'b1 == ap_CS_fsm_state9)))) begin
        qm_we0 = 1'b1;
    end else begin
        qm_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | ((tmp_reg_984 == 1'd1) & (1'b1 == ap_CS_fsm_state9)) | ((icmp_ln22_reg_988 == 1'd1) & (tmp_reg_984 == 1'd0) & (1'b1 == ap_CS_fsm_state9)))) begin
        qm_we1 = 1'b1;
    end else begin
        qm_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln22_fu_682_p2 == 1'd0) & (tmp_fu_674_p3 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else if (((icmp_ln22_fu_682_p2 == 1'd1) & (tmp_fu_674_p3 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln23_2_fu_688_p2 = (reg_613 + dx_q0);

assign add_ln23_3_fu_695_p2 = (reg_618 + dx_q1);

assign add_ln24_1_fu_709_p2 = (reg_626 + dx_q1);

assign add_ln24_fu_702_p2 = (reg_622 + dx_q0);

assign add_ln27_1_fu_791_p2 = (reg_670 + mul_ln27_1_reg_1214);

assign add_ln27_2_fu_796_p2 = (add_ln27_reg_1251 + add_ln27_1_fu_791_p2);

assign add_ln27_3_fu_858_p2 = (mul_ln27_4_fu_842_p2 + mul_ln27_3_fu_837_p2);

assign add_ln27_4_fu_900_p2 = (mul_ln27_7_reg_1296 + reg_670);

assign add_ln27_5_fu_905_p2 = (mul_ln27_5_reg_1291 + add_ln27_4_fu_900_p2);

assign add_ln27_6_fu_910_p2 = (add_ln27_3_reg_1301 + add_ln27_5_fu_905_p2);

assign add_ln27_7_fu_915_p2 = (add_ln27_2_reg_1276 + add_ln27_6_fu_910_p2);

assign add_ln27_fu_776_p2 = (reg_670 + round);

assign and_ln1_fu_864_p3 = {{tmp_2_reg_1281}, {2'd0}};

assign and_ln2_fu_882_p3 = {{tmp_3_reg_1286}, {3'd0}};

assign and_ln_fu_811_p3 = {{tmp_1_reg_1261}, {2'd0}};

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ashr_ln42_fu_933_p2 = $signed(add_ln27_7_fu_915_p2) >>> shift;

assign dl_addr_1_reg_1067 = 64'd1;

assign dl_addr_2_reg_1164 = 64'd2;

assign dl_addr_3_reg_1169 = 64'd3;

assign dl_addr_6_reg_1241 = 64'd6;

assign dl_addr_7_reg_1246 = 64'd7;

assign dx_addr_15_reg_1072 = 64'd1;

assign dx_addr_16_reg_1078 = 64'd2;

assign dx_addr_17_reg_1174 = 64'd3;

assign dx_addr_18_reg_1180 = 64'd4;

assign dx_addr_19_gep_fu_562_p3 = 64'd5;

assign dx_addr_1_gep_fu_346_p3 = 64'd1;

assign dx_addr_20_gep_fu_571_p3 = 64'd6;

assign dx_addr_21_gep_fu_580_p3 = 64'd7;

assign dx_addr_2_gep_fu_373_p3 = 64'd2;

assign dx_addr_3_gep_fu_382_p3 = 64'd3;

assign dx_addr_4_gep_fu_391_p3 = 64'd4;

assign dx_addr_5_gep_fu_400_p3 = 64'd5;

assign dx_addr_6_gep_fu_409_p3 = 64'd6;

assign dx_addr_7_gep_fu_418_p3 = 64'd7;

assign error_addr_reg_949 = 64'd0;

assign error_d0 = sub_ln42_reg_1312;

assign grp_fu_595_p1 = dl_q1;

assign grp_fu_650_p2 = (reg_603 + dx_q0);

assign grp_fu_657_p2 = (reg_608 + dx_q1);

assign grp_fu_664_p0 = qm_q0;

assign grp_fu_664_p2 = ($signed(grp_fu_664_p0) * $signed(reg_630));

assign icmp_ln22_fu_682_p2 = (($signed(error_q0) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign in_r_address0 = 64'd0;

assign in_r_d0 = sub_ln42_reg_1312;

assign mul_ln27_1_fu_770_p0 = reg_603;

assign mul_ln27_1_fu_770_p2 = ($signed(mul_ln27_1_fu_770_p0) * $signed(reg_635));

assign mul_ln27_3_fu_837_p0 = reg_603;

assign mul_ln27_3_fu_837_p2 = ($signed(mul_ln27_3_fu_837_p0) * $signed(dl_load_3_reg_1191));

assign mul_ln27_4_fu_842_p0 = reg_608;

assign mul_ln27_4_fu_842_p2 = ($signed(mul_ln27_4_fu_842_p0) * $signed(dl_load_4_reg_1219));

assign mul_ln27_5_fu_847_p0 = reg_613;

assign mul_ln27_5_fu_847_p2 = ($signed(mul_ln27_5_fu_847_p0) * $signed(dl_load_5_reg_1230));

assign mul_ln27_7_fu_852_p0 = qm_q1;

assign mul_ln27_7_fu_852_p2 = ($signed(mul_ln27_7_fu_852_p0) * $signed(reg_635));

assign or_ln33_fu_804_p2 = (sext_ln33_fu_801_p1 | 32'd1);

assign or_ln34_fu_818_p2 = (3'd2 | and_ln_fu_811_p3);

assign or_ln35_fu_871_p2 = (3'd2 | and_ln1_fu_864_p3);

assign or_ln36_fu_889_p2 = (4'd4 | and_ln2_fu_882_p3);

assign qm_addr_10_reg_1007 = 64'd3;

assign qm_addr_11_reg_1012 = 64'd4;

assign qm_addr_12_reg_1017 = 64'd5;

assign qm_addr_13_reg_1027 = 64'd6;

assign qm_addr_14_reg_1032 = 64'd7;

assign qm_addr_15_gep_fu_427_p3 = 64'd1;

assign qm_addr_16_gep_fu_472_p3 = 64'd2;

assign qm_addr_17_gep_fu_481_p3 = 64'd3;

assign qm_addr_18_gep_fu_508_p3 = 64'd4;

assign qm_addr_19_gep_fu_517_p3 = 64'd5;

assign qm_addr_1_gep_fu_139_p3 = 64'd1;

assign qm_addr_1_reg_997 = 64'd1;

assign qm_addr_20_gep_fu_544_p3 = 64'd6;

assign qm_addr_21_gep_fu_553_p3 = 64'd7;

assign qm_addr_2_gep_fu_310_p3 = 64'd2;

assign qm_addr_2_reg_1084 = 64'd2;

assign qm_addr_3_gep_fu_319_p3 = 64'd3;

assign qm_addr_3_reg_1089 = 64'd3;

assign qm_addr_4_gep_fu_328_p3 = 64'd4;

assign qm_addr_4_reg_1094 = 64'd4;

assign qm_addr_5_gep_fu_337_p3 = 64'd5;

assign qm_addr_5_reg_1099 = 64'd5;

assign qm_addr_6_gep_fu_355_p3 = 64'd6;

assign qm_addr_6_reg_1109 = 64'd6;

assign qm_addr_7_gep_fu_364_p3 = 64'd7;

assign qm_addr_7_reg_1114 = 64'd7;

assign qm_addr_8_reg_992 = 64'd1;

assign qm_addr_9_reg_1002 = 64'd2;

assign qm_addr_reg_979 = 64'd0;

assign sext_ln33_fu_801_p1 = $signed(trunc_ln_reg_1256);

assign sext_ln34_fu_824_p1 = $signed(or_ln34_fu_818_p2);

assign sext_ln35_fu_877_p1 = $signed(or_ln35_fu_871_p2);

assign sext_ln36_fu_895_p1 = $signed(or_ln36_fu_889_p2);

assign sub_ln20_1_fu_735_p2 = (reg_608 - dx_q1);

assign sub_ln20_2_fu_742_p2 = (reg_613 - dx_q0);

assign sub_ln20_3_fu_749_p2 = (reg_618 - dx_q1);

assign sub_ln20_fu_728_p2 = (reg_603 - dx_q0);

assign sub_ln21_1_fu_763_p2 = (reg_626 - dx_q1);

assign sub_ln21_2_fu_716_p2 = (qm_load_6_reg_1129 - dx_q0);

assign sub_ln21_3_fu_722_p2 = (qm_load_7_reg_1134 - dx_q1);

assign sub_ln21_fu_756_p2 = (reg_622 - dx_q0);

assign sub_ln39_fu_920_p2 = ($signed(in_r_q0) - $signed(reg_635));

assign sub_ln40_1_fu_944_p2 = ($signed(sub_ln40_reg_1306) - $signed(dl_load_5_reg_1230));

assign sub_ln40_fu_927_p2 = ($signed(sub_ln39_fu_920_p2) - $signed(reg_630));

assign sub_ln42_fu_938_p2 = (in_r_q0 - ashr_ln42_fu_933_p2);

assign tmp_2_fu_829_p1 = dl_q0;

assign tmp_fu_674_p3 = error_q0[32'd31];

assign trunc_ln_fu_781_p1 = dl_q0;

endmodule //ttaenc_filter_process_c
