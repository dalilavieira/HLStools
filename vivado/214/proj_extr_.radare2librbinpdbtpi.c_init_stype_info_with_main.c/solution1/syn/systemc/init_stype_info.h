// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _init_stype_info_HH_
#define _init_stype_info_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct init_stype_info : public sc_module {
    // Port declarations 47
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<32> > type_info_leaf_type;
    sc_out< sc_lv<32> > type_info_get_print_type;
    sc_out< sc_logic > type_info_get_print_type_ap_vld;
    sc_out< sc_lv<32> > type_info_get_mlist;
    sc_out< sc_logic > type_info_get_mlist_ap_vld;
    sc_out< sc_lv<32> > type_info_get_index;
    sc_out< sc_logic > type_info_get_index_ap_vld;
    sc_out< sc_lv<32> > type_info_get_arglist;
    sc_out< sc_logic > type_info_get_arglist_ap_vld;
    sc_out< sc_lv<32> > type_info_get_this_type;
    sc_out< sc_logic > type_info_get_this_type_ap_vld;
    sc_out< sc_lv<32> > type_info_get_class_type;
    sc_out< sc_logic > type_info_get_class_type_ap_vld;
    sc_out< sc_lv<32> > type_info_get_return_type;
    sc_out< sc_logic > type_info_get_return_type_ap_vld;
    sc_out< sc_lv<32> > type_info_get_utype;
    sc_out< sc_logic > type_info_get_utype_ap_vld;
    sc_out< sc_lv<32> > type_info_get_vshape;
    sc_out< sc_logic > type_info_get_vshape_ap_vld;
    sc_out< sc_lv<32> > type_info_get_derived;
    sc_out< sc_logic > type_info_get_derived_ap_vld;
    sc_out< sc_lv<32> > type_info_get_base_type;
    sc_out< sc_logic > type_info_get_base_type_ap_vld;
    sc_out< sc_lv<32> > type_info_get_index_type;
    sc_out< sc_logic > type_info_get_index_type_ap_vld;
    sc_out< sc_lv<32> > type_info_get_element_type;
    sc_out< sc_logic > type_info_get_element_type_ap_vld;
    sc_out< sc_lv<32> > type_info_get_arg_type;
    sc_out< sc_logic > type_info_get_arg_type_ap_vld;
    sc_out< sc_lv<32> > type_info_get_members;
    sc_out< sc_logic > type_info_get_members_ap_vld;
    sc_out< sc_lv<32> > type_info_get_name_len;
    sc_out< sc_logic > type_info_get_name_len_ap_vld;
    sc_out< sc_lv<32> > type_info_get_val;
    sc_out< sc_logic > type_info_get_val_ap_vld;
    sc_out< sc_lv<32> > type_info_get_name;
    sc_out< sc_logic > type_info_get_name_ap_vld;
    sc_out< sc_lv<32> > type_info_free_s;
    sc_out< sc_logic > type_info_free_s_ap_vld;
    sc_out< sc_lv<32> > type_info_is_fwdref;
    sc_out< sc_logic > type_info_is_fwdref_ap_vld;
    sc_out< sc_lv<32> > type_info_get_modified_type;
    sc_out< sc_logic > type_info_get_modified_type_ap_vld;
    // Port declarations for the virtual clock. 
    sc_in_clk ap_virtual_clock;


    // Module declarations
    init_stype_info(sc_module_name name);
    SC_HAS_PROCESS(init_stype_info);

    ~init_stype_info();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    static const sc_logic ap_const_logic_1;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_logic ap_const_logic_0;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_type_info_free_s();
    void thread_type_info_free_s_ap_vld();
    void thread_type_info_get_arg_type();
    void thread_type_info_get_arg_type_ap_vld();
    void thread_type_info_get_arglist();
    void thread_type_info_get_arglist_ap_vld();
    void thread_type_info_get_base_type();
    void thread_type_info_get_base_type_ap_vld();
    void thread_type_info_get_class_type();
    void thread_type_info_get_class_type_ap_vld();
    void thread_type_info_get_derived();
    void thread_type_info_get_derived_ap_vld();
    void thread_type_info_get_element_type();
    void thread_type_info_get_element_type_ap_vld();
    void thread_type_info_get_index();
    void thread_type_info_get_index_ap_vld();
    void thread_type_info_get_index_type();
    void thread_type_info_get_index_type_ap_vld();
    void thread_type_info_get_members();
    void thread_type_info_get_members_ap_vld();
    void thread_type_info_get_mlist();
    void thread_type_info_get_mlist_ap_vld();
    void thread_type_info_get_modified_type();
    void thread_type_info_get_modified_type_ap_vld();
    void thread_type_info_get_name();
    void thread_type_info_get_name_ap_vld();
    void thread_type_info_get_name_len();
    void thread_type_info_get_name_len_ap_vld();
    void thread_type_info_get_print_type();
    void thread_type_info_get_print_type_ap_vld();
    void thread_type_info_get_return_type();
    void thread_type_info_get_return_type_ap_vld();
    void thread_type_info_get_this_type();
    void thread_type_info_get_this_type_ap_vld();
    void thread_type_info_get_utype();
    void thread_type_info_get_utype_ap_vld();
    void thread_type_info_get_val();
    void thread_type_info_get_val_ap_vld();
    void thread_type_info_get_vshape();
    void thread_type_info_get_vshape_ap_vld();
    void thread_type_info_is_fwdref();
    void thread_type_info_is_fwdref_ap_vld();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
