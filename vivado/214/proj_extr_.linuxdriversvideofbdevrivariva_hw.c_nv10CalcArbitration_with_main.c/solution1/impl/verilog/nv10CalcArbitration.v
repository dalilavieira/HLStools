// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="nv10CalcArbitration,hls_ip_2019_1,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7k160t-fbg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.742000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=37,HLS_SYN_FF=3907,HLS_SYN_LUT=4420,HLS_VERSION=2019_1}" *)

module nv10CalcArbitration (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        fifo_valid,
        fifo_valid_ap_vld,
        fifo_graphics_lwm,
        fifo_graphics_lwm_ap_vld,
        fifo_graphics_burst_size,
        fifo_graphics_burst_size_ap_vld,
        fifo_video_lwm,
        fifo_video_lwm_ap_vld,
        fifo_video_burst_size,
        fifo_video_burst_size_ap_vld,
        arb_pclk_khz,
        arb_mclk_khz,
        arb_nvclk_khz,
        arb_mem_page_miss,
        arb_mem_latency,
        arb_memory_width,
        arb_enable_video,
        arb_gr_during_vid,
        arb_pix_bpp,
        arb_mem_aligned,
        arb_enable_mp,
        arb_memory_type
);

parameter    ap_ST_fsm_state1 = 120'd1;
parameter    ap_ST_fsm_state2 = 120'd2;
parameter    ap_ST_fsm_state3 = 120'd4;
parameter    ap_ST_fsm_state4 = 120'd8;
parameter    ap_ST_fsm_state5 = 120'd16;
parameter    ap_ST_fsm_state6 = 120'd32;
parameter    ap_ST_fsm_state7 = 120'd64;
parameter    ap_ST_fsm_state8 = 120'd128;
parameter    ap_ST_fsm_state9 = 120'd256;
parameter    ap_ST_fsm_state10 = 120'd512;
parameter    ap_ST_fsm_state11 = 120'd1024;
parameter    ap_ST_fsm_state12 = 120'd2048;
parameter    ap_ST_fsm_state13 = 120'd4096;
parameter    ap_ST_fsm_state14 = 120'd8192;
parameter    ap_ST_fsm_state15 = 120'd16384;
parameter    ap_ST_fsm_state16 = 120'd32768;
parameter    ap_ST_fsm_state17 = 120'd65536;
parameter    ap_ST_fsm_state18 = 120'd131072;
parameter    ap_ST_fsm_state19 = 120'd262144;
parameter    ap_ST_fsm_state20 = 120'd524288;
parameter    ap_ST_fsm_state21 = 120'd1048576;
parameter    ap_ST_fsm_state22 = 120'd2097152;
parameter    ap_ST_fsm_state23 = 120'd4194304;
parameter    ap_ST_fsm_state24 = 120'd8388608;
parameter    ap_ST_fsm_state25 = 120'd16777216;
parameter    ap_ST_fsm_state26 = 120'd33554432;
parameter    ap_ST_fsm_state27 = 120'd67108864;
parameter    ap_ST_fsm_state28 = 120'd134217728;
parameter    ap_ST_fsm_state29 = 120'd268435456;
parameter    ap_ST_fsm_state30 = 120'd536870912;
parameter    ap_ST_fsm_state31 = 120'd1073741824;
parameter    ap_ST_fsm_state32 = 120'd2147483648;
parameter    ap_ST_fsm_state33 = 120'd4294967296;
parameter    ap_ST_fsm_state34 = 120'd8589934592;
parameter    ap_ST_fsm_state35 = 120'd17179869184;
parameter    ap_ST_fsm_state36 = 120'd34359738368;
parameter    ap_ST_fsm_state37 = 120'd68719476736;
parameter    ap_ST_fsm_state38 = 120'd137438953472;
parameter    ap_ST_fsm_state39 = 120'd274877906944;
parameter    ap_ST_fsm_state40 = 120'd549755813888;
parameter    ap_ST_fsm_state41 = 120'd1099511627776;
parameter    ap_ST_fsm_state42 = 120'd2199023255552;
parameter    ap_ST_fsm_state43 = 120'd4398046511104;
parameter    ap_ST_fsm_state44 = 120'd8796093022208;
parameter    ap_ST_fsm_state45 = 120'd17592186044416;
parameter    ap_ST_fsm_state46 = 120'd35184372088832;
parameter    ap_ST_fsm_state47 = 120'd70368744177664;
parameter    ap_ST_fsm_state48 = 120'd140737488355328;
parameter    ap_ST_fsm_state49 = 120'd281474976710656;
parameter    ap_ST_fsm_state50 = 120'd562949953421312;
parameter    ap_ST_fsm_state51 = 120'd1125899906842624;
parameter    ap_ST_fsm_state52 = 120'd2251799813685248;
parameter    ap_ST_fsm_state53 = 120'd4503599627370496;
parameter    ap_ST_fsm_state54 = 120'd9007199254740992;
parameter    ap_ST_fsm_state55 = 120'd18014398509481984;
parameter    ap_ST_fsm_state56 = 120'd36028797018963968;
parameter    ap_ST_fsm_state57 = 120'd72057594037927936;
parameter    ap_ST_fsm_state58 = 120'd144115188075855872;
parameter    ap_ST_fsm_state59 = 120'd288230376151711744;
parameter    ap_ST_fsm_state60 = 120'd576460752303423488;
parameter    ap_ST_fsm_state61 = 120'd1152921504606846976;
parameter    ap_ST_fsm_state62 = 120'd2305843009213693952;
parameter    ap_ST_fsm_state63 = 120'd4611686018427387904;
parameter    ap_ST_fsm_state64 = 120'd9223372036854775808;
parameter    ap_ST_fsm_state65 = 120'd18446744073709551616;
parameter    ap_ST_fsm_state66 = 120'd36893488147419103232;
parameter    ap_ST_fsm_state67 = 120'd73786976294838206464;
parameter    ap_ST_fsm_state68 = 120'd147573952589676412928;
parameter    ap_ST_fsm_state69 = 120'd295147905179352825856;
parameter    ap_ST_fsm_state70 = 120'd590295810358705651712;
parameter    ap_ST_fsm_state71 = 120'd1180591620717411303424;
parameter    ap_ST_fsm_state72 = 120'd2361183241434822606848;
parameter    ap_ST_fsm_state73 = 120'd4722366482869645213696;
parameter    ap_ST_fsm_state74 = 120'd9444732965739290427392;
parameter    ap_ST_fsm_state75 = 120'd18889465931478580854784;
parameter    ap_ST_fsm_state76 = 120'd37778931862957161709568;
parameter    ap_ST_fsm_state77 = 120'd75557863725914323419136;
parameter    ap_ST_fsm_state78 = 120'd151115727451828646838272;
parameter    ap_ST_fsm_state79 = 120'd302231454903657293676544;
parameter    ap_ST_fsm_state80 = 120'd604462909807314587353088;
parameter    ap_ST_fsm_state81 = 120'd1208925819614629174706176;
parameter    ap_ST_fsm_state82 = 120'd2417851639229258349412352;
parameter    ap_ST_fsm_state83 = 120'd4835703278458516698824704;
parameter    ap_ST_fsm_state84 = 120'd9671406556917033397649408;
parameter    ap_ST_fsm_state85 = 120'd19342813113834066795298816;
parameter    ap_ST_fsm_state86 = 120'd38685626227668133590597632;
parameter    ap_ST_fsm_state87 = 120'd77371252455336267181195264;
parameter    ap_ST_fsm_state88 = 120'd154742504910672534362390528;
parameter    ap_ST_fsm_state89 = 120'd309485009821345068724781056;
parameter    ap_ST_fsm_state90 = 120'd618970019642690137449562112;
parameter    ap_ST_fsm_state91 = 120'd1237940039285380274899124224;
parameter    ap_ST_fsm_state92 = 120'd2475880078570760549798248448;
parameter    ap_ST_fsm_state93 = 120'd4951760157141521099596496896;
parameter    ap_ST_fsm_state94 = 120'd9903520314283042199192993792;
parameter    ap_ST_fsm_state95 = 120'd19807040628566084398385987584;
parameter    ap_ST_fsm_state96 = 120'd39614081257132168796771975168;
parameter    ap_ST_fsm_state97 = 120'd79228162514264337593543950336;
parameter    ap_ST_fsm_state98 = 120'd158456325028528675187087900672;
parameter    ap_ST_fsm_state99 = 120'd316912650057057350374175801344;
parameter    ap_ST_fsm_state100 = 120'd633825300114114700748351602688;
parameter    ap_ST_fsm_state101 = 120'd1267650600228229401496703205376;
parameter    ap_ST_fsm_state102 = 120'd2535301200456458802993406410752;
parameter    ap_ST_fsm_state103 = 120'd5070602400912917605986812821504;
parameter    ap_ST_fsm_state104 = 120'd10141204801825835211973625643008;
parameter    ap_ST_fsm_state105 = 120'd20282409603651670423947251286016;
parameter    ap_ST_fsm_state106 = 120'd40564819207303340847894502572032;
parameter    ap_ST_fsm_state107 = 120'd81129638414606681695789005144064;
parameter    ap_ST_fsm_state108 = 120'd162259276829213363391578010288128;
parameter    ap_ST_fsm_state109 = 120'd324518553658426726783156020576256;
parameter    ap_ST_fsm_state110 = 120'd649037107316853453566312041152512;
parameter    ap_ST_fsm_state111 = 120'd1298074214633706907132624082305024;
parameter    ap_ST_fsm_state112 = 120'd2596148429267413814265248164610048;
parameter    ap_ST_fsm_state113 = 120'd5192296858534827628530496329220096;
parameter    ap_ST_fsm_state114 = 120'd10384593717069655257060992658440192;
parameter    ap_ST_fsm_state115 = 120'd20769187434139310514121985316880384;
parameter    ap_ST_fsm_state116 = 120'd41538374868278621028243970633760768;
parameter    ap_ST_fsm_state117 = 120'd83076749736557242056487941267521536;
parameter    ap_ST_fsm_state118 = 120'd166153499473114484112975882535043072;
parameter    ap_ST_fsm_state119 = 120'd332306998946228968225951765070086144;
parameter    ap_ST_fsm_state120 = 120'd664613997892457936451903530140172288;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [31:0] fifo_valid;
output   fifo_valid_ap_vld;
output  [31:0] fifo_graphics_lwm;
output   fifo_graphics_lwm_ap_vld;
output  [31:0] fifo_graphics_burst_size;
output   fifo_graphics_burst_size_ap_vld;
output  [31:0] fifo_video_lwm;
output   fifo_video_lwm_ap_vld;
output  [31:0] fifo_video_burst_size;
output   fifo_video_burst_size_ap_vld;
input  [31:0] arb_pclk_khz;
input  [31:0] arb_mclk_khz;
input  [31:0] arb_nvclk_khz;
input  [31:0] arb_mem_page_miss;
input  [31:0] arb_mem_latency;
input  [31:0] arb_memory_width;
input  [31:0] arb_enable_video;
input  [31:0] arb_gr_during_vid;
input  [31:0] arb_pix_bpp;
input  [31:0] arb_mem_aligned;
input  [31:0] arb_enable_mp;
input  [31:0] arb_memory_type;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[31:0] fifo_valid;
reg fifo_valid_ap_vld;
reg fifo_graphics_lwm_ap_vld;
reg fifo_graphics_burst_size_ap_vld;
reg fifo_video_lwm_ap_vld;
reg fifo_video_burst_size_ap_vld;

(* fsm_encoding = "none" *) reg   [119:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [0:0] tmp_2_reg_1299;
reg   [28:0] tmp_reg_1304;
reg   [28:0] tmp_1_reg_1309;
wire   [0:0] icmp_ln84_fu_446_p2;
reg   [0:0] icmp_ln84_reg_1314;
wire    ap_CS_fsm_state2;
wire   [0:0] icmp_ln84_1_fu_452_p2;
reg   [0:0] icmp_ln84_1_reg_1319;
wire   [0:0] icmp_ln101_fu_458_p2;
reg   [0:0] icmp_ln101_reg_1324;
wire   [4:0] select_ln101_fu_470_p3;
reg   [4:0] select_ln101_reg_1329;
wire   [29:0] crtc_drain_rate_fu_490_p3;
reg   [29:0] crtc_drain_rate_reg_1335;
wire   [0:0] icmp_ln178_fu_513_p2;
reg   [0:0] icmp_ln178_reg_1340;
wire    ap_CS_fsm_state3;
wire   [31:0] zext_ln112_1_fu_580_p1;
reg   [31:0] zext_ln112_1_reg_1360;
wire   [31:0] zext_ln113_fu_583_p1;
reg   [31:0] zext_ln113_reg_1365;
wire  signed [31:0] sext_ln151_fu_586_p1;
reg  signed [31:0] sext_ln151_reg_1370;
wire   [31:0] mul_ln157_fu_596_p2;
reg   [31:0] mul_ln157_reg_1376;
wire   [0:0] icmp_ln183_fu_620_p2;
reg   [0:0] icmp_ln183_reg_1381;
wire   [31:0] mul_ln137_fu_626_p2;
reg   [31:0] mul_ln137_reg_1387;
wire   [0:0] or_ln178_fu_644_p2;
reg   [0:0] or_ln178_reg_1392;
wire   [31:0] mul_ln114_fu_654_p2;
reg   [31:0] mul_ln114_reg_1396;
wire    ap_CS_fsm_state4;
wire   [0:0] ap_phi_mux_found_0_phi_fu_269_p4;
wire   [31:0] grp_fu_664_p2;
reg   [31:0] us_m_reg_1401;
wire    ap_CS_fsm_state40;
wire   [31:0] grp_fu_668_p2;
reg   [31:0] us_m_min_reg_1407;
wire   [31:0] grp_fu_660_p2;
reg   [31:0] us_min_mclk_extra_reg_1412;
wire   [31:0] grp_fu_672_p2;
reg   [31:0] us_n_reg_1417;
wire   [31:0] grp_fu_677_p2;
reg   [31:0] us_p_reg_1424;
wire  signed [31:0] us_crt_1_fu_707_p2;
reg  signed [31:0] us_crt_1_reg_1431;
wire    ap_CS_fsm_state75;
wire  signed [31:0] mul_ln148_fu_713_p2;
reg  signed [31:0] mul_ln148_reg_1436;
wire    ap_CS_fsm_state76;
reg   [0:0] tmp_7_reg_1441;
wire   [64:0] mul_ln148_1_fu_728_p2;
reg   [64:0] mul_ln148_1_reg_1447;
wire    ap_CS_fsm_state77;
reg   [12:0] tmp_9_reg_1452;
wire   [12:0] clwm_1_fu_777_p2;
wire    ap_CS_fsm_state78;
wire   [12:0] select_ln178_fu_822_p3;
wire   [31:0] select_ln183_fu_829_p3;
wire   [12:0] select_ln183_1_fu_836_p3;
wire  signed [31:0] m2us_fu_851_p2;
reg  signed [31:0] m2us_reg_1478;
wire  signed [31:0] us_crt_fu_866_p2;
reg  signed [31:0] us_crt_reg_1483;
wire    ap_CS_fsm_state113;
wire  signed [31:0] mul_ln159_fu_872_p2;
reg  signed [31:0] mul_ln159_reg_1488;
wire    ap_CS_fsm_state114;
reg   [0:0] tmp_4_reg_1493;
wire   [64:0] mul_ln159_1_fu_887_p2;
reg   [64:0] mul_ln159_1_reg_1499;
wire    ap_CS_fsm_state115;
reg   [12:0] tmp_6_reg_1504;
wire   [0:0] icmp_ln198_fu_979_p2;
reg   [0:0] icmp_ln198_reg_1510;
wire    ap_CS_fsm_state116;
wire  signed [31:0] mul_ln206_fu_985_p2;
reg  signed [31:0] mul_ln206_reg_1515;
reg   [0:0] tmp_11_reg_1520;
wire   [64:0] mul_ln206_1_fu_1000_p2;
reg   [64:0] mul_ln206_1_reg_1526;
wire    ap_CS_fsm_state117;
reg   [12:0] tmp_17_reg_1531;
wire  signed [31:0] p1clk_fu_1051_p3;
reg  signed [31:0] p1clk_reg_1536;
wire    ap_CS_fsm_state118;
wire   [31:0] mul_ln207_fu_1058_p2;
reg   [31:0] mul_ln207_reg_1541;
wire    ap_CS_fsm_state119;
reg   [0:0] found_0_reg_265;
reg   [0:0] ap_phi_mux_found_5_phi_fu_318_p8;
wire    ap_CS_fsm_state120;
reg   [31:0] cbs_0_reg_276;
reg   [31:0] ap_phi_mux_cbs_7_phi_fu_335_p8;
reg   [31:0] cbs_4_reg_288;
reg  signed [12:0] clwm_3_reg_302;
wire   [0:0] and_ln209_fu_1168_p2;
wire   [0:0] grp_fu_357_p2;
wire   [0:0] icmp_ln222_fu_1184_p2;
wire   [0:0] icmp_ln213_fu_1208_p2;
wire   [31:0] select_ln213_fu_1229_p3;
reg   [31:0] min_mclk_extra_1_fu_168;
wire   [31:0] select_ln84_fu_556_p3;
wire   [31:0] min_mclk_extra_3_fu_1190_p3;
wire   [31:0] grp_fu_364_p2;
wire  signed [31:0] mul_ln151_fu_370_p0;
wire  signed [31:0] mul_ln151_fu_370_p1;
wire   [31:0] mul_ln151_fu_370_p2;
wire   [31:0] sub_ln151_fu_384_p2;
wire   [0:0] icmp_ln74_fu_416_p2;
wire   [0:0] icmp_ln73_fu_410_p2;
wire   [4:0] select_ln74_fu_422_p3;
wire   [4:0] select_ln79_fu_430_p3;
wire   [4:0] select_ln73_fu_438_p3;
wire   [4:0] mclks_fu_464_p2;
wire   [29:0] zext_ln151_fu_478_p1;
wire   [29:0] sub_ln151_1_fu_481_p2;
wire   [29:0] zext_ln151_1_fu_487_p1;
wire   [31:0] add_ln178_fu_497_p2;
wire   [25:0] tmp_3_fu_503_p4;
wire  signed [31:0] icmp_ln86_fu_523_p0;
wire   [0:0] icmp_ln86_fu_523_p2;
wire   [0:0] and_ln84_fu_519_p2;
wire   [5:0] mclk_extra_fu_528_p3;
wire   [5:0] select_ln91_fu_536_p3;
wire   [5:0] mclk_extra_1_fu_544_p3;
wire   [6:0] zext_ln101_1_fu_567_p1;
wire   [6:0] zext_ln84_fu_552_p1;
wire   [6:0] mclk_loop_fu_570_p2;
wire   [27:0] mul_ln112_fu_1264_p2;
wire   [25:0] mul_ln113_fu_1271_p2;
wire  signed [22:0] mul_ln157_fu_596_p0;
wire  signed [31:0] mul_ln157_fu_596_p1;
wire  signed [29:0] mul_ln180_fu_602_p0;
wire  signed [31:0] mul_ln180_1_fu_608_p0;
wire  signed [31:0] mul_ln183_fu_614_p0;
wire   [31:0] mul_ln180_fu_602_p2;
wire   [31:0] mul_ln183_fu_614_p2;
wire  signed [31:0] mul_ln137_fu_626_p0;
wire   [31:0] mul_ln180_1_fu_608_p2;
wire   [0:0] icmp_ln178_1_fu_632_p2;
wire   [0:0] xor_ln178_fu_638_p2;
wire  signed [31:0] mul_ln114_fu_654_p0;
wire    ap_CS_fsm_state5;
wire   [28:0] grp_fu_664_p0;
wire    ap_CS_fsm_state8;
wire   [26:0] grp_fu_668_p0;
wire    ap_CS_fsm_state10;
wire   [25:0] grp_fu_672_p0;
wire    ap_CS_fsm_state11;
wire   [23:0] grp_fu_677_p0;
wire    ap_CS_fsm_state13;
wire   [31:0] grp_fu_353_p2;
wire   [31:0] empty_fu_686_p2;
wire   [31:0] add_ln142_1_fu_695_p2;
wire   [31:0] grp_fu_682_p2;
wire   [31:0] add_ln142_2_fu_701_p2;
wire   [31:0] add_ln142_fu_691_p2;
wire  signed [29:0] mul_ln148_fu_713_p1;
wire  signed [31:0] mul_ln148_1_fu_728_p1;
wire   [64:0] sub_ln148_fu_744_p2;
wire   [12:0] tmp_8_fu_749_p4;
wire   [12:0] select_ln148_fu_759_p3;
wire   [12:0] sub_ln148_1_fu_765_p2;
wire   [12:0] select_ln148_1_fu_771_p3;
wire   [64:0] sub_ln159_fu_783_p2;
wire   [12:0] tmp_5_fu_788_p4;
wire   [12:0] select_ln159_fu_798_p3;
wire   [12:0] sub_ln159_1_fu_804_p2;
wire   [12:0] select_ln159_1_fu_810_p3;
wire   [12:0] clwm_fu_816_p2;
wire   [31:0] add_ln202_1_fu_847_p2;
wire   [31:0] add_ln202_fu_843_p2;
wire   [31:0] add_ln158_fu_857_p2;
wire   [31:0] add_ln158_1_fu_861_p2;
wire  signed [29:0] mul_ln159_fu_872_p0;
wire  signed [31:0] mul_ln159_1_fu_887_p0;
wire   [12:0] sub_ln197_fu_915_p2;
wire   [9:0] trunc_ln197_1_fu_921_p4;
wire  signed [10:0] sext_ln197_2_fu_931_p1;
wire   [11:0] zext_ln197_fu_935_p1;
wire   [9:0] trunc_ln197_2_fu_945_p4;
wire  signed [10:0] sext_ln197_3_fu_955_p1;
wire   [0:0] tmp_10_fu_907_p3;
wire   [11:0] sub_ln197_1_fu_939_p2;
wire   [11:0] zext_ln197_1_fu_959_p1;
wire   [11:0] select_ln197_fu_963_p3;
wire   [14:0] tmp_s_fu_971_p3;
wire  signed [14:0] sext_ln197_1_fu_903_p1;
wire  signed [31:0] mul_ln206_fu_985_p0;
wire  signed [31:0] mul_ln206_1_fu_1000_p0;
wire   [64:0] sub_ln206_fu_1016_p2;
wire   [12:0] tmp_16_fu_1021_p4;
wire  signed [31:0] sext_ln206_1_fu_1031_p1;
wire  signed [31:0] sext_ln206_2_fu_1035_p1;
wire   [31:0] select_ln206_fu_1038_p3;
wire   [31:0] sub_ln206_1_fu_1045_p2;
wire  signed [31:0] mul_ln207_fu_1058_p0;
wire  signed [14:0] mul_ln207_fu_1058_p1;
wire  signed [13:0] sext_ln197_fu_1062_p1;
wire   [13:0] clwm_2_fu_1066_p2;
wire  signed [13:0] craw_fu_1072_p3;
wire   [13:0] add_ln201_fu_1083_p2;
wire  signed [31:0] sext_ln201_fu_1089_p1;
wire   [31:0] sub_ln207_fu_1106_p2;
wire   [28:0] tmp_12_fu_1111_p4;
wire   [29:0] zext_ln207_fu_1121_p1;
wire   [28:0] tmp_13_fu_1131_p4;
wire   [0:0] tmp_18_fu_1099_p3;
wire   [29:0] sub_ln207_1_fu_1125_p2;
wire   [29:0] zext_ln207_1_fu_1140_p1;
wire   [29:0] p2_fu_1144_p3;
wire  signed [31:0] sext_ln207_fu_1152_p1;
wire   [31:0] m1_fu_1093_p2;
wire   [0:0] icmp_ln209_fu_1156_p2;
wire   [0:0] icmp_ln209_1_fu_1162_p2;
wire   [3:0] tmp_19_fu_1174_p4;
wire   [30:0] cbs_fu_1215_p4;
wire   [31:0] cbs_1_fu_1225_p1;
wire  signed [31:0] sext_ln198_fu_1079_p1;
wire   [31:0] clwm_4_fu_1243_p2;
wire   [0:0] icmp_ln233_fu_1249_p2;
wire   [6:0] mul_ln112_fu_1264_p0;
wire   [20:0] mul_ln112_fu_1264_p1;
wire   [4:0] mul_ln113_fu_1271_p0;
wire   [20:0] mul_ln113_fu_1271_p1;
reg    grp_fu_353_ap_start;
wire    grp_fu_353_ap_done;
reg    grp_fu_660_ap_start;
wire    grp_fu_660_ap_done;
reg    grp_fu_664_ap_start;
wire    grp_fu_664_ap_done;
reg    grp_fu_668_ap_start;
wire    grp_fu_668_ap_done;
reg    grp_fu_672_ap_start;
wire    grp_fu_672_ap_done;
reg    grp_fu_677_ap_start;
wire    grp_fu_677_ap_done;
reg    grp_fu_682_ap_start;
wire    grp_fu_682_ap_done;
reg   [119:0] ap_NS_fsm;
wire   [27:0] mul_ln112_fu_1264_p00;
wire   [25:0] mul_ln113_fu_1271_p00;
wire  signed [31:0] mul_ln157_fu_596_p00;

// power-on initialization
initial begin
#0 ap_CS_fsm = 120'd1;
end

nv10CalcArbitration_sdiv_32ns_32ns_32_36_seq_1 #(
    .ID( 1 ),
    .NUM_STAGE( 36 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
nv10CalcArbitration_sdiv_32ns_32ns_32_36_seq_1_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_353_ap_start),
    .done(grp_fu_353_ap_done),
    .din0(mul_ln157_reg_1376),
    .din1(arb_mclk_khz),
    .ce(1'b1),
    .dout(grp_fu_353_p2)
);

nv10CalcArbitration_sdiv_32ns_32ns_32_36_seq_1 #(
    .ID( 1 ),
    .NUM_STAGE( 36 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
nv10CalcArbitration_sdiv_32ns_32ns_32_36_seq_1_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_660_ap_start),
    .done(grp_fu_660_ap_done),
    .din0(mul_ln114_reg_1396),
    .din1(arb_mclk_khz),
    .ce(1'b1),
    .dout(grp_fu_660_p2)
);

nv10CalcArbitration_sdiv_29ns_32ns_32_33_seq_1 #(
    .ID( 1 ),
    .NUM_STAGE( 33 ),
    .din0_WIDTH( 29 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
nv10CalcArbitration_sdiv_29ns_32ns_32_33_seq_1_U3(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_664_ap_start),
    .done(grp_fu_664_ap_done),
    .din0(grp_fu_664_p0),
    .din1(arb_mclk_khz),
    .ce(1'b1),
    .dout(grp_fu_664_p2)
);

nv10CalcArbitration_sdiv_27ns_32ns_32_31_seq_1 #(
    .ID( 1 ),
    .NUM_STAGE( 31 ),
    .din0_WIDTH( 27 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
nv10CalcArbitration_sdiv_27ns_32ns_32_31_seq_1_U4(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_668_ap_start),
    .done(grp_fu_668_ap_done),
    .din0(grp_fu_668_p0),
    .din1(arb_mclk_khz),
    .ce(1'b1),
    .dout(grp_fu_668_p2)
);

nv10CalcArbitration_sdiv_26ns_32s_32_30_seq_1 #(
    .ID( 1 ),
    .NUM_STAGE( 30 ),
    .din0_WIDTH( 26 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
nv10CalcArbitration_sdiv_26ns_32s_32_30_seq_1_U5(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_672_ap_start),
    .done(grp_fu_672_ap_done),
    .din0(grp_fu_672_p0),
    .din1(arb_nvclk_khz),
    .ce(1'b1),
    .dout(grp_fu_672_p2)
);

nv10CalcArbitration_sdiv_24ns_32s_32_28_seq_1 #(
    .ID( 1 ),
    .NUM_STAGE( 28 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
nv10CalcArbitration_sdiv_24ns_32s_32_28_seq_1_U6(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_677_ap_start),
    .done(grp_fu_677_ap_done),
    .din0(grp_fu_677_p0),
    .din1(arb_pclk_khz),
    .ce(1'b1),
    .dout(grp_fu_677_p2)
);

nv10CalcArbitration_sdiv_32ns_32ns_32_36_seq_1 #(
    .ID( 1 ),
    .NUM_STAGE( 36 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
nv10CalcArbitration_sdiv_32ns_32ns_32_36_seq_1_U7(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_682_ap_start),
    .done(grp_fu_682_ap_done),
    .din0(mul_ln137_reg_1387),
    .din1(arb_mclk_khz),
    .ce(1'b1),
    .dout(grp_fu_682_p2)
);

nv10CalcArbitration_mul_mul_7ns_21ns_28_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 7 ),
    .din1_WIDTH( 21 ),
    .dout_WIDTH( 28 ))
nv10CalcArbitration_mul_mul_7ns_21ns_28_1_1_U8(
    .din0(mul_ln112_fu_1264_p0),
    .din1(mul_ln112_fu_1264_p1),
    .dout(mul_ln112_fu_1264_p2)
);

nv10CalcArbitration_mul_mul_5ns_21ns_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 5 ),
    .din1_WIDTH( 21 ),
    .dout_WIDTH( 26 ))
nv10CalcArbitration_mul_mul_5ns_21ns_26_1_1_U9(
    .din0(mul_ln113_fu_1271_p0),
    .din1(mul_ln113_fu_1271_p1),
    .dout(mul_ln113_fu_1271_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state120)) begin
        cbs_0_reg_276 <= ap_phi_mux_cbs_7_phi_fu_335_p8;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        cbs_0_reg_276 <= 32'd512;
    end
end

always @ (posedge ap_clk) begin
    if (((or_ln178_reg_1392 == 1'd0) & (1'b1 == ap_CS_fsm_state78) & (icmp_ln84_reg_1314 == 1'd1))) begin
        cbs_4_reg_288 <= select_ln183_fu_829_p3;
    end else if ((((or_ln178_reg_1392 == 1'd1) & (1'b1 == ap_CS_fsm_state78) & (icmp_ln84_reg_1314 == 1'd1)) | ((1'b1 == ap_CS_fsm_state78) & (icmp_ln84_reg_1314 == 1'd0)))) begin
        cbs_4_reg_288 <= cbs_0_reg_276;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state78)) begin
        if (((or_ln178_reg_1392 == 1'd1) & (icmp_ln84_reg_1314 == 1'd1))) begin
            clwm_3_reg_302 <= select_ln178_fu_822_p3;
        end else if (((or_ln178_reg_1392 == 1'd0) & (icmp_ln84_reg_1314 == 1'd1))) begin
            clwm_3_reg_302 <= select_ln183_1_fu_836_p3;
        end else if ((icmp_ln84_reg_1314 == 1'd0)) begin
            clwm_3_reg_302 <= clwm_1_fu_777_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state120)) begin
        found_0_reg_265 <= ap_phi_mux_found_5_phi_fu_318_p8;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        found_0_reg_265 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_fu_357_p2 == 1'd1) & (1'd1 == and_ln209_fu_1168_p2) & (1'b1 == ap_CS_fsm_state120))) begin
        min_mclk_extra_1_fu_168 <= 32'd0;
    end else if (((1'd1 == and_ln209_fu_1168_p2) & (grp_fu_357_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state120))) begin
        min_mclk_extra_1_fu_168 <= grp_fu_364_p2;
    end else if (((icmp_ln222_fu_1184_p2 == 1'd1) & (1'd0 == and_ln209_fu_1168_p2) & (1'b1 == ap_CS_fsm_state120))) begin
        min_mclk_extra_1_fu_168 <= min_mclk_extra_3_fu_1190_p3;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        min_mclk_extra_1_fu_168 <= select_ln84_fu_556_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        crtc_drain_rate_reg_1335 <= crtc_drain_rate_fu_490_p3;
        icmp_ln101_reg_1324 <= icmp_ln101_fu_458_p2;
        icmp_ln178_reg_1340 <= icmp_ln178_fu_513_p2;
        icmp_ln84_1_reg_1319 <= icmp_ln84_1_fu_452_p2;
        icmp_ln84_reg_1314 <= icmp_ln84_fu_446_p2;
        select_ln101_reg_1329 <= select_ln101_fu_470_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        icmp_ln183_reg_1381 <= icmp_ln183_fu_620_p2;
        mul_ln137_reg_1387[31 : 7] <= mul_ln137_fu_626_p2[31 : 7];
        mul_ln157_reg_1376 <= mul_ln157_fu_596_p2;
        or_ln178_reg_1392 <= or_ln178_fu_644_p2;
        sext_ln151_reg_1370 <= sext_ln151_fu_586_p1;
        zext_ln112_1_reg_1360[27 : 0] <= zext_ln112_1_fu_580_p1[27 : 0];
        zext_ln113_reg_1365[25 : 0] <= zext_ln113_fu_583_p1[25 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state116)) begin
        icmp_ln198_reg_1510 <= icmp_ln198_fu_979_p2;
        mul_ln206_reg_1515 <= mul_ln206_fu_985_p2;
        tmp_11_reg_1520 <= mul_ln206_fu_985_p2[32'd31];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state78)) begin
        m2us_reg_1478 <= m2us_fu_851_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_phi_mux_found_0_phi_fu_269_p4 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        mul_ln114_reg_1396[31 : 6] <= mul_ln114_fu_654_p2[31 : 6];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state77)) begin
        mul_ln148_1_reg_1447 <= mul_ln148_1_fu_728_p2;
        tmp_9_reg_1452 <= {{mul_ln148_1_fu_728_p2[64:52]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state76)) begin
        mul_ln148_reg_1436 <= mul_ln148_fu_713_p2;
        tmp_7_reg_1441 <= mul_ln148_fu_713_p2[32'd31];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state115)) begin
        mul_ln159_1_reg_1499[64 : 2] <= mul_ln159_1_fu_887_p2[64 : 2];
        tmp_6_reg_1504 <= {{mul_ln159_1_fu_887_p2[64:52]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state114)) begin
        mul_ln159_reg_1488 <= mul_ln159_fu_872_p2;
        tmp_4_reg_1493 <= mul_ln159_fu_872_p2[32'd31];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state117)) begin
        mul_ln206_1_reg_1526[64 : 2] <= mul_ln206_1_fu_1000_p2[64 : 2];
        tmp_17_reg_1531 <= {{mul_ln206_1_fu_1000_p2[64:52]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state119)) begin
        mul_ln207_reg_1541 <= mul_ln207_fu_1058_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state118)) begin
        p1clk_reg_1536 <= p1clk_fu_1051_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        tmp_1_reg_1309 <= {{mul_ln151_fu_370_p2[31:3]}};
        tmp_2_reg_1299 <= mul_ln151_fu_370_p2[32'd31];
        tmp_reg_1304 <= {{sub_ln151_fu_384_p2[31:3]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state75)) begin
        us_crt_1_reg_1431 <= us_crt_1_fu_707_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state113)) begin
        us_crt_reg_1483 <= us_crt_fu_866_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        us_m_min_reg_1407 <= grp_fu_668_p2;
        us_m_reg_1401 <= grp_fu_664_p2;
        us_min_mclk_extra_reg_1412 <= grp_fu_660_p2;
        us_n_reg_1417 <= grp_fu_672_p2;
        us_p_reg_1424 <= grp_fu_677_p2;
    end
end

always @ (*) begin
    if (((ap_phi_mux_found_0_phi_fu_269_p4 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((grp_fu_357_p2 == 1'd1) & (1'd1 == and_ln209_fu_1168_p2) & (1'b1 == ap_CS_fsm_state120))) begin
        ap_phi_mux_cbs_7_phi_fu_335_p8 = select_ln213_fu_1229_p3;
    end else if ((((icmp_ln222_fu_1184_p2 == 1'd0) & (1'd0 == and_ln209_fu_1168_p2) & (1'b1 == ap_CS_fsm_state120)) | ((icmp_ln222_fu_1184_p2 == 1'd1) & (1'd0 == and_ln209_fu_1168_p2) & (1'b1 == ap_CS_fsm_state120)) | ((1'd1 == and_ln209_fu_1168_p2) & (grp_fu_357_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state120)))) begin
        ap_phi_mux_cbs_7_phi_fu_335_p8 = cbs_4_reg_288;
    end else begin
        ap_phi_mux_cbs_7_phi_fu_335_p8 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state120)) begin
        if (((grp_fu_357_p2 == 1'd1) & (1'd1 == and_ln209_fu_1168_p2))) begin
            ap_phi_mux_found_5_phi_fu_318_p8 = icmp_ln213_fu_1208_p2;
        end else if (((icmp_ln222_fu_1184_p2 == 1'd0) & (1'd0 == and_ln209_fu_1168_p2))) begin
            ap_phi_mux_found_5_phi_fu_318_p8 = 1'd1;
        end else if (((icmp_ln222_fu_1184_p2 == 1'd1) & (1'd0 == and_ln209_fu_1168_p2))) begin
            ap_phi_mux_found_5_phi_fu_318_p8 = grp_fu_357_p2;
        end else if (((1'd1 == and_ln209_fu_1168_p2) & (grp_fu_357_p2 == 1'd0))) begin
            ap_phi_mux_found_5_phi_fu_318_p8 = 1'd0;
        end else begin
            ap_phi_mux_found_5_phi_fu_318_p8 = 'bx;
        end
    end else begin
        ap_phi_mux_found_5_phi_fu_318_p8 = 'bx;
    end
end

always @ (*) begin
    if (((ap_phi_mux_found_0_phi_fu_269_p4 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state120)) begin
        fifo_graphics_burst_size_ap_vld = 1'b1;
    end else begin
        fifo_graphics_burst_size_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state120)) begin
        fifo_graphics_lwm_ap_vld = 1'b1;
    end else begin
        fifo_graphics_lwm_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln222_fu_1184_p2 == 1'd1) & (1'd0 == and_ln209_fu_1168_p2) & (1'b1 == ap_CS_fsm_state120)) | ((1'd1 == and_ln209_fu_1168_p2) & (1'b1 == ap_CS_fsm_state120)))) begin
        fifo_valid = 32'd0;
    end else if (((1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state3))) begin
        fifo_valid = 32'd1;
    end else begin
        fifo_valid = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state3) | ((icmp_ln222_fu_1184_p2 == 1'd1) & (1'd0 == and_ln209_fu_1168_p2) & (1'b1 == ap_CS_fsm_state120)) | ((1'd1 == and_ln209_fu_1168_p2) & (1'b1 == ap_CS_fsm_state120)))) begin
        fifo_valid_ap_vld = 1'b1;
    end else begin
        fifo_valid_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state120)) begin
        fifo_video_burst_size_ap_vld = 1'b1;
    end else begin
        fifo_video_burst_size_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state120)) begin
        fifo_video_lwm_ap_vld = 1'b1;
    end else begin
        fifo_video_lwm_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state40) & (icmp_ln84_reg_1314 == 1'd1)) | ((1'b1 == ap_CS_fsm_state40) & (icmp_ln84_reg_1314 == 1'd0)))) begin
        grp_fu_353_ap_start = 1'b1;
    end else begin
        grp_fu_353_ap_start = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_fu_660_ap_start = 1'b1;
    end else begin
        grp_fu_660_ap_start = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_fu_664_ap_start = 1'b1;
    end else begin
        grp_fu_664_ap_start = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_fu_668_ap_start = 1'b1;
    end else begin
        grp_fu_668_ap_start = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_fu_672_ap_start = 1'b1;
    end else begin
        grp_fu_672_ap_start = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_fu_677_ap_start = 1'b1;
    end else begin
        grp_fu_677_ap_start = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state40) & (icmp_ln84_reg_1314 == 1'd0))) begin
        grp_fu_682_ap_start = 1'b1;
    end else begin
        grp_fu_682_ap_start = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if (((ap_phi_mux_found_0_phi_fu_269_p4 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            if (((1'b1 == ap_CS_fsm_state40) & (icmp_ln84_reg_1314 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state79;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state41;
            end
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_state60;
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_state61;
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_state62;
        end
        ap_ST_fsm_state62 : begin
            ap_NS_fsm = ap_ST_fsm_state63;
        end
        ap_ST_fsm_state63 : begin
            ap_NS_fsm = ap_ST_fsm_state64;
        end
        ap_ST_fsm_state64 : begin
            ap_NS_fsm = ap_ST_fsm_state65;
        end
        ap_ST_fsm_state65 : begin
            ap_NS_fsm = ap_ST_fsm_state66;
        end
        ap_ST_fsm_state66 : begin
            ap_NS_fsm = ap_ST_fsm_state67;
        end
        ap_ST_fsm_state67 : begin
            ap_NS_fsm = ap_ST_fsm_state68;
        end
        ap_ST_fsm_state68 : begin
            ap_NS_fsm = ap_ST_fsm_state69;
        end
        ap_ST_fsm_state69 : begin
            ap_NS_fsm = ap_ST_fsm_state70;
        end
        ap_ST_fsm_state70 : begin
            ap_NS_fsm = ap_ST_fsm_state71;
        end
        ap_ST_fsm_state71 : begin
            ap_NS_fsm = ap_ST_fsm_state72;
        end
        ap_ST_fsm_state72 : begin
            ap_NS_fsm = ap_ST_fsm_state73;
        end
        ap_ST_fsm_state73 : begin
            ap_NS_fsm = ap_ST_fsm_state74;
        end
        ap_ST_fsm_state74 : begin
            ap_NS_fsm = ap_ST_fsm_state75;
        end
        ap_ST_fsm_state75 : begin
            ap_NS_fsm = ap_ST_fsm_state76;
        end
        ap_ST_fsm_state76 : begin
            ap_NS_fsm = ap_ST_fsm_state77;
        end
        ap_ST_fsm_state77 : begin
            ap_NS_fsm = ap_ST_fsm_state78;
        end
        ap_ST_fsm_state78 : begin
            ap_NS_fsm = ap_ST_fsm_state116;
        end
        ap_ST_fsm_state79 : begin
            ap_NS_fsm = ap_ST_fsm_state80;
        end
        ap_ST_fsm_state80 : begin
            ap_NS_fsm = ap_ST_fsm_state81;
        end
        ap_ST_fsm_state81 : begin
            ap_NS_fsm = ap_ST_fsm_state82;
        end
        ap_ST_fsm_state82 : begin
            ap_NS_fsm = ap_ST_fsm_state83;
        end
        ap_ST_fsm_state83 : begin
            ap_NS_fsm = ap_ST_fsm_state84;
        end
        ap_ST_fsm_state84 : begin
            ap_NS_fsm = ap_ST_fsm_state85;
        end
        ap_ST_fsm_state85 : begin
            ap_NS_fsm = ap_ST_fsm_state86;
        end
        ap_ST_fsm_state86 : begin
            ap_NS_fsm = ap_ST_fsm_state87;
        end
        ap_ST_fsm_state87 : begin
            ap_NS_fsm = ap_ST_fsm_state88;
        end
        ap_ST_fsm_state88 : begin
            ap_NS_fsm = ap_ST_fsm_state89;
        end
        ap_ST_fsm_state89 : begin
            ap_NS_fsm = ap_ST_fsm_state90;
        end
        ap_ST_fsm_state90 : begin
            ap_NS_fsm = ap_ST_fsm_state91;
        end
        ap_ST_fsm_state91 : begin
            ap_NS_fsm = ap_ST_fsm_state92;
        end
        ap_ST_fsm_state92 : begin
            ap_NS_fsm = ap_ST_fsm_state93;
        end
        ap_ST_fsm_state93 : begin
            ap_NS_fsm = ap_ST_fsm_state94;
        end
        ap_ST_fsm_state94 : begin
            ap_NS_fsm = ap_ST_fsm_state95;
        end
        ap_ST_fsm_state95 : begin
            ap_NS_fsm = ap_ST_fsm_state96;
        end
        ap_ST_fsm_state96 : begin
            ap_NS_fsm = ap_ST_fsm_state97;
        end
        ap_ST_fsm_state97 : begin
            ap_NS_fsm = ap_ST_fsm_state98;
        end
        ap_ST_fsm_state98 : begin
            ap_NS_fsm = ap_ST_fsm_state99;
        end
        ap_ST_fsm_state99 : begin
            ap_NS_fsm = ap_ST_fsm_state100;
        end
        ap_ST_fsm_state100 : begin
            ap_NS_fsm = ap_ST_fsm_state101;
        end
        ap_ST_fsm_state101 : begin
            ap_NS_fsm = ap_ST_fsm_state102;
        end
        ap_ST_fsm_state102 : begin
            ap_NS_fsm = ap_ST_fsm_state103;
        end
        ap_ST_fsm_state103 : begin
            ap_NS_fsm = ap_ST_fsm_state104;
        end
        ap_ST_fsm_state104 : begin
            ap_NS_fsm = ap_ST_fsm_state105;
        end
        ap_ST_fsm_state105 : begin
            ap_NS_fsm = ap_ST_fsm_state106;
        end
        ap_ST_fsm_state106 : begin
            ap_NS_fsm = ap_ST_fsm_state107;
        end
        ap_ST_fsm_state107 : begin
            ap_NS_fsm = ap_ST_fsm_state108;
        end
        ap_ST_fsm_state108 : begin
            ap_NS_fsm = ap_ST_fsm_state109;
        end
        ap_ST_fsm_state109 : begin
            ap_NS_fsm = ap_ST_fsm_state110;
        end
        ap_ST_fsm_state110 : begin
            ap_NS_fsm = ap_ST_fsm_state111;
        end
        ap_ST_fsm_state111 : begin
            ap_NS_fsm = ap_ST_fsm_state112;
        end
        ap_ST_fsm_state112 : begin
            ap_NS_fsm = ap_ST_fsm_state113;
        end
        ap_ST_fsm_state113 : begin
            ap_NS_fsm = ap_ST_fsm_state114;
        end
        ap_ST_fsm_state114 : begin
            ap_NS_fsm = ap_ST_fsm_state115;
        end
        ap_ST_fsm_state115 : begin
            ap_NS_fsm = ap_ST_fsm_state78;
        end
        ap_ST_fsm_state116 : begin
            ap_NS_fsm = ap_ST_fsm_state117;
        end
        ap_ST_fsm_state117 : begin
            ap_NS_fsm = ap_ST_fsm_state118;
        end
        ap_ST_fsm_state118 : begin
            ap_NS_fsm = ap_ST_fsm_state119;
        end
        ap_ST_fsm_state119 : begin
            ap_NS_fsm = ap_ST_fsm_state120;
        end
        ap_ST_fsm_state120 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln142_1_fu_695_p2 = (grp_fu_353_p2 + empty_fu_686_p2);

assign add_ln142_2_fu_701_p2 = (add_ln142_1_fu_695_p2 + grp_fu_682_p2);

assign add_ln142_fu_691_p2 = (us_p_reg_1424 + us_n_reg_1417);

assign add_ln158_1_fu_861_p2 = (grp_fu_353_p2 + us_p_reg_1424);

assign add_ln158_fu_857_p2 = (us_m_reg_1401 + us_n_reg_1417);

assign add_ln178_fu_497_p2 = ($signed(arb_memory_width) + $signed(32'd4294967232));

assign add_ln201_fu_1083_p2 = ($signed(craw_fu_1072_p3) + $signed(14'd15360));

assign add_ln202_1_fu_847_p2 = (us_n_reg_1417 + us_p_reg_1424);

assign add_ln202_fu_843_p2 = (us_min_mclk_extra_reg_1412 + us_m_min_reg_1407);

assign and_ln209_fu_1168_p2 = (icmp_ln209_fu_1156_p2 & icmp_ln209_1_fu_1162_p2);

assign and_ln84_fu_519_p2 = (icmp_ln84_reg_1314 & icmp_ln84_1_reg_1319);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state113 = ap_CS_fsm[32'd112];

assign ap_CS_fsm_state114 = ap_CS_fsm[32'd113];

assign ap_CS_fsm_state115 = ap_CS_fsm[32'd114];

assign ap_CS_fsm_state116 = ap_CS_fsm[32'd115];

assign ap_CS_fsm_state117 = ap_CS_fsm[32'd116];

assign ap_CS_fsm_state118 = ap_CS_fsm[32'd117];

assign ap_CS_fsm_state119 = ap_CS_fsm[32'd118];

assign ap_CS_fsm_state120 = ap_CS_fsm[32'd119];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state75 = ap_CS_fsm[32'd74];

assign ap_CS_fsm_state76 = ap_CS_fsm[32'd75];

assign ap_CS_fsm_state77 = ap_CS_fsm[32'd76];

assign ap_CS_fsm_state78 = ap_CS_fsm[32'd77];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_phi_mux_found_0_phi_fu_269_p4 = found_0_reg_265;

assign cbs_1_fu_1225_p1 = cbs_fu_1215_p4;

assign cbs_fu_1215_p4 = {{cbs_4_reg_288[31:1]}};

assign clwm_1_fu_777_p2 = (13'd1 + select_ln148_1_fu_771_p3);

assign clwm_2_fu_1066_p2 = ($signed(sext_ln197_fu_1062_p1) + $signed(14'd8));

assign clwm_4_fu_1243_p2 = (32'd1032 - ap_phi_mux_cbs_7_phi_fu_335_p8);

assign clwm_fu_816_p2 = (select_ln159_1_fu_810_p3 + 13'd1);

assign craw_fu_1072_p3 = ((icmp_ln198_reg_1510[0:0] === 1'b1) ? clwm_2_fu_1066_p2 : sext_ln197_fu_1062_p1);

assign crtc_drain_rate_fu_490_p3 = ((tmp_2_reg_1299[0:0] === 1'b1) ? sub_ln151_1_fu_481_p2 : zext_ln151_1_fu_487_p1);

assign empty_fu_686_p2 = us_m_reg_1401 << 32'd1;

assign fifo_graphics_burst_size = ap_phi_mux_cbs_7_phi_fu_335_p8;

assign fifo_graphics_lwm = ((icmp_ln233_fu_1249_p2[0:0] === 1'b1) ? clwm_4_fu_1243_p2 : sext_ln198_fu_1079_p1);

assign fifo_video_burst_size = 32'd512;

assign fifo_video_lwm = 32'd1024;

assign grp_fu_357_p2 = ((min_mclk_extra_1_fu_168 == 32'd0) ? 1'b1 : 1'b0);

assign grp_fu_364_p2 = ($signed(min_mclk_extra_1_fu_168) + $signed(32'd4294967295));

assign grp_fu_664_p0 = zext_ln112_1_reg_1360;

assign grp_fu_668_p0 = zext_ln113_reg_1365;

assign grp_fu_672_p0 = 32'd9000000;

assign grp_fu_677_p0 = 32'd4000000;

assign icmp_ln101_fu_458_p2 = ((arb_enable_mp == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln178_1_fu_632_p2 = (($signed(mul_ln180_fu_602_p2) < $signed(mul_ln180_1_fu_608_p2)) ? 1'b1 : 1'b0);

assign icmp_ln178_fu_513_p2 = ((tmp_3_fu_503_p4 != 26'd0) ? 1'b1 : 1'b0);

assign icmp_ln183_fu_620_p2 = (($signed(mul_ln180_fu_602_p2) < $signed(mul_ln183_fu_614_p2)) ? 1'b1 : 1'b0);

assign icmp_ln198_fu_979_p2 = (($signed(tmp_s_fu_971_p3) < $signed(sext_ln197_1_fu_903_p1)) ? 1'b1 : 1'b0);

assign icmp_ln209_1_fu_1162_p2 = (($signed(m1_fu_1093_p2) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln209_fu_1156_p2 = (($signed(sext_ln207_fu_1152_p1) < $signed(m1_fu_1093_p2)) ? 1'b1 : 1'b0);

assign icmp_ln213_fu_1208_p2 = (($signed(cbs_4_reg_288) < $signed(32'd33)) ? 1'b1 : 1'b0);

assign icmp_ln222_fu_1184_p2 = (($signed(tmp_19_fu_1174_p4) > $signed(4'd0)) ? 1'b1 : 1'b0);

assign icmp_ln233_fu_1249_p2 = (($signed(sext_ln198_fu_1079_p1) < $signed(clwm_4_fu_1243_p2)) ? 1'b1 : 1'b0);

assign icmp_ln73_fu_410_p2 = ((arb_memory_type == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln74_fu_416_p2 = ((arb_memory_width == 32'd64) ? 1'b1 : 1'b0);

assign icmp_ln84_1_fu_452_p2 = ((arb_memory_width == 32'd128) ? 1'b1 : 1'b0);

assign icmp_ln84_fu_446_p2 = ((arb_enable_video == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln86_fu_523_p0 = arb_pix_bpp;

assign icmp_ln86_fu_523_p2 = ((icmp_ln86_fu_523_p0 == 32'd32) ? 1'b1 : 1'b0);

assign m1_fu_1093_p2 = ($signed(sext_ln201_fu_1089_p1) + $signed(cbs_4_reg_288));

assign m2us_fu_851_p2 = (add_ln202_1_fu_847_p2 + add_ln202_fu_843_p2);

assign mclk_extra_1_fu_544_p3 = ((and_ln84_fu_519_p2[0:0] === 1'b1) ? mclk_extra_fu_528_p3 : select_ln91_fu_536_p3);

assign mclk_extra_fu_528_p3 = ((icmp_ln86_fu_523_p2[0:0] === 1'b1) ? 6'd31 : 6'd42);

assign mclk_loop_fu_570_p2 = (zext_ln101_1_fu_567_p1 + zext_ln84_fu_552_p1);

assign mclks_fu_464_p2 = (select_ln73_fu_438_p3 + 5'd4);

assign min_mclk_extra_3_fu_1190_p3 = ((grp_fu_357_p2[0:0] === 1'b1) ? 32'd0 : grp_fu_364_p2);

assign mul_ln112_fu_1264_p0 = mul_ln112_fu_1264_p00;

assign mul_ln112_fu_1264_p00 = mclk_loop_fu_570_p2;

assign mul_ln112_fu_1264_p1 = 28'd1000000;

assign mul_ln113_fu_1271_p0 = mul_ln113_fu_1271_p00;

assign mul_ln113_fu_1271_p00 = select_ln101_reg_1329;

assign mul_ln113_fu_1271_p1 = 26'd1000000;

assign mul_ln114_fu_654_p0 = min_mclk_extra_1_fu_168;

assign mul_ln114_fu_654_p2 = ($signed(mul_ln114_fu_654_p0) * $signed('hF4240));

assign mul_ln137_fu_626_p0 = arb_mem_page_miss;

assign mul_ln137_fu_626_p2 = ($signed(mul_ln137_fu_626_p0) * $signed('h1E8480));

assign mul_ln148_1_fu_728_p1 = mul_ln148_reg_1436;

assign mul_ln148_1_fu_728_p2 = ($signed({{1'b0}, {65'd4503599628}}) * $signed(mul_ln148_1_fu_728_p1));

assign mul_ln148_fu_713_p1 = sext_ln151_reg_1370;

assign mul_ln148_fu_713_p2 = ($signed(us_crt_1_reg_1431) * $signed(mul_ln148_fu_713_p1));

assign mul_ln151_fu_370_p0 = arb_pclk_khz;

assign mul_ln151_fu_370_p1 = arb_pix_bpp;

assign mul_ln151_fu_370_p2 = ($signed(mul_ln151_fu_370_p0) * $signed(mul_ln151_fu_370_p1));

assign mul_ln157_fu_596_p0 = mul_ln157_fu_596_p00;

assign mul_ln157_fu_596_p00 = ((icmp_ln101_reg_1324[0:0] === 1'b1) ? 32'd2000000 : 32'd3000000);

assign mul_ln157_fu_596_p1 = arb_mem_page_miss;

assign mul_ln157_fu_596_p2 = ($signed(mul_ln157_fu_596_p0) * $signed(mul_ln157_fu_596_p1));

assign mul_ln159_1_fu_887_p0 = mul_ln159_reg_1488;

assign mul_ln159_1_fu_887_p2 = ($signed(mul_ln159_1_fu_887_p0) * $signed(65'h10C6F7A0C));

assign mul_ln159_fu_872_p0 = sext_ln151_reg_1370;

assign mul_ln159_fu_872_p2 = ($signed(mul_ln159_fu_872_p0) * $signed(us_crt_reg_1483));

assign mul_ln180_1_fu_608_p0 = arb_nvclk_khz;

assign mul_ln180_1_fu_608_p2 = ($signed(mul_ln180_1_fu_608_p0) * $signed('h330));

assign mul_ln180_fu_602_p0 = crtc_drain_rate_reg_1335;

assign mul_ln180_fu_602_p2 = ($signed(mul_ln180_fu_602_p0) * $signed('h64));

assign mul_ln183_fu_614_p0 = arb_nvclk_khz;

assign mul_ln183_fu_614_p2 = ($signed(mul_ln183_fu_614_p0) * $signed('h310));

assign mul_ln206_1_fu_1000_p0 = mul_ln206_reg_1515;

assign mul_ln206_1_fu_1000_p2 = ($signed(mul_ln206_1_fu_1000_p0) * $signed(65'h10C6F7A0C));

assign mul_ln206_fu_985_p0 = arb_pclk_khz;

assign mul_ln206_fu_985_p2 = ($signed(mul_ln206_fu_985_p0) * $signed(m2us_reg_1478));

assign mul_ln207_fu_1058_p0 = arb_pix_bpp;

assign mul_ln207_fu_1058_p1 = p1clk_reg_1536;

assign mul_ln207_fu_1058_p2 = ($signed(mul_ln207_fu_1058_p0) * $signed(mul_ln207_fu_1058_p1));

assign or_ln178_fu_644_p2 = (xor_ln178_fu_638_p2 | icmp_ln178_reg_1340);

assign p1clk_fu_1051_p3 = ((tmp_11_reg_1520[0:0] === 1'b1) ? sub_ln206_1_fu_1045_p2 : sext_ln206_2_fu_1035_p1);

assign p2_fu_1144_p3 = ((tmp_18_fu_1099_p3[0:0] === 1'b1) ? sub_ln207_1_fu_1125_p2 : zext_ln207_1_fu_1140_p1);

assign select_ln101_fu_470_p3 = ((icmp_ln101_fu_458_p2[0:0] === 1'b1) ? select_ln73_fu_438_p3 : mclks_fu_464_p2);

assign select_ln148_1_fu_771_p3 = ((tmp_7_reg_1441[0:0] === 1'b1) ? sub_ln148_1_fu_765_p2 : tmp_9_reg_1452);

assign select_ln148_fu_759_p3 = ((tmp_7_reg_1441[0:0] === 1'b1) ? tmp_8_fu_749_p4 : tmp_9_reg_1452);

assign select_ln159_1_fu_810_p3 = ((tmp_4_reg_1493[0:0] === 1'b1) ? sub_ln159_1_fu_804_p2 : tmp_6_reg_1504);

assign select_ln159_fu_798_p3 = ((tmp_4_reg_1493[0:0] === 1'b1) ? tmp_5_fu_788_p4 : tmp_6_reg_1504);

assign select_ln178_fu_822_p3 = ((icmp_ln178_reg_1340[0:0] === 1'b1) ? clwm_fu_816_p2 : 13'd4095);

assign select_ln183_1_fu_836_p3 = ((icmp_ln183_reg_1381[0:0] === 1'b1) ? clwm_fu_816_p2 : 13'd1024);

assign select_ln183_fu_829_p3 = ((icmp_ln183_reg_1381[0:0] === 1'b1) ? cbs_0_reg_276 : 32'd512);

assign select_ln197_fu_963_p3 = ((tmp_10_fu_907_p3[0:0] === 1'b1) ? sub_ln197_1_fu_939_p2 : zext_ln197_1_fu_959_p1);

assign select_ln206_fu_1038_p3 = ((tmp_11_reg_1520[0:0] === 1'b1) ? sext_ln206_1_fu_1031_p1 : sext_ln206_2_fu_1035_p1);

assign select_ln213_fu_1229_p3 = ((icmp_ln213_fu_1208_p2[0:0] === 1'b1) ? cbs_4_reg_288 : cbs_1_fu_1225_p1);

assign select_ln73_fu_438_p3 = ((icmp_ln73_fu_410_p2[0:0] === 1'b1) ? select_ln74_fu_422_p3 : select_ln79_fu_430_p3);

assign select_ln74_fu_422_p3 = ((icmp_ln74_fu_416_p2[0:0] === 1'b1) ? 5'd22 : 5'd20);

assign select_ln79_fu_430_p3 = ((icmp_ln74_fu_416_p2[0:0] === 1'b1) ? 5'd20 : 5'd19);

assign select_ln84_fu_556_p3 = ((and_ln84_fu_519_p2[0:0] === 1'b1) ? 32'd17 : 32'd18);

assign select_ln91_fu_536_p3 = ((icmp_ln86_fu_523_p2[0:0] === 1'b1) ? 6'd8 : 6'd4);

assign sext_ln151_fu_586_p1 = $signed(crtc_drain_rate_reg_1335);

assign sext_ln197_1_fu_903_p1 = clwm_3_reg_302;

assign sext_ln197_2_fu_931_p1 = $signed(trunc_ln197_1_fu_921_p4);

assign sext_ln197_3_fu_955_p1 = $signed(trunc_ln197_2_fu_945_p4);

assign sext_ln197_fu_1062_p1 = clwm_3_reg_302;

assign sext_ln198_fu_1079_p1 = craw_fu_1072_p3;

assign sext_ln201_fu_1089_p1 = $signed(add_ln201_fu_1083_p2);

assign sext_ln206_1_fu_1031_p1 = $signed(tmp_16_fu_1021_p4);

assign sext_ln206_2_fu_1035_p1 = $signed(tmp_17_reg_1531);

assign sext_ln207_fu_1152_p1 = $signed(p2_fu_1144_p3);

assign sub_ln148_1_fu_765_p2 = (13'd0 - select_ln148_fu_759_p3);

assign sub_ln148_fu_744_p2 = (65'd0 - mul_ln148_1_reg_1447);

assign sub_ln151_1_fu_481_p2 = (30'd0 - zext_ln151_fu_478_p1);

assign sub_ln151_fu_384_p2 = (32'd0 - mul_ln151_fu_370_p2);

assign sub_ln159_1_fu_804_p2 = (13'd0 - select_ln159_fu_798_p3);

assign sub_ln159_fu_783_p2 = (65'd0 - mul_ln159_1_reg_1499);

assign sub_ln197_1_fu_939_p2 = (12'd0 - zext_ln197_fu_935_p1);

assign sub_ln197_fu_915_p2 = ($signed(13'd0) - $signed(clwm_3_reg_302));

assign sub_ln206_1_fu_1045_p2 = (32'd0 - select_ln206_fu_1038_p3);

assign sub_ln206_fu_1016_p2 = (65'd0 - mul_ln206_1_reg_1526);

assign sub_ln207_1_fu_1125_p2 = (30'd0 - zext_ln207_fu_1121_p1);

assign sub_ln207_fu_1106_p2 = (32'd0 - mul_ln207_reg_1541);

assign tmp_10_fu_907_p3 = clwm_3_reg_302[32'd12];

assign tmp_12_fu_1111_p4 = {{sub_ln207_fu_1106_p2[31:3]}};

assign tmp_13_fu_1131_p4 = {{mul_ln207_reg_1541[31:3]}};

assign tmp_16_fu_1021_p4 = {{sub_ln206_fu_1016_p2[64:52]}};

assign tmp_18_fu_1099_p3 = mul_ln207_reg_1541[32'd31];

assign tmp_19_fu_1174_p4 = {{craw_fu_1072_p3[13:10]}};

assign tmp_3_fu_503_p4 = {{add_ln178_fu_497_p2[31:6]}};

assign tmp_5_fu_788_p4 = {{sub_ln159_fu_783_p2[64:52]}};

assign tmp_8_fu_749_p4 = {{sub_ln148_fu_744_p2[64:52]}};

assign tmp_s_fu_971_p3 = {{select_ln197_fu_963_p3}, {3'd0}};

assign trunc_ln197_1_fu_921_p4 = {{sub_ln197_fu_915_p2[12:3]}};

assign trunc_ln197_2_fu_945_p4 = {{clwm_3_reg_302[12:3]}};

assign us_crt_1_fu_707_p2 = (add_ln142_2_fu_701_p2 + add_ln142_fu_691_p2);

assign us_crt_fu_866_p2 = (add_ln158_fu_857_p2 + add_ln158_1_fu_861_p2);

assign xor_ln178_fu_638_p2 = (icmp_ln178_1_fu_632_p2 ^ 1'd1);

assign zext_ln101_1_fu_567_p1 = select_ln101_reg_1329;

assign zext_ln112_1_fu_580_p1 = mul_ln112_fu_1264_p2;

assign zext_ln113_fu_583_p1 = mul_ln113_fu_1271_p2;

assign zext_ln151_1_fu_487_p1 = tmp_1_reg_1309;

assign zext_ln151_fu_478_p1 = tmp_reg_1304;

assign zext_ln197_1_fu_959_p1 = $unsigned(sext_ln197_3_fu_955_p1);

assign zext_ln197_fu_935_p1 = $unsigned(sext_ln197_2_fu_931_p1);

assign zext_ln207_1_fu_1140_p1 = tmp_13_fu_1131_p4;

assign zext_ln207_fu_1121_p1 = tmp_12_fu_1111_p4;

assign zext_ln84_fu_552_p1 = mclk_extra_1_fu_544_p3;

always @ (posedge ap_clk) begin
    zext_ln112_1_reg_1360[31:28] <= 4'b0000;
    zext_ln113_reg_1365[31:26] <= 6'b000000;
    mul_ln137_reg_1387[6:0] <= 7'b0000000;
    mul_ln114_reg_1396[5:0] <= 6'b000000;
    mul_ln159_1_reg_1499[1:0] <= 2'b00;
    mul_ln206_1_reg_1526[1:0] <= 2'b00;
end

endmodule //nv10CalcArbitration
