// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _XGIfb_validate_mode_HH_
#define _XGIfb_validate_mode_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct XGIfb_validate_mode : public sc_module {
    // Port declarations 17
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<32> > xgifb_info_chip;
    sc_in< sc_lv<32> > xgifb_info_display2;
    sc_in< sc_lv<64> > xgifb_info_video_size;
    sc_in< sc_lv<32> > xgifb_info_TV_type;
    sc_in< sc_lv<32> > xgifb_info_hasVB;
    sc_in< sc_lv<32> > xgifb_info_lvds_data_LVDSHDE;
    sc_in< sc_lv<32> > xgifb_info_lvds_data_LVDSVDE;
    sc_in< sc_lv<32> > xgifb_info_hw_info_ulCRT2LCDType;
    sc_in< sc_lv<32> > xgifb_info_hw_info_ulExternalChip;
    sc_in< sc_lv<32> > myindex;
    sc_out< sc_lv<32> > ap_return;


    // Module declarations
    XGIfb_validate_mode(sc_module_name name);
    SC_HAS_PROCESS(XGIfb_validate_mode);

    ~XGIfb_validate_mode();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    sc_signal< sc_lv<2> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<1> > grp_fu_88_p2;
    sc_signal< sc_lv<1> > icmp_ln50_reg_119;
    sc_signal< sc_lv<1> > icmp_ln51_fu_94_p2;
    sc_signal< sc_lv<1> > icmp_ln51_reg_123;
    sc_signal< sc_lv<1> > tmp_reg_127;
    sc_signal< sc_lv<32> > ap_phi_mux_UnifiedRetVal_phi_fu_81_p4;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<32> > or_ln56_fu_100_p2;
    sc_signal< sc_lv<2> > ap_NS_fsm;
    sc_signal< bool > ap_condition_65;
    sc_signal< bool > ap_condition_74;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<2> ap_ST_fsm_state1;
    static const sc_lv<2> ap_ST_fsm_state2;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_FFFFFFFF;
    static const sc_lv<32> ap_const_lv32_82;
    static const sc_lv<32> ap_const_lv32_1F;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_condition_65();
    void thread_ap_condition_74();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_phi_mux_UnifiedRetVal_phi_fu_81_p4();
    void thread_ap_ready();
    void thread_ap_return();
    void thread_grp_fu_88_p2();
    void thread_icmp_ln51_fu_94_p2();
    void thread_or_ln56_fu_100_p2();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
