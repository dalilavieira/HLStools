// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="sbr_autocorrelate_c,hls_ip_2019_1,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7k160t-fbg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=9.102600,HLS_SYN_LAT=544,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=24,HLS_SYN_FF=2589,HLS_SYN_LUT=2429,HLS_VERSION=2019_1}" *)

module sbr_autocorrelate_c (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        x_address0,
        x_ce0,
        x_q0,
        x_address1,
        x_ce1,
        x_q1,
        phi_address0,
        phi_ce0,
        phi_we0,
        phi_d0,
        phi_address1,
        phi_ce1,
        phi_we1,
        phi_d1
);

parameter    ap_ST_fsm_state1 = 40'd1;
parameter    ap_ST_fsm_state2 = 40'd2;
parameter    ap_ST_fsm_state3 = 40'd4;
parameter    ap_ST_fsm_state4 = 40'd8;
parameter    ap_ST_fsm_state5 = 40'd16;
parameter    ap_ST_fsm_state6 = 40'd32;
parameter    ap_ST_fsm_state7 = 40'd64;
parameter    ap_ST_fsm_state8 = 40'd128;
parameter    ap_ST_fsm_state9 = 40'd256;
parameter    ap_ST_fsm_state10 = 40'd512;
parameter    ap_ST_fsm_state11 = 40'd1024;
parameter    ap_ST_fsm_state12 = 40'd2048;
parameter    ap_ST_fsm_state13 = 40'd4096;
parameter    ap_ST_fsm_state14 = 40'd8192;
parameter    ap_ST_fsm_state15 = 40'd16384;
parameter    ap_ST_fsm_state16 = 40'd32768;
parameter    ap_ST_fsm_state17 = 40'd65536;
parameter    ap_ST_fsm_state18 = 40'd131072;
parameter    ap_ST_fsm_state19 = 40'd262144;
parameter    ap_ST_fsm_state20 = 40'd524288;
parameter    ap_ST_fsm_state21 = 40'd1048576;
parameter    ap_ST_fsm_state22 = 40'd2097152;
parameter    ap_ST_fsm_state23 = 40'd4194304;
parameter    ap_ST_fsm_state24 = 40'd8388608;
parameter    ap_ST_fsm_state25 = 40'd16777216;
parameter    ap_ST_fsm_state26 = 40'd33554432;
parameter    ap_ST_fsm_state27 = 40'd67108864;
parameter    ap_ST_fsm_state28 = 40'd134217728;
parameter    ap_ST_fsm_state29 = 40'd268435456;
parameter    ap_ST_fsm_state30 = 40'd536870912;
parameter    ap_ST_fsm_state31 = 40'd1073741824;
parameter    ap_ST_fsm_state32 = 40'd2147483648;
parameter    ap_ST_fsm_state33 = 40'd4294967296;
parameter    ap_ST_fsm_state34 = 40'd8589934592;
parameter    ap_ST_fsm_state35 = 40'd17179869184;
parameter    ap_ST_fsm_state36 = 40'd34359738368;
parameter    ap_ST_fsm_state37 = 40'd68719476736;
parameter    ap_ST_fsm_state38 = 40'd137438953472;
parameter    ap_ST_fsm_state39 = 40'd274877906944;
parameter    ap_ST_fsm_state40 = 40'd549755813888;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [6:0] x_address0;
output   x_ce0;
input  [31:0] x_q0;
output  [6:0] x_address1;
output   x_ce1;
input  [31:0] x_q1;
output  [3:0] phi_address0;
output   phi_ce0;
output   phi_we0;
output  [31:0] phi_d0;
output  [3:0] phi_address1;
output   phi_ce1;
output   phi_we1;
output  [31:0] phi_d1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[6:0] x_address0;
reg x_ce0;
reg[6:0] x_address1;
reg x_ce1;
reg[3:0] phi_address0;
reg phi_ce0;
reg phi_we0;
reg[31:0] phi_d0;
reg[3:0] phi_address1;
reg phi_ce1;
reg phi_we1;
reg[31:0] phi_d1;

(* fsm_encoding = "none" *) reg   [39:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [31:0] reg_393;
wire    ap_CS_fsm_state2;
wire    ap_CS_fsm_state30;
reg   [31:0] reg_402;
wire    ap_CS_fsm_state26;
reg   [31:0] reg_413;
wire    ap_CS_fsm_state3;
wire   [31:0] grp_fu_365_p2;
reg   [31:0] reg_420;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state16;
wire    ap_CS_fsm_state27;
wire    ap_CS_fsm_state31;
wire   [31:0] grp_fu_369_p2;
reg   [31:0] reg_426;
wire    ap_CS_fsm_state29;
wire    ap_CS_fsm_state33;
wire   [31:0] grp_fu_373_p2;
reg   [31:0] reg_432;
wire   [31:0] grp_fu_377_p2;
reg   [31:0] reg_438;
wire   [31:0] grp_fu_346_p2;
reg   [31:0] reg_443;
wire    ap_CS_fsm_state10;
wire    ap_CS_fsm_state35;
wire    ap_CS_fsm_state37;
wire    ap_CS_fsm_state38;
wire    ap_CS_fsm_state39;
wire   [31:0] grp_fu_350_p2;
reg   [31:0] reg_451;
reg   [31:0] reg_458;
wire    ap_CS_fsm_state13;
reg   [31:0] reg_467;
reg   [31:0] reg_476;
wire    ap_CS_fsm_state14;
wire    ap_CS_fsm_state28;
reg   [31:0] reg_484;
wire    ap_CS_fsm_state17;
reg   [31:0] reg_490;
reg   [31:0] reg_496;
reg   [31:0] reg_502;
wire    ap_CS_fsm_state20;
wire    ap_CS_fsm_state24;
reg   [31:0] reg_509;
wire    ap_CS_fsm_state34;
wire   [31:0] grp_fu_354_p2;
reg   [31:0] reg_516;
reg   [31:0] reg_522;
wire    ap_CS_fsm_state21;
reg   [31:0] reg_528;
reg   [31:0] x_load_2_reg_628;
wire    ap_CS_fsm_state11;
wire    ap_CS_fsm_state12;
wire   [0:0] icmp_ln21_fu_534_p2;
wire   [5:0] i_fu_568_p2;
reg   [5:0] i_reg_720;
reg   [31:0] x_load_13_reg_735;
wire   [31:0] grp_fu_383_p2;
reg   [31:0] tmp_33_reg_742;
wire   [31:0] grp_fu_388_p2;
reg   [31:0] tmp_34_reg_747;
reg   [31:0] tmp_40_reg_752;
wire    ap_CS_fsm_state25;
reg   [31:0] tmp_15_reg_767;
reg   [31:0] tmp_13_reg_772;
reg   [31:0] empty_reg_256;
reg   [31:0] empty_2_reg_266;
reg   [31:0] imag_sum1_0_reg_276;
reg   [31:0] real_sum1_0_reg_288;
reg   [31:0] imag_sum2_0_reg_300;
reg   [31:0] real_sum2_0_reg_311;
reg   [31:0] real_sum0_0_reg_322;
reg   [5:0] i_0_reg_334;
wire   [63:0] zext_ln22_fu_548_p1;
wire   [63:0] tmp_43_fu_559_p3;
wire   [63:0] zext_ln25_fu_588_p1;
wire   [63:0] tmp_45_fu_599_p3;
wire    ap_CS_fsm_state36;
wire    ap_CS_fsm_state40;
reg   [31:0] grp_fu_346_p0;
reg   [31:0] grp_fu_346_p1;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state18;
wire    ap_CS_fsm_state22;
wire    ap_CS_fsm_state32;
reg   [31:0] grp_fu_350_p0;
reg   [31:0] grp_fu_350_p1;
reg   [31:0] grp_fu_354_p0;
reg   [31:0] grp_fu_354_p1;
reg   [31:0] grp_fu_365_p0;
reg   [31:0] grp_fu_365_p1;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state15;
reg   [31:0] grp_fu_369_p0;
reg   [31:0] grp_fu_369_p1;
reg   [31:0] grp_fu_373_p0;
reg   [31:0] grp_fu_373_p1;
reg   [31:0] grp_fu_377_p0;
reg   [31:0] grp_fu_377_p1;
wire   [6:0] tmp_42_fu_540_p3;
wire   [6:0] or_ln22_fu_553_p2;
wire   [5:0] add_ln25_fu_574_p2;
wire   [6:0] tmp_44_fu_580_p3;
wire   [6:0] or_ln25_fu_593_p2;
reg   [1:0] grp_fu_346_opcode;
reg   [1:0] grp_fu_350_opcode;
reg   [1:0] grp_fu_354_opcode;
reg   [39:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 40'd1;
end

sbr_autocorrelate_c_faddfsub_32ns_32ns_32_4_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
sbr_autocorrelate_c_faddfsub_32ns_32ns_32_4_full_dsp_1_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_346_p0),
    .din1(grp_fu_346_p1),
    .opcode(grp_fu_346_opcode),
    .ce(1'b1),
    .dout(grp_fu_346_p2)
);

sbr_autocorrelate_c_faddfsub_32ns_32ns_32_4_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
sbr_autocorrelate_c_faddfsub_32ns_32ns_32_4_full_dsp_1_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_350_p0),
    .din1(grp_fu_350_p1),
    .opcode(grp_fu_350_opcode),
    .ce(1'b1),
    .dout(grp_fu_350_p2)
);

sbr_autocorrelate_c_faddfsub_32ns_32ns_32_4_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
sbr_autocorrelate_c_faddfsub_32ns_32ns_32_4_full_dsp_1_U3(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_354_p0),
    .din1(grp_fu_354_p1),
    .opcode(grp_fu_354_opcode),
    .ce(1'b1),
    .dout(grp_fu_354_p2)
);

sbr_autocorrelate_c_fmul_32ns_32ns_32_3_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
sbr_autocorrelate_c_fmul_32ns_32ns_32_3_max_dsp_1_U4(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_365_p0),
    .din1(grp_fu_365_p1),
    .ce(1'b1),
    .dout(grp_fu_365_p2)
);

sbr_autocorrelate_c_fmul_32ns_32ns_32_3_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
sbr_autocorrelate_c_fmul_32ns_32ns_32_3_max_dsp_1_U5(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_369_p0),
    .din1(grp_fu_369_p1),
    .ce(1'b1),
    .dout(grp_fu_369_p2)
);

sbr_autocorrelate_c_fmul_32ns_32ns_32_3_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
sbr_autocorrelate_c_fmul_32ns_32ns_32_3_max_dsp_1_U6(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_373_p0),
    .din1(grp_fu_373_p1),
    .ce(1'b1),
    .dout(grp_fu_373_p2)
);

sbr_autocorrelate_c_fmul_32ns_32ns_32_3_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
sbr_autocorrelate_c_fmul_32ns_32ns_32_3_max_dsp_1_U7(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_377_p0),
    .din1(grp_fu_377_p1),
    .ce(1'b1),
    .dout(grp_fu_377_p2)
);

sbr_autocorrelate_c_fmul_32ns_32ns_32_3_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
sbr_autocorrelate_c_fmul_32ns_32ns_32_3_max_dsp_1_U8(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_458),
    .din1(empty_reg_256),
    .ce(1'b1),
    .dout(grp_fu_383_p2)
);

sbr_autocorrelate_c_fmul_32ns_32ns_32_3_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
sbr_autocorrelate_c_fmul_32ns_32ns_32_3_max_dsp_1_U9(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_467),
    .din1(empty_2_reg_266),
    .ce(1'b1),
    .dout(grp_fu_388_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        empty_2_reg_266 <= reg_476;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        empty_2_reg_266 <= reg_402;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        empty_reg_256 <= x_load_13_reg_735;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        empty_reg_256 <= reg_413;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        i_0_reg_334 <= i_reg_720;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        i_0_reg_334 <= 6'd1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        imag_sum1_0_reg_276 <= reg_516;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        imag_sum1_0_reg_276 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        imag_sum2_0_reg_300 <= grp_fu_350_p2;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        imag_sum2_0_reg_300 <= reg_451;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        real_sum0_0_reg_322 <= reg_502;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        real_sum0_0_reg_322 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        real_sum1_0_reg_288 <= reg_509;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        real_sum1_0_reg_288 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        real_sum2_0_reg_311 <= grp_fu_346_p2;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        real_sum2_0_reg_311 <= reg_443;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        reg_393 <= x_q1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        reg_393 <= x_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        reg_402 <= x_q0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        reg_402 <= x_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        i_reg_720 <= i_fu_568_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state3))) begin
        reg_413 <= x_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state6))) begin
        reg_420 <= grp_fu_365_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state6))) begin
        reg_426 <= grp_fu_369_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state6))) begin
        reg_432 <= grp_fu_373_p2;
        reg_438 <= grp_fu_377_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state31))) begin
        reg_443 <= grp_fu_346_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state33))) begin
        reg_451 <= grp_fu_350_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state27))) begin
        reg_458 <= x_q0;
        reg_467 <= x_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state14))) begin
        reg_476 <= x_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state29))) begin
        reg_484 <= grp_fu_365_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state17))) begin
        reg_490 <= grp_fu_369_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state33))) begin
        reg_496 <= grp_fu_373_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state33))) begin
        reg_502 <= grp_fu_346_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state20))) begin
        reg_509 <= grp_fu_350_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state20))) begin
        reg_516 <= grp_fu_354_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state34))) begin
        reg_522 <= grp_fu_346_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state35))) begin
        reg_528 <= grp_fu_350_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        tmp_13_reg_772 <= grp_fu_369_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        tmp_15_reg_767 <= grp_fu_365_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        tmp_33_reg_742 <= grp_fu_383_p2;
        tmp_34_reg_747 <= grp_fu_388_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        tmp_40_reg_752 <= grp_fu_377_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        x_load_13_reg_735 <= x_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        x_load_2_reg_628 <= x_q0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state35))) begin
        grp_fu_346_opcode = 2'd1;
    end else if (((1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state31))) begin
        grp_fu_346_opcode = 2'd0;
    end else begin
        grp_fu_346_opcode = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        grp_fu_346_p0 = reg_528;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        grp_fu_346_p0 = reg_522;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        grp_fu_346_p0 = reg_502;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        grp_fu_346_p0 = reg_443;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        grp_fu_346_p0 = imag_sum1_0_reg_276;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        grp_fu_346_p0 = real_sum2_0_reg_311;
    end else if (((1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state28))) begin
        grp_fu_346_p0 = real_sum0_0_reg_322;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_fu_346_p0 = reg_484;
    end else if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state17))) begin
        grp_fu_346_p0 = reg_420;
    end else begin
        grp_fu_346_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        grp_fu_346_p1 = reg_496;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        grp_fu_346_p1 = reg_432;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        grp_fu_346_p1 = tmp_15_reg_767;
    end else if (((1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state34))) begin
        grp_fu_346_p1 = reg_484;
    end else if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state28))) begin
        grp_fu_346_p1 = reg_420;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        grp_fu_346_p1 = reg_522;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        grp_fu_346_p1 = reg_502;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_fu_346_p1 = reg_490;
    end else if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state17))) begin
        grp_fu_346_p1 = reg_426;
    end else begin
        grp_fu_346_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state7))) begin
        grp_fu_350_opcode = 2'd1;
    end else if (((1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state31))) begin
        grp_fu_350_opcode = 2'd0;
    end else begin
        grp_fu_350_opcode = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        grp_fu_350_p0 = reg_509;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        grp_fu_350_p0 = reg_451;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        grp_fu_350_p0 = imag_sum1_0_reg_276;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        grp_fu_350_p0 = imag_sum2_0_reg_300;
    end else if (((1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state31))) begin
        grp_fu_350_p0 = real_sum1_0_reg_288;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_fu_350_p0 = reg_496;
    end else if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state17))) begin
        grp_fu_350_p0 = reg_432;
    end else begin
        grp_fu_350_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        grp_fu_350_p1 = tmp_13_reg_772;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        grp_fu_350_p1 = reg_490;
    end else if (((1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state35))) begin
        grp_fu_350_p1 = reg_426;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        grp_fu_350_p1 = reg_528;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        grp_fu_350_p1 = reg_509;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_fu_350_p1 = tmp_40_reg_752;
    end else if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state17))) begin
        grp_fu_350_p1 = reg_438;
    end else begin
        grp_fu_350_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        grp_fu_354_opcode = 2'd1;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        grp_fu_354_opcode = 2'd0;
    end else begin
        grp_fu_354_opcode = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        grp_fu_354_p0 = imag_sum1_0_reg_276;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        grp_fu_354_p0 = tmp_33_reg_742;
    end else begin
        grp_fu_354_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        grp_fu_354_p1 = reg_516;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        grp_fu_354_p1 = tmp_34_reg_747;
    end else begin
        grp_fu_354_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        grp_fu_365_p0 = x_load_2_reg_628;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        grp_fu_365_p0 = reg_402;
    end else if (((1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14))) begin
        grp_fu_365_p0 = reg_458;
    end else if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state31))) begin
        grp_fu_365_p0 = reg_393;
    end else begin
        grp_fu_365_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        grp_fu_365_p1 = x_load_2_reg_628;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        grp_fu_365_p1 = reg_476;
    end else if (((1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state14))) begin
        grp_fu_365_p1 = reg_458;
    end else if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state31))) begin
        grp_fu_365_p1 = reg_393;
    end else if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state27))) begin
        grp_fu_365_p1 = reg_402;
    end else begin
        grp_fu_365_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        grp_fu_369_p0 = reg_402;
    end else if (((1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state27))) begin
        grp_fu_369_p0 = reg_393;
    end else if (((1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14))) begin
        grp_fu_369_p0 = reg_467;
    end else if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state29))) begin
        grp_fu_369_p0 = x_load_2_reg_628;
    end else begin
        grp_fu_369_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        grp_fu_369_p1 = reg_476;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        grp_fu_369_p1 = reg_458;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        grp_fu_369_p1 = x_load_13_reg_735;
    end else if (((1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state14))) begin
        grp_fu_369_p1 = reg_467;
    end else if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state27))) begin
        grp_fu_369_p1 = reg_413;
    end else begin
        grp_fu_369_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        grp_fu_373_p0 = x_load_2_reg_628;
    end else if (((1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14))) begin
        grp_fu_373_p0 = reg_458;
    end else if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state31))) begin
        grp_fu_373_p0 = reg_393;
    end else begin
        grp_fu_373_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        grp_fu_373_p1 = reg_467;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        grp_fu_373_p1 = x_load_13_reg_735;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        grp_fu_373_p1 = empty_2_reg_266;
    end else if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state29))) begin
        grp_fu_373_p1 = reg_413;
    end else begin
        grp_fu_373_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        grp_fu_377_p0 = reg_402;
    end else if (((1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14))) begin
        grp_fu_377_p0 = reg_467;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_fu_377_p0 = x_load_2_reg_628;
    end else begin
        grp_fu_377_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state29))) begin
        grp_fu_377_p1 = reg_476;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        grp_fu_377_p1 = empty_reg_256;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_fu_377_p1 = reg_402;
    end else begin
        grp_fu_377_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        phi_address0 = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        phi_address0 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        phi_address0 = 64'd10;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        phi_address0 = 64'd2;
    end else begin
        phi_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        phi_address1 = 64'd1;
    end else if ((1'b1 == ap_CS_fsm_state39)) begin
        phi_address1 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        phi_address1 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        phi_address1 = 64'd3;
    end else begin
        phi_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state38))) begin
        phi_ce0 = 1'b1;
    end else begin
        phi_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state38))) begin
        phi_ce1 = 1'b1;
    end else begin
        phi_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state38))) begin
        phi_d0 = reg_451;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        phi_d0 = reg_443;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        phi_d0 = real_sum2_0_reg_311;
    end else begin
        phi_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state38))) begin
        phi_d1 = reg_443;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        phi_d1 = imag_sum2_0_reg_300;
    end else begin
        phi_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state38) | ((icmp_ln21_fu_534_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state12)))) begin
        phi_we0 = 1'b1;
    end else begin
        phi_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state38) | ((icmp_ln21_fu_534_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state12)))) begin
        phi_we1 = 1'b1;
    end else begin
        phi_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        x_address0 = 64'd79;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        x_address0 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        x_address0 = zext_ln25_fu_588_p1;
    end else if (((icmp_ln21_fu_534_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state12))) begin
        x_address0 = 64'd76;
    end else if (((icmp_ln21_fu_534_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state12))) begin
        x_address0 = zext_ln22_fu_548_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        x_address0 = 64'd1;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        x_address0 = 64'd0;
    end else begin
        x_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        x_address1 = 64'd77;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        x_address1 = 64'd78;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        x_address1 = tmp_45_fu_599_p3;
    end else if (((icmp_ln21_fu_534_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state12))) begin
        x_address1 = 64'd2;
    end else if (((icmp_ln21_fu_534_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state12))) begin
        x_address1 = tmp_43_fu_559_p3;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        x_address1 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        x_address1 = 64'd4;
    end else begin
        x_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state27) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)) | ((icmp_ln21_fu_534_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state12)) | ((icmp_ln21_fu_534_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state12)))) begin
        x_ce0 = 1'b1;
    end else begin
        x_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state29) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)) | ((icmp_ln21_fu_534_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state12)) | ((icmp_ln21_fu_534_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state12)))) begin
        x_ce1 = 1'b1;
    end else begin
        x_ce1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            if (((icmp_ln21_fu_534_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state12))) begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln25_fu_574_p2 = (i_0_reg_334 + 6'd2);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign i_fu_568_p2 = (i_0_reg_334 + 6'd1);

assign icmp_ln21_fu_534_p2 = ((i_0_reg_334 == 6'd38) ? 1'b1 : 1'b0);

assign or_ln22_fu_553_p2 = (tmp_42_fu_540_p3 | 7'd1);

assign or_ln25_fu_593_p2 = (tmp_44_fu_580_p3 | 7'd1);

assign tmp_42_fu_540_p3 = {{i_0_reg_334}, {1'd0}};

assign tmp_43_fu_559_p3 = {{57'd0}, {or_ln22_fu_553_p2}};

assign tmp_44_fu_580_p3 = {{add_ln25_fu_574_p2}, {1'd0}};

assign tmp_45_fu_599_p3 = {{57'd0}, {or_ln25_fu_593_p2}};

assign zext_ln22_fu_548_p1 = tmp_42_fu_540_p3;

assign zext_ln25_fu_588_p1 = tmp_44_fu_580_p3;

endmodule //sbr_autocorrelate_c
