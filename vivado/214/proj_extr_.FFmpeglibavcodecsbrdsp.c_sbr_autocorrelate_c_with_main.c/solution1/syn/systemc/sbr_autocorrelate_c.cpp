// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "sbr_autocorrelate_c.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic sbr_autocorrelate_c::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic sbr_autocorrelate_c::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<40> sbr_autocorrelate_c::ap_ST_fsm_state1 = "1";
const sc_lv<40> sbr_autocorrelate_c::ap_ST_fsm_state2 = "10";
const sc_lv<40> sbr_autocorrelate_c::ap_ST_fsm_state3 = "100";
const sc_lv<40> sbr_autocorrelate_c::ap_ST_fsm_state4 = "1000";
const sc_lv<40> sbr_autocorrelate_c::ap_ST_fsm_state5 = "10000";
const sc_lv<40> sbr_autocorrelate_c::ap_ST_fsm_state6 = "100000";
const sc_lv<40> sbr_autocorrelate_c::ap_ST_fsm_state7 = "1000000";
const sc_lv<40> sbr_autocorrelate_c::ap_ST_fsm_state8 = "10000000";
const sc_lv<40> sbr_autocorrelate_c::ap_ST_fsm_state9 = "100000000";
const sc_lv<40> sbr_autocorrelate_c::ap_ST_fsm_state10 = "1000000000";
const sc_lv<40> sbr_autocorrelate_c::ap_ST_fsm_state11 = "10000000000";
const sc_lv<40> sbr_autocorrelate_c::ap_ST_fsm_state12 = "100000000000";
const sc_lv<40> sbr_autocorrelate_c::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<40> sbr_autocorrelate_c::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<40> sbr_autocorrelate_c::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<40> sbr_autocorrelate_c::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<40> sbr_autocorrelate_c::ap_ST_fsm_state17 = "10000000000000000";
const sc_lv<40> sbr_autocorrelate_c::ap_ST_fsm_state18 = "100000000000000000";
const sc_lv<40> sbr_autocorrelate_c::ap_ST_fsm_state19 = "1000000000000000000";
const sc_lv<40> sbr_autocorrelate_c::ap_ST_fsm_state20 = "10000000000000000000";
const sc_lv<40> sbr_autocorrelate_c::ap_ST_fsm_state21 = "100000000000000000000";
const sc_lv<40> sbr_autocorrelate_c::ap_ST_fsm_state22 = "1000000000000000000000";
const sc_lv<40> sbr_autocorrelate_c::ap_ST_fsm_state23 = "10000000000000000000000";
const sc_lv<40> sbr_autocorrelate_c::ap_ST_fsm_state24 = "100000000000000000000000";
const sc_lv<40> sbr_autocorrelate_c::ap_ST_fsm_state25 = "1000000000000000000000000";
const sc_lv<40> sbr_autocorrelate_c::ap_ST_fsm_state26 = "10000000000000000000000000";
const sc_lv<40> sbr_autocorrelate_c::ap_ST_fsm_state27 = "100000000000000000000000000";
const sc_lv<40> sbr_autocorrelate_c::ap_ST_fsm_state28 = "1000000000000000000000000000";
const sc_lv<40> sbr_autocorrelate_c::ap_ST_fsm_state29 = "10000000000000000000000000000";
const sc_lv<40> sbr_autocorrelate_c::ap_ST_fsm_state30 = "100000000000000000000000000000";
const sc_lv<40> sbr_autocorrelate_c::ap_ST_fsm_state31 = "1000000000000000000000000000000";
const sc_lv<40> sbr_autocorrelate_c::ap_ST_fsm_state32 = "10000000000000000000000000000000";
const sc_lv<40> sbr_autocorrelate_c::ap_ST_fsm_state33 = "100000000000000000000000000000000";
const sc_lv<40> sbr_autocorrelate_c::ap_ST_fsm_state34 = "1000000000000000000000000000000000";
const sc_lv<40> sbr_autocorrelate_c::ap_ST_fsm_state35 = "10000000000000000000000000000000000";
const sc_lv<40> sbr_autocorrelate_c::ap_ST_fsm_state36 = "100000000000000000000000000000000000";
const sc_lv<40> sbr_autocorrelate_c::ap_ST_fsm_state37 = "1000000000000000000000000000000000000";
const sc_lv<40> sbr_autocorrelate_c::ap_ST_fsm_state38 = "10000000000000000000000000000000000000";
const sc_lv<40> sbr_autocorrelate_c::ap_ST_fsm_state39 = "100000000000000000000000000000000000000";
const sc_lv<40> sbr_autocorrelate_c::ap_ST_fsm_state40 = "1000000000000000000000000000000000000000";
const sc_lv<32> sbr_autocorrelate_c::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> sbr_autocorrelate_c::ap_const_lv32_1 = "1";
const sc_lv<32> sbr_autocorrelate_c::ap_const_lv32_1D = "11101";
const sc_lv<32> sbr_autocorrelate_c::ap_const_lv32_19 = "11001";
const sc_lv<32> sbr_autocorrelate_c::ap_const_lv32_2 = "10";
const sc_lv<32> sbr_autocorrelate_c::ap_const_lv32_5 = "101";
const sc_lv<32> sbr_autocorrelate_c::ap_const_lv32_F = "1111";
const sc_lv<32> sbr_autocorrelate_c::ap_const_lv32_1A = "11010";
const sc_lv<32> sbr_autocorrelate_c::ap_const_lv32_1E = "11110";
const sc_lv<32> sbr_autocorrelate_c::ap_const_lv32_1C = "11100";
const sc_lv<32> sbr_autocorrelate_c::ap_const_lv32_20 = "100000";
const sc_lv<32> sbr_autocorrelate_c::ap_const_lv32_9 = "1001";
const sc_lv<32> sbr_autocorrelate_c::ap_const_lv32_22 = "100010";
const sc_lv<32> sbr_autocorrelate_c::ap_const_lv32_24 = "100100";
const sc_lv<32> sbr_autocorrelate_c::ap_const_lv32_25 = "100101";
const sc_lv<32> sbr_autocorrelate_c::ap_const_lv32_26 = "100110";
const sc_lv<32> sbr_autocorrelate_c::ap_const_lv32_C = "1100";
const sc_lv<32> sbr_autocorrelate_c::ap_const_lv32_D = "1101";
const sc_lv<32> sbr_autocorrelate_c::ap_const_lv32_1B = "11011";
const sc_lv<32> sbr_autocorrelate_c::ap_const_lv32_10 = "10000";
const sc_lv<32> sbr_autocorrelate_c::ap_const_lv32_13 = "10011";
const sc_lv<32> sbr_autocorrelate_c::ap_const_lv32_17 = "10111";
const sc_lv<32> sbr_autocorrelate_c::ap_const_lv32_21 = "100001";
const sc_lv<32> sbr_autocorrelate_c::ap_const_lv32_14 = "10100";
const sc_lv<32> sbr_autocorrelate_c::ap_const_lv32_A = "1010";
const sc_lv<32> sbr_autocorrelate_c::ap_const_lv32_B = "1011";
const sc_lv<1> sbr_autocorrelate_c::ap_const_lv1_0 = "0";
const sc_lv<32> sbr_autocorrelate_c::ap_const_lv32_18 = "11000";
const sc_lv<6> sbr_autocorrelate_c::ap_const_lv6_1 = "1";
const sc_lv<64> sbr_autocorrelate_c::ap_const_lv64_0 = "0000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<64> sbr_autocorrelate_c::ap_const_lv64_4 = "100";
const sc_lv<64> sbr_autocorrelate_c::ap_const_lv64_1 = "1";
const sc_lv<64> sbr_autocorrelate_c::ap_const_lv64_5 = "101";
const sc_lv<64> sbr_autocorrelate_c::ap_const_lv64_4C = "1001100";
const sc_lv<64> sbr_autocorrelate_c::ap_const_lv64_4D = "1001101";
const sc_lv<64> sbr_autocorrelate_c::ap_const_lv64_2 = "10";
const sc_lv<64> sbr_autocorrelate_c::ap_const_lv64_3 = "11";
const sc_lv<64> sbr_autocorrelate_c::ap_const_lv64_4E = "1001110";
const sc_lv<64> sbr_autocorrelate_c::ap_const_lv64_4F = "1001111";
const sc_lv<64> sbr_autocorrelate_c::ap_const_lv64_A = "1010";
const sc_lv<64> sbr_autocorrelate_c::ap_const_lv64_6 = "110";
const sc_lv<64> sbr_autocorrelate_c::ap_const_lv64_7 = "111";
const sc_lv<1> sbr_autocorrelate_c::ap_const_lv1_1 = "1";
const sc_lv<32> sbr_autocorrelate_c::ap_const_lv32_23 = "100011";
const sc_lv<32> sbr_autocorrelate_c::ap_const_lv32_27 = "100111";
const sc_lv<32> sbr_autocorrelate_c::ap_const_lv32_6 = "110";
const sc_lv<32> sbr_autocorrelate_c::ap_const_lv32_11 = "10001";
const sc_lv<32> sbr_autocorrelate_c::ap_const_lv32_15 = "10101";
const sc_lv<32> sbr_autocorrelate_c::ap_const_lv32_1F = "11111";
const sc_lv<32> sbr_autocorrelate_c::ap_const_lv32_3 = "11";
const sc_lv<32> sbr_autocorrelate_c::ap_const_lv32_E = "1110";
const sc_lv<6> sbr_autocorrelate_c::ap_const_lv6_26 = "100110";
const sc_lv<7> sbr_autocorrelate_c::ap_const_lv7_1 = "1";
const sc_lv<57> sbr_autocorrelate_c::ap_const_lv57_0 = "000000000000000000000000000000000000000000000000000000000";
const sc_lv<6> sbr_autocorrelate_c::ap_const_lv6_2 = "10";
const sc_lv<2> sbr_autocorrelate_c::ap_const_lv2_0 = "00";
const sc_lv<2> sbr_autocorrelate_c::ap_const_lv2_1 = "1";
const bool sbr_autocorrelate_c::ap_const_boolean_1 = true;

sbr_autocorrelate_c::sbr_autocorrelate_c(sc_module_name name) : sc_module(name), mVcdFile(0) {
    sbr_autocorrelate_c_faddfsub_32ns_32ns_32_4_full_dsp_1_U1 = new sbr_autocorrelate_c_faddfsub_32ns_32ns_32_4_full_dsp_1<1,4,32,32,32>("sbr_autocorrelate_c_faddfsub_32ns_32ns_32_4_full_dsp_1_U1");
    sbr_autocorrelate_c_faddfsub_32ns_32ns_32_4_full_dsp_1_U1->clk(ap_clk);
    sbr_autocorrelate_c_faddfsub_32ns_32ns_32_4_full_dsp_1_U1->reset(ap_rst);
    sbr_autocorrelate_c_faddfsub_32ns_32ns_32_4_full_dsp_1_U1->din0(grp_fu_346_p0);
    sbr_autocorrelate_c_faddfsub_32ns_32ns_32_4_full_dsp_1_U1->din1(grp_fu_346_p1);
    sbr_autocorrelate_c_faddfsub_32ns_32ns_32_4_full_dsp_1_U1->opcode(grp_fu_346_opcode);
    sbr_autocorrelate_c_faddfsub_32ns_32ns_32_4_full_dsp_1_U1->ce(ap_var_for_const0);
    sbr_autocorrelate_c_faddfsub_32ns_32ns_32_4_full_dsp_1_U1->dout(grp_fu_346_p2);
    sbr_autocorrelate_c_faddfsub_32ns_32ns_32_4_full_dsp_1_U2 = new sbr_autocorrelate_c_faddfsub_32ns_32ns_32_4_full_dsp_1<1,4,32,32,32>("sbr_autocorrelate_c_faddfsub_32ns_32ns_32_4_full_dsp_1_U2");
    sbr_autocorrelate_c_faddfsub_32ns_32ns_32_4_full_dsp_1_U2->clk(ap_clk);
    sbr_autocorrelate_c_faddfsub_32ns_32ns_32_4_full_dsp_1_U2->reset(ap_rst);
    sbr_autocorrelate_c_faddfsub_32ns_32ns_32_4_full_dsp_1_U2->din0(grp_fu_350_p0);
    sbr_autocorrelate_c_faddfsub_32ns_32ns_32_4_full_dsp_1_U2->din1(grp_fu_350_p1);
    sbr_autocorrelate_c_faddfsub_32ns_32ns_32_4_full_dsp_1_U2->opcode(grp_fu_350_opcode);
    sbr_autocorrelate_c_faddfsub_32ns_32ns_32_4_full_dsp_1_U2->ce(ap_var_for_const0);
    sbr_autocorrelate_c_faddfsub_32ns_32ns_32_4_full_dsp_1_U2->dout(grp_fu_350_p2);
    sbr_autocorrelate_c_faddfsub_32ns_32ns_32_4_full_dsp_1_U3 = new sbr_autocorrelate_c_faddfsub_32ns_32ns_32_4_full_dsp_1<1,4,32,32,32>("sbr_autocorrelate_c_faddfsub_32ns_32ns_32_4_full_dsp_1_U3");
    sbr_autocorrelate_c_faddfsub_32ns_32ns_32_4_full_dsp_1_U3->clk(ap_clk);
    sbr_autocorrelate_c_faddfsub_32ns_32ns_32_4_full_dsp_1_U3->reset(ap_rst);
    sbr_autocorrelate_c_faddfsub_32ns_32ns_32_4_full_dsp_1_U3->din0(grp_fu_354_p0);
    sbr_autocorrelate_c_faddfsub_32ns_32ns_32_4_full_dsp_1_U3->din1(grp_fu_354_p1);
    sbr_autocorrelate_c_faddfsub_32ns_32ns_32_4_full_dsp_1_U3->opcode(grp_fu_354_opcode);
    sbr_autocorrelate_c_faddfsub_32ns_32ns_32_4_full_dsp_1_U3->ce(ap_var_for_const0);
    sbr_autocorrelate_c_faddfsub_32ns_32ns_32_4_full_dsp_1_U3->dout(grp_fu_354_p2);
    sbr_autocorrelate_c_fmul_32ns_32ns_32_3_max_dsp_1_U4 = new sbr_autocorrelate_c_fmul_32ns_32ns_32_3_max_dsp_1<1,3,32,32,32>("sbr_autocorrelate_c_fmul_32ns_32ns_32_3_max_dsp_1_U4");
    sbr_autocorrelate_c_fmul_32ns_32ns_32_3_max_dsp_1_U4->clk(ap_clk);
    sbr_autocorrelate_c_fmul_32ns_32ns_32_3_max_dsp_1_U4->reset(ap_rst);
    sbr_autocorrelate_c_fmul_32ns_32ns_32_3_max_dsp_1_U4->din0(grp_fu_365_p0);
    sbr_autocorrelate_c_fmul_32ns_32ns_32_3_max_dsp_1_U4->din1(grp_fu_365_p1);
    sbr_autocorrelate_c_fmul_32ns_32ns_32_3_max_dsp_1_U4->ce(ap_var_for_const0);
    sbr_autocorrelate_c_fmul_32ns_32ns_32_3_max_dsp_1_U4->dout(grp_fu_365_p2);
    sbr_autocorrelate_c_fmul_32ns_32ns_32_3_max_dsp_1_U5 = new sbr_autocorrelate_c_fmul_32ns_32ns_32_3_max_dsp_1<1,3,32,32,32>("sbr_autocorrelate_c_fmul_32ns_32ns_32_3_max_dsp_1_U5");
    sbr_autocorrelate_c_fmul_32ns_32ns_32_3_max_dsp_1_U5->clk(ap_clk);
    sbr_autocorrelate_c_fmul_32ns_32ns_32_3_max_dsp_1_U5->reset(ap_rst);
    sbr_autocorrelate_c_fmul_32ns_32ns_32_3_max_dsp_1_U5->din0(grp_fu_369_p0);
    sbr_autocorrelate_c_fmul_32ns_32ns_32_3_max_dsp_1_U5->din1(grp_fu_369_p1);
    sbr_autocorrelate_c_fmul_32ns_32ns_32_3_max_dsp_1_U5->ce(ap_var_for_const0);
    sbr_autocorrelate_c_fmul_32ns_32ns_32_3_max_dsp_1_U5->dout(grp_fu_369_p2);
    sbr_autocorrelate_c_fmul_32ns_32ns_32_3_max_dsp_1_U6 = new sbr_autocorrelate_c_fmul_32ns_32ns_32_3_max_dsp_1<1,3,32,32,32>("sbr_autocorrelate_c_fmul_32ns_32ns_32_3_max_dsp_1_U6");
    sbr_autocorrelate_c_fmul_32ns_32ns_32_3_max_dsp_1_U6->clk(ap_clk);
    sbr_autocorrelate_c_fmul_32ns_32ns_32_3_max_dsp_1_U6->reset(ap_rst);
    sbr_autocorrelate_c_fmul_32ns_32ns_32_3_max_dsp_1_U6->din0(grp_fu_373_p0);
    sbr_autocorrelate_c_fmul_32ns_32ns_32_3_max_dsp_1_U6->din1(grp_fu_373_p1);
    sbr_autocorrelate_c_fmul_32ns_32ns_32_3_max_dsp_1_U6->ce(ap_var_for_const0);
    sbr_autocorrelate_c_fmul_32ns_32ns_32_3_max_dsp_1_U6->dout(grp_fu_373_p2);
    sbr_autocorrelate_c_fmul_32ns_32ns_32_3_max_dsp_1_U7 = new sbr_autocorrelate_c_fmul_32ns_32ns_32_3_max_dsp_1<1,3,32,32,32>("sbr_autocorrelate_c_fmul_32ns_32ns_32_3_max_dsp_1_U7");
    sbr_autocorrelate_c_fmul_32ns_32ns_32_3_max_dsp_1_U7->clk(ap_clk);
    sbr_autocorrelate_c_fmul_32ns_32ns_32_3_max_dsp_1_U7->reset(ap_rst);
    sbr_autocorrelate_c_fmul_32ns_32ns_32_3_max_dsp_1_U7->din0(grp_fu_377_p0);
    sbr_autocorrelate_c_fmul_32ns_32ns_32_3_max_dsp_1_U7->din1(grp_fu_377_p1);
    sbr_autocorrelate_c_fmul_32ns_32ns_32_3_max_dsp_1_U7->ce(ap_var_for_const0);
    sbr_autocorrelate_c_fmul_32ns_32ns_32_3_max_dsp_1_U7->dout(grp_fu_377_p2);
    sbr_autocorrelate_c_fmul_32ns_32ns_32_3_max_dsp_1_U8 = new sbr_autocorrelate_c_fmul_32ns_32ns_32_3_max_dsp_1<1,3,32,32,32>("sbr_autocorrelate_c_fmul_32ns_32ns_32_3_max_dsp_1_U8");
    sbr_autocorrelate_c_fmul_32ns_32ns_32_3_max_dsp_1_U8->clk(ap_clk);
    sbr_autocorrelate_c_fmul_32ns_32ns_32_3_max_dsp_1_U8->reset(ap_rst);
    sbr_autocorrelate_c_fmul_32ns_32ns_32_3_max_dsp_1_U8->din0(reg_458);
    sbr_autocorrelate_c_fmul_32ns_32ns_32_3_max_dsp_1_U8->din1(empty_reg_256);
    sbr_autocorrelate_c_fmul_32ns_32ns_32_3_max_dsp_1_U8->ce(ap_var_for_const0);
    sbr_autocorrelate_c_fmul_32ns_32ns_32_3_max_dsp_1_U8->dout(grp_fu_383_p2);
    sbr_autocorrelate_c_fmul_32ns_32ns_32_3_max_dsp_1_U9 = new sbr_autocorrelate_c_fmul_32ns_32ns_32_3_max_dsp_1<1,3,32,32,32>("sbr_autocorrelate_c_fmul_32ns_32ns_32_3_max_dsp_1_U9");
    sbr_autocorrelate_c_fmul_32ns_32ns_32_3_max_dsp_1_U9->clk(ap_clk);
    sbr_autocorrelate_c_fmul_32ns_32ns_32_3_max_dsp_1_U9->reset(ap_rst);
    sbr_autocorrelate_c_fmul_32ns_32ns_32_3_max_dsp_1_U9->din0(reg_467);
    sbr_autocorrelate_c_fmul_32ns_32ns_32_3_max_dsp_1_U9->din1(empty_2_reg_266);
    sbr_autocorrelate_c_fmul_32ns_32ns_32_3_max_dsp_1_U9->ce(ap_var_for_const0);
    sbr_autocorrelate_c_fmul_32ns_32ns_32_3_max_dsp_1_U9->dout(grp_fu_388_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_add_ln25_fu_574_p2);
    sensitive << ( i_0_reg_334 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state13);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state14);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state15);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state16);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state17);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state18);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state20);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state21);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state22);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state24);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state25);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state26);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state27);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state28);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state29);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state30);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state31);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state32);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state33);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state34);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state35);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state36);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state37);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state38);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state39);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state40);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state40 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state40 );

    SC_METHOD(thread_grp_fu_346_opcode);
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( ap_CS_fsm_state35 );
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state34 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( ap_CS_fsm_state36 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( ap_CS_fsm_state32 );

    SC_METHOD(thread_grp_fu_346_p0);
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( reg_420 );
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( reg_443 );
    sensitive << ( ap_CS_fsm_state35 );
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( reg_484 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( reg_502 );
    sensitive << ( ap_CS_fsm_state34 );
    sensitive << ( reg_522 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( reg_528 );
    sensitive << ( imag_sum1_0_reg_276 );
    sensitive << ( real_sum2_0_reg_311 );
    sensitive << ( real_sum0_0_reg_322 );
    sensitive << ( ap_CS_fsm_state36 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( ap_CS_fsm_state32 );

    SC_METHOD(thread_grp_fu_346_p1);
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( reg_420 );
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( reg_426 );
    sensitive << ( reg_432 );
    sensitive << ( ap_CS_fsm_state35 );
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( reg_484 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( reg_490 );
    sensitive << ( reg_496 );
    sensitive << ( reg_502 );
    sensitive << ( ap_CS_fsm_state34 );
    sensitive << ( reg_522 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( tmp_15_reg_767 );
    sensitive << ( ap_CS_fsm_state36 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( ap_CS_fsm_state32 );

    SC_METHOD(thread_grp_fu_350_opcode);
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( ap_CS_fsm_state35 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state34 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( ap_CS_fsm_state32 );

    SC_METHOD(thread_grp_fu_350_p0);
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( reg_432 );
    sensitive << ( ap_CS_fsm_state35 );
    sensitive << ( reg_451 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( reg_496 );
    sensitive << ( reg_509 );
    sensitive << ( ap_CS_fsm_state34 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( imag_sum1_0_reg_276 );
    sensitive << ( real_sum1_0_reg_288 );
    sensitive << ( imag_sum2_0_reg_300 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( ap_CS_fsm_state32 );

    SC_METHOD(thread_grp_fu_350_p1);
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( reg_426 );
    sensitive << ( reg_438 );
    sensitive << ( ap_CS_fsm_state35 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( reg_490 );
    sensitive << ( reg_509 );
    sensitive << ( ap_CS_fsm_state34 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( reg_528 );
    sensitive << ( tmp_40_reg_752 );
    sensitive << ( tmp_13_reg_772 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( ap_CS_fsm_state32 );

    SC_METHOD(thread_grp_fu_354_opcode);
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state21 );

    SC_METHOD(thread_grp_fu_354_p0);
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( tmp_33_reg_742 );
    sensitive << ( imag_sum1_0_reg_276 );

    SC_METHOD(thread_grp_fu_354_p1);
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( reg_516 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( tmp_34_reg_747 );

    SC_METHOD(thread_grp_fu_365_p0);
    sensitive << ( reg_393 );
    sensitive << ( reg_402 );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( ap_CS_fsm_state29 );
    sensitive << ( reg_458 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( x_load_2_reg_628 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state15 );

    SC_METHOD(thread_grp_fu_365_p1);
    sensitive << ( reg_393 );
    sensitive << ( reg_402 );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( ap_CS_fsm_state29 );
    sensitive << ( reg_458 );
    sensitive << ( reg_476 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( x_load_2_reg_628 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state15 );

    SC_METHOD(thread_grp_fu_369_p0);
    sensitive << ( reg_393 );
    sensitive << ( reg_402 );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( ap_CS_fsm_state29 );
    sensitive << ( reg_467 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( x_load_2_reg_628 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state15 );

    SC_METHOD(thread_grp_fu_369_p1);
    sensitive << ( reg_413 );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( ap_CS_fsm_state29 );
    sensitive << ( reg_458 );
    sensitive << ( reg_467 );
    sensitive << ( reg_476 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( x_load_13_reg_735 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state15 );

    SC_METHOD(thread_grp_fu_373_p0);
    sensitive << ( reg_393 );
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( ap_CS_fsm_state29 );
    sensitive << ( reg_458 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( x_load_2_reg_628 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state15 );

    SC_METHOD(thread_grp_fu_373_p1);
    sensitive << ( reg_413 );
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( ap_CS_fsm_state29 );
    sensitive << ( reg_467 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( x_load_13_reg_735 );
    sensitive << ( empty_2_reg_266 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state15 );

    SC_METHOD(thread_grp_fu_377_p0);
    sensitive << ( reg_402 );
    sensitive << ( ap_CS_fsm_state29 );
    sensitive << ( reg_467 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( x_load_2_reg_628 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state15 );

    SC_METHOD(thread_grp_fu_377_p1);
    sensitive << ( reg_402 );
    sensitive << ( ap_CS_fsm_state29 );
    sensitive << ( reg_476 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( empty_reg_256 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state15 );

    SC_METHOD(thread_i_fu_568_p2);
    sensitive << ( i_0_reg_334 );

    SC_METHOD(thread_icmp_ln21_fu_534_p2);
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( i_0_reg_334 );

    SC_METHOD(thread_or_ln22_fu_553_p2);
    sensitive << ( tmp_42_fu_540_p3 );

    SC_METHOD(thread_or_ln25_fu_593_p2);
    sensitive << ( tmp_44_fu_580_p3 );

    SC_METHOD(thread_phi_address0);
    sensitive << ( ap_CS_fsm_state38 );
    sensitive << ( ap_CS_fsm_state39 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state36 );

    SC_METHOD(thread_phi_address1);
    sensitive << ( ap_CS_fsm_state38 );
    sensitive << ( ap_CS_fsm_state39 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state40 );

    SC_METHOD(thread_phi_ce0);
    sensitive << ( ap_CS_fsm_state38 );
    sensitive << ( ap_CS_fsm_state39 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state36 );

    SC_METHOD(thread_phi_ce1);
    sensitive << ( ap_CS_fsm_state38 );
    sensitive << ( ap_CS_fsm_state39 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state40 );

    SC_METHOD(thread_phi_d0);
    sensitive << ( reg_443 );
    sensitive << ( ap_CS_fsm_state38 );
    sensitive << ( ap_CS_fsm_state39 );
    sensitive << ( reg_451 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( real_sum2_0_reg_311 );
    sensitive << ( ap_CS_fsm_state36 );

    SC_METHOD(thread_phi_d1);
    sensitive << ( reg_443 );
    sensitive << ( ap_CS_fsm_state38 );
    sensitive << ( ap_CS_fsm_state39 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( imag_sum2_0_reg_300 );
    sensitive << ( ap_CS_fsm_state40 );

    SC_METHOD(thread_phi_we0);
    sensitive << ( ap_CS_fsm_state38 );
    sensitive << ( ap_CS_fsm_state39 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( icmp_ln21_fu_534_p2 );
    sensitive << ( ap_CS_fsm_state36 );

    SC_METHOD(thread_phi_we1);
    sensitive << ( ap_CS_fsm_state38 );
    sensitive << ( ap_CS_fsm_state39 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( icmp_ln21_fu_534_p2 );
    sensitive << ( ap_CS_fsm_state40 );

    SC_METHOD(thread_tmp_42_fu_540_p3);
    sensitive << ( i_0_reg_334 );

    SC_METHOD(thread_tmp_43_fu_559_p3);
    sensitive << ( or_ln22_fu_553_p2 );

    SC_METHOD(thread_tmp_44_fu_580_p3);
    sensitive << ( add_ln25_fu_574_p2 );

    SC_METHOD(thread_tmp_45_fu_599_p3);
    sensitive << ( or_ln25_fu_593_p2 );

    SC_METHOD(thread_x_address0);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( icmp_ln21_fu_534_p2 );
    sensitive << ( zext_ln22_fu_548_p1 );
    sensitive << ( zext_ln25_fu_588_p1 );

    SC_METHOD(thread_x_address1);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_CS_fsm_state29 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( icmp_ln21_fu_534_p2 );
    sensitive << ( tmp_43_fu_559_p3 );
    sensitive << ( tmp_45_fu_599_p3 );

    SC_METHOD(thread_x_ce0);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( icmp_ln21_fu_534_p2 );

    SC_METHOD(thread_x_ce1);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_CS_fsm_state29 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( icmp_ln21_fu_534_p2 );

    SC_METHOD(thread_zext_ln22_fu_548_p1);
    sensitive << ( tmp_42_fu_540_p3 );

    SC_METHOD(thread_zext_ln25_fu_588_p1);
    sensitive << ( tmp_44_fu_580_p3 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( icmp_ln21_fu_534_p2 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    ap_CS_fsm = "0000000000000000000000000000000000000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "sbr_autocorrelate_c_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, x_address0, "(port)x_address0");
    sc_trace(mVcdFile, x_ce0, "(port)x_ce0");
    sc_trace(mVcdFile, x_q0, "(port)x_q0");
    sc_trace(mVcdFile, x_address1, "(port)x_address1");
    sc_trace(mVcdFile, x_ce1, "(port)x_ce1");
    sc_trace(mVcdFile, x_q1, "(port)x_q1");
    sc_trace(mVcdFile, phi_address0, "(port)phi_address0");
    sc_trace(mVcdFile, phi_ce0, "(port)phi_ce0");
    sc_trace(mVcdFile, phi_we0, "(port)phi_we0");
    sc_trace(mVcdFile, phi_d0, "(port)phi_d0");
    sc_trace(mVcdFile, phi_address1, "(port)phi_address1");
    sc_trace(mVcdFile, phi_ce1, "(port)phi_ce1");
    sc_trace(mVcdFile, phi_we1, "(port)phi_we1");
    sc_trace(mVcdFile, phi_d1, "(port)phi_d1");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, reg_393, "reg_393");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, ap_CS_fsm_state30, "ap_CS_fsm_state30");
    sc_trace(mVcdFile, reg_402, "reg_402");
    sc_trace(mVcdFile, ap_CS_fsm_state26, "ap_CS_fsm_state26");
    sc_trace(mVcdFile, reg_413, "reg_413");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, grp_fu_365_p2, "grp_fu_365_p2");
    sc_trace(mVcdFile, reg_420, "reg_420");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, ap_CS_fsm_state16, "ap_CS_fsm_state16");
    sc_trace(mVcdFile, ap_CS_fsm_state27, "ap_CS_fsm_state27");
    sc_trace(mVcdFile, ap_CS_fsm_state31, "ap_CS_fsm_state31");
    sc_trace(mVcdFile, grp_fu_369_p2, "grp_fu_369_p2");
    sc_trace(mVcdFile, reg_426, "reg_426");
    sc_trace(mVcdFile, ap_CS_fsm_state29, "ap_CS_fsm_state29");
    sc_trace(mVcdFile, ap_CS_fsm_state33, "ap_CS_fsm_state33");
    sc_trace(mVcdFile, grp_fu_373_p2, "grp_fu_373_p2");
    sc_trace(mVcdFile, reg_432, "reg_432");
    sc_trace(mVcdFile, grp_fu_377_p2, "grp_fu_377_p2");
    sc_trace(mVcdFile, reg_438, "reg_438");
    sc_trace(mVcdFile, grp_fu_346_p2, "grp_fu_346_p2");
    sc_trace(mVcdFile, reg_443, "reg_443");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, ap_CS_fsm_state35, "ap_CS_fsm_state35");
    sc_trace(mVcdFile, ap_CS_fsm_state37, "ap_CS_fsm_state37");
    sc_trace(mVcdFile, ap_CS_fsm_state38, "ap_CS_fsm_state38");
    sc_trace(mVcdFile, ap_CS_fsm_state39, "ap_CS_fsm_state39");
    sc_trace(mVcdFile, grp_fu_350_p2, "grp_fu_350_p2");
    sc_trace(mVcdFile, reg_451, "reg_451");
    sc_trace(mVcdFile, reg_458, "reg_458");
    sc_trace(mVcdFile, ap_CS_fsm_state13, "ap_CS_fsm_state13");
    sc_trace(mVcdFile, reg_467, "reg_467");
    sc_trace(mVcdFile, reg_476, "reg_476");
    sc_trace(mVcdFile, ap_CS_fsm_state14, "ap_CS_fsm_state14");
    sc_trace(mVcdFile, ap_CS_fsm_state28, "ap_CS_fsm_state28");
    sc_trace(mVcdFile, reg_484, "reg_484");
    sc_trace(mVcdFile, ap_CS_fsm_state17, "ap_CS_fsm_state17");
    sc_trace(mVcdFile, reg_490, "reg_490");
    sc_trace(mVcdFile, reg_496, "reg_496");
    sc_trace(mVcdFile, reg_502, "reg_502");
    sc_trace(mVcdFile, ap_CS_fsm_state20, "ap_CS_fsm_state20");
    sc_trace(mVcdFile, ap_CS_fsm_state24, "ap_CS_fsm_state24");
    sc_trace(mVcdFile, reg_509, "reg_509");
    sc_trace(mVcdFile, ap_CS_fsm_state34, "ap_CS_fsm_state34");
    sc_trace(mVcdFile, grp_fu_354_p2, "grp_fu_354_p2");
    sc_trace(mVcdFile, reg_516, "reg_516");
    sc_trace(mVcdFile, reg_522, "reg_522");
    sc_trace(mVcdFile, ap_CS_fsm_state21, "ap_CS_fsm_state21");
    sc_trace(mVcdFile, reg_528, "reg_528");
    sc_trace(mVcdFile, x_load_2_reg_628, "x_load_2_reg_628");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, icmp_ln21_fu_534_p2, "icmp_ln21_fu_534_p2");
    sc_trace(mVcdFile, i_fu_568_p2, "i_fu_568_p2");
    sc_trace(mVcdFile, i_reg_720, "i_reg_720");
    sc_trace(mVcdFile, x_load_13_reg_735, "x_load_13_reg_735");
    sc_trace(mVcdFile, grp_fu_383_p2, "grp_fu_383_p2");
    sc_trace(mVcdFile, tmp_33_reg_742, "tmp_33_reg_742");
    sc_trace(mVcdFile, grp_fu_388_p2, "grp_fu_388_p2");
    sc_trace(mVcdFile, tmp_34_reg_747, "tmp_34_reg_747");
    sc_trace(mVcdFile, tmp_40_reg_752, "tmp_40_reg_752");
    sc_trace(mVcdFile, ap_CS_fsm_state25, "ap_CS_fsm_state25");
    sc_trace(mVcdFile, tmp_15_reg_767, "tmp_15_reg_767");
    sc_trace(mVcdFile, tmp_13_reg_772, "tmp_13_reg_772");
    sc_trace(mVcdFile, empty_reg_256, "empty_reg_256");
    sc_trace(mVcdFile, empty_2_reg_266, "empty_2_reg_266");
    sc_trace(mVcdFile, imag_sum1_0_reg_276, "imag_sum1_0_reg_276");
    sc_trace(mVcdFile, real_sum1_0_reg_288, "real_sum1_0_reg_288");
    sc_trace(mVcdFile, imag_sum2_0_reg_300, "imag_sum2_0_reg_300");
    sc_trace(mVcdFile, real_sum2_0_reg_311, "real_sum2_0_reg_311");
    sc_trace(mVcdFile, real_sum0_0_reg_322, "real_sum0_0_reg_322");
    sc_trace(mVcdFile, i_0_reg_334, "i_0_reg_334");
    sc_trace(mVcdFile, zext_ln22_fu_548_p1, "zext_ln22_fu_548_p1");
    sc_trace(mVcdFile, tmp_43_fu_559_p3, "tmp_43_fu_559_p3");
    sc_trace(mVcdFile, zext_ln25_fu_588_p1, "zext_ln25_fu_588_p1");
    sc_trace(mVcdFile, tmp_45_fu_599_p3, "tmp_45_fu_599_p3");
    sc_trace(mVcdFile, ap_CS_fsm_state36, "ap_CS_fsm_state36");
    sc_trace(mVcdFile, ap_CS_fsm_state40, "ap_CS_fsm_state40");
    sc_trace(mVcdFile, grp_fu_346_p0, "grp_fu_346_p0");
    sc_trace(mVcdFile, grp_fu_346_p1, "grp_fu_346_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, ap_CS_fsm_state18, "ap_CS_fsm_state18");
    sc_trace(mVcdFile, ap_CS_fsm_state22, "ap_CS_fsm_state22");
    sc_trace(mVcdFile, ap_CS_fsm_state32, "ap_CS_fsm_state32");
    sc_trace(mVcdFile, grp_fu_350_p0, "grp_fu_350_p0");
    sc_trace(mVcdFile, grp_fu_350_p1, "grp_fu_350_p1");
    sc_trace(mVcdFile, grp_fu_354_p0, "grp_fu_354_p0");
    sc_trace(mVcdFile, grp_fu_354_p1, "grp_fu_354_p1");
    sc_trace(mVcdFile, grp_fu_365_p0, "grp_fu_365_p0");
    sc_trace(mVcdFile, grp_fu_365_p1, "grp_fu_365_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, ap_CS_fsm_state15, "ap_CS_fsm_state15");
    sc_trace(mVcdFile, grp_fu_369_p0, "grp_fu_369_p0");
    sc_trace(mVcdFile, grp_fu_369_p1, "grp_fu_369_p1");
    sc_trace(mVcdFile, grp_fu_373_p0, "grp_fu_373_p0");
    sc_trace(mVcdFile, grp_fu_373_p1, "grp_fu_373_p1");
    sc_trace(mVcdFile, grp_fu_377_p0, "grp_fu_377_p0");
    sc_trace(mVcdFile, grp_fu_377_p1, "grp_fu_377_p1");
    sc_trace(mVcdFile, tmp_42_fu_540_p3, "tmp_42_fu_540_p3");
    sc_trace(mVcdFile, or_ln22_fu_553_p2, "or_ln22_fu_553_p2");
    sc_trace(mVcdFile, add_ln25_fu_574_p2, "add_ln25_fu_574_p2");
    sc_trace(mVcdFile, tmp_44_fu_580_p3, "tmp_44_fu_580_p3");
    sc_trace(mVcdFile, or_ln25_fu_593_p2, "or_ln25_fu_593_p2");
    sc_trace(mVcdFile, grp_fu_346_opcode, "grp_fu_346_opcode");
    sc_trace(mVcdFile, grp_fu_350_opcode, "grp_fu_350_opcode");
    sc_trace(mVcdFile, grp_fu_354_opcode, "grp_fu_354_opcode");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
    mHdltvinHandle.open("sbr_autocorrelate_c.hdltvin.dat");
    mHdltvoutHandle.open("sbr_autocorrelate_c.hdltvout.dat");
}

sbr_autocorrelate_c::~sbr_autocorrelate_c() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete sbr_autocorrelate_c_faddfsub_32ns_32ns_32_4_full_dsp_1_U1;
    delete sbr_autocorrelate_c_faddfsub_32ns_32ns_32_4_full_dsp_1_U2;
    delete sbr_autocorrelate_c_faddfsub_32ns_32ns_32_4_full_dsp_1_U3;
    delete sbr_autocorrelate_c_fmul_32ns_32ns_32_3_max_dsp_1_U4;
    delete sbr_autocorrelate_c_fmul_32ns_32ns_32_3_max_dsp_1_U5;
    delete sbr_autocorrelate_c_fmul_32ns_32ns_32_3_max_dsp_1_U6;
    delete sbr_autocorrelate_c_fmul_32ns_32ns_32_3_max_dsp_1_U7;
    delete sbr_autocorrelate_c_fmul_32ns_32ns_32_3_max_dsp_1_U8;
    delete sbr_autocorrelate_c_fmul_32ns_32ns_32_3_max_dsp_1_U9;
}

void sbr_autocorrelate_c::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void sbr_autocorrelate_c::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read())) {
        empty_2_reg_266 = reg_476.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        empty_2_reg_266 = reg_402.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read())) {
        empty_reg_256 = x_load_13_reg_735.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        empty_reg_256 = reg_413.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read())) {
        i_0_reg_334 = i_reg_720.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        i_0_reg_334 = ap_const_lv6_1;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read())) {
        imag_sum1_0_reg_276 = reg_516.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        imag_sum1_0_reg_276 = ap_const_lv32_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read())) {
        imag_sum2_0_reg_300 = grp_fu_350_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        imag_sum2_0_reg_300 = reg_451.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read())) {
        real_sum0_0_reg_322 = reg_502.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        real_sum0_0_reg_322 = ap_const_lv32_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read())) {
        real_sum1_0_reg_288 = reg_509.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        real_sum1_0_reg_288 = ap_const_lv32_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read())) {
        real_sum2_0_reg_311 = grp_fu_346_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        real_sum2_0_reg_311 = reg_443.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read())) {
        reg_393 = x_q1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        reg_393 = x_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read())) {
        reg_402 = x_q0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        reg_402 = x_q1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        i_reg_720 = i_fu_568_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()))) {
        reg_413 = x_q1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()))) {
        reg_420 = grp_fu_365_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read()))) {
        reg_426 = grp_fu_369_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()))) {
        reg_432 = grp_fu_373_p2.read();
        reg_438 = grp_fu_377_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state37.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read()))) {
        reg_443 = grp_fu_346_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state37.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read()))) {
        reg_451 = grp_fu_350_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()))) {
        reg_458 = x_q0.read();
        reg_467 = x_q1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read()))) {
        reg_476 = x_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()))) {
        reg_484 = grp_fu_365_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()))) {
        reg_490 = grp_fu_369_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()))) {
        reg_496 = grp_fu_373_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()))) {
        reg_502 = grp_fu_346_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read()))) {
        reg_509 = grp_fu_350_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()))) {
        reg_516 = grp_fu_354_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()))) {
        reg_522 = grp_fu_346_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()))) {
        reg_528 = grp_fu_350_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read())) {
        tmp_13_reg_772 = grp_fu_369_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read())) {
        tmp_15_reg_767 = grp_fu_365_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        tmp_33_reg_742 = grp_fu_383_p2.read();
        tmp_34_reg_747 = grp_fu_388_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        tmp_40_reg_752 = grp_fu_377_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        x_load_13_reg_735 = x_q1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        x_load_2_reg_628 = x_q0.read();
    }
}

void sbr_autocorrelate_c::thread_add_ln25_fu_574_p2() {
    add_ln25_fu_574_p2 = (!i_0_reg_334.read().is_01() || !ap_const_lv6_2.is_01())? sc_lv<6>(): (sc_biguint<6>(i_0_reg_334.read()) + sc_biguint<6>(ap_const_lv6_2));
}

void sbr_autocorrelate_c::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void sbr_autocorrelate_c::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void sbr_autocorrelate_c::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void sbr_autocorrelate_c::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[11];
}

void sbr_autocorrelate_c::thread_ap_CS_fsm_state13() {
    ap_CS_fsm_state13 = ap_CS_fsm.read()[12];
}

void sbr_autocorrelate_c::thread_ap_CS_fsm_state14() {
    ap_CS_fsm_state14 = ap_CS_fsm.read()[13];
}

void sbr_autocorrelate_c::thread_ap_CS_fsm_state15() {
    ap_CS_fsm_state15 = ap_CS_fsm.read()[14];
}

void sbr_autocorrelate_c::thread_ap_CS_fsm_state16() {
    ap_CS_fsm_state16 = ap_CS_fsm.read()[15];
}

void sbr_autocorrelate_c::thread_ap_CS_fsm_state17() {
    ap_CS_fsm_state17 = ap_CS_fsm.read()[16];
}

void sbr_autocorrelate_c::thread_ap_CS_fsm_state18() {
    ap_CS_fsm_state18 = ap_CS_fsm.read()[17];
}

void sbr_autocorrelate_c::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void sbr_autocorrelate_c::thread_ap_CS_fsm_state20() {
    ap_CS_fsm_state20 = ap_CS_fsm.read()[19];
}

void sbr_autocorrelate_c::thread_ap_CS_fsm_state21() {
    ap_CS_fsm_state21 = ap_CS_fsm.read()[20];
}

void sbr_autocorrelate_c::thread_ap_CS_fsm_state22() {
    ap_CS_fsm_state22 = ap_CS_fsm.read()[21];
}

void sbr_autocorrelate_c::thread_ap_CS_fsm_state24() {
    ap_CS_fsm_state24 = ap_CS_fsm.read()[23];
}

void sbr_autocorrelate_c::thread_ap_CS_fsm_state25() {
    ap_CS_fsm_state25 = ap_CS_fsm.read()[24];
}

void sbr_autocorrelate_c::thread_ap_CS_fsm_state26() {
    ap_CS_fsm_state26 = ap_CS_fsm.read()[25];
}

void sbr_autocorrelate_c::thread_ap_CS_fsm_state27() {
    ap_CS_fsm_state27 = ap_CS_fsm.read()[26];
}

void sbr_autocorrelate_c::thread_ap_CS_fsm_state28() {
    ap_CS_fsm_state28 = ap_CS_fsm.read()[27];
}

void sbr_autocorrelate_c::thread_ap_CS_fsm_state29() {
    ap_CS_fsm_state29 = ap_CS_fsm.read()[28];
}

void sbr_autocorrelate_c::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void sbr_autocorrelate_c::thread_ap_CS_fsm_state30() {
    ap_CS_fsm_state30 = ap_CS_fsm.read()[29];
}

void sbr_autocorrelate_c::thread_ap_CS_fsm_state31() {
    ap_CS_fsm_state31 = ap_CS_fsm.read()[30];
}

void sbr_autocorrelate_c::thread_ap_CS_fsm_state32() {
    ap_CS_fsm_state32 = ap_CS_fsm.read()[31];
}

void sbr_autocorrelate_c::thread_ap_CS_fsm_state33() {
    ap_CS_fsm_state33 = ap_CS_fsm.read()[32];
}

void sbr_autocorrelate_c::thread_ap_CS_fsm_state34() {
    ap_CS_fsm_state34 = ap_CS_fsm.read()[33];
}

void sbr_autocorrelate_c::thread_ap_CS_fsm_state35() {
    ap_CS_fsm_state35 = ap_CS_fsm.read()[34];
}

void sbr_autocorrelate_c::thread_ap_CS_fsm_state36() {
    ap_CS_fsm_state36 = ap_CS_fsm.read()[35];
}

void sbr_autocorrelate_c::thread_ap_CS_fsm_state37() {
    ap_CS_fsm_state37 = ap_CS_fsm.read()[36];
}

void sbr_autocorrelate_c::thread_ap_CS_fsm_state38() {
    ap_CS_fsm_state38 = ap_CS_fsm.read()[37];
}

void sbr_autocorrelate_c::thread_ap_CS_fsm_state39() {
    ap_CS_fsm_state39 = ap_CS_fsm.read()[38];
}

void sbr_autocorrelate_c::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void sbr_autocorrelate_c::thread_ap_CS_fsm_state40() {
    ap_CS_fsm_state40 = ap_CS_fsm.read()[39];
}

void sbr_autocorrelate_c::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void sbr_autocorrelate_c::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void sbr_autocorrelate_c::thread_ap_done() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state40.read())) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void sbr_autocorrelate_c::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void sbr_autocorrelate_c::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state40.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void sbr_autocorrelate_c::thread_grp_fu_346_opcode() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read()))) {
        grp_fu_346_opcode = ap_const_lv2_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read()))) {
        grp_fu_346_opcode = ap_const_lv2_0;
    } else {
        grp_fu_346_opcode = "XX";
    }
}

void sbr_autocorrelate_c::thread_grp_fu_346_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read())) {
        grp_fu_346_p0 = reg_528.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read())) {
        grp_fu_346_p0 = reg_522.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read())) {
        grp_fu_346_p0 = reg_502.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read())) {
        grp_fu_346_p0 = reg_443.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read())) {
        grp_fu_346_p0 = imag_sum1_0_reg_276.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())) {
        grp_fu_346_p0 = real_sum2_0_reg_311.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()))) {
        grp_fu_346_p0 = real_sum0_0_reg_322.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        grp_fu_346_p0 = reg_484.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()))) {
        grp_fu_346_p0 = reg_420.read();
    } else {
        grp_fu_346_p0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void sbr_autocorrelate_c::thread_grp_fu_346_p1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read())) {
        grp_fu_346_p1 = reg_496.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read())) {
        grp_fu_346_p1 = reg_432.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read())) {
        grp_fu_346_p1 = tmp_15_reg_767.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read()))) {
        grp_fu_346_p1 = reg_484.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read()))) {
        grp_fu_346_p1 = reg_420.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())) {
        grp_fu_346_p1 = reg_522.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read())) {
        grp_fu_346_p1 = reg_502.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        grp_fu_346_p1 = reg_490.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()))) {
        grp_fu_346_p1 = reg_426.read();
    } else {
        grp_fu_346_p1 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void sbr_autocorrelate_c::thread_grp_fu_350_opcode() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()))) {
        grp_fu_350_opcode = ap_const_lv2_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read()))) {
        grp_fu_350_opcode = ap_const_lv2_0;
    } else {
        grp_fu_350_opcode = "XX";
    }
}

void sbr_autocorrelate_c::thread_grp_fu_350_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read())) {
        grp_fu_350_p0 = reg_509.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read())) {
        grp_fu_350_p0 = reg_451.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read())) {
        grp_fu_350_p0 = imag_sum1_0_reg_276.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())) {
        grp_fu_350_p0 = imag_sum2_0_reg_300.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()))) {
        grp_fu_350_p0 = real_sum1_0_reg_288.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        grp_fu_350_p0 = reg_496.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()))) {
        grp_fu_350_p0 = reg_432.read();
    } else {
        grp_fu_350_p0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void sbr_autocorrelate_c::thread_grp_fu_350_p1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read())) {
        grp_fu_350_p1 = tmp_13_reg_772.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read())) {
        grp_fu_350_p1 = reg_490.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read()))) {
        grp_fu_350_p1 = reg_426.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())) {
        grp_fu_350_p1 = reg_528.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read())) {
        grp_fu_350_p1 = reg_509.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        grp_fu_350_p1 = tmp_40_reg_752.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read()))) {
        grp_fu_350_p1 = reg_438.read();
    } else {
        grp_fu_350_p1 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void sbr_autocorrelate_c::thread_grp_fu_354_opcode() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        grp_fu_354_opcode = ap_const_lv2_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read())) {
        grp_fu_354_opcode = ap_const_lv2_0;
    } else {
        grp_fu_354_opcode = "XX";
    }
}

void sbr_autocorrelate_c::thread_grp_fu_354_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read())) {
        grp_fu_354_p0 = imag_sum1_0_reg_276.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        grp_fu_354_p0 = tmp_33_reg_742.read();
    } else {
        grp_fu_354_p0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void sbr_autocorrelate_c::thread_grp_fu_354_p1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read())) {
        grp_fu_354_p1 = reg_516.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        grp_fu_354_p1 = tmp_34_reg_747.read();
    } else {
        grp_fu_354_p1 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void sbr_autocorrelate_c::thread_grp_fu_365_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read())) {
        grp_fu_365_p0 = x_load_2_reg_628.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read())) {
        grp_fu_365_p0 = reg_402.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()))) {
        grp_fu_365_p0 = reg_458.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()))) {
        grp_fu_365_p0 = reg_393.read();
    } else {
        grp_fu_365_p0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void sbr_autocorrelate_c::thread_grp_fu_365_p1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read())) {
        grp_fu_365_p1 = x_load_2_reg_628.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        grp_fu_365_p1 = reg_476.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read()))) {
        grp_fu_365_p1 = reg_458.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()))) {
        grp_fu_365_p1 = reg_393.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()))) {
        grp_fu_365_p1 = reg_402.read();
    } else {
        grp_fu_365_p1 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void sbr_autocorrelate_c::thread_grp_fu_369_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read())) {
        grp_fu_369_p0 = reg_402.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()))) {
        grp_fu_369_p0 = reg_393.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()))) {
        grp_fu_369_p0 = reg_467.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()))) {
        grp_fu_369_p0 = x_load_2_reg_628.read();
    } else {
        grp_fu_369_p0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void sbr_autocorrelate_c::thread_grp_fu_369_p1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read())) {
        grp_fu_369_p1 = reg_476.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read())) {
        grp_fu_369_p1 = reg_458.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        grp_fu_369_p1 = x_load_13_reg_735.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read()))) {
        grp_fu_369_p1 = reg_467.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()))) {
        grp_fu_369_p1 = reg_413.read();
    } else {
        grp_fu_369_p1 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void sbr_autocorrelate_c::thread_grp_fu_373_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read())) {
        grp_fu_373_p0 = x_load_2_reg_628.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()))) {
        grp_fu_373_p0 = reg_458.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()))) {
        grp_fu_373_p0 = reg_393.read();
    } else {
        grp_fu_373_p0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void sbr_autocorrelate_c::thread_grp_fu_373_p1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read())) {
        grp_fu_373_p1 = reg_467.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        grp_fu_373_p1 = x_load_13_reg_735.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        grp_fu_373_p1 = empty_2_reg_266.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()))) {
        grp_fu_373_p1 = reg_413.read();
    } else {
        grp_fu_373_p1 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void sbr_autocorrelate_c::thread_grp_fu_377_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read())) {
        grp_fu_377_p0 = reg_402.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()))) {
        grp_fu_377_p0 = reg_467.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        grp_fu_377_p0 = x_load_2_reg_628.read();
    } else {
        grp_fu_377_p0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void sbr_autocorrelate_c::thread_grp_fu_377_p1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()))) {
        grp_fu_377_p1 = reg_476.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        grp_fu_377_p1 = empty_reg_256.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        grp_fu_377_p1 = reg_402.read();
    } else {
        grp_fu_377_p1 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void sbr_autocorrelate_c::thread_i_fu_568_p2() {
    i_fu_568_p2 = (!i_0_reg_334.read().is_01() || !ap_const_lv6_1.is_01())? sc_lv<6>(): (sc_biguint<6>(i_0_reg_334.read()) + sc_biguint<6>(ap_const_lv6_1));
}

void sbr_autocorrelate_c::thread_icmp_ln21_fu_534_p2() {
    icmp_ln21_fu_534_p2 = (!i_0_reg_334.read().is_01() || !ap_const_lv6_26.is_01())? sc_lv<1>(): sc_lv<1>(i_0_reg_334.read() == ap_const_lv6_26);
}

void sbr_autocorrelate_c::thread_or_ln22_fu_553_p2() {
    or_ln22_fu_553_p2 = (tmp_42_fu_540_p3.read() | ap_const_lv7_1);
}

void sbr_autocorrelate_c::thread_or_ln25_fu_593_p2() {
    or_ln25_fu_593_p2 = (tmp_44_fu_580_p3.read() | ap_const_lv7_1);
}

void sbr_autocorrelate_c::thread_phi_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read())) {
        phi_address0 =  (sc_lv<4>) (ap_const_lv64_0);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read())) {
        phi_address0 =  (sc_lv<4>) (ap_const_lv64_6);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read())) {
        phi_address0 =  (sc_lv<4>) (ap_const_lv64_A);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        phi_address0 =  (sc_lv<4>) (ap_const_lv64_2);
    } else {
        phi_address0 =  (sc_lv<4>) ("XXXX");
    }
}

void sbr_autocorrelate_c::thread_phi_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state40.read())) {
        phi_address1 =  (sc_lv<4>) (ap_const_lv64_1);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read())) {
        phi_address1 =  (sc_lv<4>) (ap_const_lv64_7);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read())) {
        phi_address1 =  (sc_lv<4>) (ap_const_lv64_4);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        phi_address1 =  (sc_lv<4>) (ap_const_lv64_3);
    } else {
        phi_address1 =  (sc_lv<4>) ("XXXX");
    }
}

void sbr_autocorrelate_c::thread_phi_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read()))) {
        phi_ce0 = ap_const_logic_1;
    } else {
        phi_ce0 = ap_const_logic_0;
    }
}

void sbr_autocorrelate_c::thread_phi_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state40.read()))) {
        phi_ce1 = ap_const_logic_1;
    } else {
        phi_ce1 = ap_const_logic_0;
    }
}

void sbr_autocorrelate_c::thread_phi_d0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read()))) {
        phi_d0 = reg_451.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read())) {
        phi_d0 = reg_443.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        phi_d0 = real_sum2_0_reg_311.read();
    } else {
        phi_d0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void sbr_autocorrelate_c::thread_phi_d1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state40.read()))) {
        phi_d1 = reg_443.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        phi_d1 = imag_sum2_0_reg_300.read();
    } else {
        phi_d1 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void sbr_autocorrelate_c::thread_phi_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && 
          esl_seteq<1,1,1>(icmp_ln21_fu_534_p2.read(), ap_const_lv1_1)) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read()))) {
        phi_we0 = ap_const_logic_1;
    } else {
        phi_we0 = ap_const_logic_0;
    }
}

void sbr_autocorrelate_c::thread_phi_we1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && 
          esl_seteq<1,1,1>(icmp_ln21_fu_534_p2.read(), ap_const_lv1_1)) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state40.read()))) {
        phi_we1 = ap_const_logic_1;
    } else {
        phi_we1 = ap_const_logic_0;
    }
}

void sbr_autocorrelate_c::thread_tmp_42_fu_540_p3() {
    tmp_42_fu_540_p3 = esl_concat<6,1>(i_0_reg_334.read(), ap_const_lv1_0);
}

void sbr_autocorrelate_c::thread_tmp_43_fu_559_p3() {
    tmp_43_fu_559_p3 = esl_concat<57,7>(ap_const_lv57_0, or_ln22_fu_553_p2.read());
}

void sbr_autocorrelate_c::thread_tmp_44_fu_580_p3() {
    tmp_44_fu_580_p3 = esl_concat<6,1>(add_ln25_fu_574_p2.read(), ap_const_lv1_0);
}

void sbr_autocorrelate_c::thread_tmp_45_fu_599_p3() {
    tmp_45_fu_599_p3 = esl_concat<57,7>(ap_const_lv57_0, or_ln25_fu_593_p2.read());
}

void sbr_autocorrelate_c::thread_x_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read())) {
        x_address0 =  (sc_lv<7>) (ap_const_lv64_4F);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read())) {
        x_address0 =  (sc_lv<7>) (ap_const_lv64_3);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        x_address0 =  (sc_lv<7>) (zext_ln25_fu_588_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && 
                esl_seteq<1,1,1>(icmp_ln21_fu_534_p2.read(), ap_const_lv1_1))) {
        x_address0 =  (sc_lv<7>) (ap_const_lv64_4C);
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && 
                esl_seteq<1,1,1>(icmp_ln21_fu_534_p2.read(), ap_const_lv1_0))) {
        x_address0 =  (sc_lv<7>) (zext_ln22_fu_548_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        x_address0 =  (sc_lv<7>) (ap_const_lv64_1);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) {
        x_address0 =  (sc_lv<7>) (ap_const_lv64_0);
    } else {
        x_address0 =  (sc_lv<7>) ("XXXXXXX");
    }
}

void sbr_autocorrelate_c::thread_x_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read())) {
        x_address1 =  (sc_lv<7>) (ap_const_lv64_4D);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read())) {
        x_address1 =  (sc_lv<7>) (ap_const_lv64_4E);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        x_address1 =  (sc_lv<7>) (tmp_45_fu_599_p3.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && 
                esl_seteq<1,1,1>(icmp_ln21_fu_534_p2.read(), ap_const_lv1_1))) {
        x_address1 =  (sc_lv<7>) (ap_const_lv64_2);
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && 
                esl_seteq<1,1,1>(icmp_ln21_fu_534_p2.read(), ap_const_lv1_0))) {
        x_address1 =  (sc_lv<7>) (tmp_43_fu_559_p3.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        x_address1 =  (sc_lv<7>) (ap_const_lv64_5);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) {
        x_address1 =  (sc_lv<7>) (ap_const_lv64_4);
    } else {
        x_address1 =  (sc_lv<7>) ("XXXXXXX");
    }
}

void sbr_autocorrelate_c::thread_x_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && 
          esl_seteq<1,1,1>(icmp_ln21_fu_534_p2.read(), ap_const_lv1_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && 
          esl_seteq<1,1,1>(icmp_ln21_fu_534_p2.read(), ap_const_lv1_1)))) {
        x_ce0 = ap_const_logic_1;
    } else {
        x_ce0 = ap_const_logic_0;
    }
}

void sbr_autocorrelate_c::thread_x_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && 
          esl_seteq<1,1,1>(icmp_ln21_fu_534_p2.read(), ap_const_lv1_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && 
          esl_seteq<1,1,1>(icmp_ln21_fu_534_p2.read(), ap_const_lv1_1)))) {
        x_ce1 = ap_const_logic_1;
    } else {
        x_ce1 = ap_const_logic_0;
    }
}

void sbr_autocorrelate_c::thread_zext_ln22_fu_548_p1() {
    zext_ln22_fu_548_p1 = esl_zext<64,7>(tmp_42_fu_540_p3.read());
}

void sbr_autocorrelate_c::thread_zext_ln25_fu_588_p1() {
    zext_ln25_fu_588_p1 = esl_zext<64,7>(tmp_44_fu_580_p3.read());
}

void sbr_autocorrelate_c::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            ap_NS_fsm = ap_ST_fsm_state3;
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state12;
            break;
        case 2048 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && esl_seteq<1,1,1>(icmp_ln21_fu_534_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state26;
            } else {
                ap_NS_fsm = ap_ST_fsm_state13;
            }
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_fsm_state14;
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_fsm_state15;
            break;
        case 16384 : 
            ap_NS_fsm = ap_ST_fsm_state16;
            break;
        case 32768 : 
            ap_NS_fsm = ap_ST_fsm_state17;
            break;
        case 65536 : 
            ap_NS_fsm = ap_ST_fsm_state18;
            break;
        case 131072 : 
            ap_NS_fsm = ap_ST_fsm_state19;
            break;
        case 262144 : 
            ap_NS_fsm = ap_ST_fsm_state20;
            break;
        case 524288 : 
            ap_NS_fsm = ap_ST_fsm_state21;
            break;
        case 1048576 : 
            ap_NS_fsm = ap_ST_fsm_state22;
            break;
        case 2097152 : 
            ap_NS_fsm = ap_ST_fsm_state23;
            break;
        case 4194304 : 
            ap_NS_fsm = ap_ST_fsm_state24;
            break;
        case 8388608 : 
            ap_NS_fsm = ap_ST_fsm_state25;
            break;
        case 16777216 : 
            ap_NS_fsm = ap_ST_fsm_state12;
            break;
        case 33554432 : 
            ap_NS_fsm = ap_ST_fsm_state27;
            break;
        case 67108864 : 
            ap_NS_fsm = ap_ST_fsm_state28;
            break;
        case 134217728 : 
            ap_NS_fsm = ap_ST_fsm_state29;
            break;
        case 268435456 : 
            ap_NS_fsm = ap_ST_fsm_state30;
            break;
        case 536870912 : 
            ap_NS_fsm = ap_ST_fsm_state31;
            break;
        case 1073741824 : 
            ap_NS_fsm = ap_ST_fsm_state32;
            break;
        case 2147483648 : 
            ap_NS_fsm = ap_ST_fsm_state33;
            break;
        case 4294967296 : 
            ap_NS_fsm = ap_ST_fsm_state34;
            break;
        case 8589934592 : 
            ap_NS_fsm = ap_ST_fsm_state35;
            break;
        case 17179869184 : 
            ap_NS_fsm = ap_ST_fsm_state36;
            break;
        case 34359738368 : 
            ap_NS_fsm = ap_ST_fsm_state37;
            break;
        case 68719476736 : 
            ap_NS_fsm = ap_ST_fsm_state38;
            break;
        case 137438953472 : 
            ap_NS_fsm = ap_ST_fsm_state39;
            break;
        case 274877906944 : 
            ap_NS_fsm = ap_ST_fsm_state40;
            break;
        case 549755813888 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<40>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
            break;
    }
}

void sbr_autocorrelate_c::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"x_address0\" :  \"" << x_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"x_ce0\" :  \"" << x_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"x_q0\" :  \"" << x_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"x_address1\" :  \"" << x_address1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"x_ce1\" :  \"" << x_ce1.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"x_q1\" :  \"" << x_q1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"phi_address0\" :  \"" << phi_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"phi_ce0\" :  \"" << phi_ce0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"phi_we0\" :  \"" << phi_we0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"phi_d0\" :  \"" << phi_d0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"phi_address1\" :  \"" << phi_address1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"phi_ce1\" :  \"" << phi_ce1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"phi_we1\" :  \"" << phi_we1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"phi_d1\" :  \"" << phi_d1.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

