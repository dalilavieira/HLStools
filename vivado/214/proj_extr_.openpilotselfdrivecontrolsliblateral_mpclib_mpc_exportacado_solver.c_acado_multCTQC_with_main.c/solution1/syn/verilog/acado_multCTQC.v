// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="acado_multCTQC,hls_ip_2019_1,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7k160t-fbg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.216000,HLS_SYN_LAT=16,HLS_SYN_TPT=none,HLS_SYN_MEM=2,HLS_SYN_DSP=186,HLS_SYN_FF=3761,HLS_SYN_LUT=3791,HLS_VERSION=2019_1}" *)

module acado_multCTQC (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        Gx1_address0,
        Gx1_ce0,
        Gx1_q0,
        Gx1_address1,
        Gx1_ce1,
        Gx1_q1,
        Gx2_address0,
        Gx2_ce0,
        Gx2_q0,
        Gx2_address1,
        Gx2_ce1,
        Gx2_q1
);

parameter    ap_ST_fsm_state1 = 17'd1;
parameter    ap_ST_fsm_state2 = 17'd2;
parameter    ap_ST_fsm_state3 = 17'd4;
parameter    ap_ST_fsm_state4 = 17'd8;
parameter    ap_ST_fsm_state5 = 17'd16;
parameter    ap_ST_fsm_state6 = 17'd32;
parameter    ap_ST_fsm_state7 = 17'd64;
parameter    ap_ST_fsm_state8 = 17'd128;
parameter    ap_ST_fsm_state9 = 17'd256;
parameter    ap_ST_fsm_state10 = 17'd512;
parameter    ap_ST_fsm_state11 = 17'd1024;
parameter    ap_ST_fsm_state12 = 17'd2048;
parameter    ap_ST_fsm_state13 = 17'd4096;
parameter    ap_ST_fsm_state14 = 17'd8192;
parameter    ap_ST_fsm_state15 = 17'd16384;
parameter    ap_ST_fsm_state16 = 17'd32768;
parameter    ap_ST_fsm_state17 = 17'd65536;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [9:0] Gx1_address0;
output   Gx1_ce0;
input  [31:0] Gx1_q0;
output  [9:0] Gx1_address1;
output   Gx1_ce1;
input  [31:0] Gx1_q1;
output  [9:0] Gx2_address0;
output   Gx2_ce0;
input  [31:0] Gx2_q0;
output  [9:0] Gx2_address1;
output   Gx2_ce1;
input  [31:0] Gx2_q1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[9:0] Gx1_address0;
reg Gx1_ce0;
reg[9:0] Gx1_address1;
reg Gx1_ce1;
reg[9:0] Gx2_address0;
reg Gx2_ce0;
reg[9:0] Gx2_address1;
reg Gx2_ce1;

(* fsm_encoding = "none" *) reg   [16:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [9:0] acadoWorkspace_H_address0;
reg    acadoWorkspace_H_ce0;
reg    acadoWorkspace_H_we0;
reg   [31:0] acadoWorkspace_H_d0;
wire   [31:0] acadoWorkspace_H_q0;
reg   [9:0] acadoWorkspace_H_address1;
reg    acadoWorkspace_H_ce1;
reg    acadoWorkspace_H_we1;
reg   [31:0] acadoWorkspace_H_d1;
wire   [31:0] acadoWorkspace_H_q1;
reg  signed [31:0] reg_407;
wire    ap_CS_fsm_state2;
wire    ap_CS_fsm_state9;
reg  signed [31:0] reg_411;
reg  signed [31:0] reg_415;
reg  signed [31:0] reg_419;
reg   [31:0] reg_423;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state10;
reg   [31:0] reg_427;
wire   [31:0] grp_fu_431_p2;
reg   [31:0] reg_443;
wire   [31:0] grp_fu_437_p2;
reg   [31:0] reg_447;
reg  signed [31:0] Gx1_load_2_reg_1070;
reg  signed [31:0] Gx2_load_2_reg_1078;
reg  signed [31:0] Gx1_load_3_reg_1086;
reg  signed [31:0] Gx2_load_3_reg_1094;
reg  signed [31:0] Gx2_load_4_reg_1122;
wire    ap_CS_fsm_state4;
reg  signed [31:0] Gx2_load_5_reg_1130;
reg   [31:0] acadoWorkspace_H_loa_2_reg_1148;
reg   [31:0] acadoWorkspace_H_loa_3_reg_1153;
reg  signed [31:0] Gx1_load_4_reg_1158;
reg  signed [31:0] Gx1_load_5_reg_1166;
reg  signed [31:0] Gx2_load_6_reg_1184;
wire    ap_CS_fsm_state5;
reg  signed [31:0] Gx2_load_7_reg_1192;
reg  signed [31:0] Gx1_load_6_reg_1210;
reg  signed [31:0] Gx1_load_7_reg_1218;
reg   [31:0] acadoWorkspace_H_loa_4_reg_1226;
reg   [31:0] acadoWorkspace_H_loa_5_reg_1231;
reg  signed [31:0] Gx2_load_8_reg_1246;
wire    ap_CS_fsm_state6;
reg  signed [31:0] Gx2_load_9_reg_1254;
reg   [31:0] acadoWorkspace_H_loa_6_reg_1272;
reg   [31:0] acadoWorkspace_H_loa_7_reg_1277;
reg  signed [31:0] Gx1_load_8_reg_1282;
reg  signed [31:0] Gx1_load_9_reg_1290;
reg  signed [31:0] Gx2_load_10_reg_1308;
wire    ap_CS_fsm_state7;
reg  signed [31:0] Gx2_load_11_reg_1316;
reg  signed [31:0] Gx1_load_10_reg_1334;
reg  signed [31:0] Gx1_load_11_reg_1342;
reg   [31:0] acadoWorkspace_H_loa_8_reg_1350;
reg   [31:0] acadoWorkspace_H_loa_9_reg_1355;
reg  signed [31:0] Gx2_load_12_reg_1370;
wire    ap_CS_fsm_state8;
reg  signed [31:0] Gx2_load_13_reg_1378;
reg   [31:0] acadoWorkspace_H_loa_10_reg_1396;
reg   [31:0] acadoWorkspace_H_loa_11_reg_1401;
reg  signed [31:0] Gx1_load_12_reg_1406;
reg  signed [31:0] Gx1_load_13_reg_1414;
wire   [31:0] mul_ln21_2_fu_451_p2;
reg   [31:0] mul_ln21_2_reg_1432;
wire   [31:0] mul_ln21_3_fu_455_p2;
reg   [31:0] mul_ln21_3_reg_1437;
wire   [31:0] mul_ln22_fu_459_p2;
reg   [31:0] mul_ln22_reg_1442;
wire   [31:0] mul_ln22_1_fu_464_p2;
reg   [31:0] mul_ln22_1_reg_1447;
wire   [31:0] mul_ln22_2_fu_469_p2;
reg   [31:0] mul_ln22_2_reg_1452;
wire   [31:0] mul_ln22_3_fu_473_p2;
reg   [31:0] mul_ln22_3_reg_1457;
wire   [31:0] mul_ln23_fu_477_p2;
reg   [31:0] mul_ln23_reg_1462;
wire   [31:0] mul_ln23_1_fu_482_p2;
reg   [31:0] mul_ln23_1_reg_1467;
wire   [31:0] mul_ln23_2_fu_487_p2;
reg   [31:0] mul_ln23_2_reg_1472;
wire   [31:0] mul_ln23_3_fu_491_p2;
reg   [31:0] mul_ln23_3_reg_1477;
wire   [31:0] mul_ln24_fu_495_p2;
reg   [31:0] mul_ln24_reg_1482;
wire   [31:0] mul_ln24_1_fu_500_p2;
reg   [31:0] mul_ln24_1_reg_1487;
wire   [31:0] mul_ln25_fu_505_p2;
reg   [31:0] mul_ln25_reg_1492;
wire   [31:0] mul_ln25_1_fu_510_p2;
reg   [31:0] mul_ln25_1_reg_1497;
wire   [31:0] mul_ln25_2_fu_515_p2;
reg   [31:0] mul_ln25_2_reg_1502;
wire   [31:0] mul_ln25_3_fu_519_p2;
reg   [31:0] mul_ln25_3_reg_1507;
wire   [31:0] mul_ln26_fu_523_p2;
reg   [31:0] mul_ln26_reg_1512;
wire   [31:0] mul_ln26_1_fu_527_p2;
reg   [31:0] mul_ln26_1_reg_1517;
wire   [31:0] mul_ln26_2_fu_531_p2;
reg   [31:0] mul_ln26_2_reg_1522;
wire   [31:0] mul_ln26_3_fu_535_p2;
reg   [31:0] mul_ln26_3_reg_1527;
wire   [31:0] mul_ln27_fu_539_p2;
reg   [31:0] mul_ln27_reg_1532;
wire   [31:0] mul_ln27_1_fu_543_p2;
reg   [31:0] mul_ln27_1_reg_1537;
wire   [31:0] mul_ln27_2_fu_547_p2;
reg   [31:0] mul_ln27_2_reg_1542;
wire   [31:0] mul_ln27_3_fu_551_p2;
reg   [31:0] mul_ln27_3_reg_1547;
wire   [31:0] mul_ln28_fu_555_p2;
reg   [31:0] mul_ln28_reg_1552;
wire   [31:0] mul_ln28_1_fu_559_p2;
reg   [31:0] mul_ln28_1_reg_1557;
wire   [31:0] mul_ln29_fu_563_p2;
reg   [31:0] mul_ln29_reg_1562;
wire   [31:0] mul_ln29_1_fu_568_p2;
reg   [31:0] mul_ln29_1_reg_1567;
wire   [31:0] mul_ln29_2_fu_573_p2;
reg   [31:0] mul_ln29_2_reg_1572;
wire   [31:0] mul_ln29_3_fu_577_p2;
reg   [31:0] mul_ln29_3_reg_1577;
wire   [31:0] mul_ln30_fu_581_p2;
reg   [31:0] mul_ln30_reg_1582;
wire   [31:0] mul_ln30_1_fu_585_p2;
reg   [31:0] mul_ln30_1_reg_1587;
wire   [31:0] mul_ln30_2_fu_589_p2;
reg   [31:0] mul_ln30_2_reg_1592;
wire   [31:0] mul_ln30_3_fu_593_p2;
reg   [31:0] mul_ln30_3_reg_1597;
wire   [31:0] mul_ln31_fu_597_p2;
reg   [31:0] mul_ln31_reg_1602;
wire   [31:0] mul_ln31_1_fu_601_p2;
reg   [31:0] mul_ln31_1_reg_1607;
wire   [31:0] mul_ln31_2_fu_605_p2;
reg   [31:0] mul_ln31_2_reg_1612;
wire   [31:0] mul_ln31_3_fu_609_p2;
reg   [31:0] mul_ln31_3_reg_1617;
wire   [31:0] mul_ln32_fu_613_p2;
reg   [31:0] mul_ln32_reg_1622;
wire   [31:0] mul_ln32_1_fu_617_p2;
reg   [31:0] mul_ln32_1_reg_1627;
wire   [31:0] mul_ln33_fu_621_p2;
reg   [31:0] mul_ln33_reg_1632;
wire   [31:0] mul_ln33_1_fu_626_p2;
reg   [31:0] mul_ln33_1_reg_1637;
reg   [31:0] acadoWorkspace_H_loa_12_reg_1642;
wire   [31:0] mul_ln34_fu_631_p2;
reg   [31:0] mul_ln34_reg_1647;
wire   [31:0] mul_ln34_1_fu_635_p2;
reg   [31:0] mul_ln34_1_reg_1652;
reg   [31:0] acadoWorkspace_H_loa_13_reg_1657;
wire   [31:0] mul_ln35_fu_639_p2;
reg   [31:0] mul_ln35_reg_1662;
wire   [31:0] mul_ln35_1_fu_643_p2;
reg   [31:0] mul_ln35_1_reg_1667;
wire   [31:0] mul_ln36_fu_647_p2;
reg   [31:0] mul_ln36_reg_1672;
wire   [31:0] mul_ln36_1_fu_651_p2;
reg   [31:0] mul_ln36_1_reg_1677;
wire   [31:0] add_ln23_3_fu_712_p2;
reg   [31:0] add_ln23_3_reg_1682;
wire   [31:0] mul_ln24_2_fu_718_p2;
reg   [31:0] mul_ln24_2_reg_1687;
wire   [31:0] mul_ln24_3_fu_723_p2;
reg   [31:0] mul_ln24_3_reg_1692;
wire   [31:0] add_ln25_3_fu_741_p2;
reg   [31:0] add_ln25_3_reg_1697;
wire   [31:0] add_ln26_3_fu_760_p2;
reg   [31:0] add_ln26_3_reg_1702;
wire   [31:0] add_ln27_3_fu_779_p2;
reg   [31:0] add_ln27_3_reg_1707;
wire   [31:0] mul_ln28_2_fu_785_p2;
reg   [31:0] mul_ln28_2_reg_1712;
wire   [31:0] mul_ln28_3_fu_790_p2;
reg   [31:0] mul_ln28_3_reg_1717;
wire   [31:0] add_ln29_3_fu_808_p2;
reg   [31:0] add_ln29_3_reg_1722;
wire   [31:0] add_ln30_3_fu_827_p2;
reg   [31:0] add_ln30_3_reg_1727;
wire   [31:0] add_ln31_3_fu_846_p2;
reg   [31:0] add_ln31_3_reg_1732;
wire   [31:0] mul_ln32_2_fu_852_p2;
reg   [31:0] mul_ln32_2_reg_1737;
wire   [31:0] mul_ln32_3_fu_857_p2;
reg   [31:0] mul_ln32_3_reg_1742;
wire   [31:0] mul_ln33_2_fu_862_p2;
reg   [31:0] mul_ln33_2_reg_1747;
wire   [31:0] mul_ln33_3_fu_867_p2;
reg   [31:0] mul_ln33_3_reg_1752;
wire   [31:0] mul_ln34_2_fu_872_p2;
reg   [31:0] mul_ln34_2_reg_1757;
wire   [31:0] mul_ln34_3_fu_877_p2;
reg   [31:0] mul_ln34_3_reg_1762;
wire   [31:0] mul_ln35_2_fu_882_p2;
reg   [31:0] mul_ln35_2_reg_1767;
wire   [31:0] mul_ln35_3_fu_887_p2;
reg   [31:0] mul_ln35_3_reg_1772;
wire   [31:0] add_ln28_3_fu_925_p2;
reg   [31:0] add_ln28_3_reg_1777;
wire    ap_CS_fsm_state11;
wire   [31:0] add_ln32_3_fu_944_p2;
reg   [31:0] add_ln32_3_reg_1782;
wire   [31:0] add_ln33_3_fu_963_p2;
reg   [31:0] add_ln33_3_reg_1787;
wire   [31:0] add_ln34_3_fu_982_p2;
reg   [31:0] add_ln34_3_reg_1792;
wire   [31:0] add_ln35_3_fu_1002_p2;
reg   [31:0] add_ln35_3_reg_1797;
wire   [31:0] add_ln36_3_fu_1024_p2;
reg   [31:0] add_ln36_3_reg_1802;
wire   [31:0] add_ln21_3_fu_671_p2;
wire   [31:0] add_ln22_3_fu_692_p2;
wire   [31:0] add_ln24_3_fu_905_p2;
wire    ap_CS_fsm_state12;
wire    ap_CS_fsm_state13;
wire    ap_CS_fsm_state14;
wire    ap_CS_fsm_state15;
wire    ap_CS_fsm_state16;
wire    ap_CS_fsm_state17;
wire   [31:0] add_ln21_1_fu_661_p2;
wire   [31:0] add_ln21_2_fu_665_p2;
wire   [31:0] add_ln21_fu_655_p2;
wire   [31:0] add_ln22_1_fu_683_p2;
wire   [31:0] add_ln22_2_fu_687_p2;
wire   [31:0] add_ln22_fu_678_p2;
wire   [31:0] add_ln23_1_fu_703_p2;
wire   [31:0] add_ln23_2_fu_707_p2;
wire   [31:0] add_ln23_fu_699_p2;
wire   [31:0] add_ln25_1_fu_732_p2;
wire   [31:0] add_ln25_2_fu_736_p2;
wire   [31:0] add_ln25_fu_728_p2;
wire   [31:0] add_ln26_1_fu_751_p2;
wire   [31:0] add_ln26_2_fu_755_p2;
wire   [31:0] add_ln26_fu_747_p2;
wire   [31:0] add_ln27_1_fu_770_p2;
wire   [31:0] add_ln27_2_fu_774_p2;
wire   [31:0] add_ln27_fu_766_p2;
wire   [31:0] add_ln29_1_fu_799_p2;
wire   [31:0] add_ln29_2_fu_803_p2;
wire   [31:0] add_ln29_fu_795_p2;
wire   [31:0] add_ln30_1_fu_818_p2;
wire   [31:0] add_ln30_2_fu_822_p2;
wire   [31:0] add_ln30_fu_814_p2;
wire   [31:0] add_ln31_1_fu_837_p2;
wire   [31:0] add_ln31_2_fu_841_p2;
wire   [31:0] add_ln31_fu_833_p2;
wire   [31:0] add_ln24_1_fu_896_p2;
wire   [31:0] add_ln24_2_fu_900_p2;
wire   [31:0] add_ln24_fu_892_p2;
wire   [31:0] add_ln28_1_fu_916_p2;
wire   [31:0] add_ln28_2_fu_920_p2;
wire   [31:0] add_ln28_fu_912_p2;
wire   [31:0] add_ln32_1_fu_935_p2;
wire   [31:0] add_ln32_2_fu_939_p2;
wire   [31:0] add_ln32_fu_931_p2;
wire   [31:0] add_ln33_1_fu_954_p2;
wire   [31:0] add_ln33_2_fu_958_p2;
wire   [31:0] add_ln33_fu_950_p2;
wire   [31:0] add_ln34_1_fu_973_p2;
wire   [31:0] add_ln34_2_fu_977_p2;
wire   [31:0] add_ln34_fu_969_p2;
wire   [31:0] add_ln35_1_fu_993_p2;
wire   [31:0] add_ln35_2_fu_997_p2;
wire   [31:0] add_ln35_fu_988_p2;
wire   [31:0] add_ln36_1_fu_1013_p2;
wire   [31:0] add_ln36_2_fu_1019_p2;
wire   [31:0] add_ln36_fu_1008_p2;
reg   [16:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 17'd1;
end

acado_multCTQC_acadoWorkspace_H #(
    .DataWidth( 32 ),
    .AddressRange( 1000 ),
    .AddressWidth( 10 ))
acadoWorkspace_H_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(acadoWorkspace_H_address0),
    .ce0(acadoWorkspace_H_ce0),
    .we0(acadoWorkspace_H_we0),
    .d0(acadoWorkspace_H_d0),
    .q0(acadoWorkspace_H_q0),
    .address1(acadoWorkspace_H_address1),
    .ce1(acadoWorkspace_H_ce1),
    .we1(acadoWorkspace_H_we1),
    .d1(acadoWorkspace_H_d1),
    .q1(acadoWorkspace_H_q1)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        Gx1_load_10_reg_1334 <= Gx1_q0;
        Gx1_load_11_reg_1342 <= Gx1_q1;
        Gx2_load_10_reg_1308 <= Gx2_q0;
        Gx2_load_11_reg_1316 <= Gx2_q1;
        acadoWorkspace_H_loa_8_reg_1350 <= acadoWorkspace_H_q0;
        acadoWorkspace_H_loa_9_reg_1355 <= acadoWorkspace_H_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        Gx1_load_12_reg_1406 <= Gx1_q0;
        Gx1_load_13_reg_1414 <= Gx1_q1;
        Gx2_load_12_reg_1370 <= Gx2_q0;
        Gx2_load_13_reg_1378 <= Gx2_q1;
        acadoWorkspace_H_loa_10_reg_1396 <= acadoWorkspace_H_q0;
        acadoWorkspace_H_loa_11_reg_1401 <= acadoWorkspace_H_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        Gx1_load_2_reg_1070 <= Gx1_q0;
        Gx1_load_3_reg_1086 <= Gx1_q1;
        Gx2_load_2_reg_1078 <= Gx2_q0;
        Gx2_load_3_reg_1094 <= Gx2_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        Gx1_load_4_reg_1158 <= Gx1_q0;
        Gx1_load_5_reg_1166 <= Gx1_q1;
        Gx2_load_4_reg_1122 <= Gx2_q0;
        Gx2_load_5_reg_1130 <= Gx2_q1;
        acadoWorkspace_H_loa_2_reg_1148 <= acadoWorkspace_H_q0;
        acadoWorkspace_H_loa_3_reg_1153 <= acadoWorkspace_H_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        Gx1_load_6_reg_1210 <= Gx1_q0;
        Gx1_load_7_reg_1218 <= Gx1_q1;
        Gx2_load_6_reg_1184 <= Gx2_q0;
        Gx2_load_7_reg_1192 <= Gx2_q1;
        acadoWorkspace_H_loa_4_reg_1226 <= acadoWorkspace_H_q0;
        acadoWorkspace_H_loa_5_reg_1231 <= acadoWorkspace_H_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        Gx1_load_8_reg_1282 <= Gx1_q0;
        Gx1_load_9_reg_1290 <= Gx1_q1;
        Gx2_load_8_reg_1246 <= Gx2_q0;
        Gx2_load_9_reg_1254 <= Gx2_q1;
        acadoWorkspace_H_loa_6_reg_1272 <= acadoWorkspace_H_q0;
        acadoWorkspace_H_loa_7_reg_1277 <= acadoWorkspace_H_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        acadoWorkspace_H_loa_12_reg_1642 <= acadoWorkspace_H_q0;
        acadoWorkspace_H_loa_13_reg_1657 <= acadoWorkspace_H_q1;
        mul_ln21_2_reg_1432 <= mul_ln21_2_fu_451_p2;
        mul_ln21_3_reg_1437 <= mul_ln21_3_fu_455_p2;
        mul_ln22_1_reg_1447 <= mul_ln22_1_fu_464_p2;
        mul_ln22_2_reg_1452 <= mul_ln22_2_fu_469_p2;
        mul_ln22_3_reg_1457 <= mul_ln22_3_fu_473_p2;
        mul_ln22_reg_1442 <= mul_ln22_fu_459_p2;
        mul_ln23_1_reg_1467 <= mul_ln23_1_fu_482_p2;
        mul_ln23_2_reg_1472 <= mul_ln23_2_fu_487_p2;
        mul_ln23_3_reg_1477 <= mul_ln23_3_fu_491_p2;
        mul_ln23_reg_1462 <= mul_ln23_fu_477_p2;
        mul_ln24_1_reg_1487 <= mul_ln24_1_fu_500_p2;
        mul_ln24_reg_1482 <= mul_ln24_fu_495_p2;
        mul_ln25_1_reg_1497 <= mul_ln25_1_fu_510_p2;
        mul_ln25_2_reg_1502 <= mul_ln25_2_fu_515_p2;
        mul_ln25_3_reg_1507 <= mul_ln25_3_fu_519_p2;
        mul_ln25_reg_1492 <= mul_ln25_fu_505_p2;
        mul_ln26_1_reg_1517 <= mul_ln26_1_fu_527_p2;
        mul_ln26_2_reg_1522 <= mul_ln26_2_fu_531_p2;
        mul_ln26_3_reg_1527 <= mul_ln26_3_fu_535_p2;
        mul_ln26_reg_1512 <= mul_ln26_fu_523_p2;
        mul_ln27_1_reg_1537 <= mul_ln27_1_fu_543_p2;
        mul_ln27_2_reg_1542 <= mul_ln27_2_fu_547_p2;
        mul_ln27_3_reg_1547 <= mul_ln27_3_fu_551_p2;
        mul_ln27_reg_1532 <= mul_ln27_fu_539_p2;
        mul_ln28_1_reg_1557 <= mul_ln28_1_fu_559_p2;
        mul_ln28_reg_1552 <= mul_ln28_fu_555_p2;
        mul_ln29_1_reg_1567 <= mul_ln29_1_fu_568_p2;
        mul_ln29_2_reg_1572 <= mul_ln29_2_fu_573_p2;
        mul_ln29_3_reg_1577 <= mul_ln29_3_fu_577_p2;
        mul_ln29_reg_1562 <= mul_ln29_fu_563_p2;
        mul_ln30_1_reg_1587 <= mul_ln30_1_fu_585_p2;
        mul_ln30_2_reg_1592 <= mul_ln30_2_fu_589_p2;
        mul_ln30_3_reg_1597 <= mul_ln30_3_fu_593_p2;
        mul_ln30_reg_1582 <= mul_ln30_fu_581_p2;
        mul_ln31_1_reg_1607 <= mul_ln31_1_fu_601_p2;
        mul_ln31_2_reg_1612 <= mul_ln31_2_fu_605_p2;
        mul_ln31_3_reg_1617 <= mul_ln31_3_fu_609_p2;
        mul_ln31_reg_1602 <= mul_ln31_fu_597_p2;
        mul_ln32_1_reg_1627 <= mul_ln32_1_fu_617_p2;
        mul_ln32_reg_1622 <= mul_ln32_fu_613_p2;
        mul_ln33_1_reg_1637 <= mul_ln33_1_fu_626_p2;
        mul_ln33_reg_1632 <= mul_ln33_fu_621_p2;
        mul_ln34_1_reg_1652 <= mul_ln34_1_fu_635_p2;
        mul_ln34_reg_1647 <= mul_ln34_fu_631_p2;
        mul_ln35_1_reg_1667 <= mul_ln35_1_fu_643_p2;
        mul_ln35_reg_1662 <= mul_ln35_fu_639_p2;
        mul_ln36_1_reg_1677 <= mul_ln36_1_fu_651_p2;
        mul_ln36_reg_1672 <= mul_ln36_fu_647_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        add_ln23_3_reg_1682 <= add_ln23_3_fu_712_p2;
        add_ln25_3_reg_1697 <= add_ln25_3_fu_741_p2;
        add_ln26_3_reg_1702 <= add_ln26_3_fu_760_p2;
        add_ln27_3_reg_1707 <= add_ln27_3_fu_779_p2;
        add_ln29_3_reg_1722 <= add_ln29_3_fu_808_p2;
        add_ln30_3_reg_1727 <= add_ln30_3_fu_827_p2;
        add_ln31_3_reg_1732 <= add_ln31_3_fu_846_p2;
        mul_ln24_2_reg_1687 <= mul_ln24_2_fu_718_p2;
        mul_ln24_3_reg_1692 <= mul_ln24_3_fu_723_p2;
        mul_ln28_2_reg_1712 <= mul_ln28_2_fu_785_p2;
        mul_ln28_3_reg_1717 <= mul_ln28_3_fu_790_p2;
        mul_ln32_2_reg_1737 <= mul_ln32_2_fu_852_p2;
        mul_ln32_3_reg_1742 <= mul_ln32_3_fu_857_p2;
        mul_ln33_2_reg_1747 <= mul_ln33_2_fu_862_p2;
        mul_ln33_3_reg_1752 <= mul_ln33_3_fu_867_p2;
        mul_ln34_2_reg_1757 <= mul_ln34_2_fu_872_p2;
        mul_ln34_3_reg_1762 <= mul_ln34_3_fu_877_p2;
        mul_ln35_2_reg_1767 <= mul_ln35_2_fu_882_p2;
        mul_ln35_3_reg_1772 <= mul_ln35_3_fu_887_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        add_ln28_3_reg_1777 <= add_ln28_3_fu_925_p2;
        add_ln32_3_reg_1782 <= add_ln32_3_fu_944_p2;
        add_ln33_3_reg_1787 <= add_ln33_3_fu_963_p2;
        add_ln34_3_reg_1792 <= add_ln34_3_fu_982_p2;
        add_ln35_3_reg_1797 <= add_ln35_3_fu_1002_p2;
        add_ln36_3_reg_1802 <= add_ln36_3_fu_1024_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state2))) begin
        reg_407 <= Gx1_q0;
        reg_411 <= Gx2_q0;
        reg_415 <= Gx1_q1;
        reg_419 <= Gx2_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state3))) begin
        reg_423 <= acadoWorkspace_H_q0;
        reg_427 <= acadoWorkspace_H_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9))) begin
        reg_443 <= grp_fu_431_p2;
        reg_447 <= grp_fu_437_p2;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        Gx1_address0 = 64'd11;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        Gx1_address0 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        Gx1_address0 = 64'd10;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        Gx1_address0 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        Gx1_address0 = 64'd9;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        Gx1_address0 = 64'd1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        Gx1_address0 = 64'd8;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        Gx1_address0 = 64'd0;
    end else begin
        Gx1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        Gx1_address1 = 64'd15;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        Gx1_address1 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        Gx1_address1 = 64'd14;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        Gx1_address1 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        Gx1_address1 = 64'd13;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        Gx1_address1 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        Gx1_address1 = 64'd12;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        Gx1_address1 = 64'd4;
    end else begin
        Gx1_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        Gx1_ce0 = 1'b1;
    end else begin
        Gx1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        Gx1_ce1 = 1'b1;
    end else begin
        Gx1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        Gx2_address0 = 64'd11;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        Gx2_address0 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        Gx2_address0 = 64'd10;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        Gx2_address0 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        Gx2_address0 = 64'd9;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        Gx2_address0 = 64'd1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        Gx2_address0 = 64'd8;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        Gx2_address0 = 64'd0;
    end else begin
        Gx2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        Gx2_address1 = 64'd15;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        Gx2_address1 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        Gx2_address1 = 64'd14;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        Gx2_address1 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        Gx2_address1 = 64'd13;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        Gx2_address1 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        Gx2_address1 = 64'd12;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        Gx2_address1 = 64'd4;
    end else begin
        Gx2_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        Gx2_ce0 = 1'b1;
    end else begin
        Gx2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        Gx2_ce1 = 1'b1;
    end else begin
        Gx2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state17))) begin
        acadoWorkspace_H_address0 = 10'd74;
    end else if (((1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state8))) begin
        acadoWorkspace_H_address0 = 10'd72;
    end else if (((1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state7))) begin
        acadoWorkspace_H_address0 = 10'd50;
    end else if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state6))) begin
        acadoWorkspace_H_address0 = 10'd48;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state5))) begin
        acadoWorkspace_H_address0 = 10'd26;
    end else if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state4))) begin
        acadoWorkspace_H_address0 = 10'd24;
    end else if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state11))) begin
        acadoWorkspace_H_address0 = 10'd2;
    end else if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state2))) begin
        acadoWorkspace_H_address0 = 10'd0;
    end else begin
        acadoWorkspace_H_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state17))) begin
        acadoWorkspace_H_address1 = 10'd75;
    end else if (((1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state8))) begin
        acadoWorkspace_H_address1 = 10'd73;
    end else if (((1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state7))) begin
        acadoWorkspace_H_address1 = 10'd51;
    end else if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state6))) begin
        acadoWorkspace_H_address1 = 10'd49;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state5))) begin
        acadoWorkspace_H_address1 = 10'd27;
    end else if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state4))) begin
        acadoWorkspace_H_address1 = 10'd25;
    end else if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state11))) begin
        acadoWorkspace_H_address1 = 10'd3;
    end else if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state2))) begin
        acadoWorkspace_H_address1 = 10'd1;
    end else begin
        acadoWorkspace_H_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4))) begin
        acadoWorkspace_H_ce0 = 1'b1;
    end else begin
        acadoWorkspace_H_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4))) begin
        acadoWorkspace_H_ce1 = 1'b1;
    end else begin
        acadoWorkspace_H_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        acadoWorkspace_H_d0 = add_ln35_3_reg_1797;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        acadoWorkspace_H_d0 = add_ln33_3_reg_1787;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        acadoWorkspace_H_d0 = add_ln31_3_reg_1732;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        acadoWorkspace_H_d0 = add_ln29_3_reg_1722;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        acadoWorkspace_H_d0 = add_ln27_3_reg_1707;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        acadoWorkspace_H_d0 = add_ln25_3_reg_1697;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        acadoWorkspace_H_d0 = add_ln23_3_reg_1682;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        acadoWorkspace_H_d0 = add_ln21_3_fu_671_p2;
    end else begin
        acadoWorkspace_H_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        acadoWorkspace_H_d1 = add_ln36_3_reg_1802;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        acadoWorkspace_H_d1 = add_ln34_3_reg_1792;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        acadoWorkspace_H_d1 = add_ln32_3_reg_1782;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        acadoWorkspace_H_d1 = add_ln30_3_reg_1727;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        acadoWorkspace_H_d1 = add_ln28_3_reg_1777;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        acadoWorkspace_H_d1 = add_ln26_3_reg_1702;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        acadoWorkspace_H_d1 = add_ln24_3_fu_905_p2;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        acadoWorkspace_H_d1 = add_ln22_3_fu_692_p2;
    end else begin
        acadoWorkspace_H_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11))) begin
        acadoWorkspace_H_we0 = 1'b1;
    end else begin
        acadoWorkspace_H_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11))) begin
        acadoWorkspace_H_we1 = 1'b1;
    end else begin
        acadoWorkspace_H_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln21_1_fu_661_p2 = (mul_ln21_2_reg_1432 + mul_ln21_3_reg_1437);

assign add_ln21_2_fu_665_p2 = (add_ln21_1_fu_661_p2 + reg_443);

assign add_ln21_3_fu_671_p2 = (add_ln21_2_fu_665_p2 + add_ln21_fu_655_p2);

assign add_ln21_fu_655_p2 = (reg_423 + reg_447);

assign add_ln22_1_fu_683_p2 = (mul_ln22_2_reg_1452 + mul_ln22_3_reg_1457);

assign add_ln22_2_fu_687_p2 = (add_ln22_1_fu_683_p2 + mul_ln22_reg_1442);

assign add_ln22_3_fu_692_p2 = (add_ln22_2_fu_687_p2 + add_ln22_fu_678_p2);

assign add_ln22_fu_678_p2 = (reg_427 + mul_ln22_1_reg_1447);

assign add_ln23_1_fu_703_p2 = (mul_ln23_2_reg_1472 + mul_ln23_3_reg_1477);

assign add_ln23_2_fu_707_p2 = (add_ln23_1_fu_703_p2 + mul_ln23_reg_1462);

assign add_ln23_3_fu_712_p2 = (add_ln23_2_fu_707_p2 + add_ln23_fu_699_p2);

assign add_ln23_fu_699_p2 = (acadoWorkspace_H_loa_2_reg_1148 + mul_ln23_1_reg_1467);

assign add_ln24_1_fu_896_p2 = (mul_ln24_2_reg_1687 + mul_ln24_3_reg_1692);

assign add_ln24_2_fu_900_p2 = (add_ln24_1_fu_896_p2 + mul_ln24_reg_1482);

assign add_ln24_3_fu_905_p2 = (add_ln24_2_fu_900_p2 + add_ln24_fu_892_p2);

assign add_ln24_fu_892_p2 = (acadoWorkspace_H_loa_3_reg_1153 + mul_ln24_1_reg_1487);

assign add_ln25_1_fu_732_p2 = (mul_ln25_2_reg_1502 + mul_ln25_3_reg_1507);

assign add_ln25_2_fu_736_p2 = (add_ln25_1_fu_732_p2 + mul_ln25_reg_1492);

assign add_ln25_3_fu_741_p2 = (add_ln25_2_fu_736_p2 + add_ln25_fu_728_p2);

assign add_ln25_fu_728_p2 = (acadoWorkspace_H_loa_4_reg_1226 + mul_ln25_1_reg_1497);

assign add_ln26_1_fu_751_p2 = (mul_ln26_2_reg_1522 + mul_ln26_3_reg_1527);

assign add_ln26_2_fu_755_p2 = (add_ln26_1_fu_751_p2 + mul_ln26_reg_1512);

assign add_ln26_3_fu_760_p2 = (add_ln26_2_fu_755_p2 + add_ln26_fu_747_p2);

assign add_ln26_fu_747_p2 = (acadoWorkspace_H_loa_5_reg_1231 + mul_ln26_1_reg_1517);

assign add_ln27_1_fu_770_p2 = (mul_ln27_2_reg_1542 + mul_ln27_3_reg_1547);

assign add_ln27_2_fu_774_p2 = (add_ln27_1_fu_770_p2 + mul_ln27_reg_1532);

assign add_ln27_3_fu_779_p2 = (add_ln27_2_fu_774_p2 + add_ln27_fu_766_p2);

assign add_ln27_fu_766_p2 = (acadoWorkspace_H_loa_6_reg_1272 + mul_ln27_1_reg_1537);

assign add_ln28_1_fu_916_p2 = (mul_ln28_2_reg_1712 + mul_ln28_3_reg_1717);

assign add_ln28_2_fu_920_p2 = (add_ln28_1_fu_916_p2 + mul_ln28_reg_1552);

assign add_ln28_3_fu_925_p2 = (add_ln28_2_fu_920_p2 + add_ln28_fu_912_p2);

assign add_ln28_fu_912_p2 = (acadoWorkspace_H_loa_7_reg_1277 + mul_ln28_1_reg_1557);

assign add_ln29_1_fu_799_p2 = (mul_ln29_2_reg_1572 + mul_ln29_3_reg_1577);

assign add_ln29_2_fu_803_p2 = (add_ln29_1_fu_799_p2 + mul_ln29_reg_1562);

assign add_ln29_3_fu_808_p2 = (add_ln29_2_fu_803_p2 + add_ln29_fu_795_p2);

assign add_ln29_fu_795_p2 = (acadoWorkspace_H_loa_8_reg_1350 + mul_ln29_1_reg_1567);

assign add_ln30_1_fu_818_p2 = (mul_ln30_2_reg_1592 + mul_ln30_3_reg_1597);

assign add_ln30_2_fu_822_p2 = (add_ln30_1_fu_818_p2 + mul_ln30_reg_1582);

assign add_ln30_3_fu_827_p2 = (add_ln30_2_fu_822_p2 + add_ln30_fu_814_p2);

assign add_ln30_fu_814_p2 = (acadoWorkspace_H_loa_9_reg_1355 + mul_ln30_1_reg_1587);

assign add_ln31_1_fu_837_p2 = (mul_ln31_2_reg_1612 + mul_ln31_3_reg_1617);

assign add_ln31_2_fu_841_p2 = (add_ln31_1_fu_837_p2 + mul_ln31_reg_1602);

assign add_ln31_3_fu_846_p2 = (add_ln31_2_fu_841_p2 + add_ln31_fu_833_p2);

assign add_ln31_fu_833_p2 = (acadoWorkspace_H_loa_10_reg_1396 + mul_ln31_1_reg_1607);

assign add_ln32_1_fu_935_p2 = (mul_ln32_2_reg_1737 + mul_ln32_3_reg_1742);

assign add_ln32_2_fu_939_p2 = (add_ln32_1_fu_935_p2 + mul_ln32_reg_1622);

assign add_ln32_3_fu_944_p2 = (add_ln32_2_fu_939_p2 + add_ln32_fu_931_p2);

assign add_ln32_fu_931_p2 = (acadoWorkspace_H_loa_11_reg_1401 + mul_ln32_1_reg_1627);

assign add_ln33_1_fu_954_p2 = (mul_ln33_2_reg_1747 + mul_ln33_3_reg_1752);

assign add_ln33_2_fu_958_p2 = (add_ln33_1_fu_954_p2 + mul_ln33_reg_1632);

assign add_ln33_3_fu_963_p2 = (add_ln33_2_fu_958_p2 + add_ln33_fu_950_p2);

assign add_ln33_fu_950_p2 = (acadoWorkspace_H_loa_12_reg_1642 + mul_ln33_1_reg_1637);

assign add_ln34_1_fu_973_p2 = (mul_ln34_2_reg_1757 + mul_ln34_3_reg_1762);

assign add_ln34_2_fu_977_p2 = (add_ln34_1_fu_973_p2 + mul_ln34_reg_1647);

assign add_ln34_3_fu_982_p2 = (add_ln34_2_fu_977_p2 + add_ln34_fu_969_p2);

assign add_ln34_fu_969_p2 = (acadoWorkspace_H_loa_13_reg_1657 + mul_ln34_1_reg_1652);

assign add_ln35_1_fu_993_p2 = (mul_ln35_2_reg_1767 + mul_ln35_3_reg_1772);

assign add_ln35_2_fu_997_p2 = (add_ln35_1_fu_993_p2 + mul_ln35_reg_1662);

assign add_ln35_3_fu_1002_p2 = (add_ln35_2_fu_997_p2 + add_ln35_fu_988_p2);

assign add_ln35_fu_988_p2 = (reg_423 + mul_ln35_1_reg_1667);

assign add_ln36_1_fu_1013_p2 = (reg_443 + reg_447);

assign add_ln36_2_fu_1019_p2 = (add_ln36_1_fu_1013_p2 + mul_ln36_reg_1672);

assign add_ln36_3_fu_1024_p2 = (add_ln36_2_fu_1019_p2 + add_ln36_fu_1008_p2);

assign add_ln36_fu_1008_p2 = (reg_427 + mul_ln36_1_reg_1677);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign grp_fu_431_p2 = ($signed(reg_411) * $signed(reg_407));

assign grp_fu_437_p2 = ($signed(reg_419) * $signed(reg_415));

assign mul_ln21_2_fu_451_p2 = ($signed(Gx2_load_2_reg_1078) * $signed(Gx1_load_2_reg_1070));

assign mul_ln21_3_fu_455_p2 = ($signed(Gx2_load_3_reg_1094) * $signed(Gx1_load_3_reg_1086));

assign mul_ln22_1_fu_464_p2 = ($signed(Gx2_load_5_reg_1130) * $signed(reg_415));

assign mul_ln22_2_fu_469_p2 = ($signed(Gx2_load_6_reg_1184) * $signed(Gx1_load_2_reg_1070));

assign mul_ln22_3_fu_473_p2 = ($signed(Gx2_load_7_reg_1192) * $signed(Gx1_load_3_reg_1086));

assign mul_ln22_fu_459_p2 = ($signed(Gx2_load_4_reg_1122) * $signed(reg_407));

assign mul_ln23_1_fu_482_p2 = ($signed(Gx2_load_9_reg_1254) * $signed(reg_415));

assign mul_ln23_2_fu_487_p2 = ($signed(Gx2_load_10_reg_1308) * $signed(Gx1_load_2_reg_1070));

assign mul_ln23_3_fu_491_p2 = ($signed(Gx2_load_11_reg_1316) * $signed(Gx1_load_3_reg_1086));

assign mul_ln23_fu_477_p2 = ($signed(Gx2_load_8_reg_1246) * $signed(reg_407));

assign mul_ln24_1_fu_500_p2 = ($signed(Gx2_load_13_reg_1378) * $signed(reg_415));

assign mul_ln24_2_fu_718_p2 = ($signed(reg_411) * $signed(Gx1_load_2_reg_1070));

assign mul_ln24_3_fu_723_p2 = ($signed(reg_419) * $signed(Gx1_load_3_reg_1086));

assign mul_ln24_fu_495_p2 = ($signed(Gx2_load_12_reg_1370) * $signed(reg_407));

assign mul_ln25_1_fu_510_p2 = ($signed(reg_419) * $signed(Gx1_load_5_reg_1166));

assign mul_ln25_2_fu_515_p2 = ($signed(Gx2_load_2_reg_1078) * $signed(Gx1_load_6_reg_1210));

assign mul_ln25_3_fu_519_p2 = ($signed(Gx2_load_3_reg_1094) * $signed(Gx1_load_7_reg_1218));

assign mul_ln25_fu_505_p2 = ($signed(reg_411) * $signed(Gx1_load_4_reg_1158));

assign mul_ln26_1_fu_527_p2 = ($signed(Gx2_load_5_reg_1130) * $signed(Gx1_load_5_reg_1166));

assign mul_ln26_2_fu_531_p2 = ($signed(Gx2_load_6_reg_1184) * $signed(Gx1_load_6_reg_1210));

assign mul_ln26_3_fu_535_p2 = ($signed(Gx2_load_7_reg_1192) * $signed(Gx1_load_7_reg_1218));

assign mul_ln26_fu_523_p2 = ($signed(Gx2_load_4_reg_1122) * $signed(Gx1_load_4_reg_1158));

assign mul_ln27_1_fu_543_p2 = ($signed(Gx2_load_9_reg_1254) * $signed(Gx1_load_5_reg_1166));

assign mul_ln27_2_fu_547_p2 = ($signed(Gx2_load_10_reg_1308) * $signed(Gx1_load_6_reg_1210));

assign mul_ln27_3_fu_551_p2 = ($signed(Gx2_load_11_reg_1316) * $signed(Gx1_load_7_reg_1218));

assign mul_ln27_fu_539_p2 = ($signed(Gx2_load_8_reg_1246) * $signed(Gx1_load_4_reg_1158));

assign mul_ln28_1_fu_559_p2 = ($signed(Gx2_load_13_reg_1378) * $signed(Gx1_load_5_reg_1166));

assign mul_ln28_2_fu_785_p2 = ($signed(reg_411) * $signed(Gx1_load_6_reg_1210));

assign mul_ln28_3_fu_790_p2 = ($signed(reg_419) * $signed(Gx1_load_7_reg_1218));

assign mul_ln28_fu_555_p2 = ($signed(Gx2_load_12_reg_1370) * $signed(Gx1_load_4_reg_1158));

assign mul_ln29_1_fu_568_p2 = ($signed(reg_419) * $signed(Gx1_load_9_reg_1290));

assign mul_ln29_2_fu_573_p2 = ($signed(Gx2_load_2_reg_1078) * $signed(Gx1_load_10_reg_1334));

assign mul_ln29_3_fu_577_p2 = ($signed(Gx2_load_3_reg_1094) * $signed(Gx1_load_11_reg_1342));

assign mul_ln29_fu_563_p2 = ($signed(reg_411) * $signed(Gx1_load_8_reg_1282));

assign mul_ln30_1_fu_585_p2 = ($signed(Gx2_load_5_reg_1130) * $signed(Gx1_load_9_reg_1290));

assign mul_ln30_2_fu_589_p2 = ($signed(Gx2_load_6_reg_1184) * $signed(Gx1_load_10_reg_1334));

assign mul_ln30_3_fu_593_p2 = ($signed(Gx2_load_7_reg_1192) * $signed(Gx1_load_11_reg_1342));

assign mul_ln30_fu_581_p2 = ($signed(Gx2_load_4_reg_1122) * $signed(Gx1_load_8_reg_1282));

assign mul_ln31_1_fu_601_p2 = ($signed(Gx2_load_9_reg_1254) * $signed(Gx1_load_9_reg_1290));

assign mul_ln31_2_fu_605_p2 = ($signed(Gx2_load_10_reg_1308) * $signed(Gx1_load_10_reg_1334));

assign mul_ln31_3_fu_609_p2 = ($signed(Gx2_load_11_reg_1316) * $signed(Gx1_load_11_reg_1342));

assign mul_ln31_fu_597_p2 = ($signed(Gx2_load_8_reg_1246) * $signed(Gx1_load_8_reg_1282));

assign mul_ln32_1_fu_617_p2 = ($signed(Gx2_load_13_reg_1378) * $signed(Gx1_load_9_reg_1290));

assign mul_ln32_2_fu_852_p2 = ($signed(reg_411) * $signed(Gx1_load_10_reg_1334));

assign mul_ln32_3_fu_857_p2 = ($signed(reg_419) * $signed(Gx1_load_11_reg_1342));

assign mul_ln32_fu_613_p2 = ($signed(Gx2_load_12_reg_1370) * $signed(Gx1_load_8_reg_1282));

assign mul_ln33_1_fu_626_p2 = ($signed(reg_419) * $signed(Gx1_load_13_reg_1414));

assign mul_ln33_2_fu_862_p2 = ($signed(Gx2_load_2_reg_1078) * $signed(reg_407));

assign mul_ln33_3_fu_867_p2 = ($signed(Gx2_load_3_reg_1094) * $signed(reg_415));

assign mul_ln33_fu_621_p2 = ($signed(reg_411) * $signed(Gx1_load_12_reg_1406));

assign mul_ln34_1_fu_635_p2 = ($signed(Gx2_load_5_reg_1130) * $signed(Gx1_load_13_reg_1414));

assign mul_ln34_2_fu_872_p2 = ($signed(Gx2_load_6_reg_1184) * $signed(reg_407));

assign mul_ln34_3_fu_877_p2 = ($signed(Gx2_load_7_reg_1192) * $signed(reg_415));

assign mul_ln34_fu_631_p2 = ($signed(Gx2_load_4_reg_1122) * $signed(Gx1_load_12_reg_1406));

assign mul_ln35_1_fu_643_p2 = ($signed(Gx2_load_9_reg_1254) * $signed(Gx1_load_13_reg_1414));

assign mul_ln35_2_fu_882_p2 = ($signed(Gx2_load_10_reg_1308) * $signed(reg_407));

assign mul_ln35_3_fu_887_p2 = ($signed(Gx2_load_11_reg_1316) * $signed(reg_415));

assign mul_ln35_fu_639_p2 = ($signed(Gx2_load_8_reg_1246) * $signed(Gx1_load_12_reg_1406));

assign mul_ln36_1_fu_651_p2 = ($signed(Gx2_load_13_reg_1378) * $signed(Gx1_load_13_reg_1414));

assign mul_ln36_fu_647_p2 = ($signed(Gx2_load_12_reg_1370) * $signed(Gx1_load_12_reg_1406));

endmodule //acado_multCTQC
