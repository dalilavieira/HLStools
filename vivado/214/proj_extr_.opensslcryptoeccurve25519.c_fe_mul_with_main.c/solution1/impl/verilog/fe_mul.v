// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="fe_mul,hls_ip_2019_1,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7k160t-fbg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=9.360000,HLS_SYN_LAT=19,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=319,HLS_SYN_FF=4251,HLS_SYN_LUT=6529,HLS_VERSION=2019_1}" *)

module fe_mul (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        h_address0,
        h_ce0,
        h_we0,
        h_d0,
        h_address1,
        h_ce1,
        h_we1,
        h_d1,
        f_address0,
        f_ce0,
        f_q0,
        f_address1,
        f_ce1,
        f_q1,
        g_address0,
        g_ce0,
        g_q0,
        g_address1,
        g_ce1,
        g_q1
);

parameter    ap_ST_fsm_state1 = 20'd1;
parameter    ap_ST_fsm_state2 = 20'd2;
parameter    ap_ST_fsm_state3 = 20'd4;
parameter    ap_ST_fsm_state4 = 20'd8;
parameter    ap_ST_fsm_state5 = 20'd16;
parameter    ap_ST_fsm_state6 = 20'd32;
parameter    ap_ST_fsm_state7 = 20'd64;
parameter    ap_ST_fsm_state8 = 20'd128;
parameter    ap_ST_fsm_state9 = 20'd256;
parameter    ap_ST_fsm_state10 = 20'd512;
parameter    ap_ST_fsm_state11 = 20'd1024;
parameter    ap_ST_fsm_state12 = 20'd2048;
parameter    ap_ST_fsm_state13 = 20'd4096;
parameter    ap_ST_fsm_state14 = 20'd8192;
parameter    ap_ST_fsm_state15 = 20'd16384;
parameter    ap_ST_fsm_state16 = 20'd32768;
parameter    ap_ST_fsm_state17 = 20'd65536;
parameter    ap_ST_fsm_state18 = 20'd131072;
parameter    ap_ST_fsm_state19 = 20'd262144;
parameter    ap_ST_fsm_state20 = 20'd524288;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [9:0] h_address0;
output   h_ce0;
output   h_we0;
output  [31:0] h_d0;
output  [9:0] h_address1;
output   h_ce1;
output   h_we1;
output  [31:0] h_d1;
output  [9:0] f_address0;
output   f_ce0;
input  [31:0] f_q0;
output  [9:0] f_address1;
output   f_ce1;
input  [31:0] f_q1;
output  [9:0] g_address0;
output   g_ce0;
input  [31:0] g_q0;
output  [9:0] g_address1;
output   g_ce1;
input  [31:0] g_q1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[9:0] h_address0;
reg h_ce0;
reg h_we0;
reg[31:0] h_d0;
reg[9:0] h_address1;
reg h_ce1;
reg h_we1;
reg[31:0] h_d1;
reg[9:0] f_address0;
reg f_ce0;
reg[9:0] f_address1;
reg f_ce1;
reg[9:0] g_address0;
reg g_ce0;
reg[9:0] g_address1;
reg g_ce1;

(* fsm_encoding = "none" *) reg   [19:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire    ap_CS_fsm_state2;
reg  signed [31:0] g0_reg_1712;
reg  signed [31:0] g1_reg_1726;
reg  signed [31:0] f0_reg_1750;
wire    ap_CS_fsm_state3;
reg  signed [31:0] f1_reg_1764;
reg  signed [31:0] g2_reg_1788;
reg  signed [31:0] g3_reg_1801;
reg  signed [31:0] f2_reg_1823;
wire    ap_CS_fsm_state4;
reg  signed [31:0] f3_reg_1837;
reg  signed [31:0] g4_reg_1861;
reg  signed [31:0] g5_reg_1872;
reg  signed [31:0] f4_reg_1892;
wire    ap_CS_fsm_state5;
reg  signed [31:0] f5_reg_1906;
reg  signed [31:0] g6_reg_1930;
reg  signed [31:0] g7_reg_1939;
reg  signed [31:0] f6_reg_1957;
wire    ap_CS_fsm_state6;
reg  signed [31:0] f7_reg_1971;
reg  signed [31:0] g8_reg_1995;
reg  signed [31:0] g9_reg_2002;
reg  signed [31:0] f8_reg_2008;
wire    ap_CS_fsm_state7;
reg  signed [31:0] f9_reg_2022;
wire  signed [31:0] g2_19_fu_351_p2;
reg  signed [31:0] g2_19_reg_2036;
wire  signed [31:0] g3_19_fu_356_p2;
reg  signed [31:0] g3_19_reg_2042;
wire  signed [31:0] g4_19_fu_361_p2;
reg  signed [31:0] g4_19_reg_2049;
wire  signed [31:0] g5_19_fu_366_p2;
reg  signed [31:0] g5_19_reg_2057;
wire  signed [31:0] g6_19_fu_371_p2;
reg  signed [31:0] g6_19_reg_2066;
wire  signed [31:0] g7_19_fu_376_p2;
reg  signed [31:0] g7_19_reg_2076;
wire  signed [31:0] g8_19_fu_381_p2;
reg  signed [31:0] g8_19_reg_2087;
wire  signed [31:0] g9_19_fu_386_p2;
reg  signed [31:0] g9_19_reg_2099;
wire  signed [31:0] mul_ln147_fu_391_p2;
reg  signed [31:0] mul_ln147_reg_2112;
wire   [31:0] f0g7_fu_412_p2;
reg   [31:0] f0g7_reg_2117;
wire    ap_CS_fsm_state8;
wire   [31:0] mul_ln69_fu_424_p2;
reg   [31:0] mul_ln69_reg_2122;
wire   [31:0] mul_ln73_fu_442_p2;
reg   [31:0] mul_ln73_reg_2127;
wire   [31:0] mul_ln75_fu_450_p2;
reg   [31:0] mul_ln75_reg_2132;
wire   [31:0] f2g2_fu_454_p2;
reg   [31:0] f2g2_reg_2137;
wire   [31:0] f2g7_fu_466_p2;
reg   [31:0] f2g7_reg_2142;
wire   [31:0] f4g6_19_fu_534_p2;
reg   [31:0] f4g6_19_reg_2147;
wire   [31:0] f4g7_19_fu_538_p2;
reg   [31:0] f4g7_19_reg_2152;
wire   [31:0] mul_ln113_fu_564_p2;
reg   [31:0] mul_ln113_reg_2157;
wire   [31:0] mul_ln115_fu_572_p2;
reg   [31:0] mul_ln115_reg_2162;
wire   [31:0] f6g7_19_fu_588_p2;
reg   [31:0] f6g7_19_reg_2167;
wire   [31:0] mul_ln129_fu_600_p2;
reg   [31:0] mul_ln129_reg_2172;
wire   [31:0] f8g2_19_fu_642_p2;
reg   [31:0] f8g2_19_reg_2177;
wire   [31:0] f8g6_19_fu_650_p2;
reg   [31:0] f8g6_19_reg_2182;
wire   [31:0] f8g7_19_fu_654_p2;
reg   [31:0] f8g7_19_reg_2187;
wire   [31:0] mul_ln153_fu_684_p2;
reg   [31:0] mul_ln153_reg_2192;
wire   [31:0] add_ln156_fu_702_p2;
reg   [31:0] add_ln156_reg_2197;
wire   [31:0] add_ln156_1_fu_708_p2;
reg   [31:0] add_ln156_1_reg_2202;
wire   [31:0] add_ln156_4_fu_714_p2;
reg   [31:0] add_ln156_4_reg_2207;
wire   [31:0] add_ln160_fu_720_p2;
reg   [31:0] add_ln160_reg_2212;
wire   [31:0] add_ln160_1_fu_726_p2;
reg   [31:0] add_ln160_1_reg_2217;
wire   [31:0] add_ln160_4_fu_732_p2;
reg   [31:0] add_ln160_4_reg_2222;
wire   [31:0] add_ln182_fu_738_p2;
reg   [31:0] add_ln182_reg_2227;
wire   [31:0] add_ln182_1_fu_744_p2;
reg   [31:0] add_ln182_1_reg_2232;
wire   [31:0] add_ln183_fu_750_p2;
reg   [31:0] add_ln183_reg_2237;
wire   [31:0] add_ln183_1_fu_756_p2;
reg   [31:0] add_ln183_1_reg_2242;
wire   [31:0] add_ln189_fu_762_p2;
reg   [31:0] add_ln189_reg_2247;
wire   [31:0] add_ln189_1_fu_768_p2;
reg   [31:0] add_ln189_1_reg_2252;
wire   [31:0] add_ln190_fu_774_p2;
reg   [31:0] add_ln190_reg_2257;
wire   [31:0] add_ln190_1_fu_780_p2;
reg   [31:0] add_ln190_1_reg_2262;
wire   [31:0] add_ln196_fu_786_p2;
reg   [31:0] add_ln196_reg_2267;
wire   [31:0] add_ln196_1_fu_792_p2;
reg   [31:0] add_ln196_1_reg_2272;
wire   [31:0] add_ln197_fu_798_p2;
reg   [31:0] add_ln197_reg_2277;
wire   [31:0] add_ln197_1_fu_804_p2;
reg   [31:0] add_ln197_1_reg_2282;
wire   [31:0] add_ln204_fu_810_p2;
reg   [31:0] add_ln204_reg_2287;
wire   [31:0] add_ln204_1_fu_816_p2;
reg   [31:0] add_ln204_1_reg_2292;
wire   [31:0] add_ln211_fu_822_p2;
reg   [31:0] add_ln211_reg_2297;
wire   [31:0] add_ln211_1_fu_828_p2;
reg   [31:0] add_ln211_1_reg_2302;
wire   [31:0] f0g1_fu_834_p2;
reg   [31:0] f0g1_reg_2307;
wire    ap_CS_fsm_state9;
wire   [31:0] f1g0_fu_838_p2;
reg   [31:0] f1g0_reg_2312;
wire   [31:0] f1g4_fu_847_p2;
reg   [31:0] f1g4_reg_2317;
wire   [31:0] f2g3_fu_861_p2;
reg   [31:0] f2g3_reg_2322;
wire   [31:0] f3g2_fu_865_p2;
reg   [31:0] f3g2_reg_2327;
wire   [31:0] f4g1_fu_869_p2;
reg   [31:0] f4g1_reg_2332;
wire   [31:0] f5g0_fu_873_p2;
reg   [31:0] f5g0_reg_2337;
wire   [31:0] f7g4_19_fu_892_p2;
reg   [31:0] f7g4_19_reg_2342;
wire   [31:0] f8g3_19_fu_896_p2;
reg   [31:0] f8g3_19_reg_2347;
wire   [31:0] f9g2_19_fu_900_p2;
reg   [31:0] f9g2_19_reg_2352;
(* use_dsp48 = "no" *) wire   [31:0] h0_fu_934_p2;
reg  signed [31:0] h0_reg_2357;
wire   [31:0] h4_fu_965_p2;
reg   [31:0] h4_reg_2363;
wire   [31:0] add_ln182_3_fu_975_p2;
reg   [31:0] add_ln182_3_reg_2368;
reg   [5:0] trunc_ln1_reg_2373;
wire   [31:0] add_ln183_3_fu_1000_p2;
reg   [31:0] add_ln183_3_reg_2378;
wire   [31:0] add_ln189_3_fu_1010_p2;
reg   [31:0] add_ln189_3_reg_2383;
wire   [31:0] add_ln190_3_fu_1020_p2;
reg   [31:0] add_ln190_3_reg_2388;
wire   [31:0] add_ln196_3_fu_1029_p2;
reg   [31:0] add_ln196_3_reg_2393;
wire   [31:0] add_ln197_3_fu_1038_p2;
reg   [31:0] add_ln197_3_reg_2398;
wire   [31:0] add_ln204_3_fu_1048_p2;
reg   [31:0] add_ln204_3_reg_2403;
wire   [31:0] add_ln211_3_fu_1057_p2;
reg   [31:0] add_ln211_3_reg_2408;
wire   [31:0] f0g2_fu_1062_p2;
reg   [31:0] f0g2_reg_2413;
wire    ap_CS_fsm_state10;
wire   [31:0] mul_ln67_fu_1066_p2;
reg   [31:0] mul_ln67_reg_2418;
wire   [31:0] f1g2_fu_1070_p2;
reg   [31:0] f1g2_reg_2423;
wire   [31:0] f2g0_fu_1074_p2;
reg   [31:0] f2g0_reg_2428;
wire   [31:0] f2g1_fu_1078_p2;
reg   [31:0] f2g1_reg_2433;
wire   [31:0] f2g4_fu_1082_p2;
reg   [31:0] f2g4_reg_2438;
wire   [31:0] f3g0_fu_1086_p2;
reg   [31:0] f3g0_reg_2443;
wire   [31:0] mul_ln89_fu_1090_p2;
reg   [31:0] mul_ln89_reg_2448;
wire   [31:0] f4g2_fu_1094_p2;
reg   [31:0] f4g2_reg_2453;
wire   [31:0] mul_ln107_fu_1098_p2;
reg   [31:0] mul_ln107_reg_2458;
wire   [31:0] f5g2_fu_1102_p2;
reg   [31:0] f5g2_reg_2463;
wire   [31:0] f6g0_fu_1106_p2;
reg   [31:0] f6g0_reg_2468;
wire   [31:0] f6g1_fu_1110_p2;
reg   [31:0] f6g1_reg_2473;
wire   [31:0] f6g2_fu_1114_p2;
reg   [31:0] f6g2_reg_2478;
wire   [31:0] f7g0_fu_1118_p2;
reg   [31:0] f7g0_reg_2483;
wire   [31:0] mul_ln127_fu_1122_p2;
reg   [31:0] mul_ln127_reg_2488;
wire   [31:0] f7g2_fu_1126_p2;
reg   [31:0] f7g2_reg_2493;
wire   [31:0] f8g0_fu_1130_p2;
reg   [31:0] f8g0_reg_2498;
wire   [31:0] f8g1_fu_1134_p2;
reg   [31:0] f8g1_reg_2503;
wire   [31:0] f8g4_19_fu_1138_p2;
reg   [31:0] f8g4_19_reg_2508;
wire   [31:0] f9g0_fu_1142_p2;
reg   [31:0] f9g0_reg_2513;
wire   [31:0] mul_ln149_fu_1146_p2;
reg   [31:0] mul_ln149_reg_2518;
wire   [31:0] f9g4_19_fu_1150_p2;
reg   [31:0] f9g4_19_reg_2523;
wire   [31:0] h1_fu_1198_p2;
reg   [31:0] h1_reg_2528;
wire   [31:0] h5_fu_1231_p2;
reg   [31:0] h5_reg_2534;
reg   [6:0] trunc_ln3_reg_2539;
wire   [31:0] f0g3_fu_1252_p2;
reg   [31:0] f0g3_reg_2544;
wire    ap_CS_fsm_state11;
wire   [31:0] f3g4_fu_1266_p2;
reg   [31:0] f3g4_reg_2549;
wire   [31:0] f4g3_fu_1270_p2;
reg   [31:0] f4g3_reg_2554;
wire   [31:0] f4g4_fu_1274_p2;
reg   [31:0] f4g4_reg_2559;
wire   [31:0] mul_ln109_fu_1283_p2;
reg   [31:0] mul_ln109_reg_2564;
wire   [31:0] f5g4_fu_1287_p2;
reg   [31:0] f5g4_reg_2569;
wire   [31:0] f6g3_fu_1291_p2;
reg   [31:0] f6g3_reg_2574;
wire   [31:0] h2_fu_1351_p2;
reg   [31:0] h2_reg_2579;
wire   [31:0] h6_fu_1386_p2;
reg   [31:0] h6_reg_2585;
wire   [31:0] add_ln196_5_fu_1395_p2;
reg   [31:0] add_ln196_5_reg_2590;
reg   [5:0] trunc_ln5_reg_2595;
wire   [31:0] add_ln197_5_fu_1420_p2;
reg   [31:0] add_ln197_5_reg_2600;
wire   [31:0] add_ln204_5_fu_1430_p2;
reg   [31:0] add_ln204_5_reg_2605;
wire   [31:0] add_ln211_5_fu_1439_p2;
reg   [31:0] add_ln211_5_reg_2610;
wire   [31:0] h3_fu_1478_p2;
reg   [31:0] h3_reg_2615;
wire    ap_CS_fsm_state12;
wire   [31:0] h7_fu_1501_p2;
reg   [31:0] h7_reg_2621;
reg   [6:0] trunc_ln7_reg_2626;
wire   [31:0] h8_fu_1546_p2;
reg   [31:0] h8_reg_2631;
wire    ap_CS_fsm_state13;
reg   [5:0] trunc_ln9_reg_2636;
wire   [31:0] h9_fu_1585_p2;
reg   [31:0] h9_reg_2641;
wire    ap_CS_fsm_state14;
reg  signed [6:0] trunc_ln10_reg_2646;
wire   [31:0] h1_1_fu_1628_p2;
reg   [31:0] h1_1_reg_2651;
wire    ap_CS_fsm_state15;
wire   [31:0] h5_1_fu_1678_p2;
reg   [31:0] h5_1_reg_2656;
wire    ap_CS_fsm_state17;
wire    ap_CS_fsm_state16;
wire    ap_CS_fsm_state18;
wire    ap_CS_fsm_state19;
wire    ap_CS_fsm_state20;
wire  signed [31:0] grp_fu_1683_p3;
wire   [31:0] h4_1_fu_1652_p2;
wire   [31:0] mul_ln71_fu_428_p2;
wire   [31:0] mul_ln87_fu_478_p2;
wire   [31:0] mul_ln91_fu_488_p2;
wire   [31:0] mul_ln93_fu_502_p2;
wire   [31:0] mul_ln95_fu_516_p2;
wire   [31:0] mul_ln111_fu_550_p2;
wire   [31:0] mul_ln131_fu_604_p2;
wire   [31:0] mul_ln133_fu_618_p2;
wire   [31:0] mul_ln135_fu_632_p2;
wire   [31:0] mul_ln151_fu_670_p2;
wire   [31:0] mul_ln155_fu_692_p2;
wire   [31:0] f2g8_19_fu_470_p2;
wire   [31:0] f3g7_38_fu_506_p2;
wire   [31:0] f6g4_19_fu_576_p2;
wire   [31:0] f5g5_38_fu_554_p2;
wire   [31:0] f9g1_38_fu_666_p2;
wire   [31:0] f0g0_fu_396_p2;
wire   [31:0] f6g8_19_fu_592_p2;
wire   [31:0] f7g7_38_fu_622_p2;
wire   [31:0] f0g4_fu_400_p2;
wire   [31:0] f9g5_38_fu_674_p2;
wire   [31:0] f3g1_2_fu_482_p2;
wire   [31:0] f4g0_fu_526_p2;
wire   [31:0] f2g9_19_fu_474_p2;
wire   [31:0] f3g8_19_fu_512_p2;
wire   [31:0] f6g5_19_fu_580_p2;
wire   [31:0] f5g6_19_fu_560_p2;
wire   [31:0] f6g9_19_fu_596_p2;
wire   [31:0] f7g8_19_fu_628_p2;
wire   [31:0] f0g5_fu_404_p2;
wire   [31:0] f9g6_19_fu_680_p2;
wire   [31:0] f3g9_38_fu_520_p2;
wire   [31:0] f4g8_19_fu_542_p2;
wire   [31:0] f7g5_38_fu_608_p2;
wire   [31:0] f6g6_19_fu_584_p2;
wire   [31:0] f7g9_38_fu_636_p2;
wire   [31:0] f8g8_19_fu_658_p2;
wire   [31:0] f1g5_2_fu_432_p2;
wire   [31:0] f0g6_fu_408_p2;
wire   [31:0] f4g9_19_fu_546_p2;
wire   [31:0] f5g8_19_fu_568_p2;
wire   [31:0] f8g5_19_fu_646_p2;
wire   [31:0] f7g6_19_fu_614_p2;
wire   [31:0] f8g9_19_fu_662_p2;
wire   [31:0] f9g8_19_fu_688_p2;
wire   [31:0] f2g5_fu_458_p2;
wire   [31:0] f1g6_fu_438_p2;
wire   [31:0] f9g9_38_fu_696_p2;
wire   [31:0] f0g8_fu_416_p2;
wire   [31:0] f3g5_2_fu_492_p2;
wire   [31:0] f2g6_fu_462_p2;
wire   [31:0] f0g9_fu_420_p2;
wire   [31:0] f1g8_fu_446_p2;
wire   [31:0] f4g5_fu_530_p2;
wire   [31:0] f3g6_fu_498_p2;
wire   [31:0] add_ln156_2_fu_909_p2;
wire   [31:0] f1g9_38_fu_856_p2;
wire   [31:0] f7g3_38_fu_887_p2;
wire   [31:0] add_ln156_5_fu_918_p2;
wire   [31:0] add_ln156_6_fu_923_p2;
wire   [31:0] add_ln156_3_fu_913_p2;
wire   [31:0] add_ln156_7_fu_929_p2;
wire   [31:0] add_ln160_2_fu_940_p2;
wire   [31:0] f5g9_38_fu_882_p2;
wire   [31:0] f1g3_2_fu_842_p2;
wire   [31:0] add_ln160_5_fu_949_p2;
wire   [31:0] add_ln160_6_fu_954_p2;
wire   [31:0] add_ln160_3_fu_944_p2;
wire   [31:0] add_ln160_7_fu_960_p2;
wire   [31:0] add_ln182_2_fu_971_p2;
wire   [31:0] carry4_fu_980_p2;
wire   [31:0] add_ln183_2_fu_996_p2;
wire   [31:0] f5g7_38_fu_877_p2;
wire   [31:0] add_ln189_2_fu_1005_p2;
wire   [31:0] f9g7_38_fu_904_p2;
wire   [31:0] add_ln190_2_fu_1015_p2;
wire   [31:0] add_ln196_2_fu_1025_p2;
wire   [31:0] add_ln197_2_fu_1034_p2;
wire   [31:0] f1g7_2_fu_851_p2;
wire   [31:0] add_ln204_2_fu_1043_p2;
wire   [31:0] add_ln211_2_fu_1053_p2;
wire   [31:0] carry0_fu_1154_p2;
wire   [5:0] trunc_ln_fu_1159_p4;
wire   [31:0] add_ln182_4_fu_1173_p2;
wire  signed [31:0] sext_ln182_fu_1169_p1;
wire   [31:0] add_ln182_6_fu_1182_p2;
wire   [31:0] add_ln182_5_fu_1177_p2;
wire   [31:0] add_ln182_7_fu_1187_p2;
wire   [31:0] add_ln182_8_fu_1192_p2;
wire   [31:0] add_ln183_4_fu_1206_p2;
wire  signed [31:0] sext_ln183_fu_1203_p1;
wire   [31:0] add_ln183_6_fu_1215_p2;
wire   [31:0] add_ln183_5_fu_1210_p2;
wire   [31:0] add_ln183_7_fu_1220_p2;
wire   [31:0] add_ln183_8_fu_1225_p2;
wire   [31:0] carry5_fu_1236_p2;
wire   [31:0] carry1_fu_1305_p2;
wire   [6:0] trunc_ln2_fu_1310_p4;
wire   [31:0] f1g1_2_fu_1256_p2;
wire   [31:0] add_ln189_4_fu_1324_p2;
wire  signed [31:0] sext_ln189_fu_1320_p1;
wire   [31:0] f9g3_38_fu_1300_p2;
wire   [31:0] add_ln189_6_fu_1334_p2;
wire   [31:0] add_ln189_5_fu_1329_p2;
wire   [31:0] add_ln189_7_fu_1340_p2;
wire   [31:0] add_ln189_8_fu_1345_p2;
wire   [31:0] f5g1_2_fu_1278_p2;
wire   [31:0] add_ln190_4_fu_1359_p2;
wire  signed [31:0] sext_ln190_fu_1356_p1;
wire   [31:0] f3g3_2_fu_1261_p2;
wire   [31:0] add_ln190_6_fu_1369_p2;
wire   [31:0] add_ln190_5_fu_1364_p2;
wire   [31:0] add_ln190_7_fu_1375_p2;
wire   [31:0] add_ln190_8_fu_1380_p2;
wire   [31:0] add_ln196_4_fu_1391_p2;
wire   [31:0] carry6_fu_1400_p2;
wire   [31:0] add_ln197_4_fu_1416_p2;
wire   [31:0] f7g1_2_fu_1295_p2;
wire   [31:0] add_ln204_4_fu_1425_p2;
wire   [31:0] add_ln211_4_fu_1435_p2;
wire   [31:0] carry2_fu_1444_p2;
wire   [5:0] trunc_ln4_fu_1449_p4;
wire  signed [31:0] sext_ln196_fu_1459_p1;
wire   [31:0] add_ln196_6_fu_1463_p2;
wire   [31:0] add_ln196_7_fu_1468_p2;
wire   [31:0] add_ln196_8_fu_1473_p2;
wire  signed [31:0] sext_ln197_fu_1483_p1;
wire   [31:0] add_ln197_6_fu_1486_p2;
wire   [31:0] add_ln197_7_fu_1491_p2;
wire   [31:0] add_ln197_8_fu_1496_p2;
wire   [31:0] carry7_fu_1506_p2;
wire  signed [31:0] sext_ln204_fu_1527_p1;
wire   [31:0] f5g3_2_fu_1522_p2;
wire   [31:0] add_ln204_6_fu_1530_p2;
wire   [31:0] add_ln204_7_fu_1536_p2;
wire   [31:0] add_ln204_8_fu_1541_p2;
wire   [31:0] carry8_fu_1551_p2;
wire  signed [31:0] sext_ln211_fu_1567_p1;
wire   [31:0] add_ln211_6_fu_1570_p2;
wire   [31:0] add_ln211_7_fu_1575_p2;
wire   [31:0] add_ln211_8_fu_1580_p2;
wire   [31:0] carry9_fu_1590_p2;
(* use_dsp48 = "no" *) wire   [31:0] carry0_1_fu_1609_p2;
wire   [5:0] trunc_ln11_fu_1614_p4;
wire  signed [31:0] sext_ln221_fu_1624_p1;
wire   [31:0] carry3_fu_1633_p2;
wire   [6:0] trunc_ln6_fu_1638_p4;
wire  signed [31:0] sext_ln203_fu_1648_p1;
wire   [31:0] carry4_1_fu_1658_p2;
wire   [5:0] trunc_ln8_fu_1664_p4;
wire  signed [31:0] sext_ln210_fu_1674_p1;
reg   [19:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 20'd1;
end

fe_mul_mac_muladd_13s_7s_32s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 7 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fe_mul_mac_muladd_13s_7s_32s_32_1_1_U1(
    .din0(13'd19),
    .din1(trunc_ln10_reg_2646),
    .din2(h0_reg_2357),
    .dout(grp_fu_1683_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        add_ln156_1_reg_2202 <= add_ln156_1_fu_708_p2;
        add_ln156_4_reg_2207 <= add_ln156_4_fu_714_p2;
        add_ln156_reg_2197 <= add_ln156_fu_702_p2;
        add_ln160_1_reg_2217 <= add_ln160_1_fu_726_p2;
        add_ln160_4_reg_2222 <= add_ln160_4_fu_732_p2;
        add_ln160_reg_2212 <= add_ln160_fu_720_p2;
        add_ln182_1_reg_2232 <= add_ln182_1_fu_744_p2;
        add_ln182_reg_2227 <= add_ln182_fu_738_p2;
        add_ln183_1_reg_2242 <= add_ln183_1_fu_756_p2;
        add_ln183_reg_2237 <= add_ln183_fu_750_p2;
        add_ln189_1_reg_2252 <= add_ln189_1_fu_768_p2;
        add_ln189_reg_2247 <= add_ln189_fu_762_p2;
        add_ln190_1_reg_2262 <= add_ln190_1_fu_780_p2;
        add_ln190_reg_2257 <= add_ln190_fu_774_p2;
        add_ln196_1_reg_2272 <= add_ln196_1_fu_792_p2;
        add_ln196_reg_2267 <= add_ln196_fu_786_p2;
        add_ln197_1_reg_2282 <= add_ln197_1_fu_804_p2;
        add_ln197_reg_2277 <= add_ln197_fu_798_p2;
        add_ln204_1_reg_2292 <= add_ln204_1_fu_816_p2;
        add_ln204_reg_2287 <= add_ln204_fu_810_p2;
        add_ln211_1_reg_2302 <= add_ln211_1_fu_828_p2;
        add_ln211_reg_2297 <= add_ln211_fu_822_p2;
        f0g7_reg_2117 <= f0g7_fu_412_p2;
        f2g2_reg_2137 <= f2g2_fu_454_p2;
        f2g7_reg_2142 <= f2g7_fu_466_p2;
        f4g6_19_reg_2147 <= f4g6_19_fu_534_p2;
        f4g7_19_reg_2152 <= f4g7_19_fu_538_p2;
        f6g7_19_reg_2167 <= f6g7_19_fu_588_p2;
        f8g2_19_reg_2177 <= f8g2_19_fu_642_p2;
        f8g6_19_reg_2182 <= f8g6_19_fu_650_p2;
        f8g7_19_reg_2187 <= f8g7_19_fu_654_p2;
        mul_ln113_reg_2157 <= mul_ln113_fu_564_p2;
        mul_ln115_reg_2162 <= mul_ln115_fu_572_p2;
        mul_ln129_reg_2172 <= mul_ln129_fu_600_p2;
        mul_ln153_reg_2192 <= mul_ln153_fu_684_p2;
        mul_ln69_reg_2122 <= mul_ln69_fu_424_p2;
        mul_ln73_reg_2127 <= mul_ln73_fu_442_p2;
        mul_ln75_reg_2132 <= mul_ln75_fu_450_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        add_ln182_3_reg_2368 <= add_ln182_3_fu_975_p2;
        add_ln183_3_reg_2378 <= add_ln183_3_fu_1000_p2;
        add_ln189_3_reg_2383 <= add_ln189_3_fu_1010_p2;
        add_ln190_3_reg_2388 <= add_ln190_3_fu_1020_p2;
        add_ln196_3_reg_2393 <= add_ln196_3_fu_1029_p2;
        add_ln197_3_reg_2398 <= add_ln197_3_fu_1038_p2;
        add_ln204_3_reg_2403 <= add_ln204_3_fu_1048_p2;
        add_ln211_3_reg_2408 <= add_ln211_3_fu_1057_p2;
        f0g1_reg_2307 <= f0g1_fu_834_p2;
        f1g0_reg_2312 <= f1g0_fu_838_p2;
        f1g4_reg_2317 <= f1g4_fu_847_p2;
        f2g3_reg_2322 <= f2g3_fu_861_p2;
        f3g2_reg_2327 <= f3g2_fu_865_p2;
        f4g1_reg_2332 <= f4g1_fu_869_p2;
        f5g0_reg_2337 <= f5g0_fu_873_p2;
        f7g4_19_reg_2342 <= f7g4_19_fu_892_p2;
        f8g3_19_reg_2347 <= f8g3_19_fu_896_p2;
        f9g2_19_reg_2352 <= f9g2_19_fu_900_p2;
        h0_reg_2357 <= h0_fu_934_p2;
        h4_reg_2363 <= h4_fu_965_p2;
        trunc_ln1_reg_2373 <= {{carry4_fu_980_p2[31:26]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        add_ln196_5_reg_2590 <= add_ln196_5_fu_1395_p2;
        add_ln197_5_reg_2600 <= add_ln197_5_fu_1420_p2;
        add_ln204_5_reg_2605 <= add_ln204_5_fu_1430_p2;
        add_ln211_5_reg_2610 <= add_ln211_5_fu_1439_p2;
        f0g3_reg_2544 <= f0g3_fu_1252_p2;
        f3g4_reg_2549 <= f3g4_fu_1266_p2;
        f4g3_reg_2554 <= f4g3_fu_1270_p2;
        f4g4_reg_2559 <= f4g4_fu_1274_p2;
        f5g4_reg_2569 <= f5g4_fu_1287_p2;
        f6g3_reg_2574 <= f6g3_fu_1291_p2;
        h2_reg_2579 <= h2_fu_1351_p2;
        h6_reg_2585 <= h6_fu_1386_p2;
        mul_ln109_reg_2564 <= mul_ln109_fu_1283_p2;
        trunc_ln5_reg_2595 <= {{carry6_fu_1400_p2[31:26]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        f0_reg_1750 <= f_q0;
        f1_reg_1764 <= f_q1;
        g2_reg_1788 <= g_q0;
        g3_reg_1801 <= g_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        f0g2_reg_2413 <= f0g2_fu_1062_p2;
        f1g2_reg_2423 <= f1g2_fu_1070_p2;
        f2g0_reg_2428 <= f2g0_fu_1074_p2;
        f2g1_reg_2433 <= f2g1_fu_1078_p2;
        f2g4_reg_2438 <= f2g4_fu_1082_p2;
        f3g0_reg_2443 <= f3g0_fu_1086_p2;
        f4g2_reg_2453 <= f4g2_fu_1094_p2;
        f5g2_reg_2463 <= f5g2_fu_1102_p2;
        f6g0_reg_2468 <= f6g0_fu_1106_p2;
        f6g1_reg_2473 <= f6g1_fu_1110_p2;
        f6g2_reg_2478 <= f6g2_fu_1114_p2;
        f7g0_reg_2483 <= f7g0_fu_1118_p2;
        f7g2_reg_2493 <= f7g2_fu_1126_p2;
        f8g0_reg_2498 <= f8g0_fu_1130_p2;
        f8g1_reg_2503 <= f8g1_fu_1134_p2;
        f8g4_19_reg_2508 <= f8g4_19_fu_1138_p2;
        f9g0_reg_2513 <= f9g0_fu_1142_p2;
        f9g4_19_reg_2523 <= f9g4_19_fu_1150_p2;
        h1_reg_2528 <= h1_fu_1198_p2;
        h5_reg_2534 <= h5_fu_1231_p2;
        mul_ln107_reg_2458 <= mul_ln107_fu_1098_p2;
        mul_ln127_reg_2488 <= mul_ln127_fu_1122_p2;
        mul_ln149_reg_2518 <= mul_ln149_fu_1146_p2;
        mul_ln67_reg_2418 <= mul_ln67_fu_1066_p2;
        mul_ln89_reg_2448 <= mul_ln89_fu_1090_p2;
        trunc_ln3_reg_2539 <= {{carry5_fu_1236_p2[31:25]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        f2_reg_1823 <= f_q0;
        f3_reg_1837 <= f_q1;
        g4_reg_1861 <= g_q0;
        g5_reg_1872 <= g_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        f4_reg_1892 <= f_q0;
        f5_reg_1906 <= f_q1;
        g6_reg_1930 <= g_q0;
        g7_reg_1939 <= g_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        f6_reg_1957 <= f_q0;
        f7_reg_1971 <= f_q1;
        g8_reg_1995 <= g_q0;
        g9_reg_2002 <= g_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        f8_reg_2008 <= f_q0;
        f9_reg_2022 <= f_q1;
        g2_19_reg_2036 <= g2_19_fu_351_p2;
        g3_19_reg_2042 <= g3_19_fu_356_p2;
        g4_19_reg_2049 <= g4_19_fu_361_p2;
        g5_19_reg_2057 <= g5_19_fu_366_p2;
        g6_19_reg_2066 <= g6_19_fu_371_p2;
        g7_19_reg_2076 <= g7_19_fu_376_p2;
        g8_19_reg_2087 <= g8_19_fu_381_p2;
        g9_19_reg_2099 <= g9_19_fu_386_p2;
        mul_ln147_reg_2112 <= mul_ln147_fu_391_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        g0_reg_1712 <= g_q0;
        g1_reg_1726 <= g_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        h1_1_reg_2651 <= h1_1_fu_1628_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        h3_reg_2615 <= h3_fu_1478_p2;
        h7_reg_2621 <= h7_fu_1501_p2;
        trunc_ln7_reg_2626 <= {{carry7_fu_1506_p2[31:25]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        h5_1_reg_2656 <= h5_1_fu_1678_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        h8_reg_2631 <= h8_fu_1546_p2;
        trunc_ln9_reg_2636 <= {{carry8_fu_1551_p2[31:26]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        h9_reg_2641 <= h9_fu_1585_p2;
        trunc_ln10_reg_2646 <= {{carry9_fu_1590_p2[31:25]}};
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        f_address0 = 64'd8;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        f_address0 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        f_address0 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        f_address0 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        f_address0 = 64'd0;
    end else begin
        f_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        f_address1 = 64'd9;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        f_address1 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        f_address1 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        f_address1 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        f_address1 = 64'd1;
    end else begin
        f_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4))) begin
        f_ce0 = 1'b1;
    end else begin
        f_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4))) begin
        f_ce1 = 1'b1;
    end else begin
        f_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        g_address0 = 64'd8;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        g_address0 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        g_address0 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        g_address0 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        g_address0 = 64'd0;
    end else begin
        g_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        g_address1 = 64'd9;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        g_address1 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        g_address1 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        g_address1 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        g_address1 = 64'd1;
    end else begin
        g_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        g_ce0 = 1'b1;
    end else begin
        g_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        g_ce1 = 1'b1;
    end else begin
        g_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        h_address0 = 64'd8;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        h_address0 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        h_address0 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        h_address0 = 64'd1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        h_address0 = 64'd0;
    end else begin
        h_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        h_address1 = 64'd9;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        h_address1 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        h_address1 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        h_address1 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        h_address1 = 64'd2;
    end else begin
        h_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state15))) begin
        h_ce0 = 1'b1;
    end else begin
        h_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state17))) begin
        h_ce1 = 1'b1;
    end else begin
        h_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        h_d0 = h8_reg_2631;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        h_d0 = h6_reg_2585;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        h_d0 = h4_1_fu_1652_p2;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        h_d0 = h1_1_reg_2651;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        h_d0 = grp_fu_1683_p3;
    end else begin
        h_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        h_d1 = h9_reg_2641;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        h_d1 = h7_reg_2621;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        h_d1 = h5_1_reg_2656;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        h_d1 = h3_reg_2615;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        h_d1 = h2_reg_2579;
    end else begin
        h_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state15))) begin
        h_we0 = 1'b1;
    end else begin
        h_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state17))) begin
        h_we1 = 1'b1;
    end else begin
        h_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln156_1_fu_708_p2 = (f6g4_19_fu_576_p2 + f5g5_38_fu_554_p2);

assign add_ln156_2_fu_909_p2 = (f4g6_19_reg_2147 + add_ln156_1_reg_2202);

assign add_ln156_3_fu_913_p2 = (add_ln156_reg_2197 + add_ln156_2_fu_909_p2);

assign add_ln156_4_fu_714_p2 = (f9g1_38_fu_666_p2 + f0g0_fu_396_p2);

assign add_ln156_5_fu_918_p2 = (f1g9_38_fu_856_p2 + f8g2_19_reg_2177);

assign add_ln156_6_fu_923_p2 = (f7g3_38_fu_887_p2 + add_ln156_5_fu_918_p2);

assign add_ln156_7_fu_929_p2 = (add_ln156_4_reg_2207 + add_ln156_6_fu_923_p2);

assign add_ln156_fu_702_p2 = (f2g8_19_fu_470_p2 + f3g7_38_fu_506_p2);

assign add_ln160_1_fu_726_p2 = (f0g4_fu_400_p2 + f9g5_38_fu_674_p2);

assign add_ln160_2_fu_940_p2 = (f8g6_19_reg_2182 + add_ln160_1_reg_2217);

assign add_ln160_3_fu_944_p2 = (add_ln160_reg_2212 + add_ln160_2_fu_940_p2);

assign add_ln160_4_fu_732_p2 = (f3g1_2_fu_482_p2 + f4g0_fu_526_p2);

assign add_ln160_5_fu_949_p2 = (f5g9_38_fu_882_p2 + f2g2_reg_2137);

assign add_ln160_6_fu_954_p2 = (f1g3_2_fu_842_p2 + add_ln160_5_fu_949_p2);

assign add_ln160_7_fu_960_p2 = (add_ln160_4_reg_2222 + add_ln160_6_fu_954_p2);

assign add_ln160_fu_720_p2 = (f6g8_19_fu_592_p2 + f7g7_38_fu_622_p2);

assign add_ln182_1_fu_744_p2 = (f6g5_19_fu_580_p2 + f5g6_19_fu_560_p2);

assign add_ln182_2_fu_971_p2 = (f4g7_19_reg_2152 + add_ln182_1_reg_2232);

assign add_ln182_3_fu_975_p2 = (add_ln182_reg_2227 + add_ln182_2_fu_971_p2);

assign add_ln182_4_fu_1173_p2 = (f9g2_19_reg_2352 + f0g1_reg_2307);

assign add_ln182_5_fu_1177_p2 = (f1g0_reg_2312 + add_ln182_4_fu_1173_p2);

assign add_ln182_6_fu_1182_p2 = ($signed(sext_ln182_fu_1169_p1) + $signed(f8g3_19_reg_2347));

assign add_ln182_7_fu_1187_p2 = (f7g4_19_reg_2342 + add_ln182_6_fu_1182_p2);

assign add_ln182_8_fu_1192_p2 = (add_ln182_5_fu_1177_p2 + add_ln182_7_fu_1187_p2);

assign add_ln182_fu_738_p2 = (f2g9_19_fu_474_p2 + f3g8_19_fu_512_p2);

assign add_ln183_1_fu_756_p2 = (f0g5_fu_404_p2 + f9g6_19_fu_680_p2);

assign add_ln183_2_fu_996_p2 = (f8g7_19_reg_2187 + add_ln183_1_reg_2242);

assign add_ln183_3_fu_1000_p2 = (add_ln183_reg_2237 + add_ln183_2_fu_996_p2);

assign add_ln183_4_fu_1206_p2 = (f3g2_reg_2327 + f4g1_reg_2332);

assign add_ln183_5_fu_1210_p2 = (f5g0_reg_2337 + add_ln183_4_fu_1206_p2);

assign add_ln183_6_fu_1215_p2 = ($signed(sext_ln183_fu_1203_p1) + $signed(f2g3_reg_2322));

assign add_ln183_7_fu_1220_p2 = (f1g4_reg_2317 + add_ln183_6_fu_1215_p2);

assign add_ln183_8_fu_1225_p2 = (add_ln183_5_fu_1210_p2 + add_ln183_7_fu_1220_p2);

assign add_ln183_fu_750_p2 = (f6g9_19_fu_596_p2 + f7g8_19_fu_628_p2);

assign add_ln189_1_fu_768_p2 = (f7g5_38_fu_608_p2 + f6g6_19_fu_584_p2);

assign add_ln189_2_fu_1005_p2 = (f5g7_38_fu_877_p2 + add_ln189_1_reg_2252);

assign add_ln189_3_fu_1010_p2 = (add_ln189_reg_2247 + add_ln189_2_fu_1005_p2);

assign add_ln189_4_fu_1324_p2 = (f0g2_reg_2413 + f1g1_2_fu_1256_p2);

assign add_ln189_5_fu_1329_p2 = (f2g0_reg_2428 + add_ln189_4_fu_1324_p2);

assign add_ln189_6_fu_1334_p2 = ($signed(sext_ln189_fu_1320_p1) + $signed(f9g3_38_fu_1300_p2));

assign add_ln189_7_fu_1340_p2 = (f8g4_19_reg_2508 + add_ln189_6_fu_1334_p2);

assign add_ln189_8_fu_1345_p2 = (add_ln189_5_fu_1329_p2 + add_ln189_7_fu_1340_p2);

assign add_ln189_fu_762_p2 = (f3g9_38_fu_520_p2 + f4g8_19_fu_542_p2);

assign add_ln190_1_fu_780_p2 = (f1g5_2_fu_432_p2 + f0g6_fu_408_p2);

assign add_ln190_2_fu_1015_p2 = (f9g7_38_fu_904_p2 + add_ln190_1_reg_2262);

assign add_ln190_3_fu_1020_p2 = (add_ln190_reg_2257 + add_ln190_2_fu_1015_p2);

assign add_ln190_4_fu_1359_p2 = (f4g2_reg_2453 + f5g1_2_fu_1278_p2);

assign add_ln190_5_fu_1364_p2 = (f6g0_reg_2468 + add_ln190_4_fu_1359_p2);

assign add_ln190_6_fu_1369_p2 = ($signed(sext_ln190_fu_1356_p1) + $signed(f3g3_2_fu_1261_p2));

assign add_ln190_7_fu_1375_p2 = (f2g4_reg_2438 + add_ln190_6_fu_1369_p2);

assign add_ln190_8_fu_1380_p2 = (add_ln190_5_fu_1364_p2 + add_ln190_7_fu_1375_p2);

assign add_ln190_fu_774_p2 = (f7g9_38_fu_636_p2 + f8g8_19_fu_658_p2);

assign add_ln196_1_fu_792_p2 = (f8g5_19_fu_646_p2 + f7g6_19_fu_614_p2);

assign add_ln196_2_fu_1025_p2 = (f6g7_19_reg_2167 + add_ln196_1_reg_2272);

assign add_ln196_3_fu_1029_p2 = (add_ln196_reg_2267 + add_ln196_2_fu_1025_p2);

assign add_ln196_4_fu_1391_p2 = (f1g2_reg_2423 + f2g1_reg_2433);

assign add_ln196_5_fu_1395_p2 = (f3g0_reg_2443 + add_ln196_4_fu_1391_p2);

assign add_ln196_6_fu_1463_p2 = ($signed(sext_ln196_fu_1459_p1) + $signed(f0g3_reg_2544));

assign add_ln196_7_fu_1468_p2 = (f9g4_19_reg_2523 + add_ln196_6_fu_1463_p2);

assign add_ln196_8_fu_1473_p2 = (add_ln196_5_reg_2590 + add_ln196_7_fu_1468_p2);

assign add_ln196_fu_786_p2 = (f4g9_19_fu_546_p2 + f5g8_19_fu_568_p2);

assign add_ln197_1_fu_804_p2 = (f2g5_fu_458_p2 + f1g6_fu_438_p2);

assign add_ln197_2_fu_1034_p2 = (f0g7_reg_2117 + add_ln197_1_reg_2282);

assign add_ln197_3_fu_1038_p2 = (add_ln197_reg_2277 + add_ln197_2_fu_1034_p2);

assign add_ln197_4_fu_1416_p2 = (f5g2_reg_2463 + f6g1_reg_2473);

assign add_ln197_5_fu_1420_p2 = (f7g0_reg_2483 + add_ln197_4_fu_1416_p2);

assign add_ln197_6_fu_1486_p2 = ($signed(sext_ln197_fu_1483_p1) + $signed(f4g3_reg_2554));

assign add_ln197_7_fu_1491_p2 = (f3g4_reg_2549 + add_ln197_6_fu_1486_p2);

assign add_ln197_8_fu_1496_p2 = (add_ln197_5_reg_2600 + add_ln197_7_fu_1491_p2);

assign add_ln197_fu_798_p2 = (f8g9_19_fu_662_p2 + f9g8_19_fu_688_p2);

assign add_ln204_1_fu_816_p2 = (f3g5_2_fu_492_p2 + f2g6_fu_462_p2);

assign add_ln204_2_fu_1043_p2 = (f1g7_2_fu_851_p2 + add_ln204_1_reg_2292);

assign add_ln204_3_fu_1048_p2 = (add_ln204_reg_2287 + add_ln204_2_fu_1043_p2);

assign add_ln204_4_fu_1425_p2 = (f6g2_reg_2478 + f7g1_2_fu_1295_p2);

assign add_ln204_5_fu_1430_p2 = (f8g0_reg_2498 + add_ln204_4_fu_1425_p2);

assign add_ln204_6_fu_1530_p2 = ($signed(sext_ln204_fu_1527_p1) + $signed(f5g3_2_fu_1522_p2));

assign add_ln204_7_fu_1536_p2 = (f4g4_reg_2559 + add_ln204_6_fu_1530_p2);

assign add_ln204_8_fu_1541_p2 = (add_ln204_5_reg_2605 + add_ln204_7_fu_1536_p2);

assign add_ln204_fu_810_p2 = (f9g9_38_fu_696_p2 + f0g8_fu_416_p2);

assign add_ln211_1_fu_828_p2 = (f4g5_fu_530_p2 + f3g6_fu_498_p2);

assign add_ln211_2_fu_1053_p2 = (f2g7_reg_2142 + add_ln211_1_reg_2302);

assign add_ln211_3_fu_1057_p2 = (add_ln211_reg_2297 + add_ln211_2_fu_1053_p2);

assign add_ln211_4_fu_1435_p2 = (f7g2_reg_2493 + f8g1_reg_2503);

assign add_ln211_5_fu_1439_p2 = (f9g0_reg_2513 + add_ln211_4_fu_1435_p2);

assign add_ln211_6_fu_1570_p2 = ($signed(sext_ln211_fu_1567_p1) + $signed(f6g3_reg_2574));

assign add_ln211_7_fu_1575_p2 = (f5g4_reg_2569 + add_ln211_6_fu_1570_p2);

assign add_ln211_8_fu_1580_p2 = (add_ln211_5_reg_2610 + add_ln211_7_fu_1575_p2);

assign add_ln211_fu_822_p2 = (f0g9_fu_420_p2 + f1g8_fu_446_p2);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign carry0_1_fu_1609_p2 = ($signed(32'd33554432) + $signed(grp_fu_1683_p3));

assign carry0_fu_1154_p2 = ($signed(32'd33554432) + $signed(h0_reg_2357));

assign carry1_fu_1305_p2 = (32'd16777216 + h1_reg_2528);

assign carry2_fu_1444_p2 = (32'd33554432 + h2_reg_2579);

assign carry3_fu_1633_p2 = (32'd16777216 + h3_reg_2615);

assign carry4_1_fu_1658_p2 = (32'd33554432 + h4_1_fu_1652_p2);

assign carry4_fu_980_p2 = (32'd33554432 + h4_fu_965_p2);

assign carry5_fu_1236_p2 = (32'd16777216 + h5_fu_1231_p2);

assign carry6_fu_1400_p2 = (32'd33554432 + h6_fu_1386_p2);

assign carry7_fu_1506_p2 = (32'd16777216 + h7_fu_1501_p2);

assign carry8_fu_1551_p2 = (32'd33554432 + h8_fu_1546_p2);

assign carry9_fu_1590_p2 = (32'd16777216 + h9_fu_1585_p2);

assign f0g0_fu_396_p2 = ($signed(f0_reg_1750) * $signed(g0_reg_1712));

assign f0g1_fu_834_p2 = ($signed(f0_reg_1750) * $signed(g1_reg_1726));

assign f0g2_fu_1062_p2 = ($signed(f0_reg_1750) * $signed(g2_reg_1788));

assign f0g3_fu_1252_p2 = ($signed(f0_reg_1750) * $signed(g3_reg_1801));

assign f0g4_fu_400_p2 = ($signed(f0_reg_1750) * $signed(g4_reg_1861));

assign f0g5_fu_404_p2 = ($signed(f0_reg_1750) * $signed(g5_reg_1872));

assign f0g6_fu_408_p2 = ($signed(f0_reg_1750) * $signed(g6_reg_1930));

assign f0g7_fu_412_p2 = ($signed(f0_reg_1750) * $signed(g7_reg_1939));

assign f0g8_fu_416_p2 = ($signed(f0_reg_1750) * $signed(g8_reg_1995));

assign f0g9_fu_420_p2 = ($signed(f0_reg_1750) * $signed(g9_reg_2002));

assign f1g0_fu_838_p2 = ($signed(f1_reg_1764) * $signed(g0_reg_1712));

assign f1g1_2_fu_1256_p2 = mul_ln67_reg_2418 << 32'd1;

assign f1g2_fu_1070_p2 = ($signed(f1_reg_1764) * $signed(g2_reg_1788));

assign f1g3_2_fu_842_p2 = mul_ln69_reg_2122 << 32'd1;

assign f1g4_fu_847_p2 = ($signed(f1_reg_1764) * $signed(g4_reg_1861));

assign f1g5_2_fu_432_p2 = mul_ln71_fu_428_p2 << 32'd1;

assign f1g6_fu_438_p2 = ($signed(f1_reg_1764) * $signed(g6_reg_1930));

assign f1g7_2_fu_851_p2 = mul_ln73_reg_2127 << 32'd1;

assign f1g8_fu_446_p2 = ($signed(f1_reg_1764) * $signed(g8_reg_1995));

assign f1g9_38_fu_856_p2 = mul_ln75_reg_2132 << 32'd1;

assign f2g0_fu_1074_p2 = ($signed(f2_reg_1823) * $signed(g0_reg_1712));

assign f2g1_fu_1078_p2 = ($signed(f2_reg_1823) * $signed(g1_reg_1726));

assign f2g2_fu_454_p2 = ($signed(f2_reg_1823) * $signed(g2_reg_1788));

assign f2g3_fu_861_p2 = ($signed(f2_reg_1823) * $signed(g3_reg_1801));

assign f2g4_fu_1082_p2 = ($signed(f2_reg_1823) * $signed(g4_reg_1861));

assign f2g5_fu_458_p2 = ($signed(f2_reg_1823) * $signed(g5_reg_1872));

assign f2g6_fu_462_p2 = ($signed(f2_reg_1823) * $signed(g6_reg_1930));

assign f2g7_fu_466_p2 = ($signed(f2_reg_1823) * $signed(g7_reg_1939));

assign f2g8_19_fu_470_p2 = ($signed(g8_19_reg_2087) * $signed(f2_reg_1823));

assign f2g9_19_fu_474_p2 = ($signed(g9_19_reg_2099) * $signed(f2_reg_1823));

assign f3g0_fu_1086_p2 = ($signed(f3_reg_1837) * $signed(g0_reg_1712));

assign f3g1_2_fu_482_p2 = mul_ln87_fu_478_p2 << 32'd1;

assign f3g2_fu_865_p2 = ($signed(f3_reg_1837) * $signed(g2_reg_1788));

assign f3g3_2_fu_1261_p2 = mul_ln89_reg_2448 << 32'd1;

assign f3g4_fu_1266_p2 = ($signed(f3_reg_1837) * $signed(g4_reg_1861));

assign f3g5_2_fu_492_p2 = mul_ln91_fu_488_p2 << 32'd1;

assign f3g6_fu_498_p2 = ($signed(f3_reg_1837) * $signed(g6_reg_1930));

assign f3g7_38_fu_506_p2 = mul_ln93_fu_502_p2 << 32'd1;

assign f3g8_19_fu_512_p2 = ($signed(g8_19_reg_2087) * $signed(f3_reg_1837));

assign f3g9_38_fu_520_p2 = mul_ln95_fu_516_p2 << 32'd1;

assign f4g0_fu_526_p2 = ($signed(f4_reg_1892) * $signed(g0_reg_1712));

assign f4g1_fu_869_p2 = ($signed(f4_reg_1892) * $signed(g1_reg_1726));

assign f4g2_fu_1094_p2 = ($signed(f4_reg_1892) * $signed(g2_reg_1788));

assign f4g3_fu_1270_p2 = ($signed(f4_reg_1892) * $signed(g3_reg_1801));

assign f4g4_fu_1274_p2 = ($signed(f4_reg_1892) * $signed(g4_reg_1861));

assign f4g5_fu_530_p2 = ($signed(f4_reg_1892) * $signed(g5_reg_1872));

assign f4g6_19_fu_534_p2 = ($signed(g6_19_reg_2066) * $signed(f4_reg_1892));

assign f4g7_19_fu_538_p2 = ($signed(g7_19_reg_2076) * $signed(f4_reg_1892));

assign f4g8_19_fu_542_p2 = ($signed(g8_19_reg_2087) * $signed(f4_reg_1892));

assign f4g9_19_fu_546_p2 = ($signed(g9_19_reg_2099) * $signed(f4_reg_1892));

assign f5g0_fu_873_p2 = ($signed(f5_reg_1906) * $signed(g0_reg_1712));

assign f5g1_2_fu_1278_p2 = mul_ln107_reg_2458 << 32'd1;

assign f5g2_fu_1102_p2 = ($signed(f5_reg_1906) * $signed(g2_reg_1788));

assign f5g3_2_fu_1522_p2 = mul_ln109_reg_2564 << 32'd1;

assign f5g4_fu_1287_p2 = ($signed(f5_reg_1906) * $signed(g4_reg_1861));

assign f5g5_38_fu_554_p2 = mul_ln111_fu_550_p2 << 32'd1;

assign f5g6_19_fu_560_p2 = ($signed(g6_19_reg_2066) * $signed(f5_reg_1906));

assign f5g7_38_fu_877_p2 = mul_ln113_reg_2157 << 32'd1;

assign f5g8_19_fu_568_p2 = ($signed(g8_19_reg_2087) * $signed(f5_reg_1906));

assign f5g9_38_fu_882_p2 = mul_ln115_reg_2162 << 32'd1;

assign f6g0_fu_1106_p2 = ($signed(f6_reg_1957) * $signed(g0_reg_1712));

assign f6g1_fu_1110_p2 = ($signed(f6_reg_1957) * $signed(g1_reg_1726));

assign f6g2_fu_1114_p2 = ($signed(f6_reg_1957) * $signed(g2_reg_1788));

assign f6g3_fu_1291_p2 = ($signed(f6_reg_1957) * $signed(g3_reg_1801));

assign f6g4_19_fu_576_p2 = ($signed(g4_19_reg_2049) * $signed(f6_reg_1957));

assign f6g5_19_fu_580_p2 = ($signed(g5_19_reg_2057) * $signed(f6_reg_1957));

assign f6g6_19_fu_584_p2 = ($signed(g6_19_reg_2066) * $signed(f6_reg_1957));

assign f6g7_19_fu_588_p2 = ($signed(g7_19_reg_2076) * $signed(f6_reg_1957));

assign f6g8_19_fu_592_p2 = ($signed(g8_19_reg_2087) * $signed(f6_reg_1957));

assign f6g9_19_fu_596_p2 = ($signed(g9_19_reg_2099) * $signed(f6_reg_1957));

assign f7g0_fu_1118_p2 = ($signed(f7_reg_1971) * $signed(g0_reg_1712));

assign f7g1_2_fu_1295_p2 = mul_ln127_reg_2488 << 32'd1;

assign f7g2_fu_1126_p2 = ($signed(f7_reg_1971) * $signed(g2_reg_1788));

assign f7g3_38_fu_887_p2 = mul_ln129_reg_2172 << 32'd1;

assign f7g4_19_fu_892_p2 = ($signed(g4_19_reg_2049) * $signed(f7_reg_1971));

assign f7g5_38_fu_608_p2 = mul_ln131_fu_604_p2 << 32'd1;

assign f7g6_19_fu_614_p2 = ($signed(g6_19_reg_2066) * $signed(f7_reg_1971));

assign f7g7_38_fu_622_p2 = mul_ln133_fu_618_p2 << 32'd1;

assign f7g8_19_fu_628_p2 = ($signed(g8_19_reg_2087) * $signed(f7_reg_1971));

assign f7g9_38_fu_636_p2 = mul_ln135_fu_632_p2 << 32'd1;

assign f8g0_fu_1130_p2 = ($signed(f8_reg_2008) * $signed(g0_reg_1712));

assign f8g1_fu_1134_p2 = ($signed(f8_reg_2008) * $signed(g1_reg_1726));

assign f8g2_19_fu_642_p2 = ($signed(g2_19_reg_2036) * $signed(f8_reg_2008));

assign f8g3_19_fu_896_p2 = ($signed(g3_19_reg_2042) * $signed(f8_reg_2008));

assign f8g4_19_fu_1138_p2 = ($signed(g4_19_reg_2049) * $signed(f8_reg_2008));

assign f8g5_19_fu_646_p2 = ($signed(g5_19_reg_2057) * $signed(f8_reg_2008));

assign f8g6_19_fu_650_p2 = ($signed(g6_19_reg_2066) * $signed(f8_reg_2008));

assign f8g7_19_fu_654_p2 = ($signed(g7_19_reg_2076) * $signed(f8_reg_2008));

assign f8g8_19_fu_658_p2 = ($signed(g8_19_reg_2087) * $signed(f8_reg_2008));

assign f8g9_19_fu_662_p2 = ($signed(g9_19_reg_2099) * $signed(f8_reg_2008));

assign f9g0_fu_1142_p2 = ($signed(f9_reg_2022) * $signed(g0_reg_1712));

assign f9g1_38_fu_666_p2 = ($signed(f9_reg_2022) * $signed(mul_ln147_reg_2112));

assign f9g2_19_fu_900_p2 = ($signed(g2_19_reg_2036) * $signed(f9_reg_2022));

assign f9g3_38_fu_1300_p2 = mul_ln149_reg_2518 << 32'd1;

assign f9g4_19_fu_1150_p2 = ($signed(g4_19_reg_2049) * $signed(f9_reg_2022));

assign f9g5_38_fu_674_p2 = mul_ln151_fu_670_p2 << 32'd1;

assign f9g6_19_fu_680_p2 = ($signed(g6_19_reg_2066) * $signed(f9_reg_2022));

assign f9g7_38_fu_904_p2 = mul_ln153_reg_2192 << 32'd1;

assign f9g8_19_fu_688_p2 = ($signed(g8_19_reg_2087) * $signed(f9_reg_2022));

assign f9g9_38_fu_696_p2 = mul_ln155_fu_692_p2 << 32'd1;

assign g2_19_fu_351_p2 = ($signed({{1'b0}, {32'd19}}) * $signed(g2_reg_1788));

assign g3_19_fu_356_p2 = ($signed({{1'b0}, {32'd19}}) * $signed(g3_reg_1801));

assign g4_19_fu_361_p2 = ($signed({{1'b0}, {32'd19}}) * $signed(g4_reg_1861));

assign g5_19_fu_366_p2 = ($signed({{1'b0}, {32'd19}}) * $signed(g5_reg_1872));

assign g6_19_fu_371_p2 = ($signed({{1'b0}, {32'd19}}) * $signed(g6_reg_1930));

assign g7_19_fu_376_p2 = ($signed({{1'b0}, {32'd19}}) * $signed(g7_reg_1939));

assign g8_19_fu_381_p2 = ($signed({{1'b0}, {32'd19}}) * $signed(g8_reg_1995));

assign g9_19_fu_386_p2 = ($signed({{1'b0}, {32'd19}}) * $signed(g9_reg_2002));

assign h0_fu_934_p2 = (add_ln156_3_fu_913_p2 + add_ln156_7_fu_929_p2);

assign h1_1_fu_1628_p2 = ($signed(sext_ln221_fu_1624_p1) + $signed(h1_reg_2528));

assign h1_fu_1198_p2 = (add_ln182_3_reg_2368 + add_ln182_8_fu_1192_p2);

assign h2_fu_1351_p2 = (add_ln189_3_reg_2383 + add_ln189_8_fu_1345_p2);

assign h3_fu_1478_p2 = (add_ln196_3_reg_2393 + add_ln196_8_fu_1473_p2);

assign h4_1_fu_1652_p2 = ($signed(sext_ln203_fu_1648_p1) + $signed(h4_reg_2363));

assign h4_fu_965_p2 = (add_ln160_3_fu_944_p2 + add_ln160_7_fu_960_p2);

assign h5_1_fu_1678_p2 = ($signed(sext_ln210_fu_1674_p1) + $signed(h5_reg_2534));

assign h5_fu_1231_p2 = (add_ln183_3_reg_2378 + add_ln183_8_fu_1225_p2);

assign h6_fu_1386_p2 = (add_ln190_3_reg_2388 + add_ln190_8_fu_1380_p2);

assign h7_fu_1501_p2 = (add_ln197_3_reg_2398 + add_ln197_8_fu_1496_p2);

assign h8_fu_1546_p2 = (add_ln204_3_reg_2403 + add_ln204_8_fu_1541_p2);

assign h9_fu_1585_p2 = (add_ln211_3_reg_2408 + add_ln211_8_fu_1580_p2);

assign mul_ln107_fu_1098_p2 = ($signed(f5_reg_1906) * $signed(g1_reg_1726));

assign mul_ln109_fu_1283_p2 = ($signed(f5_reg_1906) * $signed(g3_reg_1801));

assign mul_ln111_fu_550_p2 = ($signed(g5_19_reg_2057) * $signed(f5_reg_1906));

assign mul_ln113_fu_564_p2 = ($signed(g7_19_reg_2076) * $signed(f5_reg_1906));

assign mul_ln115_fu_572_p2 = ($signed(g9_19_reg_2099) * $signed(f5_reg_1906));

assign mul_ln127_fu_1122_p2 = ($signed(f7_reg_1971) * $signed(g1_reg_1726));

assign mul_ln129_fu_600_p2 = ($signed(g3_19_reg_2042) * $signed(f7_reg_1971));

assign mul_ln131_fu_604_p2 = ($signed(g5_19_reg_2057) * $signed(f7_reg_1971));

assign mul_ln133_fu_618_p2 = ($signed(g7_19_reg_2076) * $signed(f7_reg_1971));

assign mul_ln135_fu_632_p2 = ($signed(g9_19_reg_2099) * $signed(f7_reg_1971));

assign mul_ln147_fu_391_p2 = ($signed({{1'b0}, {32'd38}}) * $signed(g1_reg_1726));

assign mul_ln149_fu_1146_p2 = ($signed(g3_19_reg_2042) * $signed(f9_reg_2022));

assign mul_ln151_fu_670_p2 = ($signed(g5_19_reg_2057) * $signed(f9_reg_2022));

assign mul_ln153_fu_684_p2 = ($signed(g7_19_reg_2076) * $signed(f9_reg_2022));

assign mul_ln155_fu_692_p2 = ($signed(g9_19_reg_2099) * $signed(f9_reg_2022));

assign mul_ln67_fu_1066_p2 = ($signed(f1_reg_1764) * $signed(g1_reg_1726));

assign mul_ln69_fu_424_p2 = ($signed(f1_reg_1764) * $signed(g3_reg_1801));

assign mul_ln71_fu_428_p2 = ($signed(f1_reg_1764) * $signed(g5_reg_1872));

assign mul_ln73_fu_442_p2 = ($signed(f1_reg_1764) * $signed(g7_reg_1939));

assign mul_ln75_fu_450_p2 = ($signed(g9_19_reg_2099) * $signed(f1_reg_1764));

assign mul_ln87_fu_478_p2 = ($signed(f3_reg_1837) * $signed(g1_reg_1726));

assign mul_ln89_fu_1090_p2 = ($signed(f3_reg_1837) * $signed(g3_reg_1801));

assign mul_ln91_fu_488_p2 = ($signed(f3_reg_1837) * $signed(g5_reg_1872));

assign mul_ln93_fu_502_p2 = ($signed(g7_19_reg_2076) * $signed(f3_reg_1837));

assign mul_ln95_fu_516_p2 = ($signed(g9_19_reg_2099) * $signed(f3_reg_1837));

assign sext_ln182_fu_1169_p1 = $signed(trunc_ln_fu_1159_p4);

assign sext_ln183_fu_1203_p1 = $signed(trunc_ln1_reg_2373);

assign sext_ln189_fu_1320_p1 = $signed(trunc_ln2_fu_1310_p4);

assign sext_ln190_fu_1356_p1 = $signed(trunc_ln3_reg_2539);

assign sext_ln196_fu_1459_p1 = $signed(trunc_ln4_fu_1449_p4);

assign sext_ln197_fu_1483_p1 = $signed(trunc_ln5_reg_2595);

assign sext_ln203_fu_1648_p1 = $signed(trunc_ln6_fu_1638_p4);

assign sext_ln204_fu_1527_p1 = $signed(trunc_ln7_reg_2626);

assign sext_ln210_fu_1674_p1 = $signed(trunc_ln8_fu_1664_p4);

assign sext_ln211_fu_1567_p1 = $signed(trunc_ln9_reg_2636);

assign sext_ln221_fu_1624_p1 = $signed(trunc_ln11_fu_1614_p4);

assign trunc_ln11_fu_1614_p4 = {{carry0_1_fu_1609_p2[31:26]}};

assign trunc_ln2_fu_1310_p4 = {{carry1_fu_1305_p2[31:25]}};

assign trunc_ln4_fu_1449_p4 = {{carry2_fu_1444_p2[31:26]}};

assign trunc_ln6_fu_1638_p4 = {{carry3_fu_1633_p2[31:25]}};

assign trunc_ln8_fu_1664_p4 = {{carry4_1_fu_1658_p2[31:26]}};

assign trunc_ln_fu_1159_p4 = {{carry0_fu_1154_p2[31:26]}};

endmodule //fe_mul
