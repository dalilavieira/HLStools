// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="nv4CalcArbitration,hls_ip_2019_1,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7k160t-fbg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.365000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=30,HLS_SYN_FF=6058,HLS_SYN_LUT=5875,HLS_VERSION=2019_1}" *)

module nv4CalcArbitration (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        fifo_valid,
        fifo_valid_ap_vld,
        fifo_graphics_lwm,
        fifo_graphics_lwm_ap_vld,
        fifo_graphics_burst_size,
        fifo_graphics_burst_size_ap_vld,
        fifo_video_lwm,
        fifo_video_lwm_ap_vld,
        fifo_video_burst_size,
        fifo_video_burst_size_ap_vld,
        arb_pclk_khz,
        arb_mclk_khz,
        arb_nvclk_khz,
        arb_mem_page_miss,
        arb_mem_latency,
        arb_memory_width,
        arb_enable_video,
        arb_pix_bpp,
        arb_enable_mp
);

parameter    ap_ST_fsm_state1 = 308'd1;
parameter    ap_ST_fsm_state2 = 308'd2;
parameter    ap_ST_fsm_state3 = 308'd4;
parameter    ap_ST_fsm_state4 = 308'd8;
parameter    ap_ST_fsm_state5 = 308'd16;
parameter    ap_ST_fsm_state6 = 308'd32;
parameter    ap_ST_fsm_state7 = 308'd64;
parameter    ap_ST_fsm_state8 = 308'd128;
parameter    ap_ST_fsm_state9 = 308'd256;
parameter    ap_ST_fsm_state10 = 308'd512;
parameter    ap_ST_fsm_state11 = 308'd1024;
parameter    ap_ST_fsm_state12 = 308'd2048;
parameter    ap_ST_fsm_state13 = 308'd4096;
parameter    ap_ST_fsm_state14 = 308'd8192;
parameter    ap_ST_fsm_state15 = 308'd16384;
parameter    ap_ST_fsm_state16 = 308'd32768;
parameter    ap_ST_fsm_state17 = 308'd65536;
parameter    ap_ST_fsm_state18 = 308'd131072;
parameter    ap_ST_fsm_state19 = 308'd262144;
parameter    ap_ST_fsm_state20 = 308'd524288;
parameter    ap_ST_fsm_state21 = 308'd1048576;
parameter    ap_ST_fsm_state22 = 308'd2097152;
parameter    ap_ST_fsm_state23 = 308'd4194304;
parameter    ap_ST_fsm_state24 = 308'd8388608;
parameter    ap_ST_fsm_state25 = 308'd16777216;
parameter    ap_ST_fsm_state26 = 308'd33554432;
parameter    ap_ST_fsm_state27 = 308'd67108864;
parameter    ap_ST_fsm_state28 = 308'd134217728;
parameter    ap_ST_fsm_state29 = 308'd268435456;
parameter    ap_ST_fsm_state30 = 308'd536870912;
parameter    ap_ST_fsm_state31 = 308'd1073741824;
parameter    ap_ST_fsm_state32 = 308'd2147483648;
parameter    ap_ST_fsm_state33 = 308'd4294967296;
parameter    ap_ST_fsm_state34 = 308'd8589934592;
parameter    ap_ST_fsm_state35 = 308'd17179869184;
parameter    ap_ST_fsm_state36 = 308'd34359738368;
parameter    ap_ST_fsm_state37 = 308'd68719476736;
parameter    ap_ST_fsm_state38 = 308'd137438953472;
parameter    ap_ST_fsm_state39 = 308'd274877906944;
parameter    ap_ST_fsm_state40 = 308'd549755813888;
parameter    ap_ST_fsm_state41 = 308'd1099511627776;
parameter    ap_ST_fsm_state42 = 308'd2199023255552;
parameter    ap_ST_fsm_state43 = 308'd4398046511104;
parameter    ap_ST_fsm_state44 = 308'd8796093022208;
parameter    ap_ST_fsm_state45 = 308'd17592186044416;
parameter    ap_ST_fsm_state46 = 308'd35184372088832;
parameter    ap_ST_fsm_state47 = 308'd70368744177664;
parameter    ap_ST_fsm_state48 = 308'd140737488355328;
parameter    ap_ST_fsm_state49 = 308'd281474976710656;
parameter    ap_ST_fsm_state50 = 308'd562949953421312;
parameter    ap_ST_fsm_state51 = 308'd1125899906842624;
parameter    ap_ST_fsm_state52 = 308'd2251799813685248;
parameter    ap_ST_fsm_state53 = 308'd4503599627370496;
parameter    ap_ST_fsm_state54 = 308'd9007199254740992;
parameter    ap_ST_fsm_state55 = 308'd18014398509481984;
parameter    ap_ST_fsm_state56 = 308'd36028797018963968;
parameter    ap_ST_fsm_state57 = 308'd72057594037927936;
parameter    ap_ST_fsm_state58 = 308'd144115188075855872;
parameter    ap_ST_fsm_state59 = 308'd288230376151711744;
parameter    ap_ST_fsm_state60 = 308'd576460752303423488;
parameter    ap_ST_fsm_state61 = 308'd1152921504606846976;
parameter    ap_ST_fsm_state62 = 308'd2305843009213693952;
parameter    ap_ST_fsm_state63 = 308'd4611686018427387904;
parameter    ap_ST_fsm_state64 = 308'd9223372036854775808;
parameter    ap_ST_fsm_state65 = 308'd18446744073709551616;
parameter    ap_ST_fsm_state66 = 308'd36893488147419103232;
parameter    ap_ST_fsm_state67 = 308'd73786976294838206464;
parameter    ap_ST_fsm_state68 = 308'd147573952589676412928;
parameter    ap_ST_fsm_state69 = 308'd295147905179352825856;
parameter    ap_ST_fsm_state70 = 308'd590295810358705651712;
parameter    ap_ST_fsm_state71 = 308'd1180591620717411303424;
parameter    ap_ST_fsm_state72 = 308'd2361183241434822606848;
parameter    ap_ST_fsm_state73 = 308'd4722366482869645213696;
parameter    ap_ST_fsm_state74 = 308'd9444732965739290427392;
parameter    ap_ST_fsm_state75 = 308'd18889465931478580854784;
parameter    ap_ST_fsm_state76 = 308'd37778931862957161709568;
parameter    ap_ST_fsm_state77 = 308'd75557863725914323419136;
parameter    ap_ST_fsm_state78 = 308'd151115727451828646838272;
parameter    ap_ST_fsm_state79 = 308'd302231454903657293676544;
parameter    ap_ST_fsm_state80 = 308'd604462909807314587353088;
parameter    ap_ST_fsm_state81 = 308'd1208925819614629174706176;
parameter    ap_ST_fsm_state82 = 308'd2417851639229258349412352;
parameter    ap_ST_fsm_state83 = 308'd4835703278458516698824704;
parameter    ap_ST_fsm_state84 = 308'd9671406556917033397649408;
parameter    ap_ST_fsm_state85 = 308'd19342813113834066795298816;
parameter    ap_ST_fsm_state86 = 308'd38685626227668133590597632;
parameter    ap_ST_fsm_state87 = 308'd77371252455336267181195264;
parameter    ap_ST_fsm_state88 = 308'd154742504910672534362390528;
parameter    ap_ST_fsm_state89 = 308'd309485009821345068724781056;
parameter    ap_ST_fsm_state90 = 308'd618970019642690137449562112;
parameter    ap_ST_fsm_state91 = 308'd1237940039285380274899124224;
parameter    ap_ST_fsm_state92 = 308'd2475880078570760549798248448;
parameter    ap_ST_fsm_state93 = 308'd4951760157141521099596496896;
parameter    ap_ST_fsm_state94 = 308'd9903520314283042199192993792;
parameter    ap_ST_fsm_state95 = 308'd19807040628566084398385987584;
parameter    ap_ST_fsm_state96 = 308'd39614081257132168796771975168;
parameter    ap_ST_fsm_state97 = 308'd79228162514264337593543950336;
parameter    ap_ST_fsm_state98 = 308'd158456325028528675187087900672;
parameter    ap_ST_fsm_state99 = 308'd316912650057057350374175801344;
parameter    ap_ST_fsm_state100 = 308'd633825300114114700748351602688;
parameter    ap_ST_fsm_state101 = 308'd1267650600228229401496703205376;
parameter    ap_ST_fsm_state102 = 308'd2535301200456458802993406410752;
parameter    ap_ST_fsm_state103 = 308'd5070602400912917605986812821504;
parameter    ap_ST_fsm_state104 = 308'd10141204801825835211973625643008;
parameter    ap_ST_fsm_state105 = 308'd20282409603651670423947251286016;
parameter    ap_ST_fsm_state106 = 308'd40564819207303340847894502572032;
parameter    ap_ST_fsm_state107 = 308'd81129638414606681695789005144064;
parameter    ap_ST_fsm_state108 = 308'd162259276829213363391578010288128;
parameter    ap_ST_fsm_state109 = 308'd324518553658426726783156020576256;
parameter    ap_ST_fsm_state110 = 308'd649037107316853453566312041152512;
parameter    ap_ST_fsm_state111 = 308'd1298074214633706907132624082305024;
parameter    ap_ST_fsm_state112 = 308'd2596148429267413814265248164610048;
parameter    ap_ST_fsm_state113 = 308'd5192296858534827628530496329220096;
parameter    ap_ST_fsm_state114 = 308'd10384593717069655257060992658440192;
parameter    ap_ST_fsm_state115 = 308'd20769187434139310514121985316880384;
parameter    ap_ST_fsm_state116 = 308'd41538374868278621028243970633760768;
parameter    ap_ST_fsm_state117 = 308'd83076749736557242056487941267521536;
parameter    ap_ST_fsm_state118 = 308'd166153499473114484112975882535043072;
parameter    ap_ST_fsm_state119 = 308'd332306998946228968225951765070086144;
parameter    ap_ST_fsm_state120 = 308'd664613997892457936451903530140172288;
parameter    ap_ST_fsm_state121 = 308'd1329227995784915872903807060280344576;
parameter    ap_ST_fsm_state122 = 308'd2658455991569831745807614120560689152;
parameter    ap_ST_fsm_state123 = 308'd5316911983139663491615228241121378304;
parameter    ap_ST_fsm_state124 = 308'd10633823966279326983230456482242756608;
parameter    ap_ST_fsm_state125 = 308'd21267647932558653966460912964485513216;
parameter    ap_ST_fsm_state126 = 308'd42535295865117307932921825928971026432;
parameter    ap_ST_fsm_state127 = 308'd85070591730234615865843651857942052864;
parameter    ap_ST_fsm_state128 = 308'd170141183460469231731687303715884105728;
parameter    ap_ST_fsm_state129 = 308'd340282366920938463463374607431768211456;
parameter    ap_ST_fsm_state130 = 308'd680564733841876926926749214863536422912;
parameter    ap_ST_fsm_state131 = 308'd1361129467683753853853498429727072845824;
parameter    ap_ST_fsm_state132 = 308'd2722258935367507707706996859454145691648;
parameter    ap_ST_fsm_state133 = 308'd5444517870735015415413993718908291383296;
parameter    ap_ST_fsm_state134 = 308'd10889035741470030830827987437816582766592;
parameter    ap_ST_fsm_state135 = 308'd21778071482940061661655974875633165533184;
parameter    ap_ST_fsm_state136 = 308'd43556142965880123323311949751266331066368;
parameter    ap_ST_fsm_state137 = 308'd87112285931760246646623899502532662132736;
parameter    ap_ST_fsm_state138 = 308'd174224571863520493293247799005065324265472;
parameter    ap_ST_fsm_state139 = 308'd348449143727040986586495598010130648530944;
parameter    ap_ST_fsm_state140 = 308'd696898287454081973172991196020261297061888;
parameter    ap_ST_fsm_state141 = 308'd1393796574908163946345982392040522594123776;
parameter    ap_ST_fsm_state142 = 308'd2787593149816327892691964784081045188247552;
parameter    ap_ST_fsm_state143 = 308'd5575186299632655785383929568162090376495104;
parameter    ap_ST_fsm_state144 = 308'd11150372599265311570767859136324180752990208;
parameter    ap_ST_fsm_state145 = 308'd22300745198530623141535718272648361505980416;
parameter    ap_ST_fsm_state146 = 308'd44601490397061246283071436545296723011960832;
parameter    ap_ST_fsm_state147 = 308'd89202980794122492566142873090593446023921664;
parameter    ap_ST_fsm_state148 = 308'd178405961588244985132285746181186892047843328;
parameter    ap_ST_fsm_state149 = 308'd356811923176489970264571492362373784095686656;
parameter    ap_ST_fsm_state150 = 308'd713623846352979940529142984724747568191373312;
parameter    ap_ST_fsm_state151 = 308'd1427247692705959881058285969449495136382746624;
parameter    ap_ST_fsm_state152 = 308'd2854495385411919762116571938898990272765493248;
parameter    ap_ST_fsm_state153 = 308'd5708990770823839524233143877797980545530986496;
parameter    ap_ST_fsm_state154 = 308'd11417981541647679048466287755595961091061972992;
parameter    ap_ST_fsm_state155 = 308'd22835963083295358096932575511191922182123945984;
parameter    ap_ST_fsm_state156 = 308'd45671926166590716193865151022383844364247891968;
parameter    ap_ST_fsm_state157 = 308'd91343852333181432387730302044767688728495783936;
parameter    ap_ST_fsm_state158 = 308'd182687704666362864775460604089535377456991567872;
parameter    ap_ST_fsm_state159 = 308'd365375409332725729550921208179070754913983135744;
parameter    ap_ST_fsm_state160 = 308'd730750818665451459101842416358141509827966271488;
parameter    ap_ST_fsm_state161 = 308'd1461501637330902918203684832716283019655932542976;
parameter    ap_ST_fsm_state162 = 308'd2923003274661805836407369665432566039311865085952;
parameter    ap_ST_fsm_state163 = 308'd5846006549323611672814739330865132078623730171904;
parameter    ap_ST_fsm_state164 = 308'd11692013098647223345629478661730264157247460343808;
parameter    ap_ST_fsm_state165 = 308'd23384026197294446691258957323460528314494920687616;
parameter    ap_ST_fsm_state166 = 308'd46768052394588893382517914646921056628989841375232;
parameter    ap_ST_fsm_state167 = 308'd93536104789177786765035829293842113257979682750464;
parameter    ap_ST_fsm_state168 = 308'd187072209578355573530071658587684226515959365500928;
parameter    ap_ST_fsm_state169 = 308'd374144419156711147060143317175368453031918731001856;
parameter    ap_ST_fsm_state170 = 308'd748288838313422294120286634350736906063837462003712;
parameter    ap_ST_fsm_state171 = 308'd1496577676626844588240573268701473812127674924007424;
parameter    ap_ST_fsm_state172 = 308'd2993155353253689176481146537402947624255349848014848;
parameter    ap_ST_fsm_state173 = 308'd5986310706507378352962293074805895248510699696029696;
parameter    ap_ST_fsm_state174 = 308'd11972621413014756705924586149611790497021399392059392;
parameter    ap_ST_fsm_state175 = 308'd23945242826029513411849172299223580994042798784118784;
parameter    ap_ST_fsm_state176 = 308'd47890485652059026823698344598447161988085597568237568;
parameter    ap_ST_fsm_state177 = 308'd95780971304118053647396689196894323976171195136475136;
parameter    ap_ST_fsm_state178 = 308'd191561942608236107294793378393788647952342390272950272;
parameter    ap_ST_fsm_state179 = 308'd383123885216472214589586756787577295904684780545900544;
parameter    ap_ST_fsm_state180 = 308'd766247770432944429179173513575154591809369561091801088;
parameter    ap_ST_fsm_state181 = 308'd1532495540865888858358347027150309183618739122183602176;
parameter    ap_ST_fsm_state182 = 308'd3064991081731777716716694054300618367237478244367204352;
parameter    ap_ST_fsm_state183 = 308'd6129982163463555433433388108601236734474956488734408704;
parameter    ap_ST_fsm_state184 = 308'd12259964326927110866866776217202473468949912977468817408;
parameter    ap_ST_fsm_state185 = 308'd24519928653854221733733552434404946937899825954937634816;
parameter    ap_ST_fsm_state186 = 308'd49039857307708443467467104868809893875799651909875269632;
parameter    ap_ST_fsm_state187 = 308'd98079714615416886934934209737619787751599303819750539264;
parameter    ap_ST_fsm_state188 = 308'd196159429230833773869868419475239575503198607639501078528;
parameter    ap_ST_fsm_state189 = 308'd392318858461667547739736838950479151006397215279002157056;
parameter    ap_ST_fsm_state190 = 308'd784637716923335095479473677900958302012794430558004314112;
parameter    ap_ST_fsm_state191 = 308'd1569275433846670190958947355801916604025588861116008628224;
parameter    ap_ST_fsm_state192 = 308'd3138550867693340381917894711603833208051177722232017256448;
parameter    ap_ST_fsm_state193 = 308'd6277101735386680763835789423207666416102355444464034512896;
parameter    ap_ST_fsm_state194 = 308'd12554203470773361527671578846415332832204710888928069025792;
parameter    ap_ST_fsm_state195 = 308'd25108406941546723055343157692830665664409421777856138051584;
parameter    ap_ST_fsm_state196 = 308'd50216813883093446110686315385661331328818843555712276103168;
parameter    ap_ST_fsm_state197 = 308'd100433627766186892221372630771322662657637687111424552206336;
parameter    ap_ST_fsm_state198 = 308'd200867255532373784442745261542645325315275374222849104412672;
parameter    ap_ST_fsm_state199 = 308'd401734511064747568885490523085290650630550748445698208825344;
parameter    ap_ST_fsm_state200 = 308'd803469022129495137770981046170581301261101496891396417650688;
parameter    ap_ST_fsm_state201 = 308'd1606938044258990275541962092341162602522202993782792835301376;
parameter    ap_ST_fsm_state202 = 308'd3213876088517980551083924184682325205044405987565585670602752;
parameter    ap_ST_fsm_state203 = 308'd6427752177035961102167848369364650410088811975131171341205504;
parameter    ap_ST_fsm_state204 = 308'd12855504354071922204335696738729300820177623950262342682411008;
parameter    ap_ST_fsm_state205 = 308'd25711008708143844408671393477458601640355247900524685364822016;
parameter    ap_ST_fsm_state206 = 308'd51422017416287688817342786954917203280710495801049370729644032;
parameter    ap_ST_fsm_state207 = 308'd102844034832575377634685573909834406561420991602098741459288064;
parameter    ap_ST_fsm_state208 = 308'd205688069665150755269371147819668813122841983204197482918576128;
parameter    ap_ST_fsm_state209 = 308'd411376139330301510538742295639337626245683966408394965837152256;
parameter    ap_ST_fsm_state210 = 308'd822752278660603021077484591278675252491367932816789931674304512;
parameter    ap_ST_fsm_state211 = 308'd1645504557321206042154969182557350504982735865633579863348609024;
parameter    ap_ST_fsm_state212 = 308'd3291009114642412084309938365114701009965471731267159726697218048;
parameter    ap_ST_fsm_state213 = 308'd6582018229284824168619876730229402019930943462534319453394436096;
parameter    ap_ST_fsm_state214 = 308'd13164036458569648337239753460458804039861886925068638906788872192;
parameter    ap_ST_fsm_state215 = 308'd26328072917139296674479506920917608079723773850137277813577744384;
parameter    ap_ST_fsm_state216 = 308'd52656145834278593348959013841835216159447547700274555627155488768;
parameter    ap_ST_fsm_state217 = 308'd105312291668557186697918027683670432318895095400549111254310977536;
parameter    ap_ST_fsm_state218 = 308'd210624583337114373395836055367340864637790190801098222508621955072;
parameter    ap_ST_fsm_state219 = 308'd421249166674228746791672110734681729275580381602196445017243910144;
parameter    ap_ST_fsm_state220 = 308'd842498333348457493583344221469363458551160763204392890034487820288;
parameter    ap_ST_fsm_state221 = 308'd1684996666696914987166688442938726917102321526408785780068975640576;
parameter    ap_ST_fsm_state222 = 308'd3369993333393829974333376885877453834204643052817571560137951281152;
parameter    ap_ST_fsm_state223 = 308'd6739986666787659948666753771754907668409286105635143120275902562304;
parameter    ap_ST_fsm_state224 = 308'd13479973333575319897333507543509815336818572211270286240551805124608;
parameter    ap_ST_fsm_state225 = 308'd26959946667150639794667015087019630673637144422540572481103610249216;
parameter    ap_ST_fsm_state226 = 308'd53919893334301279589334030174039261347274288845081144962207220498432;
parameter    ap_ST_fsm_state227 = 308'd107839786668602559178668060348078522694548577690162289924414440996864;
parameter    ap_ST_fsm_state228 = 308'd215679573337205118357336120696157045389097155380324579848828881993728;
parameter    ap_ST_fsm_state229 = 308'd431359146674410236714672241392314090778194310760649159697657763987456;
parameter    ap_ST_fsm_state230 = 308'd862718293348820473429344482784628181556388621521298319395315527974912;
parameter    ap_ST_fsm_state231 = 308'd1725436586697640946858688965569256363112777243042596638790631055949824;
parameter    ap_ST_fsm_state232 = 308'd3450873173395281893717377931138512726225554486085193277581262111899648;
parameter    ap_ST_fsm_state233 = 308'd6901746346790563787434755862277025452451108972170386555162524223799296;
parameter    ap_ST_fsm_state234 = 308'd13803492693581127574869511724554050904902217944340773110325048447598592;
parameter    ap_ST_fsm_state235 = 308'd27606985387162255149739023449108101809804435888681546220650096895197184;
parameter    ap_ST_fsm_state236 = 308'd55213970774324510299478046898216203619608871777363092441300193790394368;
parameter    ap_ST_fsm_state237 = 308'd110427941548649020598956093796432407239217743554726184882600387580788736;
parameter    ap_ST_fsm_state238 = 308'd220855883097298041197912187592864814478435487109452369765200775161577472;
parameter    ap_ST_fsm_state239 = 308'd441711766194596082395824375185729628956870974218904739530401550323154944;
parameter    ap_ST_fsm_state240 = 308'd883423532389192164791648750371459257913741948437809479060803100646309888;
parameter    ap_ST_fsm_state241 = 308'd1766847064778384329583297500742918515827483896875618958121606201292619776;
parameter    ap_ST_fsm_state242 = 308'd3533694129556768659166595001485837031654967793751237916243212402585239552;
parameter    ap_ST_fsm_state243 = 308'd7067388259113537318333190002971674063309935587502475832486424805170479104;
parameter    ap_ST_fsm_state244 = 308'd14134776518227074636666380005943348126619871175004951664972849610340958208;
parameter    ap_ST_fsm_state245 = 308'd28269553036454149273332760011886696253239742350009903329945699220681916416;
parameter    ap_ST_fsm_state246 = 308'd56539106072908298546665520023773392506479484700019806659891398441363832832;
parameter    ap_ST_fsm_state247 = 308'd113078212145816597093331040047546785012958969400039613319782796882727665664;
parameter    ap_ST_fsm_state248 = 308'd226156424291633194186662080095093570025917938800079226639565593765455331328;
parameter    ap_ST_fsm_state249 = 308'd452312848583266388373324160190187140051835877600158453279131187530910662656;
parameter    ap_ST_fsm_state250 = 308'd904625697166532776746648320380374280103671755200316906558262375061821325312;
parameter    ap_ST_fsm_state251 = 308'd1809251394333065553493296640760748560207343510400633813116524750123642650624;
parameter    ap_ST_fsm_state252 = 308'd3618502788666131106986593281521497120414687020801267626233049500247285301248;
parameter    ap_ST_fsm_state253 = 308'd7237005577332262213973186563042994240829374041602535252466099000494570602496;
parameter    ap_ST_fsm_state254 = 308'd14474011154664524427946373126085988481658748083205070504932198000989141204992;
parameter    ap_ST_fsm_state255 = 308'd28948022309329048855892746252171976963317496166410141009864396001978282409984;
parameter    ap_ST_fsm_state256 = 308'd57896044618658097711785492504343953926634992332820282019728792003956564819968;
parameter    ap_ST_fsm_state257 = 308'd115792089237316195423570985008687907853269984665640564039457584007913129639936;
parameter    ap_ST_fsm_state258 = 308'd231584178474632390847141970017375815706539969331281128078915168015826259279872;
parameter    ap_ST_fsm_state259 = 308'd463168356949264781694283940034751631413079938662562256157830336031652518559744;
parameter    ap_ST_fsm_state260 = 308'd926336713898529563388567880069503262826159877325124512315660672063305037119488;
parameter    ap_ST_fsm_state261 = 308'd1852673427797059126777135760139006525652319754650249024631321344126610074238976;
parameter    ap_ST_fsm_state262 = 308'd3705346855594118253554271520278013051304639509300498049262642688253220148477952;
parameter    ap_ST_fsm_state263 = 308'd7410693711188236507108543040556026102609279018600996098525285376506440296955904;
parameter    ap_ST_fsm_state264 = 308'd14821387422376473014217086081112052205218558037201992197050570753012880593911808;
parameter    ap_ST_fsm_state265 = 308'd29642774844752946028434172162224104410437116074403984394101141506025761187823616;
parameter    ap_ST_fsm_state266 = 308'd59285549689505892056868344324448208820874232148807968788202283012051522375647232;
parameter    ap_ST_fsm_state267 = 308'd118571099379011784113736688648896417641748464297615937576404566024103044751294464;
parameter    ap_ST_fsm_state268 = 308'd237142198758023568227473377297792835283496928595231875152809132048206089502588928;
parameter    ap_ST_fsm_state269 = 308'd474284397516047136454946754595585670566993857190463750305618264096412179005177856;
parameter    ap_ST_fsm_state270 = 308'd948568795032094272909893509191171341133987714380927500611236528192824358010355712;
parameter    ap_ST_fsm_state271 = 308'd1897137590064188545819787018382342682267975428761855001222473056385648716020711424;
parameter    ap_ST_fsm_state272 = 308'd3794275180128377091639574036764685364535950857523710002444946112771297432041422848;
parameter    ap_ST_fsm_state273 = 308'd7588550360256754183279148073529370729071901715047420004889892225542594864082845696;
parameter    ap_ST_fsm_state274 = 308'd15177100720513508366558296147058741458143803430094840009779784451085189728165691392;
parameter    ap_ST_fsm_state275 = 308'd30354201441027016733116592294117482916287606860189680019559568902170379456331382784;
parameter    ap_ST_fsm_state276 = 308'd60708402882054033466233184588234965832575213720379360039119137804340758912662765568;
parameter    ap_ST_fsm_state277 = 308'd121416805764108066932466369176469931665150427440758720078238275608681517825325531136;
parameter    ap_ST_fsm_state278 = 308'd242833611528216133864932738352939863330300854881517440156476551217363035650651062272;
parameter    ap_ST_fsm_state279 = 308'd485667223056432267729865476705879726660601709763034880312953102434726071301302124544;
parameter    ap_ST_fsm_state280 = 308'd971334446112864535459730953411759453321203419526069760625906204869452142602604249088;
parameter    ap_ST_fsm_state281 = 308'd1942668892225729070919461906823518906642406839052139521251812409738904285205208498176;
parameter    ap_ST_fsm_state282 = 308'd3885337784451458141838923813647037813284813678104279042503624819477808570410416996352;
parameter    ap_ST_fsm_state283 = 308'd7770675568902916283677847627294075626569627356208558085007249638955617140820833992704;
parameter    ap_ST_fsm_state284 = 308'd15541351137805832567355695254588151253139254712417116170014499277911234281641667985408;
parameter    ap_ST_fsm_state285 = 308'd31082702275611665134711390509176302506278509424834232340028998555822468563283335970816;
parameter    ap_ST_fsm_state286 = 308'd62165404551223330269422781018352605012557018849668464680057997111644937126566671941632;
parameter    ap_ST_fsm_state287 = 308'd124330809102446660538845562036705210025114037699336929360115994223289874253133343883264;
parameter    ap_ST_fsm_state288 = 308'd248661618204893321077691124073410420050228075398673858720231988446579748506266687766528;
parameter    ap_ST_fsm_state289 = 308'd497323236409786642155382248146820840100456150797347717440463976893159497012533375533056;
parameter    ap_ST_fsm_state290 = 308'd994646472819573284310764496293641680200912301594695434880927953786318994025066751066112;
parameter    ap_ST_fsm_state291 = 308'd1989292945639146568621528992587283360401824603189390869761855907572637988050133502132224;
parameter    ap_ST_fsm_state292 = 308'd3978585891278293137243057985174566720803649206378781739523711815145275976100267004264448;
parameter    ap_ST_fsm_state293 = 308'd7957171782556586274486115970349133441607298412757563479047423630290551952200534008528896;
parameter    ap_ST_fsm_state294 = 308'd15914343565113172548972231940698266883214596825515126958094847260581103904401068017057792;
parameter    ap_ST_fsm_state295 = 308'd31828687130226345097944463881396533766429193651030253916189694521162207808802136034115584;
parameter    ap_ST_fsm_state296 = 308'd63657374260452690195888927762793067532858387302060507832379389042324415617604272068231168;
parameter    ap_ST_fsm_state297 = 308'd127314748520905380391777855525586135065716774604121015664758778084648831235208544136462336;
parameter    ap_ST_fsm_state298 = 308'd254629497041810760783555711051172270131433549208242031329517556169297662470417088272924672;
parameter    ap_ST_fsm_state299 = 308'd509258994083621521567111422102344540262867098416484062659035112338595324940834176545849344;
parameter    ap_ST_fsm_state300 = 308'd1018517988167243043134222844204689080525734196832968125318070224677190649881668353091698688;
parameter    ap_ST_fsm_state301 = 308'd2037035976334486086268445688409378161051468393665936250636140449354381299763336706183397376;
parameter    ap_ST_fsm_state302 = 308'd4074071952668972172536891376818756322102936787331872501272280898708762599526673412366794752;
parameter    ap_ST_fsm_state303 = 308'd8148143905337944345073782753637512644205873574663745002544561797417525199053346824733589504;
parameter    ap_ST_fsm_state304 = 308'd16296287810675888690147565507275025288411747149327490005089123594835050398106693649467179008;
parameter    ap_ST_fsm_state305 = 308'd32592575621351777380295131014550050576823494298654980010178247189670100796213387298934358016;
parameter    ap_ST_fsm_state306 = 308'd65185151242703554760590262029100101153646988597309960020356494379340201592426774597868716032;
parameter    ap_ST_fsm_state307 = 308'd130370302485407109521180524058200202307293977194619920040712988758680403184853549195737432064;
parameter    ap_ST_fsm_state308 = 308'd260740604970814219042361048116400404614587954389239840081425977517360806369707098391474864128;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [31:0] fifo_valid;
output   fifo_valid_ap_vld;
output  [31:0] fifo_graphics_lwm;
output   fifo_graphics_lwm_ap_vld;
output  [31:0] fifo_graphics_burst_size;
output   fifo_graphics_burst_size_ap_vld;
output  [31:0] fifo_video_lwm;
output   fifo_video_lwm_ap_vld;
output  [31:0] fifo_video_burst_size;
output   fifo_video_burst_size_ap_vld;
input  [31:0] arb_pclk_khz;
input  [31:0] arb_mclk_khz;
input  [31:0] arb_nvclk_khz;
input  [31:0] arb_mem_page_miss;
input  [31:0] arb_mem_latency;
input  [31:0] arb_memory_width;
input  [31:0] arb_enable_video;
input  [31:0] arb_pix_bpp;
input  [31:0] arb_enable_mp;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[31:0] fifo_valid;
reg fifo_valid_ap_vld;
reg fifo_graphics_lwm_ap_vld;
reg fifo_graphics_burst_size_ap_vld;
reg fifo_video_lwm_ap_vld;
reg fifo_video_burst_size_ap_vld;

(* fsm_encoding = "none" *) reg   [307:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [0:0] tmp_2_reg_1087;
reg   [28:0] tmp_reg_1092;
reg   [28:0] tmp_1_reg_1097;
wire    ap_CS_fsm_state2;
wire   [31:0] select_ln60_fu_424_p3;
reg   [31:0] select_ln60_reg_1124;
wire   [0:0] icmp_ln73_fu_432_p2;
reg   [0:0] icmp_ln73_reg_1129;
wire  signed [31:0] sext_ln111_fu_457_p1;
reg  signed [31:0] sext_ln111_reg_1133;
wire   [31:0] mul_ln114_fu_461_p2;
reg   [31:0] mul_ln114_reg_1138;
wire   [0:0] icmp_ln81_fu_479_p2;
reg   [0:0] icmp_ln81_reg_1143;
wire   [31:0] mul_ln103_fu_485_p2;
reg   [31:0] mul_ln103_reg_1147;
wire   [28:0] and_ln_fu_491_p3;
reg   [28:0] and_ln_reg_1152;
wire   [31:0] zext_ln66_fu_499_p1;
reg   [31:0] zext_ln66_reg_1158;
wire    ap_CS_fsm_state3;
wire  signed [31:0] mclk_loop_fu_508_p2;
reg  signed [31:0] mclk_loop_reg_1163;
wire   [0:0] ap_phi_mux_found_0_phi_fu_258_p4;
wire   [31:0] mul_ln70_fu_513_p2;
reg   [31:0] mul_ln70_reg_1168;
wire    ap_CS_fsm_state4;
wire   [31:0] grp_fu_518_p2;
reg   [31:0] us_m_reg_1173;
wire    ap_CS_fsm_state40;
wire   [31:0] grp_fu_526_p2;
reg   [31:0] us_n_reg_1178;
wire   [31:0] grp_fu_531_p2;
reg   [31:0] us_p_reg_1183;
wire   [31:0] grp_fu_522_p2;
reg   [31:0] vpm_us_reg_1188;
wire   [31:0] us_crt_fu_558_p2;
wire    ap_CS_fsm_state72;
wire   [31:0] add_ln88_1_fu_578_p2;
reg   [31:0] add_ln88_1_reg_1203;
wire    ap_CS_fsm_state105;
wire  signed [31:0] us_video_fu_589_p2;
reg  signed [31:0] us_video_reg_1208;
wire   [31:0] grp_fu_541_p2;
wire    ap_CS_fsm_state133;
wire   [31:0] mul_ln89_fu_594_p2;
reg   [31:0] mul_ln89_reg_1219;
wire    ap_CS_fsm_state134;
reg   [0:0] tmp_3_reg_1224;
wire   [64:0] mul_ln89_1_fu_615_p2;
reg   [64:0] mul_ln89_1_reg_1230;
wire    ap_CS_fsm_state135;
reg   [12:0] tmp_5_reg_1235;
wire  signed [12:0] vlwm_fu_664_p2;
reg  signed [12:0] vlwm_reg_1241;
wire    ap_CS_fsm_state136;
wire  signed [31:0] sext_ln90_fu_670_p1;
reg  signed [31:0] sext_ln90_reg_1248;
wire    ap_CS_fsm_state137;
wire   [31:0] zext_ln94_1_fu_703_p1;
reg   [31:0] zext_ln94_1_reg_1253;
wire   [28:0] mul_ln97_fu_1055_p2;
reg   [28:0] mul_ln97_reg_1258;
wire    ap_CS_fsm_state170;
wire   [31:0] grp_fu_715_p2;
wire    ap_CS_fsm_state203;
wire    ap_CS_fsm_state204;
wire   [31:0] grp_fu_741_p2;
wire    ap_CS_fsm_state231;
wire   [31:0] us_crt_1_fu_756_p2;
wire    ap_CS_fsm_state266;
wire  signed [31:0] mul_ln117_fu_762_p2;
reg  signed [31:0] mul_ln117_reg_1289;
wire    ap_CS_fsm_state267;
reg   [0:0] tmp_6_reg_1294;
wire   [64:0] mul_ln108_fu_778_p2;
reg   [64:0] mul_ln108_reg_1300;
wire    ap_CS_fsm_state268;
reg   [12:0] tmp_8_reg_1305;
wire   [12:0] trunc_ln108_fu_836_p1;
reg   [12:0] trunc_ln108_reg_1310;
wire    ap_CS_fsm_state269;
wire   [11:0] trunc_ln109_fu_840_p1;
reg   [11:0] trunc_ln109_reg_1316;
wire  signed [12:0] m1_fu_844_p2;
reg  signed [12:0] m1_reg_1321;
wire    ap_CS_fsm_state270;
wire   [31:0] mul_ln121_fu_853_p2;
reg   [31:0] mul_ln121_reg_1327;
wire  signed [31:0] grp_fu_858_p2;
reg  signed [31:0] p1_reg_1332;
wire    ap_CS_fsm_state306;
wire   [31:0] mul_ln122_fu_862_p2;
reg   [31:0] mul_ln122_reg_1337;
wire    ap_CS_fsm_state307;
wire   [30:0] select_ln148_fu_1036_p3;
wire    ap_CS_fsm_state308;
reg   [0:0] found_0_reg_254;
reg   [0:0] ap_phi_mux_found_7_phi_fu_316_p10;
reg   [30:0] vlwm_0_reg_265;
reg   [31:0] ap_phi_mux_video_fill_us_0_phi_fu_279_p4;
reg   [31:0] video_fill_us_0_reg_276;
wire   [31:0] grp_fu_568_p2;
reg   [31:0] video_fill_us_1_reg_285;
reg  signed [31:0] p_pn_reg_294;
reg   [31:0] vlwm_1_reg_303;
wire   [0:0] grp_fu_334_p2;
wire   [0:0] and_ln123_fu_947_p2;
wire   [0:0] or_ln130_fu_985_p2;
wire   [0:0] icmp_ln138_fu_991_p2;
reg   [31:0] mclk_extra_3_fu_154;
wire   [31:0] grp_fu_343_p2;
reg   [31:0] vbs_0_fu_158;
wire  signed [31:0] mul_ln111_fu_354_p0;
wire  signed [31:0] mul_ln111_fu_354_p1;
wire   [31:0] mul_ln111_fu_354_p2;
wire   [31:0] sub_ln111_fu_368_p2;
wire  signed [25:0] trunc_ln_fu_404_p4;
wire   [0:0] icmp_ln60_fu_418_p2;
wire   [29:0] zext_ln111_fu_438_p1;
wire   [29:0] sub_ln111_1_fu_441_p2;
wire   [29:0] zext_ln111_1_fu_447_p1;
wire   [29:0] crtc_drain_rate_fu_450_p3;
wire  signed [31:0] mul_ln114_fu_461_p1;
wire  signed [31:0] mul_ln81_fu_473_p0;
wire  signed [25:0] mul_ln81_fu_473_p1;
wire   [31:0] shl_ln81_fu_467_p2;
wire   [31:0] mul_ln81_fu_473_p2;
wire  signed [31:0] mul_ln103_fu_485_p1;
wire   [31:0] add_ln69_fu_503_p2;
wire    ap_CS_fsm_state5;
wire   [25:0] grp_fu_526_p0;
wire    ap_CS_fsm_state11;
wire   [25:0] grp_fu_531_p0;
wire   [24:0] grp_fu_541_p0;
wire   [31:0] add_ln116_1_fu_552_p2;
wire   [31:0] add_ln116_fu_546_p2;
wire   [28:0] grp_fu_536_p2;
wire  signed [29:0] grp_fu_568_p0;
wire   [31:0] add_ln88_fu_574_p2;
wire   [31:0] add_ln88_2_fu_583_p2;
wire  signed [31:0] mul_ln89_fu_594_p0;
wire   [31:0] shl_ln89_fu_606_p2;
wire  signed [31:0] mul_ln89_1_fu_615_p1;
wire   [64:0] sub_ln89_fu_631_p2;
wire   [12:0] tmp_4_fu_636_p4;
wire   [12:0] select_ln89_fu_646_p3;
wire   [12:0] sub_ln89_1_fu_652_p2;
wire   [12:0] select_ln89_1_fu_658_p3;
wire   [0:0] icmp_ln94_fu_678_p2;
wire   [0:0] icmp_ln92_fu_673_p2;
wire   [7:0] select_ln94_1_fu_683_p3;
wire   [7:0] select_ln94_fu_691_p3;
wire    ap_CS_fsm_state138;
wire   [28:0] grp_fu_707_p2;
wire  signed [29:0] grp_fu_715_p0;
wire   [22:0] lshr_ln_fu_728_p4;
wire   [23:0] grp_fu_741_p0;
wire   [31:0] grp_fu_720_p2;
wire   [31:0] add_ln105_1_fu_750_p2;
wire   [31:0] add_ln105_fu_746_p2;
wire  signed [29:0] mul_ln117_fu_762_p1;
wire  signed [31:0] mul_ln108_fu_778_p1;
wire   [64:0] sub_ln108_fu_794_p2;
wire   [12:0] tmp_7_fu_799_p4;
wire  signed [31:0] sext_ln108_1_fu_809_p1;
wire  signed [31:0] sext_ln108_2_fu_813_p1;
wire   [31:0] select_ln108_fu_816_p3;
wire   [31:0] sub_ln108_1_fu_823_p2;
wire   [31:0] clwm_fu_829_p3;
wire  signed [12:0] mul_ln121_fu_853_p0;
wire  signed [31:0] mul_ln121_fu_853_p1;
wire    ap_CS_fsm_state271;
wire  signed [31:0] mul_ln122_fu_862_p1;
wire   [31:0] sub_ln122_fu_890_p2;
wire   [28:0] tmp_s_fu_895_p4;
wire   [29:0] zext_ln122_fu_905_p1;
wire   [28:0] tmp_10_fu_915_p4;
wire   [0:0] tmp_9_fu_883_p3;
wire   [29:0] sub_ln122_1_fu_909_p2;
wire   [29:0] zext_ln122_1_fu_924_p1;
wire   [29:0] p1_1_fu_928_p3;
wire  signed [29:0] sext_ln120_1_fu_880_p1;
wire   [0:0] icmp_ln123_fu_936_p2;
wire   [0:0] icmp_ln123_1_fu_942_p2;
wire   [12:0] clwm_1_fu_870_p2;
wire   [3:0] tmp_11_fu_953_p4;
wire   [23:0] tmp_12_fu_969_p4;
wire   [0:0] icmp_ln130_fu_963_p2;
wire   [0:0] icmp_ln130_1_fu_979_p2;
wire   [0:0] icmp_ln146_fu_1001_p2;
wire   [11:0] add_ln109_1_fu_875_p2;
wire   [11:0] data_fu_1007_p3;
wire   [24:0] tmp_13_fu_1020_p4;
wire   [0:0] icmp_ln148_fu_1030_p2;
wire   [30:0] trunc_ln117_fu_866_p1;
wire   [31:0] zext_ln148_fu_1044_p1;
wire   [20:0] mul_ln97_fu_1055_p0;
wire   [7:0] mul_ln97_fu_1055_p1;
reg    grp_fu_518_ap_start;
wire    grp_fu_518_ap_done;
reg    grp_fu_522_ap_start;
wire    grp_fu_522_ap_done;
reg    grp_fu_526_ap_start;
wire    grp_fu_526_ap_done;
reg    grp_fu_531_ap_start;
wire    grp_fu_531_ap_done;
reg    grp_fu_536_ap_start;
wire    grp_fu_536_ap_done;
reg    grp_fu_541_ap_start;
wire    grp_fu_541_ap_done;
reg    grp_fu_568_ap_start;
wire    grp_fu_568_ap_done;
reg    grp_fu_707_ap_start;
wire    grp_fu_707_ap_done;
reg    grp_fu_715_ap_start;
wire    grp_fu_715_ap_done;
reg    grp_fu_720_ap_start;
wire    grp_fu_720_ap_done;
reg    grp_fu_741_ap_start;
wire    grp_fu_741_ap_done;
reg    grp_fu_858_ap_start;
wire    grp_fu_858_ap_done;
reg   [307:0] ap_NS_fsm;
wire   [31:0] grp_fu_741_p00;
wire   [28:0] mul_ln97_fu_1055_p10;

// power-on initialization
initial begin
#0 ap_CS_fsm = 308'd1;
end

nv4CalcArbitration_sdiv_32ns_32s_32_36_seq_1 #(
    .ID( 1 ),
    .NUM_STAGE( 36 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
nv4CalcArbitration_sdiv_32ns_32s_32_36_seq_1_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_518_ap_start),
    .done(grp_fu_518_ap_done),
    .din0(mul_ln70_reg_1168),
    .din1(arb_mclk_khz),
    .ce(1'b1),
    .dout(grp_fu_518_p2)
);

nv4CalcArbitration_sdiv_32ns_32s_32_36_seq_1 #(
    .ID( 1 ),
    .NUM_STAGE( 36 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
nv4CalcArbitration_sdiv_32ns_32s_32_36_seq_1_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_522_ap_start),
    .done(grp_fu_522_ap_done),
    .din0(mul_ln114_reg_1138),
    .din1(arb_mclk_khz),
    .ce(1'b1),
    .dout(grp_fu_522_p2)
);

nv4CalcArbitration_sdiv_26ns_32ns_32_30_seq_1 #(
    .ID( 1 ),
    .NUM_STAGE( 30 ),
    .din0_WIDTH( 26 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
nv4CalcArbitration_sdiv_26ns_32ns_32_30_seq_1_U3(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_526_ap_start),
    .done(grp_fu_526_ap_done),
    .din0(grp_fu_526_p0),
    .din1(arb_nvclk_khz),
    .ce(1'b1),
    .dout(grp_fu_526_p2)
);

nv4CalcArbitration_sdiv_26ns_32s_32_30_seq_1 #(
    .ID( 1 ),
    .NUM_STAGE( 30 ),
    .din0_WIDTH( 26 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
nv4CalcArbitration_sdiv_26ns_32s_32_30_seq_1_U4(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_531_ap_start),
    .done(grp_fu_531_ap_done),
    .din0(grp_fu_531_p0),
    .din1(arb_pclk_khz),
    .ce(1'b1),
    .dout(grp_fu_531_p2)
);

nv4CalcArbitration_sdiv_29ns_29ns_29_33_seq_1 #(
    .ID( 1 ),
    .NUM_STAGE( 33 ),
    .din0_WIDTH( 29 ),
    .din1_WIDTH( 29 ),
    .dout_WIDTH( 29 ))
nv4CalcArbitration_sdiv_29ns_29ns_29_33_seq_1_U5(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_536_ap_start),
    .done(grp_fu_536_ap_done),
    .din0(29'd128000000),
    .din1(and_ln_reg_1152),
    .ce(1'b1),
    .dout(grp_fu_536_p2)
);

nv4CalcArbitration_sdiv_25ns_32ns_32_29_seq_1 #(
    .ID( 1 ),
    .NUM_STAGE( 29 ),
    .din0_WIDTH( 25 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
nv4CalcArbitration_sdiv_25ns_32ns_32_29_seq_1_U6(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_541_ap_start),
    .done(grp_fu_541_ap_done),
    .din0(grp_fu_541_p0),
    .din1(arb_nvclk_khz),
    .ce(1'b1),
    .dout(grp_fu_541_p2)
);

nv4CalcArbitration_sdiv_30s_32s_32_34_seq_1 #(
    .ID( 1 ),
    .NUM_STAGE( 34 ),
    .din0_WIDTH( 30 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
nv4CalcArbitration_sdiv_30s_32s_32_34_seq_1_U7(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_568_ap_start),
    .done(grp_fu_568_ap_done),
    .din0(grp_fu_568_p0),
    .din1(arb_mclk_khz),
    .ce(1'b1),
    .dout(grp_fu_568_p2)
);

nv4CalcArbitration_sdiv_29ns_29ns_29_33_seq_1 #(
    .ID( 1 ),
    .NUM_STAGE( 33 ),
    .din0_WIDTH( 29 ),
    .din1_WIDTH( 29 ),
    .dout_WIDTH( 29 ))
nv4CalcArbitration_sdiv_29ns_29ns_29_33_seq_1_U8(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_707_ap_start),
    .done(grp_fu_707_ap_done),
    .din0(mul_ln97_reg_1258),
    .din1(and_ln_reg_1152),
    .ce(1'b1),
    .dout(grp_fu_707_p2)
);

nv4CalcArbitration_sdiv_30s_32s_32_34_seq_1 #(
    .ID( 1 ),
    .NUM_STAGE( 34 ),
    .din0_WIDTH( 30 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
nv4CalcArbitration_sdiv_30s_32s_32_34_seq_1_U9(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_715_ap_start),
    .done(grp_fu_715_ap_done),
    .din0(grp_fu_715_p0),
    .din1(arb_mclk_khz),
    .ce(1'b1),
    .dout(grp_fu_715_p2)
);

nv4CalcArbitration_sdiv_32ns_32s_32_36_seq_1 #(
    .ID( 1 ),
    .NUM_STAGE( 36 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
nv4CalcArbitration_sdiv_32ns_32s_32_36_seq_1_U10(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_720_ap_start),
    .done(grp_fu_720_ap_done),
    .din0(mul_ln103_reg_1147),
    .din1(arb_mclk_khz),
    .ce(1'b1),
    .dout(grp_fu_720_p2)
);

nv4CalcArbitration_sdiv_24ns_32ns_32_28_seq_1 #(
    .ID( 1 ),
    .NUM_STAGE( 28 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
nv4CalcArbitration_sdiv_24ns_32ns_32_28_seq_1_U11(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_741_ap_start),
    .done(grp_fu_741_ap_done),
    .din0(grp_fu_741_p0),
    .din1(arb_nvclk_khz),
    .ce(1'b1),
    .dout(grp_fu_741_p2)
);

nv4CalcArbitration_sdiv_32ns_32s_32_36_seq_1 #(
    .ID( 1 ),
    .NUM_STAGE( 36 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
nv4CalcArbitration_sdiv_32ns_32s_32_36_seq_1_U12(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_858_ap_start),
    .done(grp_fu_858_ap_done),
    .din0(mul_ln121_reg_1327),
    .din1(arb_mclk_khz),
    .ce(1'b1),
    .dout(grp_fu_858_p2)
);

nv4CalcArbitration_mul_mul_21ns_8ns_29_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 21 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 29 ))
nv4CalcArbitration_mul_mul_21ns_8ns_29_1_1_U13(
    .din0(mul_ln97_fu_1055_p0),
    .din1(mul_ln97_fu_1055_p1),
    .dout(mul_ln97_fu_1055_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state308)) begin
        found_0_reg_254 <= ap_phi_mux_found_7_phi_fu_316_p10;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        found_0_reg_254 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((((or_ln130_fu_985_p2 == 1'd1) & (1'd0 == and_ln123_fu_947_p2) & (icmp_ln73_reg_1129 == 1'd0) & (1'b1 == ap_CS_fsm_state308)) | ((1'd1 == and_ln123_fu_947_p2) & (1'b1 == ap_CS_fsm_state308)) | ((icmp_ln138_fu_991_p2 == 1'd1) & (1'd0 == and_ln123_fu_947_p2) & (icmp_ln73_reg_1129 == 1'd1) & (1'b1 == ap_CS_fsm_state308)))) begin
        mclk_extra_3_fu_154 <= grp_fu_343_p2;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        mclk_extra_3_fu_154 <= 32'd3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln73_reg_1129 == 1'd1) & (1'b1 == ap_CS_fsm_state40))) begin
        p_pn_reg_294 <= us_crt_fu_558_p2;
    end else if ((1'b1 == ap_CS_fsm_state266)) begin
        p_pn_reg_294 <= us_crt_1_fu_756_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state203)) begin
                vbs_0_fu_158[7 : 5] <= zext_ln94_1_reg_1253[7 : 5];
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                vbs_0_fu_158[5] <= 1'b0;
        vbs_0_fu_158[6] <= 1'b0;
        vbs_0_fu_158[7] <= 1'b0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln81_reg_1143 == 1'd0) & (1'b1 == ap_CS_fsm_state105))) begin
        video_fill_us_0_reg_276 <= grp_fu_568_p2;
    end else if ((1'b1 == ap_CS_fsm_state133)) begin
        video_fill_us_0_reg_276 <= grp_fu_541_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln81_reg_1143 == 1'd0) & (1'b1 == ap_CS_fsm_state203))) begin
        video_fill_us_1_reg_285 <= grp_fu_715_p2;
    end else if ((1'b1 == ap_CS_fsm_state231)) begin
        video_fill_us_1_reg_285 <= grp_fu_741_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state308)) begin
        vlwm_0_reg_265 <= select_ln148_fu_1036_p3;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        vlwm_0_reg_265 <= 31'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln73_reg_1129 == 1'd1) & (1'b1 == ap_CS_fsm_state40))) begin
        vlwm_1_reg_303 <= zext_ln66_reg_1158;
    end else if ((1'b1 == ap_CS_fsm_state266)) begin
        vlwm_1_reg_303 <= sext_ln90_reg_1248;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state105)) begin
        add_ln88_1_reg_1203 <= add_ln88_1_fu_578_p2;
        us_video_reg_1208 <= us_video_fu_589_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        and_ln_reg_1152[28 : 3] <= and_ln_fu_491_p3[28 : 3];
        icmp_ln73_reg_1129 <= icmp_ln73_fu_432_p2;
        icmp_ln81_reg_1143 <= icmp_ln81_fu_479_p2;
        mul_ln103_reg_1147 <= mul_ln103_fu_485_p2;
        mul_ln114_reg_1138 <= mul_ln114_fu_461_p2;
        select_ln60_reg_1124[4 : 2] <= select_ln60_fu_424_p3[4 : 2];
        sext_ln111_reg_1133 <= sext_ln111_fu_457_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state270)) begin
        m1_reg_1321 <= m1_fu_844_p2;
        mul_ln121_reg_1327 <= mul_ln121_fu_853_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_phi_mux_found_0_phi_fu_258_p4 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        mclk_loop_reg_1163 <= mclk_loop_fu_508_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state268)) begin
        mul_ln108_reg_1300 <= mul_ln108_fu_778_p2;
        tmp_8_reg_1305 <= {{mul_ln108_fu_778_p2[64:52]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state267)) begin
        mul_ln117_reg_1289 <= mul_ln117_fu_762_p2;
        tmp_6_reg_1294 <= mul_ln117_fu_762_p2[32'd31];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state307)) begin
        mul_ln122_reg_1337 <= mul_ln122_fu_862_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        mul_ln70_reg_1168[31 : 6] <= mul_ln70_fu_513_p2[31 : 6];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state135)) begin
        mul_ln89_1_reg_1230[64 : 1] <= mul_ln89_1_fu_615_p2[64 : 1];
        tmp_5_reg_1235 <= {{mul_ln89_1_fu_615_p2[64:52]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state134)) begin
        mul_ln89_reg_1219 <= mul_ln89_fu_594_p2;
        tmp_3_reg_1224 <= mul_ln89_fu_594_p2[32'd30];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state137)) begin
        mul_ln97_reg_1258 <= mul_ln97_fu_1055_p2;
        sext_ln90_reg_1248 <= sext_ln90_fu_670_p1;
        zext_ln94_1_reg_1253[7 : 5] <= zext_ln94_1_fu_703_p1[7 : 5];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state306)) begin
        p1_reg_1332 <= grp_fu_858_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        tmp_1_reg_1097 <= {{mul_ln111_fu_354_p2[31:3]}};
        tmp_2_reg_1087 <= mul_ln111_fu_354_p2[32'd31];
        tmp_reg_1092 <= {{sub_ln111_fu_368_p2[31:3]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state269)) begin
        trunc_ln108_reg_1310 <= trunc_ln108_fu_836_p1;
        trunc_ln109_reg_1316 <= trunc_ln109_fu_840_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        us_m_reg_1173 <= grp_fu_518_p2;
        us_n_reg_1178 <= grp_fu_526_p2;
        us_p_reg_1183 <= grp_fu_531_p2;
        vpm_us_reg_1188 <= grp_fu_522_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state136)) begin
        vlwm_reg_1241 <= vlwm_fu_664_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        zext_ln66_reg_1158[30 : 0] <= zext_ln66_fu_499_p1[30 : 0];
    end
end

always @ (*) begin
    if (((ap_phi_mux_found_0_phi_fu_258_p4 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((((or_ln130_fu_985_p2 == 1'd0) & (1'd0 == and_ln123_fu_947_p2) & (icmp_ln73_reg_1129 == 1'd0) & (1'b1 == ap_CS_fsm_state308)) | ((icmp_ln138_fu_991_p2 == 1'd0) & (1'd0 == and_ln123_fu_947_p2) & (icmp_ln73_reg_1129 == 1'd1) & (1'b1 == ap_CS_fsm_state308)))) begin
        ap_phi_mux_found_7_phi_fu_316_p10 = 1'd1;
    end else if ((((or_ln130_fu_985_p2 == 1'd1) & (1'd0 == and_ln123_fu_947_p2) & (icmp_ln73_reg_1129 == 1'd0) & (1'b1 == ap_CS_fsm_state308)) | ((1'd1 == and_ln123_fu_947_p2) & (1'b1 == ap_CS_fsm_state308)) | ((icmp_ln138_fu_991_p2 == 1'd1) & (1'd0 == and_ln123_fu_947_p2) & (icmp_ln73_reg_1129 == 1'd1) & (1'b1 == ap_CS_fsm_state308)))) begin
        ap_phi_mux_found_7_phi_fu_316_p10 = grp_fu_334_p2;
    end else begin
        ap_phi_mux_found_7_phi_fu_316_p10 = 'bx;
    end
end

always @ (*) begin
    if (((icmp_ln81_reg_1143 == 1'd0) & (1'b1 == ap_CS_fsm_state105))) begin
        ap_phi_mux_video_fill_us_0_phi_fu_279_p4 = grp_fu_568_p2;
    end else begin
        ap_phi_mux_video_fill_us_0_phi_fu_279_p4 = video_fill_us_0_reg_276;
    end
end

always @ (*) begin
    if (((ap_phi_mux_found_0_phi_fu_258_p4 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state308)) begin
        fifo_graphics_burst_size_ap_vld = 1'b1;
    end else begin
        fifo_graphics_burst_size_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state308)) begin
        fifo_graphics_lwm_ap_vld = 1'b1;
    end else begin
        fifo_graphics_lwm_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((((or_ln130_fu_985_p2 == 1'd1) & (1'd0 == and_ln123_fu_947_p2) & (icmp_ln73_reg_1129 == 1'd0) & (1'b1 == ap_CS_fsm_state308)) | ((1'd1 == and_ln123_fu_947_p2) & (1'b1 == ap_CS_fsm_state308)) | ((icmp_ln138_fu_991_p2 == 1'd1) & (1'd0 == and_ln123_fu_947_p2) & (icmp_ln73_reg_1129 == 1'd1) & (1'b1 == ap_CS_fsm_state308)))) begin
        fifo_valid = 32'd0;
    end else if (((1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state2))) begin
        fifo_valid = 32'd1;
    end else begin
        fifo_valid = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state2) | ((or_ln130_fu_985_p2 == 1'd1) & (1'd0 == and_ln123_fu_947_p2) & (icmp_ln73_reg_1129 == 1'd0) & (1'b1 == ap_CS_fsm_state308)) | ((1'd1 == and_ln123_fu_947_p2) & (1'b1 == ap_CS_fsm_state308)) | ((icmp_ln138_fu_991_p2 == 1'd1) & (1'd0 == and_ln123_fu_947_p2) & (icmp_ln73_reg_1129 == 1'd1) & (1'b1 == ap_CS_fsm_state308)))) begin
        fifo_valid_ap_vld = 1'b1;
    end else begin
        fifo_valid_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state308)) begin
        fifo_video_burst_size_ap_vld = 1'b1;
    end else begin
        fifo_video_burst_size_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state308)) begin
        fifo_video_lwm_ap_vld = 1'b1;
    end else begin
        fifo_video_lwm_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_fu_518_ap_start = 1'b1;
    end else begin
        grp_fu_518_ap_start = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_fu_522_ap_start = 1'b1;
    end else begin
        grp_fu_522_ap_start = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_fu_526_ap_start = 1'b1;
    end else begin
        grp_fu_526_ap_start = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_fu_531_ap_start = 1'b1;
    end else begin
        grp_fu_531_ap_start = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln81_reg_1143 == 1'd0) & (icmp_ln73_reg_1129 == 1'd0) & (1'b1 == ap_CS_fsm_state40))) begin
        grp_fu_536_ap_start = 1'b1;
    end else begin
        grp_fu_536_ap_start = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln81_reg_1143 == 1'd1) & (icmp_ln73_reg_1129 == 1'd0) & (1'b1 == ap_CS_fsm_state40))) begin
        grp_fu_541_ap_start = 1'b1;
    end else begin
        grp_fu_541_ap_start = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state72)) begin
        grp_fu_568_ap_start = 1'b1;
    end else begin
        grp_fu_568_ap_start = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state138)) begin
        grp_fu_707_ap_start = 1'b1;
    end else begin
        grp_fu_707_ap_start = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state170)) begin
        grp_fu_715_ap_start = 1'b1;
    end else begin
        grp_fu_715_ap_start = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state203)) begin
        grp_fu_720_ap_start = 1'b1;
    end else begin
        grp_fu_720_ap_start = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state204)) begin
        grp_fu_741_ap_start = 1'b1;
    end else begin
        grp_fu_741_ap_start = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state271)) begin
        grp_fu_858_ap_start = 1'b1;
    end else begin
        grp_fu_858_ap_start = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            if (((ap_phi_mux_found_0_phi_fu_258_p4 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            if (((icmp_ln73_reg_1129 == 1'd1) & (1'b1 == ap_CS_fsm_state40))) begin
                ap_NS_fsm = ap_ST_fsm_state267;
            end else if (((icmp_ln81_reg_1143 == 1'd1) & (icmp_ln73_reg_1129 == 1'd0) & (1'b1 == ap_CS_fsm_state40))) begin
                ap_NS_fsm = ap_ST_fsm_state106;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state41;
            end
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_state60;
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_state61;
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_state62;
        end
        ap_ST_fsm_state62 : begin
            ap_NS_fsm = ap_ST_fsm_state63;
        end
        ap_ST_fsm_state63 : begin
            ap_NS_fsm = ap_ST_fsm_state64;
        end
        ap_ST_fsm_state64 : begin
            ap_NS_fsm = ap_ST_fsm_state65;
        end
        ap_ST_fsm_state65 : begin
            ap_NS_fsm = ap_ST_fsm_state66;
        end
        ap_ST_fsm_state66 : begin
            ap_NS_fsm = ap_ST_fsm_state67;
        end
        ap_ST_fsm_state67 : begin
            ap_NS_fsm = ap_ST_fsm_state68;
        end
        ap_ST_fsm_state68 : begin
            ap_NS_fsm = ap_ST_fsm_state69;
        end
        ap_ST_fsm_state69 : begin
            ap_NS_fsm = ap_ST_fsm_state70;
        end
        ap_ST_fsm_state70 : begin
            ap_NS_fsm = ap_ST_fsm_state71;
        end
        ap_ST_fsm_state71 : begin
            ap_NS_fsm = ap_ST_fsm_state72;
        end
        ap_ST_fsm_state72 : begin
            ap_NS_fsm = ap_ST_fsm_state73;
        end
        ap_ST_fsm_state73 : begin
            ap_NS_fsm = ap_ST_fsm_state74;
        end
        ap_ST_fsm_state74 : begin
            ap_NS_fsm = ap_ST_fsm_state75;
        end
        ap_ST_fsm_state75 : begin
            ap_NS_fsm = ap_ST_fsm_state76;
        end
        ap_ST_fsm_state76 : begin
            ap_NS_fsm = ap_ST_fsm_state77;
        end
        ap_ST_fsm_state77 : begin
            ap_NS_fsm = ap_ST_fsm_state78;
        end
        ap_ST_fsm_state78 : begin
            ap_NS_fsm = ap_ST_fsm_state79;
        end
        ap_ST_fsm_state79 : begin
            ap_NS_fsm = ap_ST_fsm_state80;
        end
        ap_ST_fsm_state80 : begin
            ap_NS_fsm = ap_ST_fsm_state81;
        end
        ap_ST_fsm_state81 : begin
            ap_NS_fsm = ap_ST_fsm_state82;
        end
        ap_ST_fsm_state82 : begin
            ap_NS_fsm = ap_ST_fsm_state83;
        end
        ap_ST_fsm_state83 : begin
            ap_NS_fsm = ap_ST_fsm_state84;
        end
        ap_ST_fsm_state84 : begin
            ap_NS_fsm = ap_ST_fsm_state85;
        end
        ap_ST_fsm_state85 : begin
            ap_NS_fsm = ap_ST_fsm_state86;
        end
        ap_ST_fsm_state86 : begin
            ap_NS_fsm = ap_ST_fsm_state87;
        end
        ap_ST_fsm_state87 : begin
            ap_NS_fsm = ap_ST_fsm_state88;
        end
        ap_ST_fsm_state88 : begin
            ap_NS_fsm = ap_ST_fsm_state89;
        end
        ap_ST_fsm_state89 : begin
            ap_NS_fsm = ap_ST_fsm_state90;
        end
        ap_ST_fsm_state90 : begin
            ap_NS_fsm = ap_ST_fsm_state91;
        end
        ap_ST_fsm_state91 : begin
            ap_NS_fsm = ap_ST_fsm_state92;
        end
        ap_ST_fsm_state92 : begin
            ap_NS_fsm = ap_ST_fsm_state93;
        end
        ap_ST_fsm_state93 : begin
            ap_NS_fsm = ap_ST_fsm_state94;
        end
        ap_ST_fsm_state94 : begin
            ap_NS_fsm = ap_ST_fsm_state95;
        end
        ap_ST_fsm_state95 : begin
            ap_NS_fsm = ap_ST_fsm_state96;
        end
        ap_ST_fsm_state96 : begin
            ap_NS_fsm = ap_ST_fsm_state97;
        end
        ap_ST_fsm_state97 : begin
            ap_NS_fsm = ap_ST_fsm_state98;
        end
        ap_ST_fsm_state98 : begin
            ap_NS_fsm = ap_ST_fsm_state99;
        end
        ap_ST_fsm_state99 : begin
            ap_NS_fsm = ap_ST_fsm_state100;
        end
        ap_ST_fsm_state100 : begin
            ap_NS_fsm = ap_ST_fsm_state101;
        end
        ap_ST_fsm_state101 : begin
            ap_NS_fsm = ap_ST_fsm_state102;
        end
        ap_ST_fsm_state102 : begin
            ap_NS_fsm = ap_ST_fsm_state103;
        end
        ap_ST_fsm_state103 : begin
            ap_NS_fsm = ap_ST_fsm_state104;
        end
        ap_ST_fsm_state104 : begin
            ap_NS_fsm = ap_ST_fsm_state105;
        end
        ap_ST_fsm_state105 : begin
            ap_NS_fsm = ap_ST_fsm_state134;
        end
        ap_ST_fsm_state106 : begin
            ap_NS_fsm = ap_ST_fsm_state107;
        end
        ap_ST_fsm_state107 : begin
            ap_NS_fsm = ap_ST_fsm_state108;
        end
        ap_ST_fsm_state108 : begin
            ap_NS_fsm = ap_ST_fsm_state109;
        end
        ap_ST_fsm_state109 : begin
            ap_NS_fsm = ap_ST_fsm_state110;
        end
        ap_ST_fsm_state110 : begin
            ap_NS_fsm = ap_ST_fsm_state111;
        end
        ap_ST_fsm_state111 : begin
            ap_NS_fsm = ap_ST_fsm_state112;
        end
        ap_ST_fsm_state112 : begin
            ap_NS_fsm = ap_ST_fsm_state113;
        end
        ap_ST_fsm_state113 : begin
            ap_NS_fsm = ap_ST_fsm_state114;
        end
        ap_ST_fsm_state114 : begin
            ap_NS_fsm = ap_ST_fsm_state115;
        end
        ap_ST_fsm_state115 : begin
            ap_NS_fsm = ap_ST_fsm_state116;
        end
        ap_ST_fsm_state116 : begin
            ap_NS_fsm = ap_ST_fsm_state117;
        end
        ap_ST_fsm_state117 : begin
            ap_NS_fsm = ap_ST_fsm_state118;
        end
        ap_ST_fsm_state118 : begin
            ap_NS_fsm = ap_ST_fsm_state119;
        end
        ap_ST_fsm_state119 : begin
            ap_NS_fsm = ap_ST_fsm_state120;
        end
        ap_ST_fsm_state120 : begin
            ap_NS_fsm = ap_ST_fsm_state121;
        end
        ap_ST_fsm_state121 : begin
            ap_NS_fsm = ap_ST_fsm_state122;
        end
        ap_ST_fsm_state122 : begin
            ap_NS_fsm = ap_ST_fsm_state123;
        end
        ap_ST_fsm_state123 : begin
            ap_NS_fsm = ap_ST_fsm_state124;
        end
        ap_ST_fsm_state124 : begin
            ap_NS_fsm = ap_ST_fsm_state125;
        end
        ap_ST_fsm_state125 : begin
            ap_NS_fsm = ap_ST_fsm_state126;
        end
        ap_ST_fsm_state126 : begin
            ap_NS_fsm = ap_ST_fsm_state127;
        end
        ap_ST_fsm_state127 : begin
            ap_NS_fsm = ap_ST_fsm_state128;
        end
        ap_ST_fsm_state128 : begin
            ap_NS_fsm = ap_ST_fsm_state129;
        end
        ap_ST_fsm_state129 : begin
            ap_NS_fsm = ap_ST_fsm_state130;
        end
        ap_ST_fsm_state130 : begin
            ap_NS_fsm = ap_ST_fsm_state131;
        end
        ap_ST_fsm_state131 : begin
            ap_NS_fsm = ap_ST_fsm_state132;
        end
        ap_ST_fsm_state132 : begin
            ap_NS_fsm = ap_ST_fsm_state133;
        end
        ap_ST_fsm_state133 : begin
            ap_NS_fsm = ap_ST_fsm_state105;
        end
        ap_ST_fsm_state134 : begin
            ap_NS_fsm = ap_ST_fsm_state135;
        end
        ap_ST_fsm_state135 : begin
            ap_NS_fsm = ap_ST_fsm_state136;
        end
        ap_ST_fsm_state136 : begin
            ap_NS_fsm = ap_ST_fsm_state137;
        end
        ap_ST_fsm_state137 : begin
            if (((icmp_ln81_reg_1143 == 1'd1) & (1'b1 == ap_CS_fsm_state137))) begin
                ap_NS_fsm = ap_ST_fsm_state204;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state138;
            end
        end
        ap_ST_fsm_state138 : begin
            ap_NS_fsm = ap_ST_fsm_state139;
        end
        ap_ST_fsm_state139 : begin
            ap_NS_fsm = ap_ST_fsm_state140;
        end
        ap_ST_fsm_state140 : begin
            ap_NS_fsm = ap_ST_fsm_state141;
        end
        ap_ST_fsm_state141 : begin
            ap_NS_fsm = ap_ST_fsm_state142;
        end
        ap_ST_fsm_state142 : begin
            ap_NS_fsm = ap_ST_fsm_state143;
        end
        ap_ST_fsm_state143 : begin
            ap_NS_fsm = ap_ST_fsm_state144;
        end
        ap_ST_fsm_state144 : begin
            ap_NS_fsm = ap_ST_fsm_state145;
        end
        ap_ST_fsm_state145 : begin
            ap_NS_fsm = ap_ST_fsm_state146;
        end
        ap_ST_fsm_state146 : begin
            ap_NS_fsm = ap_ST_fsm_state147;
        end
        ap_ST_fsm_state147 : begin
            ap_NS_fsm = ap_ST_fsm_state148;
        end
        ap_ST_fsm_state148 : begin
            ap_NS_fsm = ap_ST_fsm_state149;
        end
        ap_ST_fsm_state149 : begin
            ap_NS_fsm = ap_ST_fsm_state150;
        end
        ap_ST_fsm_state150 : begin
            ap_NS_fsm = ap_ST_fsm_state151;
        end
        ap_ST_fsm_state151 : begin
            ap_NS_fsm = ap_ST_fsm_state152;
        end
        ap_ST_fsm_state152 : begin
            ap_NS_fsm = ap_ST_fsm_state153;
        end
        ap_ST_fsm_state153 : begin
            ap_NS_fsm = ap_ST_fsm_state154;
        end
        ap_ST_fsm_state154 : begin
            ap_NS_fsm = ap_ST_fsm_state155;
        end
        ap_ST_fsm_state155 : begin
            ap_NS_fsm = ap_ST_fsm_state156;
        end
        ap_ST_fsm_state156 : begin
            ap_NS_fsm = ap_ST_fsm_state157;
        end
        ap_ST_fsm_state157 : begin
            ap_NS_fsm = ap_ST_fsm_state158;
        end
        ap_ST_fsm_state158 : begin
            ap_NS_fsm = ap_ST_fsm_state159;
        end
        ap_ST_fsm_state159 : begin
            ap_NS_fsm = ap_ST_fsm_state160;
        end
        ap_ST_fsm_state160 : begin
            ap_NS_fsm = ap_ST_fsm_state161;
        end
        ap_ST_fsm_state161 : begin
            ap_NS_fsm = ap_ST_fsm_state162;
        end
        ap_ST_fsm_state162 : begin
            ap_NS_fsm = ap_ST_fsm_state163;
        end
        ap_ST_fsm_state163 : begin
            ap_NS_fsm = ap_ST_fsm_state164;
        end
        ap_ST_fsm_state164 : begin
            ap_NS_fsm = ap_ST_fsm_state165;
        end
        ap_ST_fsm_state165 : begin
            ap_NS_fsm = ap_ST_fsm_state166;
        end
        ap_ST_fsm_state166 : begin
            ap_NS_fsm = ap_ST_fsm_state167;
        end
        ap_ST_fsm_state167 : begin
            ap_NS_fsm = ap_ST_fsm_state168;
        end
        ap_ST_fsm_state168 : begin
            ap_NS_fsm = ap_ST_fsm_state169;
        end
        ap_ST_fsm_state169 : begin
            ap_NS_fsm = ap_ST_fsm_state170;
        end
        ap_ST_fsm_state170 : begin
            ap_NS_fsm = ap_ST_fsm_state171;
        end
        ap_ST_fsm_state171 : begin
            ap_NS_fsm = ap_ST_fsm_state172;
        end
        ap_ST_fsm_state172 : begin
            ap_NS_fsm = ap_ST_fsm_state173;
        end
        ap_ST_fsm_state173 : begin
            ap_NS_fsm = ap_ST_fsm_state174;
        end
        ap_ST_fsm_state174 : begin
            ap_NS_fsm = ap_ST_fsm_state175;
        end
        ap_ST_fsm_state175 : begin
            ap_NS_fsm = ap_ST_fsm_state176;
        end
        ap_ST_fsm_state176 : begin
            ap_NS_fsm = ap_ST_fsm_state177;
        end
        ap_ST_fsm_state177 : begin
            ap_NS_fsm = ap_ST_fsm_state178;
        end
        ap_ST_fsm_state178 : begin
            ap_NS_fsm = ap_ST_fsm_state179;
        end
        ap_ST_fsm_state179 : begin
            ap_NS_fsm = ap_ST_fsm_state180;
        end
        ap_ST_fsm_state180 : begin
            ap_NS_fsm = ap_ST_fsm_state181;
        end
        ap_ST_fsm_state181 : begin
            ap_NS_fsm = ap_ST_fsm_state182;
        end
        ap_ST_fsm_state182 : begin
            ap_NS_fsm = ap_ST_fsm_state183;
        end
        ap_ST_fsm_state183 : begin
            ap_NS_fsm = ap_ST_fsm_state184;
        end
        ap_ST_fsm_state184 : begin
            ap_NS_fsm = ap_ST_fsm_state185;
        end
        ap_ST_fsm_state185 : begin
            ap_NS_fsm = ap_ST_fsm_state186;
        end
        ap_ST_fsm_state186 : begin
            ap_NS_fsm = ap_ST_fsm_state187;
        end
        ap_ST_fsm_state187 : begin
            ap_NS_fsm = ap_ST_fsm_state188;
        end
        ap_ST_fsm_state188 : begin
            ap_NS_fsm = ap_ST_fsm_state189;
        end
        ap_ST_fsm_state189 : begin
            ap_NS_fsm = ap_ST_fsm_state190;
        end
        ap_ST_fsm_state190 : begin
            ap_NS_fsm = ap_ST_fsm_state191;
        end
        ap_ST_fsm_state191 : begin
            ap_NS_fsm = ap_ST_fsm_state192;
        end
        ap_ST_fsm_state192 : begin
            ap_NS_fsm = ap_ST_fsm_state193;
        end
        ap_ST_fsm_state193 : begin
            ap_NS_fsm = ap_ST_fsm_state194;
        end
        ap_ST_fsm_state194 : begin
            ap_NS_fsm = ap_ST_fsm_state195;
        end
        ap_ST_fsm_state195 : begin
            ap_NS_fsm = ap_ST_fsm_state196;
        end
        ap_ST_fsm_state196 : begin
            ap_NS_fsm = ap_ST_fsm_state197;
        end
        ap_ST_fsm_state197 : begin
            ap_NS_fsm = ap_ST_fsm_state198;
        end
        ap_ST_fsm_state198 : begin
            ap_NS_fsm = ap_ST_fsm_state199;
        end
        ap_ST_fsm_state199 : begin
            ap_NS_fsm = ap_ST_fsm_state200;
        end
        ap_ST_fsm_state200 : begin
            ap_NS_fsm = ap_ST_fsm_state201;
        end
        ap_ST_fsm_state201 : begin
            ap_NS_fsm = ap_ST_fsm_state202;
        end
        ap_ST_fsm_state202 : begin
            ap_NS_fsm = ap_ST_fsm_state203;
        end
        ap_ST_fsm_state203 : begin
            ap_NS_fsm = ap_ST_fsm_state232;
        end
        ap_ST_fsm_state204 : begin
            ap_NS_fsm = ap_ST_fsm_state205;
        end
        ap_ST_fsm_state205 : begin
            ap_NS_fsm = ap_ST_fsm_state206;
        end
        ap_ST_fsm_state206 : begin
            ap_NS_fsm = ap_ST_fsm_state207;
        end
        ap_ST_fsm_state207 : begin
            ap_NS_fsm = ap_ST_fsm_state208;
        end
        ap_ST_fsm_state208 : begin
            ap_NS_fsm = ap_ST_fsm_state209;
        end
        ap_ST_fsm_state209 : begin
            ap_NS_fsm = ap_ST_fsm_state210;
        end
        ap_ST_fsm_state210 : begin
            ap_NS_fsm = ap_ST_fsm_state211;
        end
        ap_ST_fsm_state211 : begin
            ap_NS_fsm = ap_ST_fsm_state212;
        end
        ap_ST_fsm_state212 : begin
            ap_NS_fsm = ap_ST_fsm_state213;
        end
        ap_ST_fsm_state213 : begin
            ap_NS_fsm = ap_ST_fsm_state214;
        end
        ap_ST_fsm_state214 : begin
            ap_NS_fsm = ap_ST_fsm_state215;
        end
        ap_ST_fsm_state215 : begin
            ap_NS_fsm = ap_ST_fsm_state216;
        end
        ap_ST_fsm_state216 : begin
            ap_NS_fsm = ap_ST_fsm_state217;
        end
        ap_ST_fsm_state217 : begin
            ap_NS_fsm = ap_ST_fsm_state218;
        end
        ap_ST_fsm_state218 : begin
            ap_NS_fsm = ap_ST_fsm_state219;
        end
        ap_ST_fsm_state219 : begin
            ap_NS_fsm = ap_ST_fsm_state220;
        end
        ap_ST_fsm_state220 : begin
            ap_NS_fsm = ap_ST_fsm_state221;
        end
        ap_ST_fsm_state221 : begin
            ap_NS_fsm = ap_ST_fsm_state222;
        end
        ap_ST_fsm_state222 : begin
            ap_NS_fsm = ap_ST_fsm_state223;
        end
        ap_ST_fsm_state223 : begin
            ap_NS_fsm = ap_ST_fsm_state224;
        end
        ap_ST_fsm_state224 : begin
            ap_NS_fsm = ap_ST_fsm_state225;
        end
        ap_ST_fsm_state225 : begin
            ap_NS_fsm = ap_ST_fsm_state226;
        end
        ap_ST_fsm_state226 : begin
            ap_NS_fsm = ap_ST_fsm_state227;
        end
        ap_ST_fsm_state227 : begin
            ap_NS_fsm = ap_ST_fsm_state228;
        end
        ap_ST_fsm_state228 : begin
            ap_NS_fsm = ap_ST_fsm_state229;
        end
        ap_ST_fsm_state229 : begin
            ap_NS_fsm = ap_ST_fsm_state230;
        end
        ap_ST_fsm_state230 : begin
            ap_NS_fsm = ap_ST_fsm_state231;
        end
        ap_ST_fsm_state231 : begin
            ap_NS_fsm = ap_ST_fsm_state203;
        end
        ap_ST_fsm_state232 : begin
            ap_NS_fsm = ap_ST_fsm_state233;
        end
        ap_ST_fsm_state233 : begin
            ap_NS_fsm = ap_ST_fsm_state234;
        end
        ap_ST_fsm_state234 : begin
            ap_NS_fsm = ap_ST_fsm_state235;
        end
        ap_ST_fsm_state235 : begin
            ap_NS_fsm = ap_ST_fsm_state236;
        end
        ap_ST_fsm_state236 : begin
            ap_NS_fsm = ap_ST_fsm_state237;
        end
        ap_ST_fsm_state237 : begin
            ap_NS_fsm = ap_ST_fsm_state238;
        end
        ap_ST_fsm_state238 : begin
            ap_NS_fsm = ap_ST_fsm_state239;
        end
        ap_ST_fsm_state239 : begin
            ap_NS_fsm = ap_ST_fsm_state240;
        end
        ap_ST_fsm_state240 : begin
            ap_NS_fsm = ap_ST_fsm_state241;
        end
        ap_ST_fsm_state241 : begin
            ap_NS_fsm = ap_ST_fsm_state242;
        end
        ap_ST_fsm_state242 : begin
            ap_NS_fsm = ap_ST_fsm_state243;
        end
        ap_ST_fsm_state243 : begin
            ap_NS_fsm = ap_ST_fsm_state244;
        end
        ap_ST_fsm_state244 : begin
            ap_NS_fsm = ap_ST_fsm_state245;
        end
        ap_ST_fsm_state245 : begin
            ap_NS_fsm = ap_ST_fsm_state246;
        end
        ap_ST_fsm_state246 : begin
            ap_NS_fsm = ap_ST_fsm_state247;
        end
        ap_ST_fsm_state247 : begin
            ap_NS_fsm = ap_ST_fsm_state248;
        end
        ap_ST_fsm_state248 : begin
            ap_NS_fsm = ap_ST_fsm_state249;
        end
        ap_ST_fsm_state249 : begin
            ap_NS_fsm = ap_ST_fsm_state250;
        end
        ap_ST_fsm_state250 : begin
            ap_NS_fsm = ap_ST_fsm_state251;
        end
        ap_ST_fsm_state251 : begin
            ap_NS_fsm = ap_ST_fsm_state252;
        end
        ap_ST_fsm_state252 : begin
            ap_NS_fsm = ap_ST_fsm_state253;
        end
        ap_ST_fsm_state253 : begin
            ap_NS_fsm = ap_ST_fsm_state254;
        end
        ap_ST_fsm_state254 : begin
            ap_NS_fsm = ap_ST_fsm_state255;
        end
        ap_ST_fsm_state255 : begin
            ap_NS_fsm = ap_ST_fsm_state256;
        end
        ap_ST_fsm_state256 : begin
            ap_NS_fsm = ap_ST_fsm_state257;
        end
        ap_ST_fsm_state257 : begin
            ap_NS_fsm = ap_ST_fsm_state258;
        end
        ap_ST_fsm_state258 : begin
            ap_NS_fsm = ap_ST_fsm_state259;
        end
        ap_ST_fsm_state259 : begin
            ap_NS_fsm = ap_ST_fsm_state260;
        end
        ap_ST_fsm_state260 : begin
            ap_NS_fsm = ap_ST_fsm_state261;
        end
        ap_ST_fsm_state261 : begin
            ap_NS_fsm = ap_ST_fsm_state262;
        end
        ap_ST_fsm_state262 : begin
            ap_NS_fsm = ap_ST_fsm_state263;
        end
        ap_ST_fsm_state263 : begin
            ap_NS_fsm = ap_ST_fsm_state264;
        end
        ap_ST_fsm_state264 : begin
            ap_NS_fsm = ap_ST_fsm_state265;
        end
        ap_ST_fsm_state265 : begin
            ap_NS_fsm = ap_ST_fsm_state266;
        end
        ap_ST_fsm_state266 : begin
            ap_NS_fsm = ap_ST_fsm_state267;
        end
        ap_ST_fsm_state267 : begin
            ap_NS_fsm = ap_ST_fsm_state268;
        end
        ap_ST_fsm_state268 : begin
            ap_NS_fsm = ap_ST_fsm_state269;
        end
        ap_ST_fsm_state269 : begin
            ap_NS_fsm = ap_ST_fsm_state270;
        end
        ap_ST_fsm_state270 : begin
            ap_NS_fsm = ap_ST_fsm_state271;
        end
        ap_ST_fsm_state271 : begin
            ap_NS_fsm = ap_ST_fsm_state272;
        end
        ap_ST_fsm_state272 : begin
            ap_NS_fsm = ap_ST_fsm_state273;
        end
        ap_ST_fsm_state273 : begin
            ap_NS_fsm = ap_ST_fsm_state274;
        end
        ap_ST_fsm_state274 : begin
            ap_NS_fsm = ap_ST_fsm_state275;
        end
        ap_ST_fsm_state275 : begin
            ap_NS_fsm = ap_ST_fsm_state276;
        end
        ap_ST_fsm_state276 : begin
            ap_NS_fsm = ap_ST_fsm_state277;
        end
        ap_ST_fsm_state277 : begin
            ap_NS_fsm = ap_ST_fsm_state278;
        end
        ap_ST_fsm_state278 : begin
            ap_NS_fsm = ap_ST_fsm_state279;
        end
        ap_ST_fsm_state279 : begin
            ap_NS_fsm = ap_ST_fsm_state280;
        end
        ap_ST_fsm_state280 : begin
            ap_NS_fsm = ap_ST_fsm_state281;
        end
        ap_ST_fsm_state281 : begin
            ap_NS_fsm = ap_ST_fsm_state282;
        end
        ap_ST_fsm_state282 : begin
            ap_NS_fsm = ap_ST_fsm_state283;
        end
        ap_ST_fsm_state283 : begin
            ap_NS_fsm = ap_ST_fsm_state284;
        end
        ap_ST_fsm_state284 : begin
            ap_NS_fsm = ap_ST_fsm_state285;
        end
        ap_ST_fsm_state285 : begin
            ap_NS_fsm = ap_ST_fsm_state286;
        end
        ap_ST_fsm_state286 : begin
            ap_NS_fsm = ap_ST_fsm_state287;
        end
        ap_ST_fsm_state287 : begin
            ap_NS_fsm = ap_ST_fsm_state288;
        end
        ap_ST_fsm_state288 : begin
            ap_NS_fsm = ap_ST_fsm_state289;
        end
        ap_ST_fsm_state289 : begin
            ap_NS_fsm = ap_ST_fsm_state290;
        end
        ap_ST_fsm_state290 : begin
            ap_NS_fsm = ap_ST_fsm_state291;
        end
        ap_ST_fsm_state291 : begin
            ap_NS_fsm = ap_ST_fsm_state292;
        end
        ap_ST_fsm_state292 : begin
            ap_NS_fsm = ap_ST_fsm_state293;
        end
        ap_ST_fsm_state293 : begin
            ap_NS_fsm = ap_ST_fsm_state294;
        end
        ap_ST_fsm_state294 : begin
            ap_NS_fsm = ap_ST_fsm_state295;
        end
        ap_ST_fsm_state295 : begin
            ap_NS_fsm = ap_ST_fsm_state296;
        end
        ap_ST_fsm_state296 : begin
            ap_NS_fsm = ap_ST_fsm_state297;
        end
        ap_ST_fsm_state297 : begin
            ap_NS_fsm = ap_ST_fsm_state298;
        end
        ap_ST_fsm_state298 : begin
            ap_NS_fsm = ap_ST_fsm_state299;
        end
        ap_ST_fsm_state299 : begin
            ap_NS_fsm = ap_ST_fsm_state300;
        end
        ap_ST_fsm_state300 : begin
            ap_NS_fsm = ap_ST_fsm_state301;
        end
        ap_ST_fsm_state301 : begin
            ap_NS_fsm = ap_ST_fsm_state302;
        end
        ap_ST_fsm_state302 : begin
            ap_NS_fsm = ap_ST_fsm_state303;
        end
        ap_ST_fsm_state303 : begin
            ap_NS_fsm = ap_ST_fsm_state304;
        end
        ap_ST_fsm_state304 : begin
            ap_NS_fsm = ap_ST_fsm_state305;
        end
        ap_ST_fsm_state305 : begin
            ap_NS_fsm = ap_ST_fsm_state306;
        end
        ap_ST_fsm_state306 : begin
            ap_NS_fsm = ap_ST_fsm_state307;
        end
        ap_ST_fsm_state307 : begin
            ap_NS_fsm = ap_ST_fsm_state308;
        end
        ap_ST_fsm_state308 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln105_1_fu_750_p2 = (video_fill_us_1_reg_285 + grp_fu_720_p2);

assign add_ln105_fu_746_p2 = ($signed(us_video_reg_1208) + $signed(add_ln88_1_reg_1203));

assign add_ln109_1_fu_875_p2 = (12'd1 + trunc_ln109_reg_1316);

assign add_ln116_1_fu_552_p2 = (grp_fu_531_p2 + grp_fu_522_p2);

assign add_ln116_fu_546_p2 = (grp_fu_526_p2 + grp_fu_518_p2);

assign add_ln69_fu_503_p2 = (select_ln60_reg_1124 + mclk_extra_3_fu_154);

assign add_ln88_1_fu_578_p2 = (add_ln88_fu_574_p2 + us_n_reg_1178);

assign add_ln88_2_fu_583_p2 = (add_ln88_1_fu_578_p2 + ap_phi_mux_video_fill_us_0_phi_fu_279_p4);

assign add_ln88_fu_574_p2 = (us_m_reg_1173 + us_p_reg_1183);

assign and_ln123_fu_947_p2 = (icmp_ln123_fu_936_p2 & icmp_ln123_1_fu_942_p2);

assign and_ln_fu_491_p3 = {{trunc_ln_fu_404_p4}, {3'd0}};

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state105 = ap_CS_fsm[32'd104];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state133 = ap_CS_fsm[32'd132];

assign ap_CS_fsm_state134 = ap_CS_fsm[32'd133];

assign ap_CS_fsm_state135 = ap_CS_fsm[32'd134];

assign ap_CS_fsm_state136 = ap_CS_fsm[32'd135];

assign ap_CS_fsm_state137 = ap_CS_fsm[32'd136];

assign ap_CS_fsm_state138 = ap_CS_fsm[32'd137];

assign ap_CS_fsm_state170 = ap_CS_fsm[32'd169];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state203 = ap_CS_fsm[32'd202];

assign ap_CS_fsm_state204 = ap_CS_fsm[32'd203];

assign ap_CS_fsm_state231 = ap_CS_fsm[32'd230];

assign ap_CS_fsm_state266 = ap_CS_fsm[32'd265];

assign ap_CS_fsm_state267 = ap_CS_fsm[32'd266];

assign ap_CS_fsm_state268 = ap_CS_fsm[32'd267];

assign ap_CS_fsm_state269 = ap_CS_fsm[32'd268];

assign ap_CS_fsm_state270 = ap_CS_fsm[32'd269];

assign ap_CS_fsm_state271 = ap_CS_fsm[32'd270];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state306 = ap_CS_fsm[32'd305];

assign ap_CS_fsm_state307 = ap_CS_fsm[32'd306];

assign ap_CS_fsm_state308 = ap_CS_fsm[32'd307];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state72 = ap_CS_fsm[32'd71];

assign ap_phi_mux_found_0_phi_fu_258_p4 = found_0_reg_254;

assign clwm_1_fu_870_p2 = (13'd1 + trunc_ln108_reg_1310);

assign clwm_fu_829_p3 = ((tmp_6_reg_1294[0:0] === 1'b1) ? sub_ln108_1_fu_823_p2 : sext_ln108_2_fu_813_p1);

assign crtc_drain_rate_fu_450_p3 = ((tmp_2_reg_1087[0:0] === 1'b1) ? sub_ln111_1_fu_441_p2 : zext_ln111_1_fu_447_p1);

assign data_fu_1007_p3 = ((icmp_ln146_fu_1001_p2[0:0] === 1'b1) ? 12'd384 : add_ln109_1_fu_875_p2);

assign fifo_graphics_burst_size = 32'd128;

assign fifo_graphics_lwm = data_fu_1007_p3;

assign fifo_video_burst_size = vbs_0_fu_158;

assign fifo_video_lwm = (zext_ln148_fu_1044_p1 + 32'd15);

assign grp_fu_334_p2 = ((mclk_extra_3_fu_154 == 32'd0) ? 1'b1 : 1'b0);

assign grp_fu_343_p2 = ($signed(mclk_extra_3_fu_154) + $signed(32'd4294967295));

assign grp_fu_526_p0 = 32'd10000000;

assign grp_fu_531_p0 = 32'd10000000;

assign grp_fu_541_p0 = 32'd8000000;

assign grp_fu_568_p0 = $signed(grp_fu_536_p2);

assign grp_fu_715_p0 = $signed(grp_fu_707_p2);

assign grp_fu_741_p0 = grp_fu_741_p00;

assign grp_fu_741_p00 = lshr_ln_fu_728_p4;

assign icmp_ln123_1_fu_942_p2 = (($signed(m1_reg_1321) > $signed(13'd0)) ? 1'b1 : 1'b0);

assign icmp_ln123_fu_936_p2 = (($signed(p1_1_fu_928_p3) < $signed(sext_ln120_1_fu_880_p1)) ? 1'b1 : 1'b0);

assign icmp_ln130_1_fu_979_p2 = (($signed(tmp_12_fu_969_p4) > $signed(24'd0)) ? 1'b1 : 1'b0);

assign icmp_ln130_fu_963_p2 = (($signed(tmp_11_fu_953_p4) > $signed(4'd0)) ? 1'b1 : 1'b0);

assign icmp_ln138_fu_991_p2 = (($signed(clwm_1_fu_870_p2) > $signed(13'd519)) ? 1'b1 : 1'b0);

assign icmp_ln146_fu_1001_p2 = (($signed(clwm_1_fu_870_p2) < $signed(13'd384)) ? 1'b1 : 1'b0);

assign icmp_ln148_fu_1030_p2 = (($signed(tmp_13_fu_1020_p4) < $signed(25'd1)) ? 1'b1 : 1'b0);

assign icmp_ln60_fu_418_p2 = ((arb_enable_mp == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln73_fu_432_p2 = ((arb_enable_video == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln81_fu_479_p2 = (($signed(shl_ln81_fu_467_p2) > $signed(mul_ln81_fu_473_p2)) ? 1'b1 : 1'b0);

assign icmp_ln92_fu_673_p2 = (($signed(vlwm_reg_1241) > $signed(13'd128)) ? 1'b1 : 1'b0);

assign icmp_ln94_fu_678_p2 = (($signed(vlwm_reg_1241) > $signed(13'd192)) ? 1'b1 : 1'b0);

assign lshr_ln_fu_728_p4 = {{mul_ln97_reg_1258[26:4]}};

assign m1_fu_844_p2 = ($signed(13'd7809) + $signed(trunc_ln108_reg_1310));

assign mclk_loop_fu_508_p2 = (add_ln69_fu_503_p2 + arb_mem_latency);

assign mul_ln103_fu_485_p1 = arb_mem_page_miss;

assign mul_ln103_fu_485_p2 = ($signed({{1'b0}, {32'd2000000}}) * $signed(mul_ln103_fu_485_p1));

assign mul_ln108_fu_778_p1 = mul_ln117_reg_1289;

assign mul_ln108_fu_778_p2 = ($signed({{1'b0}, {65'd4503599628}}) * $signed(mul_ln108_fu_778_p1));

assign mul_ln111_fu_354_p0 = arb_pclk_khz;

assign mul_ln111_fu_354_p1 = arb_pix_bpp;

assign mul_ln111_fu_354_p2 = ($signed(mul_ln111_fu_354_p0) * $signed(mul_ln111_fu_354_p1));

assign mul_ln114_fu_461_p1 = arb_mem_page_miss;

assign mul_ln114_fu_461_p2 = ($signed({{1'b0}, {32'd3000000}}) * $signed(mul_ln114_fu_461_p1));

assign mul_ln117_fu_762_p1 = sext_ln111_reg_1133;

assign mul_ln117_fu_762_p2 = ($signed(p_pn_reg_294) * $signed(mul_ln117_fu_762_p1));

assign mul_ln121_fu_853_p0 = m1_fu_844_p2;

assign mul_ln121_fu_853_p1 = arb_pclk_khz;

assign mul_ln121_fu_853_p2 = ($signed(mul_ln121_fu_853_p0) * $signed(mul_ln121_fu_853_p1));

assign mul_ln122_fu_862_p1 = arb_pix_bpp;

assign mul_ln122_fu_862_p2 = ($signed(p1_reg_1332) * $signed(mul_ln122_fu_862_p1));

assign mul_ln70_fu_513_p2 = ($signed(mclk_loop_reg_1163) * $signed('hF4240));

assign mul_ln81_fu_473_p0 = arb_mclk_khz;

assign mul_ln81_fu_473_p1 = trunc_ln_fu_404_p4;

assign mul_ln81_fu_473_p2 = ($signed(mul_ln81_fu_473_p0) * $signed(mul_ln81_fu_473_p1));

assign mul_ln89_1_fu_615_p1 = shl_ln89_fu_606_p2;

assign mul_ln89_1_fu_615_p2 = ($signed({{1'b0}, {65'd4503599628}}) * $signed(mul_ln89_1_fu_615_p1));

assign mul_ln89_fu_594_p0 = arb_pclk_khz;

assign mul_ln89_fu_594_p2 = ($signed(mul_ln89_fu_594_p0) * $signed(us_video_reg_1208));

assign mul_ln97_fu_1055_p0 = 29'd1000000;

assign mul_ln97_fu_1055_p1 = mul_ln97_fu_1055_p10;

assign mul_ln97_fu_1055_p10 = select_ln94_fu_691_p3;

assign or_ln130_fu_985_p2 = (icmp_ln130_fu_963_p2 | icmp_ln130_1_fu_979_p2);

assign p1_1_fu_928_p3 = ((tmp_9_fu_883_p3[0:0] === 1'b1) ? sub_ln122_1_fu_909_p2 : zext_ln122_1_fu_924_p1);

assign select_ln108_fu_816_p3 = ((tmp_6_reg_1294[0:0] === 1'b1) ? sext_ln108_1_fu_809_p1 : sext_ln108_2_fu_813_p1);

assign select_ln148_fu_1036_p3 = ((icmp_ln148_fu_1030_p2[0:0] === 1'b1) ? 31'd128 : trunc_ln117_fu_866_p1);

assign select_ln60_fu_424_p3 = ((icmp_ln60_fu_418_p2[0:0] === 1'b1) ? 32'd13 : 32'd17);

assign select_ln89_1_fu_658_p3 = ((tmp_3_reg_1224[0:0] === 1'b1) ? sub_ln89_1_fu_652_p2 : tmp_5_reg_1235);

assign select_ln89_fu_646_p3 = ((tmp_3_reg_1224[0:0] === 1'b1) ? tmp_4_fu_636_p4 : tmp_5_reg_1235);

assign select_ln94_1_fu_683_p3 = ((icmp_ln94_fu_678_p2[0:0] === 1'b1) ? 8'd32 : 8'd64);

assign select_ln94_fu_691_p3 = ((icmp_ln92_fu_673_p2[0:0] === 1'b1) ? select_ln94_1_fu_683_p3 : 8'd128);

assign sext_ln108_1_fu_809_p1 = $signed(tmp_7_fu_799_p4);

assign sext_ln108_2_fu_813_p1 = $signed(tmp_8_reg_1305);

assign sext_ln111_fu_457_p1 = $signed(crtc_drain_rate_fu_450_p3);

assign sext_ln120_1_fu_880_p1 = m1_reg_1321;

assign sext_ln90_fu_670_p1 = vlwm_reg_1241;

assign shl_ln81_fu_467_p2 = arb_nvclk_khz << 32'd1;

assign shl_ln89_fu_606_p2 = mul_ln89_reg_1219 << 32'd1;

assign sub_ln108_1_fu_823_p2 = (32'd0 - select_ln108_fu_816_p3);

assign sub_ln108_fu_794_p2 = (65'd0 - mul_ln108_reg_1300);

assign sub_ln111_1_fu_441_p2 = (30'd0 - zext_ln111_fu_438_p1);

assign sub_ln111_fu_368_p2 = (32'd0 - mul_ln111_fu_354_p2);

assign sub_ln122_1_fu_909_p2 = (30'd0 - zext_ln122_fu_905_p1);

assign sub_ln122_fu_890_p2 = (32'd0 - mul_ln122_reg_1337);

assign sub_ln89_1_fu_652_p2 = (13'd0 - select_ln89_fu_646_p3);

assign sub_ln89_fu_631_p2 = (65'd0 - mul_ln89_1_reg_1230);

assign tmp_10_fu_915_p4 = {{mul_ln122_reg_1337[31:3]}};

assign tmp_11_fu_953_p4 = {{clwm_1_fu_870_p2[12:9]}};

assign tmp_12_fu_969_p4 = {{vlwm_1_reg_303[31:8]}};

assign tmp_13_fu_1020_p4 = {{vlwm_1_reg_303[31:7]}};

assign tmp_4_fu_636_p4 = {{sub_ln89_fu_631_p2[64:52]}};

assign tmp_7_fu_799_p4 = {{sub_ln108_fu_794_p2[64:52]}};

assign tmp_9_fu_883_p3 = mul_ln122_reg_1337[32'd31];

assign tmp_s_fu_895_p4 = {{sub_ln122_fu_890_p2[31:3]}};

assign trunc_ln108_fu_836_p1 = clwm_fu_829_p3[12:0];

assign trunc_ln109_fu_840_p1 = clwm_fu_829_p3[11:0];

assign trunc_ln117_fu_866_p1 = vlwm_1_reg_303[30:0];

assign trunc_ln_fu_404_p4 = {{arb_memory_width[31:6]}};

assign us_crt_1_fu_756_p2 = (add_ln105_1_fu_750_p2 + add_ln105_fu_746_p2);

assign us_crt_fu_558_p2 = (add_ln116_1_fu_552_p2 + add_ln116_fu_546_p2);

assign us_video_fu_589_p2 = (add_ln88_2_fu_583_p2 + vpm_us_reg_1188);

assign vlwm_fu_664_p2 = (13'd1 + select_ln89_1_fu_658_p3);

assign zext_ln111_1_fu_447_p1 = tmp_1_reg_1097;

assign zext_ln111_fu_438_p1 = tmp_reg_1092;

assign zext_ln122_1_fu_924_p1 = tmp_10_fu_915_p4;

assign zext_ln122_fu_905_p1 = tmp_s_fu_895_p4;

assign zext_ln148_fu_1044_p1 = select_ln148_fu_1036_p3;

assign zext_ln66_fu_499_p1 = vlwm_0_reg_265;

assign zext_ln94_1_fu_703_p1 = select_ln94_fu_691_p3;

always @ (posedge ap_clk) begin
    select_ln60_reg_1124[1:0] <= 2'b01;
    select_ln60_reg_1124[31:5] <= 27'b000000000000000000000000000;
    and_ln_reg_1152[2:0] <= 3'b000;
    zext_ln66_reg_1158[31] <= 1'b0;
    mul_ln70_reg_1168[5:0] <= 6'b000000;
    mul_ln89_1_reg_1230[0] <= 1'b0;
    zext_ln94_1_reg_1253[4:0] <= 5'b00000;
    zext_ln94_1_reg_1253[31:8] <= 24'b000000000000000000000000;
    vbs_0_fu_158[4:0] <= 5'b00000;
    vbs_0_fu_158[31:8] <= 24'b000000000000000000000000;
end

endmodule //nv4CalcArbitration
