// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="chebyshev2_fo_section,hls_ip_2019_1,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7k160t-fbg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=9.150600,HLS_SYN_LAT=70,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=120,HLS_SYN_FF=19097,HLS_SYN_LUT=29936,HLS_VERSION=2019_1}" *)

module chebyshev2_fo_section (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        S_b0,
        S_b0_ap_vld,
        S_b1,
        S_b1_ap_vld,
        S_b2,
        S_b2_ap_vld,
        S_b3,
        S_b3_ap_vld,
        S_b4,
        S_b4_ap_vld,
        S_a0,
        S_a0_ap_vld,
        S_a1,
        S_a1_ap_vld,
        S_a2,
        S_a2_ap_vld,
        S_a3,
        S_a3_ap_vld,
        S_a4,
        S_a4_ap_vld,
        a,
        c,
        tetta_b,
        g,
        si,
        b,
        D,
        c0
);

parameter    ap_ST_fsm_state1 = 126'd1;
parameter    ap_ST_fsm_state2 = 126'd2;
parameter    ap_ST_fsm_state3 = 126'd4;
parameter    ap_ST_fsm_state4 = 126'd8;
parameter    ap_ST_fsm_state5 = 126'd16;
parameter    ap_ST_fsm_state6 = 126'd32;
parameter    ap_ST_fsm_state7 = 126'd64;
parameter    ap_ST_fsm_state8 = 126'd128;
parameter    ap_ST_fsm_state9 = 126'd256;
parameter    ap_ST_fsm_state10 = 126'd512;
parameter    ap_ST_fsm_state11 = 126'd1024;
parameter    ap_ST_fsm_state12 = 126'd2048;
parameter    ap_ST_fsm_state13 = 126'd4096;
parameter    ap_ST_fsm_state14 = 126'd8192;
parameter    ap_ST_fsm_state15 = 126'd16384;
parameter    ap_ST_fsm_state16 = 126'd32768;
parameter    ap_ST_fsm_state17 = 126'd65536;
parameter    ap_ST_fsm_state18 = 126'd131072;
parameter    ap_ST_fsm_state19 = 126'd262144;
parameter    ap_ST_fsm_state20 = 126'd524288;
parameter    ap_ST_fsm_state21 = 126'd1048576;
parameter    ap_ST_fsm_state22 = 126'd2097152;
parameter    ap_ST_fsm_state23 = 126'd4194304;
parameter    ap_ST_fsm_state24 = 126'd8388608;
parameter    ap_ST_fsm_state25 = 126'd16777216;
parameter    ap_ST_fsm_state26 = 126'd33554432;
parameter    ap_ST_fsm_state27 = 126'd67108864;
parameter    ap_ST_fsm_state28 = 126'd134217728;
parameter    ap_ST_fsm_state29 = 126'd268435456;
parameter    ap_ST_fsm_state30 = 126'd536870912;
parameter    ap_ST_fsm_state31 = 126'd1073741824;
parameter    ap_ST_fsm_state32 = 126'd2147483648;
parameter    ap_ST_fsm_state33 = 126'd4294967296;
parameter    ap_ST_fsm_state34 = 126'd8589934592;
parameter    ap_ST_fsm_state35 = 126'd17179869184;
parameter    ap_ST_fsm_state36 = 126'd34359738368;
parameter    ap_ST_fsm_state37 = 126'd68719476736;
parameter    ap_ST_fsm_state38 = 126'd137438953472;
parameter    ap_ST_fsm_state39 = 126'd274877906944;
parameter    ap_ST_fsm_state40 = 126'd549755813888;
parameter    ap_ST_fsm_state41 = 126'd1099511627776;
parameter    ap_ST_fsm_state42 = 126'd2199023255552;
parameter    ap_ST_fsm_state43 = 126'd4398046511104;
parameter    ap_ST_fsm_state44 = 126'd8796093022208;
parameter    ap_ST_fsm_state45 = 126'd17592186044416;
parameter    ap_ST_fsm_state46 = 126'd35184372088832;
parameter    ap_ST_fsm_state47 = 126'd70368744177664;
parameter    ap_ST_fsm_state48 = 126'd140737488355328;
parameter    ap_ST_fsm_state49 = 126'd281474976710656;
parameter    ap_ST_fsm_state50 = 126'd562949953421312;
parameter    ap_ST_fsm_state51 = 126'd1125899906842624;
parameter    ap_ST_fsm_state52 = 126'd2251799813685248;
parameter    ap_ST_fsm_state53 = 126'd4503599627370496;
parameter    ap_ST_fsm_state54 = 126'd9007199254740992;
parameter    ap_ST_fsm_state55 = 126'd18014398509481984;
parameter    ap_ST_fsm_state56 = 126'd36028797018963968;
parameter    ap_ST_fsm_state57 = 126'd72057594037927936;
parameter    ap_ST_fsm_state58 = 126'd144115188075855872;
parameter    ap_ST_fsm_state59 = 126'd288230376151711744;
parameter    ap_ST_fsm_state60 = 126'd576460752303423488;
parameter    ap_ST_fsm_state61 = 126'd1152921504606846976;
parameter    ap_ST_fsm_state62 = 126'd2305843009213693952;
parameter    ap_ST_fsm_state63 = 126'd4611686018427387904;
parameter    ap_ST_fsm_state64 = 126'd9223372036854775808;
parameter    ap_ST_fsm_state65 = 126'd18446744073709551616;
parameter    ap_ST_fsm_state66 = 126'd36893488147419103232;
parameter    ap_ST_fsm_state67 = 126'd73786976294838206464;
parameter    ap_ST_fsm_state68 = 126'd147573952589676412928;
parameter    ap_ST_fsm_state69 = 126'd295147905179352825856;
parameter    ap_ST_fsm_state70 = 126'd590295810358705651712;
parameter    ap_ST_fsm_state71 = 126'd1180591620717411303424;
parameter    ap_ST_fsm_state72 = 126'd2361183241434822606848;
parameter    ap_ST_fsm_state73 = 126'd4722366482869645213696;
parameter    ap_ST_fsm_state74 = 126'd9444732965739290427392;
parameter    ap_ST_fsm_state75 = 126'd18889465931478580854784;
parameter    ap_ST_fsm_state76 = 126'd37778931862957161709568;
parameter    ap_ST_fsm_state77 = 126'd75557863725914323419136;
parameter    ap_ST_fsm_state78 = 126'd151115727451828646838272;
parameter    ap_ST_fsm_state79 = 126'd302231454903657293676544;
parameter    ap_ST_fsm_state80 = 126'd604462909807314587353088;
parameter    ap_ST_fsm_state81 = 126'd1208925819614629174706176;
parameter    ap_ST_fsm_state82 = 126'd2417851639229258349412352;
parameter    ap_ST_fsm_state83 = 126'd4835703278458516698824704;
parameter    ap_ST_fsm_state84 = 126'd9671406556917033397649408;
parameter    ap_ST_fsm_state85 = 126'd19342813113834066795298816;
parameter    ap_ST_fsm_state86 = 126'd38685626227668133590597632;
parameter    ap_ST_fsm_state87 = 126'd77371252455336267181195264;
parameter    ap_ST_fsm_state88 = 126'd154742504910672534362390528;
parameter    ap_ST_fsm_state89 = 126'd309485009821345068724781056;
parameter    ap_ST_fsm_state90 = 126'd618970019642690137449562112;
parameter    ap_ST_fsm_state91 = 126'd1237940039285380274899124224;
parameter    ap_ST_fsm_state92 = 126'd2475880078570760549798248448;
parameter    ap_ST_fsm_state93 = 126'd4951760157141521099596496896;
parameter    ap_ST_fsm_state94 = 126'd9903520314283042199192993792;
parameter    ap_ST_fsm_state95 = 126'd19807040628566084398385987584;
parameter    ap_ST_fsm_state96 = 126'd39614081257132168796771975168;
parameter    ap_ST_fsm_state97 = 126'd79228162514264337593543950336;
parameter    ap_ST_fsm_state98 = 126'd158456325028528675187087900672;
parameter    ap_ST_fsm_state99 = 126'd316912650057057350374175801344;
parameter    ap_ST_fsm_state100 = 126'd633825300114114700748351602688;
parameter    ap_ST_fsm_state101 = 126'd1267650600228229401496703205376;
parameter    ap_ST_fsm_state102 = 126'd2535301200456458802993406410752;
parameter    ap_ST_fsm_state103 = 126'd5070602400912917605986812821504;
parameter    ap_ST_fsm_state104 = 126'd10141204801825835211973625643008;
parameter    ap_ST_fsm_state105 = 126'd20282409603651670423947251286016;
parameter    ap_ST_fsm_state106 = 126'd40564819207303340847894502572032;
parameter    ap_ST_fsm_state107 = 126'd81129638414606681695789005144064;
parameter    ap_ST_fsm_state108 = 126'd162259276829213363391578010288128;
parameter    ap_ST_fsm_state109 = 126'd324518553658426726783156020576256;
parameter    ap_ST_fsm_state110 = 126'd649037107316853453566312041152512;
parameter    ap_ST_fsm_state111 = 126'd1298074214633706907132624082305024;
parameter    ap_ST_fsm_state112 = 126'd2596148429267413814265248164610048;
parameter    ap_ST_fsm_state113 = 126'd5192296858534827628530496329220096;
parameter    ap_ST_fsm_state114 = 126'd10384593717069655257060992658440192;
parameter    ap_ST_fsm_state115 = 126'd20769187434139310514121985316880384;
parameter    ap_ST_fsm_state116 = 126'd41538374868278621028243970633760768;
parameter    ap_ST_fsm_state117 = 126'd83076749736557242056487941267521536;
parameter    ap_ST_fsm_state118 = 126'd166153499473114484112975882535043072;
parameter    ap_ST_fsm_state119 = 126'd332306998946228968225951765070086144;
parameter    ap_ST_fsm_state120 = 126'd664613997892457936451903530140172288;
parameter    ap_ST_fsm_state121 = 126'd1329227995784915872903807060280344576;
parameter    ap_ST_fsm_state122 = 126'd2658455991569831745807614120560689152;
parameter    ap_ST_fsm_state123 = 126'd5316911983139663491615228241121378304;
parameter    ap_ST_fsm_state124 = 126'd10633823966279326983230456482242756608;
parameter    ap_ST_fsm_state125 = 126'd21267647932558653966460912964485513216;
parameter    ap_ST_fsm_state126 = 126'd42535295865117307932921825928971026432;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [63:0] S_b0;
output   S_b0_ap_vld;
output  [31:0] S_b1;
output   S_b1_ap_vld;
output  [63:0] S_b2;
output   S_b2_ap_vld;
output  [31:0] S_b3;
output   S_b3_ap_vld;
output  [63:0] S_b4;
output   S_b4_ap_vld;
output  [31:0] S_a0;
output   S_a0_ap_vld;
output  [31:0] S_a1;
output   S_a1_ap_vld;
output  [63:0] S_a2;
output   S_a2_ap_vld;
output  [31:0] S_a3;
output   S_a3_ap_vld;
output  [63:0] S_a4;
output   S_a4_ap_vld;
input  [63:0] a;
input  [63:0] c;
input  [63:0] tetta_b;
input  [63:0] g;
input  [63:0] si;
input  [63:0] b;
input  [63:0] D;
input  [63:0] c0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg S_b0_ap_vld;
reg[31:0] S_b1;
reg S_b1_ap_vld;
reg S_b2_ap_vld;
reg[31:0] S_b3;
reg S_b3_ap_vld;
reg[63:0] S_b4;
reg S_b4_ap_vld;
reg S_a0_ap_vld;
reg[31:0] S_a1;
reg S_a1_ap_vld;
reg[63:0] S_a2;
reg S_a2_ap_vld;
reg[31:0] S_a3;
reg S_a3_ap_vld;
reg S_a4_ap_vld;

(* fsm_encoding = "none" *) reg   [125:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [63:0] grp_fu_260_p2;
reg   [63:0] reg_342;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_state24;
wire    ap_CS_fsm_state29;
wire    ap_CS_fsm_state34;
wire    ap_CS_fsm_state39;
wire    ap_CS_fsm_state44;
wire    ap_CS_fsm_state85;
wire    ap_CS_fsm_state90;
wire    ap_CS_fsm_state95;
wire    ap_CS_fsm_state100;
reg   [63:0] reg_354;
wire    ap_CS_fsm_state10;
wire    ap_CS_fsm_state15;
wire    ap_CS_fsm_state49;
reg   [63:0] reg_364;
wire    ap_CS_fsm_state19;
wire    ap_CS_fsm_state75;
wire    ap_CS_fsm_state80;
wire   [63:0] grp_fu_268_p2;
reg   [63:0] reg_370;
wire   [63:0] grp_fu_272_p2;
reg   [63:0] reg_381;
wire   [63:0] grp_fu_276_p2;
reg   [63:0] reg_391;
wire   [63:0] grp_fu_281_p2;
reg   [63:0] reg_402;
wire   [63:0] grp_fu_286_p2;
reg   [63:0] reg_411;
wire   [63:0] grp_fu_231_p2;
reg   [63:0] reg_418;
reg   [63:0] reg_427;
wire   [63:0] grp_fu_235_p2;
reg   [63:0] reg_436;
wire   [63:0] grp_fu_240_p2;
reg   [63:0] reg_447;
reg   [63:0] reg_458;
wire   [63:0] grp_fu_244_p2;
reg   [63:0] reg_466;
wire   [63:0] grp_fu_248_p2;
reg   [63:0] reg_473;
wire   [63:0] grp_fu_304_p2;
reg   [63:0] reg_479;
wire    ap_CS_fsm_state66;
wire    ap_CS_fsm_state122;
wire   [63:0] grp_fu_308_p2;
reg   [63:0] reg_483;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state14;
wire   [0:0] and_ln23_fu_528_p2;
reg   [0:0] and_ln23_reg_1475;
wire   [63:0] grp_fu_290_p2;
reg   [63:0] tmp_69_reg_1479;
wire   [63:0] grp_fu_294_p2;
reg   [63:0] tmp_71_reg_1484;
wire   [63:0] grp_fu_298_p2;
reg   [63:0] tmp_83_reg_1489;
wire   [63:0] grp_fu_252_p2;
reg   [63:0] tmp_80_reg_1494;
wire   [63:0] grp_fu_256_p2;
reg   [63:0] tmp_85_reg_1499;
wire   [63:0] grp_fu_312_p2;
reg   [63:0] x_assign_4_reg_1504;
wire   [63:0] grp_fu_316_p2;
reg   [63:0] x_assign_5_reg_1509;
reg   [63:0] tmp_13_reg_1514;
wire    ap_CS_fsm_state105;
reg   [63:0] tmp_22_reg_1519;
wire   [63:0] grp_fu_324_p2;
reg   [63:0] ap_phi_mux_storemerge_phi_fu_223_p4;
wire    ap_CS_fsm_state71;
wire   [31:0] p_Val2_35_fu_670_p3;
wire    ap_CS_fsm_state67;
wire   [31:0] p_Val2_31_fu_1248_p3;
wire    ap_CS_fsm_state123;
wire   [31:0] p_Val2_37_fu_815_p3;
wire   [31:0] p_Val2_39_fu_959_p3;
wire   [31:0] p_Val2_33_fu_1393_p3;
wire   [31:0] p_Val2_41_fu_1103_p3;
reg   [63:0] grp_fu_231_p0;
reg   [63:0] grp_fu_231_p1;
wire    ap_CS_fsm_state30;
wire    ap_CS_fsm_state35;
wire    ap_CS_fsm_state40;
wire    ap_CS_fsm_state45;
wire    ap_CS_fsm_state86;
wire    ap_CS_fsm_state91;
wire    ap_CS_fsm_state96;
wire    ap_CS_fsm_state101;
reg   [63:0] grp_fu_235_p0;
reg   [63:0] grp_fu_235_p1;
reg   [63:0] grp_fu_240_p0;
reg   [63:0] grp_fu_240_p1;
reg   [63:0] grp_fu_244_p0;
reg   [63:0] grp_fu_244_p1;
reg   [63:0] grp_fu_248_p0;
reg   [63:0] grp_fu_248_p1;
reg   [63:0] grp_fu_260_p0;
reg   [63:0] grp_fu_260_p1;
wire    ap_CS_fsm_state11;
wire    ap_CS_fsm_state20;
wire    ap_CS_fsm_state25;
wire    ap_CS_fsm_state76;
wire    ap_CS_fsm_state81;
reg   [63:0] grp_fu_268_p0;
reg   [63:0] grp_fu_268_p1;
reg   [63:0] grp_fu_272_p0;
reg   [63:0] grp_fu_272_p1;
reg   [63:0] grp_fu_276_p0;
reg   [63:0] grp_fu_276_p1;
reg   [63:0] grp_fu_281_p0;
reg   [63:0] grp_fu_281_p1;
reg   [63:0] grp_fu_286_p0;
reg   [63:0] grp_fu_286_p1;
reg   [63:0] grp_fu_304_p0;
wire    ap_CS_fsm_state50;
wire    ap_CS_fsm_state106;
reg   [63:0] grp_fu_308_p0;
reg   [63:0] grp_fu_312_p0;
reg   [63:0] grp_fu_316_p0;
wire   [63:0] bitcast_ln23_fu_487_p1;
wire   [10:0] tmp_fu_490_p4;
wire   [51:0] trunc_ln23_fu_500_p1;
wire   [0:0] icmp_ln23_1_fu_510_p2;
wire   [0:0] icmp_ln23_fu_504_p2;
wire   [0:0] grp_fu_330_p2;
wire   [0:0] grp_fu_336_p2;
wire   [0:0] or_ln23_fu_516_p2;
wire   [0:0] or_ln23_1_fu_522_p2;
wire   [63:0] p_Val2_10_fu_534_p1;
wire   [51:0] tmp_V_5_fu_556_p1;
wire   [53:0] mantissa_V_2_fu_560_p4;
wire   [10:0] tmp_V_4_fu_546_p4;
wire   [11:0] zext_ln502_2_fu_574_p1;
wire   [11:0] add_ln502_2_fu_578_p2;
wire   [10:0] sub_ln1311_2_fu_592_p2;
wire   [0:0] isNeg_2_fu_584_p3;
wire  signed [11:0] sext_ln1311_4_fu_598_p1;
wire   [11:0] ush_2_fu_602_p3;
wire  signed [31:0] sext_ln1311_5_fu_610_p1;
wire   [53:0] zext_ln1285_2_fu_618_p1;
wire   [136:0] zext_ln682_2_fu_570_p1;
wire   [136:0] zext_ln1287_2_fu_614_p1;
wire   [53:0] r_V_4_fu_622_p2;
wire   [0:0] tmp_102_fu_634_p3;
wire   [136:0] r_V_5_fu_628_p2;
wire   [31:0] zext_ln662_2_fu_642_p1;
wire   [31:0] tmp_90_fu_646_p4;
wire   [31:0] p_Val2_34_fu_656_p3;
wire   [0:0] p_Result_2_fu_538_p3;
wire   [31:0] result_V_5_fu_664_p2;
wire   [63:0] p_Val2_15_fu_679_p1;
wire   [51:0] tmp_V_7_fu_701_p1;
wire   [53:0] mantissa_V_3_fu_705_p4;
wire   [10:0] tmp_V_6_fu_691_p4;
wire   [11:0] zext_ln502_3_fu_719_p1;
wire   [11:0] add_ln502_3_fu_723_p2;
wire   [10:0] sub_ln1311_3_fu_737_p2;
wire   [0:0] isNeg_3_fu_729_p3;
wire  signed [11:0] sext_ln1311_6_fu_743_p1;
wire   [11:0] ush_3_fu_747_p3;
wire  signed [31:0] sext_ln1311_7_fu_755_p1;
wire   [53:0] zext_ln1285_3_fu_763_p1;
wire   [136:0] zext_ln682_3_fu_715_p1;
wire   [136:0] zext_ln1287_3_fu_759_p1;
wire   [53:0] r_V_6_fu_767_p2;
wire   [0:0] tmp_105_fu_779_p3;
wire   [136:0] r_V_7_fu_773_p2;
wire   [31:0] zext_ln662_3_fu_787_p1;
wire   [31:0] tmp_91_fu_791_p4;
wire   [31:0] p_Val2_36_fu_801_p3;
wire   [0:0] p_Result_3_fu_683_p3;
wire   [31:0] result_V_7_fu_809_p2;
wire   [63:0] p_Val2_20_fu_824_p1;
wire   [51:0] tmp_V_9_fu_845_p1;
wire   [53:0] mantissa_V_4_fu_849_p4;
wire   [10:0] tmp_V_8_fu_835_p4;
wire   [11:0] zext_ln502_4_fu_863_p1;
wire   [11:0] add_ln502_4_fu_867_p2;
wire   [10:0] sub_ln1311_4_fu_881_p2;
wire   [0:0] isNeg_4_fu_873_p3;
wire  signed [11:0] sext_ln1311_8_fu_887_p1;
wire   [11:0] ush_4_fu_891_p3;
wire  signed [31:0] sext_ln1311_9_fu_899_p1;
wire   [53:0] zext_ln1285_4_fu_907_p1;
wire   [136:0] zext_ln682_4_fu_859_p1;
wire   [136:0] zext_ln1287_4_fu_903_p1;
wire   [53:0] r_V_8_fu_911_p2;
wire   [0:0] tmp_108_fu_923_p3;
wire   [136:0] r_V_9_fu_917_p2;
wire   [31:0] zext_ln662_4_fu_931_p1;
wire   [31:0] tmp_93_fu_935_p4;
wire   [31:0] p_Val2_38_fu_945_p3;
wire   [0:0] p_Result_4_fu_827_p3;
wire   [31:0] result_V_9_fu_953_p2;
wire   [63:0] p_Val2_25_fu_968_p1;
wire   [51:0] tmp_V_11_fu_989_p1;
wire   [53:0] mantissa_V_5_fu_993_p4;
wire   [10:0] tmp_V_10_fu_979_p4;
wire   [11:0] zext_ln502_5_fu_1007_p1;
wire   [11:0] add_ln502_5_fu_1011_p2;
wire   [10:0] sub_ln1311_5_fu_1025_p2;
wire   [0:0] isNeg_5_fu_1017_p3;
wire  signed [11:0] sext_ln1311_10_fu_1031_p1;
wire   [11:0] ush_5_fu_1035_p3;
wire  signed [31:0] sext_ln1311_11_fu_1043_p1;
wire   [53:0] zext_ln1285_5_fu_1051_p1;
wire   [136:0] zext_ln682_5_fu_1003_p1;
wire   [136:0] zext_ln1287_5_fu_1047_p1;
wire   [53:0] r_V_10_fu_1055_p2;
wire   [0:0] tmp_111_fu_1067_p3;
wire   [136:0] r_V_11_fu_1061_p2;
wire   [31:0] zext_ln662_5_fu_1075_p1;
wire   [31:0] tmp_94_fu_1079_p4;
wire   [31:0] p_Val2_40_fu_1089_p3;
wire   [0:0] p_Result_5_fu_971_p3;
wire   [31:0] result_V_11_fu_1097_p2;
wire   [63:0] p_Val2_s_fu_1112_p1;
wire   [51:0] tmp_V_1_fu_1134_p1;
wire   [53:0] mantissa_V_fu_1138_p4;
wire   [10:0] tmp_V_fu_1124_p4;
wire   [11:0] zext_ln502_fu_1152_p1;
wire   [11:0] add_ln502_fu_1156_p2;
wire   [10:0] sub_ln1311_fu_1170_p2;
wire   [0:0] isNeg_fu_1162_p3;
wire  signed [11:0] sext_ln1311_fu_1176_p1;
wire   [11:0] ush_fu_1180_p3;
wire  signed [31:0] sext_ln1311_1_fu_1188_p1;
wire   [53:0] zext_ln1285_fu_1196_p1;
wire   [136:0] zext_ln682_fu_1148_p1;
wire   [136:0] zext_ln1287_fu_1192_p1;
wire   [53:0] r_V_fu_1200_p2;
wire   [0:0] tmp_92_fu_1212_p3;
wire   [136:0] r_V_1_fu_1206_p2;
wire   [31:0] zext_ln662_fu_1220_p1;
wire   [31:0] tmp_30_fu_1224_p4;
wire   [31:0] p_Val2_30_fu_1234_p3;
wire   [0:0] p_Result_s_fu_1116_p3;
wire   [31:0] result_V_1_fu_1242_p2;
wire   [63:0] p_Val2_5_fu_1257_p1;
wire   [51:0] tmp_V_3_fu_1279_p1;
wire   [53:0] mantissa_V_1_fu_1283_p4;
wire   [10:0] tmp_V_2_fu_1269_p4;
wire   [11:0] zext_ln502_1_fu_1297_p1;
wire   [11:0] add_ln502_1_fu_1301_p2;
wire   [10:0] sub_ln1311_1_fu_1315_p2;
wire   [0:0] isNeg_1_fu_1307_p3;
wire  signed [11:0] sext_ln1311_2_fu_1321_p1;
wire   [11:0] ush_1_fu_1325_p3;
wire  signed [31:0] sext_ln1311_3_fu_1333_p1;
wire   [53:0] zext_ln1285_1_fu_1341_p1;
wire   [136:0] zext_ln682_1_fu_1293_p1;
wire   [136:0] zext_ln1287_1_fu_1337_p1;
wire   [53:0] r_V_2_fu_1345_p2;
wire   [0:0] tmp_98_fu_1357_p3;
wire   [136:0] r_V_3_fu_1351_p2;
wire   [31:0] zext_ln662_1_fu_1365_p1;
wire   [31:0] tmp_89_fu_1369_p4;
wire   [31:0] p_Val2_32_fu_1379_p3;
wire   [0:0] p_Result_1_fu_1261_p3;
wire   [31:0] result_V_3_fu_1387_p2;
reg   [1:0] grp_fu_231_opcode;
reg   [1:0] grp_fu_235_opcode;
reg   [1:0] grp_fu_240_opcode;
reg   [125:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 126'd1;
end

chebyshev2_fo_section_dadddsub_64ns_64ns_64_5_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
chebyshev2_fo_section_dadddsub_64ns_64ns_64_5_full_dsp_1_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_231_p0),
    .din1(grp_fu_231_p1),
    .opcode(grp_fu_231_opcode),
    .ce(1'b1),
    .dout(grp_fu_231_p2)
);

chebyshev2_fo_section_dadddsub_64ns_64ns_64_5_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
chebyshev2_fo_section_dadddsub_64ns_64ns_64_5_full_dsp_1_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_235_p0),
    .din1(grp_fu_235_p1),
    .opcode(grp_fu_235_opcode),
    .ce(1'b1),
    .dout(grp_fu_235_p2)
);

chebyshev2_fo_section_dadddsub_64ns_64ns_64_5_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
chebyshev2_fo_section_dadddsub_64ns_64ns_64_5_full_dsp_1_U3(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_240_p0),
    .din1(grp_fu_240_p1),
    .opcode(grp_fu_240_opcode),
    .ce(1'b1),
    .dout(grp_fu_240_p2)
);

chebyshev2_fo_section_dsub_64ns_64ns_64_5_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
chebyshev2_fo_section_dsub_64ns_64ns_64_5_full_dsp_1_U4(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_244_p0),
    .din1(grp_fu_244_p1),
    .ce(1'b1),
    .dout(grp_fu_244_p2)
);

chebyshev2_fo_section_dadd_64ns_64ns_64_5_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
chebyshev2_fo_section_dadd_64ns_64ns_64_5_full_dsp_1_U5(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_248_p0),
    .din1(grp_fu_248_p1),
    .ce(1'b1),
    .dout(grp_fu_248_p2)
);

chebyshev2_fo_section_dsub_64ns_64ns_64_5_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
chebyshev2_fo_section_dsub_64ns_64ns_64_5_full_dsp_1_U6(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_447),
    .din1(reg_458),
    .ce(1'b1),
    .dout(grp_fu_252_p2)
);

chebyshev2_fo_section_dsub_64ns_64ns_64_5_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
chebyshev2_fo_section_dsub_64ns_64ns_64_5_full_dsp_1_U7(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_391),
    .din1(reg_402),
    .ce(1'b1),
    .dout(grp_fu_256_p2)
);

chebyshev2_fo_section_dmul_64ns_64ns_64_5_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
chebyshev2_fo_section_dmul_64ns_64ns_64_5_max_dsp_1_U8(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_260_p0),
    .din1(grp_fu_260_p1),
    .ce(1'b1),
    .dout(grp_fu_260_p2)
);

chebyshev2_fo_section_dmul_64ns_64ns_64_5_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
chebyshev2_fo_section_dmul_64ns_64ns_64_5_max_dsp_1_U9(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_268_p0),
    .din1(grp_fu_268_p1),
    .ce(1'b1),
    .dout(grp_fu_268_p2)
);

chebyshev2_fo_section_dmul_64ns_64ns_64_5_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
chebyshev2_fo_section_dmul_64ns_64ns_64_5_max_dsp_1_U10(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_272_p0),
    .din1(grp_fu_272_p1),
    .ce(1'b1),
    .dout(grp_fu_272_p2)
);

chebyshev2_fo_section_dmul_64ns_64ns_64_5_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
chebyshev2_fo_section_dmul_64ns_64ns_64_5_max_dsp_1_U11(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_276_p0),
    .din1(grp_fu_276_p1),
    .ce(1'b1),
    .dout(grp_fu_276_p2)
);

chebyshev2_fo_section_dmul_64ns_64ns_64_5_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
chebyshev2_fo_section_dmul_64ns_64ns_64_5_max_dsp_1_U12(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_281_p0),
    .din1(grp_fu_281_p1),
    .ce(1'b1),
    .dout(grp_fu_281_p2)
);

chebyshev2_fo_section_dmul_64ns_64ns_64_5_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
chebyshev2_fo_section_dmul_64ns_64ns_64_5_max_dsp_1_U13(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_286_p0),
    .din1(grp_fu_286_p1),
    .ce(1'b1),
    .dout(grp_fu_286_p2)
);

chebyshev2_fo_section_dmul_64ns_64ns_64_5_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
chebyshev2_fo_section_dmul_64ns_64ns_64_5_max_dsp_1_U14(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(c),
    .din1(c),
    .ce(1'b1),
    .dout(grp_fu_290_p2)
);

chebyshev2_fo_section_dmul_64ns_64ns_64_5_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
chebyshev2_fo_section_dmul_64ns_64ns_64_5_max_dsp_1_U15(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(a),
    .din1(si),
    .ce(1'b1),
    .dout(grp_fu_294_p2)
);

chebyshev2_fo_section_dmul_64ns_64ns_64_5_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
chebyshev2_fo_section_dmul_64ns_64ns_64_5_max_dsp_1_U16(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_402),
    .din1(si),
    .ce(1'b1),
    .dout(grp_fu_298_p2)
);

chebyshev2_fo_section_ddiv_64ns_64ns_64_22_1 #(
    .ID( 1 ),
    .NUM_STAGE( 22 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
chebyshev2_fo_section_ddiv_64ns_64ns_64_22_1_U17(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_304_p0),
    .din1(D),
    .ce(1'b1),
    .dout(grp_fu_304_p2)
);

chebyshev2_fo_section_ddiv_64ns_64ns_64_22_1 #(
    .ID( 1 ),
    .NUM_STAGE( 22 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
chebyshev2_fo_section_ddiv_64ns_64ns_64_22_1_U18(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_308_p0),
    .din1(D),
    .ce(1'b1),
    .dout(grp_fu_308_p2)
);

chebyshev2_fo_section_ddiv_64ns_64ns_64_22_1 #(
    .ID( 1 ),
    .NUM_STAGE( 22 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
chebyshev2_fo_section_ddiv_64ns_64ns_64_22_1_U19(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_312_p0),
    .din1(D),
    .ce(1'b1),
    .dout(grp_fu_312_p2)
);

chebyshev2_fo_section_ddiv_64ns_64ns_64_22_1 #(
    .ID( 1 ),
    .NUM_STAGE( 22 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
chebyshev2_fo_section_ddiv_64ns_64ns_64_22_1_U20(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_316_p0),
    .din1(D),
    .ce(1'b1),
    .dout(grp_fu_316_p2)
);

chebyshev2_fo_section_ddiv_64ns_64ns_64_22_1 #(
    .ID( 1 ),
    .NUM_STAGE( 22 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
chebyshev2_fo_section_ddiv_64ns_64ns_64_22_1_U21(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_447),
    .din1(D),
    .ce(1'b1),
    .dout(grp_fu_324_p2)
);

chebyshev2_fo_section_dcmp_64ns_64ns_1_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 1 ))
chebyshev2_fo_section_dcmp_64ns_64ns_1_2_1_U22(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(c0),
    .din1(64'd4607182418800017408),
    .ce(1'b1),
    .opcode(5'd1),
    .dout(grp_fu_330_p2)
);

chebyshev2_fo_section_dcmp_64ns_64ns_1_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 1 ))
chebyshev2_fo_section_dcmp_64ns_64ns_1_2_1_U23(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(c0),
    .din1(64'd13830554455654793216),
    .ce(1'b1),
    .opcode(5'd1),
    .dout(grp_fu_336_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        and_ln23_reg_1475 <= and_ln23_fu_528_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state100) | (1'b1 == ap_CS_fsm_state95) | (1'b1 == ap_CS_fsm_state90) | (1'b1 == ap_CS_fsm_state85) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state5))) begin
        reg_342 <= grp_fu_260_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state10))) begin
        reg_354 <= grp_fu_260_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state80) | (1'b1 == ap_CS_fsm_state75) | (1'b1 == ap_CS_fsm_state19))) begin
        reg_364 <= grp_fu_260_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state80) | (1'b1 == ap_CS_fsm_state100) | (1'b1 == ap_CS_fsm_state85) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state24))) begin
        reg_370 <= grp_fu_268_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state90) | (1'b1 == ap_CS_fsm_state85) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state24))) begin
        reg_381 <= grp_fu_272_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state85) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state24))) begin
        reg_391 <= grp_fu_276_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state85) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state24))) begin
        reg_402 <= grp_fu_281_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state85) | (1'b1 == ap_CS_fsm_state29))) begin
        reg_411 <= grp_fu_286_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state100) | (1'b1 == ap_CS_fsm_state95) | (1'b1 == ap_CS_fsm_state90) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state34))) begin
        reg_418 <= grp_fu_231_p2;
        reg_436 <= grp_fu_235_p2;
        reg_447 <= grp_fu_240_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state90) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state34))) begin
        reg_427 <= grp_fu_268_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state34))) begin
        reg_458 <= grp_fu_272_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state95) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state39))) begin
        reg_466 <= grp_fu_244_p2;
        reg_473 <= grp_fu_248_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state122) | (1'b1 == ap_CS_fsm_state66))) begin
        reg_479 <= grp_fu_304_p2;
        reg_483 <= grp_fu_308_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state105)) begin
        tmp_13_reg_1514 <= grp_fu_231_p2;
        tmp_22_reg_1519 <= grp_fu_235_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        tmp_69_reg_1479 <= grp_fu_290_p2;
        tmp_71_reg_1484 <= grp_fu_294_p2;
        tmp_83_reg_1489 <= grp_fu_298_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        tmp_80_reg_1494 <= grp_fu_252_p2;
        tmp_85_reg_1499 <= grp_fu_256_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state66)) begin
        x_assign_4_reg_1504 <= grp_fu_312_p2;
        x_assign_5_reg_1509 <= grp_fu_316_p2;
    end
end

always @ (*) begin
    if ((((1'd1 == and_ln23_reg_1475) & (1'b1 == ap_CS_fsm_state71)) | ((1'd0 == and_ln23_reg_1475) & (1'b1 == ap_CS_fsm_state71)))) begin
        S_a0_ap_vld = 1'b1;
    end else begin
        S_a0_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state123)) begin
        S_a1 = p_Val2_33_fu_1393_p3;
    end else if ((1'b1 == ap_CS_fsm_state67)) begin
        S_a1 = p_Val2_39_fu_959_p3;
    end else begin
        S_a1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state123) | (1'b1 == ap_CS_fsm_state67))) begin
        S_a1_ap_vld = 1'b1;
    end else begin
        S_a1_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state122)) begin
        S_a2 = grp_fu_312_p2;
    end else if (((1'd0 == and_ln23_reg_1475) & (1'b1 == ap_CS_fsm_state71))) begin
        S_a2 = grp_fu_316_p2;
    end else begin
        S_a2 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state122) | ((1'd0 == and_ln23_reg_1475) & (1'b1 == ap_CS_fsm_state71)))) begin
        S_a2_ap_vld = 1'b1;
    end else begin
        S_a2_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln23_reg_1475) & (1'b1 == ap_CS_fsm_state71))) begin
        S_a3 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state67)) begin
        S_a3 = p_Val2_41_fu_1103_p3;
    end else begin
        S_a3 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state67) | ((1'd1 == and_ln23_reg_1475) & (1'b1 == ap_CS_fsm_state71)))) begin
        S_a3_ap_vld = 1'b1;
    end else begin
        S_a3_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state71)) begin
        S_a4_ap_vld = 1'b1;
    end else begin
        S_a4_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((((1'd1 == and_ln23_reg_1475) & (1'b1 == ap_CS_fsm_state71)) | ((1'd0 == and_ln23_reg_1475) & (1'b1 == ap_CS_fsm_state71)))) begin
        S_b0_ap_vld = 1'b1;
    end else begin
        S_b0_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state123)) begin
        S_b1 = p_Val2_31_fu_1248_p3;
    end else if ((1'b1 == ap_CS_fsm_state67)) begin
        S_b1 = p_Val2_35_fu_670_p3;
    end else begin
        S_b1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state123) | (1'b1 == ap_CS_fsm_state67))) begin
        S_b1_ap_vld = 1'b1;
    end else begin
        S_b1_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((((1'd1 == and_ln23_reg_1475) & (1'b1 == ap_CS_fsm_state71)) | ((1'd0 == and_ln23_reg_1475) & (1'b1 == ap_CS_fsm_state71)))) begin
        S_b2_ap_vld = 1'b1;
    end else begin
        S_b2_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln23_reg_1475) & (1'b1 == ap_CS_fsm_state71))) begin
        S_b3 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state67)) begin
        S_b3 = p_Val2_37_fu_815_p3;
    end else begin
        S_b3 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state67) | ((1'd1 == and_ln23_reg_1475) & (1'b1 == ap_CS_fsm_state71)))) begin
        S_b3_ap_vld = 1'b1;
    end else begin
        S_b3_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state71)) begin
        if ((1'd1 == and_ln23_reg_1475)) begin
            S_b4 = 64'd0;
        end else if ((1'd0 == and_ln23_reg_1475)) begin
            S_b4 = grp_fu_312_p2;
        end else begin
            S_b4 = 'bx;
        end
    end else begin
        S_b4 = 'bx;
    end
end

always @ (*) begin
    if ((((1'd1 == and_ln23_reg_1475) & (1'b1 == ap_CS_fsm_state71)) | ((1'd0 == and_ln23_reg_1475) & (1'b1 == ap_CS_fsm_state71)))) begin
        S_b4_ap_vld = 1'b1;
    end else begin
        S_b4_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state71)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state71)) begin
        if ((1'd1 == and_ln23_reg_1475)) begin
            ap_phi_mux_storemerge_phi_fu_223_p4 = 64'd0;
        end else if ((1'd0 == and_ln23_reg_1475)) begin
            ap_phi_mux_storemerge_phi_fu_223_p4 = grp_fu_324_p2;
        end else begin
            ap_phi_mux_storemerge_phi_fu_223_p4 = 'bx;
        end
    end else begin
        ap_phi_mux_storemerge_phi_fu_223_p4 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state71)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state86)) begin
        grp_fu_231_opcode = 2'd1;
    end else if (((1'b1 == ap_CS_fsm_state101) | (1'b1 == ap_CS_fsm_state96) | (1'b1 == ap_CS_fsm_state91) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state30))) begin
        grp_fu_231_opcode = 2'd0;
    end else begin
        grp_fu_231_opcode = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state101) | (1'b1 == ap_CS_fsm_state96) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state40))) begin
        grp_fu_231_p0 = reg_418;
    end else if (((1'b1 == ap_CS_fsm_state91) | (1'b1 == ap_CS_fsm_state86) | (1'b1 == ap_CS_fsm_state35))) begin
        grp_fu_231_p0 = reg_354;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        grp_fu_231_p0 = reg_370;
    end else begin
        grp_fu_231_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state101)) begin
        grp_fu_231_p1 = reg_427;
    end else if (((1'b1 == ap_CS_fsm_state96) | (1'b1 == ap_CS_fsm_state86) | (1'b1 == ap_CS_fsm_state40))) begin
        grp_fu_231_p1 = reg_370;
    end else if (((1'b1 == ap_CS_fsm_state91) | (1'b1 == ap_CS_fsm_state35))) begin
        grp_fu_231_p1 = reg_342;
    end else if (((1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state30))) begin
        grp_fu_231_p1 = reg_381;
    end else begin
        grp_fu_231_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state91) | (1'b1 == ap_CS_fsm_state86) | (1'b1 == ap_CS_fsm_state40))) begin
        grp_fu_235_opcode = 2'd1;
    end else if (((1'b1 == ap_CS_fsm_state101) | (1'b1 == ap_CS_fsm_state96) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state30))) begin
        grp_fu_235_opcode = 2'd0;
    end else begin
        grp_fu_235_opcode = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state101)) begin
        grp_fu_235_p0 = reg_436;
    end else if ((1'b1 == ap_CS_fsm_state86)) begin
        grp_fu_235_p0 = reg_391;
    end else if (((1'b1 == ap_CS_fsm_state96) | (1'b1 == ap_CS_fsm_state45))) begin
        grp_fu_235_p0 = reg_447;
    end else if ((1'b1 == ap_CS_fsm_state40)) begin
        grp_fu_235_p0 = reg_427;
    end else if (((1'b1 == ap_CS_fsm_state91) | (1'b1 == ap_CS_fsm_state35))) begin
        grp_fu_235_p0 = reg_418;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        grp_fu_235_p0 = reg_402;
    end else begin
        grp_fu_235_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state96)) begin
        grp_fu_235_p1 = reg_370;
    end else if ((1'b1 == ap_CS_fsm_state86)) begin
        grp_fu_235_p1 = reg_402;
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        grp_fu_235_p1 = reg_381;
    end else if ((1'b1 == ap_CS_fsm_state40)) begin
        grp_fu_235_p1 = reg_354;
    end else if (((1'b1 == ap_CS_fsm_state101) | (1'b1 == ap_CS_fsm_state91) | (1'b1 == ap_CS_fsm_state35))) begin
        grp_fu_235_p1 = reg_427;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        grp_fu_235_p1 = 64'd4607182418800017408;
    end else begin
        grp_fu_235_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state91) | (1'b1 == ap_CS_fsm_state86) | (1'b1 == ap_CS_fsm_state35))) begin
        grp_fu_240_opcode = 2'd1;
    end else if (((1'b1 == ap_CS_fsm_state96) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state30))) begin
        grp_fu_240_opcode = 2'd0;
    end else begin
        grp_fu_240_opcode = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state91)) begin
        grp_fu_240_p0 = reg_354;
    end else if ((1'b1 == ap_CS_fsm_state86)) begin
        grp_fu_240_p0 = reg_391;
    end else if (((1'b1 == ap_CS_fsm_state96) | (1'b1 == ap_CS_fsm_state45))) begin
        grp_fu_240_p0 = reg_473;
    end else if ((1'b1 == ap_CS_fsm_state40)) begin
        grp_fu_240_p0 = reg_466;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        grp_fu_240_p0 = reg_418;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        grp_fu_240_p0 = reg_411;
    end else begin
        grp_fu_240_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state96)) begin
        grp_fu_240_p1 = reg_381;
    end else if ((1'b1 == ap_CS_fsm_state91)) begin
        grp_fu_240_p1 = reg_342;
    end else if ((1'b1 == ap_CS_fsm_state86)) begin
        grp_fu_240_p1 = reg_411;
    end else if ((1'b1 == ap_CS_fsm_state40)) begin
        grp_fu_240_p1 = reg_370;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        grp_fu_240_p1 = reg_427;
    end else if (((1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state30))) begin
        grp_fu_240_p1 = tmp_69_reg_1479;
    end else begin
        grp_fu_240_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state91)) begin
        grp_fu_244_p0 = reg_436;
    end else if ((1'b1 == ap_CS_fsm_state40)) begin
        grp_fu_244_p0 = reg_458;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        grp_fu_244_p0 = reg_354;
    end else begin
        grp_fu_244_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state91)) begin
        grp_fu_244_p1 = reg_381;
    end else if ((1'b1 == ap_CS_fsm_state40)) begin
        grp_fu_244_p1 = reg_391;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        grp_fu_244_p1 = reg_342;
    end else begin
        grp_fu_244_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        grp_fu_248_p0 = tmp_85_reg_1499;
    end else if (((1'b1 == ap_CS_fsm_state91) | (1'b1 == ap_CS_fsm_state35))) begin
        grp_fu_248_p0 = reg_447;
    end else begin
        grp_fu_248_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state91)) begin
        grp_fu_248_p1 = reg_402;
    end else if ((1'b1 == ap_CS_fsm_state40)) begin
        grp_fu_248_p1 = reg_411;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        grp_fu_248_p1 = reg_458;
    end else begin
        grp_fu_248_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state45)) begin
        grp_fu_260_p0 = reg_436;
    end else if (((1'b1 == ap_CS_fsm_state91) | (1'b1 == ap_CS_fsm_state35))) begin
        grp_fu_260_p0 = c0;
    end else if (((1'b1 == ap_CS_fsm_state81) | (1'b1 == ap_CS_fsm_state76) | (1'b1 == ap_CS_fsm_state20))) begin
        grp_fu_260_p0 = reg_364;
    end else if (((1'd1 == and_ln23_fu_528_p2) & (1'b1 == ap_CS_fsm_state15))) begin
        grp_fu_260_p0 = tetta_b;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_fu_260_p0 = reg_354;
    end else if (((1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state96) | (1'b1 == ap_CS_fsm_state86) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state6))) begin
        grp_fu_260_p0 = reg_342;
    end else if (((1'b1 == ap_CS_fsm_state1) | ((1'd0 == and_ln23_fu_528_p2) & (1'b1 == ap_CS_fsm_state15)))) begin
        grp_fu_260_p0 = g;
    end else begin
        grp_fu_260_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state96) | (1'b1 == ap_CS_fsm_state40))) begin
        grp_fu_260_p1 = reg_436;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        grp_fu_260_p1 = 64'd13839561654909534208;
    end else if (((1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state86))) begin
        grp_fu_260_p1 = si;
    end else if (((1'b1 == ap_CS_fsm_state81) | (1'b1 == ap_CS_fsm_state20))) begin
        grp_fu_260_p1 = b;
    end else if (((1'b1 == ap_CS_fsm_state91) | (1'b1 == ap_CS_fsm_state45) | ((1'd1 == and_ln23_fu_528_p2) & (1'b1 == ap_CS_fsm_state15)) | ((1'd0 == and_ln23_fu_528_p2) & (1'b1 == ap_CS_fsm_state15)))) begin
        grp_fu_260_p1 = 64'd4611686018427387904;
    end else if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state6))) begin
        grp_fu_260_p1 = tetta_b;
    end else if (((1'b1 == ap_CS_fsm_state76) | (1'b1 == ap_CS_fsm_state1))) begin
        grp_fu_260_p1 = g;
    end else begin
        grp_fu_260_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state86)) begin
        grp_fu_268_p0 = reg_381;
    end else if ((1'b1 == ap_CS_fsm_state76)) begin
        grp_fu_268_p0 = reg_364;
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        grp_fu_268_p0 = reg_466;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        grp_fu_268_p0 = reg_418;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        grp_fu_268_p0 = reg_391;
    end else if (((1'b1 == ap_CS_fsm_state81) | (1'b1 == ap_CS_fsm_state25))) begin
        grp_fu_268_p0 = b;
    end else if (((1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state96) | (1'b1 == ap_CS_fsm_state40))) begin
        grp_fu_268_p0 = reg_342;
    end else begin
        grp_fu_268_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state96)) begin
        grp_fu_268_p1 = reg_466;
    end else if ((1'b1 == ap_CS_fsm_state76)) begin
        grp_fu_268_p1 = a;
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        grp_fu_268_p1 = 64'd4611686018427387904;
    end else if ((1'b1 == ap_CS_fsm_state40)) begin
        grp_fu_268_p1 = reg_447;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        grp_fu_268_p1 = reg_436;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        grp_fu_268_p1 = tetta_b;
    end else if (((1'b1 == ap_CS_fsm_state81) | (1'b1 == ap_CS_fsm_state25))) begin
        grp_fu_268_p1 = b;
    end else if (((1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state86))) begin
        grp_fu_268_p1 = c;
    end else begin
        grp_fu_268_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state86)) begin
        grp_fu_272_p0 = c;
    end else if (((1'b1 == ap_CS_fsm_state81) | (1'b1 == ap_CS_fsm_state40))) begin
        grp_fu_272_p0 = reg_342;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        grp_fu_272_p0 = reg_447;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        grp_fu_272_p0 = tmp_71_reg_1484;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        grp_fu_272_p0 = reg_370;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_fu_272_p0 = g;
    end else begin
        grp_fu_272_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        grp_fu_272_p1 = reg_473;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        grp_fu_272_p1 = reg_436;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        grp_fu_272_p1 = tetta_b;
    end else if (((1'b1 == ap_CS_fsm_state81) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state86))) begin
        grp_fu_272_p1 = c;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_fu_272_p1 = b;
    end else begin
        grp_fu_272_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        grp_fu_276_p0 = reg_342;
    end else if (((1'b1 == ap_CS_fsm_state81) | (1'b1 == ap_CS_fsm_state30))) begin
        grp_fu_276_p0 = tetta_b;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        grp_fu_276_p0 = reg_381;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_fu_276_p0 = c0;
    end else begin
        grp_fu_276_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        grp_fu_276_p1 = tmp_80_reg_1494;
    end else if (((1'b1 == ap_CS_fsm_state81) | (1'b1 == ap_CS_fsm_state30))) begin
        grp_fu_276_p1 = tetta_b;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        grp_fu_276_p1 = si;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_fu_276_p1 = 64'd4611686018427387904;
    end else begin
        grp_fu_276_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        grp_fu_281_p0 = tmp_83_reg_1489;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        grp_fu_281_p0 = reg_391;
    end else if (((1'b1 == ap_CS_fsm_state81) | (1'b1 == ap_CS_fsm_state20))) begin
        grp_fu_281_p0 = a;
    end else begin
        grp_fu_281_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state81)) begin
        grp_fu_281_p1 = a;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        grp_fu_281_p1 = tetta_b;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        grp_fu_281_p1 = c0;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_fu_281_p1 = 64'd4611686018427387904;
    end else begin
        grp_fu_281_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state81)) begin
        grp_fu_286_p0 = reg_370;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        grp_fu_286_p0 = a;
    end else begin
        grp_fu_286_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state81)) begin
        grp_fu_286_p1 = si;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        grp_fu_286_p1 = a;
    end else begin
        grp_fu_286_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state106)) begin
        grp_fu_304_p0 = tmp_13_reg_1514;
    end else if ((1'b1 == ap_CS_fsm_state50)) begin
        grp_fu_304_p0 = reg_418;
    end else if (((1'b1 == ap_CS_fsm_state101) | (1'b1 == ap_CS_fsm_state45))) begin
        grp_fu_304_p0 = reg_342;
    end else begin
        grp_fu_304_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state106)) begin
        grp_fu_308_p0 = tmp_22_reg_1519;
    end else if ((1'b1 == ap_CS_fsm_state50)) begin
        grp_fu_308_p0 = reg_354;
    end else if (((1'b1 == ap_CS_fsm_state101) | (1'b1 == ap_CS_fsm_state45))) begin
        grp_fu_308_p0 = reg_370;
    end else begin
        grp_fu_308_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state101)) begin
        grp_fu_312_p0 = reg_447;
    end else if ((1'b1 == ap_CS_fsm_state50)) begin
        grp_fu_312_p0 = reg_436;
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        grp_fu_312_p0 = reg_458;
    end else begin
        grp_fu_312_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state50)) begin
        grp_fu_316_p0 = reg_427;
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        grp_fu_316_p0 = reg_391;
    end else begin
        grp_fu_316_p0 = 'bx;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            if (((1'd1 == and_ln23_fu_528_p2) & (1'b1 == ap_CS_fsm_state15))) begin
                ap_NS_fsm = ap_ST_fsm_state72;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_state60;
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_state61;
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_state62;
        end
        ap_ST_fsm_state62 : begin
            ap_NS_fsm = ap_ST_fsm_state63;
        end
        ap_ST_fsm_state63 : begin
            ap_NS_fsm = ap_ST_fsm_state64;
        end
        ap_ST_fsm_state64 : begin
            ap_NS_fsm = ap_ST_fsm_state65;
        end
        ap_ST_fsm_state65 : begin
            ap_NS_fsm = ap_ST_fsm_state66;
        end
        ap_ST_fsm_state66 : begin
            ap_NS_fsm = ap_ST_fsm_state67;
        end
        ap_ST_fsm_state67 : begin
            ap_NS_fsm = ap_ST_fsm_state68;
        end
        ap_ST_fsm_state68 : begin
            ap_NS_fsm = ap_ST_fsm_state69;
        end
        ap_ST_fsm_state69 : begin
            ap_NS_fsm = ap_ST_fsm_state70;
        end
        ap_ST_fsm_state70 : begin
            ap_NS_fsm = ap_ST_fsm_state71;
        end
        ap_ST_fsm_state71 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        ap_ST_fsm_state72 : begin
            ap_NS_fsm = ap_ST_fsm_state73;
        end
        ap_ST_fsm_state73 : begin
            ap_NS_fsm = ap_ST_fsm_state74;
        end
        ap_ST_fsm_state74 : begin
            ap_NS_fsm = ap_ST_fsm_state75;
        end
        ap_ST_fsm_state75 : begin
            ap_NS_fsm = ap_ST_fsm_state76;
        end
        ap_ST_fsm_state76 : begin
            ap_NS_fsm = ap_ST_fsm_state77;
        end
        ap_ST_fsm_state77 : begin
            ap_NS_fsm = ap_ST_fsm_state78;
        end
        ap_ST_fsm_state78 : begin
            ap_NS_fsm = ap_ST_fsm_state79;
        end
        ap_ST_fsm_state79 : begin
            ap_NS_fsm = ap_ST_fsm_state80;
        end
        ap_ST_fsm_state80 : begin
            ap_NS_fsm = ap_ST_fsm_state81;
        end
        ap_ST_fsm_state81 : begin
            ap_NS_fsm = ap_ST_fsm_state82;
        end
        ap_ST_fsm_state82 : begin
            ap_NS_fsm = ap_ST_fsm_state83;
        end
        ap_ST_fsm_state83 : begin
            ap_NS_fsm = ap_ST_fsm_state84;
        end
        ap_ST_fsm_state84 : begin
            ap_NS_fsm = ap_ST_fsm_state85;
        end
        ap_ST_fsm_state85 : begin
            ap_NS_fsm = ap_ST_fsm_state86;
        end
        ap_ST_fsm_state86 : begin
            ap_NS_fsm = ap_ST_fsm_state87;
        end
        ap_ST_fsm_state87 : begin
            ap_NS_fsm = ap_ST_fsm_state88;
        end
        ap_ST_fsm_state88 : begin
            ap_NS_fsm = ap_ST_fsm_state89;
        end
        ap_ST_fsm_state89 : begin
            ap_NS_fsm = ap_ST_fsm_state90;
        end
        ap_ST_fsm_state90 : begin
            ap_NS_fsm = ap_ST_fsm_state91;
        end
        ap_ST_fsm_state91 : begin
            ap_NS_fsm = ap_ST_fsm_state92;
        end
        ap_ST_fsm_state92 : begin
            ap_NS_fsm = ap_ST_fsm_state93;
        end
        ap_ST_fsm_state93 : begin
            ap_NS_fsm = ap_ST_fsm_state94;
        end
        ap_ST_fsm_state94 : begin
            ap_NS_fsm = ap_ST_fsm_state95;
        end
        ap_ST_fsm_state95 : begin
            ap_NS_fsm = ap_ST_fsm_state96;
        end
        ap_ST_fsm_state96 : begin
            ap_NS_fsm = ap_ST_fsm_state97;
        end
        ap_ST_fsm_state97 : begin
            ap_NS_fsm = ap_ST_fsm_state98;
        end
        ap_ST_fsm_state98 : begin
            ap_NS_fsm = ap_ST_fsm_state99;
        end
        ap_ST_fsm_state99 : begin
            ap_NS_fsm = ap_ST_fsm_state100;
        end
        ap_ST_fsm_state100 : begin
            ap_NS_fsm = ap_ST_fsm_state101;
        end
        ap_ST_fsm_state101 : begin
            ap_NS_fsm = ap_ST_fsm_state102;
        end
        ap_ST_fsm_state102 : begin
            ap_NS_fsm = ap_ST_fsm_state103;
        end
        ap_ST_fsm_state103 : begin
            ap_NS_fsm = ap_ST_fsm_state104;
        end
        ap_ST_fsm_state104 : begin
            ap_NS_fsm = ap_ST_fsm_state105;
        end
        ap_ST_fsm_state105 : begin
            ap_NS_fsm = ap_ST_fsm_state106;
        end
        ap_ST_fsm_state106 : begin
            ap_NS_fsm = ap_ST_fsm_state107;
        end
        ap_ST_fsm_state107 : begin
            ap_NS_fsm = ap_ST_fsm_state108;
        end
        ap_ST_fsm_state108 : begin
            ap_NS_fsm = ap_ST_fsm_state109;
        end
        ap_ST_fsm_state109 : begin
            ap_NS_fsm = ap_ST_fsm_state110;
        end
        ap_ST_fsm_state110 : begin
            ap_NS_fsm = ap_ST_fsm_state111;
        end
        ap_ST_fsm_state111 : begin
            ap_NS_fsm = ap_ST_fsm_state112;
        end
        ap_ST_fsm_state112 : begin
            ap_NS_fsm = ap_ST_fsm_state113;
        end
        ap_ST_fsm_state113 : begin
            ap_NS_fsm = ap_ST_fsm_state114;
        end
        ap_ST_fsm_state114 : begin
            ap_NS_fsm = ap_ST_fsm_state115;
        end
        ap_ST_fsm_state115 : begin
            ap_NS_fsm = ap_ST_fsm_state116;
        end
        ap_ST_fsm_state116 : begin
            ap_NS_fsm = ap_ST_fsm_state117;
        end
        ap_ST_fsm_state117 : begin
            ap_NS_fsm = ap_ST_fsm_state118;
        end
        ap_ST_fsm_state118 : begin
            ap_NS_fsm = ap_ST_fsm_state119;
        end
        ap_ST_fsm_state119 : begin
            ap_NS_fsm = ap_ST_fsm_state120;
        end
        ap_ST_fsm_state120 : begin
            ap_NS_fsm = ap_ST_fsm_state121;
        end
        ap_ST_fsm_state121 : begin
            ap_NS_fsm = ap_ST_fsm_state122;
        end
        ap_ST_fsm_state122 : begin
            ap_NS_fsm = ap_ST_fsm_state123;
        end
        ap_ST_fsm_state123 : begin
            ap_NS_fsm = ap_ST_fsm_state124;
        end
        ap_ST_fsm_state124 : begin
            ap_NS_fsm = ap_ST_fsm_state125;
        end
        ap_ST_fsm_state125 : begin
            ap_NS_fsm = ap_ST_fsm_state126;
        end
        ap_ST_fsm_state126 : begin
            ap_NS_fsm = ap_ST_fsm_state71;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign S_a0 = 32'd1;

assign S_a4 = ap_phi_mux_storemerge_phi_fu_223_p4;

assign S_b0 = grp_fu_304_p2;

assign S_b2 = grp_fu_308_p2;

assign add_ln502_1_fu_1301_p2 = ($signed(12'd3073) + $signed(zext_ln502_1_fu_1297_p1));

assign add_ln502_2_fu_578_p2 = ($signed(12'd3073) + $signed(zext_ln502_2_fu_574_p1));

assign add_ln502_3_fu_723_p2 = ($signed(12'd3073) + $signed(zext_ln502_3_fu_719_p1));

assign add_ln502_4_fu_867_p2 = ($signed(12'd3073) + $signed(zext_ln502_4_fu_863_p1));

assign add_ln502_5_fu_1011_p2 = ($signed(12'd3073) + $signed(zext_ln502_5_fu_1007_p1));

assign add_ln502_fu_1156_p2 = ($signed(12'd3073) + $signed(zext_ln502_fu_1152_p1));

assign and_ln23_fu_528_p2 = (or_ln23_fu_516_p2 & or_ln23_1_fu_522_p2);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state100 = ap_CS_fsm[32'd99];

assign ap_CS_fsm_state101 = ap_CS_fsm[32'd100];

assign ap_CS_fsm_state105 = ap_CS_fsm[32'd104];

assign ap_CS_fsm_state106 = ap_CS_fsm[32'd105];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state122 = ap_CS_fsm[32'd121];

assign ap_CS_fsm_state123 = ap_CS_fsm[32'd122];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_state44 = ap_CS_fsm[32'd43];

assign ap_CS_fsm_state45 = ap_CS_fsm[32'd44];

assign ap_CS_fsm_state49 = ap_CS_fsm[32'd48];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state50 = ap_CS_fsm[32'd49];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state66 = ap_CS_fsm[32'd65];

assign ap_CS_fsm_state67 = ap_CS_fsm[32'd66];

assign ap_CS_fsm_state71 = ap_CS_fsm[32'd70];

assign ap_CS_fsm_state75 = ap_CS_fsm[32'd74];

assign ap_CS_fsm_state76 = ap_CS_fsm[32'd75];

assign ap_CS_fsm_state80 = ap_CS_fsm[32'd79];

assign ap_CS_fsm_state81 = ap_CS_fsm[32'd80];

assign ap_CS_fsm_state85 = ap_CS_fsm[32'd84];

assign ap_CS_fsm_state86 = ap_CS_fsm[32'd85];

assign ap_CS_fsm_state90 = ap_CS_fsm[32'd89];

assign ap_CS_fsm_state91 = ap_CS_fsm[32'd90];

assign ap_CS_fsm_state95 = ap_CS_fsm[32'd94];

assign ap_CS_fsm_state96 = ap_CS_fsm[32'd95];

assign bitcast_ln23_fu_487_p1 = c0;

assign icmp_ln23_1_fu_510_p2 = ((trunc_ln23_fu_500_p1 == 52'd0) ? 1'b1 : 1'b0);

assign icmp_ln23_fu_504_p2 = ((tmp_fu_490_p4 != 11'd2047) ? 1'b1 : 1'b0);

assign isNeg_1_fu_1307_p3 = add_ln502_1_fu_1301_p2[32'd11];

assign isNeg_2_fu_584_p3 = add_ln502_2_fu_578_p2[32'd11];

assign isNeg_3_fu_729_p3 = add_ln502_3_fu_723_p2[32'd11];

assign isNeg_4_fu_873_p3 = add_ln502_4_fu_867_p2[32'd11];

assign isNeg_5_fu_1017_p3 = add_ln502_5_fu_1011_p2[32'd11];

assign isNeg_fu_1162_p3 = add_ln502_fu_1156_p2[32'd11];

assign mantissa_V_1_fu_1283_p4 = {{{{1'd1}, {tmp_V_3_fu_1279_p1}}}, {1'd0}};

assign mantissa_V_2_fu_560_p4 = {{{{1'd1}, {tmp_V_5_fu_556_p1}}}, {1'd0}};

assign mantissa_V_3_fu_705_p4 = {{{{1'd1}, {tmp_V_7_fu_701_p1}}}, {1'd0}};

assign mantissa_V_4_fu_849_p4 = {{{{1'd1}, {tmp_V_9_fu_845_p1}}}, {1'd0}};

assign mantissa_V_5_fu_993_p4 = {{{{1'd1}, {tmp_V_11_fu_989_p1}}}, {1'd0}};

assign mantissa_V_fu_1138_p4 = {{{{1'd1}, {tmp_V_1_fu_1134_p1}}}, {1'd0}};

assign or_ln23_1_fu_522_p2 = (grp_fu_336_p2 | grp_fu_330_p2);

assign or_ln23_fu_516_p2 = (icmp_ln23_fu_504_p2 | icmp_ln23_1_fu_510_p2);

assign p_Result_1_fu_1261_p3 = p_Val2_5_fu_1257_p1[32'd63];

assign p_Result_2_fu_538_p3 = p_Val2_10_fu_534_p1[32'd63];

assign p_Result_3_fu_683_p3 = p_Val2_15_fu_679_p1[32'd63];

assign p_Result_4_fu_827_p3 = p_Val2_20_fu_824_p1[32'd63];

assign p_Result_5_fu_971_p3 = p_Val2_25_fu_968_p1[32'd63];

assign p_Result_s_fu_1116_p3 = p_Val2_s_fu_1112_p1[32'd63];

assign p_Val2_10_fu_534_p1 = reg_479;

assign p_Val2_15_fu_679_p1 = reg_483;

assign p_Val2_20_fu_824_p1 = x_assign_4_reg_1504;

assign p_Val2_25_fu_968_p1 = x_assign_5_reg_1509;

assign p_Val2_30_fu_1234_p3 = ((isNeg_fu_1162_p3[0:0] === 1'b1) ? zext_ln662_fu_1220_p1 : tmp_30_fu_1224_p4);

assign p_Val2_31_fu_1248_p3 = ((p_Result_s_fu_1116_p3[0:0] === 1'b1) ? result_V_1_fu_1242_p2 : p_Val2_30_fu_1234_p3);

assign p_Val2_32_fu_1379_p3 = ((isNeg_1_fu_1307_p3[0:0] === 1'b1) ? zext_ln662_1_fu_1365_p1 : tmp_89_fu_1369_p4);

assign p_Val2_33_fu_1393_p3 = ((p_Result_1_fu_1261_p3[0:0] === 1'b1) ? result_V_3_fu_1387_p2 : p_Val2_32_fu_1379_p3);

assign p_Val2_34_fu_656_p3 = ((isNeg_2_fu_584_p3[0:0] === 1'b1) ? zext_ln662_2_fu_642_p1 : tmp_90_fu_646_p4);

assign p_Val2_35_fu_670_p3 = ((p_Result_2_fu_538_p3[0:0] === 1'b1) ? result_V_5_fu_664_p2 : p_Val2_34_fu_656_p3);

assign p_Val2_36_fu_801_p3 = ((isNeg_3_fu_729_p3[0:0] === 1'b1) ? zext_ln662_3_fu_787_p1 : tmp_91_fu_791_p4);

assign p_Val2_37_fu_815_p3 = ((p_Result_3_fu_683_p3[0:0] === 1'b1) ? result_V_7_fu_809_p2 : p_Val2_36_fu_801_p3);

assign p_Val2_38_fu_945_p3 = ((isNeg_4_fu_873_p3[0:0] === 1'b1) ? zext_ln662_4_fu_931_p1 : tmp_93_fu_935_p4);

assign p_Val2_39_fu_959_p3 = ((p_Result_4_fu_827_p3[0:0] === 1'b1) ? result_V_9_fu_953_p2 : p_Val2_38_fu_945_p3);

assign p_Val2_40_fu_1089_p3 = ((isNeg_5_fu_1017_p3[0:0] === 1'b1) ? zext_ln662_5_fu_1075_p1 : tmp_94_fu_1079_p4);

assign p_Val2_41_fu_1103_p3 = ((p_Result_5_fu_971_p3[0:0] === 1'b1) ? result_V_11_fu_1097_p2 : p_Val2_40_fu_1089_p3);

assign p_Val2_5_fu_1257_p1 = reg_483;

assign p_Val2_s_fu_1112_p1 = reg_479;

assign r_V_10_fu_1055_p2 = mantissa_V_5_fu_993_p4 >> zext_ln1285_5_fu_1051_p1;

assign r_V_11_fu_1061_p2 = zext_ln682_5_fu_1003_p1 << zext_ln1287_5_fu_1047_p1;

assign r_V_1_fu_1206_p2 = zext_ln682_fu_1148_p1 << zext_ln1287_fu_1192_p1;

assign r_V_2_fu_1345_p2 = mantissa_V_1_fu_1283_p4 >> zext_ln1285_1_fu_1341_p1;

assign r_V_3_fu_1351_p2 = zext_ln682_1_fu_1293_p1 << zext_ln1287_1_fu_1337_p1;

assign r_V_4_fu_622_p2 = mantissa_V_2_fu_560_p4 >> zext_ln1285_2_fu_618_p1;

assign r_V_5_fu_628_p2 = zext_ln682_2_fu_570_p1 << zext_ln1287_2_fu_614_p1;

assign r_V_6_fu_767_p2 = mantissa_V_3_fu_705_p4 >> zext_ln1285_3_fu_763_p1;

assign r_V_7_fu_773_p2 = zext_ln682_3_fu_715_p1 << zext_ln1287_3_fu_759_p1;

assign r_V_8_fu_911_p2 = mantissa_V_4_fu_849_p4 >> zext_ln1285_4_fu_907_p1;

assign r_V_9_fu_917_p2 = zext_ln682_4_fu_859_p1 << zext_ln1287_4_fu_903_p1;

assign r_V_fu_1200_p2 = mantissa_V_fu_1138_p4 >> zext_ln1285_fu_1196_p1;

assign result_V_11_fu_1097_p2 = (32'd0 - p_Val2_40_fu_1089_p3);

assign result_V_1_fu_1242_p2 = (32'd0 - p_Val2_30_fu_1234_p3);

assign result_V_3_fu_1387_p2 = (32'd0 - p_Val2_32_fu_1379_p3);

assign result_V_5_fu_664_p2 = (32'd0 - p_Val2_34_fu_656_p3);

assign result_V_7_fu_809_p2 = (32'd0 - p_Val2_36_fu_801_p3);

assign result_V_9_fu_953_p2 = (32'd0 - p_Val2_38_fu_945_p3);

assign sext_ln1311_10_fu_1031_p1 = $signed(sub_ln1311_5_fu_1025_p2);

assign sext_ln1311_11_fu_1043_p1 = $signed(ush_5_fu_1035_p3);

assign sext_ln1311_1_fu_1188_p1 = $signed(ush_fu_1180_p3);

assign sext_ln1311_2_fu_1321_p1 = $signed(sub_ln1311_1_fu_1315_p2);

assign sext_ln1311_3_fu_1333_p1 = $signed(ush_1_fu_1325_p3);

assign sext_ln1311_4_fu_598_p1 = $signed(sub_ln1311_2_fu_592_p2);

assign sext_ln1311_5_fu_610_p1 = $signed(ush_2_fu_602_p3);

assign sext_ln1311_6_fu_743_p1 = $signed(sub_ln1311_3_fu_737_p2);

assign sext_ln1311_7_fu_755_p1 = $signed(ush_3_fu_747_p3);

assign sext_ln1311_8_fu_887_p1 = $signed(sub_ln1311_4_fu_881_p2);

assign sext_ln1311_9_fu_899_p1 = $signed(ush_4_fu_891_p3);

assign sext_ln1311_fu_1176_p1 = $signed(sub_ln1311_fu_1170_p2);

assign sub_ln1311_1_fu_1315_p2 = (11'd1023 - tmp_V_2_fu_1269_p4);

assign sub_ln1311_2_fu_592_p2 = (11'd1023 - tmp_V_4_fu_546_p4);

assign sub_ln1311_3_fu_737_p2 = (11'd1023 - tmp_V_6_fu_691_p4);

assign sub_ln1311_4_fu_881_p2 = (11'd1023 - tmp_V_8_fu_835_p4);

assign sub_ln1311_5_fu_1025_p2 = (11'd1023 - tmp_V_10_fu_979_p4);

assign sub_ln1311_fu_1170_p2 = (11'd1023 - tmp_V_fu_1124_p4);

assign tmp_102_fu_634_p3 = r_V_4_fu_622_p2[32'd53];

assign tmp_105_fu_779_p3 = r_V_6_fu_767_p2[32'd53];

assign tmp_108_fu_923_p3 = r_V_8_fu_911_p2[32'd53];

assign tmp_111_fu_1067_p3 = r_V_10_fu_1055_p2[32'd53];

assign tmp_30_fu_1224_p4 = {{r_V_1_fu_1206_p2[84:53]}};

assign tmp_89_fu_1369_p4 = {{r_V_3_fu_1351_p2[84:53]}};

assign tmp_90_fu_646_p4 = {{r_V_5_fu_628_p2[84:53]}};

assign tmp_91_fu_791_p4 = {{r_V_7_fu_773_p2[84:53]}};

assign tmp_92_fu_1212_p3 = r_V_fu_1200_p2[32'd53];

assign tmp_93_fu_935_p4 = {{r_V_9_fu_917_p2[84:53]}};

assign tmp_94_fu_1079_p4 = {{r_V_11_fu_1061_p2[84:53]}};

assign tmp_98_fu_1357_p3 = r_V_2_fu_1345_p2[32'd53];

assign tmp_V_10_fu_979_p4 = {{p_Val2_25_fu_968_p1[62:52]}};

assign tmp_V_11_fu_989_p1 = p_Val2_25_fu_968_p1[51:0];

assign tmp_V_1_fu_1134_p1 = p_Val2_s_fu_1112_p1[51:0];

assign tmp_V_2_fu_1269_p4 = {{p_Val2_5_fu_1257_p1[62:52]}};

assign tmp_V_3_fu_1279_p1 = p_Val2_5_fu_1257_p1[51:0];

assign tmp_V_4_fu_546_p4 = {{p_Val2_10_fu_534_p1[62:52]}};

assign tmp_V_5_fu_556_p1 = p_Val2_10_fu_534_p1[51:0];

assign tmp_V_6_fu_691_p4 = {{p_Val2_15_fu_679_p1[62:52]}};

assign tmp_V_7_fu_701_p1 = p_Val2_15_fu_679_p1[51:0];

assign tmp_V_8_fu_835_p4 = {{p_Val2_20_fu_824_p1[62:52]}};

assign tmp_V_9_fu_845_p1 = p_Val2_20_fu_824_p1[51:0];

assign tmp_V_fu_1124_p4 = {{p_Val2_s_fu_1112_p1[62:52]}};

assign tmp_fu_490_p4 = {{bitcast_ln23_fu_487_p1[62:52]}};

assign trunc_ln23_fu_500_p1 = bitcast_ln23_fu_487_p1[51:0];

assign ush_1_fu_1325_p3 = ((isNeg_1_fu_1307_p3[0:0] === 1'b1) ? sext_ln1311_2_fu_1321_p1 : add_ln502_1_fu_1301_p2);

assign ush_2_fu_602_p3 = ((isNeg_2_fu_584_p3[0:0] === 1'b1) ? sext_ln1311_4_fu_598_p1 : add_ln502_2_fu_578_p2);

assign ush_3_fu_747_p3 = ((isNeg_3_fu_729_p3[0:0] === 1'b1) ? sext_ln1311_6_fu_743_p1 : add_ln502_3_fu_723_p2);

assign ush_4_fu_891_p3 = ((isNeg_4_fu_873_p3[0:0] === 1'b1) ? sext_ln1311_8_fu_887_p1 : add_ln502_4_fu_867_p2);

assign ush_5_fu_1035_p3 = ((isNeg_5_fu_1017_p3[0:0] === 1'b1) ? sext_ln1311_10_fu_1031_p1 : add_ln502_5_fu_1011_p2);

assign ush_fu_1180_p3 = ((isNeg_fu_1162_p3[0:0] === 1'b1) ? sext_ln1311_fu_1176_p1 : add_ln502_fu_1156_p2);

assign zext_ln1285_1_fu_1341_p1 = $unsigned(sext_ln1311_3_fu_1333_p1);

assign zext_ln1285_2_fu_618_p1 = $unsigned(sext_ln1311_5_fu_610_p1);

assign zext_ln1285_3_fu_763_p1 = $unsigned(sext_ln1311_7_fu_755_p1);

assign zext_ln1285_4_fu_907_p1 = $unsigned(sext_ln1311_9_fu_899_p1);

assign zext_ln1285_5_fu_1051_p1 = $unsigned(sext_ln1311_11_fu_1043_p1);

assign zext_ln1285_fu_1196_p1 = $unsigned(sext_ln1311_1_fu_1188_p1);

assign zext_ln1287_1_fu_1337_p1 = $unsigned(sext_ln1311_3_fu_1333_p1);

assign zext_ln1287_2_fu_614_p1 = $unsigned(sext_ln1311_5_fu_610_p1);

assign zext_ln1287_3_fu_759_p1 = $unsigned(sext_ln1311_7_fu_755_p1);

assign zext_ln1287_4_fu_903_p1 = $unsigned(sext_ln1311_9_fu_899_p1);

assign zext_ln1287_5_fu_1047_p1 = $unsigned(sext_ln1311_11_fu_1043_p1);

assign zext_ln1287_fu_1192_p1 = $unsigned(sext_ln1311_1_fu_1188_p1);

assign zext_ln502_1_fu_1297_p1 = tmp_V_2_fu_1269_p4;

assign zext_ln502_2_fu_574_p1 = tmp_V_4_fu_546_p4;

assign zext_ln502_3_fu_719_p1 = tmp_V_6_fu_691_p4;

assign zext_ln502_4_fu_863_p1 = tmp_V_8_fu_835_p4;

assign zext_ln502_5_fu_1007_p1 = tmp_V_10_fu_979_p4;

assign zext_ln502_fu_1152_p1 = tmp_V_fu_1124_p4;

assign zext_ln662_1_fu_1365_p1 = tmp_98_fu_1357_p3;

assign zext_ln662_2_fu_642_p1 = tmp_102_fu_634_p3;

assign zext_ln662_3_fu_787_p1 = tmp_105_fu_779_p3;

assign zext_ln662_4_fu_931_p1 = tmp_108_fu_923_p3;

assign zext_ln662_5_fu_1075_p1 = tmp_111_fu_1067_p3;

assign zext_ln662_fu_1220_p1 = tmp_92_fu_1212_p3;

assign zext_ln682_1_fu_1293_p1 = mantissa_V_1_fu_1283_p4;

assign zext_ln682_2_fu_570_p1 = mantissa_V_2_fu_560_p4;

assign zext_ln682_3_fu_715_p1 = mantissa_V_3_fu_705_p4;

assign zext_ln682_4_fu_859_p1 = mantissa_V_4_fu_849_p4;

assign zext_ln682_5_fu_1003_p1 = mantissa_V_5_fu_993_p4;

assign zext_ln682_fu_1148_p1 = mantissa_V_fu_1138_p4;

endmodule //chebyshev2_fo_section
