// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="calc_value4,hls_ip_2019_1,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7k160t-fbg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.599000,HLS_SYN_LAT=7,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=48,HLS_SYN_FF=1300,HLS_SYN_LUT=3179,HLS_VERSION=2019_1}" *)

module calc_value4 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        sig,
        n,
        wmax,
        nonarrow,
        ap_return
);

parameter    ap_ST_fsm_state1 = 11'd1;
parameter    ap_ST_fsm_state2 = 11'd2;
parameter    ap_ST_fsm_state3 = 11'd4;
parameter    ap_ST_fsm_state4 = 11'd8;
parameter    ap_ST_fsm_state5 = 11'd16;
parameter    ap_ST_fsm_state6 = 11'd32;
parameter    ap_ST_fsm_state7 = 11'd64;
parameter    ap_ST_fsm_state8 = 11'd128;
parameter    ap_ST_fsm_state9 = 11'd256;
parameter    ap_ST_fsm_state10 = 11'd512;
parameter    ap_ST_fsm_state11 = 11'd1024;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] sig;
input  [31:0] n;
input  [31:0] wmax;
input  [31:0] nonarrow;
output  [31:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;

(* fsm_encoding = "none" *) reg   [10:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire  signed [31:0] grp_fu_219_p2;
reg  signed [31:0] reg_232;
wire   [0:0] icmp_ln24_fu_277_p2;
wire   [0:0] icmp_ln25_fu_283_p2;
wire    ap_CS_fsm_state5;
wire  signed [31:0] add_ln21_fu_237_p2;
reg  signed [31:0] add_ln21_reg_1135;
wire   [31:0] zext_ln23_2_fu_262_p1;
reg   [31:0] zext_ln23_2_reg_1145;
reg   [0:0] icmp_ln24_reg_1151;
reg   [0:0] icmp_ln25_reg_1155;
wire   [6:0] sub_ln30_2_fu_301_p2;
reg   [6:0] sub_ln30_2_reg_1159;
wire   [0:0] icmp_ln32_1_fu_307_p2;
reg   [0:0] icmp_ln32_1_reg_1165;
wire  signed [31:0] add_ln33_fu_313_p2;
reg  signed [31:0] add_ln33_reg_1170;
wire   [7:0] sub_ln34_1_fu_331_p2;
reg   [7:0] sub_ln34_1_reg_1175;
wire   [0:0] icmp_ln38_fu_337_p2;
reg   [0:0] icmp_ln38_reg_1180;
wire   [0:0] icmp_ln42_fu_343_p2;
reg   [0:0] icmp_ln42_reg_1185;
wire  signed [31:0] mul_ln28_fu_365_p2;
reg  signed [31:0] mul_ln28_reg_1190;
wire    ap_CS_fsm_state2;
wire  signed [31:0] mul_ln29_fu_389_p2;
reg  signed [31:0] mul_ln29_reg_1195;
wire  signed [31:0] sub_ln30_1_fu_395_p2;
reg  signed [31:0] sub_ln30_1_reg_1200;
wire  signed [31:0] mul_ln33_fu_406_p2;
reg  signed [31:0] mul_ln33_reg_1205;
wire  signed [31:0] add_ln34_2_fu_436_p2;
reg  signed [31:0] add_ln34_2_reg_1210;
wire   [31:0] mul_ln39_fu_452_p2;
reg   [31:0] mul_ln39_reg_1215;
wire   [31:0] mul_ln44_fu_463_p2;
reg   [31:0] mul_ln44_reg_1220;
wire  signed [31:0] mul_ln47_fu_475_p2;
reg  signed [31:0] mul_ln47_reg_1225;
wire  signed [31:0] add_ln48_fu_497_p2;
reg  signed [31:0] add_ln48_reg_1230;
wire   [31:0] mul_ln48_fu_507_p2;
reg   [31:0] mul_ln48_reg_1235;
wire   [31:0] sk20_fu_513_p2;
reg   [31:0] sk20_reg_1240;
wire    ap_CS_fsm_state3;
wire   [31:0] k_2_fu_522_p2;
reg   [31:0] k_2_reg_1245;
wire   [31:0] mul_ln30_fu_537_p2;
reg   [31:0] mul_ln30_reg_1251;
wire   [31:0] mul_ln34_fu_555_p2;
reg   [31:0] mul_ln34_reg_1256;
wire   [31:0] sub_ln35_fu_560_p2;
reg   [31:0] sub_ln35_reg_1261;
wire   [31:0] mul_ln44_1_fu_576_p2;
reg   [31:0] mul_ln44_1_reg_1266;
wire   [31:0] mul_ln47_1_fu_587_p2;
reg   [31:0] mul_ln47_1_reg_1271;
wire   [31:0] mul_ln48_1_fu_597_p2;
reg   [31:0] mul_ln48_1_reg_1276;
wire   [31:0] select_ln38_fu_689_p3;
reg   [31:0] select_ln38_reg_1281;
wire    ap_CS_fsm_state4;
wire   [31:0] zext_ln57_fu_715_p1;
reg   [31:0] zext_ln57_reg_1291;
wire    ap_CS_fsm_state6;
wire   [3:0] w1_fu_719_p4;
reg   [3:0] w1_reg_1297;
wire   [31:0] zext_ln59_1_fu_732_p1;
reg   [31:0] zext_ln59_1_reg_1304;
wire   [0:0] icmp_ln60_fu_745_p2;
reg   [0:0] icmp_ln60_reg_1311;
wire   [0:0] icmp_ln61_fu_751_p2;
reg   [0:0] icmp_ln61_reg_1315;
wire   [5:0] sub_ln65_fu_756_p2;
reg   [5:0] sub_ln65_reg_1319;
wire   [31:0] shl_ln63_fu_762_p2;
reg   [31:0] shl_ln63_reg_1324;
wire    ap_CS_fsm_state7;
wire   [31:0] zext_ln63_fu_778_p1;
reg   [31:0] zext_ln63_reg_1329;
reg   [30:0] lshr_ln_reg_1334;
wire   [0:0] icmp_ln64_1_fu_798_p2;
reg   [0:0] icmp_ln64_1_reg_1339;
reg   [30:0] lshr_ln1_reg_1344;
wire   [31:0] v_8_fu_887_p3;
reg   [31:0] v_8_reg_1349;
wire    ap_CS_fsm_state8;
wire   [0:0] icmp_ln66_fu_901_p2;
reg   [0:0] icmp_ln66_reg_1355;
wire   [0:0] grp_fu_227_p2;
reg   [0:0] icmp_ln67_reg_1359;
wire  signed [31:0] sub_ln68_fu_916_p2;
reg  signed [31:0] sub_ln68_reg_1364;
wire  signed [31:0] sub_ln70_fu_921_p2;
reg  signed [31:0] sub_ln70_reg_1369;
wire  signed [31:0] add_ln70_fu_931_p2;
reg  signed [31:0] add_ln70_reg_1374;
wire   [31:0] v_10_fu_952_p2;
reg   [31:0] v_10_reg_1379;
wire    ap_CS_fsm_state9;
wire   [31:0] grp_fu_223_p2;
reg   [31:0] sub_ln75_reg_1384;
wire    ap_CS_fsm_state10;
wire   [0:0] icmp_ln78_fu_979_p2;
reg   [0:0] icmp_ln78_reg_1389;
wire   [0:0] icmp_ln79_fu_985_p2;
reg   [0:0] icmp_ln79_reg_1393;
wire   [31:0] v_13_fu_1044_p3;
reg   [31:0] v_13_reg_1397;
reg   [0:0] icmp_ln84_reg_1403;
reg   [31:0] p_01_reg_120;
reg   [28:0] v_2_reg_132;
reg   [31:0] ap_phi_mux_p_1_phi_fu_147_p6;
reg   [31:0] p_1_reg_143;
reg   [31:0] ap_phi_mux_v_6_phi_fu_162_p6;
reg   [31:0] v_6_reg_159;
reg   [31:0] ap_phi_mux_p_2_phi_fu_175_p6;
reg   [31:0] p_2_reg_171;
wire    ap_CS_fsm_state11;
wire   [31:0] v_14_fu_1056_p2;
reg   [31:0] ap_phi_mux_v_9_phi_fu_189_p6;
reg   [31:0] v_9_reg_186;
reg   [31:0] ap_phi_mux_p_3_phi_fu_201_p4;
wire   [0:0] icmp_ln91_fu_1069_p2;
wire   [0:0] icmp_ln93_fu_1075_p2;
wire   [31:0] select_ln96_fu_1086_p3;
reg   [31:0] ap_phi_mux_UnifiedRetVal_phi_fu_212_p4;
reg  signed [31:0] grp_fu_219_p0;
reg   [31:0] grp_fu_219_p1;
wire   [31:0] grp_fu_223_p0;
wire  signed [31:0] grp_fu_227_p1;
wire   [3:0] w0_fu_244_p4;
wire   [2:0] tmp_fu_267_p4;
wire  signed [31:0] icmp_ln25_fu_283_p1;
wire   [5:0] shl_ln2_fu_289_p3;
wire   [6:0] zext_ln30_fu_297_p1;
wire   [6:0] zext_ln23_1_fu_258_p1;
wire   [6:0] tmp_5_fu_319_p3;
wire   [7:0] zext_ln23_fu_254_p1;
wire   [7:0] zext_ln34_fu_327_p1;
wire  signed [31:0] icmp_ln38_fu_337_p1;
wire  signed [31:0] icmp_ln42_fu_343_p1;
wire   [31:0] shl_ln28_fu_354_p2;
wire  signed [31:0] add_ln28_fu_349_p2;
wire  signed [31:0] add_ln28_1_fu_359_p2;
wire   [31:0] shl_ln29_fu_377_p2;
wire  signed [31:0] add_ln29_fu_371_p2;
wire  signed [31:0] or_ln29_fu_383_p2;
wire  signed [31:0] add_ln33_1_fu_400_p2;
wire   [31:0] shl_ln34_fu_412_p2;
wire  signed [8:0] sext_ln34_1_fu_423_p1;
wire   [8:0] add_ln34_1_fu_426_p2;
wire  signed [31:0] sext_ln34_2_fu_432_p1;
wire   [31:0] sub_ln34_fu_417_p2;
wire  signed [31:0] shl_ln39_fu_442_p0;
wire  signed [31:0] add_ln39_fu_447_p0;
wire  signed [31:0] mul_ln39_fu_452_p0;
wire  signed [31:0] add_ln39_fu_447_p2;
wire   [31:0] shl_ln39_fu_442_p2;
wire  signed [31:0] wm21_fu_457_p2;
wire  signed [31:0] add_ln47_1_fu_469_p2;
wire  signed [31:0] sub_ln48_fu_481_p1;
wire   [31:0] sub_ln48_fu_481_p2;
wire   [31:0] shl_ln48_fu_485_p2;
wire   [31:0] sub_ln48_2_fu_491_p2;
wire  signed [31:0] add_ln48_1_fu_503_p1;
wire  signed [31:0] add_ln48_1_fu_503_p2;
wire   [31:0] sk21_fu_517_p2;
wire   [6:0] add_ln30_fu_528_p2;
wire  signed [6:0] mul_ln30_fu_537_p1;
wire  signed [31:0] sext_ln30_fu_533_p1;
wire   [6:0] add_ln34_fu_546_p2;
wire  signed [6:0] mul_ln34_fu_555_p1;
wire   [31:0] mul_ln33_1_fu_542_p2;
wire   [31:0] wm20_fu_566_p2;
wire  signed [31:0] sub_ln44_fu_571_p2;
wire  signed [6:0] mul_ln44_1_fu_576_p1;
wire  signed [31:0] add_ln47_fu_582_p0;
wire  signed [31:0] add_ln47_fu_582_p2;
wire  signed [31:0] sub_ln48_1_fu_592_p2;
wire   [0:0] icmp_ln32_2_fu_611_p2;
wire   [0:0] and_ln32_fu_616_p2;
wire   [0:0] icmp_ln32_fu_606_p2;
wire   [31:0] v_fu_602_p2;
wire   [31:0] add_ln35_fu_627_p2;
wire   [0:0] and_ln32_1_fu_621_p2;
wire   [31:0] v_1_fu_632_p2;
wire   [31:0] k_6_fu_649_p2;
wire   [31:0] k_3_fu_645_p2;
wire   [31:0] k_fu_653_p2;
wire   [31:0] k_5_fu_658_p3;
wire   [31:0] shl_ln51_fu_665_p2;
wire   [31:0] sub_ln51_1_fu_671_p2;
wire   [31:0] add_ln51_fu_677_p2;
wire   [31:0] v_3_fu_637_p3;
wire   [31:0] v_4_fu_683_p2;
wire   [31:0] mul_ln53_fu_699_p0;
wire   [64:0] mul_ln53_fu_699_p2;
wire   [2:0] tmp_1_fu_736_p4;
wire  signed [31:0] icmp_ln61_fu_751_p1;
wire   [5:0] zext_ln59_fu_728_p1;
wire   [31:0] shl_ln63_fu_762_p0;
wire   [3:0] add_ln63_fu_773_p2;
wire   [3:0] mul_ln63_fu_782_p0;
wire  signed [31:0] sub_ln63_fu_768_p2;
wire   [31:0] mul_ln63_fu_782_p2;
wire  signed [31:0] sext_ln65_fu_803_p1;
wire   [3:0] add_ln65_1_fu_812_p2;
wire   [3:0] mul_ln65_fu_821_p0;
wire  signed [31:0] add_ln65_fu_806_p2;
wire   [31:0] mul_ln65_fu_821_p2;
wire   [31:0] zext_ln63_1_fu_837_p1;
wire   [31:0] tmp_2_fu_851_p1;
wire   [29:0] tmp_2_fu_851_p4;
wire   [0:0] icmp_ln64_2_fu_861_p2;
wire   [0:0] and_ln64_fu_867_p2;
wire   [0:0] icmp_ln64_fu_845_p2;
wire   [31:0] v_5_fu_840_p2;
wire   [31:0] zext_ln65_1_fu_878_p1;
wire   [0:0] and_ln64_1_fu_872_p2;
wire   [31:0] v_7_fu_881_p2;
wire   [31:0] add_ln66_fu_895_p1;
wire   [31:0] add_ln66_fu_895_p2;
wire  signed [31:0] icmp_ln66_fu_901_p1;
wire  signed [31:0] shl_ln68_fu_906_p0;
wire   [31:0] shl_ln68_fu_906_p2;
wire   [31:0] add_ln68_fu_911_p2;
wire   [31:0] sub_ln70_fu_921_p0;
wire  signed [31:0] sub_ln70_fu_921_p1;
wire  signed [31:0] xor_ln70_fu_926_p0;
wire   [31:0] xor_ln70_fu_926_p2;
wire   [31:0] add_ln70_fu_931_p1;
wire   [3:0] mul_ln68_fu_937_p1;
wire   [31:0] mul_ln68_fu_937_p2;
wire   [31:0] mul_ln70_fu_941_p2;
wire   [31:0] select_ln67_fu_945_p3;
wire   [3:0] w2_fu_957_p4;
wire   [2:0] tmp_3_fu_970_p4;
wire   [31:0] zext_ln77_fu_966_p1;
wire  signed [31:0] icmp_ln79_fu_985_p1;
wire   [31:0] add_ln81_fu_990_p2;
wire   [0:0] icmp_ln82_1_fu_1008_p2;
wire   [0:0] icmp_ln82_2_fu_1014_p2;
wire   [0:0] and_ln82_fu_1020_p2;
wire   [0:0] icmp_ln82_fu_1002_p2;
wire   [31:0] sub_ln83_fu_1032_p2;
wire   [31:0] v_11_fu_996_p2;
wire   [0:0] and_ln82_1_fu_1026_p2;
wire   [31:0] v_12_fu_1038_p2;
wire  signed [31:0] sub_ln85_fu_1052_p0;
wire   [31:0] sub_ln85_fu_1052_p2;
wire   [3:0] w3_fu_1062_p1;
wire   [31:0] zext_ln90_fu_1065_p1;
wire  signed [31:0] icmp_ln93_fu_1075_p1;
wire   [0:0] icmp_ln96_fu_1080_p2;
reg   [10:0] ap_NS_fsm;
wire   [64:0] mul_ln53_fu_699_p00;
wire   [31:0] mul_ln63_fu_782_p00;
wire   [31:0] mul_ln65_fu_821_p00;
reg    ap_condition_373;
reg    ap_condition_386;
reg    ap_condition_319;
reg    ap_condition_346;

// power-on initialization
initial begin
#0 ap_CS_fsm = 11'd1;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln24_fu_277_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        p_01_reg_120 <= 32'd1;
    end else if (((icmp_ln24_reg_1151 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        p_01_reg_120 <= nonarrow;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln60_fu_745_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
        p_1_reg_143 <= 32'd1;
    end else if ((((icmp_ln66_reg_1355 == 1'd1) & (icmp_ln60_reg_1311 == 1'd0) & (1'b1 == ap_CS_fsm_state10)) | ((icmp_ln66_fu_901_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state8)))) begin
        p_1_reg_143 <= p_01_reg_120;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln79_fu_985_p2 == 1'd0) & (icmp_ln78_fu_979_p2 == 1'd0) & (grp_fu_227_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state10))) begin
        p_2_reg_171 <= ap_phi_mux_p_1_phi_fu_147_p6;
    end else if (((icmp_ln78_fu_979_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10))) begin
        p_2_reg_171 <= 32'd1;
    end else if (((1'b1 == ap_CS_fsm_state11) & (((((icmp_ln84_reg_1403 == 1'd1) & (icmp_ln60_reg_1311 == 1'd1) & (icmp_ln25_reg_1155 == 1'd0) & (icmp_ln79_reg_1393 == 1'd0) & (icmp_ln78_reg_1389 == 1'd0)) | ((icmp_ln84_reg_1403 == 1'd1) & (icmp_ln25_reg_1155 == 1'd0) & (icmp_ln79_reg_1393 == 1'd0) & (icmp_ln78_reg_1389 == 1'd0) & (icmp_ln61_reg_1315 == 1'd0))) | ((icmp_ln84_reg_1403 == 1'd1) & (icmp_ln24_reg_1151 == 1'd1) & (icmp_ln79_reg_1393 == 1'd0) & (icmp_ln78_reg_1389 == 1'd0) & (icmp_ln61_reg_1315 == 1'd0))) | ((icmp_ln84_reg_1403 == 1'd1) & (icmp_ln60_reg_1311 == 1'd1) & (icmp_ln24_reg_1151 == 1'd1) & (icmp_ln79_reg_1393 == 1'd0) & (icmp_ln78_reg_1389 == 1'd0))))) begin
        p_2_reg_171 <= p_1_reg_143;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln24_fu_277_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        v_2_reg_132 <= 29'd0;
    end else if (((icmp_ln24_reg_1151 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        v_2_reg_132 <= {{mul_ln53_fu_699_p2[64:36]}};
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln66_fu_901_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        v_6_reg_159 <= v_8_fu_887_p3;
    end else if (((icmp_ln60_fu_745_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
        v_6_reg_159 <= zext_ln57_fu_715_p1;
    end else if (((icmp_ln66_reg_1355 == 1'd1) & (icmp_ln60_reg_1311 == 1'd0) & (1'b1 == ap_CS_fsm_state10))) begin
        v_6_reg_159 <= v_10_reg_1379;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln79_fu_985_p2 == 1'd0) & (icmp_ln78_fu_979_p2 == 1'd0) & (grp_fu_227_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state10))) begin
        v_9_reg_186 <= v_13_fu_1044_p3;
    end else if (((icmp_ln78_fu_979_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10))) begin
        v_9_reg_186 <= ap_phi_mux_v_6_phi_fu_162_p6;
    end else if (((1'b1 == ap_CS_fsm_state11) & (((((icmp_ln84_reg_1403 == 1'd1) & (icmp_ln60_reg_1311 == 1'd1) & (icmp_ln25_reg_1155 == 1'd0) & (icmp_ln79_reg_1393 == 1'd0) & (icmp_ln78_reg_1389 == 1'd0)) | ((icmp_ln84_reg_1403 == 1'd1) & (icmp_ln25_reg_1155 == 1'd0) & (icmp_ln79_reg_1393 == 1'd0) & (icmp_ln78_reg_1389 == 1'd0) & (icmp_ln61_reg_1315 == 1'd0))) | ((icmp_ln84_reg_1403 == 1'd1) & (icmp_ln24_reg_1151 == 1'd1) & (icmp_ln79_reg_1393 == 1'd0) & (icmp_ln78_reg_1389 == 1'd0) & (icmp_ln61_reg_1315 == 1'd0))) | ((icmp_ln84_reg_1403 == 1'd1) & (icmp_ln60_reg_1311 == 1'd1) & (icmp_ln24_reg_1151 == 1'd1) & (icmp_ln79_reg_1393 == 1'd0) & (icmp_ln78_reg_1389 == 1'd0))))) begin
        v_9_reg_186 <= v_14_fu_1056_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        add_ln21_reg_1135 <= add_ln21_fu_237_p2;
        icmp_ln24_reg_1151 <= icmp_ln24_fu_277_p2;
        zext_ln23_2_reg_1145[3 : 0] <= zext_ln23_2_fu_262_p1[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln25_fu_283_p2 == 1'd0) & (icmp_ln24_fu_277_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        add_ln33_reg_1170 <= add_ln33_fu_313_p2;
        icmp_ln32_1_reg_1165 <= icmp_ln32_1_fu_307_p2;
        icmp_ln38_reg_1180 <= icmp_ln38_fu_337_p2;
        icmp_ln42_reg_1185 <= icmp_ln42_fu_343_p2;
        sub_ln30_2_reg_1159 <= sub_ln30_2_fu_301_p2;
        sub_ln34_1_reg_1175 <= sub_ln34_1_fu_331_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        add_ln34_2_reg_1210 <= add_ln34_2_fu_436_p2;
        mul_ln28_reg_1190 <= mul_ln28_fu_365_p2;
        mul_ln29_reg_1195 <= mul_ln29_fu_389_p2;
        mul_ln33_reg_1205 <= mul_ln33_fu_406_p2;
        sub_ln30_1_reg_1200 <= sub_ln30_1_fu_395_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln38_reg_1180 == 1'd1) & (icmp_ln42_reg_1185 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        add_ln48_reg_1230 <= add_ln48_fu_497_p2;
        mul_ln47_reg_1225 <= mul_ln47_fu_475_p2;
        mul_ln48_reg_1235 <= mul_ln48_fu_507_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln66_fu_901_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
        add_ln70_reg_1374 <= add_ln70_fu_931_p2;
        icmp_ln67_reg_1359 <= grp_fu_227_p2;
        sub_ln68_reg_1364 <= sub_ln68_fu_916_p2;
        sub_ln70_reg_1369 <= sub_ln70_fu_921_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln24_fu_277_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        icmp_ln25_reg_1155 <= icmp_ln25_fu_283_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        icmp_ln60_reg_1311 <= icmp_ln60_fu_745_p2;
        w1_reg_1297 <= {{sig[11:8]}};
        zext_ln57_reg_1291[28 : 0] <= zext_ln57_fu_715_p1[28 : 0];
        zext_ln59_1_reg_1304[3 : 0] <= zext_ln59_1_fu_732_p1[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln60_fu_745_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
        icmp_ln61_reg_1315 <= icmp_ln61_fu_751_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        icmp_ln64_1_reg_1339 <= icmp_ln64_1_fu_798_p2;
        lshr_ln1_reg_1344 <= {{mul_ln65_fu_821_p2[31:1]}};
        lshr_ln_reg_1334 <= {{mul_ln63_fu_782_p2[31:1]}};
        shl_ln63_reg_1324[31 : 1] <= shl_ln63_fu_762_p2[31 : 1];
        zext_ln63_reg_1329[3 : 0] <= zext_ln63_fu_778_p1[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        icmp_ln66_reg_1355 <= icmp_ln66_fu_901_p2;
        v_8_reg_1349 <= v_8_fu_887_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        icmp_ln78_reg_1389 <= icmp_ln78_fu_979_p2;
        sub_ln75_reg_1384 <= grp_fu_223_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln78_fu_979_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state10))) begin
        icmp_ln79_reg_1393 <= icmp_ln79_fu_985_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln79_fu_985_p2 == 1'd0) & (icmp_ln78_fu_979_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state10))) begin
        icmp_ln84_reg_1403 <= grp_fu_227_p2;
        v_13_reg_1397 <= v_13_fu_1044_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        k_2_reg_1245 <= k_2_fu_522_p2;
        mul_ln30_reg_1251 <= mul_ln30_fu_537_p2;
        mul_ln34_reg_1256 <= mul_ln34_fu_555_p2;
        sk20_reg_1240 <= sk20_fu_513_p2;
        sub_ln35_reg_1261 <= sub_ln35_fu_560_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln38_reg_1180 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        mul_ln39_reg_1215 <= mul_ln39_fu_452_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln42_reg_1185 == 1'd1) & (icmp_ln38_reg_1180 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        mul_ln44_1_reg_1266 <= mul_ln44_1_fu_576_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln42_reg_1185 == 1'd1) & (icmp_ln38_reg_1180 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        mul_ln44_reg_1220 <= mul_ln44_fu_463_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln38_reg_1180 == 1'd1) & (icmp_ln42_reg_1185 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        mul_ln47_1_reg_1271 <= mul_ln47_1_fu_587_p2;
        mul_ln48_1_reg_1276 <= mul_ln48_1_fu_597_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) | ((icmp_ln25_fu_283_p2 == 1'd0) & (icmp_ln24_fu_277_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)))) begin
        reg_232 <= grp_fu_219_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        select_ln38_reg_1281 <= select_ln38_fu_689_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln61_fu_751_p2 == 1'd0) & (icmp_ln60_fu_745_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
        sub_ln65_reg_1319 <= sub_ln65_fu_756_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        v_10_reg_1379 <= v_10_fu_952_p2;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        if ((1'b1 == ap_condition_386)) begin
            ap_phi_mux_UnifiedRetVal_phi_fu_212_p4 = 32'd4294967295;
        end else if ((1'b1 == ap_condition_373)) begin
            ap_phi_mux_UnifiedRetVal_phi_fu_212_p4 = select_ln96_fu_1086_p3;
        end else begin
            ap_phi_mux_UnifiedRetVal_phi_fu_212_p4 = 'bx;
        end
    end else begin
        ap_phi_mux_UnifiedRetVal_phi_fu_212_p4 = 'bx;
    end
end

always @ (*) begin
    if (((icmp_ln66_reg_1355 == 1'd1) & (icmp_ln60_reg_1311 == 1'd0) & (1'b1 == ap_CS_fsm_state10))) begin
        ap_phi_mux_p_1_phi_fu_147_p6 = p_01_reg_120;
    end else begin
        ap_phi_mux_p_1_phi_fu_147_p6 = p_1_reg_143;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) & (((((icmp_ln84_reg_1403 == 1'd1) & (icmp_ln60_reg_1311 == 1'd1) & (icmp_ln25_reg_1155 == 1'd0) & (icmp_ln79_reg_1393 == 1'd0) & (icmp_ln78_reg_1389 == 1'd0)) | ((icmp_ln84_reg_1403 == 1'd1) & (icmp_ln25_reg_1155 == 1'd0) & (icmp_ln79_reg_1393 == 1'd0) & (icmp_ln78_reg_1389 == 1'd0) & (icmp_ln61_reg_1315 == 1'd0))) | ((icmp_ln84_reg_1403 == 1'd1) & (icmp_ln24_reg_1151 == 1'd1) & (icmp_ln79_reg_1393 == 1'd0) & (icmp_ln78_reg_1389 == 1'd0) & (icmp_ln61_reg_1315 == 1'd0))) | ((icmp_ln84_reg_1403 == 1'd1) & (icmp_ln60_reg_1311 == 1'd1) & (icmp_ln24_reg_1151 == 1'd1) & (icmp_ln79_reg_1393 == 1'd0) & (icmp_ln78_reg_1389 == 1'd0))))) begin
        ap_phi_mux_p_2_phi_fu_175_p6 = p_1_reg_143;
    end else begin
        ap_phi_mux_p_2_phi_fu_175_p6 = p_2_reg_171;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        if ((1'b1 == ap_condition_346)) begin
            ap_phi_mux_p_3_phi_fu_201_p4 = ap_phi_mux_p_2_phi_fu_175_p6;
        end else if ((1'b1 == ap_condition_319)) begin
            ap_phi_mux_p_3_phi_fu_201_p4 = 32'd1;
        end else begin
            ap_phi_mux_p_3_phi_fu_201_p4 = 'bx;
        end
    end else begin
        ap_phi_mux_p_3_phi_fu_201_p4 = 'bx;
    end
end

always @ (*) begin
    if (((icmp_ln66_reg_1355 == 1'd1) & (icmp_ln60_reg_1311 == 1'd0) & (1'b1 == ap_CS_fsm_state10))) begin
        ap_phi_mux_v_6_phi_fu_162_p6 = v_10_reg_1379;
    end else begin
        ap_phi_mux_v_6_phi_fu_162_p6 = v_6_reg_159;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) & (((((icmp_ln84_reg_1403 == 1'd1) & (icmp_ln60_reg_1311 == 1'd1) & (icmp_ln25_reg_1155 == 1'd0) & (icmp_ln79_reg_1393 == 1'd0) & (icmp_ln78_reg_1389 == 1'd0)) | ((icmp_ln84_reg_1403 == 1'd1) & (icmp_ln25_reg_1155 == 1'd0) & (icmp_ln79_reg_1393 == 1'd0) & (icmp_ln78_reg_1389 == 1'd0) & (icmp_ln61_reg_1315 == 1'd0))) | ((icmp_ln84_reg_1403 == 1'd1) & (icmp_ln24_reg_1151 == 1'd1) & (icmp_ln79_reg_1393 == 1'd0) & (icmp_ln78_reg_1389 == 1'd0) & (icmp_ln61_reg_1315 == 1'd0))) | ((icmp_ln84_reg_1403 == 1'd1) & (icmp_ln60_reg_1311 == 1'd1) & (icmp_ln24_reg_1151 == 1'd1) & (icmp_ln79_reg_1393 == 1'd0) & (icmp_ln78_reg_1389 == 1'd0))))) begin
        ap_phi_mux_v_9_phi_fu_189_p6 = v_14_fu_1056_p2;
    end else begin
        ap_phi_mux_v_9_phi_fu_189_p6 = v_9_reg_186;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_fu_219_p0 = add_ln21_reg_1135;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        grp_fu_219_p0 = add_ln21_fu_237_p2;
    end else begin
        grp_fu_219_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_fu_219_p1 = zext_ln23_2_reg_1145;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        grp_fu_219_p1 = zext_ln23_2_fu_262_p1;
    end else begin
        grp_fu_219_p1 = 'bx;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((icmp_ln25_fu_283_p2 == 1'd1) & (icmp_ln24_fu_277_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else if (((icmp_ln25_fu_283_p2 == 1'd0) & (icmp_ln24_fu_277_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else if (((icmp_ln24_fu_277_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            if (((icmp_ln61_fu_751_p2 == 1'd1) & (icmp_ln60_fu_745_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else if (((icmp_ln61_fu_751_p2 == 1'd0) & (icmp_ln60_fu_745_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            if (((icmp_ln66_fu_901_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln21_fu_237_p2 = ($signed(32'd4294967295) + $signed(n));

assign add_ln28_1_fu_359_p2 = ($signed(shl_ln28_fu_354_p2) + $signed(32'd4294967295));

assign add_ln28_fu_349_p2 = ($signed(n) + $signed(32'd4294967294));

assign add_ln29_fu_371_p2 = ($signed(reg_232) + $signed(32'd1));

assign add_ln30_fu_528_p2 = ($signed(sub_ln30_2_reg_1159) + $signed(7'd125));

assign add_ln33_1_fu_400_p2 = ($signed(shl_ln28_fu_354_p2) + $signed(32'd4294967293));

assign add_ln33_fu_313_p2 = ($signed(n) + $signed(32'd4294967293));

assign add_ln34_1_fu_426_p2 = ($signed(sext_ln34_1_fu_423_p1) + $signed(9'd481));

assign add_ln34_2_fu_436_p2 = ($signed(sext_ln34_2_fu_432_p1) + $signed(sub_ln34_fu_417_p2));

assign add_ln34_fu_546_p2 = ($signed(sub_ln30_2_reg_1159) + $signed(7'd122));

assign add_ln35_fu_627_p2 = (mul_ln34_reg_1256 + v_fu_602_p2);

assign add_ln39_fu_447_p0 = wmax;

assign add_ln39_fu_447_p2 = ($signed(add_ln39_fu_447_p0) + $signed(32'd1));

assign add_ln47_1_fu_469_p2 = (shl_ln39_fu_442_p2 + 32'd3);

assign add_ln47_fu_582_p0 = wmax;

assign add_ln47_fu_582_p2 = ($signed(add_ln47_fu_582_p0) + $signed(32'd2));

assign add_ln48_1_fu_503_p1 = wmax;

assign add_ln48_1_fu_503_p2 = ($signed(n) + $signed(add_ln48_1_fu_503_p1));

assign add_ln48_fu_497_p2 = ($signed(sub_ln48_2_fu_491_p2) + $signed(32'd4294967290));

assign add_ln51_fu_677_p2 = (k_5_fu_658_p3 + sub_ln51_1_fu_671_p2);

assign add_ln63_fu_773_p2 = ($signed(4'd15) + $signed(w1_reg_1297));

assign add_ln65_1_fu_812_p2 = ($signed(4'd14) + $signed(w1_reg_1297));

assign add_ln65_fu_806_p2 = ($signed(shl_ln63_fu_762_p2) + $signed(sext_ln65_fu_803_p1));

assign add_ln66_fu_895_p1 = reg_232;

assign add_ln66_fu_895_p2 = ($signed(32'd4294967295) + $signed(add_ln66_fu_895_p1));

assign add_ln68_fu_911_p2 = (shl_ln68_fu_906_p2 + zext_ln59_1_reg_1304);

assign add_ln70_fu_931_p1 = reg_232;

assign add_ln70_fu_931_p2 = (xor_ln70_fu_926_p2 + add_ln70_fu_931_p1);

assign add_ln81_fu_990_p2 = ($signed(ap_phi_mux_v_6_phi_fu_162_p6) + $signed(32'd4294967295));

assign and_ln32_1_fu_621_p2 = (icmp_ln32_fu_606_p2 & and_ln32_fu_616_p2);

assign and_ln32_fu_616_p2 = (icmp_ln32_2_fu_611_p2 & icmp_ln32_1_reg_1165);

assign and_ln64_1_fu_872_p2 = (icmp_ln64_fu_845_p2 & and_ln64_fu_867_p2);

assign and_ln64_fu_867_p2 = (icmp_ln64_2_fu_861_p2 & icmp_ln64_1_reg_1339);

assign and_ln82_1_fu_1026_p2 = (icmp_ln82_fu_1002_p2 & and_ln82_fu_1020_p2);

assign and_ln82_fu_1020_p2 = (icmp_ln82_2_fu_1014_p2 & icmp_ln82_1_fu_1008_p2);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

always @ (*) begin
    ap_condition_319 = (((((((((icmp_ln91_fu_1069_p2 == 1'd1) & (icmp_ln78_reg_1389 == 1'd1) & (icmp_ln25_reg_1155 == 1'd0) & (icmp_ln61_reg_1315 == 1'd0)) | ((icmp_ln91_fu_1069_p2 == 1'd1) & (icmp_ln25_reg_1155 == 1'd0) & (icmp_ln79_reg_1393 == 1'd0) & (icmp_ln61_reg_1315 == 1'd0))) | ((icmp_ln91_fu_1069_p2 == 1'd1) & (icmp_ln60_reg_1311 == 1'd1) & (icmp_ln25_reg_1155 == 1'd0) & (icmp_ln79_reg_1393 == 1'd0))) | ((icmp_ln91_fu_1069_p2 == 1'd1) & (icmp_ln78_reg_1389 == 1'd1) & (icmp_ln60_reg_1311 == 1'd1) & (icmp_ln25_reg_1155 == 1'd0))) | ((icmp_ln91_fu_1069_p2 == 1'd1) & (icmp_ln24_reg_1151 == 1'd1) & (icmp_ln79_reg_1393 == 1'd0) & (icmp_ln61_reg_1315 == 1'd0))) | ((icmp_ln91_fu_1069_p2 == 1'd1) & (icmp_ln78_reg_1389 == 1'd1) & (icmp_ln24_reg_1151 == 1'd1) & (icmp_ln61_reg_1315 == 1'd0))) | ((icmp_ln91_fu_1069_p2 == 1'd1) & (icmp_ln60_reg_1311 == 1'd1) & (icmp_ln24_reg_1151 == 1'd1) & (icmp_ln79_reg_1393 == 1'd0))) | ((icmp_ln91_fu_1069_p2 == 1'd1) & (icmp_ln78_reg_1389 == 1'd1) & (icmp_ln60_reg_1311 == 1'd1) & (icmp_ln24_reg_1151 == 1'd1)));
end

always @ (*) begin
    ap_condition_346 = (((((((((icmp_ln78_reg_1389 == 1'd1) & (icmp_ln25_reg_1155 == 1'd0) & (icmp_ln93_fu_1075_p2 == 1'd0) & (icmp_ln91_fu_1069_p2 == 1'd0) & (icmp_ln61_reg_1315 == 1'd0)) | ((icmp_ln25_reg_1155 == 1'd0) & (icmp_ln93_fu_1075_p2 == 1'd0) & (icmp_ln91_fu_1069_p2 == 1'd0) & (icmp_ln79_reg_1393 == 1'd0) & (icmp_ln61_reg_1315 == 1'd0))) | ((icmp_ln60_reg_1311 == 1'd1) & (icmp_ln25_reg_1155 == 1'd0) & (icmp_ln93_fu_1075_p2 == 1'd0) & (icmp_ln91_fu_1069_p2 == 1'd0) & (icmp_ln79_reg_1393 == 1'd0))) | ((icmp_ln78_reg_1389 == 1'd1) & (icmp_ln60_reg_1311 == 1'd1) & (icmp_ln25_reg_1155 == 1'd0) & (icmp_ln93_fu_1075_p2 == 1'd0) & (icmp_ln91_fu_1069_p2 == 1'd0))) | ((icmp_ln24_reg_1151 == 1'd1) & (icmp_ln93_fu_1075_p2 == 1'd0) & (icmp_ln91_fu_1069_p2 == 1'd0) & (icmp_ln79_reg_1393 == 1'd0) & (icmp_ln61_reg_1315 == 1'd0))) | ((icmp_ln78_reg_1389 == 1'd1) & (icmp_ln24_reg_1151 == 1'd1) & (icmp_ln93_fu_1075_p2 == 1'd0) & (icmp_ln91_fu_1069_p2 == 1'd0) & (icmp_ln61_reg_1315 == 1'd0))) | ((icmp_ln60_reg_1311 == 1'd1) & (icmp_ln24_reg_1151 == 1'd1) & (icmp_ln93_fu_1075_p2 == 1'd0) & (icmp_ln91_fu_1069_p2 == 1'd0) & (icmp_ln79_reg_1393 == 1'd0))) | ((icmp_ln78_reg_1389 == 1'd1) & (icmp_ln60_reg_1311 == 1'd1) & (icmp_ln24_reg_1151 == 1'd1) & (icmp_ln93_fu_1075_p2 == 1'd0) & (icmp_ln91_fu_1069_p2 == 1'd0)));
end

always @ (*) begin
    ap_condition_373 = (((((((((((((((((icmp_ln25_reg_1155 == 1'd0) & (icmp_ln93_fu_1075_p2 == 1'd0) & (icmp_ln79_reg_1393 == 1'd0) & (icmp_ln61_reg_1315 == 1'd0)) | ((icmp_ln91_fu_1069_p2 == 1'd1) & (icmp_ln25_reg_1155 == 1'd0) & (icmp_ln79_reg_1393 == 1'd0) & (icmp_ln61_reg_1315 == 1'd0))) | ((icmp_ln78_reg_1389 == 1'd1) & (icmp_ln25_reg_1155 == 1'd0) & (icmp_ln93_fu_1075_p2 == 1'd0) & (icmp_ln61_reg_1315 == 1'd0))) | ((icmp_ln91_fu_1069_p2 == 1'd1) & (icmp_ln78_reg_1389 == 1'd1) & (icmp_ln25_reg_1155 == 1'd0) & (icmp_ln61_reg_1315 == 1'd0))) | ((icmp_ln60_reg_1311 == 1'd1) & (icmp_ln25_reg_1155 == 1'd0) & (icmp_ln93_fu_1075_p2 == 1'd0) & (icmp_ln79_reg_1393 == 1'd0))) | ((icmp_ln91_fu_1069_p2 == 1'd1) & (icmp_ln60_reg_1311 == 1'd1) & (icmp_ln25_reg_1155 == 1'd0) & (icmp_ln79_reg_1393 == 1'd0))) | ((icmp_ln78_reg_1389 == 1'd1) & (icmp_ln60_reg_1311 == 1'd1) & (icmp_ln25_reg_1155 == 1'd0) & (icmp_ln93_fu_1075_p2 == 1'd0))) | ((icmp_ln91_fu_1069_p2 == 1'd1) & (icmp_ln78_reg_1389 == 1'd1) & (icmp_ln60_reg_1311 == 1'd1) & (icmp_ln25_reg_1155 == 1'd0))) | ((icmp_ln24_reg_1151 == 1'd1) & (icmp_ln93_fu_1075_p2 == 1'd0) & (icmp_ln79_reg_1393 == 1'd0) & (icmp_ln61_reg_1315 == 1'd0))) | ((icmp_ln91_fu_1069_p2 == 1'd1) & (icmp_ln24_reg_1151 == 1'd1) & (icmp_ln79_reg_1393 == 1'd0) & (icmp_ln61_reg_1315 == 1'd0))) | ((icmp_ln78_reg_1389 == 1'd1) & (icmp_ln24_reg_1151 == 1'd1) & (icmp_ln93_fu_1075_p2 == 1'd0) & (icmp_ln61_reg_1315 == 1'd0))) | ((icmp_ln91_fu_1069_p2 == 1'd1) & (icmp_ln78_reg_1389 == 1'd1) & (icmp_ln24_reg_1151 == 1'd1) & (icmp_ln61_reg_1315 == 1'd0))) | ((icmp_ln60_reg_1311 == 1'd1) & (icmp_ln24_reg_1151 == 1'd1) & (icmp_ln93_fu_1075_p2 == 1'd0) & (icmp_ln79_reg_1393 == 1'd0))) | ((icmp_ln91_fu_1069_p2 == 1'd1) & (icmp_ln60_reg_1311 == 1'd1) & (icmp_ln24_reg_1151 == 1'd1) & (icmp_ln79_reg_1393 == 1'd0))) | ((icmp_ln78_reg_1389 == 1'd1) & (icmp_ln60_reg_1311 == 1'd1) & (icmp_ln24_reg_1151 == 1'd1) & (icmp_ln93_fu_1075_p2 == 1'd0))) | ((icmp_ln91_fu_1069_p2 == 1'd1) & (icmp_ln78_reg_1389 == 1'd1) & (icmp_ln60_reg_1311 == 1'd1) & (icmp_ln24_reg_1151 == 1'd1)));
end

always @ (*) begin
    ap_condition_386 = (((((icmp_ln93_fu_1075_p2 == 1'd1) & (icmp_ln91_fu_1069_p2 == 1'd0)) | ((icmp_ln79_reg_1393 == 1'd1) & (icmp_ln78_reg_1389 == 1'd0))) | ((icmp_ln61_reg_1315 == 1'd1) & (icmp_ln60_reg_1311 == 1'd0))) | ((icmp_ln25_reg_1155 == 1'd1) & (icmp_ln24_reg_1151 == 1'd0)));
end

assign ap_return = ap_phi_mux_UnifiedRetVal_phi_fu_212_p4;

assign grp_fu_219_p2 = ($signed(grp_fu_219_p0) - $signed(grp_fu_219_p1));

assign grp_fu_223_p0 = reg_232;

assign grp_fu_223_p2 = (grp_fu_223_p0 - zext_ln59_1_reg_1304);

assign grp_fu_227_p1 = wmax;

assign grp_fu_227_p2 = ((grp_fu_223_p2 > grp_fu_227_p1) ? 1'b1 : 1'b0);

assign icmp_ln24_fu_277_p2 = ((tmp_fu_267_p4 == 3'd0) ? 1'b1 : 1'b0);

assign icmp_ln25_fu_283_p1 = wmax;

assign icmp_ln25_fu_283_p2 = ((zext_ln23_2_fu_262_p1 > icmp_ln25_fu_283_p1) ? 1'b1 : 1'b0);

assign icmp_ln32_1_fu_307_p2 = ((w0_fu_244_p4 > 4'd2) ? 1'b1 : 1'b0);

assign icmp_ln32_2_fu_611_p2 = ((add_ln21_reg_1135 > 32'd4) ? 1'b1 : 1'b0);

assign icmp_ln32_fu_606_p2 = ((nonarrow == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln38_fu_337_p1 = wmax;

assign icmp_ln38_fu_337_p2 = ((add_ln33_fu_313_p2 > icmp_ln38_fu_337_p1) ? 1'b1 : 1'b0);

assign icmp_ln42_fu_343_p1 = wmax;

assign icmp_ln42_fu_343_p2 = ((grp_fu_219_p2 > icmp_ln42_fu_343_p1) ? 1'b1 : 1'b0);

assign icmp_ln60_fu_745_p2 = ((tmp_1_fu_736_p4 == 3'd0) ? 1'b1 : 1'b0);

assign icmp_ln61_fu_751_p1 = wmax;

assign icmp_ln61_fu_751_p2 = ((zext_ln59_1_fu_732_p1 > icmp_ln61_fu_751_p1) ? 1'b1 : 1'b0);

assign icmp_ln64_1_fu_798_p2 = ((w1_reg_1297 > 4'd2) ? 1'b1 : 1'b0);

assign icmp_ln64_2_fu_861_p2 = ((tmp_2_fu_851_p4 != 30'd0) ? 1'b1 : 1'b0);

assign icmp_ln64_fu_845_p2 = ((p_01_reg_120 == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln66_fu_901_p1 = wmax;

assign icmp_ln66_fu_901_p2 = ((add_ln66_fu_895_p2 > icmp_ln66_fu_901_p1) ? 1'b1 : 1'b0);

assign icmp_ln78_fu_979_p2 = ((tmp_3_fu_970_p4 == 3'd0) ? 1'b1 : 1'b0);

assign icmp_ln79_fu_985_p1 = wmax;

assign icmp_ln79_fu_985_p2 = ((zext_ln77_fu_966_p1 > icmp_ln79_fu_985_p1) ? 1'b1 : 1'b0);

assign icmp_ln82_1_fu_1008_p2 = ((w2_fu_957_p4 > 4'd2) ? 1'b1 : 1'b0);

assign icmp_ln82_2_fu_1014_p2 = ((grp_fu_223_p2 > 32'd2) ? 1'b1 : 1'b0);

assign icmp_ln82_fu_1002_p2 = ((ap_phi_mux_p_1_phi_fu_147_p6 == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln91_fu_1069_p2 = ((w3_fu_1062_p1 == 4'd1) ? 1'b1 : 1'b0);

assign icmp_ln93_fu_1075_p1 = wmax;

assign icmp_ln93_fu_1075_p2 = ((zext_ln90_fu_1065_p1 > icmp_ln93_fu_1075_p1) ? 1'b1 : 1'b0);

assign icmp_ln96_fu_1080_p2 = ((ap_phi_mux_p_3_phi_fu_201_p4 == 32'd0) ? 1'b1 : 1'b0);

assign k_2_fu_522_p2 = (sk20_fu_513_p2 - sk21_fu_517_p2);

assign k_3_fu_645_p2 = (k_2_reg_1245 + mul_ln44_1_reg_1266);

assign k_5_fu_658_p3 = ((icmp_ln42_reg_1185[0:0] === 1'b1) ? k_3_fu_645_p2 : k_fu_653_p2);

assign k_6_fu_649_p2 = (sk20_reg_1240 - mul_ln47_1_reg_1271);

assign k_fu_653_p2 = (mul_ln48_1_reg_1276 + k_6_fu_649_p2);

assign mul_ln28_fu_365_p2 = ($signed(add_ln28_fu_349_p2) * $signed(add_ln28_1_fu_359_p2));

assign mul_ln29_fu_389_p2 = ($signed(add_ln29_fu_371_p2) * $signed(or_ln29_fu_383_p2));

assign mul_ln30_fu_537_p1 = sext_ln30_fu_533_p1;

assign mul_ln30_fu_537_p2 = ($signed(sub_ln30_1_reg_1200) * $signed(mul_ln30_fu_537_p1));

assign mul_ln33_1_fu_542_p2 = ($signed(mul_ln33_reg_1205) * $signed(add_ln33_reg_1170));

assign mul_ln33_fu_406_p2 = ($signed(add_ln28_fu_349_p2) * $signed(add_ln33_1_fu_400_p2));

assign mul_ln34_fu_555_p1 = add_ln34_fu_546_p2;

assign mul_ln34_fu_555_p2 = ($signed(add_ln34_2_reg_1210) * $signed(mul_ln34_fu_555_p1));

assign mul_ln39_fu_452_p0 = wmax;

assign mul_ln39_fu_452_p2 = ($signed(mul_ln39_fu_452_p0) * $signed(add_ln39_fu_447_p2));

assign mul_ln44_1_fu_576_p1 = sext_ln30_fu_533_p1;

assign mul_ln44_1_fu_576_p2 = ($signed(sub_ln44_fu_571_p2) * $signed(mul_ln44_1_fu_576_p1));

assign mul_ln44_fu_463_p2 = ($signed(wm21_fu_457_p2) * $signed(sub_ln30_1_fu_395_p2));

assign mul_ln47_1_fu_587_p2 = ($signed(mul_ln47_reg_1225) * $signed(add_ln47_fu_582_p2));

assign mul_ln47_fu_475_p2 = ($signed(add_ln39_fu_447_p2) * $signed(add_ln47_1_fu_469_p2));

assign mul_ln48_1_fu_597_p2 = ($signed(add_ln48_reg_1230) * $signed(sub_ln48_1_fu_592_p2));

assign mul_ln48_fu_507_p2 = ($signed(add_ln48_1_fu_503_p2) * $signed(wm21_fu_457_p2));

assign mul_ln53_fu_699_p0 = mul_ln53_fu_699_p00;

assign mul_ln53_fu_699_p00 = select_ln38_reg_1281;

assign mul_ln53_fu_699_p2 = (mul_ln53_fu_699_p0 * $signed(65'h155555556));

assign mul_ln63_fu_782_p0 = mul_ln63_fu_782_p00;

assign mul_ln63_fu_782_p00 = add_ln63_fu_773_p2;

assign mul_ln63_fu_782_p2 = ($signed({{1'b0}, {mul_ln63_fu_782_p0}}) * $signed(sub_ln63_fu_768_p2));

assign mul_ln65_fu_821_p0 = mul_ln65_fu_821_p00;

assign mul_ln65_fu_821_p00 = add_ln65_1_fu_812_p2;

assign mul_ln65_fu_821_p2 = ($signed({{1'b0}, {mul_ln65_fu_821_p0}}) * $signed(add_ln65_fu_806_p2));

assign mul_ln68_fu_937_p1 = zext_ln63_reg_1329;

assign mul_ln68_fu_937_p2 = ($signed(sub_ln68_reg_1364) * $signed({{1'b0}, {mul_ln68_fu_937_p1}}));

assign mul_ln70_fu_941_p2 = ($signed(sub_ln70_reg_1369) * $signed(add_ln70_reg_1374));

assign or_ln29_fu_383_p2 = (shl_ln29_fu_377_p2 | 32'd1);

assign select_ln38_fu_689_p3 = ((icmp_ln38_reg_1180[0:0] === 1'b1) ? v_4_fu_683_p2 : v_3_fu_637_p3);

assign select_ln67_fu_945_p3 = ((icmp_ln67_reg_1359[0:0] === 1'b1) ? mul_ln68_fu_937_p2 : mul_ln70_fu_941_p2);

assign select_ln96_fu_1086_p3 = ((icmp_ln96_fu_1080_p2[0:0] === 1'b1) ? 32'd4294967295 : ap_phi_mux_v_9_phi_fu_189_p6);

assign sext_ln30_fu_533_p1 = $signed(add_ln30_fu_528_p2);

assign sext_ln34_1_fu_423_p1 = $signed(sub_ln34_1_reg_1175);

assign sext_ln34_2_fu_432_p1 = $signed(add_ln34_1_fu_426_p2);

assign sext_ln65_fu_803_p1 = $signed(sub_ln65_reg_1319);

assign shl_ln28_fu_354_p2 = add_ln21_reg_1135 << 32'd1;

assign shl_ln29_fu_377_p2 = reg_232 << 32'd1;

assign shl_ln2_fu_289_p3 = {{w0_fu_244_p4}, {2'd0}};

assign shl_ln34_fu_412_p2 = add_ln21_reg_1135 << 32'd4;

assign shl_ln39_fu_442_p0 = wmax;

assign shl_ln39_fu_442_p2 = shl_ln39_fu_442_p0 << 32'd1;

assign shl_ln48_fu_485_p2 = sub_ln48_fu_481_p2 << 32'd2;

assign shl_ln51_fu_665_p2 = k_5_fu_658_p3 << 32'd2;

assign shl_ln63_fu_762_p0 = reg_232;

assign shl_ln63_fu_762_p2 = shl_ln63_fu_762_p0 << 32'd1;

assign shl_ln68_fu_906_p0 = wmax;

assign shl_ln68_fu_906_p2 = shl_ln68_fu_906_p0 << 32'd1;

assign sk20_fu_513_p2 = ($signed(mul_ln28_reg_1190) * $signed(add_ln21_reg_1135));

assign sk21_fu_517_p2 = ($signed(mul_ln29_reg_1195) * $signed(reg_232));

assign sub_ln30_1_fu_395_p2 = (shl_ln28_fu_354_p2 - zext_ln23_2_reg_1145);

assign sub_ln30_2_fu_301_p2 = (zext_ln30_fu_297_p1 - zext_ln23_1_fu_258_p1);

assign sub_ln34_1_fu_331_p2 = (zext_ln23_fu_254_p1 - zext_ln34_fu_327_p1);

assign sub_ln34_fu_417_p2 = (shl_ln34_fu_412_p2 - shl_ln28_fu_354_p2);

assign sub_ln35_fu_560_p2 = (sk21_fu_517_p2 - mul_ln33_1_fu_542_p2);

assign sub_ln44_fu_571_p2 = (wm20_fu_566_p2 - mul_ln44_reg_1220);

assign sub_ln48_1_fu_592_p2 = (wm20_fu_566_p2 - mul_ln48_reg_1235);

assign sub_ln48_2_fu_491_p2 = (shl_ln48_fu_485_p2 - sub_ln48_fu_481_p2);

assign sub_ln48_fu_481_p1 = wmax;

assign sub_ln48_fu_481_p2 = ($signed(add_ln21_reg_1135) - $signed(sub_ln48_fu_481_p1));

assign sub_ln51_1_fu_671_p2 = (32'd0 - shl_ln51_fu_665_p2);

assign sub_ln63_fu_768_p2 = (shl_ln63_fu_762_p2 - zext_ln59_1_reg_1304);

assign sub_ln65_fu_756_p2 = ($signed(6'd59) - $signed(zext_ln59_fu_728_p1));

assign sub_ln68_fu_916_p2 = (shl_ln63_reg_1324 - add_ln68_fu_911_p2);

assign sub_ln70_fu_921_p0 = reg_232;

assign sub_ln70_fu_921_p1 = wmax;

assign sub_ln70_fu_921_p2 = ($signed(sub_ln70_fu_921_p0) - $signed(sub_ln70_fu_921_p1));

assign sub_ln83_fu_1032_p2 = (32'd2 - grp_fu_223_p2);

assign sub_ln85_fu_1052_p0 = wmax;

assign sub_ln85_fu_1052_p2 = ($signed(sub_ln85_fu_1052_p0) - $signed(sub_ln75_reg_1384));

assign tmp_1_fu_736_p4 = {{sig[11:9]}};

assign tmp_2_fu_851_p1 = reg_232;

assign tmp_2_fu_851_p4 = {{tmp_2_fu_851_p1[31:2]}};

assign tmp_3_fu_970_p4 = {{sig[7:5]}};

assign tmp_5_fu_319_p3 = {{w0_fu_244_p4}, {3'd0}};

assign tmp_fu_267_p4 = {{sig[15:13]}};

assign v_10_fu_952_p2 = (v_8_reg_1349 - select_ln67_fu_945_p3);

assign v_11_fu_996_p2 = (add_ln81_fu_990_p2 + zext_ln77_fu_966_p1);

assign v_12_fu_1038_p2 = (sub_ln83_fu_1032_p2 + v_11_fu_996_p2);

assign v_13_fu_1044_p3 = ((and_ln82_1_fu_1026_p2[0:0] === 1'b1) ? v_12_fu_1038_p2 : v_11_fu_996_p2);

assign v_14_fu_1056_p2 = (sub_ln85_fu_1052_p2 + v_13_reg_1397);

assign v_1_fu_632_p2 = (add_ln35_fu_627_p2 + sub_ln35_reg_1261);

assign v_3_fu_637_p3 = ((and_ln32_1_fu_621_p2[0:0] === 1'b1) ? v_1_fu_632_p2 : v_fu_602_p2);

assign v_4_fu_683_p2 = (add_ln51_fu_677_p2 + v_3_fu_637_p3);

assign v_5_fu_840_p2 = (zext_ln63_1_fu_837_p1 + zext_ln57_reg_1291);

assign v_7_fu_881_p2 = (v_5_fu_840_p2 - zext_ln65_1_fu_878_p1);

assign v_8_fu_887_p3 = ((and_ln64_1_fu_872_p2[0:0] === 1'b1) ? v_7_fu_881_p2 : v_5_fu_840_p2);

assign v_fu_602_p2 = (k_2_reg_1245 - mul_ln30_reg_1251);

assign w0_fu_244_p4 = {{sig[15:12]}};

assign w1_fu_719_p4 = {{sig[11:8]}};

assign w2_fu_957_p4 = {{sig[7:4]}};

assign w3_fu_1062_p1 = sig[3:0];

assign wm20_fu_566_p2 = mul_ln39_reg_1215 << 32'd1;

assign wm21_fu_457_p2 = (shl_ln39_fu_442_p2 | 32'd1);

assign xor_ln70_fu_926_p0 = wmax;

assign xor_ln70_fu_926_p2 = (xor_ln70_fu_926_p0 ^ 32'd4294967295);

assign zext_ln23_1_fu_258_p1 = w0_fu_244_p4;

assign zext_ln23_2_fu_262_p1 = w0_fu_244_p4;

assign zext_ln23_fu_254_p1 = w0_fu_244_p4;

assign zext_ln30_fu_297_p1 = shl_ln2_fu_289_p3;

assign zext_ln34_fu_327_p1 = tmp_5_fu_319_p3;

assign zext_ln57_fu_715_p1 = v_2_reg_132;

assign zext_ln59_1_fu_732_p1 = w1_fu_719_p4;

assign zext_ln59_fu_728_p1 = w1_fu_719_p4;

assign zext_ln63_1_fu_837_p1 = lshr_ln_reg_1334;

assign zext_ln63_fu_778_p1 = add_ln63_fu_773_p2;

assign zext_ln65_1_fu_878_p1 = lshr_ln1_reg_1344;

assign zext_ln77_fu_966_p1 = w2_fu_957_p4;

assign zext_ln90_fu_1065_p1 = w3_fu_1062_p1;

always @ (posedge ap_clk) begin
    zext_ln23_2_reg_1145[31:4] <= 28'b0000000000000000000000000000;
    zext_ln57_reg_1291[31:29] <= 3'b000;
    zext_ln59_1_reg_1304[31:4] <= 28'b0000000000000000000000000000;
    shl_ln63_reg_1324[0] <= 1'b0;
    zext_ln63_reg_1329[31:4] <= 28'b0000000000000000000000000000;
end

endmodule //calc_value4
