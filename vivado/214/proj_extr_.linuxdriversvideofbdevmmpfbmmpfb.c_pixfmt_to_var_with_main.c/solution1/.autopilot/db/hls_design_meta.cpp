#include "hls_design_meta.h"
const Port_Property HLS_Design_Meta::port_props[]={
	Port_Property("ap_start", 1, hls_in, -1, "", "", 1),
	Port_Property("ap_done", 1, hls_out, -1, "", "", 1),
	Port_Property("ap_idle", 1, hls_out, -1, "", "", 1),
	Port_Property("ap_ready", 1, hls_out, -1, "", "", 1),
	Port_Property("var_bits_per_pixel", 32, hls_out, 0, "ap_vld", "out_data", 1),
	Port_Property("var_bits_per_pixel_ap_vld", 1, hls_out, 0, "ap_vld", "out_vld", 1),
	Port_Property("var_transp_offset", 32, hls_out, 1, "ap_vld", "out_data", 1),
	Port_Property("var_transp_offset_ap_vld", 1, hls_out, 1, "ap_vld", "out_vld", 1),
	Port_Property("var_transp_length", 32, hls_out, 2, "ap_vld", "out_data", 1),
	Port_Property("var_transp_length_ap_vld", 1, hls_out, 2, "ap_vld", "out_vld", 1),
	Port_Property("var_blue_offset", 32, hls_out, 3, "ap_vld", "out_data", 1),
	Port_Property("var_blue_offset_ap_vld", 1, hls_out, 3, "ap_vld", "out_vld", 1),
	Port_Property("var_blue_length", 32, hls_out, 4, "ap_vld", "out_data", 1),
	Port_Property("var_blue_length_ap_vld", 1, hls_out, 4, "ap_vld", "out_vld", 1),
	Port_Property("var_green_offset", 32, hls_out, 5, "ap_vld", "out_data", 1),
	Port_Property("var_green_offset_ap_vld", 1, hls_out, 5, "ap_vld", "out_vld", 1),
	Port_Property("var_green_length", 32, hls_out, 6, "ap_vld", "out_data", 1),
	Port_Property("var_green_length_ap_vld", 1, hls_out, 6, "ap_vld", "out_vld", 1),
	Port_Property("var_red_offset", 32, hls_out, 7, "ap_vld", "out_data", 1),
	Port_Property("var_red_offset_ap_vld", 1, hls_out, 7, "ap_vld", "out_vld", 1),
	Port_Property("var_red_length", 32, hls_out, 8, "ap_vld", "out_data", 1),
	Port_Property("var_red_length_ap_vld", 1, hls_out, 8, "ap_vld", "out_vld", 1),
	Port_Property("pix_fmt", 32, hls_in, 9, "ap_none", "in_data", 1),
};
const char* HLS_Design_Meta::dut_name = "pixfmt_to_var";
