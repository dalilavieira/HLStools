-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2019.1
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity ath_ant_div_conf_fast_divbias is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    ant_conf_div_group : IN STD_LOGIC_VECTOR (31 downto 0);
    ant_conf_main_lna_conf : IN STD_LOGIC_VECTOR (31 downto 0);
    ant_conf_alt_lna_conf : IN STD_LOGIC_VECTOR (31 downto 0);
    ant_conf_fast_div_bias : OUT STD_LOGIC_VECTOR (31 downto 0);
    ant_conf_fast_div_bias_ap_vld : OUT STD_LOGIC;
    ant_conf_alt_gaintb : OUT STD_LOGIC_VECTOR (31 downto 0);
    ant_conf_alt_gaintb_ap_vld : OUT STD_LOGIC;
    ant_conf_main_gaintb : OUT STD_LOGIC_VECTOR (31 downto 0);
    ant_conf_main_gaintb_ap_vld : OUT STD_LOGIC;
    antcomb_ant_ratio : IN STD_LOGIC_VECTOR (31 downto 0);
    antcomb_fast_div_bias : IN STD_LOGIC_VECTOR (31 downto 0);
    antcomb_scan : IN STD_LOGIC_VECTOR (31 downto 0);
    alt_ratio : IN STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of ath_ant_div_conf_fast_divbias is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "ath_ant_div_conf_fast_divbias,hls_ip_2019_1,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7k160t-fbg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=2.162000,HLS_SYN_LAT=3,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=11,HLS_SYN_LUT=369,HLS_VERSION=2019_1}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (5 downto 0) := "000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (5 downto 0) := "000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (5 downto 0) := "001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (5 downto 0) := "010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (5 downto 0) := "100000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_3D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111101";
    constant ap_const_lv32_32 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110010";
    constant ap_const_lv32_3B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111011";
    constant ap_const_lv32_31 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110001";
    constant ap_const_lv32_30 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110000";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100011";
    constant ap_const_lv32_21 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100001";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_39 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111001";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal ap_CS_fsm : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal icmp_ln25_fu_164_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln25_reg_253 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln82_1_fu_170_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln82_1_reg_257 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln68_fu_188_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln68_reg_265 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal icmp_ln127_fu_206_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln127_reg_284 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal icmp_ln183_fu_224_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln183_reg_315 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal icmp_ln185_fu_230_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln27_fu_182_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln70_fu_200_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_154_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln129_fu_218_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_159_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_148_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln186_fu_242_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln27_fu_176_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln70_fu_194_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln129_fu_212_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln186_fu_236_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (5 downto 0);


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                icmp_ln127_reg_284 <= icmp_ln127_fu_206_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln127_fu_206_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                icmp_ln183_reg_315 <= icmp_ln183_fu_224_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                icmp_ln25_reg_253 <= icmp_ln25_fu_164_p2;
                icmp_ln82_1_reg_257 <= icmp_ln82_1_fu_170_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                icmp_ln68_reg_265 <= icmp_ln68_fu_188_p2;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, icmp_ln25_fu_164_p2, icmp_ln68_fu_188_p2, ap_CS_fsm_state2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((icmp_ln25_fu_164_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                elsif (((icmp_ln25_fu_164_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((icmp_ln68_fu_188_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when others =>  
                ap_NS_fsm <= "XXXXXX";
        end case;
    end process;
    ant_conf_alt_gaintb <= ap_const_lv32_0;

    ant_conf_alt_gaintb_ap_vld_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
            ant_conf_alt_gaintb_ap_vld <= ap_const_logic_1;
        else 
            ant_conf_alt_gaintb_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    ant_conf_fast_div_bias_assign_proc : process(ap_start, ap_CS_fsm_state1, antcomb_fast_div_bias, icmp_ln25_fu_164_p2, icmp_ln25_reg_253, icmp_ln68_fu_188_p2, icmp_ln68_reg_265, ap_CS_fsm_state2, icmp_ln127_fu_206_p2, icmp_ln127_reg_284, ap_CS_fsm_state3, icmp_ln183_reg_315, ap_CS_fsm_state4, icmp_ln185_fu_230_p2, or_ln27_fu_182_p2, or_ln70_fu_200_p2, grp_fu_154_p2, or_ln129_fu_218_p2, grp_fu_159_p2, grp_fu_148_p2, or_ln186_fu_242_p2)
    begin
        if (((icmp_ln183_reg_315 = ap_const_lv1_0) and (icmp_ln127_reg_284 = ap_const_lv1_1) and (icmp_ln68_reg_265 = ap_const_lv1_0) and (icmp_ln25_reg_253 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            ant_conf_fast_div_bias <= antcomb_fast_div_bias;
        elsif (((icmp_ln185_fu_230_p2 = ap_const_lv1_1) and (or_ln186_fu_242_p2 = ap_const_lv32_2) and (icmp_ln127_reg_284 = ap_const_lv1_0) and (icmp_ln68_reg_265 = ap_const_lv1_0) and (icmp_ln25_reg_253 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            ant_conf_fast_div_bias <= ap_const_lv32_39;
        elsif ((((icmp_ln185_fu_230_p2 = ap_const_lv1_1) and (icmp_ln127_reg_284 = ap_const_lv1_0) and (icmp_ln68_reg_265 = ap_const_lv1_0) and (icmp_ln25_reg_253 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4) and (or_ln186_fu_242_p2 = ap_const_lv32_20)) or ((icmp_ln185_fu_230_p2 = ap_const_lv1_1) and (icmp_ln127_reg_284 = ap_const_lv1_0) and (icmp_ln68_reg_265 = ap_const_lv1_0) and (icmp_ln25_reg_253 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4) and (or_ln186_fu_242_p2 = ap_const_lv32_21)) or ((icmp_ln185_fu_230_p2 = ap_const_lv1_1) and (icmp_ln127_reg_284 = ap_const_lv1_0) and (icmp_ln68_reg_265 = ap_const_lv1_0) and (icmp_ln25_reg_253 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4) and (or_ln186_fu_242_p2 = ap_const_lv32_23)))) then 
            ant_conf_fast_div_bias <= ap_const_lv32_3;
        elsif ((((icmp_ln185_fu_230_p2 = ap_const_lv1_1) and (icmp_ln127_reg_284 = ap_const_lv1_0) and (icmp_ln68_reg_265 = ap_const_lv1_0) and (icmp_ln25_reg_253 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4) and (or_ln186_fu_242_p2 = ap_const_lv32_12)) or ((grp_fu_154_p2 = ap_const_lv1_1) and (icmp_ln68_fu_188_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2) and (or_ln70_fu_200_p2 = ap_const_lv32_10)) or ((grp_fu_154_p2 = ap_const_lv1_1) and (icmp_ln68_fu_188_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2) and (or_ln70_fu_200_p2 = ap_const_lv32_13)) or ((grp_fu_154_p2 = ap_const_lv1_1) and (icmp_ln68_fu_188_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2) and (or_ln70_fu_200_p2 = ap_const_lv32_20)) or ((grp_fu_154_p2 = ap_const_lv1_1) and (icmp_ln68_fu_188_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2) and (or_ln70_fu_200_p2 = ap_const_lv32_23)))) then 
            ant_conf_fast_div_bias <= ap_const_lv32_3F;
        elsif ((((icmp_ln185_fu_230_p2 = ap_const_lv1_1) and (icmp_ln127_reg_284 = ap_const_lv1_0) and (icmp_ln68_reg_265 = ap_const_lv1_0) and (icmp_ln25_reg_253 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4) and (or_ln186_fu_242_p2 = ap_const_lv32_10)) or ((icmp_ln185_fu_230_p2 = ap_const_lv1_1) and (icmp_ln127_reg_284 = ap_const_lv1_0) and (icmp_ln68_reg_265 = ap_const_lv1_0) and (icmp_ln25_reg_253 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4) and (or_ln186_fu_242_p2 = ap_const_lv32_13)) or ((ap_const_logic_1 = ap_CS_fsm_state3) and (((grp_fu_148_p2 = ap_const_lv1_0) and (icmp_ln127_fu_206_p2 = ap_const_lv1_1) and (or_ln129_fu_218_p2 = ap_const_lv32_10)) or ((grp_fu_159_p2 = ap_const_lv1_0) and (icmp_ln127_fu_206_p2 = ap_const_lv1_1) and (or_ln129_fu_218_p2 = ap_const_lv32_10)))) or ((ap_const_logic_1 = ap_CS_fsm_state3) and (((grp_fu_148_p2 = ap_const_lv1_0) and (icmp_ln127_fu_206_p2 = ap_const_lv1_1) and (or_ln129_fu_218_p2 = ap_const_lv32_13)) or ((grp_fu_159_p2 = ap_const_lv1_0) and (icmp_ln127_fu_206_p2 = ap_const_lv1_1) and (or_ln129_fu_218_p2 = ap_const_lv32_13)))) or ((ap_const_logic_1 = ap_CS_fsm_state3) and (((grp_fu_148_p2 = ap_const_lv1_0) and (icmp_ln127_fu_206_p2 = ap_const_lv1_1) and (or_ln129_fu_218_p2 = ap_const_lv32_20)) or ((grp_fu_159_p2 = ap_const_lv1_0) and (icmp_ln127_fu_206_p2 = ap_const_lv1_1) and (or_ln129_fu_218_p2 = ap_const_lv32_20)))) or ((ap_const_logic_1 = ap_CS_fsm_state3) and (((grp_fu_148_p2 = ap_const_lv1_0) and (icmp_ln127_fu_206_p2 = ap_const_lv1_1) and (or_ln129_fu_218_p2 = ap_const_lv32_23)) or ((grp_fu_159_p2 = ap_const_lv1_0) and (icmp_ln127_fu_206_p2 = ap_const_lv1_1) and (or_ln129_fu_218_p2 = ap_const_lv32_23)))) or ((or_ln27_fu_182_p2 = ap_const_lv32_12) and (icmp_ln25_fu_164_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1)))) then 
            ant_conf_fast_div_bias <= ap_const_lv32_2;
        elsif ((((or_ln27_fu_182_p2 = ap_const_lv32_10) and (icmp_ln25_fu_164_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1)) or ((or_ln27_fu_182_p2 = ap_const_lv32_13) and (icmp_ln25_fu_164_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1)))) then 
            ant_conf_fast_div_bias <= ap_const_lv32_7;
        elsif (((or_ln27_fu_182_p2 = ap_const_lv32_21) and (icmp_ln25_fu_164_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
            ant_conf_fast_div_bias <= ap_const_lv32_0;
        elsif ((((icmp_ln185_fu_230_p2 = ap_const_lv1_1) and (icmp_ln127_reg_284 = ap_const_lv1_0) and (icmp_ln68_reg_265 = ap_const_lv1_0) and (icmp_ln25_reg_253 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4) and (or_ln186_fu_242_p2 = ap_const_lv32_31)) or ((or_ln27_fu_182_p2 = ap_const_lv32_20) and (icmp_ln25_fu_164_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1)) or ((or_ln27_fu_182_p2 = ap_const_lv32_23) and (icmp_ln25_fu_164_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1)))) then 
            ant_conf_fast_div_bias <= ap_const_lv32_6;
        elsif ((((icmp_ln185_fu_230_p2 = ap_const_lv1_1) and (icmp_ln127_reg_284 = ap_const_lv1_0) and (or_ln186_fu_242_p2 = ap_const_lv32_1) and (icmp_ln68_reg_265 = ap_const_lv1_0) and (icmp_ln25_reg_253 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4)) or ((or_ln186_fu_242_p2 = ap_const_lv32_3) and (icmp_ln185_fu_230_p2 = ap_const_lv1_1) and (icmp_ln127_reg_284 = ap_const_lv1_0) and (icmp_ln68_reg_265 = ap_const_lv1_0) and (icmp_ln25_reg_253 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4)) or ((icmp_ln185_fu_230_p2 = ap_const_lv1_1) and (icmp_ln127_reg_284 = ap_const_lv1_0) and (icmp_ln68_reg_265 = ap_const_lv1_0) and (icmp_ln25_reg_253 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4) and (or_ln186_fu_242_p2 = ap_const_lv32_30)) or ((or_ln186_fu_242_p2 = ap_const_lv32_32) and (icmp_ln185_fu_230_p2 = ap_const_lv1_1) and (icmp_ln127_reg_284 = ap_const_lv1_0) and (icmp_ln68_reg_265 = ap_const_lv1_0) and (icmp_ln25_reg_253 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4)) or ((icmp_ln127_fu_206_p2 = ap_const_lv1_1) and (or_ln129_fu_218_p2 = ap_const_lv32_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((or_ln129_fu_218_p2 = ap_const_lv32_2) and (icmp_ln127_fu_206_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((or_ln129_fu_218_p2 = ap_const_lv32_3) and (icmp_ln127_fu_206_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((icmp_ln127_fu_206_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3) and (or_ln129_fu_218_p2 = ap_const_lv32_12)) or ((icmp_ln127_fu_206_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3) and (or_ln129_fu_218_p2 = ap_const_lv32_21)) or ((grp_fu_148_p2 = ap_const_lv1_1) and (grp_fu_159_p2 = ap_const_lv1_1) and (icmp_ln127_fu_206_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3) and (or_ln129_fu_218_p2 = ap_const_lv32_10)) or ((grp_fu_148_p2 = ap_const_lv1_1) and (grp_fu_159_p2 = ap_const_lv1_1) and (icmp_ln127_fu_206_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3) and (or_ln129_fu_218_p2 = ap_const_lv32_13)) or ((grp_fu_148_p2 = ap_const_lv1_1) and (grp_fu_159_p2 = ap_const_lv1_1) and (icmp_ln127_fu_206_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3) and (or_ln129_fu_218_p2 = ap_const_lv32_20)) or ((grp_fu_148_p2 = ap_const_lv1_1) and (grp_fu_159_p2 = ap_const_lv1_1) and (icmp_ln127_fu_206_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3) and (or_ln129_fu_218_p2 = ap_const_lv32_23)) or ((icmp_ln127_fu_206_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3) and (or_ln129_fu_218_p2 = ap_const_lv32_30)) or ((icmp_ln127_fu_206_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3) and (or_ln129_fu_218_p2 = ap_const_lv32_31)) or ((or_ln129_fu_218_p2 = ap_const_lv32_32) and (icmp_ln127_fu_206_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((or_ln70_fu_200_p2 = ap_const_lv32_1) and (icmp_ln68_fu_188_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((or_ln70_fu_200_p2 = ap_const_lv32_2) and (icmp_ln68_fu_188_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((or_ln70_fu_200_p2 = ap_const_lv32_3) and (icmp_ln68_fu_188_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((icmp_ln68_fu_188_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2) and (or_ln70_fu_200_p2 = ap_const_lv32_12)) or ((icmp_ln68_fu_188_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2) and (or_ln70_fu_200_p2 = ap_const_lv32_21)) or ((grp_fu_154_p2 = ap_const_lv1_0) and (icmp_ln68_fu_188_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2) and (or_ln70_fu_200_p2 = ap_const_lv32_10)) or ((grp_fu_154_p2 = ap_const_lv1_0) and (icmp_ln68_fu_188_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2) and (or_ln70_fu_200_p2 = ap_const_lv32_13)) or ((grp_fu_154_p2 = ap_const_lv1_0) and (icmp_ln68_fu_188_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2) and (or_ln70_fu_200_p2 = ap_const_lv32_20)) or ((grp_fu_154_p2 = ap_const_lv1_0) and (icmp_ln68_fu_188_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2) and (or_ln70_fu_200_p2 = ap_const_lv32_23)) or ((icmp_ln68_fu_188_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2) and (or_ln70_fu_200_p2 = ap_const_lv32_30)) or ((icmp_ln68_fu_188_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2) and (or_ln70_fu_200_p2 = ap_const_lv32_31)) or ((or_ln70_fu_200_p2 = ap_const_lv32_32) and (icmp_ln68_fu_188_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((or_ln27_fu_182_p2 = ap_const_lv32_3) and (icmp_ln25_fu_164_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1)) or ((or_ln27_fu_182_p2 = ap_const_lv32_30) and (icmp_ln25_fu_164_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1)))) then 
            ant_conf_fast_div_bias <= ap_const_lv32_1;
        elsif ((((or_ln27_fu_182_p2 = ap_const_lv32_1) and (icmp_ln25_fu_164_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1)) or ((or_ln27_fu_182_p2 = ap_const_lv32_31) and (icmp_ln25_fu_164_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1)))) then 
            ant_conf_fast_div_bias <= ap_const_lv32_3B;
        elsif ((((or_ln27_fu_182_p2 = ap_const_lv32_32) and (icmp_ln25_fu_164_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1)) or ((or_ln27_fu_182_p2 = ap_const_lv32_2) and (icmp_ln25_fu_164_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1)))) then 
            ant_conf_fast_div_bias <= ap_const_lv32_3D;
        else 
            ant_conf_fast_div_bias <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    ant_conf_fast_div_bias_ap_vld_assign_proc : process(ap_start, ap_CS_fsm_state1, icmp_ln25_fu_164_p2, icmp_ln25_reg_253, icmp_ln68_fu_188_p2, icmp_ln68_reg_265, ap_CS_fsm_state2, icmp_ln127_fu_206_p2, icmp_ln127_reg_284, ap_CS_fsm_state3, icmp_ln183_reg_315, ap_CS_fsm_state4, icmp_ln185_fu_230_p2, or_ln27_fu_182_p2, or_ln70_fu_200_p2, grp_fu_154_p2, or_ln129_fu_218_p2, grp_fu_159_p2, grp_fu_148_p2, or_ln186_fu_242_p2)
    begin
        if ((((icmp_ln185_fu_230_p2 = ap_const_lv1_1) and (icmp_ln127_reg_284 = ap_const_lv1_0) and (or_ln186_fu_242_p2 = ap_const_lv32_1) and (icmp_ln68_reg_265 = ap_const_lv1_0) and (icmp_ln25_reg_253 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4)) or ((icmp_ln185_fu_230_p2 = ap_const_lv1_1) and (or_ln186_fu_242_p2 = ap_const_lv32_2) and (icmp_ln127_reg_284 = ap_const_lv1_0) and (icmp_ln68_reg_265 = ap_const_lv1_0) and (icmp_ln25_reg_253 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4)) or ((or_ln186_fu_242_p2 = ap_const_lv32_3) and (icmp_ln185_fu_230_p2 = ap_const_lv1_1) and (icmp_ln127_reg_284 = ap_const_lv1_0) and (icmp_ln68_reg_265 = ap_const_lv1_0) and (icmp_ln25_reg_253 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4)) or ((icmp_ln185_fu_230_p2 = ap_const_lv1_1) and (icmp_ln127_reg_284 = ap_const_lv1_0) and (icmp_ln68_reg_265 = ap_const_lv1_0) and (icmp_ln25_reg_253 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4) and (or_ln186_fu_242_p2 = ap_const_lv32_10)) or ((icmp_ln185_fu_230_p2 = ap_const_lv1_1) and (icmp_ln127_reg_284 = ap_const_lv1_0) and (icmp_ln68_reg_265 = ap_const_lv1_0) and (icmp_ln25_reg_253 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4) and (or_ln186_fu_242_p2 = ap_const_lv32_12)) or ((icmp_ln185_fu_230_p2 = ap_const_lv1_1) and (icmp_ln127_reg_284 = ap_const_lv1_0) and (icmp_ln68_reg_265 = ap_const_lv1_0) and (icmp_ln25_reg_253 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4) and (or_ln186_fu_242_p2 = ap_const_lv32_13)) or ((icmp_ln185_fu_230_p2 = ap_const_lv1_1) and (icmp_ln127_reg_284 = ap_const_lv1_0) and (icmp_ln68_reg_265 = ap_const_lv1_0) and (icmp_ln25_reg_253 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4) and (or_ln186_fu_242_p2 = ap_const_lv32_20)) or ((icmp_ln185_fu_230_p2 = ap_const_lv1_1) and (icmp_ln127_reg_284 = ap_const_lv1_0) and (icmp_ln68_reg_265 = ap_const_lv1_0) and (icmp_ln25_reg_253 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4) and (or_ln186_fu_242_p2 = ap_const_lv32_21)) or ((icmp_ln185_fu_230_p2 = ap_const_lv1_1) and (icmp_ln127_reg_284 = ap_const_lv1_0) and (icmp_ln68_reg_265 = ap_const_lv1_0) and (icmp_ln25_reg_253 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4) and (or_ln186_fu_242_p2 = ap_const_lv32_23)) or ((icmp_ln185_fu_230_p2 = ap_const_lv1_1) and (icmp_ln127_reg_284 = ap_const_lv1_0) and (icmp_ln68_reg_265 = ap_const_lv1_0) and (icmp_ln25_reg_253 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4) and (or_ln186_fu_242_p2 = ap_const_lv32_30)) or ((icmp_ln185_fu_230_p2 = ap_const_lv1_1) and (icmp_ln127_reg_284 = ap_const_lv1_0) and (icmp_ln68_reg_265 = ap_const_lv1_0) and (icmp_ln25_reg_253 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4) and (or_ln186_fu_242_p2 = ap_const_lv32_31)) or ((or_ln186_fu_242_p2 = ap_const_lv32_32) and (icmp_ln185_fu_230_p2 = ap_const_lv1_1) and (icmp_ln127_reg_284 = ap_const_lv1_0) and (icmp_ln68_reg_265 = ap_const_lv1_0) and (icmp_ln25_reg_253 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4)) or ((icmp_ln183_reg_315 = ap_const_lv1_0) and (icmp_ln127_reg_284 = ap_const_lv1_1) and (icmp_ln68_reg_265 = ap_const_lv1_0) and (icmp_ln25_reg_253 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4)) or ((icmp_ln127_fu_206_p2 = ap_const_lv1_1) and (or_ln129_fu_218_p2 = ap_const_lv32_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((or_ln129_fu_218_p2 = ap_const_lv32_2) and (icmp_ln127_fu_206_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((or_ln129_fu_218_p2 = ap_const_lv32_3) and (icmp_ln127_fu_206_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((icmp_ln127_fu_206_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3) and (or_ln129_fu_218_p2 = ap_const_lv32_12)) or ((icmp_ln127_fu_206_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3) and (or_ln129_fu_218_p2 = ap_const_lv32_21)) or ((grp_fu_148_p2 = ap_const_lv1_1) and (grp_fu_159_p2 = ap_const_lv1_1) and (icmp_ln127_fu_206_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3) and (or_ln129_fu_218_p2 = ap_const_lv32_10)) or ((grp_fu_148_p2 = ap_const_lv1_1) and (grp_fu_159_p2 = ap_const_lv1_1) and (icmp_ln127_fu_206_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3) and (or_ln129_fu_218_p2 = ap_const_lv32_13)) or ((grp_fu_148_p2 = ap_const_lv1_1) and (grp_fu_159_p2 = ap_const_lv1_1) and (icmp_ln127_fu_206_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3) and (or_ln129_fu_218_p2 = ap_const_lv32_20)) or ((grp_fu_148_p2 = ap_const_lv1_1) and (grp_fu_159_p2 = ap_const_lv1_1) and (icmp_ln127_fu_206_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3) and (or_ln129_fu_218_p2 = ap_const_lv32_23)) or ((icmp_ln127_fu_206_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3) and (or_ln129_fu_218_p2 = ap_const_lv32_30)) or ((icmp_ln127_fu_206_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3) and (or_ln129_fu_218_p2 = ap_const_lv32_31)) or ((or_ln129_fu_218_p2 = ap_const_lv32_32) and (icmp_ln127_fu_206_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((ap_const_logic_1 = ap_CS_fsm_state3) and (((grp_fu_148_p2 = ap_const_lv1_0) and (icmp_ln127_fu_206_p2 = ap_const_lv1_1) and (or_ln129_fu_218_p2 = ap_const_lv32_10)) or ((grp_fu_159_p2 = ap_const_lv1_0) and (icmp_ln127_fu_206_p2 = ap_const_lv1_1) and (or_ln129_fu_218_p2 = ap_const_lv32_10)))) or ((ap_const_logic_1 = ap_CS_fsm_state3) and (((grp_fu_148_p2 = ap_const_lv1_0) and (icmp_ln127_fu_206_p2 = ap_const_lv1_1) and (or_ln129_fu_218_p2 = ap_const_lv32_13)) or ((grp_fu_159_p2 = ap_const_lv1_0) and (icmp_ln127_fu_206_p2 = ap_const_lv1_1) and (or_ln129_fu_218_p2 = ap_const_lv32_13)))) or ((ap_const_logic_1 = ap_CS_fsm_state3) and (((grp_fu_148_p2 = ap_const_lv1_0) and (icmp_ln127_fu_206_p2 = ap_const_lv1_1) and (or_ln129_fu_218_p2 = ap_const_lv32_20)) or ((grp_fu_159_p2 = ap_const_lv1_0) and (icmp_ln127_fu_206_p2 = ap_const_lv1_1) and (or_ln129_fu_218_p2 = ap_const_lv32_20)))) or ((ap_const_logic_1 = ap_CS_fsm_state3) and (((grp_fu_148_p2 = ap_const_lv1_0) and (icmp_ln127_fu_206_p2 = ap_const_lv1_1) and (or_ln129_fu_218_p2 = ap_const_lv32_23)) or ((grp_fu_159_p2 = ap_const_lv1_0) and (icmp_ln127_fu_206_p2 = ap_const_lv1_1) and (or_ln129_fu_218_p2 = ap_const_lv32_23)))) or ((or_ln70_fu_200_p2 = ap_const_lv32_1) and (icmp_ln68_fu_188_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((or_ln70_fu_200_p2 = ap_const_lv32_2) and (icmp_ln68_fu_188_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((or_ln70_fu_200_p2 = ap_const_lv32_3) and (icmp_ln68_fu_188_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((icmp_ln68_fu_188_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2) and (or_ln70_fu_200_p2 = ap_const_lv32_12)) or ((icmp_ln68_fu_188_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2) and (or_ln70_fu_200_p2 = ap_const_lv32_21)) or ((grp_fu_154_p2 = ap_const_lv1_1) and (icmp_ln68_fu_188_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2) and (or_ln70_fu_200_p2 = ap_const_lv32_10)) or ((grp_fu_154_p2 = ap_const_lv1_1) and (icmp_ln68_fu_188_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2) and (or_ln70_fu_200_p2 = ap_const_lv32_13)) or ((grp_fu_154_p2 = ap_const_lv1_1) and (icmp_ln68_fu_188_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2) and (or_ln70_fu_200_p2 = ap_const_lv32_20)) or ((grp_fu_154_p2 = ap_const_lv1_0) and (icmp_ln68_fu_188_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2) and (or_ln70_fu_200_p2 = ap_const_lv32_10)) or ((grp_fu_154_p2 = ap_const_lv1_0) and (icmp_ln68_fu_188_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2) and (or_ln70_fu_200_p2 = ap_const_lv32_13)) or ((grp_fu_154_p2 = ap_const_lv1_0) and (icmp_ln68_fu_188_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2) and (or_ln70_fu_200_p2 = ap_const_lv32_20)) or ((grp_fu_154_p2 = ap_const_lv1_1) and (icmp_ln68_fu_188_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2) and (or_ln70_fu_200_p2 = ap_const_lv32_23)) or ((grp_fu_154_p2 = ap_const_lv1_0) and (icmp_ln68_fu_188_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2) and (or_ln70_fu_200_p2 = ap_const_lv32_23)) or ((icmp_ln68_fu_188_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2) and (or_ln70_fu_200_p2 = ap_const_lv32_30)) or ((icmp_ln68_fu_188_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2) and (or_ln70_fu_200_p2 = ap_const_lv32_31)) or ((or_ln70_fu_200_p2 = ap_const_lv32_32) and (icmp_ln68_fu_188_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((or_ln27_fu_182_p2 = ap_const_lv32_32) and (icmp_ln25_fu_164_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1)) or ((or_ln27_fu_182_p2 = ap_const_lv32_1) and (icmp_ln25_fu_164_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1)) or ((or_ln27_fu_182_p2 = ap_const_lv32_2) and (icmp_ln25_fu_164_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1)) or ((or_ln27_fu_182_p2 = ap_const_lv32_3) and (icmp_ln25_fu_164_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1)) or ((or_ln27_fu_182_p2 = ap_const_lv32_10) and (icmp_ln25_fu_164_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1)) or ((or_ln27_fu_182_p2 = ap_const_lv32_12) and (icmp_ln25_fu_164_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1)) or ((or_ln27_fu_182_p2 = ap_const_lv32_13) and (icmp_ln25_fu_164_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1)) or ((or_ln27_fu_182_p2 = ap_const_lv32_20) and (icmp_ln25_fu_164_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1)) or ((or_ln27_fu_182_p2 = ap_const_lv32_21) and (icmp_ln25_fu_164_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1)) or ((or_ln27_fu_182_p2 = ap_const_lv32_23) and (icmp_ln25_fu_164_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1)) or ((or_ln27_fu_182_p2 = ap_const_lv32_30) and (icmp_ln25_fu_164_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1)) or ((or_ln27_fu_182_p2 = ap_const_lv32_31) and (icmp_ln25_fu_164_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1)))) then 
            ant_conf_fast_div_bias_ap_vld <= ap_const_logic_1;
        else 
            ant_conf_fast_div_bias_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    ant_conf_main_gaintb <= ap_const_lv32_0;

    ant_conf_main_gaintb_ap_vld_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
            ant_conf_main_gaintb_ap_vld <= ap_const_logic_1;
        else 
            ant_conf_main_gaintb_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);

    ap_done_assign_proc : process(ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_148_p2 <= "1" when (antcomb_scan = ap_const_lv32_0) else "0";
    grp_fu_154_p2 <= (icmp_ln82_1_reg_257 and grp_fu_148_p2);
    grp_fu_159_p2 <= "1" when (signed(antcomb_ant_ratio) < signed(alt_ratio)) else "0";
    icmp_ln127_fu_206_p2 <= "1" when (ant_conf_div_group = ap_const_lv32_2) else "0";
    icmp_ln183_fu_224_p2 <= "1" when (antcomb_fast_div_bias = ap_const_lv32_0) else "0";
    icmp_ln185_fu_230_p2 <= "1" when (ant_conf_div_group = ap_const_lv32_3) else "0";
    icmp_ln25_fu_164_p2 <= "1" when (ant_conf_div_group = ap_const_lv32_0) else "0";
    icmp_ln68_fu_188_p2 <= "1" when (ant_conf_div_group = ap_const_lv32_1) else "0";
    icmp_ln82_1_fu_170_p2 <= "1" when (signed(alt_ratio) > signed(ap_const_lv32_0)) else "0";
    or_ln129_fu_218_p2 <= (shl_ln129_fu_212_p2 or ant_conf_alt_lna_conf);
    or_ln186_fu_242_p2 <= (shl_ln186_fu_236_p2 or ant_conf_alt_lna_conf);
    or_ln27_fu_182_p2 <= (shl_ln27_fu_176_p2 or ant_conf_alt_lna_conf);
    or_ln70_fu_200_p2 <= (shl_ln70_fu_194_p2 or ant_conf_alt_lna_conf);
    shl_ln129_fu_212_p2 <= std_logic_vector(shift_left(unsigned(ant_conf_main_lna_conf),to_integer(unsigned('0' & ap_const_lv32_4(31-1 downto 0)))));
    shl_ln186_fu_236_p2 <= std_logic_vector(shift_left(unsigned(ant_conf_main_lna_conf),to_integer(unsigned('0' & ap_const_lv32_4(31-1 downto 0)))));
    shl_ln27_fu_176_p2 <= std_logic_vector(shift_left(unsigned(ant_conf_main_lna_conf),to_integer(unsigned('0' & ap_const_lv32_4(31-1 downto 0)))));
    shl_ln70_fu_194_p2 <= std_logic_vector(shift_left(unsigned(ant_conf_main_lna_conf),to_integer(unsigned('0' & ap_const_lv32_4(31-1 downto 0)))));
end behav;
