// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="ath_ant_div_conf_fast_divbias,hls_ip_2019_1,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7k160t-fbg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=2.162000,HLS_SYN_LAT=3,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=11,HLS_SYN_LUT=369,HLS_VERSION=2019_1}" *)

module ath_ant_div_conf_fast_divbias (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        ant_conf_div_group,
        ant_conf_main_lna_conf,
        ant_conf_alt_lna_conf,
        ant_conf_fast_div_bias,
        ant_conf_fast_div_bias_ap_vld,
        ant_conf_alt_gaintb,
        ant_conf_alt_gaintb_ap_vld,
        ant_conf_main_gaintb,
        ant_conf_main_gaintb_ap_vld,
        antcomb_ant_ratio,
        antcomb_fast_div_bias,
        antcomb_scan,
        alt_ratio
);

parameter    ap_ST_fsm_state1 = 6'd1;
parameter    ap_ST_fsm_state2 = 6'd2;
parameter    ap_ST_fsm_state3 = 6'd4;
parameter    ap_ST_fsm_state4 = 6'd8;
parameter    ap_ST_fsm_state5 = 6'd16;
parameter    ap_ST_fsm_state6 = 6'd32;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] ant_conf_div_group;
input  [31:0] ant_conf_main_lna_conf;
input  [31:0] ant_conf_alt_lna_conf;
output  [31:0] ant_conf_fast_div_bias;
output   ant_conf_fast_div_bias_ap_vld;
output  [31:0] ant_conf_alt_gaintb;
output   ant_conf_alt_gaintb_ap_vld;
output  [31:0] ant_conf_main_gaintb;
output   ant_conf_main_gaintb_ap_vld;
input  [31:0] antcomb_ant_ratio;
input  [31:0] antcomb_fast_div_bias;
input  [31:0] antcomb_scan;
input  [31:0] alt_ratio;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[31:0] ant_conf_fast_div_bias;
reg ant_conf_fast_div_bias_ap_vld;
reg ant_conf_alt_gaintb_ap_vld;
reg ant_conf_main_gaintb_ap_vld;

(* fsm_encoding = "none" *) reg   [5:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [0:0] icmp_ln25_fu_164_p2;
reg   [0:0] icmp_ln25_reg_253;
wire   [0:0] icmp_ln82_1_fu_170_p2;
reg   [0:0] icmp_ln82_1_reg_257;
wire   [0:0] icmp_ln68_fu_188_p2;
reg   [0:0] icmp_ln68_reg_265;
wire    ap_CS_fsm_state2;
wire   [0:0] icmp_ln127_fu_206_p2;
reg   [0:0] icmp_ln127_reg_284;
wire    ap_CS_fsm_state3;
wire   [0:0] icmp_ln183_fu_224_p2;
reg   [0:0] icmp_ln183_reg_315;
wire    ap_CS_fsm_state4;
wire   [0:0] icmp_ln185_fu_230_p2;
wire   [31:0] or_ln27_fu_182_p2;
wire   [31:0] or_ln70_fu_200_p2;
wire   [0:0] grp_fu_154_p2;
wire   [31:0] or_ln129_fu_218_p2;
wire   [0:0] grp_fu_159_p2;
wire   [0:0] grp_fu_148_p2;
wire   [31:0] or_ln186_fu_242_p2;
wire   [31:0] shl_ln27_fu_176_p2;
wire   [31:0] shl_ln70_fu_194_p2;
wire   [31:0] shl_ln129_fu_212_p2;
wire   [31:0] shl_ln186_fu_236_p2;
reg   [5:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 6'd1;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        icmp_ln127_reg_284 <= icmp_ln127_fu_206_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln127_fu_206_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        icmp_ln183_reg_315 <= icmp_ln183_fu_224_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        icmp_ln25_reg_253 <= icmp_ln25_fu_164_p2;
        icmp_ln82_1_reg_257 <= icmp_ln82_1_fu_170_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        icmp_ln68_reg_265 <= icmp_ln68_fu_188_p2;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        ant_conf_alt_gaintb_ap_vld = 1'b1;
    end else begin
        ant_conf_alt_gaintb_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln183_reg_315 == 1'd0) & (icmp_ln127_reg_284 == 1'd1) & (icmp_ln68_reg_265 == 1'd0) & (icmp_ln25_reg_253 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        ant_conf_fast_div_bias = antcomb_fast_div_bias;
    end else if (((icmp_ln185_fu_230_p2 == 1'd1) & (or_ln186_fu_242_p2 == 32'd2) & (icmp_ln127_reg_284 == 1'd0) & (icmp_ln68_reg_265 == 1'd0) & (icmp_ln25_reg_253 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        ant_conf_fast_div_bias = 32'd57;
    end else if ((((icmp_ln185_fu_230_p2 == 1'd1) & (icmp_ln127_reg_284 == 1'd0) & (icmp_ln68_reg_265 == 1'd0) & (icmp_ln25_reg_253 == 1'd0) & (1'b1 == ap_CS_fsm_state4) & (or_ln186_fu_242_p2 == 32'd32)) | ((icmp_ln185_fu_230_p2 == 1'd1) & (icmp_ln127_reg_284 == 1'd0) & (icmp_ln68_reg_265 == 1'd0) & (icmp_ln25_reg_253 == 1'd0) & (1'b1 == ap_CS_fsm_state4) & (or_ln186_fu_242_p2 == 32'd33)) | ((icmp_ln185_fu_230_p2 == 1'd1) & (icmp_ln127_reg_284 == 1'd0) & (icmp_ln68_reg_265 == 1'd0) & (icmp_ln25_reg_253 == 1'd0) & (1'b1 == ap_CS_fsm_state4) & (or_ln186_fu_242_p2 == 32'd35)))) begin
        ant_conf_fast_div_bias = 32'd3;
    end else if ((((icmp_ln185_fu_230_p2 == 1'd1) & (icmp_ln127_reg_284 == 1'd0) & (icmp_ln68_reg_265 == 1'd0) & (icmp_ln25_reg_253 == 1'd0) & (1'b1 == ap_CS_fsm_state4) & (or_ln186_fu_242_p2 == 32'd18)) | ((grp_fu_154_p2 == 1'd1) & (icmp_ln68_fu_188_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2) & (or_ln70_fu_200_p2 == 32'd16)) | ((grp_fu_154_p2 == 1'd1) & (icmp_ln68_fu_188_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2) & (or_ln70_fu_200_p2 == 32'd19)) | ((grp_fu_154_p2 == 1'd1) & (icmp_ln68_fu_188_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2) & (or_ln70_fu_200_p2 == 32'd32)) | ((grp_fu_154_p2 == 1'd1) & (icmp_ln68_fu_188_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2) & (or_ln70_fu_200_p2 == 32'd35)))) begin
        ant_conf_fast_div_bias = 32'd63;
    end else if ((((icmp_ln185_fu_230_p2 == 1'd1) & (icmp_ln127_reg_284 == 1'd0) & (icmp_ln68_reg_265 == 1'd0) & (icmp_ln25_reg_253 == 1'd0) & (1'b1 == ap_CS_fsm_state4) & (or_ln186_fu_242_p2 == 32'd16)) | ((icmp_ln185_fu_230_p2 == 1'd1) & (icmp_ln127_reg_284 == 1'd0) & (icmp_ln68_reg_265 == 1'd0) & (icmp_ln25_reg_253 == 1'd0) & (1'b1 == ap_CS_fsm_state4) & (or_ln186_fu_242_p2 == 32'd19)) | ((1'b1 == ap_CS_fsm_state3) & (((grp_fu_148_p2 == 1'd0) & (icmp_ln127_fu_206_p2 == 1'd1) & (or_ln129_fu_218_p2 == 32'd16)) | ((grp_fu_159_p2 == 1'd0) & (icmp_ln127_fu_206_p2 == 1'd1) & (or_ln129_fu_218_p2 == 32'd16)))) | ((1'b1 == ap_CS_fsm_state3) & (((grp_fu_148_p2 == 1'd0) & (icmp_ln127_fu_206_p2 == 1'd1) & (or_ln129_fu_218_p2 == 32'd19)) | ((grp_fu_159_p2 == 1'd0) & (icmp_ln127_fu_206_p2 == 1'd1) & (or_ln129_fu_218_p2 == 32'd19)))) | ((1'b1 == ap_CS_fsm_state3) & (((grp_fu_148_p2 == 1'd0) & (icmp_ln127_fu_206_p2 == 1'd1) & (or_ln129_fu_218_p2 == 32'd32)) | ((grp_fu_159_p2 == 1'd0) & (icmp_ln127_fu_206_p2 == 1'd1) & (or_ln129_fu_218_p2 == 32'd32)))) | ((1'b1 == ap_CS_fsm_state3) & (((grp_fu_148_p2 == 1'd0) & (icmp_ln127_fu_206_p2 == 1'd1) & (or_ln129_fu_218_p2 == 32'd35)) | ((grp_fu_159_p2 == 1'd0) & (icmp_ln127_fu_206_p2 == 1'd1) & (or_ln129_fu_218_p2 == 32'd35)))) | ((or_ln27_fu_182_p2 == 32'd18) & (icmp_ln25_fu_164_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)))) begin
        ant_conf_fast_div_bias = 32'd2;
    end else if ((((or_ln27_fu_182_p2 == 32'd16) & (icmp_ln25_fu_164_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)) | ((or_ln27_fu_182_p2 == 32'd19) & (icmp_ln25_fu_164_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)))) begin
        ant_conf_fast_div_bias = 32'd7;
    end else if (((or_ln27_fu_182_p2 == 32'd33) & (icmp_ln25_fu_164_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        ant_conf_fast_div_bias = 32'd0;
    end else if ((((icmp_ln185_fu_230_p2 == 1'd1) & (icmp_ln127_reg_284 == 1'd0) & (icmp_ln68_reg_265 == 1'd0) & (icmp_ln25_reg_253 == 1'd0) & (1'b1 == ap_CS_fsm_state4) & (or_ln186_fu_242_p2 == 32'd49)) | ((or_ln27_fu_182_p2 == 32'd32) & (icmp_ln25_fu_164_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)) | ((or_ln27_fu_182_p2 == 32'd35) & (icmp_ln25_fu_164_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)))) begin
        ant_conf_fast_div_bias = 32'd6;
    end else if ((((icmp_ln185_fu_230_p2 == 1'd1) & (icmp_ln127_reg_284 == 1'd0) & (or_ln186_fu_242_p2 == 32'd1) & (icmp_ln68_reg_265 == 1'd0) & (icmp_ln25_reg_253 == 1'd0) & (1'b1 == ap_CS_fsm_state4)) | ((or_ln186_fu_242_p2 == 32'd3) & (icmp_ln185_fu_230_p2 == 1'd1) & (icmp_ln127_reg_284 == 1'd0) & (icmp_ln68_reg_265 == 1'd0) & (icmp_ln25_reg_253 == 1'd0) & (1'b1 == ap_CS_fsm_state4)) | ((icmp_ln185_fu_230_p2 == 1'd1) & (icmp_ln127_reg_284 == 1'd0) & (icmp_ln68_reg_265 == 1'd0) & (icmp_ln25_reg_253 == 1'd0) & (1'b1 == ap_CS_fsm_state4) & (or_ln186_fu_242_p2 == 32'd48)) | ((or_ln186_fu_242_p2 == 32'd50) & (icmp_ln185_fu_230_p2 == 1'd1) & (icmp_ln127_reg_284 == 1'd0) & (icmp_ln68_reg_265 == 1'd0) & (icmp_ln25_reg_253 == 1'd0) & (1'b1 == ap_CS_fsm_state4)) | ((icmp_ln127_fu_206_p2 == 1'd1) & (or_ln129_fu_218_p2 == 32'd1) & (1'b1 == ap_CS_fsm_state3)) | ((or_ln129_fu_218_p2 == 32'd2) & (icmp_ln127_fu_206_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3)) | ((or_ln129_fu_218_p2 == 32'd3) & (icmp_ln127_fu_206_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3)) | ((icmp_ln127_fu_206_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3) & (or_ln129_fu_218_p2 == 32'd18)) | ((icmp_ln127_fu_206_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3) & (or_ln129_fu_218_p2 == 32'd33)) | ((grp_fu_148_p2 == 1'd1) & (grp_fu_159_p2 == 1'd1) & (icmp_ln127_fu_206_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3) & (or_ln129_fu_218_p2 == 32'd16)) | ((grp_fu_148_p2 == 1'd1) & (grp_fu_159_p2 == 1'd1) & (icmp_ln127_fu_206_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3) & (or_ln129_fu_218_p2 == 32'd19)) | ((grp_fu_148_p2 == 1'd1) & (grp_fu_159_p2 == 1'd1) & (icmp_ln127_fu_206_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3) & (or_ln129_fu_218_p2 == 32'd32)) | ((grp_fu_148_p2 == 1'd1) & (grp_fu_159_p2 == 1'd1) & (icmp_ln127_fu_206_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3) & (or_ln129_fu_218_p2 == 32'd35)) | ((icmp_ln127_fu_206_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3) & (or_ln129_fu_218_p2 == 32'd48)) | ((icmp_ln127_fu_206_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3) & (or_ln129_fu_218_p2 == 32'd49)) | ((or_ln129_fu_218_p2 == 32'd50) & (icmp_ln127_fu_206_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3)) | ((or_ln70_fu_200_p2 == 32'd1) & (icmp_ln68_fu_188_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2)) | ((or_ln70_fu_200_p2 == 32'd2) & (icmp_ln68_fu_188_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2)) | ((or_ln70_fu_200_p2 == 32'd3) & (icmp_ln68_fu_188_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2)) | ((icmp_ln68_fu_188_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2) & (or_ln70_fu_200_p2 == 32'd18)) | ((icmp_ln68_fu_188_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2) & (or_ln70_fu_200_p2 == 32'd33)) | ((grp_fu_154_p2 == 1'd0) & (icmp_ln68_fu_188_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2) & (or_ln70_fu_200_p2 == 32'd16)) | ((grp_fu_154_p2 == 1'd0) & (icmp_ln68_fu_188_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2) & (or_ln70_fu_200_p2 == 32'd19)) | ((grp_fu_154_p2 == 1'd0) & (icmp_ln68_fu_188_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2) & (or_ln70_fu_200_p2 == 32'd32)) | ((grp_fu_154_p2 == 1'd0) & (icmp_ln68_fu_188_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2) & (or_ln70_fu_200_p2 == 32'd35)) | ((icmp_ln68_fu_188_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2) & (or_ln70_fu_200_p2 == 32'd48)) | ((icmp_ln68_fu_188_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2) & (or_ln70_fu_200_p2 == 32'd49)) | ((or_ln70_fu_200_p2 == 32'd50) & (icmp_ln68_fu_188_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2)) | ((or_ln27_fu_182_p2 == 32'd3) & (icmp_ln25_fu_164_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)) | ((or_ln27_fu_182_p2 == 32'd48) & (icmp_ln25_fu_164_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)))) begin
        ant_conf_fast_div_bias = 32'd1;
    end else if ((((or_ln27_fu_182_p2 == 32'd1) & (icmp_ln25_fu_164_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)) | ((or_ln27_fu_182_p2 == 32'd49) & (icmp_ln25_fu_164_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)))) begin
        ant_conf_fast_div_bias = 32'd59;
    end else if ((((or_ln27_fu_182_p2 == 32'd50) & (icmp_ln25_fu_164_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)) | ((or_ln27_fu_182_p2 == 32'd2) & (icmp_ln25_fu_164_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)))) begin
        ant_conf_fast_div_bias = 32'd61;
    end else begin
        ant_conf_fast_div_bias = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln185_fu_230_p2 == 1'd1) & (icmp_ln127_reg_284 == 1'd0) & (or_ln186_fu_242_p2 == 32'd1) & (icmp_ln68_reg_265 == 1'd0) & (icmp_ln25_reg_253 == 1'd0) & (1'b1 == ap_CS_fsm_state4)) | ((icmp_ln185_fu_230_p2 == 1'd1) & (or_ln186_fu_242_p2 == 32'd2) & (icmp_ln127_reg_284 == 1'd0) & (icmp_ln68_reg_265 == 1'd0) & (icmp_ln25_reg_253 == 1'd0) & (1'b1 == ap_CS_fsm_state4)) | ((or_ln186_fu_242_p2 == 32'd3) & (icmp_ln185_fu_230_p2 == 1'd1) & (icmp_ln127_reg_284 == 1'd0) & (icmp_ln68_reg_265 == 1'd0) & (icmp_ln25_reg_253 == 1'd0) & (1'b1 == ap_CS_fsm_state4)) | ((icmp_ln185_fu_230_p2 == 1'd1) & (icmp_ln127_reg_284 == 1'd0) & (icmp_ln68_reg_265 == 1'd0) & (icmp_ln25_reg_253 == 1'd0) & (1'b1 == ap_CS_fsm_state4) & (or_ln186_fu_242_p2 == 32'd16)) | ((icmp_ln185_fu_230_p2 == 1'd1) & (icmp_ln127_reg_284 == 1'd0) & (icmp_ln68_reg_265 == 1'd0) & (icmp_ln25_reg_253 == 1'd0) & (1'b1 == ap_CS_fsm_state4) & (or_ln186_fu_242_p2 == 32'd18)) | ((icmp_ln185_fu_230_p2 == 1'd1) & (icmp_ln127_reg_284 == 1'd0) & (icmp_ln68_reg_265 == 1'd0) & (icmp_ln25_reg_253 == 1'd0) & (1'b1 == ap_CS_fsm_state4) & (or_ln186_fu_242_p2 == 32'd19)) | ((icmp_ln185_fu_230_p2 == 1'd1) & (icmp_ln127_reg_284 == 1'd0) & (icmp_ln68_reg_265 == 1'd0) & (icmp_ln25_reg_253 == 1'd0) & (1'b1 == ap_CS_fsm_state4) & (or_ln186_fu_242_p2 == 32'd32)) | ((icmp_ln185_fu_230_p2 == 1'd1) & (icmp_ln127_reg_284 == 1'd0) & (icmp_ln68_reg_265 == 1'd0) & (icmp_ln25_reg_253 == 1'd0) & (1'b1 == ap_CS_fsm_state4) & (or_ln186_fu_242_p2 == 32'd33)) | ((icmp_ln185_fu_230_p2 == 1'd1) & (icmp_ln127_reg_284 == 1'd0) & (icmp_ln68_reg_265 == 1'd0) & (icmp_ln25_reg_253 == 1'd0) & (1'b1 == ap_CS_fsm_state4) & (or_ln186_fu_242_p2 == 32'd35)) | ((icmp_ln185_fu_230_p2 == 1'd1) & (icmp_ln127_reg_284 == 1'd0) & (icmp_ln68_reg_265 == 1'd0) & (icmp_ln25_reg_253 == 1'd0) & (1'b1 == ap_CS_fsm_state4) & (or_ln186_fu_242_p2 == 32'd48)) | ((icmp_ln185_fu_230_p2 == 1'd1) & (icmp_ln127_reg_284 == 1'd0) & (icmp_ln68_reg_265 == 1'd0) & (icmp_ln25_reg_253 == 1'd0) & (1'b1 == ap_CS_fsm_state4) & (or_ln186_fu_242_p2 == 32'd49)) | ((or_ln186_fu_242_p2 == 32'd50) & (icmp_ln185_fu_230_p2 == 1'd1) & (icmp_ln127_reg_284 == 1'd0) & (icmp_ln68_reg_265 == 1'd0) & (icmp_ln25_reg_253 == 1'd0) & (1'b1 == ap_CS_fsm_state4)) | ((icmp_ln183_reg_315 == 1'd0) & (icmp_ln127_reg_284 == 1'd1) & (icmp_ln68_reg_265 == 1'd0) & (icmp_ln25_reg_253 == 1'd0) & (1'b1 == ap_CS_fsm_state4)) | ((icmp_ln127_fu_206_p2 == 1'd1) & (or_ln129_fu_218_p2 == 32'd1) & (1'b1 == ap_CS_fsm_state3)) | ((or_ln129_fu_218_p2 == 32'd2) & (icmp_ln127_fu_206_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3)) | ((or_ln129_fu_218_p2 == 32'd3) & (icmp_ln127_fu_206_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3)) | ((icmp_ln127_fu_206_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3) & (or_ln129_fu_218_p2 == 32'd18)) | ((icmp_ln127_fu_206_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3) & (or_ln129_fu_218_p2 == 32'd33)) | ((grp_fu_148_p2 == 1'd1) & (grp_fu_159_p2 == 1'd1) & (icmp_ln127_fu_206_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3) & (or_ln129_fu_218_p2 == 32'd16)) | ((grp_fu_148_p2 == 1'd1) & (grp_fu_159_p2 == 1'd1) & (icmp_ln127_fu_206_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3) & (or_ln129_fu_218_p2 == 32'd19)) | ((grp_fu_148_p2 == 1'd1) & (grp_fu_159_p2 == 1'd1) & (icmp_ln127_fu_206_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3) & (or_ln129_fu_218_p2 == 32'd32)) | ((grp_fu_148_p2 == 1'd1) & (grp_fu_159_p2 == 1'd1) & (icmp_ln127_fu_206_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3) & (or_ln129_fu_218_p2 == 32'd35)) | ((icmp_ln127_fu_206_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3) & (or_ln129_fu_218_p2 == 32'd48)) | ((icmp_ln127_fu_206_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3) & (or_ln129_fu_218_p2 == 32'd49)) | ((or_ln129_fu_218_p2 == 32'd50) & (icmp_ln127_fu_206_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3)) | ((1'b1 == ap_CS_fsm_state3) & (((grp_fu_148_p2 == 1'd0) & (icmp_ln127_fu_206_p2 == 1'd1) & (or_ln129_fu_218_p2 == 32'd16)) | ((grp_fu_159_p2 == 1'd0) & (icmp_ln127_fu_206_p2 == 1'd1) & (or_ln129_fu_218_p2 == 32'd16)))) | ((1'b1 == ap_CS_fsm_state3) & (((grp_fu_148_p2 == 1'd0) & (icmp_ln127_fu_206_p2 == 1'd1) & (or_ln129_fu_218_p2 == 32'd19)) | ((grp_fu_159_p2 == 1'd0) & (icmp_ln127_fu_206_p2 == 1'd1) & (or_ln129_fu_218_p2 == 32'd19)))) | ((1'b1 == ap_CS_fsm_state3) & (((grp_fu_148_p2 == 1'd0) & (icmp_ln127_fu_206_p2 == 1'd1) & (or_ln129_fu_218_p2 == 32'd32)) | ((grp_fu_159_p2 == 1'd0) & (icmp_ln127_fu_206_p2 == 1'd1) & (or_ln129_fu_218_p2 == 32'd32)))) | ((1'b1 == ap_CS_fsm_state3) & (((grp_fu_148_p2 == 1'd0) & (icmp_ln127_fu_206_p2 == 1'd1) & (or_ln129_fu_218_p2 == 32'd35)) | ((grp_fu_159_p2 == 1'd0) & (icmp_ln127_fu_206_p2 == 1'd1) & (or_ln129_fu_218_p2 == 32'd35)))) | ((or_ln70_fu_200_p2 == 32'd1) & (icmp_ln68_fu_188_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2)) | ((or_ln70_fu_200_p2 == 32'd2) & (icmp_ln68_fu_188_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2)) | ((or_ln70_fu_200_p2 == 32'd3) & (icmp_ln68_fu_188_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2)) | ((icmp_ln68_fu_188_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2) & (or_ln70_fu_200_p2 == 32'd18)) | ((icmp_ln68_fu_188_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2) & (or_ln70_fu_200_p2 == 32'd33)) | ((grp_fu_154_p2 == 1'd1) & (icmp_ln68_fu_188_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2) & (or_ln70_fu_200_p2 == 32'd16)) | ((grp_fu_154_p2 == 1'd1) & (icmp_ln68_fu_188_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2) & (or_ln70_fu_200_p2 == 32'd19)) | ((grp_fu_154_p2 == 1'd1) & (icmp_ln68_fu_188_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2) & (or_ln70_fu_200_p2 == 32'd32)) | ((grp_fu_154_p2 == 1'd0) & (icmp_ln68_fu_188_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2) & (or_ln70_fu_200_p2 == 32'd16)) | ((grp_fu_154_p2 == 1'd0) & (icmp_ln68_fu_188_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2) & (or_ln70_fu_200_p2 == 32'd19)) | ((grp_fu_154_p2 == 1'd0) & (icmp_ln68_fu_188_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2) & (or_ln70_fu_200_p2 == 32'd32)) | ((grp_fu_154_p2 == 1'd1) & (icmp_ln68_fu_188_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2) & (or_ln70_fu_200_p2 == 32'd35)) | ((grp_fu_154_p2 == 1'd0) & (icmp_ln68_fu_188_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2) & (or_ln70_fu_200_p2 == 32'd35)) | ((icmp_ln68_fu_188_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2) & (or_ln70_fu_200_p2 == 32'd48)) | ((icmp_ln68_fu_188_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2) & (or_ln70_fu_200_p2 == 32'd49)) | ((or_ln70_fu_200_p2 == 32'd50) & (icmp_ln68_fu_188_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2)) | ((or_ln27_fu_182_p2 == 32'd50) & (icmp_ln25_fu_164_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)) | ((or_ln27_fu_182_p2 == 32'd1) & (icmp_ln25_fu_164_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)) | ((or_ln27_fu_182_p2 == 32'd2) & (icmp_ln25_fu_164_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)) | ((or_ln27_fu_182_p2 == 32'd3) & (icmp_ln25_fu_164_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)) | ((or_ln27_fu_182_p2 == 32'd16) & (icmp_ln25_fu_164_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)) | ((or_ln27_fu_182_p2 == 32'd18) & (icmp_ln25_fu_164_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)) | ((or_ln27_fu_182_p2 == 32'd19) & (icmp_ln25_fu_164_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)) | ((or_ln27_fu_182_p2 == 32'd32) & (icmp_ln25_fu_164_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)) | ((or_ln27_fu_182_p2 == 32'd33) & (icmp_ln25_fu_164_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)) | ((or_ln27_fu_182_p2 == 32'd35) & (icmp_ln25_fu_164_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)) | ((or_ln27_fu_182_p2 == 32'd48) & (icmp_ln25_fu_164_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)) | ((or_ln27_fu_182_p2 == 32'd49) & (icmp_ln25_fu_164_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)))) begin
        ant_conf_fast_div_bias_ap_vld = 1'b1;
    end else begin
        ant_conf_fast_div_bias_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        ant_conf_main_gaintb_ap_vld = 1'b1;
    end else begin
        ant_conf_main_gaintb_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((icmp_ln25_fu_164_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else if (((icmp_ln25_fu_164_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln68_fu_188_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ant_conf_alt_gaintb = 32'd0;

assign ant_conf_main_gaintb = 32'd0;

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign grp_fu_148_p2 = ((antcomb_scan == 32'd0) ? 1'b1 : 1'b0);

assign grp_fu_154_p2 = (icmp_ln82_1_reg_257 & grp_fu_148_p2);

assign grp_fu_159_p2 = (($signed(antcomb_ant_ratio) < $signed(alt_ratio)) ? 1'b1 : 1'b0);

assign icmp_ln127_fu_206_p2 = ((ant_conf_div_group == 32'd2) ? 1'b1 : 1'b0);

assign icmp_ln183_fu_224_p2 = ((antcomb_fast_div_bias == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln185_fu_230_p2 = ((ant_conf_div_group == 32'd3) ? 1'b1 : 1'b0);

assign icmp_ln25_fu_164_p2 = ((ant_conf_div_group == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln68_fu_188_p2 = ((ant_conf_div_group == 32'd1) ? 1'b1 : 1'b0);

assign icmp_ln82_1_fu_170_p2 = (($signed(alt_ratio) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign or_ln129_fu_218_p2 = (shl_ln129_fu_212_p2 | ant_conf_alt_lna_conf);

assign or_ln186_fu_242_p2 = (shl_ln186_fu_236_p2 | ant_conf_alt_lna_conf);

assign or_ln27_fu_182_p2 = (shl_ln27_fu_176_p2 | ant_conf_alt_lna_conf);

assign or_ln70_fu_200_p2 = (shl_ln70_fu_194_p2 | ant_conf_alt_lna_conf);

assign shl_ln129_fu_212_p2 = ant_conf_main_lna_conf << 32'd4;

assign shl_ln186_fu_236_p2 = ant_conf_main_lna_conf << 32'd4;

assign shl_ln27_fu_176_p2 = ant_conf_main_lna_conf << 32'd4;

assign shl_ln70_fu_194_p2 = ant_conf_main_lna_conf << 32'd4;

endmodule //ath_ant_div_conf_fast_divbias
