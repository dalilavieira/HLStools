

================================================================
== Vivado HLS Report for 'expandKey'
================================================================
* Date:           Sun May 24 20:15:46 2020

* Version:        2019.1 (Build 2552052 on Fri May 24 15:28:33 MDT 2019)
* Project:        proj_extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c
* Solution:       solution1
* Product family: kintex7
* Target device:  xc7k160t-fbg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|     5.328|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |  194|  194|  194|  194|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------+-----+-----+----------+-----------+-----------+------+----------+
        |          |  Latency  | Iteration|  Initiation Interval  | Trip |          |
        | Loop Name| min | max |  Latency |  achieved |   target  | Count| Pipelined|
        +----------+-----+-----+----------+-----------+-----------+------+----------+
        |- Loop 1  |   32|   32|         2|          -|          -|    16|    no    |
        |- Loop 2  |  160|  160|        16|          -|          -|    10|    no    |
        +----------+-----+-----+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 19
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 4 
3 --> 2 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 9 
9 --> 10 
10 --> 11 
11 --> 12 
12 --> 13 
13 --> 14 
14 --> 15 
15 --> 16 
16 --> 17 
17 --> 18 
18 --> 19 
19 --> 4 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.06>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([1000 x i64]* %expandedKey) nounwind, !map !25"   --->   Operation 20 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([1000 x i64]* %key) nounwind, !map !29"   --->   Operation 21 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecTopModule([10 x i8]* @expandKey_str) nounwind"   --->   Operation 22 'spectopmodule' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (1.06ns)   --->   "br label %1" [extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:22]   --->   Operation 23 'br' <Predicate = true> <Delay = 1.06>

State 2 <SV = 1> <Delay = 2.66>
ST_2 : Operation 24 [1/1] (0.00ns)   --->   "%ii_0 = phi i5 [ 0, %0 ], [ %ii, %2 ]"   --->   Operation 24 'phi' 'ii_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 25 [1/1] (1.11ns)   --->   "%icmp_ln22 = icmp eq i5 %ii_0, -16" [extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:22]   --->   Operation 25 'icmp' 'icmp_ln22' <Predicate = true> <Delay = 1.11> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 26 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 16, i64 16, i64 16) nounwind"   --->   Operation 26 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 27 [1/1] (1.33ns)   --->   "%ii = add i5 %ii_0, 1" [extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:22]   --->   Operation 27 'add' 'ii' <Predicate = true> <Delay = 1.33> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.32> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 28 [1/1] (0.00ns)   --->   "br i1 %icmp_ln22, label %.preheader.preheader, label %2" [extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:22]   --->   Operation 28 'br' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 29 [1/1] (0.00ns)   --->   "%zext_ln23 = zext i5 %ii_0 to i64" [extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:23]   --->   Operation 29 'zext' 'zext_ln23' <Predicate = (!icmp_ln22)> <Delay = 0.00>
ST_2 : Operation 30 [1/1] (0.00ns)   --->   "%key_addr = getelementptr [1000 x i64]* %key, i64 0, i64 %zext_ln23" [extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:23]   --->   Operation 30 'getelementptr' 'key_addr' <Predicate = (!icmp_ln22)> <Delay = 0.00>
ST_2 : Operation 31 [2/2] (2.66ns)   --->   "%key_load = load i64* %key_addr, align 8" [extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:23]   --->   Operation 31 'load' 'key_load' <Predicate = (!icmp_ln22)> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 1000> <RAM>
ST_2 : Operation 32 [1/1] (1.06ns)   --->   "br label %.preheader" [extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:24]   --->   Operation 32 'br' <Predicate = (icmp_ln22)> <Delay = 1.06>

State 3 <SV = 2> <Delay = 5.32>
ST_3 : Operation 33 [1/2] (2.66ns)   --->   "%key_load = load i64* %key_addr, align 8" [extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:23]   --->   Operation 33 'load' 'key_load' <Predicate = true> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 1000> <RAM>
ST_3 : Operation 34 [1/1] (0.00ns)   --->   "%expandedKey_addr = getelementptr [1000 x i64]* %expandedKey, i64 0, i64 %zext_ln23" [extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:23]   --->   Operation 34 'getelementptr' 'expandedKey_addr' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 35 [1/1] (2.66ns)   --->   "store i64 %key_load, i64* %expandedKey_addr, align 8" [extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:23]   --->   Operation 35 'store' <Predicate = true> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 1000> <RAM>
ST_3 : Operation 36 [1/1] (0.00ns)   --->   "br label %1" [extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:22]   --->   Operation 36 'br' <Predicate = true> <Delay = 0.00>

State 4 <SV = 2> <Delay = 4.05>
ST_4 : Operation 37 [1/1] (0.00ns)   --->   "%ii_1 = phi i4 [ %ii_2, %3 ], [ 1, %.preheader.preheader ]"   --->   Operation 37 'phi' 'ii_1' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 38 [1/1] (1.08ns)   --->   "%icmp_ln24 = icmp eq i4 %ii_1, -5" [extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:24]   --->   Operation 38 'icmp' 'icmp_ln24' <Predicate = true> <Delay = 1.08> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 39 [1/1] (0.00ns)   --->   "%empty_2 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 10, i64 10, i64 10) nounwind"   --->   Operation 39 'speclooptripcount' 'empty_2' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 40 [1/1] (0.00ns)   --->   "br i1 %icmp_ln24, label %4, label %3" [extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:24]   --->   Operation 40 'br' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 41 [1/1] (0.00ns)   --->   "%shl_ln = call i8 @_ssdm_op_BitConcatenate.i8.i4.i4(i4 %ii_1, i4 0)" [extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:25]   --->   Operation 41 'bitconcatenate' 'shl_ln' <Predicate = (!icmp_ln24)> <Delay = 0.00>
ST_4 : Operation 42 [1/1] (1.39ns)   --->   "%add_ln25 = add i8 %shl_ln, -4" [extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:25]   --->   Operation 42 'add' 'add_ln25' <Predicate = (!icmp_ln24)> <Delay = 1.39> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.32> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 43 [1/1] (0.00ns)   --->   "%zext_ln25 = zext i8 %add_ln25 to i64" [extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:25]   --->   Operation 43 'zext' 'zext_ln25' <Predicate = (!icmp_ln24)> <Delay = 0.00>
ST_4 : Operation 44 [1/1] (0.00ns)   --->   "%expandedKey_addr_1 = getelementptr [1000 x i64]* %expandedKey, i64 0, i64 %zext_ln25" [extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:25]   --->   Operation 44 'getelementptr' 'expandedKey_addr_1' <Predicate = (!icmp_ln24)> <Delay = 0.00>
ST_4 : Operation 45 [2/2] (2.66ns)   --->   "%expandedKey_load = load i64* %expandedKey_addr_1, align 8" [extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:25]   --->   Operation 45 'load' 'expandedKey_load' <Predicate = (!icmp_ln24)> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 1000> <RAM>
ST_4 : Operation 46 [1/1] (1.39ns)   --->   "%add_ln26 = add i8 %shl_ln, -3" [extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:26]   --->   Operation 46 'add' 'add_ln26' <Predicate = (!icmp_ln24)> <Delay = 1.39> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.32> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 47 [1/1] (0.00ns)   --->   "%zext_ln26 = zext i8 %add_ln26 to i64" [extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:26]   --->   Operation 47 'zext' 'zext_ln26' <Predicate = (!icmp_ln24)> <Delay = 0.00>
ST_4 : Operation 48 [1/1] (0.00ns)   --->   "%expandedKey_addr_2 = getelementptr [1000 x i64]* %expandedKey, i64 0, i64 %zext_ln26" [extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:26]   --->   Operation 48 'getelementptr' 'expandedKey_addr_2' <Predicate = (!icmp_ln24)> <Delay = 0.00>
ST_4 : Operation 49 [2/2] (2.66ns)   --->   "%expandedKey_load_1 = load i64* %expandedKey_addr_2, align 8" [extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:26]   --->   Operation 49 'load' 'expandedKey_load_1' <Predicate = (!icmp_ln24)> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 1000> <RAM>
ST_4 : Operation 50 [1/1] (1.32ns)   --->   "%ii_2 = add i4 %ii_1, 1" [extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:24]   --->   Operation 50 'add' 'ii_2' <Predicate = (!icmp_ln24)> <Delay = 1.32> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.32> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 51 [1/1] (0.00ns)   --->   "ret void" [extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:44]   --->   Operation 51 'ret' <Predicate = (icmp_ln24)> <Delay = 0.00>

State 5 <SV = 3> <Delay = 4.05>
ST_5 : Operation 52 [1/2] (2.66ns)   --->   "%expandedKey_load = load i64* %expandedKey_addr_1, align 8" [extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:25]   --->   Operation 52 'load' 'expandedKey_load' <Predicate = true> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 1000> <RAM>
ST_5 : Operation 53 [1/2] (2.66ns)   --->   "%expandedKey_load_1 = load i64* %expandedKey_addr_2, align 8" [extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:26]   --->   Operation 53 'load' 'expandedKey_load_1' <Predicate = true> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 1000> <RAM>
ST_5 : Operation 54 [1/1] (1.39ns)   --->   "%add_ln26_1 = add i8 %shl_ln, -16" [extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:26]   --->   Operation 54 'add' 'add_ln26_1' <Predicate = true> <Delay = 1.39> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.32> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 55 [1/1] (0.00ns)   --->   "%zext_ln26_1 = zext i8 %add_ln26_1 to i64" [extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:26]   --->   Operation 55 'zext' 'zext_ln26_1' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 56 [1/1] (0.00ns)   --->   "%expandedKey_addr_3 = getelementptr [1000 x i64]* %expandedKey, i64 0, i64 %zext_ln26_1" [extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:26]   --->   Operation 56 'getelementptr' 'expandedKey_addr_3' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 57 [2/2] (2.66ns)   --->   "%expandedKey_load_2 = load i64* %expandedKey_addr_3, align 8" [extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:26]   --->   Operation 57 'load' 'expandedKey_load_2' <Predicate = true> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 1000> <RAM>
ST_5 : Operation 58 [1/1] (1.39ns)   --->   "%add_ln27 = add i8 %shl_ln, -2" [extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:27]   --->   Operation 58 'add' 'add_ln27' <Predicate = true> <Delay = 1.39> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.32> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 59 [1/1] (0.00ns)   --->   "%zext_ln27 = zext i8 %add_ln27 to i64" [extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:27]   --->   Operation 59 'zext' 'zext_ln27' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 60 [1/1] (0.00ns)   --->   "%expandedKey_addr_5 = getelementptr [1000 x i64]* %expandedKey, i64 0, i64 %zext_ln27" [extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:27]   --->   Operation 60 'getelementptr' 'expandedKey_addr_5' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 61 [2/2] (2.66ns)   --->   "%expandedKey_load_3 = load i64* %expandedKey_addr_5, align 8" [extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:27]   --->   Operation 61 'load' 'expandedKey_load_3' <Predicate = true> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 1000> <RAM>

State 6 <SV = 4> <Delay = 4.05>
ST_6 : Operation 62 [1/2] (2.66ns)   --->   "%expandedKey_load_2 = load i64* %expandedKey_addr_3, align 8" [extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:26]   --->   Operation 62 'load' 'expandedKey_load_2' <Predicate = true> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 1000> <RAM>
ST_6 : Operation 63 [1/2] (2.66ns)   --->   "%expandedKey_load_3 = load i64* %expandedKey_addr_5, align 8" [extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:27]   --->   Operation 63 'load' 'expandedKey_load_3' <Predicate = true> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 1000> <RAM>
ST_6 : Operation 64 [1/1] (1.39ns)   --->   "%add_ln27_1 = add i8 %shl_ln, -15" [extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:27]   --->   Operation 64 'add' 'add_ln27_1' <Predicate = true> <Delay = 1.39> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.32> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 65 [1/1] (0.00ns)   --->   "%zext_ln27_1 = zext i8 %add_ln27_1 to i64" [extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:27]   --->   Operation 65 'zext' 'zext_ln27_1' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 66 [1/1] (0.00ns)   --->   "%expandedKey_addr_6 = getelementptr [1000 x i64]* %expandedKey, i64 0, i64 %zext_ln27_1" [extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:27]   --->   Operation 66 'getelementptr' 'expandedKey_addr_6' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 67 [2/2] (2.66ns)   --->   "%expandedKey_load_4 = load i64* %expandedKey_addr_6, align 8" [extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:27]   --->   Operation 67 'load' 'expandedKey_load_4' <Predicate = true> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 1000> <RAM>
ST_6 : Operation 68 [1/1] (1.39ns)   --->   "%add_ln28 = add i8 %shl_ln, -1" [extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:28]   --->   Operation 68 'add' 'add_ln28' <Predicate = true> <Delay = 1.39> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.32> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 69 [1/1] (0.00ns)   --->   "%zext_ln28 = zext i8 %add_ln28 to i64" [extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:28]   --->   Operation 69 'zext' 'zext_ln28' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 70 [1/1] (0.00ns)   --->   "%expandedKey_addr_8 = getelementptr [1000 x i64]* %expandedKey, i64 0, i64 %zext_ln28" [extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:28]   --->   Operation 70 'getelementptr' 'expandedKey_addr_8' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 71 [2/2] (2.66ns)   --->   "%expandedKey_load_5 = load i64* %expandedKey_addr_8, align 8" [extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:28]   --->   Operation 71 'load' 'expandedKey_load_5' <Predicate = true> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 1000> <RAM>

State 7 <SV = 5> <Delay = 4.05>
ST_7 : Operation 72 [1/2] (2.66ns)   --->   "%expandedKey_load_4 = load i64* %expandedKey_addr_6, align 8" [extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:27]   --->   Operation 72 'load' 'expandedKey_load_4' <Predicate = true> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 1000> <RAM>
ST_7 : Operation 73 [1/2] (2.66ns)   --->   "%expandedKey_load_5 = load i64* %expandedKey_addr_8, align 8" [extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:28]   --->   Operation 73 'load' 'expandedKey_load_5' <Predicate = true> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 1000> <RAM>
ST_7 : Operation 74 [1/1] (1.39ns)   --->   "%add_ln28_1 = add i8 %shl_ln, -14" [extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:28]   --->   Operation 74 'add' 'add_ln28_1' <Predicate = true> <Delay = 1.39> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.32> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 75 [1/1] (0.00ns)   --->   "%zext_ln28_1 = zext i8 %add_ln28_1 to i64" [extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:28]   --->   Operation 75 'zext' 'zext_ln28_1' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 76 [1/1] (0.00ns)   --->   "%expandedKey_addr_9 = getelementptr [1000 x i64]* %expandedKey, i64 0, i64 %zext_ln28_1" [extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:28]   --->   Operation 76 'getelementptr' 'expandedKey_addr_9' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 77 [2/2] (2.66ns)   --->   "%expandedKey_load_6 = load i64* %expandedKey_addr_9, align 8" [extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:28]   --->   Operation 77 'load' 'expandedKey_load_6' <Predicate = true> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 1000> <RAM>
ST_7 : Operation 78 [1/1] (1.39ns)   --->   "%add_ln29 = add i8 %shl_ln, -13" [extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:29]   --->   Operation 78 'add' 'add_ln29' <Predicate = true> <Delay = 1.39> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.32> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 79 [1/1] (0.00ns)   --->   "%zext_ln29 = zext i8 %add_ln29 to i64" [extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:29]   --->   Operation 79 'zext' 'zext_ln29' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 80 [1/1] (0.00ns)   --->   "%expandedKey_addr_11 = getelementptr [1000 x i64]* %expandedKey, i64 0, i64 %zext_ln29" [extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:29]   --->   Operation 80 'getelementptr' 'expandedKey_addr_11' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 81 [2/2] (2.66ns)   --->   "%expandedKey_load_7 = load i64* %expandedKey_addr_11, align 8" [extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:29]   --->   Operation 81 'load' 'expandedKey_load_7' <Predicate = true> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 1000> <RAM>

State 8 <SV = 6> <Delay = 4.05>
ST_8 : Operation 82 [1/2] (2.66ns)   --->   "%expandedKey_load_6 = load i64* %expandedKey_addr_9, align 8" [extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:28]   --->   Operation 82 'load' 'expandedKey_load_6' <Predicate = true> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 1000> <RAM>
ST_8 : Operation 83 [1/2] (2.66ns)   --->   "%expandedKey_load_7 = load i64* %expandedKey_addr_11, align 8" [extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:29]   --->   Operation 83 'load' 'expandedKey_load_7' <Predicate = true> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 1000> <RAM>
ST_8 : Operation 84 [1/1] (1.39ns)   --->   "%add_ln30 = add i8 %shl_ln, -12" [extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:30]   --->   Operation 84 'add' 'add_ln30' <Predicate = true> <Delay = 1.39> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.32> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 85 [1/1] (0.00ns)   --->   "%zext_ln30 = zext i8 %add_ln30 to i64" [extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:30]   --->   Operation 85 'zext' 'zext_ln30' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 86 [1/1] (0.00ns)   --->   "%expandedKey_addr_13 = getelementptr [1000 x i64]* %expandedKey, i64 0, i64 %zext_ln30" [extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:30]   --->   Operation 86 'getelementptr' 'expandedKey_addr_13' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 87 [2/2] (2.66ns)   --->   "%expandedKey_load_8 = load i64* %expandedKey_addr_13, align 8" [extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:30]   --->   Operation 87 'load' 'expandedKey_load_8' <Predicate = true> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 1000> <RAM>
ST_8 : Operation 88 [1/1] (1.39ns)   --->   "%add_ln31 = add i8 %shl_ln, -11" [extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:31]   --->   Operation 88 'add' 'add_ln31' <Predicate = true> <Delay = 1.39> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.32> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 89 [1/1] (0.00ns)   --->   "%zext_ln31 = zext i8 %add_ln31 to i64" [extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:31]   --->   Operation 89 'zext' 'zext_ln31' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 90 [1/1] (0.00ns)   --->   "%expandedKey_addr_15 = getelementptr [1000 x i64]* %expandedKey, i64 0, i64 %zext_ln31" [extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:31]   --->   Operation 90 'getelementptr' 'expandedKey_addr_15' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 91 [2/2] (2.66ns)   --->   "%expandedKey_load_9 = load i64* %expandedKey_addr_15, align 8" [extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:31]   --->   Operation 91 'load' 'expandedKey_load_9' <Predicate = true> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 1000> <RAM>

State 9 <SV = 7> <Delay = 4.05>
ST_9 : Operation 92 [1/2] (2.66ns)   --->   "%expandedKey_load_8 = load i64* %expandedKey_addr_13, align 8" [extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:30]   --->   Operation 92 'load' 'expandedKey_load_8' <Predicate = true> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 1000> <RAM>
ST_9 : Operation 93 [1/2] (2.66ns)   --->   "%expandedKey_load_9 = load i64* %expandedKey_addr_15, align 8" [extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:31]   --->   Operation 93 'load' 'expandedKey_load_9' <Predicate = true> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 1000> <RAM>
ST_9 : Operation 94 [1/1] (1.39ns)   --->   "%add_ln32 = add i8 %shl_ln, -10" [extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:32]   --->   Operation 94 'add' 'add_ln32' <Predicate = true> <Delay = 1.39> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.32> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 95 [1/1] (0.00ns)   --->   "%zext_ln32 = zext i8 %add_ln32 to i64" [extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:32]   --->   Operation 95 'zext' 'zext_ln32' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 96 [1/1] (0.00ns)   --->   "%expandedKey_addr_17 = getelementptr [1000 x i64]* %expandedKey, i64 0, i64 %zext_ln32" [extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:32]   --->   Operation 96 'getelementptr' 'expandedKey_addr_17' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 97 [2/2] (2.66ns)   --->   "%expandedKey_load_10 = load i64* %expandedKey_addr_17, align 8" [extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:32]   --->   Operation 97 'load' 'expandedKey_load_10' <Predicate = true> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 1000> <RAM>
ST_9 : Operation 98 [1/1] (1.39ns)   --->   "%add_ln33 = add i8 %shl_ln, -9" [extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:33]   --->   Operation 98 'add' 'add_ln33' <Predicate = true> <Delay = 1.39> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.32> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 99 [1/1] (0.00ns)   --->   "%zext_ln33 = zext i8 %add_ln33 to i64" [extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:33]   --->   Operation 99 'zext' 'zext_ln33' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 100 [1/1] (0.00ns)   --->   "%expandedKey_addr_19 = getelementptr [1000 x i64]* %expandedKey, i64 0, i64 %zext_ln33" [extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:33]   --->   Operation 100 'getelementptr' 'expandedKey_addr_19' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 101 [2/2] (2.66ns)   --->   "%expandedKey_load_11 = load i64* %expandedKey_addr_19, align 8" [extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:33]   --->   Operation 101 'load' 'expandedKey_load_11' <Predicate = true> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 1000> <RAM>

State 10 <SV = 8> <Delay = 4.05>
ST_10 : Operation 102 [1/2] (2.66ns)   --->   "%expandedKey_load_10 = load i64* %expandedKey_addr_17, align 8" [extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:32]   --->   Operation 102 'load' 'expandedKey_load_10' <Predicate = true> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 1000> <RAM>
ST_10 : Operation 103 [1/2] (2.66ns)   --->   "%expandedKey_load_11 = load i64* %expandedKey_addr_19, align 8" [extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:33]   --->   Operation 103 'load' 'expandedKey_load_11' <Predicate = true> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 1000> <RAM>
ST_10 : Operation 104 [1/1] (1.39ns)   --->   "%add_ln34 = add i8 %shl_ln, -8" [extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:34]   --->   Operation 104 'add' 'add_ln34' <Predicate = true> <Delay = 1.39> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.32> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 105 [1/1] (0.00ns)   --->   "%zext_ln34 = zext i8 %add_ln34 to i64" [extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:34]   --->   Operation 105 'zext' 'zext_ln34' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 106 [1/1] (0.00ns)   --->   "%expandedKey_addr_21 = getelementptr [1000 x i64]* %expandedKey, i64 0, i64 %zext_ln34" [extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:34]   --->   Operation 106 'getelementptr' 'expandedKey_addr_21' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 107 [2/2] (2.66ns)   --->   "%expandedKey_load_12 = load i64* %expandedKey_addr_21, align 8" [extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:34]   --->   Operation 107 'load' 'expandedKey_load_12' <Predicate = true> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 1000> <RAM>
ST_10 : Operation 108 [1/1] (1.39ns)   --->   "%add_ln35 = add i8 %shl_ln, -7" [extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:35]   --->   Operation 108 'add' 'add_ln35' <Predicate = true> <Delay = 1.39> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.32> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 109 [1/1] (0.00ns)   --->   "%zext_ln35 = zext i8 %add_ln35 to i64" [extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:35]   --->   Operation 109 'zext' 'zext_ln35' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 110 [1/1] (0.00ns)   --->   "%expandedKey_addr_23 = getelementptr [1000 x i64]* %expandedKey, i64 0, i64 %zext_ln35" [extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:35]   --->   Operation 110 'getelementptr' 'expandedKey_addr_23' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 111 [2/2] (2.66ns)   --->   "%expandedKey_load_13 = load i64* %expandedKey_addr_23, align 8" [extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:35]   --->   Operation 111 'load' 'expandedKey_load_13' <Predicate = true> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 1000> <RAM>

State 11 <SV = 9> <Delay = 4.05>
ST_11 : Operation 112 [1/2] (2.66ns)   --->   "%expandedKey_load_12 = load i64* %expandedKey_addr_21, align 8" [extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:34]   --->   Operation 112 'load' 'expandedKey_load_12' <Predicate = true> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 1000> <RAM>
ST_11 : Operation 113 [1/2] (2.66ns)   --->   "%expandedKey_load_13 = load i64* %expandedKey_addr_23, align 8" [extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:35]   --->   Operation 113 'load' 'expandedKey_load_13' <Predicate = true> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 1000> <RAM>
ST_11 : Operation 114 [1/1] (1.39ns)   --->   "%add_ln36 = add i8 %shl_ln, -6" [extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:36]   --->   Operation 114 'add' 'add_ln36' <Predicate = true> <Delay = 1.39> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.32> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 115 [1/1] (0.00ns)   --->   "%zext_ln36 = zext i8 %add_ln36 to i64" [extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:36]   --->   Operation 115 'zext' 'zext_ln36' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 116 [1/1] (0.00ns)   --->   "%expandedKey_addr_25 = getelementptr [1000 x i64]* %expandedKey, i64 0, i64 %zext_ln36" [extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:36]   --->   Operation 116 'getelementptr' 'expandedKey_addr_25' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 117 [2/2] (2.66ns)   --->   "%expandedKey_load_14 = load i64* %expandedKey_addr_25, align 8" [extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:36]   --->   Operation 117 'load' 'expandedKey_load_14' <Predicate = true> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 1000> <RAM>
ST_11 : Operation 118 [1/1] (1.39ns)   --->   "%add_ln37 = add i8 %shl_ln, -5" [extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:37]   --->   Operation 118 'add' 'add_ln37' <Predicate = true> <Delay = 1.39> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.32> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 119 [1/1] (0.00ns)   --->   "%zext_ln37 = zext i8 %add_ln37 to i64" [extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:37]   --->   Operation 119 'zext' 'zext_ln37' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 120 [1/1] (0.00ns)   --->   "%expandedKey_addr_27 = getelementptr [1000 x i64]* %expandedKey, i64 0, i64 %zext_ln37" [extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:37]   --->   Operation 120 'getelementptr' 'expandedKey_addr_27' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 121 [2/2] (2.66ns)   --->   "%expandedKey_load_15 = load i64* %expandedKey_addr_27, align 8" [extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:37]   --->   Operation 121 'load' 'expandedKey_load_15' <Predicate = true> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 1000> <RAM>

State 12 <SV = 10> <Delay = 2.66>
ST_12 : Operation 122 [1/1] (0.00ns)   --->   "%zext_ln26_2 = zext i8 %shl_ln to i64" [extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:26]   --->   Operation 122 'zext' 'zext_ln26_2' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 123 [1/1] (0.00ns)   --->   "%expandedKey_addr_4 = getelementptr [1000 x i64]* %expandedKey, i64 0, i64 %zext_ln26_2" [extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:26]   --->   Operation 123 'getelementptr' 'expandedKey_addr_4' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 124 [1/1] (2.66ns)   --->   "store i64 %expandedKey_load_2, i64* %expandedKey_addr_4, align 8" [extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:26]   --->   Operation 124 'store' <Predicate = true> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 1000> <RAM>
ST_12 : Operation 125 [1/1] (0.00ns)   --->   "%or_ln27 = or i8 %shl_ln, 1" [extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:27]   --->   Operation 125 'or' 'or_ln27' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 126 [1/1] (0.00ns)   --->   "%zext_ln27_2 = zext i8 %or_ln27 to i64" [extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:27]   --->   Operation 126 'zext' 'zext_ln27_2' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 127 [1/1] (0.00ns)   --->   "%expandedKey_addr_7 = getelementptr [1000 x i64]* %expandedKey, i64 0, i64 %zext_ln27_2" [extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:27]   --->   Operation 127 'getelementptr' 'expandedKey_addr_7' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 128 [1/1] (2.66ns)   --->   "store i64 %expandedKey_load_4, i64* %expandedKey_addr_7, align 8" [extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:27]   --->   Operation 128 'store' <Predicate = true> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 1000> <RAM>
ST_12 : Operation 129 [1/1] (0.68ns)   --->   "%xor_ln30 = xor i64 %expandedKey_load_8, %expandedKey_load_2" [extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:30]   --->   Operation 129 'xor' 'xor_ln30' <Predicate = true> <Delay = 0.68> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.68> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 130 [1/1] (0.68ns)   --->   "%xor_ln31 = xor i64 %expandedKey_load_9, %expandedKey_load_4" [extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:31]   --->   Operation 130 'xor' 'xor_ln31' <Predicate = true> <Delay = 0.68> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.68> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 131 [1/2] (2.66ns)   --->   "%expandedKey_load_14 = load i64* %expandedKey_addr_25, align 8" [extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:36]   --->   Operation 131 'load' 'expandedKey_load_14' <Predicate = true> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 1000> <RAM>
ST_12 : Operation 132 [1/2] (2.66ns)   --->   "%expandedKey_load_15 = load i64* %expandedKey_addr_27, align 8" [extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:37]   --->   Operation 132 'load' 'expandedKey_load_15' <Predicate = true> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 1000> <RAM>

State 13 <SV = 11> <Delay = 2.66>
ST_13 : Operation 133 [1/1] (0.00ns)   --->   "%or_ln28 = or i8 %shl_ln, 2" [extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:28]   --->   Operation 133 'or' 'or_ln28' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 134 [1/1] (0.00ns)   --->   "%zext_ln28_2 = zext i8 %or_ln28 to i64" [extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:28]   --->   Operation 134 'zext' 'zext_ln28_2' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 135 [1/1] (0.00ns)   --->   "%expandedKey_addr_10 = getelementptr [1000 x i64]* %expandedKey, i64 0, i64 %zext_ln28_2" [extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:28]   --->   Operation 135 'getelementptr' 'expandedKey_addr_10' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 136 [1/1] (2.66ns)   --->   "store i64 %expandedKey_load_6, i64* %expandedKey_addr_10, align 8" [extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:28]   --->   Operation 136 'store' <Predicate = true> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 1000> <RAM>
ST_13 : Operation 137 [1/1] (0.00ns)   --->   "%or_ln29 = or i8 %shl_ln, 3" [extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:29]   --->   Operation 137 'or' 'or_ln29' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 138 [1/1] (0.00ns)   --->   "%zext_ln29_1 = zext i8 %or_ln29 to i64" [extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:29]   --->   Operation 138 'zext' 'zext_ln29_1' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 139 [1/1] (0.00ns)   --->   "%expandedKey_addr_12 = getelementptr [1000 x i64]* %expandedKey, i64 0, i64 %zext_ln29_1" [extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:29]   --->   Operation 139 'getelementptr' 'expandedKey_addr_12' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 140 [1/1] (2.66ns)   --->   "store i64 %expandedKey_load_7, i64* %expandedKey_addr_12, align 8" [extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:29]   --->   Operation 140 'store' <Predicate = true> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 1000> <RAM>
ST_13 : Operation 141 [1/1] (0.68ns)   --->   "%xor_ln32 = xor i64 %expandedKey_load_10, %expandedKey_load_6" [extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:32]   --->   Operation 141 'xor' 'xor_ln32' <Predicate = true> <Delay = 0.68> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.68> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 142 [1/1] (0.68ns)   --->   "%xor_ln33 = xor i64 %expandedKey_load_11, %expandedKey_load_7" [extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:33]   --->   Operation 142 'xor' 'xor_ln33' <Predicate = true> <Delay = 0.68> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.68> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>

State 14 <SV = 12> <Delay = 2.66>
ST_14 : Operation 143 [1/1] (0.00ns)   --->   "%or_ln30 = or i8 %shl_ln, 4" [extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:30]   --->   Operation 143 'or' 'or_ln30' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 144 [1/1] (0.00ns)   --->   "%zext_ln30_1 = zext i8 %or_ln30 to i64" [extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:30]   --->   Operation 144 'zext' 'zext_ln30_1' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 145 [1/1] (0.00ns)   --->   "%expandedKey_addr_14 = getelementptr [1000 x i64]* %expandedKey, i64 0, i64 %zext_ln30_1" [extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:30]   --->   Operation 145 'getelementptr' 'expandedKey_addr_14' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 146 [1/1] (2.66ns)   --->   "store i64 %xor_ln30, i64* %expandedKey_addr_14, align 8" [extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:30]   --->   Operation 146 'store' <Predicate = true> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 1000> <RAM>
ST_14 : Operation 147 [1/1] (0.00ns)   --->   "%or_ln31 = or i8 %shl_ln, 5" [extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:31]   --->   Operation 147 'or' 'or_ln31' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 148 [1/1] (0.00ns)   --->   "%zext_ln31_1 = zext i8 %or_ln31 to i64" [extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:31]   --->   Operation 148 'zext' 'zext_ln31_1' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 149 [1/1] (0.00ns)   --->   "%expandedKey_addr_16 = getelementptr [1000 x i64]* %expandedKey, i64 0, i64 %zext_ln31_1" [extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:31]   --->   Operation 149 'getelementptr' 'expandedKey_addr_16' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 150 [1/1] (2.66ns)   --->   "store i64 %xor_ln31, i64* %expandedKey_addr_16, align 8" [extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:31]   --->   Operation 150 'store' <Predicate = true> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 1000> <RAM>
ST_14 : Operation 151 [1/1] (0.68ns)   --->   "%xor_ln34 = xor i64 %expandedKey_load_12, %xor_ln30" [extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:34]   --->   Operation 151 'xor' 'xor_ln34' <Predicate = true> <Delay = 0.68> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.68> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 152 [1/1] (0.68ns)   --->   "%xor_ln35 = xor i64 %expandedKey_load_13, %xor_ln31" [extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:35]   --->   Operation 152 'xor' 'xor_ln35' <Predicate = true> <Delay = 0.68> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.68> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>

State 15 <SV = 13> <Delay = 2.66>
ST_15 : Operation 153 [1/1] (0.00ns)   --->   "%or_ln32 = or i8 %shl_ln, 6" [extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:32]   --->   Operation 153 'or' 'or_ln32' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 154 [1/1] (0.00ns)   --->   "%zext_ln32_1 = zext i8 %or_ln32 to i64" [extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:32]   --->   Operation 154 'zext' 'zext_ln32_1' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 155 [1/1] (0.00ns)   --->   "%expandedKey_addr_18 = getelementptr [1000 x i64]* %expandedKey, i64 0, i64 %zext_ln32_1" [extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:32]   --->   Operation 155 'getelementptr' 'expandedKey_addr_18' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 156 [1/1] (2.66ns)   --->   "store i64 %xor_ln32, i64* %expandedKey_addr_18, align 8" [extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:32]   --->   Operation 156 'store' <Predicate = true> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 1000> <RAM>
ST_15 : Operation 157 [1/1] (0.00ns)   --->   "%or_ln33 = or i8 %shl_ln, 7" [extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:33]   --->   Operation 157 'or' 'or_ln33' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 158 [1/1] (0.00ns)   --->   "%zext_ln33_1 = zext i8 %or_ln33 to i64" [extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:33]   --->   Operation 158 'zext' 'zext_ln33_1' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 159 [1/1] (0.00ns)   --->   "%expandedKey_addr_20 = getelementptr [1000 x i64]* %expandedKey, i64 0, i64 %zext_ln33_1" [extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:33]   --->   Operation 159 'getelementptr' 'expandedKey_addr_20' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 160 [1/1] (2.66ns)   --->   "store i64 %xor_ln33, i64* %expandedKey_addr_20, align 8" [extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:33]   --->   Operation 160 'store' <Predicate = true> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 1000> <RAM>
ST_15 : Operation 161 [1/1] (0.68ns)   --->   "%xor_ln36 = xor i64 %expandedKey_load_14, %xor_ln32" [extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:36]   --->   Operation 161 'xor' 'xor_ln36' <Predicate = true> <Delay = 0.68> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.68> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 162 [1/1] (0.68ns)   --->   "%xor_ln37 = xor i64 %expandedKey_load_15, %xor_ln33" [extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:37]   --->   Operation 162 'xor' 'xor_ln37' <Predicate = true> <Delay = 0.68> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.68> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>

State 16 <SV = 14> <Delay = 2.66>
ST_16 : Operation 163 [1/1] (0.00ns)   --->   "%or_ln34 = or i8 %shl_ln, 8" [extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:34]   --->   Operation 163 'or' 'or_ln34' <Predicate = true> <Delay = 0.00>
ST_16 : Operation 164 [1/1] (0.00ns)   --->   "%zext_ln34_1 = zext i8 %or_ln34 to i64" [extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:34]   --->   Operation 164 'zext' 'zext_ln34_1' <Predicate = true> <Delay = 0.00>
ST_16 : Operation 165 [1/1] (0.00ns)   --->   "%expandedKey_addr_22 = getelementptr [1000 x i64]* %expandedKey, i64 0, i64 %zext_ln34_1" [extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:34]   --->   Operation 165 'getelementptr' 'expandedKey_addr_22' <Predicate = true> <Delay = 0.00>
ST_16 : Operation 166 [1/1] (2.66ns)   --->   "store i64 %xor_ln34, i64* %expandedKey_addr_22, align 8" [extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:34]   --->   Operation 166 'store' <Predicate = true> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 1000> <RAM>
ST_16 : Operation 167 [1/1] (0.00ns)   --->   "%or_ln35 = or i8 %shl_ln, 9" [extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:35]   --->   Operation 167 'or' 'or_ln35' <Predicate = true> <Delay = 0.00>
ST_16 : Operation 168 [1/1] (0.00ns)   --->   "%zext_ln35_1 = zext i8 %or_ln35 to i64" [extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:35]   --->   Operation 168 'zext' 'zext_ln35_1' <Predicate = true> <Delay = 0.00>
ST_16 : Operation 169 [1/1] (0.00ns)   --->   "%expandedKey_addr_24 = getelementptr [1000 x i64]* %expandedKey, i64 0, i64 %zext_ln35_1" [extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:35]   --->   Operation 169 'getelementptr' 'expandedKey_addr_24' <Predicate = true> <Delay = 0.00>
ST_16 : Operation 170 [1/1] (2.66ns)   --->   "store i64 %xor_ln35, i64* %expandedKey_addr_24, align 8" [extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:35]   --->   Operation 170 'store' <Predicate = true> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 1000> <RAM>
ST_16 : Operation 171 [1/1] (0.68ns)   --->   "%xor_ln38 = xor i64 %expandedKey_load, %xor_ln34" [extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:38]   --->   Operation 171 'xor' 'xor_ln38' <Predicate = true> <Delay = 0.68> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.68> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_16 : Operation 172 [1/1] (0.68ns)   --->   "%xor_ln39 = xor i64 %expandedKey_load_1, %xor_ln35" [extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:39]   --->   Operation 172 'xor' 'xor_ln39' <Predicate = true> <Delay = 0.68> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.68> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>

State 17 <SV = 15> <Delay = 2.66>
ST_17 : Operation 173 [1/1] (0.00ns)   --->   "%or_ln36 = or i8 %shl_ln, 10" [extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:36]   --->   Operation 173 'or' 'or_ln36' <Predicate = true> <Delay = 0.00>
ST_17 : Operation 174 [1/1] (0.00ns)   --->   "%zext_ln36_1 = zext i8 %or_ln36 to i64" [extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:36]   --->   Operation 174 'zext' 'zext_ln36_1' <Predicate = true> <Delay = 0.00>
ST_17 : Operation 175 [1/1] (0.00ns)   --->   "%expandedKey_addr_26 = getelementptr [1000 x i64]* %expandedKey, i64 0, i64 %zext_ln36_1" [extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:36]   --->   Operation 175 'getelementptr' 'expandedKey_addr_26' <Predicate = true> <Delay = 0.00>
ST_17 : Operation 176 [1/1] (2.66ns)   --->   "store i64 %xor_ln36, i64* %expandedKey_addr_26, align 8" [extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:36]   --->   Operation 176 'store' <Predicate = true> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 1000> <RAM>
ST_17 : Operation 177 [1/1] (0.00ns)   --->   "%or_ln37 = or i8 %shl_ln, 11" [extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:37]   --->   Operation 177 'or' 'or_ln37' <Predicate = true> <Delay = 0.00>
ST_17 : Operation 178 [1/1] (0.00ns)   --->   "%zext_ln37_1 = zext i8 %or_ln37 to i64" [extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:37]   --->   Operation 178 'zext' 'zext_ln37_1' <Predicate = true> <Delay = 0.00>
ST_17 : Operation 179 [1/1] (0.00ns)   --->   "%expandedKey_addr_28 = getelementptr [1000 x i64]* %expandedKey, i64 0, i64 %zext_ln37_1" [extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:37]   --->   Operation 179 'getelementptr' 'expandedKey_addr_28' <Predicate = true> <Delay = 0.00>
ST_17 : Operation 180 [1/1] (2.66ns)   --->   "store i64 %xor_ln37, i64* %expandedKey_addr_28, align 8" [extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:37]   --->   Operation 180 'store' <Predicate = true> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 1000> <RAM>
ST_17 : Operation 181 [1/1] (0.68ns)   --->   "%xor_ln40 = xor i64 %expandedKey_load_3, %xor_ln36" [extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:40]   --->   Operation 181 'xor' 'xor_ln40' <Predicate = true> <Delay = 0.68> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.68> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 182 [1/1] (0.68ns)   --->   "%xor_ln41 = xor i64 %expandedKey_load_5, %xor_ln37" [extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:41]   --->   Operation 182 'xor' 'xor_ln41' <Predicate = true> <Delay = 0.68> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.68> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>

State 18 <SV = 16> <Delay = 2.66>
ST_18 : Operation 183 [1/1] (0.00ns)   --->   "%or_ln38 = or i8 %shl_ln, 12" [extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:38]   --->   Operation 183 'or' 'or_ln38' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 184 [1/1] (0.00ns)   --->   "%zext_ln38 = zext i8 %or_ln38 to i64" [extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:38]   --->   Operation 184 'zext' 'zext_ln38' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 185 [1/1] (0.00ns)   --->   "%expandedKey_addr_29 = getelementptr [1000 x i64]* %expandedKey, i64 0, i64 %zext_ln38" [extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:38]   --->   Operation 185 'getelementptr' 'expandedKey_addr_29' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 186 [1/1] (2.66ns)   --->   "store i64 %xor_ln38, i64* %expandedKey_addr_29, align 8" [extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:38]   --->   Operation 186 'store' <Predicate = true> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 1000> <RAM>
ST_18 : Operation 187 [1/1] (0.00ns)   --->   "%or_ln39 = or i8 %shl_ln, 13" [extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:39]   --->   Operation 187 'or' 'or_ln39' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 188 [1/1] (0.00ns)   --->   "%zext_ln39 = zext i8 %or_ln39 to i64" [extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:39]   --->   Operation 188 'zext' 'zext_ln39' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 189 [1/1] (0.00ns)   --->   "%expandedKey_addr_30 = getelementptr [1000 x i64]* %expandedKey, i64 0, i64 %zext_ln39" [extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:39]   --->   Operation 189 'getelementptr' 'expandedKey_addr_30' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 190 [1/1] (2.66ns)   --->   "store i64 %xor_ln39, i64* %expandedKey_addr_30, align 8" [extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:39]   --->   Operation 190 'store' <Predicate = true> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 1000> <RAM>

State 19 <SV = 17> <Delay = 2.66>
ST_19 : Operation 191 [1/1] (0.00ns)   --->   "%or_ln40 = or i8 %shl_ln, 14" [extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:40]   --->   Operation 191 'or' 'or_ln40' <Predicate = true> <Delay = 0.00>
ST_19 : Operation 192 [1/1] (0.00ns)   --->   "%zext_ln40 = zext i8 %or_ln40 to i64" [extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:40]   --->   Operation 192 'zext' 'zext_ln40' <Predicate = true> <Delay = 0.00>
ST_19 : Operation 193 [1/1] (0.00ns)   --->   "%expandedKey_addr_31 = getelementptr [1000 x i64]* %expandedKey, i64 0, i64 %zext_ln40" [extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:40]   --->   Operation 193 'getelementptr' 'expandedKey_addr_31' <Predicate = true> <Delay = 0.00>
ST_19 : Operation 194 [1/1] (2.66ns)   --->   "store i64 %xor_ln40, i64* %expandedKey_addr_31, align 8" [extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:40]   --->   Operation 194 'store' <Predicate = true> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 1000> <RAM>
ST_19 : Operation 195 [1/1] (0.00ns)   --->   "%or_ln41 = or i8 %shl_ln, 15" [extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:41]   --->   Operation 195 'or' 'or_ln41' <Predicate = true> <Delay = 0.00>
ST_19 : Operation 196 [1/1] (0.00ns)   --->   "%zext_ln41 = zext i8 %or_ln41 to i64" [extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:41]   --->   Operation 196 'zext' 'zext_ln41' <Predicate = true> <Delay = 0.00>
ST_19 : Operation 197 [1/1] (0.00ns)   --->   "%expandedKey_addr_32 = getelementptr [1000 x i64]* %expandedKey, i64 0, i64 %zext_ln41" [extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:41]   --->   Operation 197 'getelementptr' 'expandedKey_addr_32' <Predicate = true> <Delay = 0.00>
ST_19 : Operation 198 [1/1] (2.66ns)   --->   "store i64 %xor_ln41, i64* %expandedKey_addr_32, align 8" [extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:41]   --->   Operation 198 'store' <Predicate = true> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 1000> <RAM>
ST_19 : Operation 199 [1/1] (0.00ns)   --->   "br label %.preheader" [extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:24]   --->   Operation 199 'br' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 1.06ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('ii') with incoming values : ('ii', extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:22) [8]  (1.06 ns)

 <State 2>: 2.66ns
The critical path consists of the following:
	'phi' operation ('ii') with incoming values : ('ii', extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:22) [8]  (0 ns)
	'getelementptr' operation ('key_addr', extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:23) [15]  (0 ns)
	'load' operation ('key_load', extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:23) on array 'key' [16]  (2.66 ns)

 <State 3>: 5.33ns
The critical path consists of the following:
	'load' operation ('key_load', extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:23) on array 'key' [16]  (2.66 ns)
	'store' operation ('store_ln23', extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:23) of variable 'key_load', extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:23 on array 'expandedKey' [18]  (2.66 ns)

 <State 4>: 4.06ns
The critical path consists of the following:
	'phi' operation ('ii') with incoming values : ('ii', extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:24) [23]  (0 ns)
	'add' operation ('add_ln25', extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:25) [29]  (1.39 ns)
	'getelementptr' operation ('expandedKey_addr_1', extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:25) [31]  (0 ns)
	'load' operation ('expandedKey_load', extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:25) on array 'expandedKey' [32]  (2.66 ns)

 <State 5>: 4.06ns
The critical path consists of the following:
	'add' operation ('add_ln26_1', extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:26) [37]  (1.39 ns)
	'getelementptr' operation ('expandedKey_addr_3', extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:26) [39]  (0 ns)
	'load' operation ('expandedKey_load_2', extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:26) on array 'expandedKey' [40]  (2.66 ns)

 <State 6>: 4.06ns
The critical path consists of the following:
	'add' operation ('add_ln27_1', extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:27) [48]  (1.39 ns)
	'getelementptr' operation ('expandedKey_addr_6', extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:27) [50]  (0 ns)
	'load' operation ('expandedKey_load_4', extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:27) on array 'expandedKey' [51]  (2.66 ns)

 <State 7>: 4.06ns
The critical path consists of the following:
	'add' operation ('add_ln28_1', extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:28) [60]  (1.39 ns)
	'getelementptr' operation ('expandedKey_addr_9', extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:28) [62]  (0 ns)
	'load' operation ('expandedKey_load_6', extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:28) on array 'expandedKey' [63]  (2.66 ns)

 <State 8>: 4.06ns
The critical path consists of the following:
	'add' operation ('add_ln30', extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:30) [76]  (1.39 ns)
	'getelementptr' operation ('expandedKey_addr_13', extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:30) [78]  (0 ns)
	'load' operation ('expandedKey_load_8', extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:30) on array 'expandedKey' [79]  (2.66 ns)

 <State 9>: 4.06ns
The critical path consists of the following:
	'add' operation ('add_ln32', extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:32) [94]  (1.39 ns)
	'getelementptr' operation ('expandedKey_addr_17', extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:32) [96]  (0 ns)
	'load' operation ('expandedKey_load_10', extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:32) on array 'expandedKey' [97]  (2.66 ns)

 <State 10>: 4.06ns
The critical path consists of the following:
	'add' operation ('add_ln34', extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:34) [112]  (1.39 ns)
	'getelementptr' operation ('expandedKey_addr_21', extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:34) [114]  (0 ns)
	'load' operation ('expandedKey_load_12', extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:34) on array 'expandedKey' [115]  (2.66 ns)

 <State 11>: 4.06ns
The critical path consists of the following:
	'add' operation ('add_ln36', extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:36) [130]  (1.39 ns)
	'getelementptr' operation ('expandedKey_addr_25', extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:36) [132]  (0 ns)
	'load' operation ('expandedKey_load_14', extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:36) on array 'expandedKey' [133]  (2.66 ns)

 <State 12>: 2.66ns
The critical path consists of the following:
	'getelementptr' operation ('expandedKey_addr_4', extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:26) [42]  (0 ns)
	'store' operation ('store_ln26', extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:26) of variable 'expandedKey_load_2', extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:26 on array 'expandedKey' [43]  (2.66 ns)

 <State 13>: 2.66ns
The critical path consists of the following:
	'or' operation ('or_ln28', extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:28) [64]  (0 ns)
	'getelementptr' operation ('expandedKey_addr_10', extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:28) [66]  (0 ns)
	'store' operation ('store_ln28', extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:28) of variable 'expandedKey_load_6', extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:28 on array 'expandedKey' [67]  (2.66 ns)

 <State 14>: 2.66ns
The critical path consists of the following:
	'or' operation ('or_ln30', extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:30) [81]  (0 ns)
	'getelementptr' operation ('expandedKey_addr_14', extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:30) [83]  (0 ns)
	'store' operation ('store_ln30', extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:30) of variable 'xor_ln30', extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:30 on array 'expandedKey' [84]  (2.66 ns)

 <State 15>: 2.66ns
The critical path consists of the following:
	'or' operation ('or_ln32', extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:32) [99]  (0 ns)
	'getelementptr' operation ('expandedKey_addr_18', extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:32) [101]  (0 ns)
	'store' operation ('store_ln32', extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:32) of variable 'xor_ln32', extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:32 on array 'expandedKey' [102]  (2.66 ns)

 <State 16>: 2.66ns
The critical path consists of the following:
	'or' operation ('or_ln34', extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:34) [117]  (0 ns)
	'getelementptr' operation ('expandedKey_addr_22', extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:34) [119]  (0 ns)
	'store' operation ('store_ln34', extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:34) of variable 'xor_ln34', extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:34 on array 'expandedKey' [120]  (2.66 ns)

 <State 17>: 2.66ns
The critical path consists of the following:
	'or' operation ('or_ln36', extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:36) [135]  (0 ns)
	'getelementptr' operation ('expandedKey_addr_26', extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:36) [137]  (0 ns)
	'store' operation ('store_ln36', extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:36) of variable 'xor_ln36', extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:36 on array 'expandedKey' [138]  (2.66 ns)

 <State 18>: 2.66ns
The critical path consists of the following:
	'or' operation ('or_ln38', extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:38) [149]  (0 ns)
	'getelementptr' operation ('expandedKey_addr_29', extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:38) [151]  (0 ns)
	'store' operation ('store_ln38', extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:38) of variable 'xor_ln38', extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:38 on array 'expandedKey' [152]  (2.66 ns)

 <State 19>: 2.66ns
The critical path consists of the following:
	'or' operation ('or_ln40', extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:40) [159]  (0 ns)
	'getelementptr' operation ('expandedKey_addr_31', extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:40) [161]  (0 ns)
	'store' operation ('store_ln40', extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:40) of variable 'xor_ln40', extr_.micropythondriverscc3000srcsecurity.c_expandKey_with_main.c:40 on array 'expandedKey' [162]  (2.66 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
