// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "expandKey.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic expandKey::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic expandKey::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<19> expandKey::ap_ST_fsm_state1 = "1";
const sc_lv<19> expandKey::ap_ST_fsm_state2 = "10";
const sc_lv<19> expandKey::ap_ST_fsm_state3 = "100";
const sc_lv<19> expandKey::ap_ST_fsm_state4 = "1000";
const sc_lv<19> expandKey::ap_ST_fsm_state5 = "10000";
const sc_lv<19> expandKey::ap_ST_fsm_state6 = "100000";
const sc_lv<19> expandKey::ap_ST_fsm_state7 = "1000000";
const sc_lv<19> expandKey::ap_ST_fsm_state8 = "10000000";
const sc_lv<19> expandKey::ap_ST_fsm_state9 = "100000000";
const sc_lv<19> expandKey::ap_ST_fsm_state10 = "1000000000";
const sc_lv<19> expandKey::ap_ST_fsm_state11 = "10000000000";
const sc_lv<19> expandKey::ap_ST_fsm_state12 = "100000000000";
const sc_lv<19> expandKey::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<19> expandKey::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<19> expandKey::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<19> expandKey::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<19> expandKey::ap_ST_fsm_state17 = "10000000000000000";
const sc_lv<19> expandKey::ap_ST_fsm_state18 = "100000000000000000";
const sc_lv<19> expandKey::ap_ST_fsm_state19 = "1000000000000000000";
const sc_lv<32> expandKey::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> expandKey::ap_const_lv32_5 = "101";
const sc_lv<32> expandKey::ap_const_lv32_B = "1011";
const sc_lv<32> expandKey::ap_const_lv32_6 = "110";
const sc_lv<32> expandKey::ap_const_lv32_1 = "1";
const sc_lv<1> expandKey::ap_const_lv1_0 = "0";
const sc_lv<32> expandKey::ap_const_lv32_3 = "11";
const sc_lv<32> expandKey::ap_const_lv32_4 = "100";
const sc_lv<32> expandKey::ap_const_lv32_7 = "111";
const sc_lv<32> expandKey::ap_const_lv32_8 = "1000";
const sc_lv<32> expandKey::ap_const_lv32_9 = "1001";
const sc_lv<32> expandKey::ap_const_lv32_A = "1010";
const sc_lv<32> expandKey::ap_const_lv32_C = "1100";
const sc_lv<32> expandKey::ap_const_lv32_D = "1101";
const sc_lv<32> expandKey::ap_const_lv32_E = "1110";
const sc_lv<32> expandKey::ap_const_lv32_F = "1111";
const sc_lv<32> expandKey::ap_const_lv32_10 = "10000";
const sc_lv<5> expandKey::ap_const_lv5_0 = "00000";
const sc_lv<32> expandKey::ap_const_lv32_2 = "10";
const sc_lv<32> expandKey::ap_const_lv32_12 = "10010";
const sc_lv<4> expandKey::ap_const_lv4_1 = "1";
const sc_lv<1> expandKey::ap_const_lv1_1 = "1";
const sc_lv<32> expandKey::ap_const_lv32_11 = "10001";
const sc_lv<5> expandKey::ap_const_lv5_10 = "10000";
const sc_lv<5> expandKey::ap_const_lv5_1 = "1";
const sc_lv<4> expandKey::ap_const_lv4_B = "1011";
const sc_lv<4> expandKey::ap_const_lv4_0 = "0000";
const sc_lv<8> expandKey::ap_const_lv8_FC = "11111100";
const sc_lv<8> expandKey::ap_const_lv8_FD = "11111101";
const sc_lv<8> expandKey::ap_const_lv8_F0 = "11110000";
const sc_lv<8> expandKey::ap_const_lv8_FE = "11111110";
const sc_lv<8> expandKey::ap_const_lv8_F1 = "11110001";
const sc_lv<8> expandKey::ap_const_lv8_FF = "11111111";
const sc_lv<8> expandKey::ap_const_lv8_F2 = "11110010";
const sc_lv<8> expandKey::ap_const_lv8_F3 = "11110011";
const sc_lv<8> expandKey::ap_const_lv8_F4 = "11110100";
const sc_lv<8> expandKey::ap_const_lv8_F5 = "11110101";
const sc_lv<8> expandKey::ap_const_lv8_F6 = "11110110";
const sc_lv<8> expandKey::ap_const_lv8_F7 = "11110111";
const sc_lv<8> expandKey::ap_const_lv8_F8 = "11111000";
const sc_lv<8> expandKey::ap_const_lv8_F9 = "11111001";
const sc_lv<8> expandKey::ap_const_lv8_FA = "11111010";
const sc_lv<8> expandKey::ap_const_lv8_FB = "11111011";
const sc_lv<8> expandKey::ap_const_lv8_1 = "1";
const sc_lv<8> expandKey::ap_const_lv8_2 = "10";
const sc_lv<8> expandKey::ap_const_lv8_3 = "11";
const sc_lv<8> expandKey::ap_const_lv8_4 = "100";
const sc_lv<8> expandKey::ap_const_lv8_5 = "101";
const sc_lv<8> expandKey::ap_const_lv8_6 = "110";
const sc_lv<8> expandKey::ap_const_lv8_7 = "111";
const sc_lv<8> expandKey::ap_const_lv8_8 = "1000";
const sc_lv<8> expandKey::ap_const_lv8_9 = "1001";
const sc_lv<8> expandKey::ap_const_lv8_A = "1010";
const sc_lv<8> expandKey::ap_const_lv8_B = "1011";
const sc_lv<8> expandKey::ap_const_lv8_C = "1100";
const sc_lv<8> expandKey::ap_const_lv8_D = "1101";
const sc_lv<8> expandKey::ap_const_lv8_E = "1110";
const sc_lv<8> expandKey::ap_const_lv8_F = "1111";
const bool expandKey::ap_const_boolean_1 = true;

expandKey::expandKey(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_add_ln25_fu_445_p2);
    sensitive << ( shl_ln_fu_437_p3 );

    SC_METHOD(thread_add_ln26_1_fu_473_p2);
    sensitive << ( shl_ln_reg_840 );

    SC_METHOD(thread_add_ln26_fu_456_p2);
    sensitive << ( shl_ln_fu_437_p3 );

    SC_METHOD(thread_add_ln27_1_fu_493_p2);
    sensitive << ( shl_ln_reg_840 );

    SC_METHOD(thread_add_ln27_fu_483_p2);
    sensitive << ( shl_ln_reg_840 );

    SC_METHOD(thread_add_ln28_1_fu_513_p2);
    sensitive << ( shl_ln_reg_840 );

    SC_METHOD(thread_add_ln28_fu_503_p2);
    sensitive << ( shl_ln_reg_840 );

    SC_METHOD(thread_add_ln29_fu_523_p2);
    sensitive << ( shl_ln_reg_840 );

    SC_METHOD(thread_add_ln30_fu_533_p2);
    sensitive << ( shl_ln_reg_840 );

    SC_METHOD(thread_add_ln31_fu_543_p2);
    sensitive << ( shl_ln_reg_840 );

    SC_METHOD(thread_add_ln32_fu_553_p2);
    sensitive << ( shl_ln_reg_840 );

    SC_METHOD(thread_add_ln33_fu_563_p2);
    sensitive << ( shl_ln_reg_840 );

    SC_METHOD(thread_add_ln34_fu_573_p2);
    sensitive << ( shl_ln_reg_840 );

    SC_METHOD(thread_add_ln35_fu_583_p2);
    sensitive << ( shl_ln_reg_840 );

    SC_METHOD(thread_add_ln36_fu_593_p2);
    sensitive << ( shl_ln_reg_840 );

    SC_METHOD(thread_add_ln37_fu_603_p2);
    sensitive << ( shl_ln_reg_840 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state13);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state14);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state15);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state16);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state17);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state18);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state19);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( icmp_ln24_fu_431_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( icmp_ln24_fu_431_p2 );

    SC_METHOD(thread_expandedKey_address0);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( zext_ln23_reg_827 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( zext_ln25_fu_451_p1 );
    sensitive << ( zext_ln27_fu_488_p1 );
    sensitive << ( zext_ln28_fu_508_p1 );
    sensitive << ( zext_ln29_fu_528_p1 );
    sensitive << ( zext_ln31_fu_548_p1 );
    sensitive << ( zext_ln33_fu_568_p1 );
    sensitive << ( zext_ln35_fu_588_p1 );
    sensitive << ( zext_ln37_fu_608_p1 );
    sensitive << ( zext_ln27_2_fu_622_p1 );
    sensitive << ( zext_ln29_1_fu_652_p1 );
    sensitive << ( zext_ln31_1_fu_680_p1 );
    sensitive << ( zext_ln33_1_fu_708_p1 );
    sensitive << ( zext_ln35_1_fu_738_p1 );
    sensitive << ( zext_ln37_1_fu_766_p1 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( zext_ln39_fu_794_p1 );
    sensitive << ( zext_ln41_fu_814_p1 );

    SC_METHOD(thread_expandedKey_address1);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( zext_ln26_fu_462_p1 );
    sensitive << ( zext_ln26_1_fu_478_p1 );
    sensitive << ( zext_ln27_1_fu_498_p1 );
    sensitive << ( zext_ln28_1_fu_518_p1 );
    sensitive << ( zext_ln30_fu_538_p1 );
    sensitive << ( zext_ln32_fu_558_p1 );
    sensitive << ( zext_ln34_fu_578_p1 );
    sensitive << ( zext_ln36_fu_598_p1 );
    sensitive << ( zext_ln26_2_fu_613_p1 );
    sensitive << ( zext_ln28_2_fu_642_p1 );
    sensitive << ( zext_ln30_1_fu_670_p1 );
    sensitive << ( zext_ln32_1_fu_698_p1 );
    sensitive << ( zext_ln34_1_fu_728_p1 );
    sensitive << ( zext_ln36_1_fu_756_p1 );
    sensitive << ( zext_ln38_fu_784_p1 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( zext_ln40_fu_804_p1 );

    SC_METHOD(thread_expandedKey_ce0);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state18 );

    SC_METHOD(thread_expandedKey_ce1);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state18 );

    SC_METHOD(thread_expandedKey_d0);
    sensitive << ( key_q0 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( reg_408 );
    sensitive << ( expandedKey_load_7_reg_945 );
    sensitive << ( xor_ln31_reg_1027 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( xor_ln33_reg_1039 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( xor_ln35_reg_1051 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( xor_ln37_reg_1063 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( xor_ln39_reg_1074 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( xor_ln41_reg_1084 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state18 );

    SC_METHOD(thread_expandedKey_d1);
    sensitive << ( reg_403 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( expandedKey_load_6_reg_939 );
    sensitive << ( xor_ln30_reg_1021 );
    sensitive << ( xor_ln32_reg_1033 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( xor_ln34_reg_1045 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( xor_ln36_reg_1057 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( xor_ln38_reg_1069 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( xor_ln40_reg_1079 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state18 );

    SC_METHOD(thread_expandedKey_we0);
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state18 );

    SC_METHOD(thread_expandedKey_we1);
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state18 );

    SC_METHOD(thread_icmp_ln22_fu_414_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ii_0_reg_381 );

    SC_METHOD(thread_icmp_ln24_fu_431_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ii_1_reg_392 );

    SC_METHOD(thread_ii_2_fu_467_p2);
    sensitive << ( ii_1_reg_392 );

    SC_METHOD(thread_ii_fu_420_p2);
    sensitive << ( ii_0_reg_381 );

    SC_METHOD(thread_key_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( zext_ln23_fu_426_p1 );

    SC_METHOD(thread_key_ce0);
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_or_ln27_fu_617_p2);
    sensitive << ( shl_ln_reg_840 );

    SC_METHOD(thread_or_ln28_fu_637_p2);
    sensitive << ( shl_ln_reg_840 );

    SC_METHOD(thread_or_ln29_fu_647_p2);
    sensitive << ( shl_ln_reg_840 );

    SC_METHOD(thread_or_ln30_fu_665_p2);
    sensitive << ( shl_ln_reg_840 );

    SC_METHOD(thread_or_ln31_fu_675_p2);
    sensitive << ( shl_ln_reg_840 );

    SC_METHOD(thread_or_ln32_fu_693_p2);
    sensitive << ( shl_ln_reg_840 );

    SC_METHOD(thread_or_ln33_fu_703_p2);
    sensitive << ( shl_ln_reg_840 );

    SC_METHOD(thread_or_ln34_fu_723_p2);
    sensitive << ( shl_ln_reg_840 );

    SC_METHOD(thread_or_ln35_fu_733_p2);
    sensitive << ( shl_ln_reg_840 );

    SC_METHOD(thread_or_ln36_fu_751_p2);
    sensitive << ( shl_ln_reg_840 );

    SC_METHOD(thread_or_ln37_fu_761_p2);
    sensitive << ( shl_ln_reg_840 );

    SC_METHOD(thread_or_ln38_fu_779_p2);
    sensitive << ( shl_ln_reg_840 );

    SC_METHOD(thread_or_ln39_fu_789_p2);
    sensitive << ( shl_ln_reg_840 );

    SC_METHOD(thread_or_ln40_fu_799_p2);
    sensitive << ( shl_ln_reg_840 );

    SC_METHOD(thread_or_ln41_fu_809_p2);
    sensitive << ( shl_ln_reg_840 );

    SC_METHOD(thread_shl_ln_fu_437_p3);
    sensitive << ( ii_1_reg_392 );

    SC_METHOD(thread_xor_ln30_fu_627_p2);
    sensitive << ( reg_403 );
    sensitive << ( expandedKey_load_8_reg_961 );

    SC_METHOD(thread_xor_ln31_fu_632_p2);
    sensitive << ( reg_408 );
    sensitive << ( expandedKey_load_9_reg_966 );

    SC_METHOD(thread_xor_ln32_fu_657_p2);
    sensitive << ( expandedKey_load_6_reg_939 );
    sensitive << ( expandedKey_load_10_reg_981 );

    SC_METHOD(thread_xor_ln33_fu_661_p2);
    sensitive << ( expandedKey_load_7_reg_945 );
    sensitive << ( expandedKey_load_11_reg_986 );

    SC_METHOD(thread_xor_ln34_fu_685_p2);
    sensitive << ( expandedKey_load_12_reg_1001 );
    sensitive << ( xor_ln30_reg_1021 );

    SC_METHOD(thread_xor_ln35_fu_689_p2);
    sensitive << ( expandedKey_load_13_reg_1006 );
    sensitive << ( xor_ln31_reg_1027 );

    SC_METHOD(thread_xor_ln36_fu_713_p2);
    sensitive << ( reg_403 );
    sensitive << ( xor_ln32_reg_1033 );

    SC_METHOD(thread_xor_ln37_fu_718_p2);
    sensitive << ( reg_408 );
    sensitive << ( xor_ln33_reg_1039 );

    SC_METHOD(thread_xor_ln38_fu_743_p2);
    sensitive << ( expandedKey_load_reg_889 );
    sensitive << ( xor_ln34_reg_1045 );

    SC_METHOD(thread_xor_ln39_fu_747_p2);
    sensitive << ( expandedKey_load_1_reg_894 );
    sensitive << ( xor_ln35_reg_1051 );

    SC_METHOD(thread_xor_ln40_fu_771_p2);
    sensitive << ( expandedKey_load_3_reg_909 );
    sensitive << ( xor_ln36_reg_1057 );

    SC_METHOD(thread_xor_ln41_fu_775_p2);
    sensitive << ( expandedKey_load_5_reg_924 );
    sensitive << ( xor_ln37_reg_1063 );

    SC_METHOD(thread_zext_ln23_fu_426_p1);
    sensitive << ( ii_0_reg_381 );

    SC_METHOD(thread_zext_ln25_fu_451_p1);
    sensitive << ( add_ln25_fu_445_p2 );

    SC_METHOD(thread_zext_ln26_1_fu_478_p1);
    sensitive << ( add_ln26_1_fu_473_p2 );

    SC_METHOD(thread_zext_ln26_2_fu_613_p1);
    sensitive << ( shl_ln_reg_840 );

    SC_METHOD(thread_zext_ln26_fu_462_p1);
    sensitive << ( add_ln26_fu_456_p2 );

    SC_METHOD(thread_zext_ln27_1_fu_498_p1);
    sensitive << ( add_ln27_1_fu_493_p2 );

    SC_METHOD(thread_zext_ln27_2_fu_622_p1);
    sensitive << ( or_ln27_fu_617_p2 );

    SC_METHOD(thread_zext_ln27_fu_488_p1);
    sensitive << ( add_ln27_fu_483_p2 );

    SC_METHOD(thread_zext_ln28_1_fu_518_p1);
    sensitive << ( add_ln28_1_fu_513_p2 );

    SC_METHOD(thread_zext_ln28_2_fu_642_p1);
    sensitive << ( or_ln28_fu_637_p2 );

    SC_METHOD(thread_zext_ln28_fu_508_p1);
    sensitive << ( add_ln28_fu_503_p2 );

    SC_METHOD(thread_zext_ln29_1_fu_652_p1);
    sensitive << ( or_ln29_fu_647_p2 );

    SC_METHOD(thread_zext_ln29_fu_528_p1);
    sensitive << ( add_ln29_fu_523_p2 );

    SC_METHOD(thread_zext_ln30_1_fu_670_p1);
    sensitive << ( or_ln30_fu_665_p2 );

    SC_METHOD(thread_zext_ln30_fu_538_p1);
    sensitive << ( add_ln30_fu_533_p2 );

    SC_METHOD(thread_zext_ln31_1_fu_680_p1);
    sensitive << ( or_ln31_fu_675_p2 );

    SC_METHOD(thread_zext_ln31_fu_548_p1);
    sensitive << ( add_ln31_fu_543_p2 );

    SC_METHOD(thread_zext_ln32_1_fu_698_p1);
    sensitive << ( or_ln32_fu_693_p2 );

    SC_METHOD(thread_zext_ln32_fu_558_p1);
    sensitive << ( add_ln32_fu_553_p2 );

    SC_METHOD(thread_zext_ln33_1_fu_708_p1);
    sensitive << ( or_ln33_fu_703_p2 );

    SC_METHOD(thread_zext_ln33_fu_568_p1);
    sensitive << ( add_ln33_fu_563_p2 );

    SC_METHOD(thread_zext_ln34_1_fu_728_p1);
    sensitive << ( or_ln34_fu_723_p2 );

    SC_METHOD(thread_zext_ln34_fu_578_p1);
    sensitive << ( add_ln34_fu_573_p2 );

    SC_METHOD(thread_zext_ln35_1_fu_738_p1);
    sensitive << ( or_ln35_fu_733_p2 );

    SC_METHOD(thread_zext_ln35_fu_588_p1);
    sensitive << ( add_ln35_fu_583_p2 );

    SC_METHOD(thread_zext_ln36_1_fu_756_p1);
    sensitive << ( or_ln36_fu_751_p2 );

    SC_METHOD(thread_zext_ln36_fu_598_p1);
    sensitive << ( add_ln36_fu_593_p2 );

    SC_METHOD(thread_zext_ln37_1_fu_766_p1);
    sensitive << ( or_ln37_fu_761_p2 );

    SC_METHOD(thread_zext_ln37_fu_608_p1);
    sensitive << ( add_ln37_fu_603_p2 );

    SC_METHOD(thread_zext_ln38_fu_784_p1);
    sensitive << ( or_ln38_fu_779_p2 );

    SC_METHOD(thread_zext_ln39_fu_794_p1);
    sensitive << ( or_ln39_fu_789_p2 );

    SC_METHOD(thread_zext_ln40_fu_804_p1);
    sensitive << ( or_ln40_fu_799_p2 );

    SC_METHOD(thread_zext_ln41_fu_814_p1);
    sensitive << ( or_ln41_fu_809_p2 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln22_fu_414_p2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( icmp_ln24_fu_431_p2 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    ap_CS_fsm = "0000000000000000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "expandKey_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, expandedKey_address0, "(port)expandedKey_address0");
    sc_trace(mVcdFile, expandedKey_ce0, "(port)expandedKey_ce0");
    sc_trace(mVcdFile, expandedKey_we0, "(port)expandedKey_we0");
    sc_trace(mVcdFile, expandedKey_d0, "(port)expandedKey_d0");
    sc_trace(mVcdFile, expandedKey_q0, "(port)expandedKey_q0");
    sc_trace(mVcdFile, expandedKey_address1, "(port)expandedKey_address1");
    sc_trace(mVcdFile, expandedKey_ce1, "(port)expandedKey_ce1");
    sc_trace(mVcdFile, expandedKey_we1, "(port)expandedKey_we1");
    sc_trace(mVcdFile, expandedKey_d1, "(port)expandedKey_d1");
    sc_trace(mVcdFile, expandedKey_q1, "(port)expandedKey_q1");
    sc_trace(mVcdFile, key_address0, "(port)key_address0");
    sc_trace(mVcdFile, key_ce0, "(port)key_ce0");
    sc_trace(mVcdFile, key_q0, "(port)key_q0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, reg_403, "reg_403");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, reg_408, "reg_408");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, ii_fu_420_p2, "ii_fu_420_p2");
    sc_trace(mVcdFile, ii_reg_822, "ii_reg_822");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, zext_ln23_fu_426_p1, "zext_ln23_fu_426_p1");
    sc_trace(mVcdFile, zext_ln23_reg_827, "zext_ln23_reg_827");
    sc_trace(mVcdFile, icmp_ln22_fu_414_p2, "icmp_ln22_fu_414_p2");
    sc_trace(mVcdFile, shl_ln_fu_437_p3, "shl_ln_fu_437_p3");
    sc_trace(mVcdFile, shl_ln_reg_840, "shl_ln_reg_840");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, icmp_ln24_fu_431_p2, "icmp_ln24_fu_431_p2");
    sc_trace(mVcdFile, ii_2_fu_467_p2, "ii_2_fu_467_p2");
    sc_trace(mVcdFile, ii_2_reg_884, "ii_2_reg_884");
    sc_trace(mVcdFile, expandedKey_load_reg_889, "expandedKey_load_reg_889");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, expandedKey_load_1_reg_894, "expandedKey_load_1_reg_894");
    sc_trace(mVcdFile, expandedKey_load_3_reg_909, "expandedKey_load_3_reg_909");
    sc_trace(mVcdFile, expandedKey_load_5_reg_924, "expandedKey_load_5_reg_924");
    sc_trace(mVcdFile, expandedKey_load_6_reg_939, "expandedKey_load_6_reg_939");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, expandedKey_load_7_reg_945, "expandedKey_load_7_reg_945");
    sc_trace(mVcdFile, expandedKey_load_8_reg_961, "expandedKey_load_8_reg_961");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, expandedKey_load_9_reg_966, "expandedKey_load_9_reg_966");
    sc_trace(mVcdFile, expandedKey_load_10_reg_981, "expandedKey_load_10_reg_981");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, expandedKey_load_11_reg_986, "expandedKey_load_11_reg_986");
    sc_trace(mVcdFile, expandedKey_load_12_reg_1001, "expandedKey_load_12_reg_1001");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, expandedKey_load_13_reg_1006, "expandedKey_load_13_reg_1006");
    sc_trace(mVcdFile, xor_ln30_fu_627_p2, "xor_ln30_fu_627_p2");
    sc_trace(mVcdFile, xor_ln30_reg_1021, "xor_ln30_reg_1021");
    sc_trace(mVcdFile, xor_ln31_fu_632_p2, "xor_ln31_fu_632_p2");
    sc_trace(mVcdFile, xor_ln31_reg_1027, "xor_ln31_reg_1027");
    sc_trace(mVcdFile, xor_ln32_fu_657_p2, "xor_ln32_fu_657_p2");
    sc_trace(mVcdFile, xor_ln32_reg_1033, "xor_ln32_reg_1033");
    sc_trace(mVcdFile, ap_CS_fsm_state13, "ap_CS_fsm_state13");
    sc_trace(mVcdFile, xor_ln33_fu_661_p2, "xor_ln33_fu_661_p2");
    sc_trace(mVcdFile, xor_ln33_reg_1039, "xor_ln33_reg_1039");
    sc_trace(mVcdFile, xor_ln34_fu_685_p2, "xor_ln34_fu_685_p2");
    sc_trace(mVcdFile, xor_ln34_reg_1045, "xor_ln34_reg_1045");
    sc_trace(mVcdFile, ap_CS_fsm_state14, "ap_CS_fsm_state14");
    sc_trace(mVcdFile, xor_ln35_fu_689_p2, "xor_ln35_fu_689_p2");
    sc_trace(mVcdFile, xor_ln35_reg_1051, "xor_ln35_reg_1051");
    sc_trace(mVcdFile, xor_ln36_fu_713_p2, "xor_ln36_fu_713_p2");
    sc_trace(mVcdFile, xor_ln36_reg_1057, "xor_ln36_reg_1057");
    sc_trace(mVcdFile, ap_CS_fsm_state15, "ap_CS_fsm_state15");
    sc_trace(mVcdFile, xor_ln37_fu_718_p2, "xor_ln37_fu_718_p2");
    sc_trace(mVcdFile, xor_ln37_reg_1063, "xor_ln37_reg_1063");
    sc_trace(mVcdFile, xor_ln38_fu_743_p2, "xor_ln38_fu_743_p2");
    sc_trace(mVcdFile, xor_ln38_reg_1069, "xor_ln38_reg_1069");
    sc_trace(mVcdFile, ap_CS_fsm_state16, "ap_CS_fsm_state16");
    sc_trace(mVcdFile, xor_ln39_fu_747_p2, "xor_ln39_fu_747_p2");
    sc_trace(mVcdFile, xor_ln39_reg_1074, "xor_ln39_reg_1074");
    sc_trace(mVcdFile, xor_ln40_fu_771_p2, "xor_ln40_fu_771_p2");
    sc_trace(mVcdFile, xor_ln40_reg_1079, "xor_ln40_reg_1079");
    sc_trace(mVcdFile, ap_CS_fsm_state17, "ap_CS_fsm_state17");
    sc_trace(mVcdFile, xor_ln41_fu_775_p2, "xor_ln41_fu_775_p2");
    sc_trace(mVcdFile, xor_ln41_reg_1084, "xor_ln41_reg_1084");
    sc_trace(mVcdFile, ii_0_reg_381, "ii_0_reg_381");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, ii_1_reg_392, "ii_1_reg_392");
    sc_trace(mVcdFile, ap_CS_fsm_state19, "ap_CS_fsm_state19");
    sc_trace(mVcdFile, zext_ln25_fu_451_p1, "zext_ln25_fu_451_p1");
    sc_trace(mVcdFile, zext_ln26_fu_462_p1, "zext_ln26_fu_462_p1");
    sc_trace(mVcdFile, zext_ln26_1_fu_478_p1, "zext_ln26_1_fu_478_p1");
    sc_trace(mVcdFile, zext_ln27_fu_488_p1, "zext_ln27_fu_488_p1");
    sc_trace(mVcdFile, zext_ln27_1_fu_498_p1, "zext_ln27_1_fu_498_p1");
    sc_trace(mVcdFile, zext_ln28_fu_508_p1, "zext_ln28_fu_508_p1");
    sc_trace(mVcdFile, zext_ln28_1_fu_518_p1, "zext_ln28_1_fu_518_p1");
    sc_trace(mVcdFile, zext_ln29_fu_528_p1, "zext_ln29_fu_528_p1");
    sc_trace(mVcdFile, zext_ln30_fu_538_p1, "zext_ln30_fu_538_p1");
    sc_trace(mVcdFile, zext_ln31_fu_548_p1, "zext_ln31_fu_548_p1");
    sc_trace(mVcdFile, zext_ln32_fu_558_p1, "zext_ln32_fu_558_p1");
    sc_trace(mVcdFile, zext_ln33_fu_568_p1, "zext_ln33_fu_568_p1");
    sc_trace(mVcdFile, zext_ln34_fu_578_p1, "zext_ln34_fu_578_p1");
    sc_trace(mVcdFile, zext_ln35_fu_588_p1, "zext_ln35_fu_588_p1");
    sc_trace(mVcdFile, zext_ln36_fu_598_p1, "zext_ln36_fu_598_p1");
    sc_trace(mVcdFile, zext_ln37_fu_608_p1, "zext_ln37_fu_608_p1");
    sc_trace(mVcdFile, zext_ln26_2_fu_613_p1, "zext_ln26_2_fu_613_p1");
    sc_trace(mVcdFile, zext_ln27_2_fu_622_p1, "zext_ln27_2_fu_622_p1");
    sc_trace(mVcdFile, zext_ln28_2_fu_642_p1, "zext_ln28_2_fu_642_p1");
    sc_trace(mVcdFile, zext_ln29_1_fu_652_p1, "zext_ln29_1_fu_652_p1");
    sc_trace(mVcdFile, zext_ln30_1_fu_670_p1, "zext_ln30_1_fu_670_p1");
    sc_trace(mVcdFile, zext_ln31_1_fu_680_p1, "zext_ln31_1_fu_680_p1");
    sc_trace(mVcdFile, zext_ln32_1_fu_698_p1, "zext_ln32_1_fu_698_p1");
    sc_trace(mVcdFile, zext_ln33_1_fu_708_p1, "zext_ln33_1_fu_708_p1");
    sc_trace(mVcdFile, zext_ln34_1_fu_728_p1, "zext_ln34_1_fu_728_p1");
    sc_trace(mVcdFile, zext_ln35_1_fu_738_p1, "zext_ln35_1_fu_738_p1");
    sc_trace(mVcdFile, zext_ln36_1_fu_756_p1, "zext_ln36_1_fu_756_p1");
    sc_trace(mVcdFile, zext_ln37_1_fu_766_p1, "zext_ln37_1_fu_766_p1");
    sc_trace(mVcdFile, zext_ln38_fu_784_p1, "zext_ln38_fu_784_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state18, "ap_CS_fsm_state18");
    sc_trace(mVcdFile, zext_ln39_fu_794_p1, "zext_ln39_fu_794_p1");
    sc_trace(mVcdFile, zext_ln40_fu_804_p1, "zext_ln40_fu_804_p1");
    sc_trace(mVcdFile, zext_ln41_fu_814_p1, "zext_ln41_fu_814_p1");
    sc_trace(mVcdFile, add_ln25_fu_445_p2, "add_ln25_fu_445_p2");
    sc_trace(mVcdFile, add_ln26_fu_456_p2, "add_ln26_fu_456_p2");
    sc_trace(mVcdFile, add_ln26_1_fu_473_p2, "add_ln26_1_fu_473_p2");
    sc_trace(mVcdFile, add_ln27_fu_483_p2, "add_ln27_fu_483_p2");
    sc_trace(mVcdFile, add_ln27_1_fu_493_p2, "add_ln27_1_fu_493_p2");
    sc_trace(mVcdFile, add_ln28_fu_503_p2, "add_ln28_fu_503_p2");
    sc_trace(mVcdFile, add_ln28_1_fu_513_p2, "add_ln28_1_fu_513_p2");
    sc_trace(mVcdFile, add_ln29_fu_523_p2, "add_ln29_fu_523_p2");
    sc_trace(mVcdFile, add_ln30_fu_533_p2, "add_ln30_fu_533_p2");
    sc_trace(mVcdFile, add_ln31_fu_543_p2, "add_ln31_fu_543_p2");
    sc_trace(mVcdFile, add_ln32_fu_553_p2, "add_ln32_fu_553_p2");
    sc_trace(mVcdFile, add_ln33_fu_563_p2, "add_ln33_fu_563_p2");
    sc_trace(mVcdFile, add_ln34_fu_573_p2, "add_ln34_fu_573_p2");
    sc_trace(mVcdFile, add_ln35_fu_583_p2, "add_ln35_fu_583_p2");
    sc_trace(mVcdFile, add_ln36_fu_593_p2, "add_ln36_fu_593_p2");
    sc_trace(mVcdFile, add_ln37_fu_603_p2, "add_ln37_fu_603_p2");
    sc_trace(mVcdFile, or_ln27_fu_617_p2, "or_ln27_fu_617_p2");
    sc_trace(mVcdFile, or_ln28_fu_637_p2, "or_ln28_fu_637_p2");
    sc_trace(mVcdFile, or_ln29_fu_647_p2, "or_ln29_fu_647_p2");
    sc_trace(mVcdFile, or_ln30_fu_665_p2, "or_ln30_fu_665_p2");
    sc_trace(mVcdFile, or_ln31_fu_675_p2, "or_ln31_fu_675_p2");
    sc_trace(mVcdFile, or_ln32_fu_693_p2, "or_ln32_fu_693_p2");
    sc_trace(mVcdFile, or_ln33_fu_703_p2, "or_ln33_fu_703_p2");
    sc_trace(mVcdFile, or_ln34_fu_723_p2, "or_ln34_fu_723_p2");
    sc_trace(mVcdFile, or_ln35_fu_733_p2, "or_ln35_fu_733_p2");
    sc_trace(mVcdFile, or_ln36_fu_751_p2, "or_ln36_fu_751_p2");
    sc_trace(mVcdFile, or_ln37_fu_761_p2, "or_ln37_fu_761_p2");
    sc_trace(mVcdFile, or_ln38_fu_779_p2, "or_ln38_fu_779_p2");
    sc_trace(mVcdFile, or_ln39_fu_789_p2, "or_ln39_fu_789_p2");
    sc_trace(mVcdFile, or_ln40_fu_799_p2, "or_ln40_fu_799_p2");
    sc_trace(mVcdFile, or_ln41_fu_809_p2, "or_ln41_fu_809_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
    mHdltvinHandle.open("expandKey.hdltvin.dat");
    mHdltvoutHandle.open("expandKey.hdltvout.dat");
}

expandKey::~expandKey() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
}

void expandKey::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        ii_0_reg_381 = ii_reg_822.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        ii_0_reg_381 = ap_const_lv5_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln22_fu_414_p2.read(), ap_const_lv1_1))) {
        ii_1_reg_392 = ap_const_lv4_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read())) {
        ii_1_reg_392 = ii_2_reg_884.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        reg_408 = expandedKey_q0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        reg_408 = expandedKey_q1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        expandedKey_load_10_reg_981 = expandedKey_q1.read();
        expandedKey_load_11_reg_986 = expandedKey_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        expandedKey_load_12_reg_1001 = expandedKey_q1.read();
        expandedKey_load_13_reg_1006 = expandedKey_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        expandedKey_load_1_reg_894 = expandedKey_q1.read();
        expandedKey_load_reg_889 = expandedKey_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        expandedKey_load_3_reg_909 = expandedKey_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        expandedKey_load_5_reg_924 = expandedKey_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        expandedKey_load_6_reg_939 = expandedKey_q1.read();
        expandedKey_load_7_reg_945 = expandedKey_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        expandedKey_load_8_reg_961 = expandedKey_q1.read();
        expandedKey_load_9_reg_966 = expandedKey_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln24_fu_431_p2.read()))) {
        ii_2_reg_884 = ii_2_fu_467_p2.read();
        shl_ln_reg_840 = shl_ln_fu_437_p3.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        ii_reg_822 = ii_fu_420_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()))) {
        reg_403 = expandedKey_q1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        xor_ln30_reg_1021 = xor_ln30_fu_627_p2.read();
        xor_ln31_reg_1027 = xor_ln31_fu_632_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        xor_ln32_reg_1033 = xor_ln32_fu_657_p2.read();
        xor_ln33_reg_1039 = xor_ln33_fu_661_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        xor_ln34_reg_1045 = xor_ln34_fu_685_p2.read();
        xor_ln35_reg_1051 = xor_ln35_fu_689_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        xor_ln36_reg_1057 = xor_ln36_fu_713_p2.read();
        xor_ln37_reg_1063 = xor_ln37_fu_718_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        xor_ln38_reg_1069 = xor_ln38_fu_743_p2.read();
        xor_ln39_reg_1074 = xor_ln39_fu_747_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        xor_ln40_reg_1079 = xor_ln40_fu_771_p2.read();
        xor_ln41_reg_1084 = xor_ln41_fu_775_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln22_fu_414_p2.read(), ap_const_lv1_0))) {
        zext_ln23_reg_827 = zext_ln23_fu_426_p1.read();
    }
}

void expandKey::thread_add_ln25_fu_445_p2() {
    add_ln25_fu_445_p2 = (!shl_ln_fu_437_p3.read().is_01() || !ap_const_lv8_FC.is_01())? sc_lv<8>(): (sc_biguint<8>(shl_ln_fu_437_p3.read()) + sc_bigint<8>(ap_const_lv8_FC));
}

void expandKey::thread_add_ln26_1_fu_473_p2() {
    add_ln26_1_fu_473_p2 = (!shl_ln_reg_840.read().is_01() || !ap_const_lv8_F0.is_01())? sc_lv<8>(): (sc_biguint<8>(shl_ln_reg_840.read()) + sc_bigint<8>(ap_const_lv8_F0));
}

void expandKey::thread_add_ln26_fu_456_p2() {
    add_ln26_fu_456_p2 = (!shl_ln_fu_437_p3.read().is_01() || !ap_const_lv8_FD.is_01())? sc_lv<8>(): (sc_biguint<8>(shl_ln_fu_437_p3.read()) + sc_bigint<8>(ap_const_lv8_FD));
}

void expandKey::thread_add_ln27_1_fu_493_p2() {
    add_ln27_1_fu_493_p2 = (!shl_ln_reg_840.read().is_01() || !ap_const_lv8_F1.is_01())? sc_lv<8>(): (sc_biguint<8>(shl_ln_reg_840.read()) + sc_bigint<8>(ap_const_lv8_F1));
}

void expandKey::thread_add_ln27_fu_483_p2() {
    add_ln27_fu_483_p2 = (!shl_ln_reg_840.read().is_01() || !ap_const_lv8_FE.is_01())? sc_lv<8>(): (sc_biguint<8>(shl_ln_reg_840.read()) + sc_bigint<8>(ap_const_lv8_FE));
}

void expandKey::thread_add_ln28_1_fu_513_p2() {
    add_ln28_1_fu_513_p2 = (!shl_ln_reg_840.read().is_01() || !ap_const_lv8_F2.is_01())? sc_lv<8>(): (sc_biguint<8>(shl_ln_reg_840.read()) + sc_bigint<8>(ap_const_lv8_F2));
}

void expandKey::thread_add_ln28_fu_503_p2() {
    add_ln28_fu_503_p2 = (!shl_ln_reg_840.read().is_01() || !ap_const_lv8_FF.is_01())? sc_lv<8>(): (sc_biguint<8>(shl_ln_reg_840.read()) + sc_bigint<8>(ap_const_lv8_FF));
}

void expandKey::thread_add_ln29_fu_523_p2() {
    add_ln29_fu_523_p2 = (!shl_ln_reg_840.read().is_01() || !ap_const_lv8_F3.is_01())? sc_lv<8>(): (sc_biguint<8>(shl_ln_reg_840.read()) + sc_bigint<8>(ap_const_lv8_F3));
}

void expandKey::thread_add_ln30_fu_533_p2() {
    add_ln30_fu_533_p2 = (!shl_ln_reg_840.read().is_01() || !ap_const_lv8_F4.is_01())? sc_lv<8>(): (sc_biguint<8>(shl_ln_reg_840.read()) + sc_bigint<8>(ap_const_lv8_F4));
}

void expandKey::thread_add_ln31_fu_543_p2() {
    add_ln31_fu_543_p2 = (!shl_ln_reg_840.read().is_01() || !ap_const_lv8_F5.is_01())? sc_lv<8>(): (sc_biguint<8>(shl_ln_reg_840.read()) + sc_bigint<8>(ap_const_lv8_F5));
}

void expandKey::thread_add_ln32_fu_553_p2() {
    add_ln32_fu_553_p2 = (!shl_ln_reg_840.read().is_01() || !ap_const_lv8_F6.is_01())? sc_lv<8>(): (sc_biguint<8>(shl_ln_reg_840.read()) + sc_bigint<8>(ap_const_lv8_F6));
}

void expandKey::thread_add_ln33_fu_563_p2() {
    add_ln33_fu_563_p2 = (!shl_ln_reg_840.read().is_01() || !ap_const_lv8_F7.is_01())? sc_lv<8>(): (sc_biguint<8>(shl_ln_reg_840.read()) + sc_bigint<8>(ap_const_lv8_F7));
}

void expandKey::thread_add_ln34_fu_573_p2() {
    add_ln34_fu_573_p2 = (!shl_ln_reg_840.read().is_01() || !ap_const_lv8_F8.is_01())? sc_lv<8>(): (sc_biguint<8>(shl_ln_reg_840.read()) + sc_bigint<8>(ap_const_lv8_F8));
}

void expandKey::thread_add_ln35_fu_583_p2() {
    add_ln35_fu_583_p2 = (!shl_ln_reg_840.read().is_01() || !ap_const_lv8_F9.is_01())? sc_lv<8>(): (sc_biguint<8>(shl_ln_reg_840.read()) + sc_bigint<8>(ap_const_lv8_F9));
}

void expandKey::thread_add_ln36_fu_593_p2() {
    add_ln36_fu_593_p2 = (!shl_ln_reg_840.read().is_01() || !ap_const_lv8_FA.is_01())? sc_lv<8>(): (sc_biguint<8>(shl_ln_reg_840.read()) + sc_bigint<8>(ap_const_lv8_FA));
}

void expandKey::thread_add_ln37_fu_603_p2() {
    add_ln37_fu_603_p2 = (!shl_ln_reg_840.read().is_01() || !ap_const_lv8_FB.is_01())? sc_lv<8>(): (sc_biguint<8>(shl_ln_reg_840.read()) + sc_bigint<8>(ap_const_lv8_FB));
}

void expandKey::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void expandKey::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void expandKey::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void expandKey::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[11];
}

void expandKey::thread_ap_CS_fsm_state13() {
    ap_CS_fsm_state13 = ap_CS_fsm.read()[12];
}

void expandKey::thread_ap_CS_fsm_state14() {
    ap_CS_fsm_state14 = ap_CS_fsm.read()[13];
}

void expandKey::thread_ap_CS_fsm_state15() {
    ap_CS_fsm_state15 = ap_CS_fsm.read()[14];
}

void expandKey::thread_ap_CS_fsm_state16() {
    ap_CS_fsm_state16 = ap_CS_fsm.read()[15];
}

void expandKey::thread_ap_CS_fsm_state17() {
    ap_CS_fsm_state17 = ap_CS_fsm.read()[16];
}

void expandKey::thread_ap_CS_fsm_state18() {
    ap_CS_fsm_state18 = ap_CS_fsm.read()[17];
}

void expandKey::thread_ap_CS_fsm_state19() {
    ap_CS_fsm_state19 = ap_CS_fsm.read()[18];
}

void expandKey::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void expandKey::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void expandKey::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void expandKey::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void expandKey::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void expandKey::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void expandKey::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void expandKey::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void expandKey::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(icmp_ln24_fu_431_p2.read(), ap_const_lv1_1))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void expandKey::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void expandKey::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(icmp_ln24_fu_431_p2.read(), ap_const_lv1_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void expandKey::thread_expandedKey_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read())) {
        expandedKey_address0 =  (sc_lv<10>) (zext_ln41_fu_814_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        expandedKey_address0 =  (sc_lv<10>) (zext_ln39_fu_794_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        expandedKey_address0 =  (sc_lv<10>) (zext_ln37_1_fu_766_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        expandedKey_address0 =  (sc_lv<10>) (zext_ln35_1_fu_738_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        expandedKey_address0 =  (sc_lv<10>) (zext_ln33_1_fu_708_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        expandedKey_address0 =  (sc_lv<10>) (zext_ln31_1_fu_680_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        expandedKey_address0 =  (sc_lv<10>) (zext_ln29_1_fu_652_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        expandedKey_address0 =  (sc_lv<10>) (zext_ln27_2_fu_622_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        expandedKey_address0 =  (sc_lv<10>) (zext_ln37_fu_608_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        expandedKey_address0 =  (sc_lv<10>) (zext_ln35_fu_588_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        expandedKey_address0 =  (sc_lv<10>) (zext_ln33_fu_568_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        expandedKey_address0 =  (sc_lv<10>) (zext_ln31_fu_548_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        expandedKey_address0 =  (sc_lv<10>) (zext_ln29_fu_528_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        expandedKey_address0 =  (sc_lv<10>) (zext_ln28_fu_508_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        expandedKey_address0 =  (sc_lv<10>) (zext_ln27_fu_488_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        expandedKey_address0 =  (sc_lv<10>) (zext_ln25_fu_451_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        expandedKey_address0 =  (sc_lv<10>) (zext_ln23_reg_827.read());
    } else {
        expandedKey_address0 = "XXXXXXXXXX";
    }
}

void expandKey::thread_expandedKey_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read())) {
        expandedKey_address1 =  (sc_lv<10>) (zext_ln40_fu_804_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        expandedKey_address1 =  (sc_lv<10>) (zext_ln38_fu_784_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        expandedKey_address1 =  (sc_lv<10>) (zext_ln36_1_fu_756_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        expandedKey_address1 =  (sc_lv<10>) (zext_ln34_1_fu_728_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        expandedKey_address1 =  (sc_lv<10>) (zext_ln32_1_fu_698_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        expandedKey_address1 =  (sc_lv<10>) (zext_ln30_1_fu_670_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        expandedKey_address1 =  (sc_lv<10>) (zext_ln28_2_fu_642_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        expandedKey_address1 =  (sc_lv<10>) (zext_ln26_2_fu_613_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        expandedKey_address1 =  (sc_lv<10>) (zext_ln36_fu_598_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        expandedKey_address1 =  (sc_lv<10>) (zext_ln34_fu_578_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        expandedKey_address1 =  (sc_lv<10>) (zext_ln32_fu_558_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        expandedKey_address1 =  (sc_lv<10>) (zext_ln30_fu_538_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        expandedKey_address1 =  (sc_lv<10>) (zext_ln28_1_fu_518_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        expandedKey_address1 =  (sc_lv<10>) (zext_ln27_1_fu_498_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        expandedKey_address1 =  (sc_lv<10>) (zext_ln26_1_fu_478_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        expandedKey_address1 =  (sc_lv<10>) (zext_ln26_fu_462_p1.read());
    } else {
        expandedKey_address1 = "XXXXXXXXXX";
    }
}

void expandKey::thread_expandedKey_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()))) {
        expandedKey_ce0 = ap_const_logic_1;
    } else {
        expandedKey_ce0 = ap_const_logic_0;
    }
}

void expandKey::thread_expandedKey_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()))) {
        expandedKey_ce1 = ap_const_logic_1;
    } else {
        expandedKey_ce1 = ap_const_logic_0;
    }
}

void expandKey::thread_expandedKey_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read())) {
        expandedKey_d0 = xor_ln41_reg_1084.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        expandedKey_d0 = xor_ln39_reg_1074.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        expandedKey_d0 = xor_ln37_reg_1063.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        expandedKey_d0 = xor_ln35_reg_1051.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        expandedKey_d0 = xor_ln33_reg_1039.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        expandedKey_d0 = xor_ln31_reg_1027.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        expandedKey_d0 = expandedKey_load_7_reg_945.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        expandedKey_d0 = reg_408.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        expandedKey_d0 = key_q0.read();
    } else {
        expandedKey_d0 =  (sc_lv<64>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void expandKey::thread_expandedKey_d1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read())) {
        expandedKey_d1 = xor_ln40_reg_1079.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        expandedKey_d1 = xor_ln38_reg_1069.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        expandedKey_d1 = xor_ln36_reg_1057.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        expandedKey_d1 = xor_ln34_reg_1045.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        expandedKey_d1 = xor_ln32_reg_1033.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        expandedKey_d1 = xor_ln30_reg_1021.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        expandedKey_d1 = expandedKey_load_6_reg_939.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        expandedKey_d1 = reg_403.read();
    } else {
        expandedKey_d1 =  (sc_lv<64>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void expandKey::thread_expandedKey_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()))) {
        expandedKey_we0 = ap_const_logic_1;
    } else {
        expandedKey_we0 = ap_const_logic_0;
    }
}

void expandKey::thread_expandedKey_we1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()))) {
        expandedKey_we1 = ap_const_logic_1;
    } else {
        expandedKey_we1 = ap_const_logic_0;
    }
}

void expandKey::thread_icmp_ln22_fu_414_p2() {
    icmp_ln22_fu_414_p2 = (!ii_0_reg_381.read().is_01() || !ap_const_lv5_10.is_01())? sc_lv<1>(): sc_lv<1>(ii_0_reg_381.read() == ap_const_lv5_10);
}

void expandKey::thread_icmp_ln24_fu_431_p2() {
    icmp_ln24_fu_431_p2 = (!ii_1_reg_392.read().is_01() || !ap_const_lv4_B.is_01())? sc_lv<1>(): sc_lv<1>(ii_1_reg_392.read() == ap_const_lv4_B);
}

void expandKey::thread_ii_2_fu_467_p2() {
    ii_2_fu_467_p2 = (!ii_1_reg_392.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(ii_1_reg_392.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void expandKey::thread_ii_fu_420_p2() {
    ii_fu_420_p2 = (!ii_0_reg_381.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(ii_0_reg_381.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void expandKey::thread_key_address0() {
    key_address0 =  (sc_lv<10>) (zext_ln23_fu_426_p1.read());
}

void expandKey::thread_key_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        key_ce0 = ap_const_logic_1;
    } else {
        key_ce0 = ap_const_logic_0;
    }
}

void expandKey::thread_or_ln27_fu_617_p2() {
    or_ln27_fu_617_p2 = (shl_ln_reg_840.read() | ap_const_lv8_1);
}

void expandKey::thread_or_ln28_fu_637_p2() {
    or_ln28_fu_637_p2 = (shl_ln_reg_840.read() | ap_const_lv8_2);
}

void expandKey::thread_or_ln29_fu_647_p2() {
    or_ln29_fu_647_p2 = (shl_ln_reg_840.read() | ap_const_lv8_3);
}

void expandKey::thread_or_ln30_fu_665_p2() {
    or_ln30_fu_665_p2 = (shl_ln_reg_840.read() | ap_const_lv8_4);
}

void expandKey::thread_or_ln31_fu_675_p2() {
    or_ln31_fu_675_p2 = (shl_ln_reg_840.read() | ap_const_lv8_5);
}

void expandKey::thread_or_ln32_fu_693_p2() {
    or_ln32_fu_693_p2 = (shl_ln_reg_840.read() | ap_const_lv8_6);
}

void expandKey::thread_or_ln33_fu_703_p2() {
    or_ln33_fu_703_p2 = (shl_ln_reg_840.read() | ap_const_lv8_7);
}

void expandKey::thread_or_ln34_fu_723_p2() {
    or_ln34_fu_723_p2 = (shl_ln_reg_840.read() | ap_const_lv8_8);
}

void expandKey::thread_or_ln35_fu_733_p2() {
    or_ln35_fu_733_p2 = (shl_ln_reg_840.read() | ap_const_lv8_9);
}

void expandKey::thread_or_ln36_fu_751_p2() {
    or_ln36_fu_751_p2 = (shl_ln_reg_840.read() | ap_const_lv8_A);
}

void expandKey::thread_or_ln37_fu_761_p2() {
    or_ln37_fu_761_p2 = (shl_ln_reg_840.read() | ap_const_lv8_B);
}

void expandKey::thread_or_ln38_fu_779_p2() {
    or_ln38_fu_779_p2 = (shl_ln_reg_840.read() | ap_const_lv8_C);
}

void expandKey::thread_or_ln39_fu_789_p2() {
    or_ln39_fu_789_p2 = (shl_ln_reg_840.read() | ap_const_lv8_D);
}

void expandKey::thread_or_ln40_fu_799_p2() {
    or_ln40_fu_799_p2 = (shl_ln_reg_840.read() | ap_const_lv8_E);
}

void expandKey::thread_or_ln41_fu_809_p2() {
    or_ln41_fu_809_p2 = (shl_ln_reg_840.read() | ap_const_lv8_F);
}

void expandKey::thread_shl_ln_fu_437_p3() {
    shl_ln_fu_437_p3 = esl_concat<4,4>(ii_1_reg_392.read(), ap_const_lv4_0);
}

void expandKey::thread_xor_ln30_fu_627_p2() {
    xor_ln30_fu_627_p2 = (expandedKey_load_8_reg_961.read() ^ reg_403.read());
}

void expandKey::thread_xor_ln31_fu_632_p2() {
    xor_ln31_fu_632_p2 = (expandedKey_load_9_reg_966.read() ^ reg_408.read());
}

void expandKey::thread_xor_ln32_fu_657_p2() {
    xor_ln32_fu_657_p2 = (expandedKey_load_10_reg_981.read() ^ expandedKey_load_6_reg_939.read());
}

void expandKey::thread_xor_ln33_fu_661_p2() {
    xor_ln33_fu_661_p2 = (expandedKey_load_11_reg_986.read() ^ expandedKey_load_7_reg_945.read());
}

void expandKey::thread_xor_ln34_fu_685_p2() {
    xor_ln34_fu_685_p2 = (expandedKey_load_12_reg_1001.read() ^ xor_ln30_reg_1021.read());
}

void expandKey::thread_xor_ln35_fu_689_p2() {
    xor_ln35_fu_689_p2 = (expandedKey_load_13_reg_1006.read() ^ xor_ln31_reg_1027.read());
}

void expandKey::thread_xor_ln36_fu_713_p2() {
    xor_ln36_fu_713_p2 = (reg_403.read() ^ xor_ln32_reg_1033.read());
}

void expandKey::thread_xor_ln37_fu_718_p2() {
    xor_ln37_fu_718_p2 = (reg_408.read() ^ xor_ln33_reg_1039.read());
}

void expandKey::thread_xor_ln38_fu_743_p2() {
    xor_ln38_fu_743_p2 = (expandedKey_load_reg_889.read() ^ xor_ln34_reg_1045.read());
}

void expandKey::thread_xor_ln39_fu_747_p2() {
    xor_ln39_fu_747_p2 = (expandedKey_load_1_reg_894.read() ^ xor_ln35_reg_1051.read());
}

void expandKey::thread_xor_ln40_fu_771_p2() {
    xor_ln40_fu_771_p2 = (expandedKey_load_3_reg_909.read() ^ xor_ln36_reg_1057.read());
}

void expandKey::thread_xor_ln41_fu_775_p2() {
    xor_ln41_fu_775_p2 = (expandedKey_load_5_reg_924.read() ^ xor_ln37_reg_1063.read());
}

void expandKey::thread_zext_ln23_fu_426_p1() {
    zext_ln23_fu_426_p1 = esl_zext<64,5>(ii_0_reg_381.read());
}

void expandKey::thread_zext_ln25_fu_451_p1() {
    zext_ln25_fu_451_p1 = esl_zext<64,8>(add_ln25_fu_445_p2.read());
}

void expandKey::thread_zext_ln26_1_fu_478_p1() {
    zext_ln26_1_fu_478_p1 = esl_zext<64,8>(add_ln26_1_fu_473_p2.read());
}

void expandKey::thread_zext_ln26_2_fu_613_p1() {
    zext_ln26_2_fu_613_p1 = esl_zext<64,8>(shl_ln_reg_840.read());
}

void expandKey::thread_zext_ln26_fu_462_p1() {
    zext_ln26_fu_462_p1 = esl_zext<64,8>(add_ln26_fu_456_p2.read());
}

void expandKey::thread_zext_ln27_1_fu_498_p1() {
    zext_ln27_1_fu_498_p1 = esl_zext<64,8>(add_ln27_1_fu_493_p2.read());
}

void expandKey::thread_zext_ln27_2_fu_622_p1() {
    zext_ln27_2_fu_622_p1 = esl_zext<64,8>(or_ln27_fu_617_p2.read());
}

void expandKey::thread_zext_ln27_fu_488_p1() {
    zext_ln27_fu_488_p1 = esl_zext<64,8>(add_ln27_fu_483_p2.read());
}

void expandKey::thread_zext_ln28_1_fu_518_p1() {
    zext_ln28_1_fu_518_p1 = esl_zext<64,8>(add_ln28_1_fu_513_p2.read());
}

void expandKey::thread_zext_ln28_2_fu_642_p1() {
    zext_ln28_2_fu_642_p1 = esl_zext<64,8>(or_ln28_fu_637_p2.read());
}

void expandKey::thread_zext_ln28_fu_508_p1() {
    zext_ln28_fu_508_p1 = esl_zext<64,8>(add_ln28_fu_503_p2.read());
}

void expandKey::thread_zext_ln29_1_fu_652_p1() {
    zext_ln29_1_fu_652_p1 = esl_zext<64,8>(or_ln29_fu_647_p2.read());
}

void expandKey::thread_zext_ln29_fu_528_p1() {
    zext_ln29_fu_528_p1 = esl_zext<64,8>(add_ln29_fu_523_p2.read());
}

void expandKey::thread_zext_ln30_1_fu_670_p1() {
    zext_ln30_1_fu_670_p1 = esl_zext<64,8>(or_ln30_fu_665_p2.read());
}

void expandKey::thread_zext_ln30_fu_538_p1() {
    zext_ln30_fu_538_p1 = esl_zext<64,8>(add_ln30_fu_533_p2.read());
}

void expandKey::thread_zext_ln31_1_fu_680_p1() {
    zext_ln31_1_fu_680_p1 = esl_zext<64,8>(or_ln31_fu_675_p2.read());
}

void expandKey::thread_zext_ln31_fu_548_p1() {
    zext_ln31_fu_548_p1 = esl_zext<64,8>(add_ln31_fu_543_p2.read());
}

void expandKey::thread_zext_ln32_1_fu_698_p1() {
    zext_ln32_1_fu_698_p1 = esl_zext<64,8>(or_ln32_fu_693_p2.read());
}

void expandKey::thread_zext_ln32_fu_558_p1() {
    zext_ln32_fu_558_p1 = esl_zext<64,8>(add_ln32_fu_553_p2.read());
}

void expandKey::thread_zext_ln33_1_fu_708_p1() {
    zext_ln33_1_fu_708_p1 = esl_zext<64,8>(or_ln33_fu_703_p2.read());
}

void expandKey::thread_zext_ln33_fu_568_p1() {
    zext_ln33_fu_568_p1 = esl_zext<64,8>(add_ln33_fu_563_p2.read());
}

void expandKey::thread_zext_ln34_1_fu_728_p1() {
    zext_ln34_1_fu_728_p1 = esl_zext<64,8>(or_ln34_fu_723_p2.read());
}

void expandKey::thread_zext_ln34_fu_578_p1() {
    zext_ln34_fu_578_p1 = esl_zext<64,8>(add_ln34_fu_573_p2.read());
}

void expandKey::thread_zext_ln35_1_fu_738_p1() {
    zext_ln35_1_fu_738_p1 = esl_zext<64,8>(or_ln35_fu_733_p2.read());
}

void expandKey::thread_zext_ln35_fu_588_p1() {
    zext_ln35_fu_588_p1 = esl_zext<64,8>(add_ln35_fu_583_p2.read());
}

void expandKey::thread_zext_ln36_1_fu_756_p1() {
    zext_ln36_1_fu_756_p1 = esl_zext<64,8>(or_ln36_fu_751_p2.read());
}

void expandKey::thread_zext_ln36_fu_598_p1() {
    zext_ln36_fu_598_p1 = esl_zext<64,8>(add_ln36_fu_593_p2.read());
}

void expandKey::thread_zext_ln37_1_fu_766_p1() {
    zext_ln37_1_fu_766_p1 = esl_zext<64,8>(or_ln37_fu_761_p2.read());
}

void expandKey::thread_zext_ln37_fu_608_p1() {
    zext_ln37_fu_608_p1 = esl_zext<64,8>(add_ln37_fu_603_p2.read());
}

void expandKey::thread_zext_ln38_fu_784_p1() {
    zext_ln38_fu_784_p1 = esl_zext<64,8>(or_ln38_fu_779_p2.read());
}

void expandKey::thread_zext_ln39_fu_794_p1() {
    zext_ln39_fu_794_p1 = esl_zext<64,8>(or_ln39_fu_789_p2.read());
}

void expandKey::thread_zext_ln40_fu_804_p1() {
    zext_ln40_fu_804_p1 = esl_zext<64,8>(or_ln40_fu_799_p2.read());
}

void expandKey::thread_zext_ln41_fu_814_p1() {
    zext_ln41_fu_814_p1 = esl_zext<64,8>(or_ln41_fu_809_p2.read());
}

void expandKey::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln22_fu_414_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state2;
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(icmp_ln24_fu_431_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state12;
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state13;
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_fsm_state14;
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_fsm_state15;
            break;
        case 16384 : 
            ap_NS_fsm = ap_ST_fsm_state16;
            break;
        case 32768 : 
            ap_NS_fsm = ap_ST_fsm_state17;
            break;
        case 65536 : 
            ap_NS_fsm = ap_ST_fsm_state18;
            break;
        case 131072 : 
            ap_NS_fsm = ap_ST_fsm_state19;
            break;
        case 262144 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<19>) ("XXXXXXXXXXXXXXXXXXX");
            break;
    }
}

void expandKey::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"expandedKey_address0\" :  \"" << expandedKey_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"expandedKey_ce0\" :  \"" << expandedKey_ce0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"expandedKey_we0\" :  \"" << expandedKey_we0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"expandedKey_d0\" :  \"" << expandedKey_d0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"expandedKey_q0\" :  \"" << expandedKey_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"expandedKey_address1\" :  \"" << expandedKey_address1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"expandedKey_ce1\" :  \"" << expandedKey_ce1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"expandedKey_we1\" :  \"" << expandedKey_we1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"expandedKey_d1\" :  \"" << expandedKey_d1.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"expandedKey_q1\" :  \"" << expandedKey_q1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"key_address0\" :  \"" << key_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"key_ce0\" :  \"" << key_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"key_q0\" :  \"" << key_q0.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

