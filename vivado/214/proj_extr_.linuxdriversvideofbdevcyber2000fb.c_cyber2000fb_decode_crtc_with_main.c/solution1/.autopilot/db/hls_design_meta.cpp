#include "hls_design_meta.h"
const Port_Property HLS_Design_Meta::port_props[]={
	Port_Property("ap_clk", 1, hls_in, -1, "", "", 1),
	Port_Property("ap_rst", 1, hls_in, -1, "", "", 1),
	Port_Property("ap_start", 1, hls_in, -1, "", "", 1),
	Port_Property("ap_done", 1, hls_out, -1, "", "", 1),
	Port_Property("ap_idle", 1, hls_out, -1, "", "", 1),
	Port_Property("ap_ready", 1, hls_out, -1, "", "", 1),
	Port_Property("hw_crtc_address0", 10, hls_out, 0, "ap_memory", "mem_address", 1),
	Port_Property("hw_crtc_ce0", 1, hls_out, 0, "ap_memory", "mem_ce", 1),
	Port_Property("hw_crtc_we0", 1, hls_out, 0, "ap_memory", "mem_we", 1),
	Port_Property("hw_crtc_d0", 32, hls_out, 0, "ap_memory", "mem_din", 1),
	Port_Property("hw_crtc_address1", 10, hls_out, 0, "ap_memory", "MemPortADDR2", 1),
	Port_Property("hw_crtc_ce1", 1, hls_out, 0, "ap_memory", "MemPortCE2", 1),
	Port_Property("hw_crtc_we1", 1, hls_out, 0, "ap_memory", "MemPortWE2", 1),
	Port_Property("hw_crtc_d1", 32, hls_out, 0, "ap_memory", "MemPortDIN2", 1),
	Port_Property("hw_pitch", 32, hls_in, 1, "ap_none", "in_data", 1),
	Port_Property("hw_crtc_ofl_i", 32, hls_in, 2, "ap_ovld", "in_data", 1),
	Port_Property("hw_crtc_ofl_o", 32, hls_out, 2, "ap_ovld", "out_data", 1),
	Port_Property("hw_crtc_ofl_o_ap_vld", 1, hls_out, 2, "ap_ovld", "out_vld", 1),
	Port_Property("cfb_dummy", 32, hls_in, 3, "ap_none", "in_data", 1),
	Port_Property("var_xres", 32, hls_in, 4, "ap_none", "in_data", 1),
	Port_Property("var_right_margin", 32, hls_in, 5, "ap_none", "in_data", 1),
	Port_Property("var_hsync_len", 32, hls_in, 6, "ap_none", "in_data", 1),
	Port_Property("var_left_margin", 32, hls_in, 7, "ap_none", "in_data", 1),
	Port_Property("var_yres", 32, hls_in, 8, "ap_none", "in_data", 1),
	Port_Property("var_lower_margin", 32, hls_in, 9, "ap_none", "in_data", 1),
	Port_Property("var_vsync_len", 32, hls_in, 10, "ap_none", "in_data", 1),
	Port_Property("var_upper_margin", 32, hls_in, 11, "ap_none", "in_data", 1),
	Port_Property("var_vmode", 32, hls_in, 12, "ap_none", "in_data", 1),
	Port_Property("ap_return", 32, hls_out, -1, "", "", 1),
};
const char* HLS_Design_Meta::dut_name = "cyber2000fb_decode_crtc";
