// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="get_input,hls_ip_2019_1,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7k160t-fbg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.365000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=21,HLS_SYN_FF=2176,HLS_SYN_LUT=3151,HLS_VERSION=2019_1}" *)

module get_input (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        s_depth,
        fft_hdata_re_address0,
        fft_hdata_re_ce0,
        fft_hdata_re_we0,
        fft_hdata_re_d0,
        fft_hdata_re_q0,
        fft_hdata_im_address0,
        fft_hdata_im_ce0,
        fft_hdata_im_we0,
        fft_hdata_im_d0,
        in_data_address0,
        in_data_ce0,
        in_data_q0,
        in_linesize_address0,
        in_linesize_ce0,
        in_linesize_q0,
        w,
        h,
        n,
        plane,
        scale
);

parameter    ap_ST_fsm_state1 = 36'd1;
parameter    ap_ST_fsm_state2 = 36'd2;
parameter    ap_ST_fsm_state3 = 36'd4;
parameter    ap_ST_fsm_state4 = 36'd8;
parameter    ap_ST_fsm_state5 = 36'd16;
parameter    ap_ST_fsm_state6 = 36'd32;
parameter    ap_ST_fsm_state7 = 36'd64;
parameter    ap_ST_fsm_state8 = 36'd128;
parameter    ap_ST_fsm_state9 = 36'd256;
parameter    ap_ST_fsm_state10 = 36'd512;
parameter    ap_ST_fsm_state11 = 36'd1024;
parameter    ap_ST_fsm_state12 = 36'd2048;
parameter    ap_ST_fsm_state13 = 36'd4096;
parameter    ap_ST_fsm_state14 = 36'd8192;
parameter    ap_ST_fsm_state15 = 36'd16384;
parameter    ap_ST_fsm_state16 = 36'd32768;
parameter    ap_ST_fsm_state17 = 36'd65536;
parameter    ap_ST_fsm_state18 = 36'd131072;
parameter    ap_ST_fsm_state19 = 36'd262144;
parameter    ap_ST_fsm_state20 = 36'd524288;
parameter    ap_ST_fsm_state21 = 36'd1048576;
parameter    ap_ST_fsm_state22 = 36'd2097152;
parameter    ap_ST_fsm_state23 = 36'd4194304;
parameter    ap_ST_fsm_state24 = 36'd8388608;
parameter    ap_ST_fsm_state25 = 36'd16777216;
parameter    ap_ST_fsm_state26 = 36'd33554432;
parameter    ap_ST_fsm_state27 = 36'd67108864;
parameter    ap_ST_fsm_state28 = 36'd134217728;
parameter    ap_ST_fsm_state29 = 36'd268435456;
parameter    ap_ST_fsm_state30 = 36'd536870912;
parameter    ap_ST_fsm_state31 = 36'd1073741824;
parameter    ap_ST_fsm_state32 = 36'd2147483648;
parameter    ap_ST_fsm_state33 = 36'd4294967296;
parameter    ap_ST_fsm_state34 = 36'd8589934592;
parameter    ap_ST_fsm_state35 = 36'd17179869184;
parameter    ap_ST_fsm_state36 = 36'd34359738368;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] s_depth;
output  [3:0] fft_hdata_re_address0;
output   fft_hdata_re_ce0;
output   fft_hdata_re_we0;
output  [31:0] fft_hdata_re_d0;
input  [31:0] fft_hdata_re_q0;
output  [3:0] fft_hdata_im_address0;
output   fft_hdata_im_ce0;
output   fft_hdata_im_we0;
output  [31:0] fft_hdata_im_d0;
output  [9:0] in_data_address0;
output   in_data_ce0;
input  [31:0] in_data_q0;
output  [6:0] in_linesize_address0;
output   in_linesize_ce0;
input  [31:0] in_linesize_q0;
input  [31:0] w;
input  [31:0] h;
input  [31:0] n;
input  [31:0] plane;
input  [31:0] scale;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[3:0] fft_hdata_re_address0;
reg fft_hdata_re_ce0;
reg fft_hdata_re_we0;
reg[31:0] fft_hdata_re_d0;
reg[3:0] fft_hdata_im_address0;
reg fft_hdata_im_ce0;
reg fft_hdata_im_we0;
reg[9:0] in_data_address0;
reg in_data_ce0;
reg in_linesize_ce0;

(* fsm_encoding = "none" *) reg   [35:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [31:0] grp_fu_559_p2;
reg   [31:0] reg_576;
wire    ap_CS_fsm_state2;
wire   [0:0] icmp_ln66_fu_777_p2;
wire    ap_CS_fsm_state20;
wire   [0:0] icmp_ln33_fu_1044_p2;
reg   [31:0] reg_580;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_state23;
wire   [31:0] grp_fu_555_p2;
reg   [31:0] reg_585;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state26;
wire   [31:0] iw_fu_644_p3;
reg   [31:0] iw_reg_1325;
wire  signed [31:0] ih_fu_706_p3;
reg  signed [31:0] ih_reg_1333;
wire   [0:0] icmp_ln32_fu_714_p2;
reg   [0:0] icmp_ln32_reg_1344;
wire   [10:0] add_ln37_4_fu_749_p2;
reg   [10:0] add_ln37_4_reg_1348;
reg   [6:0] in_linesize_addr_reg_1354;
wire   [31:0] x_12_fu_755_p2;
reg   [31:0] x_12_reg_1359;
wire   [31:0] add_ln47_fu_761_p2;
reg   [31:0] add_ln47_reg_1365;
wire   [31:0] sub_ln47_fu_767_p2;
reg   [31:0] sub_ln47_reg_1370;
wire   [30:0] y_11_fu_782_p2;
reg   [30:0] y_11_reg_1379;
wire  signed [4:0] trunc_ln67_1_fu_788_p1;
reg  signed [4:0] trunc_ln67_1_reg_1384;
wire  signed [31:0] add_ln70_fu_792_p2;
reg  signed [31:0] add_ln70_reg_1389;
wire   [4:0] mul_ln70_1_fu_801_p2;
reg   [4:0] mul_ln70_1_reg_1394;
wire    ap_CS_fsm_state3;
wire   [31:0] mul_ln70_fu_806_p2;
reg   [31:0] mul_ln70_reg_1399;
wire  signed [31:0] add_ln70_1_fu_810_p2;
reg  signed [31:0] add_ln70_1_reg_1406;
wire   [30:0] x_10_fu_824_p2;
reg   [30:0] x_10_reg_1415;
wire    ap_CS_fsm_state4;
wire   [0:0] icmp_ln69_fu_819_p2;
wire   [31:0] add_ln70_3_fu_853_p2;
reg   [31:0] add_ln70_3_reg_1425;
reg   [3:0] fft_hdata_re_addr_3_reg_1430;
wire   [31:0] zext_ln74_fu_867_p1;
reg   [31:0] zext_ln74_reg_1435;
wire    ap_CS_fsm_state10;
wire   [30:0] x_14_fu_876_p2;
reg   [30:0] x_14_reg_1443;
reg   [3:0] fft_hdata_re_addr_9_reg_1448;
wire   [0:0] icmp_ln74_fu_871_p2;
wire   [31:0] add_ln80_1_fu_906_p2;
reg   [31:0] add_ln80_1_reg_1456;
wire    ap_CS_fsm_state12;
wire   [0:0] icmp_ln79_fu_901_p2;
wire   [31:0] x_18_fu_911_p2;
reg   [31:0] x_18_reg_1461;
wire   [31:0] add_ln85_fu_922_p2;
reg   [31:0] add_ln85_reg_1466;
wire    ap_CS_fsm_state14;
wire   [30:0] y_14_fu_936_p2;
reg   [30:0] y_14_reg_1474;
wire   [31:0] grp_fu_563_p2;
wire   [0:0] icmp_ln85_fu_931_p2;
wire   [31:0] grp_fu_571_p2;
reg   [31:0] mul_ln94_reg_1484;
wire   [30:0] x_15_fu_951_p2;
reg   [30:0] x_15_reg_1492;
wire    ap_CS_fsm_state15;
wire   [0:0] icmp_ln86_fu_946_p2;
wire   [31:0] add_ln87_1_fu_968_p2;
reg   [31:0] add_ln87_1_reg_1502;
wire   [31:0] mul_ln94_1_fu_984_p2;
reg   [31:0] mul_ln94_1_reg_1510;
wire    ap_CS_fsm_state17;
wire   [0:0] icmp_ln92_fu_979_p2;
wire   [31:0] mul_ln61_1_fu_994_p2;
reg   [31:0] mul_ln61_1_reg_1518;
wire   [0:0] icmp_ln59_fu_989_p2;
wire   [30:0] x_19_fu_1008_p2;
reg   [30:0] x_19_reg_1526;
wire    ap_CS_fsm_state18;
wire   [0:0] icmp_ln93_fu_1003_p2;
wire   [31:0] add_ln94_1_fu_1024_p2;
reg   [31:0] add_ln94_1_reg_1536;
wire   [31:0] y_17_fu_1029_p2;
wire   [30:0] y_9_fu_1049_p2;
reg   [30:0] y_9_reg_1549;
wire  signed [4:0] trunc_ln34_1_fu_1055_p1;
reg  signed [4:0] trunc_ln34_1_reg_1554;
wire  signed [31:0] add_ln37_fu_1059_p2;
reg  signed [31:0] add_ln37_reg_1559;
wire   [4:0] mul_ln37_1_fu_1068_p2;
reg   [4:0] mul_ln37_1_reg_1564;
wire    ap_CS_fsm_state21;
wire   [31:0] mul_ln37_fu_1073_p2;
reg   [31:0] mul_ln37_reg_1569;
wire  signed [31:0] add_ln37_1_fu_1077_p2;
reg  signed [31:0] add_ln37_1_reg_1576;
wire   [30:0] x_fu_1091_p2;
reg   [30:0] x_reg_1585;
wire    ap_CS_fsm_state22;
wire   [0:0] icmp_ln36_fu_1086_p2;
wire   [31:0] add_ln37_3_fu_1120_p2;
reg   [31:0] add_ln37_3_reg_1595;
reg   [3:0] fft_hdata_re_addr_1_reg_1600;
wire   [31:0] zext_ln41_fu_1134_p1;
reg   [31:0] zext_ln41_reg_1605;
wire    ap_CS_fsm_state28;
wire   [30:0] x_11_fu_1143_p2;
reg   [30:0] x_11_reg_1613;
reg   [3:0] fft_hdata_re_addr_5_reg_1618;
wire   [0:0] icmp_ln41_fu_1138_p2;
wire   [31:0] add_ln47_2_fu_1173_p2;
reg   [31:0] add_ln47_2_reg_1626;
wire    ap_CS_fsm_state30;
wire   [0:0] icmp_ln46_fu_1168_p2;
wire   [31:0] x_16_fu_1178_p2;
reg   [31:0] x_16_reg_1631;
wire   [31:0] add_ln52_fu_1189_p2;
reg   [31:0] add_ln52_reg_1636;
wire    ap_CS_fsm_state32;
wire   [30:0] y_13_fu_1203_p2;
reg   [30:0] y_13_reg_1644;
wire   [0:0] icmp_ln52_fu_1198_p2;
reg   [31:0] mul_ln61_reg_1654;
wire   [30:0] x_13_fu_1218_p2;
reg   [30:0] x_13_reg_1662;
wire    ap_CS_fsm_state33;
wire   [0:0] icmp_ln53_fu_1213_p2;
wire   [31:0] add_ln54_1_fu_1235_p2;
reg   [31:0] add_ln54_1_reg_1672;
wire   [30:0] x_17_fu_1255_p2;
reg   [30:0] x_17_reg_1680;
wire    ap_CS_fsm_state35;
wire   [0:0] icmp_ln60_fu_1250_p2;
wire   [31:0] add_ln61_1_fu_1271_p2;
reg   [31:0] add_ln61_1_reg_1690;
wire   [31:0] y_16_fu_1276_p2;
reg   [30:0] y_3_reg_361;
reg   [30:0] x_5_reg_372;
wire    ap_CS_fsm_state9;
reg   [30:0] x_6_reg_383;
wire    ap_CS_fsm_state11;
reg   [31:0] x_7_reg_394;
wire    ap_CS_fsm_state13;
reg   [30:0] y_4_reg_403;
reg   [31:0] phi_mul4_reg_414;
reg   [30:0] x_8_reg_426;
wire    ap_CS_fsm_state16;
reg  signed [31:0] y_5_reg_437;
reg  signed [31:0] y_2_reg_447;
reg   [30:0] x_9_reg_457;
wire    ap_CS_fsm_state19;
reg   [30:0] y_0_reg_468;
reg   [30:0] x_0_reg_479;
wire    ap_CS_fsm_state27;
reg   [30:0] x_1_reg_490;
wire    ap_CS_fsm_state29;
reg   [31:0] x_2_reg_501;
wire    ap_CS_fsm_state31;
reg   [30:0] y_1_reg_510;
reg   [31:0] phi_mul_reg_521;
reg   [30:0] x_3_reg_533;
wire    ap_CS_fsm_state34;
reg   [30:0] x_4_reg_544;
wire    ap_CS_fsm_state36;
wire  signed [63:0] sext_ln34_fu_720_p1;
wire  signed [63:0] sext_ln70_2_fu_848_p1;
wire  signed [63:0] sext_ln75_fu_858_p1;
wire  signed [63:0] sext_ln70_fu_862_p1;
wire  signed [63:0] sext_ln80_fu_886_p1;
wire  signed [63:0] sext_ln75_1_fu_895_p1;
wire  signed [63:0] sext_ln80_1_fu_917_p1;
wire  signed [63:0] sext_ln87_fu_963_p1;
wire  signed [63:0] sext_ln87_1_fu_974_p1;
wire  signed [63:0] sext_ln94_fu_1019_p1;
wire  signed [63:0] sext_ln94_1_fu_1035_p1;
wire  signed [63:0] sext_ln37_2_fu_1115_p1;
wire  signed [63:0] sext_ln42_fu_1125_p1;
wire  signed [63:0] sext_ln37_fu_1129_p1;
wire  signed [63:0] sext_ln47_fu_1153_p1;
wire  signed [63:0] sext_ln42_1_fu_1162_p1;
wire  signed [63:0] sext_ln47_1_fu_1184_p1;
wire  signed [63:0] sext_ln54_fu_1230_p1;
wire  signed [63:0] sext_ln54_1_fu_1241_p1;
wire  signed [63:0] sext_ln61_fu_1266_p1;
wire  signed [63:0] sext_ln61_1_fu_1282_p1;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state24;
wire  signed [31:0] grp_fu_559_p1;
wire  signed [31:0] grp_fu_563_p0;
wire  signed [31:0] grp_fu_567_p2;
wire  signed [31:0] grp_fu_571_p1;
wire  signed [31:0] sub_ln29_fu_590_p0;
wire   [31:0] sub_ln29_fu_590_p2;
wire   [31:0] sub_ln29_2_fu_604_p2;
wire   [30:0] lshr_ln29_1_fu_610_p4;
wire   [31:0] zext_ln29_fu_620_p1;
wire   [30:0] lshr_ln29_2_fu_630_p4;
wire   [0:0] tmp_2_fu_596_p3;
wire   [31:0] sub_ln29_3_fu_624_p2;
wire   [31:0] zext_ln29_1_fu_640_p1;
wire  signed [31:0] sub_ln29_1_fu_652_p0;
wire   [31:0] sub_ln29_1_fu_652_p2;
wire   [31:0] sub_ln29_4_fu_666_p2;
wire   [30:0] lshr_ln29_4_fu_672_p4;
wire   [31:0] zext_ln29_2_fu_682_p1;
wire   [30:0] lshr_ln29_5_fu_692_p4;
wire   [0:0] tmp_3_fu_658_p3;
wire   [31:0] sub_ln29_5_fu_686_p2;
wire   [31:0] zext_ln29_3_fu_702_p1;
wire  signed [31:0] sext_ln34_fu_720_p0;
wire  signed [31:0] trunc_ln37_fu_725_p0;
wire   [7:0] trunc_ln37_fu_725_p1;
wire  signed [31:0] trunc_ln37_1_fu_737_p0;
wire   [9:0] trunc_ln37_1_fu_737_p1;
wire   [10:0] sext_ln37_2_cast_fu_729_p3;
wire   [10:0] sext_ln37_3_cast_fu_741_p3;
wire  signed [31:0] x_12_fu_755_p0;
wire  signed [31:0] add_ln47_fu_761_p1;
wire   [31:0] zext_ln66_fu_773_p1;
wire  signed [4:0] trunc_ln67_fu_797_p1;
wire  signed [31:0] mul_ln70_fu_806_p0;
wire   [31:0] zext_ln69_fu_815_p1;
wire   [4:0] trunc_ln70_fu_830_p1;
wire   [4:0] add_ln70_2_fu_834_p2;
wire  signed [10:0] sext_ln70_1_fu_839_p1;
wire   [10:0] add_ln70_4_fu_843_p2;
wire   [31:0] add_ln80_fu_882_p2;
wire   [31:0] add_ln75_fu_891_p2;
wire  signed [31:0] icmp_ln79_fu_901_p1;
wire  signed [31:0] add_ln85_fu_922_p1;
wire   [31:0] zext_ln85_fu_927_p1;
wire   [31:0] zext_ln86_fu_942_p1;
wire  signed [31:0] icmp_ln86_fu_946_p1;
wire   [31:0] add_ln87_fu_957_p2;
wire  signed [31:0] icmp_ln92_fu_979_p1;
wire  signed [31:0] mul_ln94_1_fu_984_p1;
wire  signed [31:0] icmp_ln59_fu_989_p1;
wire  signed [31:0] mul_ln61_1_fu_994_p1;
wire   [31:0] zext_ln93_fu_999_p1;
wire  signed [31:0] icmp_ln93_fu_1003_p1;
wire   [31:0] add_ln94_fu_1014_p2;
wire   [31:0] zext_ln33_fu_1040_p1;
wire  signed [4:0] trunc_ln34_fu_1064_p1;
wire  signed [31:0] mul_ln37_fu_1073_p0;
wire   [31:0] zext_ln36_fu_1082_p1;
wire   [4:0] trunc_ln37_2_fu_1097_p1;
wire   [4:0] add_ln37_2_fu_1101_p2;
wire  signed [10:0] sext_ln37_1_fu_1106_p1;
wire   [10:0] add_ln37_5_fu_1110_p2;
wire   [31:0] add_ln47_1_fu_1149_p2;
wire   [31:0] add_ln42_fu_1158_p2;
wire  signed [31:0] icmp_ln46_fu_1168_p1;
wire  signed [31:0] add_ln52_fu_1189_p1;
wire   [31:0] zext_ln52_fu_1194_p1;
wire   [31:0] zext_ln53_fu_1209_p1;
wire  signed [31:0] icmp_ln53_fu_1213_p1;
wire   [31:0] add_ln54_fu_1224_p2;
wire   [31:0] zext_ln60_fu_1246_p1;
wire  signed [31:0] icmp_ln60_fu_1250_p1;
wire   [31:0] add_ln61_fu_1261_p2;
reg   [35:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 36'd1;
end

get_input_fmul_32ns_32ns_32_3_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
get_input_fmul_32ns_32ns_32_3_max_dsp_1_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_580),
    .din1(scale),
    .ce(1'b1),
    .dout(grp_fu_555_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln86_fu_946_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state15))) begin
        phi_mul4_reg_414 <= add_ln85_reg_1466;
    end else if (((icmp_ln66_fu_777_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        phi_mul4_reg_414 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln53_fu_1213_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state33))) begin
        phi_mul_reg_521 <= add_ln52_reg_1636;
    end else if (((icmp_ln33_fu_1044_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state20))) begin
        phi_mul_reg_521 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        x_0_reg_479 <= x_reg_1585;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        x_0_reg_479 <= 31'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln36_fu_1086_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state22))) begin
        x_1_reg_490 <= 31'd0;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        x_1_reg_490 <= x_11_reg_1613;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        x_2_reg_501 <= x_16_reg_1631;
    end else if (((icmp_ln41_fu_1138_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state28))) begin
        x_2_reg_501 <= x_12_reg_1359;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state32) & (icmp_ln52_fu_1198_p2 == 1'd1))) begin
        x_3_reg_533 <= 31'd0;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        x_3_reg_533 <= x_13_reg_1662;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state17) & (icmp_ln59_fu_989_p2 == 1'd1) & (icmp_ln32_reg_1344 == 1'd1))) begin
        x_4_reg_544 <= 31'd0;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        x_4_reg_544 <= x_17_reg_1680;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        x_5_reg_372 <= x_10_reg_1415;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        x_5_reg_372 <= 31'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln69_fu_819_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        x_6_reg_383 <= 31'd0;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        x_6_reg_383 <= x_14_reg_1443;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        x_7_reg_394 <= x_18_reg_1461;
    end else if (((icmp_ln74_fu_871_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state10))) begin
        x_7_reg_394 <= x_12_reg_1359;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state14) & (icmp_ln85_fu_931_p2 == 1'd1))) begin
        x_8_reg_426 <= 31'd0;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        x_8_reg_426 <= x_15_reg_1492;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln32_reg_1344 == 1'd0) & (1'b1 == ap_CS_fsm_state17) & (icmp_ln92_fu_979_p2 == 1'd1))) begin
        x_9_reg_457 <= 31'd0;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        x_9_reg_457 <= x_19_reg_1526;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (icmp_ln32_fu_714_p2 == 1'd1))) begin
        y_0_reg_468 <= 31'd0;
    end else if (((icmp_ln46_fu_1168_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state30))) begin
        y_0_reg_468 <= y_9_reg_1549;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln53_fu_1213_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state33))) begin
        y_1_reg_510 <= y_13_reg_1644;
    end else if (((icmp_ln33_fu_1044_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state20))) begin
        y_1_reg_510 <= 31'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln60_fu_1250_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state35))) begin
        y_2_reg_447 <= y_16_fu_1276_p2;
    end else if (((icmp_ln52_fu_1198_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state32))) begin
        y_2_reg_447 <= grp_fu_563_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln32_fu_714_p2 == 1'd0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        y_3_reg_361 <= 31'd0;
    end else if (((icmp_ln79_fu_901_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state12))) begin
        y_3_reg_361 <= y_11_reg_1379;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln86_fu_946_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state15))) begin
        y_4_reg_403 <= y_14_reg_1474;
    end else if (((icmp_ln66_fu_777_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        y_4_reg_403 <= 31'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln93_fu_1003_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state18))) begin
        y_5_reg_437 <= y_17_fu_1029_p2;
    end else if (((icmp_ln85_fu_931_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state14))) begin
        y_5_reg_437 <= grp_fu_563_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        add_ln37_1_reg_1576 <= add_ln37_1_fu_1077_p2;
        mul_ln37_1_reg_1564 <= mul_ln37_1_fu_1068_p2;
        mul_ln37_reg_1569 <= mul_ln37_fu_1073_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state22) & (icmp_ln36_fu_1086_p2 == 1'd1))) begin
        add_ln37_3_reg_1595 <= add_ln37_3_fu_1120_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        add_ln37_4_reg_1348[10 : 1] <= add_ln37_4_fu_749_p2[10 : 1];
        add_ln47_reg_1365 <= add_ln47_fu_761_p2;
        icmp_ln32_reg_1344 <= icmp_ln32_fu_714_p2;
        ih_reg_1333 <= ih_fu_706_p3;
        in_linesize_addr_reg_1354 <= sext_ln34_fu_720_p1;
        iw_reg_1325 <= iw_fu_644_p3;
        sub_ln47_reg_1370 <= sub_ln47_fu_767_p2;
        x_12_reg_1359 <= x_12_fu_755_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state20) & (icmp_ln33_fu_1044_p2 == 1'd1))) begin
        add_ln37_reg_1559 <= add_ln37_fu_1059_p2;
        trunc_ln34_1_reg_1554 <= trunc_ln34_1_fu_1055_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state30) & (icmp_ln46_fu_1168_p2 == 1'd1))) begin
        add_ln47_2_reg_1626 <= add_ln47_2_fu_1173_p2;
        x_16_reg_1631 <= x_16_fu_1178_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        add_ln52_reg_1636 <= add_ln52_fu_1189_p2;
        y_13_reg_1644 <= y_13_fu_1203_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state33) & (icmp_ln53_fu_1213_p2 == 1'd1))) begin
        add_ln54_1_reg_1672 <= add_ln54_1_fu_1235_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state35) & (icmp_ln60_fu_1250_p2 == 1'd1))) begin
        add_ln61_1_reg_1690 <= add_ln61_1_fu_1271_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        add_ln70_1_reg_1406 <= add_ln70_1_fu_810_p2;
        mul_ln70_1_reg_1394 <= mul_ln70_1_fu_801_p2;
        mul_ln70_reg_1399 <= mul_ln70_fu_806_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln69_fu_819_p2 == 1'd1))) begin
        add_ln70_3_reg_1425 <= add_ln70_3_fu_853_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln66_fu_777_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        add_ln70_reg_1389 <= add_ln70_fu_792_p2;
        trunc_ln67_1_reg_1384 <= trunc_ln67_1_fu_788_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state12) & (icmp_ln79_fu_901_p2 == 1'd1))) begin
        add_ln80_1_reg_1456 <= add_ln80_1_fu_906_p2;
        x_18_reg_1461 <= x_18_fu_911_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        add_ln85_reg_1466 <= add_ln85_fu_922_p2;
        y_14_reg_1474 <= y_14_fu_936_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state15) & (icmp_ln86_fu_946_p2 == 1'd1))) begin
        add_ln87_1_reg_1502 <= add_ln87_1_fu_968_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state18) & (icmp_ln93_fu_1003_p2 == 1'd1))) begin
        add_ln94_1_reg_1536 <= add_ln94_1_fu_1024_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln36_fu_1086_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state22))) begin
        fft_hdata_re_addr_1_reg_1600 <= sext_ln42_fu_1125_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln69_fu_819_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        fft_hdata_re_addr_3_reg_1430 <= sext_ln75_fu_858_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln41_fu_1138_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state28))) begin
        fft_hdata_re_addr_5_reg_1618 <= sext_ln47_fu_1153_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln74_fu_871_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state10))) begin
        fft_hdata_re_addr_9_reg_1448 <= sext_ln80_fu_886_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state17) & (icmp_ln59_fu_989_p2 == 1'd1) & (icmp_ln32_reg_1344 == 1'd1))) begin
        mul_ln61_1_reg_1518 <= mul_ln61_1_fu_994_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln52_fu_1198_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state32))) begin
        mul_ln61_reg_1654 <= grp_fu_571_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln32_reg_1344 == 1'd0) & (1'b1 == ap_CS_fsm_state17) & (icmp_ln92_fu_979_p2 == 1'd1))) begin
        mul_ln94_1_reg_1510 <= mul_ln94_1_fu_984_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln85_fu_931_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state14))) begin
        mul_ln94_reg_1484 <= grp_fu_571_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln66_fu_777_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)) | ((icmp_ln33_fu_1044_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state20)))) begin
        reg_576 <= grp_fu_559_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state5))) begin
        reg_580 <= in_data_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state8))) begin
        reg_585 <= grp_fu_555_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        x_10_reg_1415 <= x_10_fu_824_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        x_11_reg_1613 <= x_11_fu_1143_p2;
        zext_ln41_reg_1605[30 : 0] <= zext_ln41_fu_1134_p1[30 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        x_13_reg_1662 <= x_13_fu_1218_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        x_14_reg_1443 <= x_14_fu_876_p2;
        zext_ln74_reg_1435[30 : 0] <= zext_ln74_fu_867_p1[30 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        x_15_reg_1492 <= x_15_fu_951_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        x_17_reg_1680 <= x_17_fu_1255_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        x_19_reg_1526 <= x_19_fu_1008_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        x_reg_1585 <= x_fu_1091_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        y_11_reg_1379 <= y_11_fu_782_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        y_9_reg_1549 <= y_9_fu_1049_p2;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) & (((icmp_ln59_fu_989_p2 == 1'd0) & (icmp_ln32_reg_1344 == 1'd1)) | ((icmp_ln92_fu_979_p2 == 1'd0) & (icmp_ln32_reg_1344 == 1'd0))))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) & (((icmp_ln59_fu_989_p2 == 1'd0) & (icmp_ln32_reg_1344 == 1'd1)) | ((icmp_ln92_fu_979_p2 == 1'd0) & (icmp_ln32_reg_1344 == 1'd0))))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        fft_hdata_im_address0 = sext_ln61_1_fu_1282_p1;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        fft_hdata_im_address0 = sext_ln54_1_fu_1241_p1;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        fft_hdata_im_address0 = sext_ln47_1_fu_1184_p1;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        fft_hdata_im_address0 = sext_ln42_1_fu_1162_p1;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        fft_hdata_im_address0 = sext_ln37_fu_1129_p1;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        fft_hdata_im_address0 = sext_ln94_1_fu_1035_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        fft_hdata_im_address0 = sext_ln87_1_fu_974_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        fft_hdata_im_address0 = sext_ln80_1_fu_917_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        fft_hdata_im_address0 = sext_ln75_1_fu_895_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        fft_hdata_im_address0 = sext_ln70_fu_862_p1;
    end else begin
        fft_hdata_im_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state9))) begin
        fft_hdata_im_ce0 = 1'b1;
    end else begin
        fft_hdata_im_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state9))) begin
        fft_hdata_im_we0 = 1'b1;
    end else begin
        fft_hdata_im_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        fft_hdata_re_address0 = sext_ln61_1_fu_1282_p1;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        fft_hdata_re_address0 = sext_ln61_fu_1266_p1;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        fft_hdata_re_address0 = sext_ln54_1_fu_1241_p1;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        fft_hdata_re_address0 = sext_ln54_fu_1230_p1;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        fft_hdata_re_address0 = sext_ln47_1_fu_1184_p1;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        fft_hdata_re_address0 = fft_hdata_re_addr_5_reg_1618;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        fft_hdata_re_address0 = sext_ln42_1_fu_1162_p1;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        fft_hdata_re_address0 = fft_hdata_re_addr_1_reg_1600;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        fft_hdata_re_address0 = sext_ln37_fu_1129_p1;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        fft_hdata_re_address0 = sext_ln94_1_fu_1035_p1;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        fft_hdata_re_address0 = sext_ln94_fu_1019_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        fft_hdata_re_address0 = sext_ln87_1_fu_974_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        fft_hdata_re_address0 = sext_ln87_fu_963_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        fft_hdata_re_address0 = sext_ln80_1_fu_917_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        fft_hdata_re_address0 = fft_hdata_re_addr_9_reg_1448;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        fft_hdata_re_address0 = sext_ln75_1_fu_895_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        fft_hdata_re_address0 = fft_hdata_re_addr_3_reg_1430;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        fft_hdata_re_address0 = sext_ln70_fu_862_p1;
    end else begin
        fft_hdata_re_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state10))) begin
        fft_hdata_re_ce0 = 1'b1;
    end else begin
        fft_hdata_re_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state11))) begin
        fft_hdata_re_d0 = fft_hdata_re_q0;
    end else if (((1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state9))) begin
        fft_hdata_re_d0 = reg_585;
    end else begin
        fft_hdata_re_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state9))) begin
        fft_hdata_re_we0 = 1'b1;
    end else begin
        fft_hdata_re_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        in_data_address0 = sext_ln37_2_fu_1115_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        in_data_address0 = sext_ln70_2_fu_848_p1;
    end else begin
        in_data_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state4))) begin
        in_data_ce0 = 1'b1;
    end else begin
        in_data_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state20))) begin
        in_linesize_ce0 = 1'b1;
    end else begin
        in_linesize_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (icmp_ln32_fu_714_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end else if (((icmp_ln32_fu_714_p2 == 1'd0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln66_fu_777_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if (((icmp_ln69_fu_819_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state10 : begin
            if (((icmp_ln74_fu_871_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state10))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state12 : begin
            if (((icmp_ln79_fu_901_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state12))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state14 : begin
            if (((icmp_ln85_fu_931_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state14))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end
        end
        ap_ST_fsm_state15 : begin
            if (((icmp_ln86_fu_946_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state15))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state17 : begin
            if (((1'b1 == ap_CS_fsm_state17) & (((icmp_ln59_fu_989_p2 == 1'd0) & (icmp_ln32_reg_1344 == 1'd1)) | ((icmp_ln92_fu_979_p2 == 1'd0) & (icmp_ln32_reg_1344 == 1'd0))))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else if (((1'b1 == ap_CS_fsm_state17) & (icmp_ln59_fu_989_p2 == 1'd1) & (icmp_ln32_reg_1344 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state35;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end
        end
        ap_ST_fsm_state18 : begin
            if (((icmp_ln93_fu_1003_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state18))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state20 : begin
            if (((icmp_ln33_fu_1044_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state20))) begin
                ap_NS_fsm = ap_ST_fsm_state32;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            if (((icmp_ln36_fu_1086_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state22))) begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state28 : begin
            if (((icmp_ln41_fu_1138_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state28))) begin
                ap_NS_fsm = ap_ST_fsm_state30;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state30 : begin
            if (((icmp_ln46_fu_1168_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state30))) begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state31;
            end
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state32 : begin
            if (((icmp_ln52_fu_1198_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state32))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state33;
            end
        end
        ap_ST_fsm_state33 : begin
            if (((icmp_ln53_fu_1213_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state33))) begin
                ap_NS_fsm = ap_ST_fsm_state32;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state34;
            end
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state35 : begin
            if (((icmp_ln60_fu_1250_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state35))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state36;
            end
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln37_1_fu_1077_p2 = (mul_ln37_fu_1073_p2 + iw_reg_1325);

assign add_ln37_2_fu_1101_p2 = (trunc_ln37_2_fu_1097_p1 + mul_ln37_1_reg_1564);

assign add_ln37_3_fu_1120_p2 = ($signed(zext_ln36_fu_1082_p1) + $signed(add_ln37_1_reg_1576));

assign add_ln37_4_fu_749_p2 = (sext_ln37_2_cast_fu_729_p3 + sext_ln37_3_cast_fu_741_p3);

assign add_ln37_5_fu_1110_p2 = ($signed(add_ln37_4_reg_1348) + $signed(sext_ln37_1_fu_1106_p1));

assign add_ln37_fu_1059_p2 = ($signed(zext_ln33_fu_1040_p1) + $signed(ih_reg_1333));

assign add_ln42_fu_1158_p2 = (zext_ln41_reg_1605 + mul_ln37_reg_1569);

assign add_ln47_1_fu_1149_p2 = (sub_ln47_reg_1370 + mul_ln37_reg_1569);

assign add_ln47_2_fu_1173_p2 = (x_2_reg_501 + mul_ln37_reg_1569);

assign add_ln47_fu_761_p1 = n;

assign add_ln47_fu_761_p2 = ($signed(32'd4294967295) + $signed(add_ln47_fu_761_p1));

assign add_ln52_fu_1189_p1 = n;

assign add_ln52_fu_1189_p2 = ($signed(phi_mul_reg_521) + $signed(add_ln52_fu_1189_p1));

assign add_ln54_1_fu_1235_p2 = (zext_ln53_fu_1209_p1 + phi_mul_reg_521);

assign add_ln54_fu_1224_p2 = (zext_ln53_fu_1209_p1 + reg_576);

assign add_ln61_1_fu_1271_p2 = (zext_ln60_fu_1246_p1 + mul_ln61_1_reg_1518);

assign add_ln61_fu_1261_p2 = (zext_ln60_fu_1246_p1 + mul_ln61_reg_1654);

assign add_ln70_1_fu_810_p2 = (mul_ln70_fu_806_p2 + iw_reg_1325);

assign add_ln70_2_fu_834_p2 = (trunc_ln70_fu_830_p1 + mul_ln70_1_reg_1394);

assign add_ln70_3_fu_853_p2 = ($signed(zext_ln69_fu_815_p1) + $signed(add_ln70_1_reg_1406));

assign add_ln70_4_fu_843_p2 = ($signed(add_ln37_4_reg_1348) + $signed(sext_ln70_1_fu_839_p1));

assign add_ln70_fu_792_p2 = ($signed(zext_ln66_fu_773_p1) + $signed(ih_reg_1333));

assign add_ln75_fu_891_p2 = (zext_ln74_reg_1435 + mul_ln70_reg_1399);

assign add_ln80_1_fu_906_p2 = (x_7_reg_394 + mul_ln70_reg_1399);

assign add_ln80_fu_882_p2 = (sub_ln47_reg_1370 + mul_ln70_reg_1399);

assign add_ln85_fu_922_p1 = n;

assign add_ln85_fu_922_p2 = ($signed(phi_mul4_reg_414) + $signed(add_ln85_fu_922_p1));

assign add_ln87_1_fu_968_p2 = (zext_ln86_fu_942_p1 + phi_mul4_reg_414);

assign add_ln87_fu_957_p2 = (zext_ln86_fu_942_p1 + reg_576);

assign add_ln94_1_fu_1024_p2 = (zext_ln93_fu_999_p1 + mul_ln94_1_reg_1510);

assign add_ln94_fu_1014_p2 = (zext_ln93_fu_999_p1 + mul_ln94_reg_1484);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign fft_hdata_im_d0 = 32'd0;

assign grp_fu_559_p1 = n;

assign grp_fu_559_p2 = ($signed(ih_reg_1333) * $signed(grp_fu_559_p1));

assign grp_fu_563_p0 = n;

assign grp_fu_563_p2 = ($signed(grp_fu_563_p0) - $signed(ih_reg_1333));

assign grp_fu_567_p2 = ($signed(add_ln47_reg_1365) - $signed(ih_reg_1333));

assign grp_fu_571_p1 = n;

assign grp_fu_571_p2 = ($signed(grp_fu_567_p2) * $signed(grp_fu_571_p1));

assign icmp_ln32_fu_714_p2 = ((s_depth == 32'd8) ? 1'b1 : 1'b0);

assign icmp_ln33_fu_1044_p2 = (($signed(zext_ln33_fu_1040_p1) < $signed(h)) ? 1'b1 : 1'b0);

assign icmp_ln36_fu_1086_p2 = (($signed(zext_ln36_fu_1082_p1) < $signed(w)) ? 1'b1 : 1'b0);

assign icmp_ln41_fu_1138_p2 = (($signed(zext_ln41_fu_1134_p1) < $signed(iw_reg_1325)) ? 1'b1 : 1'b0);

assign icmp_ln46_fu_1168_p1 = n;

assign icmp_ln46_fu_1168_p2 = (($signed(x_2_reg_501) < $signed(icmp_ln46_fu_1168_p1)) ? 1'b1 : 1'b0);

assign icmp_ln52_fu_1198_p2 = (($signed(zext_ln52_fu_1194_p1) < $signed(ih_reg_1333)) ? 1'b1 : 1'b0);

assign icmp_ln53_fu_1213_p1 = n;

assign icmp_ln53_fu_1213_p2 = (($signed(zext_ln53_fu_1209_p1) < $signed(icmp_ln53_fu_1213_p1)) ? 1'b1 : 1'b0);

assign icmp_ln59_fu_989_p1 = n;

assign icmp_ln59_fu_989_p2 = (($signed(y_2_reg_447) < $signed(icmp_ln59_fu_989_p1)) ? 1'b1 : 1'b0);

assign icmp_ln60_fu_1250_p1 = n;

assign icmp_ln60_fu_1250_p2 = (($signed(zext_ln60_fu_1246_p1) < $signed(icmp_ln60_fu_1250_p1)) ? 1'b1 : 1'b0);

assign icmp_ln66_fu_777_p2 = (($signed(zext_ln66_fu_773_p1) < $signed(h)) ? 1'b1 : 1'b0);

assign icmp_ln69_fu_819_p2 = (($signed(zext_ln69_fu_815_p1) < $signed(w)) ? 1'b1 : 1'b0);

assign icmp_ln74_fu_871_p2 = (($signed(zext_ln74_fu_867_p1) < $signed(iw_reg_1325)) ? 1'b1 : 1'b0);

assign icmp_ln79_fu_901_p1 = n;

assign icmp_ln79_fu_901_p2 = (($signed(x_7_reg_394) < $signed(icmp_ln79_fu_901_p1)) ? 1'b1 : 1'b0);

assign icmp_ln85_fu_931_p2 = (($signed(zext_ln85_fu_927_p1) < $signed(ih_reg_1333)) ? 1'b1 : 1'b0);

assign icmp_ln86_fu_946_p1 = n;

assign icmp_ln86_fu_946_p2 = (($signed(zext_ln86_fu_942_p1) < $signed(icmp_ln86_fu_946_p1)) ? 1'b1 : 1'b0);

assign icmp_ln92_fu_979_p1 = n;

assign icmp_ln92_fu_979_p2 = (($signed(y_5_reg_437) < $signed(icmp_ln92_fu_979_p1)) ? 1'b1 : 1'b0);

assign icmp_ln93_fu_1003_p1 = n;

assign icmp_ln93_fu_1003_p2 = (($signed(zext_ln93_fu_999_p1) < $signed(icmp_ln93_fu_1003_p1)) ? 1'b1 : 1'b0);

assign ih_fu_706_p3 = ((tmp_3_fu_658_p3[0:0] === 1'b1) ? sub_ln29_5_fu_686_p2 : zext_ln29_3_fu_702_p1);

assign in_linesize_address0 = in_linesize_addr_reg_1354;

assign iw_fu_644_p3 = ((tmp_2_fu_596_p3[0:0] === 1'b1) ? sub_ln29_3_fu_624_p2 : zext_ln29_1_fu_640_p1);

assign lshr_ln29_1_fu_610_p4 = {{sub_ln29_2_fu_604_p2[31:1]}};

assign lshr_ln29_2_fu_630_p4 = {{sub_ln29_fu_590_p2[31:1]}};

assign lshr_ln29_4_fu_672_p4 = {{sub_ln29_4_fu_666_p2[31:1]}};

assign lshr_ln29_5_fu_692_p4 = {{sub_ln29_1_fu_652_p2[31:1]}};

assign mul_ln37_1_fu_1068_p2 = ($signed(trunc_ln34_fu_1064_p1) * $signed(trunc_ln34_1_reg_1554));

assign mul_ln37_fu_1073_p0 = n;

assign mul_ln37_fu_1073_p2 = ($signed(mul_ln37_fu_1073_p0) * $signed(add_ln37_reg_1559));

assign mul_ln61_1_fu_994_p1 = n;

assign mul_ln61_1_fu_994_p2 = ($signed(y_2_reg_447) * $signed(mul_ln61_1_fu_994_p1));

assign mul_ln70_1_fu_801_p2 = ($signed(trunc_ln67_fu_797_p1) * $signed(trunc_ln67_1_reg_1384));

assign mul_ln70_fu_806_p0 = n;

assign mul_ln70_fu_806_p2 = ($signed(mul_ln70_fu_806_p0) * $signed(add_ln70_reg_1389));

assign mul_ln94_1_fu_984_p1 = n;

assign mul_ln94_1_fu_984_p2 = ($signed(y_5_reg_437) * $signed(mul_ln94_1_fu_984_p1));

assign sext_ln34_fu_720_p0 = plane;

assign sext_ln34_fu_720_p1 = sext_ln34_fu_720_p0;

assign sext_ln37_1_fu_1106_p1 = $signed(add_ln37_2_fu_1101_p2);

assign sext_ln37_2_cast_fu_729_p3 = {{trunc_ln37_fu_725_p1}, {3'd0}};

assign sext_ln37_2_fu_1115_p1 = $signed(add_ln37_5_fu_1110_p2);

assign sext_ln37_3_cast_fu_741_p3 = {{trunc_ln37_1_fu_737_p1}, {1'd0}};

assign sext_ln37_fu_1129_p1 = $signed(add_ln37_3_reg_1595);

assign sext_ln42_1_fu_1162_p1 = $signed(add_ln42_fu_1158_p2);

assign sext_ln42_fu_1125_p1 = add_ln37_1_reg_1576;

assign sext_ln47_1_fu_1184_p1 = $signed(add_ln47_2_reg_1626);

assign sext_ln47_fu_1153_p1 = $signed(add_ln47_1_fu_1149_p2);

assign sext_ln54_1_fu_1241_p1 = $signed(add_ln54_1_reg_1672);

assign sext_ln54_fu_1230_p1 = $signed(add_ln54_fu_1224_p2);

assign sext_ln61_1_fu_1282_p1 = $signed(add_ln61_1_reg_1690);

assign sext_ln61_fu_1266_p1 = $signed(add_ln61_fu_1261_p2);

assign sext_ln70_1_fu_839_p1 = $signed(add_ln70_2_fu_834_p2);

assign sext_ln70_2_fu_848_p1 = $signed(add_ln70_4_fu_843_p2);

assign sext_ln70_fu_862_p1 = $signed(add_ln70_3_reg_1425);

assign sext_ln75_1_fu_895_p1 = $signed(add_ln75_fu_891_p2);

assign sext_ln75_fu_858_p1 = add_ln70_1_reg_1406;

assign sext_ln80_1_fu_917_p1 = $signed(add_ln80_1_reg_1456);

assign sext_ln80_fu_886_p1 = $signed(add_ln80_fu_882_p2);

assign sext_ln87_1_fu_974_p1 = $signed(add_ln87_1_reg_1502);

assign sext_ln87_fu_963_p1 = $signed(add_ln87_fu_957_p2);

assign sext_ln94_1_fu_1035_p1 = $signed(add_ln94_1_reg_1536);

assign sext_ln94_fu_1019_p1 = $signed(add_ln94_fu_1014_p2);

assign sub_ln29_1_fu_652_p0 = n;

assign sub_ln29_1_fu_652_p2 = ($signed(sub_ln29_1_fu_652_p0) - $signed(h));

assign sub_ln29_2_fu_604_p2 = (32'd0 - sub_ln29_fu_590_p2);

assign sub_ln29_3_fu_624_p2 = (32'd0 - zext_ln29_fu_620_p1);

assign sub_ln29_4_fu_666_p2 = (32'd0 - sub_ln29_1_fu_652_p2);

assign sub_ln29_5_fu_686_p2 = (32'd0 - zext_ln29_2_fu_682_p1);

assign sub_ln29_fu_590_p0 = n;

assign sub_ln29_fu_590_p2 = ($signed(sub_ln29_fu_590_p0) - $signed(w));

assign sub_ln47_fu_767_p2 = (add_ln47_fu_761_p2 - iw_fu_644_p3);

assign tmp_2_fu_596_p3 = sub_ln29_fu_590_p2[32'd31];

assign tmp_3_fu_658_p3 = sub_ln29_1_fu_652_p2[32'd31];

assign trunc_ln34_1_fu_1055_p1 = y_0_reg_468[4:0];

assign trunc_ln34_fu_1064_p1 = in_linesize_q0[4:0];

assign trunc_ln37_1_fu_737_p0 = plane;

assign trunc_ln37_1_fu_737_p1 = trunc_ln37_1_fu_737_p0[9:0];

assign trunc_ln37_2_fu_1097_p1 = x_0_reg_479[4:0];

assign trunc_ln37_fu_725_p0 = plane;

assign trunc_ln37_fu_725_p1 = trunc_ln37_fu_725_p0[7:0];

assign trunc_ln67_1_fu_788_p1 = y_3_reg_361[4:0];

assign trunc_ln67_fu_797_p1 = in_linesize_q0[4:0];

assign trunc_ln70_fu_830_p1 = x_5_reg_372[4:0];

assign x_10_fu_824_p2 = (x_5_reg_372 + 31'd1);

assign x_11_fu_1143_p2 = (x_1_reg_490 + 31'd1);

assign x_12_fu_755_p0 = n;

assign x_12_fu_755_p2 = ($signed(x_12_fu_755_p0) - $signed(iw_fu_644_p3));

assign x_13_fu_1218_p2 = (x_3_reg_533 + 31'd1);

assign x_14_fu_876_p2 = (x_6_reg_383 + 31'd1);

assign x_15_fu_951_p2 = (x_8_reg_426 + 31'd1);

assign x_16_fu_1178_p2 = (x_2_reg_501 + 32'd1);

assign x_17_fu_1255_p2 = (x_4_reg_544 + 31'd1);

assign x_18_fu_911_p2 = (x_7_reg_394 + 32'd1);

assign x_19_fu_1008_p2 = (x_9_reg_457 + 31'd1);

assign x_fu_1091_p2 = (x_0_reg_479 + 31'd1);

assign y_11_fu_782_p2 = (y_3_reg_361 + 31'd1);

assign y_13_fu_1203_p2 = (y_1_reg_510 + 31'd1);

assign y_14_fu_936_p2 = (y_4_reg_403 + 31'd1);

assign y_16_fu_1276_p2 = ($signed(y_2_reg_447) + $signed(32'd1));

assign y_17_fu_1029_p2 = ($signed(y_5_reg_437) + $signed(32'd1));

assign y_9_fu_1049_p2 = (y_0_reg_468 + 31'd1);

assign zext_ln29_1_fu_640_p1 = lshr_ln29_2_fu_630_p4;

assign zext_ln29_2_fu_682_p1 = lshr_ln29_4_fu_672_p4;

assign zext_ln29_3_fu_702_p1 = lshr_ln29_5_fu_692_p4;

assign zext_ln29_fu_620_p1 = lshr_ln29_1_fu_610_p4;

assign zext_ln33_fu_1040_p1 = y_0_reg_468;

assign zext_ln36_fu_1082_p1 = x_0_reg_479;

assign zext_ln41_fu_1134_p1 = x_1_reg_490;

assign zext_ln52_fu_1194_p1 = y_1_reg_510;

assign zext_ln53_fu_1209_p1 = x_3_reg_533;

assign zext_ln60_fu_1246_p1 = x_4_reg_544;

assign zext_ln66_fu_773_p1 = y_3_reg_361;

assign zext_ln69_fu_815_p1 = x_5_reg_372;

assign zext_ln74_fu_867_p1 = x_6_reg_383;

assign zext_ln85_fu_927_p1 = y_4_reg_403;

assign zext_ln86_fu_942_p1 = x_8_reg_426;

assign zext_ln93_fu_999_p1 = x_9_reg_457;

always @ (posedge ap_clk) begin
    add_ln37_4_reg_1348[0] <= 1'b0;
    zext_ln74_reg_1435[31] <= 1'b0;
    zext_ln41_reg_1605[31] <= 1'b0;
end

endmodule //get_input
