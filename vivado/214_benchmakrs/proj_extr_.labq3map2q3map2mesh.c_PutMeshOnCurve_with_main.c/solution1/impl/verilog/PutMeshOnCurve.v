// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="PutMeshOnCurve,hls_ip_2019_1,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7k160t-fbg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.365000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=8192,HLS_SYN_DSP=54,HLS_SYN_FF=4534,HLS_SYN_LUT=4596,HLS_VERSION=2019_1}" *)

module PutMeshOnCurve (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        in_width,
        in_height,
        in_verts_xyz_address0,
        in_verts_xyz_ce0,
        in_verts_xyz_q0,
        in_verts_st_address0,
        in_verts_st_ce0,
        in_verts_st_q0,
        in_verts_lightmap_address0,
        in_verts_lightmap_ce0,
        in_verts_lightmap_we0,
        in_verts_lightmap_d0,
        in_verts_lightmap_q0,
        in_verts_lightmap_address1,
        in_verts_lightmap_ce1,
        in_verts_lightmap_we1,
        in_verts_lightmap_d1,
        in_verts_lightmap_q1
);

parameter    ap_ST_fsm_state1 = 136'd1;
parameter    ap_ST_fsm_state2 = 136'd2;
parameter    ap_ST_fsm_state3 = 136'd4;
parameter    ap_ST_fsm_state4 = 136'd8;
parameter    ap_ST_fsm_state5 = 136'd16;
parameter    ap_ST_fsm_state6 = 136'd32;
parameter    ap_ST_fsm_state7 = 136'd64;
parameter    ap_ST_fsm_state8 = 136'd128;
parameter    ap_ST_fsm_state9 = 136'd256;
parameter    ap_ST_fsm_state10 = 136'd512;
parameter    ap_ST_fsm_state11 = 136'd1024;
parameter    ap_ST_fsm_state12 = 136'd2048;
parameter    ap_ST_fsm_state13 = 136'd4096;
parameter    ap_ST_fsm_state14 = 136'd8192;
parameter    ap_ST_fsm_state15 = 136'd16384;
parameter    ap_ST_fsm_state16 = 136'd32768;
parameter    ap_ST_fsm_state17 = 136'd65536;
parameter    ap_ST_fsm_state18 = 136'd131072;
parameter    ap_ST_fsm_state19 = 136'd262144;
parameter    ap_ST_fsm_state20 = 136'd524288;
parameter    ap_ST_fsm_state21 = 136'd1048576;
parameter    ap_ST_fsm_state22 = 136'd2097152;
parameter    ap_ST_fsm_state23 = 136'd4194304;
parameter    ap_ST_fsm_state24 = 136'd8388608;
parameter    ap_ST_fsm_state25 = 136'd16777216;
parameter    ap_ST_fsm_state26 = 136'd33554432;
parameter    ap_ST_fsm_state27 = 136'd67108864;
parameter    ap_ST_fsm_state28 = 136'd134217728;
parameter    ap_ST_fsm_state29 = 136'd268435456;
parameter    ap_ST_fsm_state30 = 136'd536870912;
parameter    ap_ST_fsm_state31 = 136'd1073741824;
parameter    ap_ST_fsm_state32 = 136'd2147483648;
parameter    ap_ST_fsm_state33 = 136'd4294967296;
parameter    ap_ST_fsm_state34 = 136'd8589934592;
parameter    ap_ST_fsm_state35 = 136'd17179869184;
parameter    ap_ST_fsm_state36 = 136'd34359738368;
parameter    ap_ST_fsm_state37 = 136'd68719476736;
parameter    ap_ST_fsm_state38 = 136'd137438953472;
parameter    ap_ST_fsm_state39 = 136'd274877906944;
parameter    ap_ST_fsm_state40 = 136'd549755813888;
parameter    ap_ST_fsm_state41 = 136'd1099511627776;
parameter    ap_ST_fsm_state42 = 136'd2199023255552;
parameter    ap_ST_fsm_state43 = 136'd4398046511104;
parameter    ap_ST_fsm_state44 = 136'd8796093022208;
parameter    ap_ST_fsm_state45 = 136'd17592186044416;
parameter    ap_ST_fsm_state46 = 136'd35184372088832;
parameter    ap_ST_fsm_state47 = 136'd70368744177664;
parameter    ap_ST_fsm_state48 = 136'd140737488355328;
parameter    ap_ST_fsm_state49 = 136'd281474976710656;
parameter    ap_ST_fsm_state50 = 136'd562949953421312;
parameter    ap_ST_fsm_state51 = 136'd1125899906842624;
parameter    ap_ST_fsm_state52 = 136'd2251799813685248;
parameter    ap_ST_fsm_state53 = 136'd4503599627370496;
parameter    ap_ST_fsm_state54 = 136'd9007199254740992;
parameter    ap_ST_fsm_state55 = 136'd18014398509481984;
parameter    ap_ST_fsm_state56 = 136'd36028797018963968;
parameter    ap_ST_fsm_state57 = 136'd72057594037927936;
parameter    ap_ST_fsm_state58 = 136'd144115188075855872;
parameter    ap_ST_fsm_state59 = 136'd288230376151711744;
parameter    ap_ST_fsm_state60 = 136'd576460752303423488;
parameter    ap_ST_fsm_state61 = 136'd1152921504606846976;
parameter    ap_ST_fsm_state62 = 136'd2305843009213693952;
parameter    ap_ST_fsm_state63 = 136'd4611686018427387904;
parameter    ap_ST_fsm_state64 = 136'd9223372036854775808;
parameter    ap_ST_fsm_state65 = 136'd18446744073709551616;
parameter    ap_ST_fsm_state66 = 136'd36893488147419103232;
parameter    ap_ST_fsm_state67 = 136'd73786976294838206464;
parameter    ap_ST_fsm_state68 = 136'd147573952589676412928;
parameter    ap_ST_fsm_state69 = 136'd295147905179352825856;
parameter    ap_ST_fsm_state70 = 136'd590295810358705651712;
parameter    ap_ST_fsm_state71 = 136'd1180591620717411303424;
parameter    ap_ST_fsm_state72 = 136'd2361183241434822606848;
parameter    ap_ST_fsm_state73 = 136'd4722366482869645213696;
parameter    ap_ST_fsm_state74 = 136'd9444732965739290427392;
parameter    ap_ST_fsm_state75 = 136'd18889465931478580854784;
parameter    ap_ST_fsm_state76 = 136'd37778931862957161709568;
parameter    ap_ST_fsm_state77 = 136'd75557863725914323419136;
parameter    ap_ST_fsm_state78 = 136'd151115727451828646838272;
parameter    ap_ST_fsm_state79 = 136'd302231454903657293676544;
parameter    ap_ST_fsm_state80 = 136'd604462909807314587353088;
parameter    ap_ST_fsm_state81 = 136'd1208925819614629174706176;
parameter    ap_ST_fsm_state82 = 136'd2417851639229258349412352;
parameter    ap_ST_fsm_state83 = 136'd4835703278458516698824704;
parameter    ap_ST_fsm_state84 = 136'd9671406556917033397649408;
parameter    ap_ST_fsm_state85 = 136'd19342813113834066795298816;
parameter    ap_ST_fsm_state86 = 136'd38685626227668133590597632;
parameter    ap_ST_fsm_state87 = 136'd77371252455336267181195264;
parameter    ap_ST_fsm_state88 = 136'd154742504910672534362390528;
parameter    ap_ST_fsm_state89 = 136'd309485009821345068724781056;
parameter    ap_ST_fsm_state90 = 136'd618970019642690137449562112;
parameter    ap_ST_fsm_state91 = 136'd1237940039285380274899124224;
parameter    ap_ST_fsm_state92 = 136'd2475880078570760549798248448;
parameter    ap_ST_fsm_state93 = 136'd4951760157141521099596496896;
parameter    ap_ST_fsm_state94 = 136'd9903520314283042199192993792;
parameter    ap_ST_fsm_state95 = 136'd19807040628566084398385987584;
parameter    ap_ST_fsm_state96 = 136'd39614081257132168796771975168;
parameter    ap_ST_fsm_state97 = 136'd79228162514264337593543950336;
parameter    ap_ST_fsm_state98 = 136'd158456325028528675187087900672;
parameter    ap_ST_fsm_state99 = 136'd316912650057057350374175801344;
parameter    ap_ST_fsm_state100 = 136'd633825300114114700748351602688;
parameter    ap_ST_fsm_state101 = 136'd1267650600228229401496703205376;
parameter    ap_ST_fsm_state102 = 136'd2535301200456458802993406410752;
parameter    ap_ST_fsm_state103 = 136'd5070602400912917605986812821504;
parameter    ap_ST_fsm_state104 = 136'd10141204801825835211973625643008;
parameter    ap_ST_fsm_state105 = 136'd20282409603651670423947251286016;
parameter    ap_ST_fsm_state106 = 136'd40564819207303340847894502572032;
parameter    ap_ST_fsm_state107 = 136'd81129638414606681695789005144064;
parameter    ap_ST_fsm_state108 = 136'd162259276829213363391578010288128;
parameter    ap_ST_fsm_state109 = 136'd324518553658426726783156020576256;
parameter    ap_ST_fsm_state110 = 136'd649037107316853453566312041152512;
parameter    ap_ST_fsm_state111 = 136'd1298074214633706907132624082305024;
parameter    ap_ST_fsm_state112 = 136'd2596148429267413814265248164610048;
parameter    ap_ST_fsm_state113 = 136'd5192296858534827628530496329220096;
parameter    ap_ST_fsm_state114 = 136'd10384593717069655257060992658440192;
parameter    ap_ST_fsm_state115 = 136'd20769187434139310514121985316880384;
parameter    ap_ST_fsm_state116 = 136'd41538374868278621028243970633760768;
parameter    ap_ST_fsm_state117 = 136'd83076749736557242056487941267521536;
parameter    ap_ST_fsm_state118 = 136'd166153499473114484112975882535043072;
parameter    ap_ST_fsm_state119 = 136'd332306998946228968225951765070086144;
parameter    ap_ST_fsm_state120 = 136'd664613997892457936451903530140172288;
parameter    ap_ST_fsm_state121 = 136'd1329227995784915872903807060280344576;
parameter    ap_ST_fsm_state122 = 136'd2658455991569831745807614120560689152;
parameter    ap_ST_fsm_state123 = 136'd5316911983139663491615228241121378304;
parameter    ap_ST_fsm_state124 = 136'd10633823966279326983230456482242756608;
parameter    ap_ST_fsm_state125 = 136'd21267647932558653966460912964485513216;
parameter    ap_ST_fsm_state126 = 136'd42535295865117307932921825928971026432;
parameter    ap_ST_fsm_state127 = 136'd85070591730234615865843651857942052864;
parameter    ap_ST_fsm_state128 = 136'd170141183460469231731687303715884105728;
parameter    ap_ST_fsm_state129 = 136'd340282366920938463463374607431768211456;
parameter    ap_ST_fsm_state130 = 136'd680564733841876926926749214863536422912;
parameter    ap_ST_fsm_state131 = 136'd1361129467683753853853498429727072845824;
parameter    ap_ST_fsm_state132 = 136'd2722258935367507707706996859454145691648;
parameter    ap_ST_fsm_state133 = 136'd5444517870735015415413993718908291383296;
parameter    ap_ST_fsm_state134 = 136'd10889035741470030830827987437816582766592;
parameter    ap_ST_fsm_state135 = 136'd21778071482940061661655974875633165533184;
parameter    ap_ST_fsm_state136 = 136'd43556142965880123323311949751266331066368;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] in_width;
input  [31:0] in_height;
output  [19:0] in_verts_xyz_address0;
output   in_verts_xyz_ce0;
input  [63:0] in_verts_xyz_q0;
output  [19:0] in_verts_st_address0;
output   in_verts_st_ce0;
input  [63:0] in_verts_st_q0;
output  [29:0] in_verts_lightmap_address0;
output   in_verts_lightmap_ce0;
output   in_verts_lightmap_we0;
output  [63:0] in_verts_lightmap_d0;
input  [63:0] in_verts_lightmap_q0;
output  [29:0] in_verts_lightmap_address1;
output   in_verts_lightmap_ce1;
output   in_verts_lightmap_we1;
output  [63:0] in_verts_lightmap_d1;
input  [63:0] in_verts_lightmap_q1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg in_verts_xyz_ce0;
reg in_verts_st_ce0;

(* fsm_encoding = "none" *) reg   [135:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [63:0] in_verts_xyz_buf_q0;
reg   [63:0] reg_409;
wire    ap_CS_fsm_state20;
wire   [63:0] in_verts_xyz_buf_q1;
wire    ap_CS_fsm_state81;
reg   [63:0] reg_416;
wire    ap_CS_fsm_state21;
wire    ap_CS_fsm_state82;
reg   [63:0] reg_421;
wire   [63:0] grp_fu_391_p2;
reg   [63:0] reg_426;
wire    ap_CS_fsm_state26;
wire    ap_CS_fsm_state55;
wire    ap_CS_fsm_state87;
wire    ap_CS_fsm_state116;
wire   [63:0] grp_fu_395_p2;
reg   [63:0] reg_431;
wire   [63:0] grp_fu_399_p2;
reg   [63:0] reg_436;
wire    ap_CS_fsm_state31;
wire    ap_CS_fsm_state44;
wire    ap_CS_fsm_state60;
wire    ap_CS_fsm_state92;
wire    ap_CS_fsm_state105;
wire    ap_CS_fsm_state121;
wire   [63:0] grp_fu_404_p2;
reg   [63:0] reg_443;
wire   [31:0] grp_fu_382_p1;
reg   [31:0] reg_448;
wire    ap_CS_fsm_state33;
wire    ap_CS_fsm_state62;
wire    ap_CS_fsm_state94;
wire    ap_CS_fsm_state123;
wire   [31:0] grp_fu_385_p1;
reg   [31:0] reg_453;
wire   [31:0] grp_fu_378_p2;
reg   [31:0] reg_458;
wire    ap_CS_fsm_state37;
wire    ap_CS_fsm_state66;
wire    ap_CS_fsm_state98;
wire    ap_CS_fsm_state127;
wire   [63:0] grp_fu_388_p1;
reg   [63:0] reg_463;
wire    ap_CS_fsm_state39;
wire    ap_CS_fsm_state68;
wire    ap_CS_fsm_state100;
wire    ap_CS_fsm_state129;
wire   [63:0] in_verts_st_buf_q0;
reg   [63:0] reg_468;
wire    ap_CS_fsm_state49;
wire   [63:0] in_verts_st_buf_q1;
wire    ap_CS_fsm_state110;
reg   [63:0] reg_475;
wire    ap_CS_fsm_state50;
wire    ap_CS_fsm_state111;
reg   [63:0] reg_480;
reg   [63:0] reg_485;
wire    ap_CS_fsm_state73;
wire    ap_CS_fsm_state134;
wire   [19:0] next_mul_fu_491_p2;
reg   [19:0] next_mul_reg_955;
wire    ap_CS_fsm_state2;
wire   [9:0] indvarinc7_fu_497_p2;
reg   [9:0] indvarinc7_reg_960;
wire   [9:0] indvarinc12_fu_503_p2;
reg   [9:0] indvarinc12_reg_965;
wire    ap_CS_fsm_state3;
wire   [63:0] p_cast6_fu_519_p1;
reg   [63:0] p_cast6_reg_970;
wire   [0:0] empty_13_fu_524_p2;
reg   [0:0] empty_13_reg_980;
wire    ap_CS_fsm_state6;
wire   [19:0] next_mul2_fu_536_p2;
reg   [19:0] next_mul2_reg_997;
wire    ap_CS_fsm_state8;
wire   [9:0] indvarinc_fu_542_p2;
reg   [9:0] indvarinc_reg_1002;
wire   [9:0] indvarinc4_fu_548_p2;
reg   [9:0] indvarinc4_reg_1007;
wire    ap_CS_fsm_state9;
wire   [63:0] p_cast_fu_564_p1;
reg   [63:0] p_cast_reg_1012;
wire   [0:0] empty_18_fu_569_p2;
reg   [0:0] empty_18_reg_1022;
wire    ap_CS_fsm_state12;
wire   [31:0] zext_ln28_fu_581_p1;
reg   [31:0] zext_ln28_reg_1039;
wire    ap_CS_fsm_state14;
wire   [30:0] i_fu_590_p2;
reg   [30:0] i_reg_1049;
wire   [31:0] mul_ln31_fu_613_p2;
reg   [31:0] mul_ln31_reg_1057;
wire    ap_CS_fsm_state15;
wire   [0:0] icmp_ln29_fu_596_p2;
wire   [31:0] mul_ln31_1_fu_618_p2;
reg   [31:0] mul_ln31_1_reg_1062;
wire   [31:0] mul_ln32_fu_623_p2;
reg   [31:0] mul_ln32_reg_1067;
wire   [42:0] mul_ln37_fu_636_p2;
reg   [42:0] mul_ln37_reg_1072;
wire    ap_CS_fsm_state16;
wire   [42:0] mul_ln37_1_fu_650_p2;
reg   [42:0] mul_ln37_1_reg_1077;
wire   [42:0] mul_ln38_fu_664_p2;
reg   [42:0] mul_ln38_reg_1082;
wire   [1:0] l_fu_676_p2;
reg   [1:0] l_reg_1090;
wire    ap_CS_fsm_state17;
reg   [19:0] in_verts_st_buf_addr_1_reg_1095;
wire   [0:0] icmp_ln30_fu_670_p2;
reg   [40:0] tmp_29_reg_1101;
reg   [40:0] tmp_31_reg_1106;
reg   [19:0] in_verts_xyz_buf_add_1_reg_1111;
wire   [31:0] j_fu_723_p2;
reg   [19:0] in_verts_st_buf_addr_2_reg_1122;
wire    ap_CS_fsm_state18;
reg   [19:0] in_verts_st_buf_addr_3_reg_1127;
reg   [0:0] tmp_33_reg_1142;
wire   [31:0] add_ln52_fu_763_p2;
reg   [31:0] add_ln52_reg_1146;
wire    ap_CS_fsm_state76;
wire   [30:0] j_2_fu_777_p2;
reg   [30:0] j_2_reg_1154;
wire   [31:0] add_ln55_1_fu_783_p2;
reg   [31:0] add_ln55_1_reg_1159;
wire   [0:0] icmp_ln52_fu_772_p2;
wire   [31:0] add_ln56_fu_789_p2;
reg   [31:0] add_ln56_reg_1164;
wire   [42:0] mul_ln61_fu_810_p2;
reg   [42:0] mul_ln61_reg_1172;
wire    ap_CS_fsm_state77;
wire   [0:0] icmp_ln53_fu_795_p2;
wire   [42:0] mul_ln61_1_fu_825_p2;
reg   [42:0] mul_ln61_1_reg_1177;
wire   [42:0] mul_ln62_fu_840_p2;
reg   [42:0] mul_ln62_reg_1182;
wire   [1:0] l_2_fu_852_p2;
reg   [1:0] l_2_reg_1190;
wire    ap_CS_fsm_state78;
reg   [19:0] in_verts_st_buf_addr_4_reg_1195;
wire   [0:0] icmp_ln54_fu_846_p2;
reg   [40:0] tmp_36_reg_1201;
reg   [40:0] tmp_38_reg_1206;
reg   [19:0] in_verts_xyz_buf_add_4_reg_1211;
wire   [31:0] i_2_fu_899_p2;
reg   [19:0] in_verts_st_buf_addr_5_reg_1222;
wire    ap_CS_fsm_state79;
reg   [19:0] in_verts_st_buf_addr_6_reg_1227;
reg   [0:0] tmp_40_reg_1242;
reg   [19:0] in_verts_st_buf_address0;
reg    in_verts_st_buf_ce0;
reg    in_verts_st_buf_we0;
reg   [63:0] in_verts_st_buf_d0;
reg   [19:0] in_verts_st_buf_address1;
reg    in_verts_st_buf_ce1;
reg    in_verts_st_buf_we1;
reg   [19:0] in_verts_xyz_buf_address0;
reg    in_verts_xyz_buf_ce0;
reg    in_verts_xyz_buf_we0;
reg   [63:0] in_verts_xyz_buf_d0;
reg   [19:0] in_verts_xyz_buf_address1;
reg    in_verts_xyz_buf_ce1;
reg    in_verts_xyz_buf_we1;
reg   [9:0] invdar6_reg_226;
wire    ap_CS_fsm_state7;
wire   [0:0] empty_15_fu_530_p2;
reg   [19:0] phi_mul_reg_238;
reg   [9:0] invdar11_reg_250;
reg   [9:0] invdar_reg_261;
wire    ap_CS_fsm_state13;
wire   [0:0] empty_20_fu_575_p2;
reg   [19:0] phi_mul1_reg_273;
reg   [9:0] invdar3_reg_285;
reg   [30:0] i_0_reg_296;
reg  signed [31:0] j_0_reg_307;
wire   [0:0] icmp_ln28_fu_585_p2;
reg   [1:0] l_0_reg_319;
wire    ap_CS_fsm_state75;
reg   [30:0] j_1_reg_331;
reg   [31:0] phi_mul3_reg_342;
reg   [31:0] i_1_reg_354;
reg   [1:0] l_1_reg_366;
wire    ap_CS_fsm_state136;
wire  signed [63:0] sext_ln37_2_fu_699_p1;
wire  signed [63:0] sext_ln37_3_fu_736_p1;
wire  signed [63:0] sext_ln38_1_fu_749_p1;
wire  signed [63:0] sext_ln61_2_fu_875_p1;
wire  signed [63:0] sext_ln61_3_fu_912_p1;
wire  signed [63:0] sext_ln62_1_fu_925_p1;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_state46;
wire    ap_CS_fsm_state47;
wire    ap_CS_fsm_state48;
wire    ap_CS_fsm_state74;
wire    ap_CS_fsm_state107;
wire    ap_CS_fsm_state108;
wire    ap_CS_fsm_state109;
wire    ap_CS_fsm_state135;
wire    ap_CS_fsm_state10;
wire    ap_CS_fsm_state11;
wire    ap_CS_fsm_state19;
wire    ap_CS_fsm_state45;
wire    ap_CS_fsm_state80;
wire    ap_CS_fsm_state106;
wire    ap_CS_fsm_state34;
wire    ap_CS_fsm_state63;
wire    ap_CS_fsm_state95;
wire    ap_CS_fsm_state124;
wire    ap_CS_fsm_state32;
wire    ap_CS_fsm_state61;
wire    ap_CS_fsm_state93;
wire    ap_CS_fsm_state122;
wire    ap_CS_fsm_state38;
wire    ap_CS_fsm_state67;
wire    ap_CS_fsm_state99;
wire    ap_CS_fsm_state128;
reg   [63:0] grp_fu_391_p0;
reg   [63:0] grp_fu_391_p1;
wire    ap_CS_fsm_state22;
wire    ap_CS_fsm_state51;
wire    ap_CS_fsm_state83;
wire    ap_CS_fsm_state112;
reg   [63:0] grp_fu_395_p0;
reg   [63:0] grp_fu_395_p1;
reg   [63:0] grp_fu_399_p0;
wire    ap_CS_fsm_state27;
wire    ap_CS_fsm_state40;
wire    ap_CS_fsm_state56;
wire    ap_CS_fsm_state69;
wire    ap_CS_fsm_state88;
wire    ap_CS_fsm_state101;
wire    ap_CS_fsm_state117;
wire    ap_CS_fsm_state130;
wire   [19:0] p_cast7_fu_509_p1;
wire   [19:0] empty_12_fu_513_p2;
wire   [19:0] p_cast5_fu_554_p1;
wire   [19:0] empty_17_fu_558_p2;
wire  signed [31:0] icmp_ln28_fu_585_p1;
wire  signed [31:0] mul_ln31_fu_613_p0;
wire  signed [31:0] mul_ln31_1_fu_618_p0;
wire  signed [31:0] add_ln31_fu_601_p2;
wire  signed [31:0] mul_ln32_fu_623_p0;
wire  signed [31:0] add_ln32_fu_607_p2;
wire   [31:0] add_ln31_1_fu_628_p2;
wire  signed [31:0] mul_ln37_fu_636_p0;
wire   [31:0] add_ln31_2_fu_642_p2;
wire  signed [31:0] mul_ln37_1_fu_650_p0;
wire   [31:0] add_ln32_1_fu_656_p2;
wire  signed [31:0] mul_ln38_fu_664_p0;
wire   [40:0] tmp_27_fu_682_p4;
wire   [42:0] tmp_28_fu_691_p3;
wire   [42:0] tmp_30_fu_729_p3;
wire   [42:0] tmp_32_fu_742_p3;
wire  signed [31:0] add_ln52_fu_763_p1;
wire   [31:0] zext_ln52_fu_768_p1;
wire  signed [31:0] icmp_ln53_fu_795_p1;
wire   [31:0] add_ln55_fu_800_p2;
wire  signed [31:0] mul_ln61_fu_810_p0;
wire   [31:0] add_ln55_2_fu_816_p2;
wire  signed [31:0] mul_ln61_1_fu_825_p0;
wire   [31:0] add_ln56_1_fu_831_p2;
wire  signed [31:0] mul_ln62_fu_840_p0;
wire   [40:0] tmp_34_fu_858_p4;
wire   [42:0] tmp_35_fu_867_p3;
wire   [42:0] tmp_37_fu_905_p3;
wire   [42:0] tmp_39_fu_918_p3;
reg   [135:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 136'd1;
end

PutMeshOnCurve_in_verts_st_buf #(
    .DataWidth( 64 ),
    .AddressRange( 1000000 ),
    .AddressWidth( 20 ))
in_verts_st_buf_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(in_verts_st_buf_address0),
    .ce0(in_verts_st_buf_ce0),
    .we0(in_verts_st_buf_we0),
    .d0(in_verts_st_buf_d0),
    .q0(in_verts_st_buf_q0),
    .address1(in_verts_st_buf_address1),
    .ce1(in_verts_st_buf_ce1),
    .we1(in_verts_st_buf_we1),
    .d1(reg_485),
    .q1(in_verts_st_buf_q1)
);

PutMeshOnCurve_in_verts_st_buf #(
    .DataWidth( 64 ),
    .AddressRange( 1000000 ),
    .AddressWidth( 20 ))
in_verts_xyz_buf_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(in_verts_xyz_buf_address0),
    .ce0(in_verts_xyz_buf_ce0),
    .we0(in_verts_xyz_buf_we0),
    .d0(in_verts_xyz_buf_d0),
    .q0(in_verts_xyz_buf_q0),
    .address1(in_verts_xyz_buf_address1),
    .ce1(in_verts_xyz_buf_ce1),
    .we1(in_verts_xyz_buf_we1),
    .d1(reg_436),
    .q1(in_verts_xyz_buf_q1)
);

PutMeshOnCurve_fadd_32ns_32ns_32_4_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
PutMeshOnCurve_fadd_32ns_32ns_32_4_full_dsp_1_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_448),
    .din1(reg_453),
    .ce(1'b1),
    .dout(grp_fu_378_p2)
);

PutMeshOnCurve_fptrunc_64ns_32_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 64 ),
    .dout_WIDTH( 32 ))
PutMeshOnCurve_fptrunc_64ns_32_2_1_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_436),
    .ce(1'b1),
    .dout(grp_fu_382_p1)
);

PutMeshOnCurve_fptrunc_64ns_32_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 64 ),
    .dout_WIDTH( 32 ))
PutMeshOnCurve_fptrunc_64ns_32_2_1_U3(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_443),
    .ce(1'b1),
    .dout(grp_fu_385_p1)
);

PutMeshOnCurve_fpext_32ns_64_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
PutMeshOnCurve_fpext_32ns_64_2_1_U4(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_458),
    .ce(1'b1),
    .dout(grp_fu_388_p1)
);

PutMeshOnCurve_dadd_64ns_64ns_64_5_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
PutMeshOnCurve_dadd_64ns_64ns_64_5_full_dsp_1_U5(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_391_p0),
    .din1(grp_fu_391_p1),
    .ce(1'b1),
    .dout(grp_fu_391_p2)
);

PutMeshOnCurve_dadd_64ns_64ns_64_5_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
PutMeshOnCurve_dadd_64ns_64ns_64_5_full_dsp_1_U6(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_395_p0),
    .din1(grp_fu_395_p1),
    .ce(1'b1),
    .dout(grp_fu_395_p2)
);

PutMeshOnCurve_dmul_64ns_64ns_64_5_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
PutMeshOnCurve_dmul_64ns_64ns_64_5_max_dsp_1_U7(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_399_p0),
    .din1(64'd4602678819172646912),
    .ce(1'b1),
    .dout(grp_fu_399_p2)
);

PutMeshOnCurve_dmul_64ns_64ns_64_5_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
PutMeshOnCurve_dmul_64ns_64ns_64_5_max_dsp_1_U8(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_431),
    .din1(64'd4602678819172646912),
    .ce(1'b1),
    .dout(grp_fu_404_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln29_fu_596_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state15))) begin
        i_0_reg_296 <= i_reg_1049;
    end else if (((empty_20_fu_575_p2 == 1'd1) & (empty_18_reg_1022 == 1'd1) & (1'b1 == ap_CS_fsm_state13))) begin
        i_0_reg_296 <= 31'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln52_fu_772_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state76))) begin
        i_1_reg_354 <= 32'd1;
    end else if (((icmp_ln54_fu_846_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state78))) begin
        i_1_reg_354 <= i_2_fu_899_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((empty_13_reg_980 == 1'd0) & (1'b1 == ap_CS_fsm_state7))) begin
        invdar11_reg_250 <= indvarinc12_reg_965;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        invdar11_reg_250 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((empty_18_reg_1022 == 1'd0) & (1'b1 == ap_CS_fsm_state13))) begin
        invdar3_reg_285 <= indvarinc4_reg_1007;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        invdar3_reg_285 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((empty_15_fu_530_p2 == 1'd0) & (empty_13_reg_980 == 1'd1) & (1'b1 == ap_CS_fsm_state7))) begin
        invdar6_reg_226 <= indvarinc7_reg_960;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        invdar6_reg_226 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((empty_20_fu_575_p2 == 1'd0) & (empty_18_reg_1022 == 1'd1) & (1'b1 == ap_CS_fsm_state13))) begin
        invdar_reg_261 <= indvarinc_reg_1002;
    end else if (((empty_15_fu_530_p2 == 1'd1) & (empty_13_reg_980 == 1'd1) & (1'b1 == ap_CS_fsm_state7))) begin
        invdar_reg_261 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln28_fu_585_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state14))) begin
        j_0_reg_307 <= 32'd1;
    end else if (((icmp_ln30_fu_670_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state17))) begin
        j_0_reg_307 <= j_fu_723_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln28_fu_585_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state14))) begin
        j_1_reg_331 <= 31'd0;
    end else if (((icmp_ln53_fu_795_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state77))) begin
        j_1_reg_331 <= j_2_reg_1154;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        l_0_reg_319 <= 2'd0;
    end else if ((1'b1 == ap_CS_fsm_state75)) begin
        l_0_reg_319 <= l_reg_1090;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln53_fu_795_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state77))) begin
        l_1_reg_366 <= 2'd0;
    end else if ((1'b1 == ap_CS_fsm_state136)) begin
        l_1_reg_366 <= l_2_reg_1190;
    end
end

always @ (posedge ap_clk) begin
    if (((empty_20_fu_575_p2 == 1'd0) & (empty_18_reg_1022 == 1'd1) & (1'b1 == ap_CS_fsm_state13))) begin
        phi_mul1_reg_273 <= next_mul2_reg_997;
    end else if (((empty_15_fu_530_p2 == 1'd1) & (empty_13_reg_980 == 1'd1) & (1'b1 == ap_CS_fsm_state7))) begin
        phi_mul1_reg_273 <= 20'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln28_fu_585_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state14))) begin
        phi_mul3_reg_342 <= 32'd0;
    end else if (((icmp_ln53_fu_795_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state77))) begin
        phi_mul3_reg_342 <= add_ln52_reg_1146;
    end
end

always @ (posedge ap_clk) begin
    if (((empty_15_fu_530_p2 == 1'd0) & (empty_13_reg_980 == 1'd1) & (1'b1 == ap_CS_fsm_state7))) begin
        phi_mul_reg_238 <= next_mul_reg_955;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        phi_mul_reg_238 <= 20'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state81)) begin
        reg_409 <= in_verts_xyz_buf_q1;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        reg_409 <= in_verts_xyz_buf_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state110)) begin
        reg_468 <= in_verts_st_buf_q1;
    end else if ((1'b1 == ap_CS_fsm_state49)) begin
        reg_468 <= in_verts_st_buf_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state76)) begin
        add_ln52_reg_1146 <= add_ln52_fu_763_p2;
        j_2_reg_1154 <= j_2_fu_777_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln52_fu_772_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state76))) begin
        add_ln55_1_reg_1159 <= add_ln55_1_fu_783_p2;
        add_ln56_reg_1164 <= add_ln56_fu_789_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        empty_13_reg_980 <= empty_13_fu_524_p2;
        indvarinc12_reg_965 <= indvarinc12_fu_503_p2;
        p_cast6_reg_970[19 : 0] <= p_cast6_fu_519_p1[19 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        empty_18_reg_1022 <= empty_18_fu_569_p2;
        indvarinc4_reg_1007 <= indvarinc4_fu_548_p2;
        p_cast_reg_1012[19 : 0] <= p_cast_fu_564_p1[19 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        i_reg_1049 <= i_fu_590_p2;
        zext_ln28_reg_1039[30 : 0] <= zext_ln28_fu_581_p1[30 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln30_fu_670_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state17))) begin
        in_verts_st_buf_addr_1_reg_1095[1 : 0] <= sext_ln37_2_fu_699_p1[1 : 0];
in_verts_st_buf_addr_1_reg_1095[19 : 3] <= sext_ln37_2_fu_699_p1[19 : 3];
        in_verts_xyz_buf_add_1_reg_1111[1 : 0] <= sext_ln37_2_fu_699_p1[1 : 0];
in_verts_xyz_buf_add_1_reg_1111[19 : 3] <= sext_ln37_2_fu_699_p1[19 : 3];
        tmp_29_reg_1101 <= {{mul_ln37_1_reg_1077[42:2]}};
        tmp_31_reg_1106 <= {{mul_ln38_reg_1082[42:2]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        in_verts_st_buf_addr_2_reg_1122[1 : 0] <= sext_ln37_3_fu_736_p1[1 : 0];
in_verts_st_buf_addr_2_reg_1122[19 : 3] <= sext_ln37_3_fu_736_p1[19 : 3];
        in_verts_st_buf_addr_3_reg_1127[1 : 0] <= sext_ln38_1_fu_749_p1[1 : 0];
in_verts_st_buf_addr_3_reg_1127[19 : 3] <= sext_ln38_1_fu_749_p1[19 : 3];
        tmp_33_reg_1142 <= l_0_reg_319[32'd1];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln54_fu_846_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state78))) begin
        in_verts_st_buf_addr_4_reg_1195[1 : 0] <= sext_ln61_2_fu_875_p1[1 : 0];
in_verts_st_buf_addr_4_reg_1195[19 : 3] <= sext_ln61_2_fu_875_p1[19 : 3];
        in_verts_xyz_buf_add_4_reg_1211[1 : 0] <= sext_ln61_2_fu_875_p1[1 : 0];
in_verts_xyz_buf_add_4_reg_1211[19 : 3] <= sext_ln61_2_fu_875_p1[19 : 3];
        tmp_36_reg_1201 <= {{mul_ln61_1_reg_1177[42:2]}};
        tmp_38_reg_1206 <= {{mul_ln62_reg_1182[42:2]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state79)) begin
        in_verts_st_buf_addr_5_reg_1222[1 : 0] <= sext_ln61_3_fu_912_p1[1 : 0];
in_verts_st_buf_addr_5_reg_1222[19 : 3] <= sext_ln61_3_fu_912_p1[19 : 3];
        in_verts_st_buf_addr_6_reg_1227[1 : 0] <= sext_ln62_1_fu_925_p1[1 : 0];
in_verts_st_buf_addr_6_reg_1227[19 : 3] <= sext_ln62_1_fu_925_p1[19 : 3];
        tmp_40_reg_1242 <= l_1_reg_366[32'd1];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        indvarinc7_reg_960 <= indvarinc7_fu_497_p2;
        next_mul_reg_955 <= next_mul_fu_491_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        indvarinc_reg_1002 <= indvarinc_fu_542_p2;
        next_mul2_reg_997 <= next_mul2_fu_536_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state78)) begin
        l_2_reg_1190 <= l_2_fu_852_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        l_reg_1090 <= l_fu_676_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln29_fu_596_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state15))) begin
        mul_ln31_1_reg_1062 <= mul_ln31_1_fu_618_p2;
        mul_ln31_reg_1057 <= mul_ln31_fu_613_p2;
        mul_ln32_reg_1067 <= mul_ln32_fu_623_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        mul_ln37_1_reg_1077[42 : 3] <= mul_ln37_1_fu_650_p2[42 : 3];
        mul_ln37_reg_1072[42 : 3] <= mul_ln37_fu_636_p2[42 : 3];
        mul_ln38_reg_1082[42 : 3] <= mul_ln38_fu_664_p2[42 : 3];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln53_fu_795_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state77))) begin
        mul_ln61_1_reg_1177[42 : 3] <= mul_ln61_1_fu_825_p2[42 : 3];
        mul_ln61_reg_1172[42 : 3] <= mul_ln61_fu_810_p2[42 : 3];
        mul_ln62_reg_1182[42 : 3] <= mul_ln62_fu_840_p2[42 : 3];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state82) | (1'b1 == ap_CS_fsm_state21))) begin
        reg_416 <= in_verts_xyz_buf_q0;
        reg_421 <= in_verts_xyz_buf_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state116) | (1'b1 == ap_CS_fsm_state87) | (1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state26))) begin
        reg_426 <= grp_fu_391_p2;
        reg_431 <= grp_fu_395_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state121) | (1'b1 == ap_CS_fsm_state105) | (1'b1 == ap_CS_fsm_state92) | (1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state31))) begin
        reg_436 <= grp_fu_399_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state121) | (1'b1 == ap_CS_fsm_state92) | (1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state31))) begin
        reg_443 <= grp_fu_404_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state123) | (1'b1 == ap_CS_fsm_state94) | (1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state33))) begin
        reg_448 <= grp_fu_382_p1;
        reg_453 <= grp_fu_385_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state127) | (1'b1 == ap_CS_fsm_state98) | (1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state37))) begin
        reg_458 <= grp_fu_378_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state129) | (1'b1 == ap_CS_fsm_state100) | (1'b1 == ap_CS_fsm_state68) | (1'b1 == ap_CS_fsm_state39))) begin
        reg_463 <= grp_fu_388_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state111) | (1'b1 == ap_CS_fsm_state50))) begin
        reg_475 <= in_verts_st_buf_q0;
        reg_480 <= in_verts_st_buf_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state134) | (1'b1 == ap_CS_fsm_state73))) begin
        reg_485 <= grp_fu_399_p2;
    end
end

always @ (*) begin
    if (((icmp_ln52_fu_772_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state76))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln52_fu_772_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state76))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state112) | (1'b1 == ap_CS_fsm_state51))) begin
        grp_fu_391_p0 = reg_468;
    end else if (((1'b1 == ap_CS_fsm_state83) | (1'b1 == ap_CS_fsm_state22))) begin
        grp_fu_391_p0 = reg_409;
    end else begin
        grp_fu_391_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state112) | (1'b1 == ap_CS_fsm_state51))) begin
        grp_fu_391_p1 = reg_475;
    end else if (((1'b1 == ap_CS_fsm_state83) | (1'b1 == ap_CS_fsm_state22))) begin
        grp_fu_391_p1 = reg_416;
    end else begin
        grp_fu_391_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state112) | (1'b1 == ap_CS_fsm_state51))) begin
        grp_fu_395_p0 = reg_468;
    end else if (((1'b1 == ap_CS_fsm_state83) | (1'b1 == ap_CS_fsm_state22))) begin
        grp_fu_395_p0 = reg_409;
    end else begin
        grp_fu_395_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state112) | (1'b1 == ap_CS_fsm_state51))) begin
        grp_fu_395_p1 = reg_480;
    end else if (((1'b1 == ap_CS_fsm_state83) | (1'b1 == ap_CS_fsm_state22))) begin
        grp_fu_395_p1 = reg_421;
    end else begin
        grp_fu_395_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state130) | (1'b1 == ap_CS_fsm_state101) | (1'b1 == ap_CS_fsm_state69) | (1'b1 == ap_CS_fsm_state40))) begin
        grp_fu_399_p0 = reg_463;
    end else if (((1'b1 == ap_CS_fsm_state117) | (1'b1 == ap_CS_fsm_state88) | (1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state27))) begin
        grp_fu_399_p0 = reg_426;
    end else begin
        grp_fu_399_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state135)) begin
        in_verts_st_buf_address0 = in_verts_st_buf_addr_4_reg_1195;
    end else if ((1'b1 == ap_CS_fsm_state108)) begin
        in_verts_st_buf_address0 = in_verts_st_buf_addr_5_reg_1222;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        in_verts_st_buf_address0 = in_verts_st_buf_addr_2_reg_1122;
    end else if ((1'b1 == ap_CS_fsm_state46)) begin
        in_verts_st_buf_address0 = in_verts_st_buf_addr_1_reg_1095;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        in_verts_st_buf_address0 = p_cast6_reg_970;
    end else begin
        in_verts_st_buf_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state108)) begin
        in_verts_st_buf_address1 = in_verts_st_buf_addr_6_reg_1227;
    end else if ((1'b1 == ap_CS_fsm_state107)) begin
        in_verts_st_buf_address1 = in_verts_st_buf_addr_4_reg_1195;
    end else if ((1'b1 == ap_CS_fsm_state74)) begin
        in_verts_st_buf_address1 = in_verts_st_buf_addr_1_reg_1095;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        in_verts_st_buf_address1 = in_verts_st_buf_addr_3_reg_1127;
    end else begin
        in_verts_st_buf_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state135) | (1'b1 == ap_CS_fsm_state109) | (1'b1 == ap_CS_fsm_state108) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state136) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state111) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state110) | (1'b1 == ap_CS_fsm_state49))) begin
        in_verts_st_buf_ce0 = 1'b1;
    end else begin
        in_verts_st_buf_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state109) | (1'b1 == ap_CS_fsm_state108) | (1'b1 == ap_CS_fsm_state107) | (1'b1 == ap_CS_fsm_state74) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state75) | (1'b1 == ap_CS_fsm_state111) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state110) | (1'b1 == ap_CS_fsm_state49))) begin
        in_verts_st_buf_ce1 = 1'b1;
    end else begin
        in_verts_st_buf_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state135)) begin
        in_verts_st_buf_d0 = reg_485;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        in_verts_st_buf_d0 = in_verts_st_q0;
    end else begin
        in_verts_st_buf_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state135) | (1'b1 == ap_CS_fsm_state6))) begin
        in_verts_st_buf_we0 = 1'b1;
    end else begin
        in_verts_st_buf_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state74)) begin
        in_verts_st_buf_we1 = 1'b1;
    end else begin
        in_verts_st_buf_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state3))) begin
        in_verts_st_ce0 = 1'b1;
    end else begin
        in_verts_st_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state106)) begin
        in_verts_xyz_buf_address0 = in_verts_xyz_buf_add_4_reg_1211;
    end else if ((1'b1 == ap_CS_fsm_state79)) begin
        in_verts_xyz_buf_address0 = sext_ln61_3_fu_912_p1;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        in_verts_xyz_buf_address0 = sext_ln37_3_fu_736_p1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        in_verts_xyz_buf_address0 = sext_ln37_2_fu_699_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        in_verts_xyz_buf_address0 = p_cast_reg_1012;
    end else begin
        in_verts_xyz_buf_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state79)) begin
        in_verts_xyz_buf_address1 = sext_ln62_1_fu_925_p1;
    end else if ((1'b1 == ap_CS_fsm_state78)) begin
        in_verts_xyz_buf_address1 = sext_ln61_2_fu_875_p1;
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        in_verts_xyz_buf_address1 = in_verts_xyz_buf_add_1_reg_1111;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        in_verts_xyz_buf_address1 = sext_ln38_1_fu_749_p1;
    end else begin
        in_verts_xyz_buf_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state106) | (1'b1 == ap_CS_fsm_state80) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state107) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state79) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state82) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state81) | (1'b1 == ap_CS_fsm_state20))) begin
        in_verts_xyz_buf_ce0 = 1'b1;
    end else begin
        in_verts_xyz_buf_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state80) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state79) | (1'b1 == ap_CS_fsm_state78) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state82) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state81) | (1'b1 == ap_CS_fsm_state20))) begin
        in_verts_xyz_buf_ce1 = 1'b1;
    end else begin
        in_verts_xyz_buf_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state106)) begin
        in_verts_xyz_buf_d0 = reg_436;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        in_verts_xyz_buf_d0 = in_verts_xyz_q0;
    end else begin
        in_verts_xyz_buf_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state106) | (1'b1 == ap_CS_fsm_state12))) begin
        in_verts_xyz_buf_we0 = 1'b1;
    end else begin
        in_verts_xyz_buf_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state45)) begin
        in_verts_xyz_buf_we1 = 1'b1;
    end else begin
        in_verts_xyz_buf_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state9))) begin
        in_verts_xyz_ce0 = 1'b1;
    end else begin
        in_verts_xyz_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            if (((empty_15_fu_530_p2 == 1'd1) & (empty_13_reg_980 == 1'd1) & (1'b1 == ap_CS_fsm_state7))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else if (((empty_15_fu_530_p2 == 1'd0) & (empty_13_reg_980 == 1'd1) & (1'b1 == ap_CS_fsm_state7))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            if (((empty_20_fu_575_p2 == 1'd1) & (empty_18_reg_1022 == 1'd1) & (1'b1 == ap_CS_fsm_state13))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else if (((empty_20_fu_575_p2 == 1'd0) & (empty_18_reg_1022 == 1'd1) & (1'b1 == ap_CS_fsm_state13))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state14 : begin
            if (((icmp_ln28_fu_585_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state14))) begin
                ap_NS_fsm = ap_ST_fsm_state76;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end
        end
        ap_ST_fsm_state15 : begin
            if (((icmp_ln29_fu_596_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state15))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            if (((icmp_ln30_fu_670_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state17))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            if (((tmp_33_reg_1142 == 1'd1) & (1'b1 == ap_CS_fsm_state46))) begin
                ap_NS_fsm = ap_ST_fsm_state75;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state47;
            end
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_state60;
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_state61;
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_state62;
        end
        ap_ST_fsm_state62 : begin
            ap_NS_fsm = ap_ST_fsm_state63;
        end
        ap_ST_fsm_state63 : begin
            ap_NS_fsm = ap_ST_fsm_state64;
        end
        ap_ST_fsm_state64 : begin
            ap_NS_fsm = ap_ST_fsm_state65;
        end
        ap_ST_fsm_state65 : begin
            ap_NS_fsm = ap_ST_fsm_state66;
        end
        ap_ST_fsm_state66 : begin
            ap_NS_fsm = ap_ST_fsm_state67;
        end
        ap_ST_fsm_state67 : begin
            ap_NS_fsm = ap_ST_fsm_state68;
        end
        ap_ST_fsm_state68 : begin
            ap_NS_fsm = ap_ST_fsm_state69;
        end
        ap_ST_fsm_state69 : begin
            ap_NS_fsm = ap_ST_fsm_state70;
        end
        ap_ST_fsm_state70 : begin
            ap_NS_fsm = ap_ST_fsm_state71;
        end
        ap_ST_fsm_state71 : begin
            ap_NS_fsm = ap_ST_fsm_state72;
        end
        ap_ST_fsm_state72 : begin
            ap_NS_fsm = ap_ST_fsm_state73;
        end
        ap_ST_fsm_state73 : begin
            ap_NS_fsm = ap_ST_fsm_state74;
        end
        ap_ST_fsm_state74 : begin
            ap_NS_fsm = ap_ST_fsm_state75;
        end
        ap_ST_fsm_state75 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state76 : begin
            if (((icmp_ln52_fu_772_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state76))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state77;
            end
        end
        ap_ST_fsm_state77 : begin
            if (((icmp_ln53_fu_795_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state77))) begin
                ap_NS_fsm = ap_ST_fsm_state76;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state78;
            end
        end
        ap_ST_fsm_state78 : begin
            if (((icmp_ln54_fu_846_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state78))) begin
                ap_NS_fsm = ap_ST_fsm_state77;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state79;
            end
        end
        ap_ST_fsm_state79 : begin
            ap_NS_fsm = ap_ST_fsm_state80;
        end
        ap_ST_fsm_state80 : begin
            ap_NS_fsm = ap_ST_fsm_state81;
        end
        ap_ST_fsm_state81 : begin
            ap_NS_fsm = ap_ST_fsm_state82;
        end
        ap_ST_fsm_state82 : begin
            ap_NS_fsm = ap_ST_fsm_state83;
        end
        ap_ST_fsm_state83 : begin
            ap_NS_fsm = ap_ST_fsm_state84;
        end
        ap_ST_fsm_state84 : begin
            ap_NS_fsm = ap_ST_fsm_state85;
        end
        ap_ST_fsm_state85 : begin
            ap_NS_fsm = ap_ST_fsm_state86;
        end
        ap_ST_fsm_state86 : begin
            ap_NS_fsm = ap_ST_fsm_state87;
        end
        ap_ST_fsm_state87 : begin
            ap_NS_fsm = ap_ST_fsm_state88;
        end
        ap_ST_fsm_state88 : begin
            ap_NS_fsm = ap_ST_fsm_state89;
        end
        ap_ST_fsm_state89 : begin
            ap_NS_fsm = ap_ST_fsm_state90;
        end
        ap_ST_fsm_state90 : begin
            ap_NS_fsm = ap_ST_fsm_state91;
        end
        ap_ST_fsm_state91 : begin
            ap_NS_fsm = ap_ST_fsm_state92;
        end
        ap_ST_fsm_state92 : begin
            ap_NS_fsm = ap_ST_fsm_state93;
        end
        ap_ST_fsm_state93 : begin
            ap_NS_fsm = ap_ST_fsm_state94;
        end
        ap_ST_fsm_state94 : begin
            ap_NS_fsm = ap_ST_fsm_state95;
        end
        ap_ST_fsm_state95 : begin
            ap_NS_fsm = ap_ST_fsm_state96;
        end
        ap_ST_fsm_state96 : begin
            ap_NS_fsm = ap_ST_fsm_state97;
        end
        ap_ST_fsm_state97 : begin
            ap_NS_fsm = ap_ST_fsm_state98;
        end
        ap_ST_fsm_state98 : begin
            ap_NS_fsm = ap_ST_fsm_state99;
        end
        ap_ST_fsm_state99 : begin
            ap_NS_fsm = ap_ST_fsm_state100;
        end
        ap_ST_fsm_state100 : begin
            ap_NS_fsm = ap_ST_fsm_state101;
        end
        ap_ST_fsm_state101 : begin
            ap_NS_fsm = ap_ST_fsm_state102;
        end
        ap_ST_fsm_state102 : begin
            ap_NS_fsm = ap_ST_fsm_state103;
        end
        ap_ST_fsm_state103 : begin
            ap_NS_fsm = ap_ST_fsm_state104;
        end
        ap_ST_fsm_state104 : begin
            ap_NS_fsm = ap_ST_fsm_state105;
        end
        ap_ST_fsm_state105 : begin
            ap_NS_fsm = ap_ST_fsm_state106;
        end
        ap_ST_fsm_state106 : begin
            ap_NS_fsm = ap_ST_fsm_state107;
        end
        ap_ST_fsm_state107 : begin
            if (((tmp_40_reg_1242 == 1'd1) & (1'b1 == ap_CS_fsm_state107))) begin
                ap_NS_fsm = ap_ST_fsm_state136;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state108;
            end
        end
        ap_ST_fsm_state108 : begin
            ap_NS_fsm = ap_ST_fsm_state109;
        end
        ap_ST_fsm_state109 : begin
            ap_NS_fsm = ap_ST_fsm_state110;
        end
        ap_ST_fsm_state110 : begin
            ap_NS_fsm = ap_ST_fsm_state111;
        end
        ap_ST_fsm_state111 : begin
            ap_NS_fsm = ap_ST_fsm_state112;
        end
        ap_ST_fsm_state112 : begin
            ap_NS_fsm = ap_ST_fsm_state113;
        end
        ap_ST_fsm_state113 : begin
            ap_NS_fsm = ap_ST_fsm_state114;
        end
        ap_ST_fsm_state114 : begin
            ap_NS_fsm = ap_ST_fsm_state115;
        end
        ap_ST_fsm_state115 : begin
            ap_NS_fsm = ap_ST_fsm_state116;
        end
        ap_ST_fsm_state116 : begin
            ap_NS_fsm = ap_ST_fsm_state117;
        end
        ap_ST_fsm_state117 : begin
            ap_NS_fsm = ap_ST_fsm_state118;
        end
        ap_ST_fsm_state118 : begin
            ap_NS_fsm = ap_ST_fsm_state119;
        end
        ap_ST_fsm_state119 : begin
            ap_NS_fsm = ap_ST_fsm_state120;
        end
        ap_ST_fsm_state120 : begin
            ap_NS_fsm = ap_ST_fsm_state121;
        end
        ap_ST_fsm_state121 : begin
            ap_NS_fsm = ap_ST_fsm_state122;
        end
        ap_ST_fsm_state122 : begin
            ap_NS_fsm = ap_ST_fsm_state123;
        end
        ap_ST_fsm_state123 : begin
            ap_NS_fsm = ap_ST_fsm_state124;
        end
        ap_ST_fsm_state124 : begin
            ap_NS_fsm = ap_ST_fsm_state125;
        end
        ap_ST_fsm_state125 : begin
            ap_NS_fsm = ap_ST_fsm_state126;
        end
        ap_ST_fsm_state126 : begin
            ap_NS_fsm = ap_ST_fsm_state127;
        end
        ap_ST_fsm_state127 : begin
            ap_NS_fsm = ap_ST_fsm_state128;
        end
        ap_ST_fsm_state128 : begin
            ap_NS_fsm = ap_ST_fsm_state129;
        end
        ap_ST_fsm_state129 : begin
            ap_NS_fsm = ap_ST_fsm_state130;
        end
        ap_ST_fsm_state130 : begin
            ap_NS_fsm = ap_ST_fsm_state131;
        end
        ap_ST_fsm_state131 : begin
            ap_NS_fsm = ap_ST_fsm_state132;
        end
        ap_ST_fsm_state132 : begin
            ap_NS_fsm = ap_ST_fsm_state133;
        end
        ap_ST_fsm_state133 : begin
            ap_NS_fsm = ap_ST_fsm_state134;
        end
        ap_ST_fsm_state134 : begin
            ap_NS_fsm = ap_ST_fsm_state135;
        end
        ap_ST_fsm_state135 : begin
            ap_NS_fsm = ap_ST_fsm_state136;
        end
        ap_ST_fsm_state136 : begin
            ap_NS_fsm = ap_ST_fsm_state78;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln31_1_fu_628_p2 = (mul_ln31_reg_1057 + zext_ln28_reg_1039);

assign add_ln31_2_fu_642_p2 = (mul_ln31_1_reg_1062 + zext_ln28_reg_1039);

assign add_ln31_fu_601_p2 = ($signed(j_0_reg_307) + $signed(32'd1));

assign add_ln32_1_fu_656_p2 = (mul_ln32_reg_1067 + zext_ln28_reg_1039);

assign add_ln32_fu_607_p2 = ($signed(j_0_reg_307) + $signed(32'd4294967295));

assign add_ln52_fu_763_p1 = in_width;

assign add_ln52_fu_763_p2 = ($signed(phi_mul3_reg_342) + $signed(add_ln52_fu_763_p1));

assign add_ln55_1_fu_783_p2 = (phi_mul3_reg_342 + 32'd1);

assign add_ln55_2_fu_816_p2 = (i_1_reg_354 + add_ln55_1_reg_1159);

assign add_ln55_fu_800_p2 = (phi_mul3_reg_342 + i_1_reg_354);

assign add_ln56_1_fu_831_p2 = (i_1_reg_354 + add_ln56_reg_1164);

assign add_ln56_fu_789_p2 = ($signed(phi_mul3_reg_342) + $signed(32'd4294967295));

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state100 = ap_CS_fsm[32'd99];

assign ap_CS_fsm_state101 = ap_CS_fsm[32'd100];

assign ap_CS_fsm_state105 = ap_CS_fsm[32'd104];

assign ap_CS_fsm_state106 = ap_CS_fsm[32'd105];

assign ap_CS_fsm_state107 = ap_CS_fsm[32'd106];

assign ap_CS_fsm_state108 = ap_CS_fsm[32'd107];

assign ap_CS_fsm_state109 = ap_CS_fsm[32'd108];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state110 = ap_CS_fsm[32'd109];

assign ap_CS_fsm_state111 = ap_CS_fsm[32'd110];

assign ap_CS_fsm_state112 = ap_CS_fsm[32'd111];

assign ap_CS_fsm_state116 = ap_CS_fsm[32'd115];

assign ap_CS_fsm_state117 = ap_CS_fsm[32'd116];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state121 = ap_CS_fsm[32'd120];

assign ap_CS_fsm_state122 = ap_CS_fsm[32'd121];

assign ap_CS_fsm_state123 = ap_CS_fsm[32'd122];

assign ap_CS_fsm_state124 = ap_CS_fsm[32'd123];

assign ap_CS_fsm_state127 = ap_CS_fsm[32'd126];

assign ap_CS_fsm_state128 = ap_CS_fsm[32'd127];

assign ap_CS_fsm_state129 = ap_CS_fsm[32'd128];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state130 = ap_CS_fsm[32'd129];

assign ap_CS_fsm_state134 = ap_CS_fsm[32'd133];

assign ap_CS_fsm_state135 = ap_CS_fsm[32'd134];

assign ap_CS_fsm_state136 = ap_CS_fsm[32'd135];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_state44 = ap_CS_fsm[32'd43];

assign ap_CS_fsm_state45 = ap_CS_fsm[32'd44];

assign ap_CS_fsm_state46 = ap_CS_fsm[32'd45];

assign ap_CS_fsm_state47 = ap_CS_fsm[32'd46];

assign ap_CS_fsm_state48 = ap_CS_fsm[32'd47];

assign ap_CS_fsm_state49 = ap_CS_fsm[32'd48];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state50 = ap_CS_fsm[32'd49];

assign ap_CS_fsm_state51 = ap_CS_fsm[32'd50];

assign ap_CS_fsm_state55 = ap_CS_fsm[32'd54];

assign ap_CS_fsm_state56 = ap_CS_fsm[32'd55];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state60 = ap_CS_fsm[32'd59];

assign ap_CS_fsm_state61 = ap_CS_fsm[32'd60];

assign ap_CS_fsm_state62 = ap_CS_fsm[32'd61];

assign ap_CS_fsm_state63 = ap_CS_fsm[32'd62];

assign ap_CS_fsm_state66 = ap_CS_fsm[32'd65];

assign ap_CS_fsm_state67 = ap_CS_fsm[32'd66];

assign ap_CS_fsm_state68 = ap_CS_fsm[32'd67];

assign ap_CS_fsm_state69 = ap_CS_fsm[32'd68];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state73 = ap_CS_fsm[32'd72];

assign ap_CS_fsm_state74 = ap_CS_fsm[32'd73];

assign ap_CS_fsm_state75 = ap_CS_fsm[32'd74];

assign ap_CS_fsm_state76 = ap_CS_fsm[32'd75];

assign ap_CS_fsm_state77 = ap_CS_fsm[32'd76];

assign ap_CS_fsm_state78 = ap_CS_fsm[32'd77];

assign ap_CS_fsm_state79 = ap_CS_fsm[32'd78];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state80 = ap_CS_fsm[32'd79];

assign ap_CS_fsm_state81 = ap_CS_fsm[32'd80];

assign ap_CS_fsm_state82 = ap_CS_fsm[32'd81];

assign ap_CS_fsm_state83 = ap_CS_fsm[32'd82];

assign ap_CS_fsm_state87 = ap_CS_fsm[32'd86];

assign ap_CS_fsm_state88 = ap_CS_fsm[32'd87];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state92 = ap_CS_fsm[32'd91];

assign ap_CS_fsm_state93 = ap_CS_fsm[32'd92];

assign ap_CS_fsm_state94 = ap_CS_fsm[32'd93];

assign ap_CS_fsm_state95 = ap_CS_fsm[32'd94];

assign ap_CS_fsm_state98 = ap_CS_fsm[32'd97];

assign ap_CS_fsm_state99 = ap_CS_fsm[32'd98];

assign empty_12_fu_513_p2 = (phi_mul_reg_238 + p_cast7_fu_509_p1);

assign empty_13_fu_524_p2 = ((invdar11_reg_250 == 10'd999) ? 1'b1 : 1'b0);

assign empty_15_fu_530_p2 = ((invdar6_reg_226 == 10'd999) ? 1'b1 : 1'b0);

assign empty_17_fu_558_p2 = (phi_mul1_reg_273 + p_cast5_fu_554_p1);

assign empty_18_fu_569_p2 = ((invdar3_reg_285 == 10'd999) ? 1'b1 : 1'b0);

assign empty_20_fu_575_p2 = ((invdar_reg_261 == 10'd999) ? 1'b1 : 1'b0);

assign i_2_fu_899_p2 = (i_1_reg_354 + 32'd2);

assign i_fu_590_p2 = (i_0_reg_296 + 31'd1);

assign icmp_ln28_fu_585_p1 = in_width;

assign icmp_ln28_fu_585_p2 = (($signed(zext_ln28_fu_581_p1) < $signed(icmp_ln28_fu_585_p1)) ? 1'b1 : 1'b0);

assign icmp_ln29_fu_596_p2 = (($signed(j_0_reg_307) < $signed(in_height)) ? 1'b1 : 1'b0);

assign icmp_ln30_fu_670_p2 = ((l_0_reg_319 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln52_fu_772_p2 = (($signed(zext_ln52_fu_768_p1) < $signed(in_height)) ? 1'b1 : 1'b0);

assign icmp_ln53_fu_795_p1 = in_width;

assign icmp_ln53_fu_795_p2 = (($signed(i_1_reg_354) < $signed(icmp_ln53_fu_795_p1)) ? 1'b1 : 1'b0);

assign icmp_ln54_fu_846_p2 = ((l_1_reg_366 == 2'd3) ? 1'b1 : 1'b0);

assign in_verts_lightmap_address0 = 30'd0;

assign in_verts_lightmap_address1 = 30'd0;

assign in_verts_lightmap_ce0 = 1'b0;

assign in_verts_lightmap_ce1 = 1'b0;

assign in_verts_lightmap_d0 = 64'd0;

assign in_verts_lightmap_d1 = 64'd0;

assign in_verts_lightmap_we0 = 1'b0;

assign in_verts_lightmap_we1 = 1'b0;

assign in_verts_st_address0 = p_cast6_fu_519_p1;

assign in_verts_xyz_address0 = p_cast_fu_564_p1;

assign indvarinc12_fu_503_p2 = (invdar11_reg_250 + 10'd1);

assign indvarinc4_fu_548_p2 = (invdar3_reg_285 + 10'd1);

assign indvarinc7_fu_497_p2 = (invdar6_reg_226 + 10'd1);

assign indvarinc_fu_542_p2 = (invdar_reg_261 + 10'd1);

assign j_2_fu_777_p2 = (j_1_reg_331 + 31'd1);

assign j_fu_723_p2 = ($signed(j_0_reg_307) + $signed(32'd2));

assign l_2_fu_852_p2 = (l_1_reg_366 + 2'd1);

assign l_fu_676_p2 = (l_0_reg_319 + 2'd1);

assign mul_ln31_1_fu_618_p0 = in_width;

assign mul_ln31_1_fu_618_p2 = ($signed(mul_ln31_1_fu_618_p0) * $signed(add_ln31_fu_601_p2));

assign mul_ln31_fu_613_p0 = in_width;

assign mul_ln31_fu_613_p2 = ($signed(mul_ln31_fu_613_p0) * $signed(j_0_reg_307));

assign mul_ln32_fu_623_p0 = in_width;

assign mul_ln32_fu_623_p2 = ($signed(mul_ln32_fu_623_p0) * $signed(add_ln32_fu_607_p2));

assign mul_ln37_1_fu_650_p0 = add_ln31_2_fu_642_p2;

assign mul_ln37_1_fu_650_p2 = ($signed(mul_ln37_1_fu_650_p0) * $signed('h3E8));

assign mul_ln37_fu_636_p0 = add_ln31_1_fu_628_p2;

assign mul_ln37_fu_636_p2 = ($signed(mul_ln37_fu_636_p0) * $signed('h3E8));

assign mul_ln38_fu_664_p0 = add_ln32_1_fu_656_p2;

assign mul_ln38_fu_664_p2 = ($signed(mul_ln38_fu_664_p0) * $signed('h3E8));

assign mul_ln61_1_fu_825_p0 = add_ln55_2_fu_816_p2;

assign mul_ln61_1_fu_825_p2 = ($signed(mul_ln61_1_fu_825_p0) * $signed('h3E8));

assign mul_ln61_fu_810_p0 = add_ln55_fu_800_p2;

assign mul_ln61_fu_810_p2 = ($signed(mul_ln61_fu_810_p0) * $signed('h3E8));

assign mul_ln62_fu_840_p0 = add_ln56_1_fu_831_p2;

assign mul_ln62_fu_840_p2 = ($signed(mul_ln62_fu_840_p0) * $signed('h3E8));

assign next_mul2_fu_536_p2 = (phi_mul1_reg_273 + 20'd1000);

assign next_mul_fu_491_p2 = (phi_mul_reg_238 + 20'd1000);

assign p_cast5_fu_554_p1 = invdar3_reg_285;

assign p_cast6_fu_519_p1 = empty_12_fu_513_p2;

assign p_cast7_fu_509_p1 = invdar11_reg_250;

assign p_cast_fu_564_p1 = empty_17_fu_558_p2;

assign sext_ln37_2_fu_699_p1 = $signed(tmp_28_fu_691_p3);

assign sext_ln37_3_fu_736_p1 = $signed(tmp_30_fu_729_p3);

assign sext_ln38_1_fu_749_p1 = $signed(tmp_32_fu_742_p3);

assign sext_ln61_2_fu_875_p1 = $signed(tmp_35_fu_867_p3);

assign sext_ln61_3_fu_912_p1 = $signed(tmp_37_fu_905_p3);

assign sext_ln62_1_fu_925_p1 = $signed(tmp_39_fu_918_p3);

assign tmp_27_fu_682_p4 = {{mul_ln37_reg_1072[42:2]}};

assign tmp_28_fu_691_p3 = {{tmp_27_fu_682_p4}, {l_0_reg_319}};

assign tmp_30_fu_729_p3 = {{tmp_29_reg_1101}, {l_0_reg_319}};

assign tmp_32_fu_742_p3 = {{tmp_31_reg_1106}, {l_0_reg_319}};

assign tmp_34_fu_858_p4 = {{mul_ln61_reg_1172[42:2]}};

assign tmp_35_fu_867_p3 = {{tmp_34_fu_858_p4}, {l_1_reg_366}};

assign tmp_37_fu_905_p3 = {{tmp_36_reg_1201}, {l_1_reg_366}};

assign tmp_39_fu_918_p3 = {{tmp_38_reg_1206}, {l_1_reg_366}};

assign zext_ln28_fu_581_p1 = i_0_reg_296;

assign zext_ln52_fu_768_p1 = j_1_reg_331;

always @ (posedge ap_clk) begin
    p_cast6_reg_970[63:20] <= 44'b00000000000000000000000000000000000000000000;
    p_cast_reg_1012[63:20] <= 44'b00000000000000000000000000000000000000000000;
    zext_ln28_reg_1039[31] <= 1'b0;
    mul_ln37_reg_1072[2:0] <= 3'b000;
    mul_ln37_1_reg_1077[2:0] <= 3'b000;
    mul_ln38_reg_1082[2:0] <= 3'b000;
    in_verts_st_buf_addr_1_reg_1095[2] <= 1'b0;
    in_verts_xyz_buf_add_1_reg_1111[2] <= 1'b0;
    in_verts_st_buf_addr_2_reg_1122[2] <= 1'b0;
    in_verts_st_buf_addr_3_reg_1127[2] <= 1'b0;
    mul_ln61_reg_1172[2:0] <= 3'b000;
    mul_ln61_1_reg_1177[2:0] <= 3'b000;
    mul_ln62_reg_1182[2:0] <= 3'b000;
    in_verts_st_buf_addr_4_reg_1195[2] <= 1'b0;
    in_verts_xyz_buf_add_4_reg_1211[2] <= 1'b0;
    in_verts_st_buf_addr_5_reg_1222[2] <= 1'b0;
    in_verts_st_buf_addr_6_reg_1227[2] <= 1'b0;
end

endmodule //PutMeshOnCurve
