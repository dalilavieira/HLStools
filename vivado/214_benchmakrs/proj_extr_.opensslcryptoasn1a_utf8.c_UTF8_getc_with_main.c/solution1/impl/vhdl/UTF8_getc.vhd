-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2019.1
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity UTF8_getc is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    str_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    str_ce0 : OUT STD_LOGIC;
    str_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    len : IN STD_LOGIC_VECTOR (31 downto 0);
    val_r_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    val_r_ce0 : OUT STD_LOGIC;
    val_r_we0 : OUT STD_LOGIC;
    val_r_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of UTF8_getc is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "UTF8_getc,hls_ip_2019_1,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7k160t-fbg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=6.663000,HLS_SYN_LAT=4,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=115,HLS_SYN_LUT=739,HLS_VERSION=2019_1}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (17 downto 0) := "000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (17 downto 0) := "000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (17 downto 0) := "000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (17 downto 0) := "000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (17 downto 0) := "000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (17 downto 0) := "000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (17 downto 0) := "000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (17 downto 0) := "000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (17 downto 0) := "000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (17 downto 0) := "001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (17 downto 0) := "010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (17 downto 0) := "100000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv3_3 : STD_LOGIC_VECTOR (2 downto 0) := "011";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv3_6 : STD_LOGIC_VECTOR (2 downto 0) := "110";
    constant ap_const_lv4_D : STD_LOGIC_VECTOR (3 downto 0) := "1101";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv4_F : STD_LOGIC_VECTOR (3 downto 0) := "1111";
    constant ap_const_lv4_C : STD_LOGIC_VECTOR (3 downto 0) := "1100";
    constant ap_const_lv4_E : STD_LOGIC_VECTOR (3 downto 0) := "1110";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv64_2 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000010";
    constant ap_const_lv64_3 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000011";
    constant ap_const_lv64_4 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000100";
    constant ap_const_lv64_5 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000101";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv8_C0 : STD_LOGIC_VECTOR (7 downto 0) := "11000000";
    constant ap_const_lv8_E0 : STD_LOGIC_VECTOR (7 downto 0) := "11100000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv8_F0 : STD_LOGIC_VECTOR (7 downto 0) := "11110000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv8_F8 : STD_LOGIC_VECTOR (7 downto 0) := "11111000";
    constant ap_const_lv8_FC : STD_LOGIC_VECTOR (7 downto 0) := "11111100";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv30_1 : STD_LOGIC_VECTOR (29 downto 0) := "000000000000000000000000000001";
    constant ap_const_lv31_1 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000001";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv8_80 : STD_LOGIC_VECTOR (7 downto 0) := "10000000";
    constant ap_const_lv38_0 : STD_LOGIC_VECTOR (37 downto 0) := "00000000000000000000000000000000000000";
    constant ap_const_lv43_0 : STD_LOGIC_VECTOR (42 downto 0) := "0000000000000000000000000000000000000000000";
    constant ap_const_lv18_0 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000000";
    constant ap_const_lv34_0 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000000000000000000";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal ap_CS_fsm : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal reg_445 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal reg_449 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal reg_453 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal str_load_reg_1212 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal tmp_fu_463_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_reg_1222 : STD_LOGIC_VECTOR (0 downto 0);
    signal value_fu_475_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln28_fu_497_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln28_reg_1231 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln38_fu_521_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln38_reg_1235 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln50_fu_545_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln50_reg_1239 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln64_fu_569_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln64_reg_1243 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln80_fu_593_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln81_fu_599_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_6_gep_fu_195_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal icmp_ln65_fu_604_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_3_gep_fu_204_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal icmp_ln51_fu_618_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_1_gep_fu_213_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal icmp_ln39_fu_624_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_gep_fu_222_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal icmp_ln29_fu_638_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln83_fu_652_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln83_reg_1290 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln83_1_fu_666_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln83_1_reg_1299 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln83_2_fu_680_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln83_2_reg_1308 : STD_LOGIC_VECTOR (0 downto 0);
    signal str_load_14_reg_1317 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal icmp_ln83_3_fu_694_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln83_3_reg_1322 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln100_fu_801_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal icmp_ln35_reg_1440 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln47_reg_1428 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln61_reg_1407 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln77_reg_1377 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln83_4_fu_708_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln95_fu_795_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln67_fu_813_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln67_reg_1342 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_7_gep_fu_272_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal icmp_ln67_1_fu_827_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln67_1_reg_1351 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_8_gep_fu_281_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal icmp_ln67_2_fu_841_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln67_2_reg_1360 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_9_gep_fu_290_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal value_5_fu_898_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal icmp_ln67_3_fu_855_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln77_fu_936_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln53_fu_950_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln53_reg_1381 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_4_gep_fu_299_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal icmp_ln53_1_fu_964_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln53_1_reg_1390 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_5_gep_fu_308_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal value_3_fu_1023_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal icmp_ln53_2_fu_978_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln61_fu_1057_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln41_fu_1071_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln41_reg_1411 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_2_gep_fu_317_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal value_2_fu_1112_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal icmp_ln41_1_fu_1085_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln47_fu_1132_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal value_1_fu_1167_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal icmp_ln31_fu_1146_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln35_fu_1180_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_value_4_phi_fu_329_p12 : STD_LOGIC_VECTOR (63 downto 0);
    signal value_4_reg_326 : STD_LOGIC_VECTOR (63 downto 0);
    signal value_6_fu_756_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_phi_mux_ret_4_phi_fu_352_p12 : STD_LOGIC_VECTOR (2 downto 0);
    signal ret_4_reg_344 : STD_LOGIC_VECTOR (2 downto 0);
    signal p_0_reg_372 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln20_fu_457_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln26_fu_471_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_3_fu_479_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal and_ln_fu_489_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_8_fu_503_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal and_ln1_fu_513_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_4_fu_527_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal and_ln3_fu_537_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_9_fu_551_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal and_ln5_fu_561_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_12_fu_575_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal and_ln7_fu_585_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_7_fu_609_p4 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_2_fu_629_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal grp_fu_435_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal and_ln9_fu_644_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal and_ln83_1_fu_658_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal and_ln83_2_fu_672_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal and_ln83_3_fu_686_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal and_ln83_4_fu_700_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln89_fu_714_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln90_fu_717_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln91_fu_721_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln92_fu_725_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln94_1_fu_733_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln94_fu_729_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal or_ln4_fu_736_p7 : STD_LOGIC_VECTOR (30 downto 0);
    signal zext_ln94_fu_752_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_32_fu_765_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_33_fu_775_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln95_fu_783_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_34_fu_787_p3 : STD_LOGIC_VECTOR (37 downto 0);
    signal and_ln8_fu_805_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal and_ln67_1_fu_819_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal and_ln67_2_fu_833_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal and_ln67_3_fu_847_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln72_fu_861_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln76_2_fu_876_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln74_fu_864_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln76_1_fu_872_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln76_fu_868_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal or_ln3_fu_880_p6 : STD_LOGIC_VECTOR (25 downto 0);
    signal zext_ln76_fu_894_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_29_fu_906_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_30_fu_916_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln77_fu_924_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_31_fu_928_p3 : STD_LOGIC_VECTOR (42 downto 0);
    signal and_ln6_fu_942_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal and_ln53_1_fu_956_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal and_ln53_2_fu_970_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln57_fu_984_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln60_2_fu_995_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln60_1_fu_991_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln60_fu_987_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal or_ln2_fu_999_p5 : STD_LOGIC_VECTOR (20 downto 0);
    signal zext_ln60_fu_1011_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_fu_1015_p3 : STD_LOGIC_VECTOR (49 downto 0);
    signal tmp_20_fu_1027_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_21_fu_1037_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln61_fu_1045_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_22_fu_1049_p3 : STD_LOGIC_VECTOR (33 downto 0);
    signal and_ln4_fu_1063_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal and_ln41_1_fu_1077_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln46_1_fu_1099_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln45_fu_1091_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln46_fu_1095_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal or_ln1_fu_1102_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_13_fu_1116_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_14_fu_1124_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal and_ln2_fu_1138_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln34_1_fu_1156_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal trunc_ln34_fu_1152_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal or_ln_fu_1159_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_5_fu_1171_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state18 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (17 downto 0);


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    p_0_reg_372_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln80_fu_593_p2 = ap_const_lv1_0) and (icmp_ln64_fu_569_p2 = ap_const_lv1_0) and (icmp_ln50_fu_545_p2 = ap_const_lv1_0) and (icmp_ln38_fu_521_p2 = ap_const_lv1_0) and (icmp_ln28_fu_497_p2 = ap_const_lv1_0) and (tmp_fu_463_p3 = ap_const_lv1_1))) then 
                p_0_reg_372 <= ap_const_lv4_E;
            elsif ((((ap_const_logic_1 = ap_CS_fsm_state17) and (icmp_ln35_fu_1180_p2 = ap_const_lv1_1) and (icmp_ln31_fu_1146_p2 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state16) and (icmp_ln47_fu_1132_p2 = ap_const_lv1_1) and (icmp_ln41_1_fu_1085_p2 = ap_const_lv1_1) and (icmp_ln41_reg_1411 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state14) and (icmp_ln61_fu_1057_p2 = ap_const_lv1_1) and (icmp_ln53_2_fu_978_p2 = ap_const_lv1_1) and (icmp_ln53_1_reg_1390 = ap_const_lv1_1) and (icmp_ln53_reg_1381 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state11) and (icmp_ln77_fu_936_p2 = ap_const_lv1_1) and (icmp_ln67_3_fu_855_p2 = ap_const_lv1_1) and (icmp_ln67_2_reg_1360 = ap_const_lv1_1) and (icmp_ln67_1_reg_1351 = ap_const_lv1_1) and (icmp_ln67_reg_1342 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state7) and (icmp_ln95_fu_795_p2 = ap_const_lv1_1) and (icmp_ln83_4_fu_708_p2 = ap_const_lv1_1) and (icmp_ln83_3_reg_1322 = ap_const_lv1_1) and (icmp_ln83_2_reg_1308 = ap_const_lv1_1) and (icmp_ln83_1_reg_1299 = ap_const_lv1_1) and (icmp_ln83_reg_1290 = ap_const_lv1_1) and (icmp_ln64_reg_1243 = ap_const_lv1_0) and (icmp_ln50_reg_1239 = ap_const_lv1_0) and (icmp_ln38_reg_1235 = ap_const_lv1_0) and (icmp_ln28_reg_1231 = ap_const_lv1_0) and (tmp_reg_1222 = ap_const_lv1_1)))) then 
                p_0_reg_372 <= ap_const_lv4_C;
            elsif ((((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln29_fu_638_p2 = ap_const_lv1_1) and (icmp_ln28_fu_497_p2 = ap_const_lv1_1) and (tmp_fu_463_p3 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln39_fu_624_p2 = ap_const_lv1_1) and (icmp_ln38_fu_521_p2 = ap_const_lv1_1) and (icmp_ln28_fu_497_p2 = ap_const_lv1_0) and (tmp_fu_463_p3 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln51_fu_618_p2 = ap_const_lv1_1) and (icmp_ln50_fu_545_p2 = ap_const_lv1_1) and (icmp_ln38_fu_521_p2 = ap_const_lv1_0) and (icmp_ln28_fu_497_p2 = ap_const_lv1_0) and (tmp_fu_463_p3 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln65_fu_604_p2 = ap_const_lv1_1) and (icmp_ln64_fu_569_p2 = ap_const_lv1_1) and (icmp_ln50_fu_545_p2 = ap_const_lv1_0) and (icmp_ln38_fu_521_p2 = ap_const_lv1_0) and (icmp_ln28_fu_497_p2 = ap_const_lv1_0) and (tmp_fu_463_p3 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln81_fu_599_p2 = ap_const_lv1_1) and (icmp_ln80_fu_593_p2 = ap_const_lv1_1) and (icmp_ln64_fu_569_p2 = ap_const_lv1_0) and (icmp_ln50_fu_545_p2 = ap_const_lv1_0) and (icmp_ln38_fu_521_p2 = ap_const_lv1_0) and (icmp_ln28_fu_497_p2 = ap_const_lv1_0) and (tmp_fu_463_p3 = ap_const_lv1_1)))) then 
                p_0_reg_372 <= ap_const_lv4_F;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (icmp_ln20_fu_457_p2 = ap_const_lv1_1))) then 
                p_0_reg_372 <= ap_const_lv4_0;
            elsif ((((ap_const_logic_1 = ap_CS_fsm_state17) and (icmp_ln31_fu_1146_p2 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state16) and ((icmp_ln41_1_fu_1085_p2 = ap_const_lv1_0) or (icmp_ln41_reg_1411 = ap_const_lv1_0))) or ((ap_const_logic_1 = ap_CS_fsm_state14) and ((icmp_ln53_reg_1381 = ap_const_lv1_0) or ((icmp_ln53_2_fu_978_p2 = ap_const_lv1_0) or (icmp_ln53_1_reg_1390 = ap_const_lv1_0)))) or ((ap_const_logic_1 = ap_CS_fsm_state11) and ((icmp_ln67_reg_1342 = ap_const_lv1_0) or ((icmp_ln67_1_reg_1351 = ap_const_lv1_0) or ((icmp_ln67_3_fu_855_p2 = ap_const_lv1_0) or (icmp_ln67_2_reg_1360 = ap_const_lv1_0))))) or ((ap_const_logic_1 = ap_CS_fsm_state7) and ((((((icmp_ln83_3_reg_1322 = ap_const_lv1_0) and (icmp_ln64_reg_1243 = ap_const_lv1_0) and (icmp_ln50_reg_1239 = ap_const_lv1_0) and (icmp_ln38_reg_1235 = ap_const_lv1_0) and (icmp_ln28_reg_1231 = ap_const_lv1_0) and (tmp_reg_1222 = ap_const_lv1_1)) or ((icmp_ln83_4_fu_708_p2 = ap_const_lv1_0) and (icmp_ln64_reg_1243 = ap_const_lv1_0) and (icmp_ln50_reg_1239 = ap_const_lv1_0) and (icmp_ln38_reg_1235 = ap_const_lv1_0) and (icmp_ln28_reg_1231 = ap_const_lv1_0) and (tmp_reg_1222 = ap_const_lv1_1))) or ((icmp_ln83_2_reg_1308 = ap_const_lv1_0) and (icmp_ln64_reg_1243 = ap_const_lv1_0) and (icmp_ln50_reg_1239 = ap_const_lv1_0) and (icmp_ln38_reg_1235 = ap_const_lv1_0) and (icmp_ln28_reg_1231 = ap_const_lv1_0) and (tmp_reg_1222 = ap_const_lv1_1))) or ((icmp_ln83_1_reg_1299 = ap_const_lv1_0) and (icmp_ln64_reg_1243 = ap_const_lv1_0) and (icmp_ln50_reg_1239 = ap_const_lv1_0) and (icmp_ln38_reg_1235 = ap_const_lv1_0) and (icmp_ln28_reg_1231 = ap_const_lv1_0) and (tmp_reg_1222 = ap_const_lv1_1))) or ((icmp_ln83_reg_1290 = ap_const_lv1_0) and (icmp_ln64_reg_1243 = ap_const_lv1_0) and (icmp_ln50_reg_1239 = ap_const_lv1_0) and (icmp_ln38_reg_1235 = ap_const_lv1_0) and (icmp_ln28_reg_1231 = ap_const_lv1_0) and (tmp_reg_1222 = ap_const_lv1_1)))))) then 
                p_0_reg_372 <= ap_const_lv4_D;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state7) and ((tmp_reg_1222 = ap_const_lv1_0) or ((((((icmp_ln38_reg_1235 = ap_const_lv1_1) and (icmp_ln47_reg_1428 = ap_const_lv1_0) and (icmp_ln28_reg_1231 = ap_const_lv1_0)) or ((icmp_ln28_reg_1231 = ap_const_lv1_1) and (icmp_ln35_reg_1440 = ap_const_lv1_0))) or ((icmp_ln50_reg_1239 = ap_const_lv1_1) and (icmp_ln61_reg_1407 = ap_const_lv1_0) and (icmp_ln38_reg_1235 = ap_const_lv1_0) and (icmp_ln28_reg_1231 = ap_const_lv1_0))) or ((icmp_ln64_reg_1243 = ap_const_lv1_1) and (icmp_ln77_reg_1377 = ap_const_lv1_0) and (icmp_ln50_reg_1239 = ap_const_lv1_0) and (icmp_ln38_reg_1235 = ap_const_lv1_0) and (icmp_ln28_reg_1231 = ap_const_lv1_0))) or ((icmp_ln83_4_fu_708_p2 = ap_const_lv1_1) and (icmp_ln83_3_reg_1322 = ap_const_lv1_1) and (icmp_ln83_2_reg_1308 = ap_const_lv1_1) and (icmp_ln83_1_reg_1299 = ap_const_lv1_1) and (icmp_ln83_reg_1290 = ap_const_lv1_1) and (icmp_ln95_fu_795_p2 = ap_const_lv1_0) and (icmp_ln64_reg_1243 = ap_const_lv1_0) and (icmp_ln50_reg_1239 = ap_const_lv1_0) and (icmp_ln38_reg_1235 = ap_const_lv1_0) and (icmp_ln28_reg_1231 = ap_const_lv1_0)))))) then 
                p_0_reg_372 <= zext_ln100_fu_801_p1;
            end if; 
        end if;
    end process;

    ret_4_reg_344_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state7) and (icmp_ln83_4_fu_708_p2 = ap_const_lv1_1) and (icmp_ln83_3_reg_1322 = ap_const_lv1_1) and (icmp_ln83_2_reg_1308 = ap_const_lv1_1) and (icmp_ln83_1_reg_1299 = ap_const_lv1_1) and (icmp_ln83_reg_1290 = ap_const_lv1_1) and (icmp_ln95_fu_795_p2 = ap_const_lv1_0) and (icmp_ln64_reg_1243 = ap_const_lv1_0) and (icmp_ln50_reg_1239 = ap_const_lv1_0) and (icmp_ln38_reg_1235 = ap_const_lv1_0) and (icmp_ln28_reg_1231 = ap_const_lv1_0) and (tmp_reg_1222 = ap_const_lv1_1))) then 
                ret_4_reg_344 <= ap_const_lv3_6;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state11) and (icmp_ln67_3_fu_855_p2 = ap_const_lv1_1) and (icmp_ln67_2_reg_1360 = ap_const_lv1_1) and (icmp_ln67_1_reg_1351 = ap_const_lv1_1) and (icmp_ln67_reg_1342 = ap_const_lv1_1) and (icmp_ln77_fu_936_p2 = ap_const_lv1_0))) then 
                ret_4_reg_344 <= ap_const_lv3_5;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state14) and (icmp_ln53_2_fu_978_p2 = ap_const_lv1_1) and (icmp_ln53_1_reg_1390 = ap_const_lv1_1) and (icmp_ln53_reg_1381 = ap_const_lv1_1) and (icmp_ln61_fu_1057_p2 = ap_const_lv1_0))) then 
                ret_4_reg_344 <= ap_const_lv3_4;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state16) and (icmp_ln41_1_fu_1085_p2 = ap_const_lv1_1) and (icmp_ln41_reg_1411 = ap_const_lv1_1) and (icmp_ln47_fu_1132_p2 = ap_const_lv1_0))) then 
                ret_4_reg_344 <= ap_const_lv3_3;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state17) and (icmp_ln31_fu_1146_p2 = ap_const_lv1_1) and (icmp_ln35_fu_1180_p2 = ap_const_lv1_0))) then 
                ret_4_reg_344 <= ap_const_lv3_2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (tmp_fu_463_p3 = ap_const_lv1_0))) then 
                ret_4_reg_344 <= ap_const_lv3_1;
            end if; 
        end if;
    end process;

    value_4_reg_326_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state7) and (icmp_ln83_4_fu_708_p2 = ap_const_lv1_1) and (icmp_ln83_3_reg_1322 = ap_const_lv1_1) and (icmp_ln83_2_reg_1308 = ap_const_lv1_1) and (icmp_ln83_1_reg_1299 = ap_const_lv1_1) and (icmp_ln83_reg_1290 = ap_const_lv1_1) and (icmp_ln95_fu_795_p2 = ap_const_lv1_0) and (icmp_ln64_reg_1243 = ap_const_lv1_0) and (icmp_ln50_reg_1239 = ap_const_lv1_0) and (icmp_ln38_reg_1235 = ap_const_lv1_0) and (icmp_ln28_reg_1231 = ap_const_lv1_0) and (tmp_reg_1222 = ap_const_lv1_1))) then 
                                value_4_reg_326(30 downto 0) <= value_6_fu_756_p3(30 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_state11) and (icmp_ln67_3_fu_855_p2 = ap_const_lv1_1) and (icmp_ln67_2_reg_1360 = ap_const_lv1_1) and (icmp_ln67_1_reg_1351 = ap_const_lv1_1) and (icmp_ln67_reg_1342 = ap_const_lv1_1) and (icmp_ln77_fu_936_p2 = ap_const_lv1_0))) then 
                                value_4_reg_326(30 downto 0) <= value_5_fu_898_p3(30 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_state14) and (icmp_ln53_2_fu_978_p2 = ap_const_lv1_1) and (icmp_ln53_1_reg_1390 = ap_const_lv1_1) and (icmp_ln53_reg_1381 = ap_const_lv1_1) and (icmp_ln61_fu_1057_p2 = ap_const_lv1_0))) then 
                                value_4_reg_326(30 downto 0) <= value_3_fu_1023_p1(30 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_state16) and (icmp_ln41_1_fu_1085_p2 = ap_const_lv1_1) and (icmp_ln41_reg_1411 = ap_const_lv1_1) and (icmp_ln47_fu_1132_p2 = ap_const_lv1_0))) then 
                                value_4_reg_326(30 downto 0) <= value_2_fu_1112_p1(30 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_state17) and (icmp_ln31_fu_1146_p2 = ap_const_lv1_1) and (icmp_ln35_fu_1180_p2 = ap_const_lv1_0))) then 
                                value_4_reg_326(30 downto 0) <= value_1_fu_1167_p1(30 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (tmp_fu_463_p3 = ap_const_lv1_0))) then 
                                value_4_reg_326(30 downto 0) <= value_fu_475_p1(30 downto 0);
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (tmp_fu_463_p3 = ap_const_lv1_1))) then
                icmp_ln28_reg_1231 <= icmp_ln28_fu_497_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state17) and (icmp_ln31_fu_1146_p2 = ap_const_lv1_1))) then
                icmp_ln35_reg_1440 <= icmp_ln35_fu_1180_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln28_fu_497_p2 = ap_const_lv1_0) and (tmp_fu_463_p3 = ap_const_lv1_1))) then
                icmp_ln38_reg_1235 <= icmp_ln38_fu_521_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state15)) then
                icmp_ln41_reg_1411 <= icmp_ln41_fu_1071_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state16) and (icmp_ln41_1_fu_1085_p2 = ap_const_lv1_1) and (icmp_ln41_reg_1411 = ap_const_lv1_1))) then
                icmp_ln47_reg_1428 <= icmp_ln47_fu_1132_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln38_fu_521_p2 = ap_const_lv1_0) and (icmp_ln28_fu_497_p2 = ap_const_lv1_0) and (tmp_fu_463_p3 = ap_const_lv1_1))) then
                icmp_ln50_reg_1239 <= icmp_ln50_fu_545_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state13)) then
                icmp_ln53_1_reg_1390 <= icmp_ln53_1_fu_964_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state12)) then
                icmp_ln53_reg_1381 <= icmp_ln53_fu_950_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state14) and (icmp_ln53_2_fu_978_p2 = ap_const_lv1_1) and (icmp_ln53_1_reg_1390 = ap_const_lv1_1) and (icmp_ln53_reg_1381 = ap_const_lv1_1))) then
                icmp_ln61_reg_1407 <= icmp_ln61_fu_1057_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln50_fu_545_p2 = ap_const_lv1_0) and (icmp_ln38_fu_521_p2 = ap_const_lv1_0) and (icmp_ln28_fu_497_p2 = ap_const_lv1_0) and (tmp_fu_463_p3 = ap_const_lv1_1))) then
                icmp_ln64_reg_1243 <= icmp_ln64_fu_569_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state9)) then
                icmp_ln67_1_reg_1351 <= icmp_ln67_1_fu_827_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state10)) then
                icmp_ln67_2_reg_1360 <= icmp_ln67_2_fu_841_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state8)) then
                icmp_ln67_reg_1342 <= icmp_ln67_fu_813_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state11) and (icmp_ln67_3_fu_855_p2 = ap_const_lv1_1) and (icmp_ln67_2_reg_1360 = ap_const_lv1_1) and (icmp_ln67_1_reg_1351 = ap_const_lv1_1) and (icmp_ln67_reg_1342 = ap_const_lv1_1))) then
                icmp_ln77_reg_1377 <= icmp_ln77_fu_936_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                icmp_ln83_1_reg_1299 <= icmp_ln83_1_fu_666_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                icmp_ln83_2_reg_1308 <= icmp_ln83_2_fu_680_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
                icmp_ln83_3_reg_1322 <= icmp_ln83_3_fu_694_p2;
                str_load_14_reg_1317 <= str_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                icmp_ln83_reg_1290 <= icmp_ln83_fu_652_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state3))) then
                reg_445 <= str_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state4))) then
                reg_449 <= str_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state10))) then
                reg_453 <= str_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                str_load_reg_1212 <= str_q0;
                tmp_reg_1222 <= str_q0(7 downto 7);
            end if;
        end if;
    end process;
    value_4_reg_326(63 downto 31) <= "000000000000000000000000000000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state3, ap_CS_fsm_state8, ap_CS_fsm_state12, ap_CS_fsm_state4, ap_CS_fsm_state9, ap_CS_fsm_state5, ap_CS_fsm_state2, tmp_fu_463_p3, icmp_ln28_fu_497_p2, icmp_ln38_fu_521_p2, icmp_ln50_fu_545_p2, icmp_ln64_fu_569_p2, icmp_ln80_fu_593_p2, icmp_ln81_fu_599_p2, icmp_ln65_fu_604_p2, icmp_ln51_fu_618_p2, icmp_ln39_fu_624_p2, icmp_ln29_fu_638_p2, icmp_ln83_fu_652_p2, icmp_ln83_1_fu_666_p2, icmp_ln83_2_fu_680_p2, icmp_ln67_fu_813_p2, icmp_ln67_reg_1342, icmp_ln67_1_fu_827_p2, icmp_ln67_1_reg_1351, icmp_ln67_2_reg_1360, ap_CS_fsm_state11, icmp_ln67_3_fu_855_p2, icmp_ln77_fu_936_p2, icmp_ln53_fu_950_p2, icmp_ln53_reg_1381, icmp_ln53_1_reg_1390, ap_CS_fsm_state14, icmp_ln53_2_fu_978_p2, icmp_ln61_fu_1057_p2, icmp_ln41_reg_1411, ap_CS_fsm_state16, icmp_ln41_1_fu_1085_p2, icmp_ln47_fu_1132_p2, ap_CS_fsm_state17, icmp_ln31_fu_1146_p2, icmp_ln35_fu_1180_p2, icmp_ln20_fu_457_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (icmp_ln20_fu_457_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state18;
                elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (icmp_ln20_fu_457_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln28_fu_497_p2 = ap_const_lv1_1) and (icmp_ln29_fu_638_p2 = ap_const_lv1_0) and (tmp_fu_463_p3 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state17;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln38_fu_521_p2 = ap_const_lv1_1) and (icmp_ln39_fu_624_p2 = ap_const_lv1_0) and (icmp_ln28_fu_497_p2 = ap_const_lv1_0) and (tmp_fu_463_p3 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state15;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln50_fu_545_p2 = ap_const_lv1_1) and (icmp_ln51_fu_618_p2 = ap_const_lv1_0) and (icmp_ln38_fu_521_p2 = ap_const_lv1_0) and (icmp_ln28_fu_497_p2 = ap_const_lv1_0) and (tmp_fu_463_p3 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state12;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln64_fu_569_p2 = ap_const_lv1_1) and (icmp_ln65_fu_604_p2 = ap_const_lv1_0) and (icmp_ln50_fu_545_p2 = ap_const_lv1_0) and (icmp_ln38_fu_521_p2 = ap_const_lv1_0) and (icmp_ln28_fu_497_p2 = ap_const_lv1_0) and (tmp_fu_463_p3 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln80_fu_593_p2 = ap_const_lv1_1) and (icmp_ln81_fu_599_p2 = ap_const_lv1_0) and (icmp_ln64_fu_569_p2 = ap_const_lv1_0) and (icmp_ln50_fu_545_p2 = ap_const_lv1_0) and (icmp_ln38_fu_521_p2 = ap_const_lv1_0) and (icmp_ln28_fu_497_p2 = ap_const_lv1_0) and (tmp_fu_463_p3 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (((((((icmp_ln29_fu_638_p2 = ap_const_lv1_1) and (icmp_ln28_fu_497_p2 = ap_const_lv1_1) and (tmp_fu_463_p3 = ap_const_lv1_1)) or ((icmp_ln39_fu_624_p2 = ap_const_lv1_1) and (icmp_ln38_fu_521_p2 = ap_const_lv1_1) and (icmp_ln28_fu_497_p2 = ap_const_lv1_0) and (tmp_fu_463_p3 = ap_const_lv1_1))) or ((icmp_ln51_fu_618_p2 = ap_const_lv1_1) and (icmp_ln50_fu_545_p2 = ap_const_lv1_1) and (icmp_ln38_fu_521_p2 = ap_const_lv1_0) and (icmp_ln28_fu_497_p2 = ap_const_lv1_0) and (tmp_fu_463_p3 = ap_const_lv1_1))) or ((icmp_ln65_fu_604_p2 = ap_const_lv1_1) and (icmp_ln64_fu_569_p2 = ap_const_lv1_1) and (icmp_ln50_fu_545_p2 = ap_const_lv1_0) and (icmp_ln38_fu_521_p2 = ap_const_lv1_0) and (icmp_ln28_fu_497_p2 = ap_const_lv1_0) and (tmp_fu_463_p3 = ap_const_lv1_1))) or ((icmp_ln81_fu_599_p2 = ap_const_lv1_1) and (icmp_ln64_fu_569_p2 = ap_const_lv1_0) and (icmp_ln50_fu_545_p2 = ap_const_lv1_0) and (icmp_ln38_fu_521_p2 = ap_const_lv1_0) and (icmp_ln28_fu_497_p2 = ap_const_lv1_0) and (tmp_fu_463_p3 = ap_const_lv1_1))) or ((icmp_ln80_fu_593_p2 = ap_const_lv1_0) and (icmp_ln64_fu_569_p2 = ap_const_lv1_0) and (icmp_ln50_fu_545_p2 = ap_const_lv1_0) and (icmp_ln38_fu_521_p2 = ap_const_lv1_0) and (icmp_ln28_fu_497_p2 = ap_const_lv1_0) and (tmp_fu_463_p3 = ap_const_lv1_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_state18;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when ap_ST_fsm_state3 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln83_fu_652_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state4 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln83_1_fu_666_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state5 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln83_2_fu_680_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state18;
            when ap_ST_fsm_state8 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state8) and (icmp_ln67_fu_813_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state11;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when ap_ST_fsm_state9 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state9) and (icmp_ln67_1_fu_827_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state11;
                else
                    ap_NS_fsm <= ap_ST_fsm_state10;
                end if;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state11) and (icmp_ln67_3_fu_855_p2 = ap_const_lv1_1) and (icmp_ln67_2_reg_1360 = ap_const_lv1_1) and (icmp_ln67_1_reg_1351 = ap_const_lv1_1) and (icmp_ln67_reg_1342 = ap_const_lv1_1) and (icmp_ln77_fu_936_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_state18;
                end if;
            when ap_ST_fsm_state12 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state12) and (icmp_ln53_fu_950_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state14;
                else
                    ap_NS_fsm <= ap_ST_fsm_state13;
                end if;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state14) and (icmp_ln53_2_fu_978_p2 = ap_const_lv1_1) and (icmp_ln53_1_reg_1390 = ap_const_lv1_1) and (icmp_ln53_reg_1381 = ap_const_lv1_1) and (icmp_ln61_fu_1057_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_state18;
                end if;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state16;
            when ap_ST_fsm_state16 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state16) and (icmp_ln41_1_fu_1085_p2 = ap_const_lv1_1) and (icmp_ln41_reg_1411 = ap_const_lv1_1) and (icmp_ln47_fu_1132_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_state18;
                end if;
            when ap_ST_fsm_state17 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state17) and (icmp_ln31_fu_1146_p2 = ap_const_lv1_1) and (icmp_ln35_fu_1180_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_state18;
                end if;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    and_ln1_fu_513_p3 <= (tmp_8_fu_503_p4 & ap_const_lv4_0);
    and_ln2_fu_1138_p3 <= (grp_fu_435_p4 & ap_const_lv6_0);
    and_ln3_fu_537_p3 <= (tmp_4_fu_527_p4 & ap_const_lv3_0);
    and_ln41_1_fu_1077_p3 <= (grp_fu_435_p4 & ap_const_lv6_0);
    and_ln4_fu_1063_p3 <= (grp_fu_435_p4 & ap_const_lv6_0);
    and_ln53_1_fu_956_p3 <= (grp_fu_435_p4 & ap_const_lv6_0);
    and_ln53_2_fu_970_p3 <= (grp_fu_435_p4 & ap_const_lv6_0);
    and_ln5_fu_561_p3 <= (tmp_9_fu_551_p4 & ap_const_lv2_0);
    and_ln67_1_fu_819_p3 <= (grp_fu_435_p4 & ap_const_lv6_0);
    and_ln67_2_fu_833_p3 <= (grp_fu_435_p4 & ap_const_lv6_0);
    and_ln67_3_fu_847_p3 <= (grp_fu_435_p4 & ap_const_lv6_0);
    and_ln6_fu_942_p3 <= (grp_fu_435_p4 & ap_const_lv6_0);
    and_ln7_fu_585_p3 <= (tmp_12_fu_575_p4 & ap_const_lv1_0);
    and_ln83_1_fu_658_p3 <= (grp_fu_435_p4 & ap_const_lv6_0);
    and_ln83_2_fu_672_p3 <= (grp_fu_435_p4 & ap_const_lv6_0);
    and_ln83_3_fu_686_p3 <= (grp_fu_435_p4 & ap_const_lv6_0);
    and_ln83_4_fu_700_p3 <= (grp_fu_435_p4 & ap_const_lv6_0);
    and_ln8_fu_805_p3 <= (grp_fu_435_p4 & ap_const_lv6_0);
    and_ln9_fu_644_p3 <= (grp_fu_435_p4 & ap_const_lv6_0);
    and_ln_fu_489_p3 <= (tmp_3_fu_479_p4 & ap_const_lv5_0);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state16 <= ap_CS_fsm(15);
    ap_CS_fsm_state17 <= ap_CS_fsm(16);
    ap_CS_fsm_state18 <= ap_CS_fsm(17);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);

    ap_done_assign_proc : process(ap_CS_fsm_state18)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_ret_4_phi_fu_352_p12_assign_proc : process(tmp_reg_1222, icmp_ln28_reg_1231, icmp_ln38_reg_1235, icmp_ln50_reg_1239, icmp_ln64_reg_1243, icmp_ln83_reg_1290, icmp_ln83_1_reg_1299, icmp_ln83_2_reg_1308, icmp_ln83_3_reg_1322, ap_CS_fsm_state7, icmp_ln83_4_fu_708_p2, icmp_ln95_fu_795_p2, ret_4_reg_344)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state7) and (icmp_ln83_4_fu_708_p2 = ap_const_lv1_1) and (icmp_ln83_3_reg_1322 = ap_const_lv1_1) and (icmp_ln83_2_reg_1308 = ap_const_lv1_1) and (icmp_ln83_1_reg_1299 = ap_const_lv1_1) and (icmp_ln83_reg_1290 = ap_const_lv1_1) and (icmp_ln95_fu_795_p2 = ap_const_lv1_0) and (icmp_ln64_reg_1243 = ap_const_lv1_0) and (icmp_ln50_reg_1239 = ap_const_lv1_0) and (icmp_ln38_reg_1235 = ap_const_lv1_0) and (icmp_ln28_reg_1231 = ap_const_lv1_0) and (tmp_reg_1222 = ap_const_lv1_1))) then 
            ap_phi_mux_ret_4_phi_fu_352_p12 <= ap_const_lv3_6;
        else 
            ap_phi_mux_ret_4_phi_fu_352_p12 <= ret_4_reg_344;
        end if; 
    end process;


    ap_phi_mux_value_4_phi_fu_329_p12_assign_proc : process(tmp_reg_1222, icmp_ln28_reg_1231, icmp_ln38_reg_1235, icmp_ln50_reg_1239, icmp_ln64_reg_1243, icmp_ln83_reg_1290, icmp_ln83_1_reg_1299, icmp_ln83_2_reg_1308, icmp_ln83_3_reg_1322, ap_CS_fsm_state7, icmp_ln83_4_fu_708_p2, icmp_ln95_fu_795_p2, value_4_reg_326, value_6_fu_756_p3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state7) and (icmp_ln83_4_fu_708_p2 = ap_const_lv1_1) and (icmp_ln83_3_reg_1322 = ap_const_lv1_1) and (icmp_ln83_2_reg_1308 = ap_const_lv1_1) and (icmp_ln83_1_reg_1299 = ap_const_lv1_1) and (icmp_ln83_reg_1290 = ap_const_lv1_1) and (icmp_ln95_fu_795_p2 = ap_const_lv1_0) and (icmp_ln64_reg_1243 = ap_const_lv1_0) and (icmp_ln50_reg_1239 = ap_const_lv1_0) and (icmp_ln38_reg_1235 = ap_const_lv1_0) and (icmp_ln28_reg_1231 = ap_const_lv1_0) and (tmp_reg_1222 = ap_const_lv1_1))) then 
            ap_phi_mux_value_4_phi_fu_329_p12 <= value_6_fu_756_p3;
        else 
            ap_phi_mux_value_4_phi_fu_329_p12 <= value_4_reg_326;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state18)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

        ap_return <= std_logic_vector(IEEE.numeric_std.resize(signed(p_0_reg_372),32));

    grp_fu_435_p4 <= str_q0(7 downto 6);
    icmp_ln20_fu_457_p2 <= "1" when (signed(len) < signed(ap_const_lv32_1)) else "0";
    icmp_ln28_fu_497_p2 <= "1" when (and_ln_fu_489_p3 = ap_const_lv8_C0) else "0";
    icmp_ln29_fu_638_p2 <= "1" when (signed(tmp_2_fu_629_p4) < signed(ap_const_lv31_1)) else "0";
    icmp_ln31_fu_1146_p2 <= "1" when (and_ln2_fu_1138_p3 = ap_const_lv8_80) else "0";
    icmp_ln35_fu_1180_p2 <= "1" when (tmp_5_fu_1171_p4 = ap_const_lv4_0) else "0";
    icmp_ln38_fu_521_p2 <= "1" when (and_ln1_fu_513_p3 = ap_const_lv8_E0) else "0";
    icmp_ln39_fu_624_p2 <= "1" when (signed(len) < signed(ap_const_lv32_3)) else "0";
    icmp_ln41_1_fu_1085_p2 <= "1" when (and_ln41_1_fu_1077_p3 = ap_const_lv8_80) else "0";
    icmp_ln41_fu_1071_p2 <= "1" when (and_ln4_fu_1063_p3 = ap_const_lv8_80) else "0";
    icmp_ln47_fu_1132_p2 <= "1" when (tmp_14_fu_1124_p3 = ap_const_lv5_0) else "0";
    icmp_ln50_fu_545_p2 <= "1" when (and_ln3_fu_537_p3 = ap_const_lv8_F0) else "0";
    icmp_ln51_fu_618_p2 <= "1" when (signed(tmp_7_fu_609_p4) < signed(ap_const_lv30_1)) else "0";
    icmp_ln53_1_fu_964_p2 <= "1" when (and_ln53_1_fu_956_p3 = ap_const_lv8_80) else "0";
    icmp_ln53_2_fu_978_p2 <= "1" when (and_ln53_2_fu_970_p3 = ap_const_lv8_80) else "0";
    icmp_ln53_fu_950_p2 <= "1" when (and_ln6_fu_942_p3 = ap_const_lv8_80) else "0";
    icmp_ln61_fu_1057_p2 <= "1" when (tmp_22_fu_1049_p3 = ap_const_lv34_0) else "0";
    icmp_ln64_fu_569_p2 <= "1" when (and_ln5_fu_561_p3 = ap_const_lv8_F8) else "0";
    icmp_ln65_fu_604_p2 <= "1" when (signed(len) < signed(ap_const_lv32_5)) else "0";
    icmp_ln67_1_fu_827_p2 <= "1" when (and_ln67_1_fu_819_p3 = ap_const_lv8_80) else "0";
    icmp_ln67_2_fu_841_p2 <= "1" when (and_ln67_2_fu_833_p3 = ap_const_lv8_80) else "0";
    icmp_ln67_3_fu_855_p2 <= "1" when (and_ln67_3_fu_847_p3 = ap_const_lv8_80) else "0";
    icmp_ln67_fu_813_p2 <= "1" when (and_ln8_fu_805_p3 = ap_const_lv8_80) else "0";
    icmp_ln77_fu_936_p2 <= "1" when (tmp_31_fu_928_p3 = ap_const_lv43_0) else "0";
    icmp_ln80_fu_593_p2 <= "1" when (and_ln7_fu_585_p3 = ap_const_lv8_FC) else "0";
    icmp_ln81_fu_599_p2 <= "1" when (signed(len) < signed(ap_const_lv32_6)) else "0";
    icmp_ln83_1_fu_666_p2 <= "1" when (and_ln83_1_fu_658_p3 = ap_const_lv8_80) else "0";
    icmp_ln83_2_fu_680_p2 <= "1" when (and_ln83_2_fu_672_p3 = ap_const_lv8_80) else "0";
    icmp_ln83_3_fu_694_p2 <= "1" when (and_ln83_3_fu_686_p3 = ap_const_lv8_80) else "0";
    icmp_ln83_4_fu_708_p2 <= "1" when (and_ln83_4_fu_700_p3 = ap_const_lv8_80) else "0";
    icmp_ln83_fu_652_p2 <= "1" when (and_ln9_fu_644_p3 = ap_const_lv8_80) else "0";
    icmp_ln95_fu_795_p2 <= "1" when (tmp_34_fu_787_p3 = ap_const_lv38_0) else "0";
    or_ln1_fu_1102_p4 <= ((trunc_ln46_1_fu_1099_p1 & trunc_ln45_fu_1091_p1) & trunc_ln46_fu_1095_p1);
    or_ln2_fu_999_p5 <= (((trunc_ln57_fu_984_p1 & trunc_ln60_2_fu_995_p1) & trunc_ln60_1_fu_991_p1) & trunc_ln60_fu_987_p1);
    or_ln3_fu_880_p6 <= ((((trunc_ln72_fu_861_p1 & trunc_ln76_2_fu_876_p1) & trunc_ln74_fu_864_p1) & trunc_ln76_1_fu_872_p1) & trunc_ln76_fu_868_p1);
    or_ln4_fu_736_p7 <= (((((trunc_ln89_fu_714_p1 & trunc_ln90_fu_717_p1) & trunc_ln91_fu_721_p1) & trunc_ln92_fu_725_p1) & trunc_ln94_1_fu_733_p1) & trunc_ln94_fu_729_p1);
    or_ln_fu_1159_p3 <= (trunc_ln34_1_fu_1156_p1 & trunc_ln34_fu_1152_p1);
    p_1_gep_fu_213_p3 <= ap_const_lv64_1(10 - 1 downto 0);
    p_2_gep_fu_317_p3 <= ap_const_lv64_2(10 - 1 downto 0);
    p_3_gep_fu_204_p3 <= ap_const_lv64_1(10 - 1 downto 0);
    p_4_gep_fu_299_p3 <= ap_const_lv64_2(10 - 1 downto 0);
    p_5_gep_fu_308_p3 <= ap_const_lv64_3(10 - 1 downto 0);
    p_6_gep_fu_195_p3 <= ap_const_lv64_1(10 - 1 downto 0);
    p_7_gep_fu_272_p3 <= ap_const_lv64_2(10 - 1 downto 0);
    p_8_gep_fu_281_p3 <= ap_const_lv64_3(10 - 1 downto 0);
    p_9_gep_fu_290_p3 <= ap_const_lv64_4(10 - 1 downto 0);
    p_gep_fu_222_p3 <= ap_const_lv64_1(10 - 1 downto 0);

    str_address0_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state3, ap_CS_fsm_state8, ap_CS_fsm_state12, ap_CS_fsm_state15, ap_CS_fsm_state4, ap_CS_fsm_state9, ap_CS_fsm_state13, ap_CS_fsm_state5, ap_CS_fsm_state10, ap_CS_fsm_state2, tmp_fu_463_p3, icmp_ln28_fu_497_p2, icmp_ln38_fu_521_p2, icmp_ln50_fu_545_p2, icmp_ln64_fu_569_p2, icmp_ln80_fu_593_p2, icmp_ln81_fu_599_p2, p_6_gep_fu_195_p3, icmp_ln65_fu_604_p2, p_3_gep_fu_204_p3, icmp_ln51_fu_618_p2, p_1_gep_fu_213_p3, icmp_ln39_fu_624_p2, p_gep_fu_222_p3, icmp_ln29_fu_638_p2, ap_CS_fsm_state6, p_7_gep_fu_272_p3, p_8_gep_fu_281_p3, p_9_gep_fu_290_p3, p_4_gep_fu_299_p3, p_5_gep_fu_308_p3, p_2_gep_fu_317_p3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            str_address0 <= p_2_gep_fu_317_p3;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            str_address0 <= p_5_gep_fu_308_p3;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            str_address0 <= p_4_gep_fu_299_p3;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            str_address0 <= p_9_gep_fu_290_p3;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            str_address0 <= p_8_gep_fu_281_p3;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            str_address0 <= p_7_gep_fu_272_p3;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            str_address0 <= ap_const_lv64_5(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            str_address0 <= ap_const_lv64_4(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            str_address0 <= ap_const_lv64_3(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            str_address0 <= ap_const_lv64_2(10 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln28_fu_497_p2 = ap_const_lv1_1) and (icmp_ln29_fu_638_p2 = ap_const_lv1_0) and (tmp_fu_463_p3 = ap_const_lv1_1))) then 
            str_address0 <= p_gep_fu_222_p3;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln38_fu_521_p2 = ap_const_lv1_1) and (icmp_ln39_fu_624_p2 = ap_const_lv1_0) and (icmp_ln28_fu_497_p2 = ap_const_lv1_0) and (tmp_fu_463_p3 = ap_const_lv1_1))) then 
            str_address0 <= p_1_gep_fu_213_p3;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln50_fu_545_p2 = ap_const_lv1_1) and (icmp_ln51_fu_618_p2 = ap_const_lv1_0) and (icmp_ln38_fu_521_p2 = ap_const_lv1_0) and (icmp_ln28_fu_497_p2 = ap_const_lv1_0) and (tmp_fu_463_p3 = ap_const_lv1_1))) then 
            str_address0 <= p_3_gep_fu_204_p3;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln64_fu_569_p2 = ap_const_lv1_1) and (icmp_ln65_fu_604_p2 = ap_const_lv1_0) and (icmp_ln50_fu_545_p2 = ap_const_lv1_0) and (icmp_ln38_fu_521_p2 = ap_const_lv1_0) and (icmp_ln28_fu_497_p2 = ap_const_lv1_0) and (tmp_fu_463_p3 = ap_const_lv1_1))) then 
            str_address0 <= p_6_gep_fu_195_p3;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln80_fu_593_p2 = ap_const_lv1_1) and (icmp_ln81_fu_599_p2 = ap_const_lv1_0) and (icmp_ln64_fu_569_p2 = ap_const_lv1_0) and (icmp_ln50_fu_545_p2 = ap_const_lv1_0) and (icmp_ln38_fu_521_p2 = ap_const_lv1_0) and (icmp_ln28_fu_497_p2 = ap_const_lv1_0) and (tmp_fu_463_p3 = ap_const_lv1_1))) then 
            str_address0 <= ap_const_lv64_1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            str_address0 <= ap_const_lv64_0(10 - 1 downto 0);
        else 
            str_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    str_ce0_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state3, ap_CS_fsm_state8, ap_CS_fsm_state12, ap_CS_fsm_state15, ap_CS_fsm_state4, ap_CS_fsm_state9, ap_CS_fsm_state13, ap_CS_fsm_state5, ap_CS_fsm_state10, ap_CS_fsm_state2, tmp_fu_463_p3, icmp_ln28_fu_497_p2, icmp_ln38_fu_521_p2, icmp_ln50_fu_545_p2, icmp_ln64_fu_569_p2, icmp_ln80_fu_593_p2, icmp_ln81_fu_599_p2, icmp_ln65_fu_604_p2, icmp_ln51_fu_618_p2, icmp_ln39_fu_624_p2, icmp_ln29_fu_638_p2, ap_CS_fsm_state6)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state10) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln28_fu_497_p2 = ap_const_lv1_1) and (icmp_ln29_fu_638_p2 = ap_const_lv1_0) and (tmp_fu_463_p3 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln38_fu_521_p2 = ap_const_lv1_1) and (icmp_ln39_fu_624_p2 = ap_const_lv1_0) and (icmp_ln28_fu_497_p2 = ap_const_lv1_0) and (tmp_fu_463_p3 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln50_fu_545_p2 = ap_const_lv1_1) and (icmp_ln51_fu_618_p2 = ap_const_lv1_0) and (icmp_ln38_fu_521_p2 = ap_const_lv1_0) and (icmp_ln28_fu_497_p2 = ap_const_lv1_0) and (tmp_fu_463_p3 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln64_fu_569_p2 = ap_const_lv1_1) and (icmp_ln65_fu_604_p2 = ap_const_lv1_0) and (icmp_ln50_fu_545_p2 = ap_const_lv1_0) and (icmp_ln38_fu_521_p2 = ap_const_lv1_0) and (icmp_ln28_fu_497_p2 = ap_const_lv1_0) and (tmp_fu_463_p3 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln80_fu_593_p2 = ap_const_lv1_1) and (icmp_ln81_fu_599_p2 = ap_const_lv1_0) and (icmp_ln64_fu_569_p2 = ap_const_lv1_0) and (icmp_ln50_fu_545_p2 = ap_const_lv1_0) and (icmp_ln38_fu_521_p2 = ap_const_lv1_0) and (icmp_ln28_fu_497_p2 = ap_const_lv1_0) and (tmp_fu_463_p3 = ap_const_lv1_1)))) then 
            str_ce0 <= ap_const_logic_1;
        else 
            str_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    tmp_12_fu_575_p4 <= str_q0(7 downto 1);
    tmp_13_fu_1116_p3 <= reg_445(5 downto 5);
    tmp_14_fu_1124_p3 <= (trunc_ln46_1_fu_1099_p1 & tmp_13_fu_1116_p3);
    tmp_1_fu_1015_p3 <= (ap_const_lv18_0 & zext_ln60_fu_1011_p1);
    tmp_20_fu_1027_p4 <= reg_445(5 downto 4);
    tmp_21_fu_1037_p3 <= (trunc_ln57_fu_984_p1 & tmp_20_fu_1027_p4);
    tmp_22_fu_1049_p3 <= (ap_const_lv18_0 & zext_ln61_fu_1045_p1);
    tmp_29_fu_906_p4 <= reg_445(5 downto 3);
    tmp_2_fu_629_p4 <= len(31 downto 1);
    tmp_30_fu_916_p3 <= (trunc_ln72_fu_861_p1 & tmp_29_fu_906_p4);
    tmp_31_fu_928_p3 <= (ap_const_lv32_0 & zext_ln77_fu_924_p1);
    tmp_32_fu_765_p4 <= reg_445(5 downto 2);
    tmp_33_fu_775_p3 <= (trunc_ln89_fu_714_p1 & tmp_32_fu_765_p4);
    tmp_34_fu_787_p3 <= (ap_const_lv32_0 & zext_ln95_fu_783_p1);
    tmp_3_fu_479_p4 <= str_q0(7 downto 5);
    tmp_4_fu_527_p4 <= str_q0(7 downto 3);
    tmp_5_fu_1171_p4 <= str_load_reg_1212(4 downto 1);
    tmp_7_fu_609_p4 <= len(31 downto 2);
    tmp_8_fu_503_p4 <= str_q0(7 downto 4);
    tmp_9_fu_551_p4 <= str_q0(7 downto 2);
    tmp_fu_463_p3 <= str_q0(7 downto 7);
    trunc_ln26_fu_471_p1 <= str_q0(7 - 1 downto 0);
    trunc_ln34_1_fu_1156_p1 <= str_load_reg_1212(5 - 1 downto 0);
    trunc_ln34_fu_1152_p1 <= str_q0(6 - 1 downto 0);
    trunc_ln45_fu_1091_p1 <= reg_445(6 - 1 downto 0);
    trunc_ln46_1_fu_1099_p1 <= str_load_reg_1212(4 - 1 downto 0);
    trunc_ln46_fu_1095_p1 <= str_q0(6 - 1 downto 0);
    trunc_ln57_fu_984_p1 <= str_load_reg_1212(3 - 1 downto 0);
    trunc_ln60_1_fu_991_p1 <= reg_449(6 - 1 downto 0);
    trunc_ln60_2_fu_995_p1 <= reg_445(6 - 1 downto 0);
    trunc_ln60_fu_987_p1 <= str_q0(6 - 1 downto 0);
    trunc_ln72_fu_861_p1 <= str_load_reg_1212(2 - 1 downto 0);
    trunc_ln74_fu_864_p1 <= reg_449(6 - 1 downto 0);
    trunc_ln76_1_fu_872_p1 <= reg_453(6 - 1 downto 0);
    trunc_ln76_2_fu_876_p1 <= reg_445(6 - 1 downto 0);
    trunc_ln76_fu_868_p1 <= str_q0(6 - 1 downto 0);
    trunc_ln89_fu_714_p1 <= str_load_reg_1212(1 - 1 downto 0);
    trunc_ln90_fu_717_p1 <= reg_445(6 - 1 downto 0);
    trunc_ln91_fu_721_p1 <= reg_449(6 - 1 downto 0);
    trunc_ln92_fu_725_p1 <= reg_453(6 - 1 downto 0);
    trunc_ln94_1_fu_733_p1 <= str_load_14_reg_1317(6 - 1 downto 0);
    trunc_ln94_fu_729_p1 <= str_q0(6 - 1 downto 0);
    val_r_address0 <= ap_const_lv64_0(10 - 1 downto 0);

    val_r_ce0_assign_proc : process(ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            val_r_ce0 <= ap_const_logic_1;
        else 
            val_r_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    val_r_d0 <= ap_phi_mux_value_4_phi_fu_329_p12;

    val_r_we0_assign_proc : process(tmp_reg_1222, icmp_ln28_reg_1231, icmp_ln38_reg_1235, icmp_ln50_reg_1239, icmp_ln64_reg_1243, icmp_ln83_reg_1290, icmp_ln83_1_reg_1299, icmp_ln83_2_reg_1308, icmp_ln83_3_reg_1322, ap_CS_fsm_state7, icmp_ln35_reg_1440, icmp_ln47_reg_1428, icmp_ln61_reg_1407, icmp_ln77_reg_1377, icmp_ln83_4_fu_708_p2, icmp_ln95_fu_795_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state7) and ((tmp_reg_1222 = ap_const_lv1_0) or ((((((icmp_ln38_reg_1235 = ap_const_lv1_1) and (icmp_ln47_reg_1428 = ap_const_lv1_0) and (icmp_ln28_reg_1231 = ap_const_lv1_0)) or ((icmp_ln28_reg_1231 = ap_const_lv1_1) and (icmp_ln35_reg_1440 = ap_const_lv1_0))) or ((icmp_ln50_reg_1239 = ap_const_lv1_1) and (icmp_ln61_reg_1407 = ap_const_lv1_0) and (icmp_ln38_reg_1235 = ap_const_lv1_0) and (icmp_ln28_reg_1231 = ap_const_lv1_0))) or ((icmp_ln64_reg_1243 = ap_const_lv1_1) and (icmp_ln77_reg_1377 = ap_const_lv1_0) and (icmp_ln50_reg_1239 = ap_const_lv1_0) and (icmp_ln38_reg_1235 = ap_const_lv1_0) and (icmp_ln28_reg_1231 = ap_const_lv1_0))) or ((icmp_ln83_4_fu_708_p2 = ap_const_lv1_1) and (icmp_ln83_3_reg_1322 = ap_const_lv1_1) and (icmp_ln83_2_reg_1308 = ap_const_lv1_1) and (icmp_ln83_1_reg_1299 = ap_const_lv1_1) and (icmp_ln83_reg_1290 = ap_const_lv1_1) and (icmp_ln95_fu_795_p2 = ap_const_lv1_0) and (icmp_ln64_reg_1243 = ap_const_lv1_0) and (icmp_ln50_reg_1239 = ap_const_lv1_0) and (icmp_ln38_reg_1235 = ap_const_lv1_0) and (icmp_ln28_reg_1231 = ap_const_lv1_0)))))) then 
            val_r_we0 <= ap_const_logic_1;
        else 
            val_r_we0 <= ap_const_logic_0;
        end if; 
    end process;

    value_1_fu_1167_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln_fu_1159_p3),64));
    value_2_fu_1112_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln1_fu_1102_p4),64));
    value_3_fu_1023_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_1_fu_1015_p3),64));
    value_5_fu_898_p3 <= (ap_const_lv32_0 & zext_ln76_fu_894_p1);
    value_6_fu_756_p3 <= (ap_const_lv32_0 & zext_ln94_fu_752_p1);
    value_fu_475_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln26_fu_471_p1),64));
    zext_ln100_fu_801_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_ret_4_phi_fu_352_p12),4));
    zext_ln60_fu_1011_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln2_fu_999_p5),32));
    zext_ln61_fu_1045_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_21_fu_1037_p3),16));
    zext_ln76_fu_894_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln3_fu_880_p6),32));
    zext_ln77_fu_924_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_30_fu_916_p3),11));
    zext_ln94_fu_752_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln4_fu_736_p7),32));
    zext_ln95_fu_783_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_33_fu_775_p3),6));
end behav;
