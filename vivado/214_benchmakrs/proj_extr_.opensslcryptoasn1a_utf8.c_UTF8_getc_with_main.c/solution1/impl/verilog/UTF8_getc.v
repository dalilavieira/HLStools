// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="UTF8_getc,hls_ip_2019_1,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7k160t-fbg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=6.663000,HLS_SYN_LAT=4,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=115,HLS_SYN_LUT=739,HLS_VERSION=2019_1}" *)

module UTF8_getc (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        str_address0,
        str_ce0,
        str_q0,
        len,
        val_r_address0,
        val_r_ce0,
        val_r_we0,
        val_r_d0,
        ap_return
);

parameter    ap_ST_fsm_state1 = 18'd1;
parameter    ap_ST_fsm_state2 = 18'd2;
parameter    ap_ST_fsm_state3 = 18'd4;
parameter    ap_ST_fsm_state4 = 18'd8;
parameter    ap_ST_fsm_state5 = 18'd16;
parameter    ap_ST_fsm_state6 = 18'd32;
parameter    ap_ST_fsm_state7 = 18'd64;
parameter    ap_ST_fsm_state8 = 18'd128;
parameter    ap_ST_fsm_state9 = 18'd256;
parameter    ap_ST_fsm_state10 = 18'd512;
parameter    ap_ST_fsm_state11 = 18'd1024;
parameter    ap_ST_fsm_state12 = 18'd2048;
parameter    ap_ST_fsm_state13 = 18'd4096;
parameter    ap_ST_fsm_state14 = 18'd8192;
parameter    ap_ST_fsm_state15 = 18'd16384;
parameter    ap_ST_fsm_state16 = 18'd32768;
parameter    ap_ST_fsm_state17 = 18'd65536;
parameter    ap_ST_fsm_state18 = 18'd131072;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [9:0] str_address0;
output   str_ce0;
input  [7:0] str_q0;
input  [31:0] len;
output  [9:0] val_r_address0;
output   val_r_ce0;
output   val_r_we0;
output  [63:0] val_r_d0;
output  [31:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[9:0] str_address0;
reg str_ce0;
reg val_r_ce0;
reg val_r_we0;

(* fsm_encoding = "none" *) reg   [17:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [7:0] reg_445;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state12;
wire    ap_CS_fsm_state15;
reg   [7:0] reg_449;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state9;
wire    ap_CS_fsm_state13;
reg   [7:0] reg_453;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_state10;
reg   [7:0] str_load_reg_1212;
wire    ap_CS_fsm_state2;
wire   [0:0] tmp_fu_463_p3;
reg   [0:0] tmp_reg_1222;
wire   [63:0] value_fu_475_p1;
wire   [0:0] icmp_ln28_fu_497_p2;
reg   [0:0] icmp_ln28_reg_1231;
wire   [0:0] icmp_ln38_fu_521_p2;
reg   [0:0] icmp_ln38_reg_1235;
wire   [0:0] icmp_ln50_fu_545_p2;
reg   [0:0] icmp_ln50_reg_1239;
wire   [0:0] icmp_ln64_fu_569_p2;
reg   [0:0] icmp_ln64_reg_1243;
wire   [0:0] icmp_ln80_fu_593_p2;
wire   [0:0] icmp_ln81_fu_599_p2;
wire   [9:0] p_6_gep_fu_195_p3;
wire   [0:0] icmp_ln65_fu_604_p2;
wire   [9:0] p_3_gep_fu_204_p3;
wire   [0:0] icmp_ln51_fu_618_p2;
wire   [9:0] p_1_gep_fu_213_p3;
wire   [0:0] icmp_ln39_fu_624_p2;
wire   [9:0] p_gep_fu_222_p3;
wire   [0:0] icmp_ln29_fu_638_p2;
wire   [0:0] icmp_ln83_fu_652_p2;
reg   [0:0] icmp_ln83_reg_1290;
wire   [0:0] icmp_ln83_1_fu_666_p2;
reg   [0:0] icmp_ln83_1_reg_1299;
wire   [0:0] icmp_ln83_2_fu_680_p2;
reg   [0:0] icmp_ln83_2_reg_1308;
reg   [7:0] str_load_14_reg_1317;
wire    ap_CS_fsm_state6;
wire   [0:0] icmp_ln83_3_fu_694_p2;
reg   [0:0] icmp_ln83_3_reg_1322;
wire   [3:0] zext_ln100_fu_801_p1;
wire    ap_CS_fsm_state7;
reg   [0:0] icmp_ln35_reg_1440;
reg   [0:0] icmp_ln47_reg_1428;
reg   [0:0] icmp_ln61_reg_1407;
reg   [0:0] icmp_ln77_reg_1377;
wire   [0:0] icmp_ln83_4_fu_708_p2;
wire   [0:0] icmp_ln95_fu_795_p2;
wire   [0:0] icmp_ln67_fu_813_p2;
reg   [0:0] icmp_ln67_reg_1342;
wire   [9:0] p_7_gep_fu_272_p3;
wire   [0:0] icmp_ln67_1_fu_827_p2;
reg   [0:0] icmp_ln67_1_reg_1351;
wire   [9:0] p_8_gep_fu_281_p3;
wire   [0:0] icmp_ln67_2_fu_841_p2;
reg   [0:0] icmp_ln67_2_reg_1360;
wire   [9:0] p_9_gep_fu_290_p3;
wire   [63:0] value_5_fu_898_p3;
wire    ap_CS_fsm_state11;
wire   [0:0] icmp_ln67_3_fu_855_p2;
wire   [0:0] icmp_ln77_fu_936_p2;
wire   [0:0] icmp_ln53_fu_950_p2;
reg   [0:0] icmp_ln53_reg_1381;
wire   [9:0] p_4_gep_fu_299_p3;
wire   [0:0] icmp_ln53_1_fu_964_p2;
reg   [0:0] icmp_ln53_1_reg_1390;
wire   [9:0] p_5_gep_fu_308_p3;
wire   [63:0] value_3_fu_1023_p1;
wire    ap_CS_fsm_state14;
wire   [0:0] icmp_ln53_2_fu_978_p2;
wire   [0:0] icmp_ln61_fu_1057_p2;
wire   [0:0] icmp_ln41_fu_1071_p2;
reg   [0:0] icmp_ln41_reg_1411;
wire   [9:0] p_2_gep_fu_317_p3;
wire   [63:0] value_2_fu_1112_p1;
wire    ap_CS_fsm_state16;
wire   [0:0] icmp_ln41_1_fu_1085_p2;
wire   [0:0] icmp_ln47_fu_1132_p2;
wire   [63:0] value_1_fu_1167_p1;
wire    ap_CS_fsm_state17;
wire   [0:0] icmp_ln31_fu_1146_p2;
wire   [0:0] icmp_ln35_fu_1180_p2;
reg   [63:0] ap_phi_mux_value_4_phi_fu_329_p12;
reg   [63:0] value_4_reg_326;
wire   [63:0] value_6_fu_756_p3;
reg   [2:0] ap_phi_mux_ret_4_phi_fu_352_p12;
reg   [2:0] ret_4_reg_344;
reg   [3:0] p_0_reg_372;
wire   [0:0] icmp_ln20_fu_457_p2;
wire   [6:0] trunc_ln26_fu_471_p1;
wire   [2:0] tmp_3_fu_479_p4;
wire   [7:0] and_ln_fu_489_p3;
wire   [3:0] tmp_8_fu_503_p4;
wire   [7:0] and_ln1_fu_513_p3;
wire   [4:0] tmp_4_fu_527_p4;
wire   [7:0] and_ln3_fu_537_p3;
wire   [5:0] tmp_9_fu_551_p4;
wire   [7:0] and_ln5_fu_561_p3;
wire   [6:0] tmp_12_fu_575_p4;
wire   [7:0] and_ln7_fu_585_p3;
wire   [29:0] tmp_7_fu_609_p4;
wire   [30:0] tmp_2_fu_629_p4;
wire   [1:0] grp_fu_435_p4;
wire   [7:0] and_ln9_fu_644_p3;
wire   [7:0] and_ln83_1_fu_658_p3;
wire   [7:0] and_ln83_2_fu_672_p3;
wire   [7:0] and_ln83_3_fu_686_p3;
wire   [7:0] and_ln83_4_fu_700_p3;
wire   [0:0] trunc_ln89_fu_714_p1;
wire   [5:0] trunc_ln90_fu_717_p1;
wire   [5:0] trunc_ln91_fu_721_p1;
wire   [5:0] trunc_ln92_fu_725_p1;
wire   [5:0] trunc_ln94_1_fu_733_p1;
wire   [5:0] trunc_ln94_fu_729_p1;
wire   [30:0] or_ln4_fu_736_p7;
wire   [31:0] zext_ln94_fu_752_p1;
wire   [3:0] tmp_32_fu_765_p4;
wire   [4:0] tmp_33_fu_775_p3;
wire   [5:0] zext_ln95_fu_783_p1;
wire   [37:0] tmp_34_fu_787_p3;
wire   [7:0] and_ln8_fu_805_p3;
wire   [7:0] and_ln67_1_fu_819_p3;
wire   [7:0] and_ln67_2_fu_833_p3;
wire   [7:0] and_ln67_3_fu_847_p3;
wire   [1:0] trunc_ln72_fu_861_p1;
wire   [5:0] trunc_ln76_2_fu_876_p1;
wire   [5:0] trunc_ln74_fu_864_p1;
wire   [5:0] trunc_ln76_1_fu_872_p1;
wire   [5:0] trunc_ln76_fu_868_p1;
wire   [25:0] or_ln3_fu_880_p6;
wire   [31:0] zext_ln76_fu_894_p1;
wire   [2:0] tmp_29_fu_906_p4;
wire   [4:0] tmp_30_fu_916_p3;
wire   [10:0] zext_ln77_fu_924_p1;
wire   [42:0] tmp_31_fu_928_p3;
wire   [7:0] and_ln6_fu_942_p3;
wire   [7:0] and_ln53_1_fu_956_p3;
wire   [7:0] and_ln53_2_fu_970_p3;
wire   [2:0] trunc_ln57_fu_984_p1;
wire   [5:0] trunc_ln60_2_fu_995_p1;
wire   [5:0] trunc_ln60_1_fu_991_p1;
wire   [5:0] trunc_ln60_fu_987_p1;
wire   [20:0] or_ln2_fu_999_p5;
wire   [31:0] zext_ln60_fu_1011_p1;
wire   [49:0] tmp_1_fu_1015_p3;
wire   [1:0] tmp_20_fu_1027_p4;
wire   [4:0] tmp_21_fu_1037_p3;
wire   [15:0] zext_ln61_fu_1045_p1;
wire   [33:0] tmp_22_fu_1049_p3;
wire   [7:0] and_ln4_fu_1063_p3;
wire   [7:0] and_ln41_1_fu_1077_p3;
wire   [3:0] trunc_ln46_1_fu_1099_p1;
wire   [5:0] trunc_ln45_fu_1091_p1;
wire   [5:0] trunc_ln46_fu_1095_p1;
wire   [15:0] or_ln1_fu_1102_p4;
wire   [0:0] tmp_13_fu_1116_p3;
wire   [4:0] tmp_14_fu_1124_p3;
wire   [7:0] and_ln2_fu_1138_p3;
wire   [4:0] trunc_ln34_1_fu_1156_p1;
wire   [5:0] trunc_ln34_fu_1152_p1;
wire   [10:0] or_ln_fu_1159_p3;
wire   [3:0] tmp_5_fu_1171_p4;
wire    ap_CS_fsm_state18;
reg   [17:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 18'd1;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln80_fu_593_p2 == 1'd0) & (icmp_ln64_fu_569_p2 == 1'd0) & (icmp_ln50_fu_545_p2 == 1'd0) & (icmp_ln38_fu_521_p2 == 1'd0) & (icmp_ln28_fu_497_p2 == 1'd0) & (tmp_fu_463_p3 == 1'd1))) begin
        p_0_reg_372 <= 4'd14;
    end else if ((((1'b1 == ap_CS_fsm_state17) & (icmp_ln35_fu_1180_p2 == 1'd1) & (icmp_ln31_fu_1146_p2 == 1'd1)) | ((1'b1 == ap_CS_fsm_state16) & (icmp_ln47_fu_1132_p2 == 1'd1) & (icmp_ln41_1_fu_1085_p2 == 1'd1) & (icmp_ln41_reg_1411 == 1'd1)) | ((1'b1 == ap_CS_fsm_state14) & (icmp_ln61_fu_1057_p2 == 1'd1) & (icmp_ln53_2_fu_978_p2 == 1'd1) & (icmp_ln53_1_reg_1390 == 1'd1) & (icmp_ln53_reg_1381 == 1'd1)) | ((1'b1 == ap_CS_fsm_state11) & (icmp_ln77_fu_936_p2 == 1'd1) & (icmp_ln67_3_fu_855_p2 == 1'd1) & (icmp_ln67_2_reg_1360 == 1'd1) & (icmp_ln67_1_reg_1351 == 1'd1) & (icmp_ln67_reg_1342 == 1'd1)) | ((1'b1 == ap_CS_fsm_state7) & (icmp_ln95_fu_795_p2 == 1'd1) & (icmp_ln83_4_fu_708_p2 == 1'd1) & (icmp_ln83_3_reg_1322 == 1'd1) & (icmp_ln83_2_reg_1308 == 1'd1) & (icmp_ln83_1_reg_1299 == 1'd1) & (icmp_ln83_reg_1290 == 1'd1) & (icmp_ln64_reg_1243 == 1'd0) & (icmp_ln50_reg_1239 == 1'd0) & (icmp_ln38_reg_1235 == 1'd0) & (icmp_ln28_reg_1231 == 1'd0) & (tmp_reg_1222 == 1'd1)))) begin
        p_0_reg_372 <= 4'd12;
    end else if ((((1'b1 == ap_CS_fsm_state2) & (icmp_ln29_fu_638_p2 == 1'd1) & (icmp_ln28_fu_497_p2 == 1'd1) & (tmp_fu_463_p3 == 1'd1)) | ((1'b1 == ap_CS_fsm_state2) & (icmp_ln39_fu_624_p2 == 1'd1) & (icmp_ln38_fu_521_p2 == 1'd1) & (icmp_ln28_fu_497_p2 == 1'd0) & (tmp_fu_463_p3 == 1'd1)) | ((1'b1 == ap_CS_fsm_state2) & (icmp_ln51_fu_618_p2 == 1'd1) & (icmp_ln50_fu_545_p2 == 1'd1) & (icmp_ln38_fu_521_p2 == 1'd0) & (icmp_ln28_fu_497_p2 == 1'd0) & (tmp_fu_463_p3 == 1'd1)) | ((1'b1 == ap_CS_fsm_state2) & (icmp_ln65_fu_604_p2 == 1'd1) & (icmp_ln64_fu_569_p2 == 1'd1) & (icmp_ln50_fu_545_p2 == 1'd0) & (icmp_ln38_fu_521_p2 == 1'd0) & (icmp_ln28_fu_497_p2 == 1'd0) & (tmp_fu_463_p3 == 1'd1)) | ((1'b1 == ap_CS_fsm_state2) & (icmp_ln81_fu_599_p2 == 1'd1) & (icmp_ln80_fu_593_p2 == 1'd1) & (icmp_ln64_fu_569_p2 == 1'd0) & (icmp_ln50_fu_545_p2 == 1'd0) & (icmp_ln38_fu_521_p2 == 1'd0) & (icmp_ln28_fu_497_p2 == 1'd0) & (tmp_fu_463_p3 == 1'd1)))) begin
        p_0_reg_372 <= 4'd15;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (icmp_ln20_fu_457_p2 == 1'd1))) begin
        p_0_reg_372 <= 4'd0;
    end else if ((((1'b1 == ap_CS_fsm_state17) & (icmp_ln31_fu_1146_p2 == 1'd0)) | ((1'b1 == ap_CS_fsm_state16) & ((icmp_ln41_1_fu_1085_p2 == 1'd0) | (icmp_ln41_reg_1411 == 1'd0))) | ((1'b1 == ap_CS_fsm_state14) & ((icmp_ln53_reg_1381 == 1'd0) | ((icmp_ln53_2_fu_978_p2 == 1'd0) | (icmp_ln53_1_reg_1390 == 1'd0)))) | ((1'b1 == ap_CS_fsm_state11) & ((icmp_ln67_reg_1342 == 1'd0) | ((icmp_ln67_1_reg_1351 == 1'd0) | ((icmp_ln67_3_fu_855_p2 == 1'd0) | (icmp_ln67_2_reg_1360 == 1'd0))))) | ((1'b1 == ap_CS_fsm_state7) & ((((((icmp_ln83_3_reg_1322 == 1'd0) & (icmp_ln64_reg_1243 == 1'd0) & (icmp_ln50_reg_1239 == 1'd0) & (icmp_ln38_reg_1235 == 1'd0) & (icmp_ln28_reg_1231 == 1'd0) & (tmp_reg_1222 == 1'd1)) | ((icmp_ln83_4_fu_708_p2 == 1'd0) & (icmp_ln64_reg_1243 == 1'd0) & (icmp_ln50_reg_1239 == 1'd0) & (icmp_ln38_reg_1235 == 1'd0) & (icmp_ln28_reg_1231 == 1'd0) & (tmp_reg_1222 == 1'd1))) | ((icmp_ln83_2_reg_1308 == 1'd0) & (icmp_ln64_reg_1243 == 1'd0) & (icmp_ln50_reg_1239 == 1'd0) & (icmp_ln38_reg_1235 == 1'd0) & (icmp_ln28_reg_1231 == 1'd0) & (tmp_reg_1222 == 1'd1))) | ((icmp_ln83_1_reg_1299 == 1'd0) & (icmp_ln64_reg_1243 == 1'd0) & (icmp_ln50_reg_1239 == 1'd0) & (icmp_ln38_reg_1235 == 1'd0) & (icmp_ln28_reg_1231 == 1'd0) & (tmp_reg_1222 == 1'd1))) | ((icmp_ln83_reg_1290 == 1'd0) & (icmp_ln64_reg_1243 == 1'd0) & (icmp_ln50_reg_1239 == 1'd0) & (icmp_ln38_reg_1235 == 1'd0) & (icmp_ln28_reg_1231 == 1'd0) & (tmp_reg_1222 == 1'd1)))))) begin
        p_0_reg_372 <= 4'd13;
    end else if (((1'b1 == ap_CS_fsm_state7) & ((tmp_reg_1222 == 1'd0) | ((((((icmp_ln38_reg_1235 == 1'd1) & (icmp_ln47_reg_1428 == 1'd0) & (icmp_ln28_reg_1231 == 1'd0)) | ((icmp_ln28_reg_1231 == 1'd1) & (icmp_ln35_reg_1440 == 1'd0))) | ((icmp_ln50_reg_1239 == 1'd1) & (icmp_ln61_reg_1407 == 1'd0) & (icmp_ln38_reg_1235 == 1'd0) & (icmp_ln28_reg_1231 == 1'd0))) | ((icmp_ln64_reg_1243 == 1'd1) & (icmp_ln77_reg_1377 == 1'd0) & (icmp_ln50_reg_1239 == 1'd0) & (icmp_ln38_reg_1235 == 1'd0) & (icmp_ln28_reg_1231 == 1'd0))) | ((icmp_ln83_4_fu_708_p2 == 1'd1) & (icmp_ln83_3_reg_1322 == 1'd1) & (icmp_ln83_2_reg_1308 == 1'd1) & (icmp_ln83_1_reg_1299 == 1'd1) & (icmp_ln83_reg_1290 == 1'd1) & (icmp_ln95_fu_795_p2 == 1'd0) & (icmp_ln64_reg_1243 == 1'd0) & (icmp_ln50_reg_1239 == 1'd0) & (icmp_ln38_reg_1235 == 1'd0) & (icmp_ln28_reg_1231 == 1'd0)))))) begin
        p_0_reg_372 <= zext_ln100_fu_801_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state7) & (icmp_ln83_4_fu_708_p2 == 1'd1) & (icmp_ln83_3_reg_1322 == 1'd1) & (icmp_ln83_2_reg_1308 == 1'd1) & (icmp_ln83_1_reg_1299 == 1'd1) & (icmp_ln83_reg_1290 == 1'd1) & (icmp_ln95_fu_795_p2 == 1'd0) & (icmp_ln64_reg_1243 == 1'd0) & (icmp_ln50_reg_1239 == 1'd0) & (icmp_ln38_reg_1235 == 1'd0) & (icmp_ln28_reg_1231 == 1'd0) & (tmp_reg_1222 == 1'd1))) begin
        ret_4_reg_344 <= 3'd6;
    end else if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln67_3_fu_855_p2 == 1'd1) & (icmp_ln67_2_reg_1360 == 1'd1) & (icmp_ln67_1_reg_1351 == 1'd1) & (icmp_ln67_reg_1342 == 1'd1) & (icmp_ln77_fu_936_p2 == 1'd0))) begin
        ret_4_reg_344 <= 3'd5;
    end else if (((1'b1 == ap_CS_fsm_state14) & (icmp_ln53_2_fu_978_p2 == 1'd1) & (icmp_ln53_1_reg_1390 == 1'd1) & (icmp_ln53_reg_1381 == 1'd1) & (icmp_ln61_fu_1057_p2 == 1'd0))) begin
        ret_4_reg_344 <= 3'd4;
    end else if (((1'b1 == ap_CS_fsm_state16) & (icmp_ln41_1_fu_1085_p2 == 1'd1) & (icmp_ln41_reg_1411 == 1'd1) & (icmp_ln47_fu_1132_p2 == 1'd0))) begin
        ret_4_reg_344 <= 3'd3;
    end else if (((1'b1 == ap_CS_fsm_state17) & (icmp_ln31_fu_1146_p2 == 1'd1) & (icmp_ln35_fu_1180_p2 == 1'd0))) begin
        ret_4_reg_344 <= 3'd2;
    end else if (((1'b1 == ap_CS_fsm_state2) & (tmp_fu_463_p3 == 1'd0))) begin
        ret_4_reg_344 <= 3'd1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state7) & (icmp_ln83_4_fu_708_p2 == 1'd1) & (icmp_ln83_3_reg_1322 == 1'd1) & (icmp_ln83_2_reg_1308 == 1'd1) & (icmp_ln83_1_reg_1299 == 1'd1) & (icmp_ln83_reg_1290 == 1'd1) & (icmp_ln95_fu_795_p2 == 1'd0) & (icmp_ln64_reg_1243 == 1'd0) & (icmp_ln50_reg_1239 == 1'd0) & (icmp_ln38_reg_1235 == 1'd0) & (icmp_ln28_reg_1231 == 1'd0) & (tmp_reg_1222 == 1'd1))) begin
                value_4_reg_326[30 : 0] <= value_6_fu_756_p3[30 : 0];
    end else if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln67_3_fu_855_p2 == 1'd1) & (icmp_ln67_2_reg_1360 == 1'd1) & (icmp_ln67_1_reg_1351 == 1'd1) & (icmp_ln67_reg_1342 == 1'd1) & (icmp_ln77_fu_936_p2 == 1'd0))) begin
                value_4_reg_326[30 : 0] <= value_5_fu_898_p3[30 : 0];
    end else if (((1'b1 == ap_CS_fsm_state14) & (icmp_ln53_2_fu_978_p2 == 1'd1) & (icmp_ln53_1_reg_1390 == 1'd1) & (icmp_ln53_reg_1381 == 1'd1) & (icmp_ln61_fu_1057_p2 == 1'd0))) begin
                value_4_reg_326[30 : 0] <= value_3_fu_1023_p1[30 : 0];
    end else if (((1'b1 == ap_CS_fsm_state16) & (icmp_ln41_1_fu_1085_p2 == 1'd1) & (icmp_ln41_reg_1411 == 1'd1) & (icmp_ln47_fu_1132_p2 == 1'd0))) begin
                value_4_reg_326[30 : 0] <= value_2_fu_1112_p1[30 : 0];
    end else if (((1'b1 == ap_CS_fsm_state17) & (icmp_ln31_fu_1146_p2 == 1'd1) & (icmp_ln35_fu_1180_p2 == 1'd0))) begin
                value_4_reg_326[30 : 0] <= value_1_fu_1167_p1[30 : 0];
    end else if (((1'b1 == ap_CS_fsm_state2) & (tmp_fu_463_p3 == 1'd0))) begin
                value_4_reg_326[30 : 0] <= value_fu_475_p1[30 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (tmp_fu_463_p3 == 1'd1))) begin
        icmp_ln28_reg_1231 <= icmp_ln28_fu_497_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state17) & (icmp_ln31_fu_1146_p2 == 1'd1))) begin
        icmp_ln35_reg_1440 <= icmp_ln35_fu_1180_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln28_fu_497_p2 == 1'd0) & (tmp_fu_463_p3 == 1'd1))) begin
        icmp_ln38_reg_1235 <= icmp_ln38_fu_521_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        icmp_ln41_reg_1411 <= icmp_ln41_fu_1071_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state16) & (icmp_ln41_1_fu_1085_p2 == 1'd1) & (icmp_ln41_reg_1411 == 1'd1))) begin
        icmp_ln47_reg_1428 <= icmp_ln47_fu_1132_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln38_fu_521_p2 == 1'd0) & (icmp_ln28_fu_497_p2 == 1'd0) & (tmp_fu_463_p3 == 1'd1))) begin
        icmp_ln50_reg_1239 <= icmp_ln50_fu_545_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        icmp_ln53_1_reg_1390 <= icmp_ln53_1_fu_964_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        icmp_ln53_reg_1381 <= icmp_ln53_fu_950_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state14) & (icmp_ln53_2_fu_978_p2 == 1'd1) & (icmp_ln53_1_reg_1390 == 1'd1) & (icmp_ln53_reg_1381 == 1'd1))) begin
        icmp_ln61_reg_1407 <= icmp_ln61_fu_1057_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln50_fu_545_p2 == 1'd0) & (icmp_ln38_fu_521_p2 == 1'd0) & (icmp_ln28_fu_497_p2 == 1'd0) & (tmp_fu_463_p3 == 1'd1))) begin
        icmp_ln64_reg_1243 <= icmp_ln64_fu_569_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        icmp_ln67_1_reg_1351 <= icmp_ln67_1_fu_827_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        icmp_ln67_2_reg_1360 <= icmp_ln67_2_fu_841_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        icmp_ln67_reg_1342 <= icmp_ln67_fu_813_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln67_3_fu_855_p2 == 1'd1) & (icmp_ln67_2_reg_1360 == 1'd1) & (icmp_ln67_1_reg_1351 == 1'd1) & (icmp_ln67_reg_1342 == 1'd1))) begin
        icmp_ln77_reg_1377 <= icmp_ln77_fu_936_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        icmp_ln83_1_reg_1299 <= icmp_ln83_1_fu_666_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        icmp_ln83_2_reg_1308 <= icmp_ln83_2_fu_680_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        icmp_ln83_3_reg_1322 <= icmp_ln83_3_fu_694_p2;
        str_load_14_reg_1317 <= str_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        icmp_ln83_reg_1290 <= icmp_ln83_fu_652_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state3))) begin
        reg_445 <= str_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state4))) begin
        reg_449 <= str_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state10))) begin
        reg_453 <= str_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        str_load_reg_1212 <= str_q0;
        tmp_reg_1222 <= str_q0[32'd7];
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) & (icmp_ln83_4_fu_708_p2 == 1'd1) & (icmp_ln83_3_reg_1322 == 1'd1) & (icmp_ln83_2_reg_1308 == 1'd1) & (icmp_ln83_1_reg_1299 == 1'd1) & (icmp_ln83_reg_1290 == 1'd1) & (icmp_ln95_fu_795_p2 == 1'd0) & (icmp_ln64_reg_1243 == 1'd0) & (icmp_ln50_reg_1239 == 1'd0) & (icmp_ln38_reg_1235 == 1'd0) & (icmp_ln28_reg_1231 == 1'd0) & (tmp_reg_1222 == 1'd1))) begin
        ap_phi_mux_ret_4_phi_fu_352_p12 = 3'd6;
    end else begin
        ap_phi_mux_ret_4_phi_fu_352_p12 = ret_4_reg_344;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) & (icmp_ln83_4_fu_708_p2 == 1'd1) & (icmp_ln83_3_reg_1322 == 1'd1) & (icmp_ln83_2_reg_1308 == 1'd1) & (icmp_ln83_1_reg_1299 == 1'd1) & (icmp_ln83_reg_1290 == 1'd1) & (icmp_ln95_fu_795_p2 == 1'd0) & (icmp_ln64_reg_1243 == 1'd0) & (icmp_ln50_reg_1239 == 1'd0) & (icmp_ln38_reg_1235 == 1'd0) & (icmp_ln28_reg_1231 == 1'd0) & (tmp_reg_1222 == 1'd1))) begin
        ap_phi_mux_value_4_phi_fu_329_p12 = value_6_fu_756_p3;
    end else begin
        ap_phi_mux_value_4_phi_fu_329_p12 = value_4_reg_326;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        str_address0 = p_2_gep_fu_317_p3;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        str_address0 = p_5_gep_fu_308_p3;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        str_address0 = p_4_gep_fu_299_p3;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        str_address0 = p_9_gep_fu_290_p3;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        str_address0 = p_8_gep_fu_281_p3;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        str_address0 = p_7_gep_fu_272_p3;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        str_address0 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        str_address0 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        str_address0 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        str_address0 = 64'd2;
    end else if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln28_fu_497_p2 == 1'd1) & (icmp_ln29_fu_638_p2 == 1'd0) & (tmp_fu_463_p3 == 1'd1))) begin
        str_address0 = p_gep_fu_222_p3;
    end else if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln38_fu_521_p2 == 1'd1) & (icmp_ln39_fu_624_p2 == 1'd0) & (icmp_ln28_fu_497_p2 == 1'd0) & (tmp_fu_463_p3 == 1'd1))) begin
        str_address0 = p_1_gep_fu_213_p3;
    end else if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln50_fu_545_p2 == 1'd1) & (icmp_ln51_fu_618_p2 == 1'd0) & (icmp_ln38_fu_521_p2 == 1'd0) & (icmp_ln28_fu_497_p2 == 1'd0) & (tmp_fu_463_p3 == 1'd1))) begin
        str_address0 = p_3_gep_fu_204_p3;
    end else if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln64_fu_569_p2 == 1'd1) & (icmp_ln65_fu_604_p2 == 1'd0) & (icmp_ln50_fu_545_p2 == 1'd0) & (icmp_ln38_fu_521_p2 == 1'd0) & (icmp_ln28_fu_497_p2 == 1'd0) & (tmp_fu_463_p3 == 1'd1))) begin
        str_address0 = p_6_gep_fu_195_p3;
    end else if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln80_fu_593_p2 == 1'd1) & (icmp_ln81_fu_599_p2 == 1'd0) & (icmp_ln64_fu_569_p2 == 1'd0) & (icmp_ln50_fu_545_p2 == 1'd0) & (icmp_ln38_fu_521_p2 == 1'd0) & (icmp_ln28_fu_497_p2 == 1'd0) & (tmp_fu_463_p3 == 1'd1))) begin
        str_address0 = 64'd1;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        str_address0 = 64'd0;
    end else begin
        str_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state10) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)) | ((1'b1 == ap_CS_fsm_state2) & (icmp_ln28_fu_497_p2 == 1'd1) & (icmp_ln29_fu_638_p2 == 1'd0) & (tmp_fu_463_p3 == 1'd1)) | ((1'b1 == ap_CS_fsm_state2) & (icmp_ln38_fu_521_p2 == 1'd1) & (icmp_ln39_fu_624_p2 == 1'd0) & (icmp_ln28_fu_497_p2 == 1'd0) & (tmp_fu_463_p3 == 1'd1)) | ((1'b1 == ap_CS_fsm_state2) & (icmp_ln50_fu_545_p2 == 1'd1) & (icmp_ln51_fu_618_p2 == 1'd0) & (icmp_ln38_fu_521_p2 == 1'd0) & (icmp_ln28_fu_497_p2 == 1'd0) & (tmp_fu_463_p3 == 1'd1)) | ((1'b1 == ap_CS_fsm_state2) & (icmp_ln64_fu_569_p2 == 1'd1) & (icmp_ln65_fu_604_p2 == 1'd0) & (icmp_ln50_fu_545_p2 == 1'd0) & (icmp_ln38_fu_521_p2 == 1'd0) & (icmp_ln28_fu_497_p2 == 1'd0) & (tmp_fu_463_p3 == 1'd1)) | ((1'b1 == ap_CS_fsm_state2) & (icmp_ln80_fu_593_p2 == 1'd1) & (icmp_ln81_fu_599_p2 == 1'd0) & (icmp_ln64_fu_569_p2 == 1'd0) & (icmp_ln50_fu_545_p2 == 1'd0) & (icmp_ln38_fu_521_p2 == 1'd0) & (icmp_ln28_fu_497_p2 == 1'd0) & (tmp_fu_463_p3 == 1'd1)))) begin
        str_ce0 = 1'b1;
    end else begin
        str_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        val_r_ce0 = 1'b1;
    end else begin
        val_r_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) & ((tmp_reg_1222 == 1'd0) | ((((((icmp_ln38_reg_1235 == 1'd1) & (icmp_ln47_reg_1428 == 1'd0) & (icmp_ln28_reg_1231 == 1'd0)) | ((icmp_ln28_reg_1231 == 1'd1) & (icmp_ln35_reg_1440 == 1'd0))) | ((icmp_ln50_reg_1239 == 1'd1) & (icmp_ln61_reg_1407 == 1'd0) & (icmp_ln38_reg_1235 == 1'd0) & (icmp_ln28_reg_1231 == 1'd0))) | ((icmp_ln64_reg_1243 == 1'd1) & (icmp_ln77_reg_1377 == 1'd0) & (icmp_ln50_reg_1239 == 1'd0) & (icmp_ln38_reg_1235 == 1'd0) & (icmp_ln28_reg_1231 == 1'd0))) | ((icmp_ln83_4_fu_708_p2 == 1'd1) & (icmp_ln83_3_reg_1322 == 1'd1) & (icmp_ln83_2_reg_1308 == 1'd1) & (icmp_ln83_1_reg_1299 == 1'd1) & (icmp_ln83_reg_1290 == 1'd1) & (icmp_ln95_fu_795_p2 == 1'd0) & (icmp_ln64_reg_1243 == 1'd0) & (icmp_ln50_reg_1239 == 1'd0) & (icmp_ln38_reg_1235 == 1'd0) & (icmp_ln28_reg_1231 == 1'd0)))))) begin
        val_r_we0 = 1'b1;
    end else begin
        val_r_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (icmp_ln20_fu_457_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (icmp_ln20_fu_457_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln28_fu_497_p2 == 1'd1) & (icmp_ln29_fu_638_p2 == 1'd0) & (tmp_fu_463_p3 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln38_fu_521_p2 == 1'd1) & (icmp_ln39_fu_624_p2 == 1'd0) & (icmp_ln28_fu_497_p2 == 1'd0) & (tmp_fu_463_p3 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln50_fu_545_p2 == 1'd1) & (icmp_ln51_fu_618_p2 == 1'd0) & (icmp_ln38_fu_521_p2 == 1'd0) & (icmp_ln28_fu_497_p2 == 1'd0) & (tmp_fu_463_p3 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln64_fu_569_p2 == 1'd1) & (icmp_ln65_fu_604_p2 == 1'd0) & (icmp_ln50_fu_545_p2 == 1'd0) & (icmp_ln38_fu_521_p2 == 1'd0) & (icmp_ln28_fu_497_p2 == 1'd0) & (tmp_fu_463_p3 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln80_fu_593_p2 == 1'd1) & (icmp_ln81_fu_599_p2 == 1'd0) & (icmp_ln64_fu_569_p2 == 1'd0) & (icmp_ln50_fu_545_p2 == 1'd0) & (icmp_ln38_fu_521_p2 == 1'd0) & (icmp_ln28_fu_497_p2 == 1'd0) & (tmp_fu_463_p3 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else if (((1'b1 == ap_CS_fsm_state2) & (((((((icmp_ln29_fu_638_p2 == 1'd1) & (icmp_ln28_fu_497_p2 == 1'd1) & (tmp_fu_463_p3 == 1'd1)) | ((icmp_ln39_fu_624_p2 == 1'd1) & (icmp_ln38_fu_521_p2 == 1'd1) & (icmp_ln28_fu_497_p2 == 1'd0) & (tmp_fu_463_p3 == 1'd1))) | ((icmp_ln51_fu_618_p2 == 1'd1) & (icmp_ln50_fu_545_p2 == 1'd1) & (icmp_ln38_fu_521_p2 == 1'd0) & (icmp_ln28_fu_497_p2 == 1'd0) & (tmp_fu_463_p3 == 1'd1))) | ((icmp_ln65_fu_604_p2 == 1'd1) & (icmp_ln64_fu_569_p2 == 1'd1) & (icmp_ln50_fu_545_p2 == 1'd0) & (icmp_ln38_fu_521_p2 == 1'd0) & (icmp_ln28_fu_497_p2 == 1'd0) & (tmp_fu_463_p3 == 1'd1))) | ((icmp_ln81_fu_599_p2 == 1'd1) & (icmp_ln64_fu_569_p2 == 1'd0) & (icmp_ln50_fu_545_p2 == 1'd0) & (icmp_ln38_fu_521_p2 == 1'd0) & (icmp_ln28_fu_497_p2 == 1'd0) & (tmp_fu_463_p3 == 1'd1))) | ((icmp_ln80_fu_593_p2 == 1'd0) & (icmp_ln64_fu_569_p2 == 1'd0) & (icmp_ln50_fu_545_p2 == 1'd0) & (icmp_ln38_fu_521_p2 == 1'd0) & (icmp_ln28_fu_497_p2 == 1'd0) & (tmp_fu_463_p3 == 1'd1))))) begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln83_fu_652_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln83_1_fu_666_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state5 : begin
            if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln83_2_fu_680_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state8 : begin
            if (((1'b1 == ap_CS_fsm_state8) & (icmp_ln67_fu_813_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state9 : begin
            if (((1'b1 == ap_CS_fsm_state9) & (icmp_ln67_1_fu_827_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln67_3_fu_855_p2 == 1'd1) & (icmp_ln67_2_reg_1360 == 1'd1) & (icmp_ln67_1_reg_1351 == 1'd1) & (icmp_ln67_reg_1342 == 1'd1) & (icmp_ln77_fu_936_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end
        end
        ap_ST_fsm_state12 : begin
            if (((1'b1 == ap_CS_fsm_state12) & (icmp_ln53_fu_950_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            if (((1'b1 == ap_CS_fsm_state14) & (icmp_ln53_2_fu_978_p2 == 1'd1) & (icmp_ln53_1_reg_1390 == 1'd1) & (icmp_ln53_reg_1381 == 1'd1) & (icmp_ln61_fu_1057_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            if (((1'b1 == ap_CS_fsm_state16) & (icmp_ln41_1_fu_1085_p2 == 1'd1) & (icmp_ln41_reg_1411 == 1'd1) & (icmp_ln47_fu_1132_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end
        end
        ap_ST_fsm_state17 : begin
            if (((1'b1 == ap_CS_fsm_state17) & (icmp_ln31_fu_1146_p2 == 1'd1) & (icmp_ln35_fu_1180_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign and_ln1_fu_513_p3 = {{tmp_8_fu_503_p4}, {4'd0}};

assign and_ln2_fu_1138_p3 = {{grp_fu_435_p4}, {6'd0}};

assign and_ln3_fu_537_p3 = {{tmp_4_fu_527_p4}, {3'd0}};

assign and_ln41_1_fu_1077_p3 = {{grp_fu_435_p4}, {6'd0}};

assign and_ln4_fu_1063_p3 = {{grp_fu_435_p4}, {6'd0}};

assign and_ln53_1_fu_956_p3 = {{grp_fu_435_p4}, {6'd0}};

assign and_ln53_2_fu_970_p3 = {{grp_fu_435_p4}, {6'd0}};

assign and_ln5_fu_561_p3 = {{tmp_9_fu_551_p4}, {2'd0}};

assign and_ln67_1_fu_819_p3 = {{grp_fu_435_p4}, {6'd0}};

assign and_ln67_2_fu_833_p3 = {{grp_fu_435_p4}, {6'd0}};

assign and_ln67_3_fu_847_p3 = {{grp_fu_435_p4}, {6'd0}};

assign and_ln6_fu_942_p3 = {{grp_fu_435_p4}, {6'd0}};

assign and_ln7_fu_585_p3 = {{tmp_12_fu_575_p4}, {1'd0}};

assign and_ln83_1_fu_658_p3 = {{grp_fu_435_p4}, {6'd0}};

assign and_ln83_2_fu_672_p3 = {{grp_fu_435_p4}, {6'd0}};

assign and_ln83_3_fu_686_p3 = {{grp_fu_435_p4}, {6'd0}};

assign and_ln83_4_fu_700_p3 = {{grp_fu_435_p4}, {6'd0}};

assign and_ln8_fu_805_p3 = {{grp_fu_435_p4}, {6'd0}};

assign and_ln9_fu_644_p3 = {{grp_fu_435_p4}, {6'd0}};

assign and_ln_fu_489_p3 = {{tmp_3_fu_479_p4}, {5'd0}};

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_return = $signed(p_0_reg_372);

assign grp_fu_435_p4 = {{str_q0[7:6]}};

assign icmp_ln20_fu_457_p2 = (($signed(len) < $signed(32'd1)) ? 1'b1 : 1'b0);

assign icmp_ln28_fu_497_p2 = ((and_ln_fu_489_p3 == 8'd192) ? 1'b1 : 1'b0);

assign icmp_ln29_fu_638_p2 = (($signed(tmp_2_fu_629_p4) < $signed(31'd1)) ? 1'b1 : 1'b0);

assign icmp_ln31_fu_1146_p2 = ((and_ln2_fu_1138_p3 == 8'd128) ? 1'b1 : 1'b0);

assign icmp_ln35_fu_1180_p2 = ((tmp_5_fu_1171_p4 == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln38_fu_521_p2 = ((and_ln1_fu_513_p3 == 8'd224) ? 1'b1 : 1'b0);

assign icmp_ln39_fu_624_p2 = (($signed(len) < $signed(32'd3)) ? 1'b1 : 1'b0);

assign icmp_ln41_1_fu_1085_p2 = ((and_ln41_1_fu_1077_p3 == 8'd128) ? 1'b1 : 1'b0);

assign icmp_ln41_fu_1071_p2 = ((and_ln4_fu_1063_p3 == 8'd128) ? 1'b1 : 1'b0);

assign icmp_ln47_fu_1132_p2 = ((tmp_14_fu_1124_p3 == 5'd0) ? 1'b1 : 1'b0);

assign icmp_ln50_fu_545_p2 = ((and_ln3_fu_537_p3 == 8'd240) ? 1'b1 : 1'b0);

assign icmp_ln51_fu_618_p2 = (($signed(tmp_7_fu_609_p4) < $signed(30'd1)) ? 1'b1 : 1'b0);

assign icmp_ln53_1_fu_964_p2 = ((and_ln53_1_fu_956_p3 == 8'd128) ? 1'b1 : 1'b0);

assign icmp_ln53_2_fu_978_p2 = ((and_ln53_2_fu_970_p3 == 8'd128) ? 1'b1 : 1'b0);

assign icmp_ln53_fu_950_p2 = ((and_ln6_fu_942_p3 == 8'd128) ? 1'b1 : 1'b0);

assign icmp_ln61_fu_1057_p2 = ((tmp_22_fu_1049_p3 == 34'd0) ? 1'b1 : 1'b0);

assign icmp_ln64_fu_569_p2 = ((and_ln5_fu_561_p3 == 8'd248) ? 1'b1 : 1'b0);

assign icmp_ln65_fu_604_p2 = (($signed(len) < $signed(32'd5)) ? 1'b1 : 1'b0);

assign icmp_ln67_1_fu_827_p2 = ((and_ln67_1_fu_819_p3 == 8'd128) ? 1'b1 : 1'b0);

assign icmp_ln67_2_fu_841_p2 = ((and_ln67_2_fu_833_p3 == 8'd128) ? 1'b1 : 1'b0);

assign icmp_ln67_3_fu_855_p2 = ((and_ln67_3_fu_847_p3 == 8'd128) ? 1'b1 : 1'b0);

assign icmp_ln67_fu_813_p2 = ((and_ln8_fu_805_p3 == 8'd128) ? 1'b1 : 1'b0);

assign icmp_ln77_fu_936_p2 = ((tmp_31_fu_928_p3 == 43'd0) ? 1'b1 : 1'b0);

assign icmp_ln80_fu_593_p2 = ((and_ln7_fu_585_p3 == 8'd252) ? 1'b1 : 1'b0);

assign icmp_ln81_fu_599_p2 = (($signed(len) < $signed(32'd6)) ? 1'b1 : 1'b0);

assign icmp_ln83_1_fu_666_p2 = ((and_ln83_1_fu_658_p3 == 8'd128) ? 1'b1 : 1'b0);

assign icmp_ln83_2_fu_680_p2 = ((and_ln83_2_fu_672_p3 == 8'd128) ? 1'b1 : 1'b0);

assign icmp_ln83_3_fu_694_p2 = ((and_ln83_3_fu_686_p3 == 8'd128) ? 1'b1 : 1'b0);

assign icmp_ln83_4_fu_708_p2 = ((and_ln83_4_fu_700_p3 == 8'd128) ? 1'b1 : 1'b0);

assign icmp_ln83_fu_652_p2 = ((and_ln9_fu_644_p3 == 8'd128) ? 1'b1 : 1'b0);

assign icmp_ln95_fu_795_p2 = ((tmp_34_fu_787_p3 == 38'd0) ? 1'b1 : 1'b0);

assign or_ln1_fu_1102_p4 = {{{trunc_ln46_1_fu_1099_p1}, {trunc_ln45_fu_1091_p1}}, {trunc_ln46_fu_1095_p1}};

assign or_ln2_fu_999_p5 = {{{{trunc_ln57_fu_984_p1}, {trunc_ln60_2_fu_995_p1}}, {trunc_ln60_1_fu_991_p1}}, {trunc_ln60_fu_987_p1}};

assign or_ln3_fu_880_p6 = {{{{{trunc_ln72_fu_861_p1}, {trunc_ln76_2_fu_876_p1}}, {trunc_ln74_fu_864_p1}}, {trunc_ln76_1_fu_872_p1}}, {trunc_ln76_fu_868_p1}};

assign or_ln4_fu_736_p7 = {{{{{{trunc_ln89_fu_714_p1}, {trunc_ln90_fu_717_p1}}, {trunc_ln91_fu_721_p1}}, {trunc_ln92_fu_725_p1}}, {trunc_ln94_1_fu_733_p1}}, {trunc_ln94_fu_729_p1}};

assign or_ln_fu_1159_p3 = {{trunc_ln34_1_fu_1156_p1}, {trunc_ln34_fu_1152_p1}};

assign p_1_gep_fu_213_p3 = 64'd1;

assign p_2_gep_fu_317_p3 = 64'd2;

assign p_3_gep_fu_204_p3 = 64'd1;

assign p_4_gep_fu_299_p3 = 64'd2;

assign p_5_gep_fu_308_p3 = 64'd3;

assign p_6_gep_fu_195_p3 = 64'd1;

assign p_7_gep_fu_272_p3 = 64'd2;

assign p_8_gep_fu_281_p3 = 64'd3;

assign p_9_gep_fu_290_p3 = 64'd4;

assign p_gep_fu_222_p3 = 64'd1;

assign tmp_12_fu_575_p4 = {{str_q0[7:1]}};

assign tmp_13_fu_1116_p3 = reg_445[32'd5];

assign tmp_14_fu_1124_p3 = {{trunc_ln46_1_fu_1099_p1}, {tmp_13_fu_1116_p3}};

assign tmp_1_fu_1015_p3 = {{18'd0}, {zext_ln60_fu_1011_p1}};

assign tmp_20_fu_1027_p4 = {{reg_445[5:4]}};

assign tmp_21_fu_1037_p3 = {{trunc_ln57_fu_984_p1}, {tmp_20_fu_1027_p4}};

assign tmp_22_fu_1049_p3 = {{18'd0}, {zext_ln61_fu_1045_p1}};

assign tmp_29_fu_906_p4 = {{reg_445[5:3]}};

assign tmp_2_fu_629_p4 = {{len[31:1]}};

assign tmp_30_fu_916_p3 = {{trunc_ln72_fu_861_p1}, {tmp_29_fu_906_p4}};

assign tmp_31_fu_928_p3 = {{32'd0}, {zext_ln77_fu_924_p1}};

assign tmp_32_fu_765_p4 = {{reg_445[5:2]}};

assign tmp_33_fu_775_p3 = {{trunc_ln89_fu_714_p1}, {tmp_32_fu_765_p4}};

assign tmp_34_fu_787_p3 = {{32'd0}, {zext_ln95_fu_783_p1}};

assign tmp_3_fu_479_p4 = {{str_q0[7:5]}};

assign tmp_4_fu_527_p4 = {{str_q0[7:3]}};

assign tmp_5_fu_1171_p4 = {{str_load_reg_1212[4:1]}};

assign tmp_7_fu_609_p4 = {{len[31:2]}};

assign tmp_8_fu_503_p4 = {{str_q0[7:4]}};

assign tmp_9_fu_551_p4 = {{str_q0[7:2]}};

assign tmp_fu_463_p3 = str_q0[32'd7];

assign trunc_ln26_fu_471_p1 = str_q0[6:0];

assign trunc_ln34_1_fu_1156_p1 = str_load_reg_1212[4:0];

assign trunc_ln34_fu_1152_p1 = str_q0[5:0];

assign trunc_ln45_fu_1091_p1 = reg_445[5:0];

assign trunc_ln46_1_fu_1099_p1 = str_load_reg_1212[3:0];

assign trunc_ln46_fu_1095_p1 = str_q0[5:0];

assign trunc_ln57_fu_984_p1 = str_load_reg_1212[2:0];

assign trunc_ln60_1_fu_991_p1 = reg_449[5:0];

assign trunc_ln60_2_fu_995_p1 = reg_445[5:0];

assign trunc_ln60_fu_987_p1 = str_q0[5:0];

assign trunc_ln72_fu_861_p1 = str_load_reg_1212[1:0];

assign trunc_ln74_fu_864_p1 = reg_449[5:0];

assign trunc_ln76_1_fu_872_p1 = reg_453[5:0];

assign trunc_ln76_2_fu_876_p1 = reg_445[5:0];

assign trunc_ln76_fu_868_p1 = str_q0[5:0];

assign trunc_ln89_fu_714_p1 = str_load_reg_1212[0:0];

assign trunc_ln90_fu_717_p1 = reg_445[5:0];

assign trunc_ln91_fu_721_p1 = reg_449[5:0];

assign trunc_ln92_fu_725_p1 = reg_453[5:0];

assign trunc_ln94_1_fu_733_p1 = str_load_14_reg_1317[5:0];

assign trunc_ln94_fu_729_p1 = str_q0[5:0];

assign val_r_address0 = 64'd0;

assign val_r_d0 = ap_phi_mux_value_4_phi_fu_329_p12;

assign value_1_fu_1167_p1 = or_ln_fu_1159_p3;

assign value_2_fu_1112_p1 = or_ln1_fu_1102_p4;

assign value_3_fu_1023_p1 = tmp_1_fu_1015_p3;

assign value_5_fu_898_p3 = {{32'd0}, {zext_ln76_fu_894_p1}};

assign value_6_fu_756_p3 = {{32'd0}, {zext_ln94_fu_752_p1}};

assign value_fu_475_p1 = trunc_ln26_fu_471_p1;

assign zext_ln100_fu_801_p1 = ap_phi_mux_ret_4_phi_fu_352_p12;

assign zext_ln60_fu_1011_p1 = or_ln2_fu_999_p5;

assign zext_ln61_fu_1045_p1 = tmp_21_fu_1037_p3;

assign zext_ln76_fu_894_p1 = or_ln3_fu_880_p6;

assign zext_ln77_fu_924_p1 = tmp_30_fu_916_p3;

assign zext_ln94_fu_752_p1 = or_ln4_fu_736_p7;

assign zext_ln95_fu_783_p1 = tmp_33_fu_775_p3;

always @ (posedge ap_clk) begin
    value_4_reg_326[63:31] <= 33'b000000000000000000000000000000000;
end

endmodule //UTF8_getc
