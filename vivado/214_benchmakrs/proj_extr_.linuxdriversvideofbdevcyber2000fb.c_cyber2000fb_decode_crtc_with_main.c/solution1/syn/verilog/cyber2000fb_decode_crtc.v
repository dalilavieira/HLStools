// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="cyber2000fb_decode_crtc,hls_ip_2019_1,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7k160t-fbg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.859000,HLS_SYN_LAT=5,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=379,HLS_SYN_LUT=1146,HLS_VERSION=2019_1}" *)

module cyber2000fb_decode_crtc (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        hw_crtc_address0,
        hw_crtc_ce0,
        hw_crtc_we0,
        hw_crtc_d0,
        hw_crtc_address1,
        hw_crtc_ce1,
        hw_crtc_we1,
        hw_crtc_d1,
        hw_pitch,
        hw_crtc_ofl_i,
        hw_crtc_ofl_o,
        hw_crtc_ofl_o_ap_vld,
        cfb_dummy,
        var_xres,
        var_right_margin,
        var_hsync_len,
        var_left_margin,
        var_yres,
        var_lower_margin,
        var_vsync_len,
        var_upper_margin,
        var_vmode,
        ap_return
);

parameter    ap_ST_fsm_state1 = 10'd1;
parameter    ap_ST_fsm_state2 = 10'd2;
parameter    ap_ST_fsm_state3 = 10'd4;
parameter    ap_ST_fsm_state4 = 10'd8;
parameter    ap_ST_fsm_state5 = 10'd16;
parameter    ap_ST_fsm_state6 = 10'd32;
parameter    ap_ST_fsm_state7 = 10'd64;
parameter    ap_ST_fsm_state8 = 10'd128;
parameter    ap_ST_fsm_state9 = 10'd256;
parameter    ap_ST_fsm_state10 = 10'd512;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [9:0] hw_crtc_address0;
output   hw_crtc_ce0;
output   hw_crtc_we0;
output  [31:0] hw_crtc_d0;
output  [9:0] hw_crtc_address1;
output   hw_crtc_ce1;
output   hw_crtc_we1;
output  [31:0] hw_crtc_d1;
input  [31:0] hw_pitch;
input  [31:0] hw_crtc_ofl_i;
output  [31:0] hw_crtc_ofl_o;
output   hw_crtc_ofl_o_ap_vld;
input  [31:0] cfb_dummy;
input  [31:0] var_xres;
input  [31:0] var_right_margin;
input  [31:0] var_hsync_len;
input  [31:0] var_left_margin;
input  [31:0] var_yres;
input  [31:0] var_lower_margin;
input  [31:0] var_vsync_len;
input  [31:0] var_upper_margin;
input  [31:0] var_vmode;
output  [31:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[9:0] hw_crtc_address0;
reg hw_crtc_ce0;
reg hw_crtc_we0;
reg[31:0] hw_crtc_d0;
reg[9:0] hw_crtc_address1;
reg hw_crtc_ce1;
reg hw_crtc_we1;
reg[31:0] hw_crtc_d1;
reg[31:0] hw_crtc_ofl_o;
reg hw_crtc_ofl_o_ap_vld;

(* fsm_encoding = "none" *) reg   [9:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [28:0] reg_439;
wire    ap_CS_fsm_state2;
wire   [0:0] icmp_ln40_fu_505_p2;
wire    ap_CS_fsm_state3;
reg   [31:0] reg_443;
wire    ap_CS_fsm_state9;
reg   [31:0] var_xres_read_reg_1138;
wire   [8:0] trunc_ln37_fu_447_p1;
reg   [8:0] trunc_ln37_reg_1143;
reg   [0:0] icmp_ln40_reg_1148;
reg   [28:0] trunc_ln1_reg_1152;
reg   [4:0] trunc_ln5_reg_1157;
reg   [0:0] tmp_reg_1162;
wire   [8:0] trunc_ln58_fu_557_p1;
reg   [8:0] trunc_ln58_reg_1167;
wire   [9:0] trunc_ln58_1_fu_561_p1;
reg   [9:0] trunc_ln58_1_reg_1172;
wire   [10:0] trunc_ln58_2_fu_565_p1;
reg   [10:0] trunc_ln58_2_reg_1177;
wire   [31:0] Vsyncstart_fu_622_p2;
reg   [31:0] Vsyncstart_reg_1182;
wire   [10:0] add_ln59_1_fu_628_p2;
reg   [10:0] add_ln59_1_reg_1187;
wire   [9:0] add_ln59_2_fu_634_p2;
reg   [9:0] add_ln59_2_reg_1192;
wire   [8:0] add_ln59_3_fu_640_p2;
reg   [8:0] add_ln59_3_reg_1197;
reg   [28:0] trunc_ln4_reg_1202;
wire    ap_CS_fsm_state4;
wire   [3:0] add_ln60_1_fu_697_p2;
reg   [3:0] add_ln60_1_reg_1207;
wire   [31:0] Vdispend_fu_755_p2;
reg   [31:0] Vdispend_reg_1212;
wire    ap_CS_fsm_state5;
wire   [31:0] add_ln61_2_fu_872_p2;
reg   [31:0] add_ln61_2_reg_1217;
wire   [31:0] Vtotal_fu_896_p2;
reg   [31:0] Vtotal_reg_1222;
wire   [0:0] icmp_ln64_fu_930_p2;
reg   [0:0] icmp_ln64_reg_1227;
reg   [0:0] tmp_2_reg_1231;
reg   [0:0] tmp_3_reg_1236;
reg   [0:0] tmp_4_reg_1241;
reg   [0:0] tmp_6_reg_1246;
reg   [0:0] tmp_7_reg_1251;
reg   [0:0] tmp_8_reg_1256;
reg   [0:0] tmp_10_reg_1261;
reg   [0:0] tmp_11_reg_1266;
reg   [0:0] tmp_12_reg_1271;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state10;
wire   [31:0] zext_ln95_fu_1126_p1;
wire  signed [31:0] sext_ln43_1_fu_578_p1;
wire  signed [31:0] sext_ln44_1_fu_593_p1;
wire  signed [31:0] sext_ln45_fu_646_p1;
wire   [31:0] zext_ln50_fu_674_p1;
wire  signed [31:0] sext_ln46_fu_703_p1;
wire   [31:0] zext_ln55_fu_750_p1;
wire   [31:0] zext_ln83_fu_1012_p1;
wire   [31:0] Vblankend_fu_1017_p2;
wire   [31:0] zext_ln71_fu_1081_p1;
wire   [31:0] zext_ln79_fu_1104_p1;
wire   [31:0] Vblankstart_fu_1131_p2;
wire   [8:0] trunc_ln37_1_fu_451_p1;
wire   [8:0] trunc_ln37_3_fu_464_p1;
wire   [8:0] trunc_ln37_2_fu_460_p1;
wire   [31:0] add_ln37_1_fu_468_p2;
wire   [31:0] add_ln37_fu_455_p2;
wire   [8:0] add_ln37_2_fu_474_p2;
wire   [8:0] add_ln37_3_fu_479_p2;
wire   [31:0] Htotal_fu_485_p2;
wire   [7:0] trunc_ln37_4_fu_491_p1;
wire   [7:0] trunc_ln37_5_fu_495_p1;
wire   [8:0] add_ln37_5_fu_499_p2;
wire   [7:0] add_ln48_1_fu_521_p2;
wire   [7:0] add_ln48_2_fu_533_p2;
wire   [8:0] add_ln48_fu_527_p2;
wire  signed [29:0] sext_ln43_fu_569_p1;
wire   [29:0] add_ln43_fu_572_p2;
wire  signed [29:0] sext_ln44_fu_583_p1;
wire   [29:0] add_ln44_fu_587_p2;
wire   [10:0] trunc_ln59_5_fu_618_p1;
wire   [10:0] trunc_ln59_4_fu_614_p1;
wire   [9:0] trunc_ln59_3_fu_610_p1;
wire   [9:0] trunc_ln59_2_fu_606_p1;
wire   [8:0] trunc_ln59_1_fu_602_p1;
wire   [8:0] trunc_ln59_fu_598_p1;
wire   [31:0] add_ln46_fu_651_p2;
wire   [7:0] or_ln1_fu_667_p3;
wire   [3:0] trunc_ln60_fu_679_p1;
wire   [3:0] trunc_ln60_1_fu_683_p1;
wire   [3:0] add_ln60_fu_691_p2;
wire   [3:0] trunc_ln60_2_fu_687_p1;
wire   [7:0] trunc_ln53_2_fu_715_p1;
wire   [7:0] trunc_ln53_1_fu_711_p1;
wire   [7:0] trunc_ln53_fu_707_p1;
wire   [7:0] add_ln53_fu_719_p2;
wire   [7:0] add_ln53_1_fu_725_p2;
wire   [4:0] trunc_ln7_fu_731_p4;
wire   [7:0] or_ln_fu_741_p4;
wire   [9:0] trunc_ln61_11_fu_826_p1;
wire   [9:0] trunc_ln61_10_fu_822_p1;
wire   [9:0] trunc_ln61_5_fu_796_p1;
wire   [9:0] trunc_ln61_4_fu_792_p1;
wire   [10:0] trunc_ln61_9_fu_818_p1;
wire   [10:0] trunc_ln61_8_fu_814_p1;
wire   [10:0] trunc_ln61_3_fu_788_p1;
wire   [10:0] trunc_ln61_2_fu_784_p1;
wire   [8:0] trunc_ln61_7_fu_810_p1;
wire   [8:0] trunc_ln61_6_fu_806_p1;
wire   [8:0] trunc_ln61_1_fu_780_p1;
wire   [8:0] trunc_ln61_fu_776_p1;
wire   [31:0] add_ln61_fu_800_p2;
wire   [31:0] add_ln61_1_fu_830_p2;
wire   [8:0] add_ln61_7_fu_860_p2;
wire   [8:0] add_ln61_8_fu_866_p2;
wire   [10:0] add_ln61_5_fu_848_p2;
wire   [10:0] add_ln61_6_fu_854_p2;
wire   [9:0] add_ln61_3_fu_836_p2;
wire   [9:0] add_ln61_4_fu_842_p2;
wire   [9:0] add_ln61_11_fu_890_p2;
wire   [10:0] add_ln61_10_fu_884_p2;
wire   [8:0] add_ln61_9_fu_878_p2;
wire   [20:0] tmp_1_fu_920_p4;
wire   [8:0] add_ln61_15_fu_914_p2;
wire   [8:0] add_ln58_3_fu_771_p2;
wire   [9:0] add_ln61_13_fu_902_p2;
wire   [9:0] add_ln58_2_fu_766_p2;
wire   [10:0] add_ln61_14_fu_908_p2;
wire   [10:0] add_ln58_1_fu_761_p2;
wire   [7:0] or_ln3_fu_1005_p3;
wire   [10:0] trunc_ln67_2_fu_1031_p1;
wire   [9:0] trunc_ln67_1_fu_1027_p1;
wire   [8:0] trunc_ln67_fu_1023_p1;
wire   [8:0] add_ln67_3_fu_1047_p2;
wire   [0:0] tmp_5_fu_1053_p3;
wire   [7:0] tmp7_fu_1061_p9;
wire   [7:0] or_ln71_fu_1075_p2;
wire   [9:0] add_ln67_2_fu_1041_p2;
wire   [0:0] tmp_9_fu_1086_p3;
wire   [6:0] or_ln2_fu_1094_p4;
wire   [10:0] add_ln67_1_fu_1035_p2;
wire   [0:0] tmp_13_fu_1109_p3;
wire   [3:0] or_ln95_2_fu_1117_p5;
reg   [9:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 10'd1;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        Vdispend_reg_1212 <= Vdispend_fu_755_p2;
        Vtotal_reg_1222 <= Vtotal_fu_896_p2;
        add_ln61_2_reg_1217 <= add_ln61_2_fu_872_p2;
        icmp_ln64_reg_1227 <= icmp_ln64_fu_930_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        Vsyncstart_reg_1182 <= Vsyncstart_fu_622_p2;
        add_ln59_1_reg_1187 <= add_ln59_1_fu_628_p2;
        add_ln59_2_reg_1192 <= add_ln59_2_fu_634_p2;
        add_ln59_3_reg_1197 <= add_ln59_3_fu_640_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        add_ln60_1_reg_1207 <= add_ln60_1_fu_697_p2;
        trunc_ln4_reg_1202 <= {{add_ln46_fu_651_p2[31:3]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        icmp_ln40_reg_1148 <= icmp_ln40_fu_505_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) | ((icmp_ln40_fu_505_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)))) begin
        reg_439 <= {{var_xres[31:3]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state9) | ((icmp_ln40_fu_505_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)))) begin
        reg_443 <= var_yres;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln64_fu_930_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        tmp_10_reg_1261 <= add_ln61_14_fu_908_p2[32'd10];
        tmp_11_reg_1266 <= add_ln58_1_fu_761_p2[32'd10];
        tmp_12_reg_1271 <= add_ln59_1_reg_1187[32'd10];
        tmp_2_reg_1231 <= add_ln61_15_fu_914_p2[32'd8];
        tmp_3_reg_1236 <= add_ln58_3_fu_771_p2[32'd8];
        tmp_4_reg_1241 <= add_ln59_3_reg_1197[32'd8];
        tmp_6_reg_1246 <= add_ln61_13_fu_902_p2[32'd9];
        tmp_7_reg_1251 <= add_ln58_2_fu_766_p2[32'd9];
        tmp_8_reg_1256 <= add_ln59_2_reg_1192[32'd9];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln40_fu_505_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        tmp_reg_1162 <= add_ln48_fu_527_p2[32'd8];
        trunc_ln1_reg_1152 <= {{Htotal_fu_485_p2[31:3]}};
        trunc_ln58_1_reg_1172 <= trunc_ln58_1_fu_561_p1;
        trunc_ln58_2_reg_1177 <= trunc_ln58_2_fu_565_p1;
        trunc_ln58_reg_1167 <= trunc_ln58_fu_557_p1;
        trunc_ln5_reg_1157 <= {{add_ln48_2_fu_533_p2[7:3]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        trunc_ln37_reg_1143 <= trunc_ln37_fu_447_p1;
        var_xres_read_reg_1138 <= var_xres;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        hw_crtc_address0 = 64'd15;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        hw_crtc_address0 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        hw_crtc_address0 = 64'd16;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        hw_crtc_address0 = 64'd11;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        hw_crtc_address0 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        hw_crtc_address0 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        hw_crtc_address0 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        hw_crtc_address0 = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        hw_crtc_address0 = 64'd14;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        hw_crtc_address0 = 64'd13;
    end else begin
        hw_crtc_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        hw_crtc_address1 = 64'd9;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        hw_crtc_address1 = 64'd18;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        hw_crtc_address1 = 64'd12;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        hw_crtc_address1 = 64'd10;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        hw_crtc_address1 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        hw_crtc_address1 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        hw_crtc_address1 = 64'd1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        hw_crtc_address1 = 64'd8;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        hw_crtc_address1 = 64'd17;
    end else begin
        hw_crtc_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)))) begin
        hw_crtc_ce0 = 1'b1;
    end else begin
        hw_crtc_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)))) begin
        hw_crtc_ce1 = 1'b1;
    end else begin
        hw_crtc_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        hw_crtc_d0 = Vblankstart_fu_1131_p2;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        hw_crtc_d0 = zext_ln71_fu_1081_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        hw_crtc_d0 = Vblankend_fu_1017_p2;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        hw_crtc_d0 = zext_ln83_fu_1012_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        hw_crtc_d0 = Vtotal_reg_1222;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        hw_crtc_d0 = sext_ln46_fu_703_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        hw_crtc_d0 = sext_ln45_fu_646_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        hw_crtc_d0 = sext_ln43_1_fu_578_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        hw_crtc_d0 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        hw_crtc_d0 = hw_pitch;
    end else begin
        hw_crtc_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        hw_crtc_d1 = zext_ln79_fu_1104_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        hw_crtc_d1 = 32'd255;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        hw_crtc_d1 = Vdispend_reg_1212;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        hw_crtc_d1 = Vsyncstart_reg_1182;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        hw_crtc_d1 = zext_ln55_fu_750_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        hw_crtc_d1 = zext_ln50_fu_674_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        hw_crtc_d1 = sext_ln44_1_fu_593_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        hw_crtc_d1 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        hw_crtc_d1 = 32'd227;
    end else begin
        hw_crtc_d1 = 'bx;
    end
end

always @ (*) begin
    if (((icmp_ln40_reg_1148 == 1'd0) & (icmp_ln64_reg_1227 == 1'd0) & (1'b1 == ap_CS_fsm_state10))) begin
        hw_crtc_ofl_o = hw_crtc_ofl_i;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        hw_crtc_ofl_o = zext_ln95_fu_1126_p1;
    end else begin
        hw_crtc_ofl_o = hw_crtc_ofl_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | ((icmp_ln40_reg_1148 == 1'd0) & (icmp_ln64_reg_1227 == 1'd0) & (1'b1 == ap_CS_fsm_state10)))) begin
        hw_crtc_ofl_o_ap_vld = 1'b1;
    end else begin
        hw_crtc_ofl_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)) | ((icmp_ln40_reg_1148 == 1'd0) & (icmp_ln64_reg_1227 == 1'd0) & (1'b1 == ap_CS_fsm_state10)))) begin
        hw_crtc_we0 = 1'b1;
    end else begin
        hw_crtc_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)))) begin
        hw_crtc_we1 = 1'b1;
    end else begin
        hw_crtc_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln40_fu_505_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln64_fu_930_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign Htotal_fu_485_p2 = (add_ln37_1_fu_468_p2 + add_ln37_fu_455_p2);

assign Vblankend_fu_1017_p2 = ($signed(32'd4294967284) + $signed(add_ln61_2_reg_1217));

assign Vblankstart_fu_1131_p2 = (32'd6 + reg_443);

assign Vdispend_fu_755_p2 = ($signed(32'd4294967295) + $signed(reg_443));

assign Vsyncstart_fu_622_p2 = (var_lower_margin + var_yres);

assign Vtotal_fu_896_p2 = ($signed(32'd4294967294) + $signed(add_ln61_2_fu_872_p2));

assign add_ln37_1_fu_468_p2 = (var_right_margin + var_left_margin);

assign add_ln37_2_fu_474_p2 = (trunc_ln37_1_fu_451_p1 + trunc_ln37_reg_1143);

assign add_ln37_3_fu_479_p2 = (trunc_ln37_3_fu_464_p1 + trunc_ln37_2_fu_460_p1);

assign add_ln37_5_fu_499_p2 = (add_ln37_2_fu_474_p2 + add_ln37_3_fu_479_p2);

assign add_ln37_fu_455_p2 = (var_xres_read_reg_1138 + var_hsync_len);

assign add_ln43_fu_572_p2 = ($signed(30'd1073741819) + $signed(sext_ln43_fu_569_p1));

assign add_ln44_fu_587_p2 = ($signed(30'd1073741823) + $signed(sext_ln44_fu_583_p1));

assign add_ln46_fu_651_p2 = (var_right_margin + var_xres);

assign add_ln48_1_fu_521_p2 = (trunc_ln37_4_fu_491_p1 + trunc_ln37_5_fu_495_p1);

assign add_ln48_2_fu_533_p2 = ($signed(8'd224) + $signed(add_ln48_1_fu_521_p2));

assign add_ln48_fu_527_p2 = ($signed(9'd480) + $signed(add_ln37_5_fu_499_p2));

assign add_ln53_1_fu_725_p2 = (trunc_ln53_fu_707_p1 + add_ln53_fu_719_p2);

assign add_ln53_fu_719_p2 = (trunc_ln53_2_fu_715_p1 + trunc_ln53_1_fu_711_p1);

assign add_ln58_1_fu_761_p2 = ($signed(11'd2047) + $signed(trunc_ln58_2_reg_1177));

assign add_ln58_2_fu_766_p2 = ($signed(10'd1023) + $signed(trunc_ln58_1_reg_1172));

assign add_ln58_3_fu_771_p2 = ($signed(9'd511) + $signed(trunc_ln58_reg_1167));

assign add_ln59_1_fu_628_p2 = (trunc_ln59_5_fu_618_p1 + trunc_ln59_4_fu_614_p1);

assign add_ln59_2_fu_634_p2 = (trunc_ln59_3_fu_610_p1 + trunc_ln59_2_fu_606_p1);

assign add_ln59_3_fu_640_p2 = (trunc_ln59_1_fu_602_p1 + trunc_ln59_fu_598_p1);

assign add_ln60_1_fu_697_p2 = (add_ln60_fu_691_p2 + trunc_ln60_2_fu_687_p1);

assign add_ln60_fu_691_p2 = (trunc_ln60_fu_679_p1 + trunc_ln60_1_fu_683_p1);

assign add_ln61_10_fu_884_p2 = (add_ln61_5_fu_848_p2 + add_ln61_6_fu_854_p2);

assign add_ln61_11_fu_890_p2 = (add_ln61_3_fu_836_p2 + add_ln61_4_fu_842_p2);

assign add_ln61_13_fu_902_p2 = ($signed(10'd1022) + $signed(add_ln61_11_fu_890_p2));

assign add_ln61_14_fu_908_p2 = ($signed(11'd2046) + $signed(add_ln61_10_fu_884_p2));

assign add_ln61_15_fu_914_p2 = ($signed(9'd510) + $signed(add_ln61_9_fu_878_p2));

assign add_ln61_1_fu_830_p2 = (var_upper_margin + var_yres);

assign add_ln61_2_fu_872_p2 = (add_ln61_fu_800_p2 + add_ln61_1_fu_830_p2);

assign add_ln61_3_fu_836_p2 = (trunc_ln61_11_fu_826_p1 + trunc_ln61_10_fu_822_p1);

assign add_ln61_4_fu_842_p2 = (trunc_ln61_5_fu_796_p1 + trunc_ln61_4_fu_792_p1);

assign add_ln61_5_fu_848_p2 = (trunc_ln61_9_fu_818_p1 + trunc_ln61_8_fu_814_p1);

assign add_ln61_6_fu_854_p2 = (trunc_ln61_3_fu_788_p1 + trunc_ln61_2_fu_784_p1);

assign add_ln61_7_fu_860_p2 = (trunc_ln61_7_fu_810_p1 + trunc_ln61_6_fu_806_p1);

assign add_ln61_8_fu_866_p2 = (trunc_ln61_1_fu_780_p1 + trunc_ln61_fu_776_p1);

assign add_ln61_9_fu_878_p2 = (add_ln61_7_fu_860_p2 + add_ln61_8_fu_866_p2);

assign add_ln61_fu_800_p2 = (var_vsync_len + var_lower_margin);

assign add_ln67_1_fu_1035_p2 = (11'd6 + trunc_ln67_2_fu_1031_p1);

assign add_ln67_2_fu_1041_p2 = (10'd6 + trunc_ln67_1_fu_1027_p1);

assign add_ln67_3_fu_1047_p2 = (9'd6 + trunc_ln67_fu_1023_p1);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_return = 32'd0;

assign icmp_ln40_fu_505_p2 = (($signed(Htotal_fu_485_p2) > $signed(32'd2080)) ? 1'b1 : 1'b0);

assign icmp_ln64_fu_930_p2 = (($signed(tmp_1_fu_920_p4) > $signed(21'd0)) ? 1'b1 : 1'b0);

assign or_ln1_fu_667_p3 = {{3'd4}, {trunc_ln5_reg_1157}};

assign or_ln2_fu_1094_p4 = {{{{1'd1}, {tmp_9_fu_1086_p3}}}, {5'd0}};

assign or_ln3_fu_1005_p3 = {{4'd8}, {add_ln60_1_reg_1207}};

assign or_ln71_fu_1075_p2 = (tmp7_fu_1061_p9 | 8'd16);

assign or_ln95_2_fu_1117_p5 = {{{{tmp_13_fu_1109_p3}, {tmp_12_reg_1271}}, {tmp_11_reg_1266}}, {tmp_10_reg_1261}};

assign or_ln_fu_741_p4 = {{{tmp_reg_1162}, {2'd0}}, {trunc_ln7_fu_731_p4}};

assign sext_ln43_1_fu_578_p1 = $signed(add_ln43_fu_572_p2);

assign sext_ln43_fu_569_p1 = $signed(trunc_ln1_reg_1152);

assign sext_ln44_1_fu_593_p1 = $signed(add_ln44_fu_587_p2);

assign sext_ln44_fu_583_p1 = $signed(reg_439);

assign sext_ln45_fu_646_p1 = $signed(reg_439);

assign sext_ln46_fu_703_p1 = $signed(trunc_ln4_reg_1202);

assign tmp7_fu_1061_p9 = {{{{{{{{tmp_8_reg_1256}, {tmp_7_reg_1251}}, {tmp_6_reg_1246}}, {1'd0}}, {tmp_5_fu_1053_p3}}, {tmp_4_reg_1241}}, {tmp_3_reg_1236}}, {tmp_2_reg_1231}};

assign tmp_13_fu_1109_p3 = add_ln67_1_fu_1035_p2[32'd10];

assign tmp_1_fu_920_p4 = {{Vtotal_fu_896_p2[31:11]}};

assign tmp_5_fu_1053_p3 = add_ln67_3_fu_1047_p2[32'd8];

assign tmp_9_fu_1086_p3 = add_ln67_2_fu_1041_p2[32'd9];

assign trunc_ln37_1_fu_451_p1 = var_hsync_len[8:0];

assign trunc_ln37_2_fu_460_p1 = var_right_margin[8:0];

assign trunc_ln37_3_fu_464_p1 = var_left_margin[8:0];

assign trunc_ln37_4_fu_491_p1 = add_ln37_2_fu_474_p2[7:0];

assign trunc_ln37_5_fu_495_p1 = add_ln37_3_fu_479_p2[7:0];

assign trunc_ln37_fu_447_p1 = var_xres[8:0];

assign trunc_ln53_1_fu_711_p1 = var_right_margin[7:0];

assign trunc_ln53_2_fu_715_p1 = var_hsync_len[7:0];

assign trunc_ln53_fu_707_p1 = var_xres[7:0];

assign trunc_ln58_1_fu_561_p1 = var_yres[9:0];

assign trunc_ln58_2_fu_565_p1 = var_yres[10:0];

assign trunc_ln58_fu_557_p1 = var_yres[8:0];

assign trunc_ln59_1_fu_602_p1 = var_yres[8:0];

assign trunc_ln59_2_fu_606_p1 = var_lower_margin[9:0];

assign trunc_ln59_3_fu_610_p1 = var_yres[9:0];

assign trunc_ln59_4_fu_614_p1 = var_lower_margin[10:0];

assign trunc_ln59_5_fu_618_p1 = var_yres[10:0];

assign trunc_ln59_fu_598_p1 = var_lower_margin[8:0];

assign trunc_ln60_1_fu_683_p1 = var_vsync_len[3:0];

assign trunc_ln60_2_fu_687_p1 = var_yres[3:0];

assign trunc_ln60_fu_679_p1 = var_lower_margin[3:0];

assign trunc_ln61_10_fu_822_p1 = var_upper_margin[9:0];

assign trunc_ln61_11_fu_826_p1 = var_yres[9:0];

assign trunc_ln61_1_fu_780_p1 = var_lower_margin[8:0];

assign trunc_ln61_2_fu_784_p1 = var_vsync_len[10:0];

assign trunc_ln61_3_fu_788_p1 = var_lower_margin[10:0];

assign trunc_ln61_4_fu_792_p1 = var_vsync_len[9:0];

assign trunc_ln61_5_fu_796_p1 = var_lower_margin[9:0];

assign trunc_ln61_6_fu_806_p1 = var_upper_margin[8:0];

assign trunc_ln61_7_fu_810_p1 = var_yres[8:0];

assign trunc_ln61_8_fu_814_p1 = var_upper_margin[10:0];

assign trunc_ln61_9_fu_818_p1 = var_yres[10:0];

assign trunc_ln61_fu_776_p1 = var_vsync_len[8:0];

assign trunc_ln67_1_fu_1027_p1 = var_yres[9:0];

assign trunc_ln67_2_fu_1031_p1 = var_yres[10:0];

assign trunc_ln67_fu_1023_p1 = var_yres[8:0];

assign trunc_ln7_fu_731_p4 = {{add_ln53_1_fu_725_p2[7:3]}};

assign zext_ln50_fu_674_p1 = or_ln1_fu_667_p3;

assign zext_ln55_fu_750_p1 = or_ln_fu_741_p4;

assign zext_ln71_fu_1081_p1 = or_ln71_fu_1075_p2;

assign zext_ln79_fu_1104_p1 = or_ln2_fu_1094_p4;

assign zext_ln83_fu_1012_p1 = or_ln3_fu_1005_p3;

assign zext_ln95_fu_1126_p1 = or_ln95_2_fu_1117_p5;

endmodule //cyber2000fb_decode_crtc
