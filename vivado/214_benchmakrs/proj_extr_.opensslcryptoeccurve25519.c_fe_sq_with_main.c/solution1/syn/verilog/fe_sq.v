// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="fe_sq,hls_ip_2019_1,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7k160t-fbg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=9.360000,HLS_SYN_LAT=20,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=176,HLS_SYN_FF=2461,HLS_SYN_LUT=3935,HLS_VERSION=2019_1}" *)

module fe_sq (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        h_address0,
        h_ce0,
        h_we0,
        h_d0,
        h_address1,
        h_ce1,
        h_we1,
        h_d1,
        f_address0,
        f_ce0,
        f_q0,
        f_address1,
        f_ce1,
        f_q1
);

parameter    ap_ST_fsm_state1 = 21'd1;
parameter    ap_ST_fsm_state2 = 21'd2;
parameter    ap_ST_fsm_state3 = 21'd4;
parameter    ap_ST_fsm_state4 = 21'd8;
parameter    ap_ST_fsm_state5 = 21'd16;
parameter    ap_ST_fsm_state6 = 21'd32;
parameter    ap_ST_fsm_state7 = 21'd64;
parameter    ap_ST_fsm_state8 = 21'd128;
parameter    ap_ST_fsm_state9 = 21'd256;
parameter    ap_ST_fsm_state10 = 21'd512;
parameter    ap_ST_fsm_state11 = 21'd1024;
parameter    ap_ST_fsm_state12 = 21'd2048;
parameter    ap_ST_fsm_state13 = 21'd4096;
parameter    ap_ST_fsm_state14 = 21'd8192;
parameter    ap_ST_fsm_state15 = 21'd16384;
parameter    ap_ST_fsm_state16 = 21'd32768;
parameter    ap_ST_fsm_state17 = 21'd65536;
parameter    ap_ST_fsm_state18 = 21'd131072;
parameter    ap_ST_fsm_state19 = 21'd262144;
parameter    ap_ST_fsm_state20 = 21'd524288;
parameter    ap_ST_fsm_state21 = 21'd1048576;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [9:0] h_address0;
output   h_ce0;
output   h_we0;
output  [31:0] h_d0;
output  [9:0] h_address1;
output   h_ce1;
output   h_we1;
output  [31:0] h_d1;
output  [9:0] f_address0;
output   f_ce0;
input  [31:0] f_q0;
output  [9:0] f_address1;
output   f_ce1;
input  [31:0] f_q1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[9:0] h_address0;
reg h_ce0;
reg h_we0;
reg[31:0] h_d0;
reg[9:0] h_address1;
reg h_ce1;
reg h_we1;
reg[31:0] h_d1;
reg[9:0] f_address0;
reg f_ce0;
reg[9:0] f_address1;
reg f_ce1;

(* fsm_encoding = "none" *) reg   [20:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg  signed [31:0] f0_reg_1280;
wire    ap_CS_fsm_state2;
reg  signed [31:0] f1_reg_1295;
reg  signed [31:0] f2_reg_1320;
wire    ap_CS_fsm_state3;
reg  signed [31:0] f3_reg_1335;
reg  signed [31:0] f4_reg_1360;
wire    ap_CS_fsm_state4;
reg  signed [31:0] f5_reg_1375;
reg  signed [31:0] f6_reg_1400;
wire    ap_CS_fsm_state5;
reg  signed [31:0] f7_reg_1413;
reg  signed [31:0] f8_reg_1434;
wire    ap_CS_fsm_state6;
reg  signed [31:0] f9_reg_1443;
wire  signed [31:0] f7_38_fu_252_p2;
reg  signed [31:0] f7_38_reg_1450;
wire    ap_CS_fsm_state7;
wire  signed [31:0] f8_19_fu_257_p2;
reg  signed [31:0] f8_19_reg_1459;
wire  signed [31:0] f9_38_fu_262_p2;
reg  signed [31:0] f9_38_reg_1470;
wire   [31:0] mul_ln57_fu_277_p2;
reg   [31:0] mul_ln57_reg_1483;
wire    ap_CS_fsm_state8;
wire   [31:0] f2f2_fu_281_p2;
reg   [31:0] f2f2_reg_1488;
wire  signed [31:0] mul_ln85_fu_285_p2;
reg  signed [31:0] mul_ln85_reg_1493;
wire   [31:0] mul_ln89_fu_290_p2;
reg   [31:0] mul_ln89_reg_1498;
wire   [31:0] f7f7_38_fu_304_p2;
reg   [31:0] f7f7_38_reg_1503;
wire   [31:0] add_ln104_fu_308_p2;
reg   [31:0] add_ln104_reg_1508;
wire  signed [31:0] f6_19_fu_314_p2;
reg  signed [31:0] f6_19_reg_1513;
wire    ap_CS_fsm_state9;
wire   [31:0] f0f0_fu_319_p2;
reg   [31:0] f0f0_reg_1520;
wire   [31:0] mul_ln58_fu_338_p2;
reg   [31:0] mul_ln58_reg_1525;
wire   [31:0] mul_ln63_fu_342_p2;
reg   [31:0] mul_ln63_reg_1530;
wire   [31:0] mul_ln65_fu_346_p2;
reg   [31:0] mul_ln65_reg_1535;
wire   [31:0] f5f5_38_fu_350_p2;
reg   [31:0] f5f5_38_reg_1540;
wire   [31:0] mul_ln95_fu_363_p2;
reg   [31:0] mul_ln95_reg_1545;
wire   [31:0] h4_fu_382_p2;
reg   [31:0] h4_reg_1550;
wire   [31:0] add_ln122_fu_388_p2;
reg   [31:0] add_ln122_reg_1556;
wire   [31:0] mul_ln46_fu_394_p2;
reg   [31:0] mul_ln46_reg_1561;
wire    ap_CS_fsm_state10;
wire   [31:0] mul_ln59_fu_403_p2;
reg   [31:0] mul_ln59_reg_1566;
wire   [31:0] mul_ln66_fu_417_p2;
reg   [31:0] mul_ln66_reg_1571;
wire   [31:0] mul_ln72_fu_431_p2;
reg   [31:0] mul_ln72_reg_1576;
wire   [31:0] mul_ln76_fu_435_p2;
reg   [31:0] mul_ln76_reg_1581;
wire   [31:0] mul_ln86_fu_449_p2;
reg   [31:0] mul_ln86_reg_1586;
wire   [31:0] add_ln100_fu_458_p2;
reg   [31:0] add_ln100_reg_1591;
wire   [31:0] add_ln100_3_fu_469_p2;
reg   [31:0] add_ln100_3_reg_1596;
wire   [31:0] h5_fu_510_p2;
reg   [31:0] h5_reg_1601;
wire   [31:0] mul_ln67_fu_541_p2;
reg   [31:0] mul_ln67_reg_1607;
wire    ap_CS_fsm_state11;
wire   [31:0] mul_ln73_fu_554_p2;
reg   [31:0] mul_ln73_reg_1612;
wire   [31:0] mul_ln77_fu_563_p2;
reg   [31:0] mul_ln77_reg_1617;
wire   [31:0] f8f8_19_fu_586_p2;
reg   [31:0] f8f8_19_reg_1622;
(* use_dsp48 = "no" *) wire   [31:0] h0_fu_595_p2;
reg  signed [31:0] h0_reg_1627;
wire   [31:0] add_ln121_fu_620_p2;
reg   [31:0] add_ln121_reg_1632;
wire   [31:0] add_ln121_3_fu_632_p2;
reg   [31:0] add_ln121_3_reg_1637;
wire   [31:0] add_ln125_fu_657_p2;
reg   [31:0] add_ln125_reg_1642;
wire   [31:0] add_ln125_4_fu_675_p2;
reg   [31:0] add_ln125_4_reg_1647;
wire   [31:0] mul_ln52_fu_691_p2;
reg   [31:0] mul_ln52_reg_1652;
wire    ap_CS_fsm_state12;
wire   [31:0] mul_ln55_fu_705_p2;
reg   [31:0] mul_ln55_reg_1657;
wire   [31:0] mul_ln83_fu_764_p2;
reg   [31:0] mul_ln83_reg_1662;
wire   [31:0] f6f6_19_fu_782_p2;
reg   [31:0] f6f6_19_reg_1667;
wire   [31:0] h1_fu_803_p2;
reg   [31:0] h1_reg_1672;
wire   [31:0] add_ln124_fu_828_p2;
reg   [31:0] add_ln124_reg_1677;
wire   [31:0] add_ln124_3_fu_834_p2;
reg   [31:0] add_ln124_3_reg_1682;
wire   [31:0] h6_fu_844_p2;
reg   [31:0] h6_reg_1687;
wire   [31:0] add_ln127_fu_849_p2;
reg   [31:0] add_ln127_reg_1692;
wire   [31:0] add_ln128_fu_875_p2;
reg   [31:0] add_ln128_reg_1697;
wire   [31:0] add_ln128_3_fu_887_p2;
reg   [31:0] add_ln128_3_reg_1702;
wire   [31:0] add_ln131_fu_893_p2;
reg   [31:0] add_ln131_reg_1707;
wire   [31:0] add_ln134_fu_899_p2;
reg   [31:0] add_ln134_reg_1712;
wire   [31:0] mul_ln48_fu_905_p2;
reg   [31:0] mul_ln48_reg_1717;
wire    ap_CS_fsm_state13;
wire   [31:0] mul_ln53_fu_914_p2;
reg   [31:0] mul_ln53_reg_1722;
wire   [31:0] mul_ln56_fu_923_p2;
reg   [31:0] mul_ln56_reg_1727;
wire   [31:0] mul_ln62_fu_927_p2;
reg   [31:0] mul_ln62_reg_1732;
wire   [31:0] mul_ln68_fu_931_p2;
reg   [31:0] mul_ln68_reg_1737;
wire   [31:0] mul_ln75_fu_945_p2;
reg   [31:0] mul_ln75_reg_1742;
wire   [31:0] f4f4_fu_949_p2;
reg   [31:0] f4f4_reg_1747;
wire   [31:0] mul_ln80_fu_953_p2;
reg   [31:0] mul_ln80_reg_1752;
wire   [31:0] mul_ln88_fu_962_p2;
reg   [31:0] mul_ln88_reg_1757;
wire   [31:0] h2_fu_981_p2;
reg   [31:0] h2_reg_1762;
wire   [31:0] h7_fu_992_p2;
reg   [31:0] h7_reg_1768;
wire   [31:0] add_ln131_3_fu_1017_p2;
reg   [31:0] add_ln131_3_reg_1773;
wire   [31:0] h3_fu_1084_p2;
reg   [31:0] h3_reg_1778;
wire    ap_CS_fsm_state14;
wire   [31:0] h8_fu_1105_p2;
reg   [31:0] h8_reg_1784;
reg   [5:0] trunc_ln9_reg_1789;
wire   [31:0] h9_fu_1162_p2;
reg   [31:0] h9_reg_1794;
wire    ap_CS_fsm_state15;
reg  signed [6:0] trunc_ln10_reg_1799;
wire   [31:0] h1_1_fu_1206_p2;
reg   [31:0] h1_1_reg_1804;
wire    ap_CS_fsm_state16;
wire   [31:0] h5_1_fu_1256_p2;
reg   [31:0] h5_1_reg_1809;
wire    ap_CS_fsm_state18;
wire    ap_CS_fsm_state17;
wire    ap_CS_fsm_state19;
wire    ap_CS_fsm_state20;
wire    ap_CS_fsm_state21;
wire  signed [31:0] grp_fu_1261_p3;
wire   [31:0] h4_1_fu_1230_p2;
wire   [31:0] mul_ln49_fu_267_p2;
wire   [31:0] mul_ln92_fu_294_p2;
wire   [31:0] f6f8_38_fu_298_p2;
wire   [31:0] f0f4_2_fu_271_p2;
wire   [31:0] mul_ln50_fu_323_p2;
wire   [31:0] f5f9_76_fu_354_p2;
wire   [31:0] add_ln104_2_fu_371_p2;
wire   [31:0] f1f3_4_fu_333_p2;
wire   [31:0] add_ln104_3_fu_376_p2;
wire   [31:0] add_ln104_1_fu_367_p2;
wire   [31:0] f6f9_38_fu_359_p2;
wire   [31:0] f0f5_2_fu_327_p2;
wire   [31:0] mul_ln70_fu_421_p2;
wire   [31:0] mul_ln81_fu_439_p2;
wire   [31:0] f2f8_38_fu_425_p2;
wire   [31:0] f4f6_38_fu_443_p2;
wire   [31:0] f1f9_76_fu_407_p2;
wire   [31:0] add_ln100_2_fu_464_p2;
wire   [31:0] carry4_fu_474_p2;
wire   [5:0] trunc_ln1_fu_479_p4;
wire   [31:0] f7f8_38_fu_453_p2;
wire   [31:0] f2f3_2_fu_412_p2;
wire  signed [31:0] sext_ln122_fu_489_p1;
wire   [31:0] add_ln122_2_fu_498_p2;
wire   [31:0] f1f4_2_fu_398_p2;
wire   [31:0] add_ln122_3_fu_504_p2;
wire   [31:0] add_ln122_1_fu_493_p2;
wire   [31:0] mul_ln51_fu_521_p2;
wire   [31:0] mul_ln96_fu_576_p2;
wire   [31:0] f3f7_76_fu_558_p2;
wire   [31:0] add_ln100_1_fu_590_p2;
wire   [31:0] carry0_fu_600_p2;
wire   [5:0] trunc_ln_fu_606_p4;
wire   [31:0] f2f9_38_fu_545_p2;
wire   [31:0] f4f7_38_fu_567_p2;
wire   [31:0] f0f1_2_fu_516_p2;
wire  signed [31:0] sext_ln121_fu_616_p1;
wire   [31:0] add_ln121_2_fu_626_p2;
wire   [31:0] f5f6_38_fu_571_p2;
wire   [31:0] carry5_fu_638_p2;
wire   [6:0] trunc_ln3_fu_643_p4;
wire   [31:0] f7f9_76_fu_580_p2;
wire   [31:0] f0f6_2_fu_525_p2;
wire   [31:0] f3f3_2_fu_549_p2;
wire   [31:0] f1f5_4_fu_531_p2;
wire   [31:0] f2f4_2_fu_536_p2;
wire  signed [31:0] sext_ln125_fu_653_p1;
wire   [31:0] add_ln125_3_fu_669_p2;
wire   [31:0] add_ln125_2_fu_663_p2;
wire   [31:0] mul_ln47_fu_681_p2;
wire   [31:0] mul_ln54_fu_695_p2;
wire   [31:0] mul_ln60_fu_709_p2;
wire   [31:0] mul_ln61_fu_719_p2;
wire   [31:0] mul_ln69_fu_734_p2;
wire   [31:0] mul_ln78_fu_754_p2;
wire   [31:0] mul_ln87_fu_772_p2;
wire   [31:0] f3f8_38_fu_749_p2;
wire   [31:0] add_ln121_1_fu_798_p2;
wire   [31:0] carry1_fu_808_p2;
wire   [6:0] trunc_ln2_fu_814_p4;
wire   [31:0] f3f9_76_fu_758_p2;
wire   [31:0] f5f7_76_fu_776_p2;
wire   [31:0] f0f2_2_fu_685_p2;
wire  signed [31:0] sext_ln124_fu_824_p1;
wire   [31:0] add_ln125_1_fu_840_p2;
wire   [31:0] f4f9_38_fu_768_p2;
wire   [31:0] f6f7_38_fu_786_p2;
wire   [31:0] carry6_fu_855_p2;
wire   [5:0] trunc_ln5_fu_861_p4;
wire   [31:0] f8f9_38_fu_790_p2;
wire   [31:0] f1f6_2_fu_713_p2;
wire   [31:0] f3f4_2_fu_744_p2;
wire  signed [31:0] sext_ln128_fu_871_p1;
wire   [31:0] add_ln128_2_fu_881_p2;
wire   [31:0] f2f5_2_fu_729_p2;
wire   [31:0] f9f9_38_fu_794_p2;
wire   [31:0] f1f7_4_fu_723_p2;
wire   [31:0] f0f9_2_fu_699_p2;
wire   [31:0] f2f7_2_fu_738_p2;
wire   [31:0] mul_ln74_fu_935_p2;
wire   [31:0] f4f8_38_fu_957_p2;
wire   [31:0] f1f1_2_fu_918_p2;
wire   [31:0] add_ln124_2_fu_971_p2;
wire   [31:0] add_ln124_4_fu_976_p2;
wire   [31:0] add_ln124_1_fu_966_p2;
wire   [31:0] f0f7_2_fu_909_p2;
wire   [31:0] add_ln128_1_fu_987_p2;
wire   [31:0] carry7_fu_997_p2;
wire   [6:0] trunc_ln7_fu_1003_p4;
wire   [31:0] f3f5_4_fu_939_p2;
wire  signed [31:0] sext_ln131_fu_1013_p1;
wire   [31:0] carry2_fu_1048_p2;
wire   [5:0] trunc_ln4_fu_1053_p4;
wire   [31:0] f5f8_38_fu_1043_p2;
wire   [31:0] f1f2_2_fu_1033_p2;
wire  signed [31:0] sext_ln127_fu_1063_p1;
wire   [31:0] add_ln127_2_fu_1072_p2;
wire   [31:0] f0f3_2_fu_1023_p2;
wire   [31:0] add_ln127_3_fu_1078_p2;
wire   [31:0] add_ln127_1_fu_1067_p2;
wire   [31:0] f0f8_2_fu_1028_p2;
wire   [31:0] f2f6_2_fu_1038_p2;
wire   [31:0] add_ln131_2_fu_1095_p2;
wire   [31:0] add_ln131_4_fu_1100_p2;
wire   [31:0] add_ln131_1_fu_1090_p2;
wire   [31:0] carry8_fu_1111_p2;
wire   [31:0] f1f8_2_fu_1127_p2;
wire   [31:0] f4f5_2_fu_1137_p2;
wire  signed [31:0] sext_ln134_fu_1142_p1;
wire   [31:0] add_ln134_2_fu_1150_p2;
wire   [31:0] f3f6_2_fu_1132_p2;
wire   [31:0] add_ln134_3_fu_1156_p2;
wire   [31:0] add_ln134_1_fu_1145_p2;
wire   [31:0] carry9_fu_1168_p2;
(* use_dsp48 = "no" *) wire   [31:0] carry0_1_fu_1187_p2;
wire   [5:0] trunc_ln11_fu_1192_p4;
wire  signed [31:0] sext_ln138_fu_1202_p1;
wire   [31:0] carry3_fu_1211_p2;
wire   [6:0] trunc_ln6_fu_1216_p4;
wire  signed [31:0] sext_ln130_fu_1226_p1;
wire   [31:0] carry4_1_fu_1236_p2;
wire   [5:0] trunc_ln8_fu_1242_p4;
wire  signed [31:0] sext_ln133_fu_1252_p1;
reg   [20:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 21'd1;
end

fe_sq_mac_muladd_13s_7s_32s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 7 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fe_sq_mac_muladd_13s_7s_32s_32_1_1_U1(
    .din0(13'd19),
    .din1(trunc_ln10_reg_1799),
    .din2(h0_reg_1627),
    .dout(grp_fu_1261_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        add_ln100_3_reg_1596 <= add_ln100_3_fu_469_p2;
        add_ln100_reg_1591[31 : 1] <= add_ln100_fu_458_p2[31 : 1];
        h5_reg_1601 <= h5_fu_510_p2;
        mul_ln46_reg_1561 <= mul_ln46_fu_394_p2;
        mul_ln59_reg_1566 <= mul_ln59_fu_403_p2;
        mul_ln66_reg_1571 <= mul_ln66_fu_417_p2;
        mul_ln72_reg_1576 <= mul_ln72_fu_431_p2;
        mul_ln76_reg_1581 <= mul_ln76_fu_435_p2;
        mul_ln86_reg_1586 <= mul_ln86_fu_449_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        add_ln104_reg_1508[31 : 1] <= add_ln104_fu_308_p2[31 : 1];
        f2f2_reg_1488 <= f2f2_fu_281_p2;
        f7f7_38_reg_1503 <= f7f7_38_fu_304_p2;
        mul_ln57_reg_1483 <= mul_ln57_fu_277_p2;
        mul_ln85_reg_1493 <= mul_ln85_fu_285_p2;
        mul_ln89_reg_1498 <= mul_ln89_fu_290_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        add_ln121_3_reg_1637 <= add_ln121_3_fu_632_p2;
        add_ln121_reg_1632 <= add_ln121_fu_620_p2;
        add_ln125_4_reg_1647 <= add_ln125_4_fu_675_p2;
        add_ln125_reg_1642[31 : 1] <= add_ln125_fu_657_p2[31 : 1];
        f8f8_19_reg_1622 <= f8f8_19_fu_586_p2;
        h0_reg_1627 <= h0_fu_595_p2;
        mul_ln67_reg_1607 <= mul_ln67_fu_541_p2;
        mul_ln73_reg_1612 <= mul_ln73_fu_554_p2;
        mul_ln77_reg_1617 <= mul_ln77_fu_563_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        add_ln122_reg_1556 <= add_ln122_fu_388_p2;
        f0f0_reg_1520 <= f0f0_fu_319_p2;
        f5f5_38_reg_1540 <= f5f5_38_fu_350_p2;
        f6_19_reg_1513 <= f6_19_fu_314_p2;
        h4_reg_1550 <= h4_fu_382_p2;
        mul_ln58_reg_1525 <= mul_ln58_fu_338_p2;
        mul_ln63_reg_1530 <= mul_ln63_fu_342_p2;
        mul_ln65_reg_1535 <= mul_ln65_fu_346_p2;
        mul_ln95_reg_1545 <= mul_ln95_fu_363_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        add_ln124_3_reg_1682 <= add_ln124_3_fu_834_p2;
        add_ln124_reg_1677[31 : 1] <= add_ln124_fu_828_p2[31 : 1];
        add_ln127_reg_1692 <= add_ln127_fu_849_p2;
        add_ln128_3_reg_1702 <= add_ln128_3_fu_887_p2;
        add_ln128_reg_1697 <= add_ln128_fu_875_p2;
        add_ln131_reg_1707 <= add_ln131_fu_893_p2;
        add_ln134_reg_1712[31 : 1] <= add_ln134_fu_899_p2[31 : 1];
        f6f6_19_reg_1667 <= f6f6_19_fu_782_p2;
        h1_reg_1672 <= h1_fu_803_p2;
        h6_reg_1687 <= h6_fu_844_p2;
        mul_ln52_reg_1652 <= mul_ln52_fu_691_p2;
        mul_ln55_reg_1657 <= mul_ln55_fu_705_p2;
        mul_ln83_reg_1662 <= mul_ln83_fu_764_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        add_ln131_3_reg_1773 <= add_ln131_3_fu_1017_p2;
        f4f4_reg_1747 <= f4f4_fu_949_p2;
        h2_reg_1762 <= h2_fu_981_p2;
        h7_reg_1768 <= h7_fu_992_p2;
        mul_ln48_reg_1717 <= mul_ln48_fu_905_p2;
        mul_ln53_reg_1722 <= mul_ln53_fu_914_p2;
        mul_ln56_reg_1727 <= mul_ln56_fu_923_p2;
        mul_ln62_reg_1732 <= mul_ln62_fu_927_p2;
        mul_ln68_reg_1737 <= mul_ln68_fu_931_p2;
        mul_ln75_reg_1742 <= mul_ln75_fu_945_p2;
        mul_ln80_reg_1752 <= mul_ln80_fu_953_p2;
        mul_ln88_reg_1757 <= mul_ln88_fu_962_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        f0_reg_1280 <= f_q0;
        f1_reg_1295 <= f_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        f2_reg_1320 <= f_q0;
        f3_reg_1335 <= f_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        f4_reg_1360 <= f_q0;
        f5_reg_1375 <= f_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        f6_reg_1400 <= f_q0;
        f7_reg_1413 <= f_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        f7_38_reg_1450 <= f7_38_fu_252_p2;
        f8_19_reg_1459 <= f8_19_fu_257_p2;
        f9_38_reg_1470 <= f9_38_fu_262_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        f8_reg_1434 <= f_q0;
        f9_reg_1443 <= f_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        h1_1_reg_1804 <= h1_1_fu_1206_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        h3_reg_1778 <= h3_fu_1084_p2;
        h8_reg_1784 <= h8_fu_1105_p2;
        trunc_ln9_reg_1789 <= {{carry8_fu_1111_p2[31:26]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        h5_1_reg_1809 <= h5_1_fu_1256_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        h9_reg_1794 <= h9_fu_1162_p2;
        trunc_ln10_reg_1799 <= {{carry9_fu_1168_p2[31:25]}};
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        f_address0 = 64'd8;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        f_address0 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        f_address0 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        f_address0 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        f_address0 = 64'd0;
    end else begin
        f_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        f_address1 = 64'd9;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        f_address1 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        f_address1 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        f_address1 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        f_address1 = 64'd1;
    end else begin
        f_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state5) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        f_ce0 = 1'b1;
    end else begin
        f_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state5) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        f_ce1 = 1'b1;
    end else begin
        f_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        h_address0 = 64'd8;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        h_address0 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        h_address0 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        h_address0 = 64'd1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        h_address0 = 64'd0;
    end else begin
        h_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        h_address1 = 64'd9;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        h_address1 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        h_address1 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        h_address1 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        h_address1 = 64'd2;
    end else begin
        h_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state16))) begin
        h_ce0 = 1'b1;
    end else begin
        h_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state18))) begin
        h_ce1 = 1'b1;
    end else begin
        h_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        h_d0 = h8_reg_1784;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        h_d0 = h6_reg_1687;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        h_d0 = h4_1_fu_1230_p2;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        h_d0 = h1_1_reg_1804;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        h_d0 = grp_fu_1261_p3;
    end else begin
        h_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        h_d1 = h9_reg_1794;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        h_d1 = h7_reg_1768;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        h_d1 = h5_1_reg_1809;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        h_d1 = h3_reg_1778;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        h_d1 = h2_reg_1762;
    end else begin
        h_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state16))) begin
        h_we0 = 1'b1;
    end else begin
        h_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state18))) begin
        h_we1 = 1'b1;
    end else begin
        h_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln100_1_fu_590_p2 = (add_ln100_reg_1591 + f3f7_76_fu_558_p2);

assign add_ln100_2_fu_464_p2 = (f0f0_reg_1520 + f1f9_76_fu_407_p2);

assign add_ln100_3_fu_469_p2 = (add_ln100_2_fu_464_p2 + f5f5_38_reg_1540);

assign add_ln100_fu_458_p2 = (f2f8_38_fu_425_p2 + f4f6_38_fu_443_p2);

assign add_ln104_1_fu_367_p2 = (add_ln104_reg_1508 + f7f7_38_reg_1503);

assign add_ln104_2_fu_371_p2 = (f2f2_reg_1488 + f5f9_76_fu_354_p2);

assign add_ln104_3_fu_376_p2 = (add_ln104_2_fu_371_p2 + f1f3_4_fu_333_p2);

assign add_ln104_fu_308_p2 = (f6f8_38_fu_298_p2 + f0f4_2_fu_271_p2);

assign add_ln121_1_fu_798_p2 = (add_ln121_reg_1632 + f3f8_38_fu_749_p2);

assign add_ln121_2_fu_626_p2 = ($signed(f0f1_2_fu_516_p2) + $signed(sext_ln121_fu_616_p1));

assign add_ln121_3_fu_632_p2 = (add_ln121_2_fu_626_p2 + f5f6_38_fu_571_p2);

assign add_ln121_fu_620_p2 = (f2f9_38_fu_545_p2 + f4f7_38_fu_567_p2);

assign add_ln122_1_fu_493_p2 = (add_ln122_reg_1556 + f7f8_38_fu_453_p2);

assign add_ln122_2_fu_498_p2 = ($signed(f2f3_2_fu_412_p2) + $signed(sext_ln122_fu_489_p1));

assign add_ln122_3_fu_504_p2 = (add_ln122_2_fu_498_p2 + f1f4_2_fu_398_p2);

assign add_ln122_fu_388_p2 = (f6f9_38_fu_359_p2 + f0f5_2_fu_327_p2);

assign add_ln124_1_fu_966_p2 = (add_ln124_reg_1677 + f4f8_38_fu_957_p2);

assign add_ln124_2_fu_971_p2 = (f1f1_2_fu_918_p2 + f6f6_19_reg_1667);

assign add_ln124_3_fu_834_p2 = ($signed(f0f2_2_fu_685_p2) + $signed(sext_ln124_fu_824_p1));

assign add_ln124_4_fu_976_p2 = (add_ln124_3_reg_1682 + add_ln124_2_fu_971_p2);

assign add_ln124_fu_828_p2 = (f3f9_76_fu_758_p2 + f5f7_76_fu_776_p2);

assign add_ln125_1_fu_840_p2 = (add_ln125_reg_1642 + f8f8_19_reg_1622);

assign add_ln125_2_fu_663_p2 = (f3f3_2_fu_549_p2 + f1f5_4_fu_531_p2);

assign add_ln125_3_fu_669_p2 = ($signed(f2f4_2_fu_536_p2) + $signed(sext_ln125_fu_653_p1));

assign add_ln125_4_fu_675_p2 = (add_ln125_3_fu_669_p2 + add_ln125_2_fu_663_p2);

assign add_ln125_fu_657_p2 = (f7f9_76_fu_580_p2 + f0f6_2_fu_525_p2);

assign add_ln127_1_fu_1067_p2 = (add_ln127_reg_1692 + f5f8_38_fu_1043_p2);

assign add_ln127_2_fu_1072_p2 = ($signed(f1f2_2_fu_1033_p2) + $signed(sext_ln127_fu_1063_p1));

assign add_ln127_3_fu_1078_p2 = (add_ln127_2_fu_1072_p2 + f0f3_2_fu_1023_p2);

assign add_ln127_fu_849_p2 = (f4f9_38_fu_768_p2 + f6f7_38_fu_786_p2);

assign add_ln128_1_fu_987_p2 = (add_ln128_reg_1697 + f0f7_2_fu_909_p2);

assign add_ln128_2_fu_881_p2 = ($signed(f3f4_2_fu_744_p2) + $signed(sext_ln128_fu_871_p1));

assign add_ln128_3_fu_887_p2 = (add_ln128_2_fu_881_p2 + f2f5_2_fu_729_p2);

assign add_ln128_fu_875_p2 = (f8f9_38_fu_790_p2 + f1f6_2_fu_713_p2);

assign add_ln131_1_fu_1090_p2 = (add_ln131_reg_1707 + f0f8_2_fu_1028_p2);

assign add_ln131_2_fu_1095_p2 = (f4f4_reg_1747 + f2f6_2_fu_1038_p2);

assign add_ln131_3_fu_1017_p2 = ($signed(f3f5_4_fu_939_p2) + $signed(sext_ln131_fu_1013_p1));

assign add_ln131_4_fu_1100_p2 = (add_ln131_3_reg_1773 + add_ln131_2_fu_1095_p2);

assign add_ln131_fu_893_p2 = (f9f9_38_fu_794_p2 + f1f7_4_fu_723_p2);

assign add_ln134_1_fu_1145_p2 = (add_ln134_reg_1712 + f1f8_2_fu_1127_p2);

assign add_ln134_2_fu_1150_p2 = ($signed(f4f5_2_fu_1137_p2) + $signed(sext_ln134_fu_1142_p1));

assign add_ln134_3_fu_1156_p2 = (add_ln134_2_fu_1150_p2 + f3f6_2_fu_1132_p2);

assign add_ln134_fu_899_p2 = (f0f9_2_fu_699_p2 + f2f7_2_fu_738_p2);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign carry0_1_fu_1187_p2 = ($signed(32'd33554432) + $signed(grp_fu_1261_p3));

assign carry0_fu_600_p2 = (32'd33554432 + h0_fu_595_p2);

assign carry1_fu_808_p2 = (32'd16777216 + h1_fu_803_p2);

assign carry2_fu_1048_p2 = (32'd33554432 + h2_reg_1762);

assign carry3_fu_1211_p2 = (32'd16777216 + h3_reg_1778);

assign carry4_1_fu_1236_p2 = (32'd33554432 + h4_1_fu_1230_p2);

assign carry4_fu_474_p2 = (32'd33554432 + h4_reg_1550);

assign carry5_fu_638_p2 = (32'd16777216 + h5_reg_1601);

assign carry6_fu_855_p2 = (32'd33554432 + h6_fu_844_p2);

assign carry7_fu_997_p2 = (32'd16777216 + h7_fu_992_p2);

assign carry8_fu_1111_p2 = (32'd33554432 + h8_fu_1105_p2);

assign carry9_fu_1168_p2 = (32'd16777216 + h9_fu_1162_p2);

assign f0f0_fu_319_p2 = ($signed(f0_reg_1280) * $signed(f0_reg_1280));

assign f0f1_2_fu_516_p2 = mul_ln46_reg_1561 << 32'd1;

assign f0f2_2_fu_685_p2 = mul_ln47_fu_681_p2 << 32'd1;

assign f0f3_2_fu_1023_p2 = mul_ln48_reg_1717 << 32'd1;

assign f0f4_2_fu_271_p2 = mul_ln49_fu_267_p2 << 32'd1;

assign f0f5_2_fu_327_p2 = mul_ln50_fu_323_p2 << 32'd1;

assign f0f6_2_fu_525_p2 = mul_ln51_fu_521_p2 << 32'd1;

assign f0f7_2_fu_909_p2 = mul_ln52_reg_1652 << 32'd1;

assign f0f8_2_fu_1028_p2 = mul_ln53_reg_1722 << 32'd1;

assign f0f9_2_fu_699_p2 = mul_ln54_fu_695_p2 << 32'd1;

assign f1f1_2_fu_918_p2 = mul_ln55_reg_1657 << 32'd1;

assign f1f2_2_fu_1033_p2 = mul_ln56_reg_1727 << 32'd1;

assign f1f3_4_fu_333_p2 = mul_ln57_reg_1483 << 32'd2;

assign f1f4_2_fu_398_p2 = mul_ln58_reg_1525 << 32'd1;

assign f1f5_4_fu_531_p2 = mul_ln59_reg_1566 << 32'd2;

assign f1f6_2_fu_713_p2 = mul_ln60_fu_709_p2 << 32'd1;

assign f1f7_4_fu_723_p2 = mul_ln61_fu_719_p2 << 32'd2;

assign f1f8_2_fu_1127_p2 = mul_ln62_reg_1732 << 32'd1;

assign f1f9_76_fu_407_p2 = mul_ln63_reg_1530 << 32'd1;

assign f2f2_fu_281_p2 = ($signed(f2_reg_1320) * $signed(f2_reg_1320));

assign f2f3_2_fu_412_p2 = mul_ln65_reg_1535 << 32'd1;

assign f2f4_2_fu_536_p2 = mul_ln66_reg_1571 << 32'd1;

assign f2f5_2_fu_729_p2 = mul_ln67_reg_1607 << 32'd1;

assign f2f6_2_fu_1038_p2 = mul_ln68_reg_1737 << 32'd1;

assign f2f7_2_fu_738_p2 = mul_ln69_fu_734_p2 << 32'd1;

assign f2f8_38_fu_425_p2 = mul_ln70_fu_421_p2 << 32'd1;

assign f2f9_38_fu_545_p2 = ($signed(f2_reg_1320) * $signed(f9_38_reg_1470));

assign f3f3_2_fu_549_p2 = mul_ln72_reg_1576 << 32'd1;

assign f3f4_2_fu_744_p2 = mul_ln73_reg_1612 << 32'd1;

assign f3f5_4_fu_939_p2 = mul_ln74_fu_935_p2 << 32'd2;

assign f3f6_2_fu_1132_p2 = mul_ln75_reg_1742 << 32'd1;

assign f3f7_76_fu_558_p2 = mul_ln76_reg_1581 << 32'd1;

assign f3f8_38_fu_749_p2 = mul_ln77_reg_1617 << 32'd1;

assign f3f9_76_fu_758_p2 = mul_ln78_fu_754_p2 << 32'd1;

assign f4f4_fu_949_p2 = ($signed(f4_reg_1360) * $signed(f4_reg_1360));

assign f4f5_2_fu_1137_p2 = mul_ln80_reg_1752 << 32'd1;

assign f4f6_38_fu_443_p2 = mul_ln81_fu_439_p2 << 32'd1;

assign f4f7_38_fu_567_p2 = ($signed(f4_reg_1360) * $signed(f7_38_reg_1450));

assign f4f8_38_fu_957_p2 = mul_ln83_reg_1662 << 32'd1;

assign f4f9_38_fu_768_p2 = ($signed(f4_reg_1360) * $signed(f9_38_reg_1470));

assign f5f5_38_fu_350_p2 = ($signed(mul_ln85_reg_1493) * $signed(f5_reg_1375));

assign f5f6_38_fu_571_p2 = mul_ln86_reg_1586 << 32'd1;

assign f5f7_76_fu_776_p2 = mul_ln87_fu_772_p2 << 32'd1;

assign f5f8_38_fu_1043_p2 = mul_ln88_reg_1757 << 32'd1;

assign f5f9_76_fu_354_p2 = mul_ln89_reg_1498 << 32'd1;

assign f6_19_fu_314_p2 = ($signed({{1'b0}, {32'd19}}) * $signed(f6_reg_1400));

assign f6f6_19_fu_782_p2 = ($signed(f6_reg_1400) * $signed(f6_19_reg_1513));

assign f6f7_38_fu_786_p2 = ($signed(f6_reg_1400) * $signed(f7_38_reg_1450));

assign f6f8_38_fu_298_p2 = mul_ln92_fu_294_p2 << 32'd1;

assign f6f9_38_fu_359_p2 = ($signed(f6_reg_1400) * $signed(f9_38_reg_1470));

assign f7_38_fu_252_p2 = ($signed({{1'b0}, {32'd38}}) * $signed(f7_reg_1413));

assign f7f7_38_fu_304_p2 = ($signed(f7_reg_1413) * $signed(f7_38_reg_1450));

assign f7f8_38_fu_453_p2 = mul_ln95_reg_1545 << 32'd1;

assign f7f9_76_fu_580_p2 = mul_ln96_fu_576_p2 << 32'd1;

assign f8_19_fu_257_p2 = ($signed({{1'b0}, {32'd19}}) * $signed(f8_reg_1434));

assign f8f8_19_fu_586_p2 = ($signed(f8_reg_1434) * $signed(f8_19_reg_1459));

assign f8f9_38_fu_790_p2 = ($signed(f8_reg_1434) * $signed(f9_38_reg_1470));

assign f9_38_fu_262_p2 = ($signed({{1'b0}, {32'd38}}) * $signed(f9_reg_1443));

assign f9f9_38_fu_794_p2 = ($signed(f9_reg_1443) * $signed(f9_38_reg_1470));

assign h0_fu_595_p2 = (add_ln100_3_reg_1596 + add_ln100_1_fu_590_p2);

assign h1_1_fu_1206_p2 = ($signed(h1_reg_1672) + $signed(sext_ln138_fu_1202_p1));

assign h1_fu_803_p2 = (add_ln121_3_reg_1637 + add_ln121_1_fu_798_p2);

assign h2_fu_981_p2 = (add_ln124_4_fu_976_p2 + add_ln124_1_fu_966_p2);

assign h3_fu_1084_p2 = (add_ln127_3_fu_1078_p2 + add_ln127_1_fu_1067_p2);

assign h4_1_fu_1230_p2 = ($signed(h4_reg_1550) + $signed(sext_ln130_fu_1226_p1));

assign h4_fu_382_p2 = (add_ln104_3_fu_376_p2 + add_ln104_1_fu_367_p2);

assign h5_1_fu_1256_p2 = ($signed(h5_reg_1601) + $signed(sext_ln133_fu_1252_p1));

assign h5_fu_510_p2 = (add_ln122_3_fu_504_p2 + add_ln122_1_fu_493_p2);

assign h6_fu_844_p2 = (add_ln125_4_reg_1647 + add_ln125_1_fu_840_p2);

assign h7_fu_992_p2 = (add_ln128_3_reg_1702 + add_ln128_1_fu_987_p2);

assign h8_fu_1105_p2 = (add_ln131_4_fu_1100_p2 + add_ln131_1_fu_1090_p2);

assign h9_fu_1162_p2 = (add_ln134_3_fu_1156_p2 + add_ln134_1_fu_1145_p2);

assign mul_ln46_fu_394_p2 = ($signed(f0_reg_1280) * $signed(f1_reg_1295));

assign mul_ln47_fu_681_p2 = ($signed(f0_reg_1280) * $signed(f2_reg_1320));

assign mul_ln48_fu_905_p2 = ($signed(f0_reg_1280) * $signed(f3_reg_1335));

assign mul_ln49_fu_267_p2 = ($signed(f0_reg_1280) * $signed(f4_reg_1360));

assign mul_ln50_fu_323_p2 = ($signed(f0_reg_1280) * $signed(f5_reg_1375));

assign mul_ln51_fu_521_p2 = ($signed(f0_reg_1280) * $signed(f6_reg_1400));

assign mul_ln52_fu_691_p2 = ($signed(f0_reg_1280) * $signed(f7_reg_1413));

assign mul_ln53_fu_914_p2 = ($signed(f0_reg_1280) * $signed(f8_reg_1434));

assign mul_ln54_fu_695_p2 = ($signed(f0_reg_1280) * $signed(f9_reg_1443));

assign mul_ln55_fu_705_p2 = ($signed(f1_reg_1295) * $signed(f1_reg_1295));

assign mul_ln56_fu_923_p2 = ($signed(f1_reg_1295) * $signed(f2_reg_1320));

assign mul_ln57_fu_277_p2 = ($signed(f1_reg_1295) * $signed(f3_reg_1335));

assign mul_ln58_fu_338_p2 = ($signed(f1_reg_1295) * $signed(f4_reg_1360));

assign mul_ln59_fu_403_p2 = ($signed(f1_reg_1295) * $signed(f5_reg_1375));

assign mul_ln60_fu_709_p2 = ($signed(f1_reg_1295) * $signed(f6_reg_1400));

assign mul_ln61_fu_719_p2 = ($signed(f1_reg_1295) * $signed(f7_reg_1413));

assign mul_ln62_fu_927_p2 = ($signed(f1_reg_1295) * $signed(f8_reg_1434));

assign mul_ln63_fu_342_p2 = ($signed(f1_reg_1295) * $signed(f9_38_reg_1470));

assign mul_ln65_fu_346_p2 = ($signed(f2_reg_1320) * $signed(f3_reg_1335));

assign mul_ln66_fu_417_p2 = ($signed(f2_reg_1320) * $signed(f4_reg_1360));

assign mul_ln67_fu_541_p2 = ($signed(f2_reg_1320) * $signed(f5_reg_1375));

assign mul_ln68_fu_931_p2 = ($signed(f2_reg_1320) * $signed(f6_reg_1400));

assign mul_ln69_fu_734_p2 = ($signed(f2_reg_1320) * $signed(f7_reg_1413));

assign mul_ln70_fu_421_p2 = ($signed(f2_reg_1320) * $signed(f8_19_reg_1459));

assign mul_ln72_fu_431_p2 = ($signed(f3_reg_1335) * $signed(f3_reg_1335));

assign mul_ln73_fu_554_p2 = ($signed(f3_reg_1335) * $signed(f4_reg_1360));

assign mul_ln74_fu_935_p2 = ($signed(f3_reg_1335) * $signed(f5_reg_1375));

assign mul_ln75_fu_945_p2 = ($signed(f3_reg_1335) * $signed(f6_reg_1400));

assign mul_ln76_fu_435_p2 = ($signed(f3_reg_1335) * $signed(f7_38_reg_1450));

assign mul_ln77_fu_563_p2 = ($signed(f3_reg_1335) * $signed(f8_19_reg_1459));

assign mul_ln78_fu_754_p2 = ($signed(f3_reg_1335) * $signed(f9_38_reg_1470));

assign mul_ln80_fu_953_p2 = ($signed(f4_reg_1360) * $signed(f5_reg_1375));

assign mul_ln81_fu_439_p2 = ($signed(f4_reg_1360) * $signed(f6_19_reg_1513));

assign mul_ln83_fu_764_p2 = ($signed(f4_reg_1360) * $signed(f8_19_reg_1459));

assign mul_ln85_fu_285_p2 = ($signed({{1'b0}, {32'd38}}) * $signed(f5_reg_1375));

assign mul_ln86_fu_449_p2 = ($signed(f5_reg_1375) * $signed(f6_19_reg_1513));

assign mul_ln87_fu_772_p2 = ($signed(f5_reg_1375) * $signed(f7_38_reg_1450));

assign mul_ln88_fu_962_p2 = ($signed(f5_reg_1375) * $signed(f8_19_reg_1459));

assign mul_ln89_fu_290_p2 = ($signed(f5_reg_1375) * $signed(f9_38_reg_1470));

assign mul_ln92_fu_294_p2 = ($signed(f6_reg_1400) * $signed(f8_19_reg_1459));

assign mul_ln95_fu_363_p2 = ($signed(f7_reg_1413) * $signed(f8_19_reg_1459));

assign mul_ln96_fu_576_p2 = ($signed(f7_reg_1413) * $signed(f9_38_reg_1470));

assign sext_ln121_fu_616_p1 = $signed(trunc_ln_fu_606_p4);

assign sext_ln122_fu_489_p1 = $signed(trunc_ln1_fu_479_p4);

assign sext_ln124_fu_824_p1 = $signed(trunc_ln2_fu_814_p4);

assign sext_ln125_fu_653_p1 = $signed(trunc_ln3_fu_643_p4);

assign sext_ln127_fu_1063_p1 = $signed(trunc_ln4_fu_1053_p4);

assign sext_ln128_fu_871_p1 = $signed(trunc_ln5_fu_861_p4);

assign sext_ln130_fu_1226_p1 = $signed(trunc_ln6_fu_1216_p4);

assign sext_ln131_fu_1013_p1 = $signed(trunc_ln7_fu_1003_p4);

assign sext_ln133_fu_1252_p1 = $signed(trunc_ln8_fu_1242_p4);

assign sext_ln134_fu_1142_p1 = $signed(trunc_ln9_reg_1789);

assign sext_ln138_fu_1202_p1 = $signed(trunc_ln11_fu_1192_p4);

assign trunc_ln11_fu_1192_p4 = {{carry0_1_fu_1187_p2[31:26]}};

assign trunc_ln1_fu_479_p4 = {{carry4_fu_474_p2[31:26]}};

assign trunc_ln2_fu_814_p4 = {{carry1_fu_808_p2[31:25]}};

assign trunc_ln3_fu_643_p4 = {{carry5_fu_638_p2[31:25]}};

assign trunc_ln4_fu_1053_p4 = {{carry2_fu_1048_p2[31:26]}};

assign trunc_ln5_fu_861_p4 = {{carry6_fu_855_p2[31:26]}};

assign trunc_ln6_fu_1216_p4 = {{carry3_fu_1211_p2[31:25]}};

assign trunc_ln7_fu_1003_p4 = {{carry7_fu_997_p2[31:25]}};

assign trunc_ln8_fu_1242_p4 = {{carry4_1_fu_1236_p2[31:26]}};

assign trunc_ln_fu_606_p4 = {{carry0_fu_600_p2[31:26]}};

always @ (posedge ap_clk) begin
    add_ln104_reg_1508[0] <= 1'b0;
    add_ln100_reg_1591[0] <= 1'b0;
    add_ln125_reg_1642[0] <= 1'b0;
    add_ln124_reg_1677[0] <= 1'b0;
    add_ln134_reg_1712[0] <= 1'b0;
end

endmodule //fe_sq
