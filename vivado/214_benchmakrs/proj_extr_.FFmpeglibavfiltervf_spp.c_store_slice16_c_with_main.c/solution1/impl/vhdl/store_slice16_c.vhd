-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2019.1
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity store_slice16_c is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    dst_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    dst_ce0 : OUT STD_LOGIC;
    dst_we0 : OUT STD_LOGIC;
    dst_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    src_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    src_ce0 : OUT STD_LOGIC;
    src_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    src_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
    src_ce1 : OUT STD_LOGIC;
    src_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    dst_linesize : IN STD_LOGIC_VECTOR (31 downto 0);
    src_linesize : IN STD_LOGIC_VECTOR (31 downto 0);
    width : IN STD_LOGIC_VECTOR (31 downto 0);
    height : IN STD_LOGIC_VECTOR (31 downto 0);
    log2_scale : IN STD_LOGIC_VECTOR (31 downto 0);
    dither_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    dither_ce0 : OUT STD_LOGIC;
    dither_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    dither_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
    dither_ce1 : OUT STD_LOGIC;
    dither_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    depth : IN STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of store_slice16_c is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "store_slice16_c,hls_ip_2019_1,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7k160t-fbg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.619444,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=594,HLS_SYN_LUT=3465,HLS_VERSION=2019_1}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (10 downto 0) := "00000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (10 downto 0) := "00000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (10 downto 0) := "00000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (10 downto 0) := "00000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (10 downto 0) := "00000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (10 downto 0) := "00001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (10 downto 0) := "00010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (10 downto 0) := "00100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (10 downto 0) := "01000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (10 downto 0) := "10000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv31_0 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_FFFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111111";
    constant ap_const_lv31_1 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000001";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv34_1 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000000000000000001";
    constant ap_const_lv30_0 : STD_LOGIC_VECTOR (29 downto 0) := "000000000000000000000000000000";
    constant ap_const_lv34_2 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000000000000000010";
    constant ap_const_lv34_3 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000000000000000011";
    constant ap_const_lv34_4 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000000000000000100";
    constant ap_const_lv34_5 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000000000000000101";
    constant ap_const_lv34_6 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000000000000000110";
    constant ap_const_lv34_7 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000000000000000111";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_FFFFFFF9 : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111001";
    constant ap_const_lv29_0 : STD_LOGIC_VECTOR (28 downto 0) := "00000000000000000000000000000";
    constant ap_const_lv27_7FFFFFF : STD_LOGIC_VECTOR (26 downto 0) := "111111111111111111111111111";
    constant ap_const_lv27_0 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal ap_CS_fsm : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal mask_fu_386_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mask_reg_1545 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln33_fu_392_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln33_reg_1557 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal add_ln33_1_fu_397_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln33_1_reg_1562 : STD_LOGIC_VECTOR (31 downto 0);
    signal y_fu_411_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal y_reg_1570 : STD_LOGIC_VECTOR (30 downto 0);
    signal d_reg_1575 : STD_LOGIC_VECTOR (5 downto 0);
    signal icmp_ln33_fu_406_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal dither_addr_reg_1580 : STD_LOGIC_VECTOR (5 downto 0);
    signal dither_addr_1_reg_1585 : STD_LOGIC_VECTOR (5 downto 0);
    signal dither_addr_2_reg_1590 : STD_LOGIC_VECTOR (5 downto 0);
    signal dither_addr_3_reg_1595 : STD_LOGIC_VECTOR (5 downto 0);
    signal dither_addr_4_reg_1600 : STD_LOGIC_VECTOR (5 downto 0);
    signal dither_addr_5_reg_1605 : STD_LOGIC_VECTOR (5 downto 0);
    signal dither_addr_6_reg_1610 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_11_fu_602_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_11_reg_1615 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal icmp_ln35_fu_610_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln38_fu_722_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln38_reg_1628 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal or_ln39_fu_834_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln39_reg_1638 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal or_ln40_fu_946_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln40_reg_1648 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal or_ln41_fu_1058_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln41_reg_1658 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal or_ln42_fu_1170_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln42_reg_1668 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal add_ln43_2_fu_1299_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln43_2_reg_1683 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln44_2_fu_1322_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln44_2_reg_1693 : STD_LOGIC_VECTOR (31 downto 0);
    signal x_fu_1328_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal x_reg_1698 : STD_LOGIC_VECTOR (31 downto 0);
    signal temp_23_fu_1495_p3 : STD_LOGIC_VECTOR (26 downto 0);
    signal temp_23_reg_1703 : STD_LOGIC_VECTOR (26 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal y_0_reg_339 : STD_LOGIC_VECTOR (30 downto 0);
    signal phi_mul_reg_350 : STD_LOGIC_VECTOR (31 downto 0);
    signal phi_mul1_reg_362 : STD_LOGIC_VECTOR (31 downto 0);
    signal x_0_reg_374 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal zext_ln34_fu_425_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_1_fu_436_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_2_fu_451_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_3_fu_466_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_4_fu_481_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_5_fu_496_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_6_fu_511_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_7_fu_526_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln37_fu_621_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln37_1_fu_717_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln38_fu_734_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln38_1_fu_829_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln39_fu_846_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln39_1_fu_941_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln40_fu_958_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln40_1_fu_1053_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln41_fu_1070_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln41_1_fu_1165_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln42_fu_1182_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln42_1_fu_1277_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln43_fu_1294_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln44_fu_1317_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln43_1_fu_1419_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln44_1_fu_1507_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln37_4_fu_706_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln38_4_fu_819_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln39_4_fu_931_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln40_4_fu_1043_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln41_4_fu_1155_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln42_4_fu_1267_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln43_4_fu_1414_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln44_4_fu_1503_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln33_fu_402_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_fu_417_p3 : STD_LOGIC_VECTOR (33 downto 0);
    signal or_ln38_1_fu_430_p2 : STD_LOGIC_VECTOR (33 downto 0);
    signal or_ln39_1_fu_445_p2 : STD_LOGIC_VECTOR (33 downto 0);
    signal or_ln40_1_fu_460_p2 : STD_LOGIC_VECTOR (33 downto 0);
    signal or_ln41_1_fu_475_p2 : STD_LOGIC_VECTOR (33 downto 0);
    signal or_ln42_1_fu_490_p2 : STD_LOGIC_VECTOR (33 downto 0);
    signal or_ln43_1_fu_505_p2 : STD_LOGIC_VECTOR (33 downto 0);
    signal or_ln44_1_fu_520_p2 : STD_LOGIC_VECTOR (33 downto 0);
    signal add_ln35_fu_542_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln35_fu_555_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_lshr_fu_560_p4 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp_9_fu_547_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln35_1_fu_570_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp_10_fu_576_p4 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp_8_fu_535_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln35_fu_586_p3 : STD_LOGIC_VECTOR (28 downto 0);
    signal select_ln35_1_fu_594_p3 : STD_LOGIC_VECTOR (28 downto 0);
    signal add_ln37_fu_615_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln_fu_631_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal shl_ln37_fu_626_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln37_2_fu_641_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln37_1_fu_645_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln37_1_fu_651_p4 : STD_LOGIC_VECTOR (26 downto 0);
    signal temp_fu_661_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln37_fu_665_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_12_fu_676_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal temp_1_fu_684_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln37_fu_670_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln37_fu_690_p3 : STD_LOGIC_VECTOR (26 downto 0);
    signal temp_2_fu_698_p3 : STD_LOGIC_VECTOR (26 downto 0);
    signal add_ln37_2_fu_711_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln38_fu_728_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln1_fu_744_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal shl_ln38_fu_739_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln38_2_fu_754_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln38_1_fu_758_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln38_1_fu_764_p4 : STD_LOGIC_VECTOR (26 downto 0);
    signal temp_3_fu_774_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln38_fu_778_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_13_fu_789_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal temp_4_fu_797_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln38_fu_783_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln38_fu_803_p3 : STD_LOGIC_VECTOR (26 downto 0);
    signal temp_5_fu_811_p3 : STD_LOGIC_VECTOR (26 downto 0);
    signal add_ln38_2_fu_824_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln39_fu_840_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln2_fu_856_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal shl_ln39_fu_851_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln39_2_fu_866_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln39_1_fu_870_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln39_1_fu_876_p4 : STD_LOGIC_VECTOR (26 downto 0);
    signal temp_6_fu_886_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln39_fu_890_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_14_fu_901_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal temp_7_fu_909_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln39_fu_895_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln39_fu_915_p3 : STD_LOGIC_VECTOR (26 downto 0);
    signal temp_8_fu_923_p3 : STD_LOGIC_VECTOR (26 downto 0);
    signal add_ln39_2_fu_936_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln40_fu_952_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln3_fu_968_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal shl_ln40_fu_963_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln40_2_fu_978_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln40_1_fu_982_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln40_1_fu_988_p4 : STD_LOGIC_VECTOR (26 downto 0);
    signal temp_9_fu_998_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln40_fu_1002_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_15_fu_1013_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal temp_10_fu_1021_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln40_fu_1007_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln40_fu_1027_p3 : STD_LOGIC_VECTOR (26 downto 0);
    signal temp_11_fu_1035_p3 : STD_LOGIC_VECTOR (26 downto 0);
    signal add_ln40_2_fu_1048_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln41_fu_1064_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln4_fu_1080_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal shl_ln41_fu_1075_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln41_2_fu_1090_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln41_1_fu_1094_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln41_1_fu_1100_p4 : STD_LOGIC_VECTOR (26 downto 0);
    signal temp_12_fu_1110_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln41_fu_1114_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_16_fu_1125_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal temp_13_fu_1133_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln41_fu_1119_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln41_fu_1139_p3 : STD_LOGIC_VECTOR (26 downto 0);
    signal temp_14_fu_1147_p3 : STD_LOGIC_VECTOR (26 downto 0);
    signal add_ln41_2_fu_1160_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln42_fu_1176_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln5_fu_1192_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal shl_ln42_fu_1187_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln42_2_fu_1202_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln42_1_fu_1206_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln42_1_fu_1212_p4 : STD_LOGIC_VECTOR (26 downto 0);
    signal temp_15_fu_1222_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln42_fu_1226_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_17_fu_1237_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal temp_16_fu_1245_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln42_fu_1231_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln42_fu_1251_p3 : STD_LOGIC_VECTOR (26 downto 0);
    signal temp_17_fu_1259_p3 : STD_LOGIC_VECTOR (26 downto 0);
    signal add_ln42_2_fu_1272_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln43_fu_1282_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln43_fu_1288_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln44_fu_1305_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln44_fu_1311_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln6_fu_1339_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal shl_ln43_fu_1334_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln43_2_fu_1349_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln43_1_fu_1353_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln43_1_fu_1359_p4 : STD_LOGIC_VECTOR (26 downto 0);
    signal temp_18_fu_1369_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln43_fu_1373_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_18_fu_1384_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal temp_19_fu_1392_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln43_fu_1378_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln43_fu_1398_p3 : STD_LOGIC_VECTOR (26 downto 0);
    signal temp_20_fu_1406_p3 : STD_LOGIC_VECTOR (26 downto 0);
    signal trunc_ln7_fu_1428_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal shl_ln44_fu_1423_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln44_2_fu_1438_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln44_1_fu_1442_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln44_1_fu_1448_p4 : STD_LOGIC_VECTOR (26 downto 0);
    signal temp_21_fu_1458_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln44_fu_1462_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_19_fu_1473_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal temp_22_fu_1481_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln44_fu_1467_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln44_fu_1487_p3 : STD_LOGIC_VECTOR (26 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (10 downto 0);


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    phi_mul1_reg_362_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln35_fu_610_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                phi_mul1_reg_362 <= add_ln33_reg_1557;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                phi_mul1_reg_362 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    phi_mul_reg_350_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln35_fu_610_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                phi_mul_reg_350 <= add_ln33_1_reg_1562;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                phi_mul_reg_350 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    x_0_reg_374_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
                x_0_reg_374 <= x_reg_1698;
            elsif (((icmp_ln33_fu_406_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                x_0_reg_374 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    y_0_reg_339_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln35_fu_610_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                y_0_reg_339 <= y_reg_1570;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                y_0_reg_339 <= ap_const_lv31_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                add_ln33_1_reg_1562 <= add_ln33_1_fu_397_p2;
                add_ln33_reg_1557 <= add_ln33_fu_392_p2;
                y_reg_1570 <= y_fu_411_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state9)) then
                add_ln43_2_reg_1683 <= add_ln43_2_fu_1299_p2;
                add_ln44_2_reg_1693 <= add_ln44_2_fu_1322_p2;
                x_reg_1698 <= x_fu_1328_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln33_fu_406_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    d_reg_1575(5 downto 3) <= zext_ln34_fu_425_p1(6 - 1 downto 0)(5 downto 3);
                    dither_addr_1_reg_1585(5 downto 3) <= tmp_2_fu_451_p3(6 - 1 downto 0)(5 downto 3);
                    dither_addr_2_reg_1590(5 downto 3) <= tmp_3_fu_466_p3(6 - 1 downto 0)(5 downto 3);
                    dither_addr_3_reg_1595(5 downto 3) <= tmp_4_fu_481_p3(6 - 1 downto 0)(5 downto 3);
                    dither_addr_4_reg_1600(5 downto 3) <= tmp_5_fu_496_p3(6 - 1 downto 0)(5 downto 3);
                    dither_addr_5_reg_1605(5 downto 3) <= tmp_6_fu_511_p3(6 - 1 downto 0)(5 downto 3);
                    dither_addr_6_reg_1610(5 downto 3) <= tmp_7_fu_526_p3(6 - 1 downto 0)(5 downto 3);
                    dither_addr_reg_1580(5 downto 3) <= tmp_1_fu_436_p3(6 - 1 downto 0)(5 downto 3);
                    tmp_11_reg_1615(31 downto 3) <= tmp_11_fu_602_p3(31 downto 3);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                mask_reg_1545 <= mask_fu_386_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                    or_ln38_reg_1628(31 downto 1) <= or_ln38_fu_722_p2(31 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                    or_ln39_reg_1638(0) <= or_ln39_fu_834_p2(0);    or_ln39_reg_1638(31 downto 2) <= or_ln39_fu_834_p2(31 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
                    or_ln40_reg_1648(31 downto 2) <= or_ln40_fu_946_p2(31 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then
                    or_ln41_reg_1658(1 downto 0) <= or_ln41_fu_1058_p2(1 downto 0);    or_ln41_reg_1658(31 downto 3) <= or_ln41_fu_1058_p2(31 downto 3);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state8)) then
                    or_ln42_reg_1668(1) <= or_ln42_fu_1170_p2(1);    or_ln42_reg_1668(31 downto 3) <= or_ln42_fu_1170_p2(31 downto 3);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state10)) then
                temp_23_reg_1703 <= temp_23_fu_1495_p3;
            end if;
        end if;
    end process;
    d_reg_1575(2 downto 0) <= "000";
    dither_addr_reg_1580(2 downto 0) <= "001";
    dither_addr_1_reg_1585(2 downto 0) <= "010";
    dither_addr_2_reg_1590(2 downto 0) <= "011";
    dither_addr_3_reg_1595(2 downto 0) <= "100";
    dither_addr_4_reg_1600(2 downto 0) <= "101";
    dither_addr_5_reg_1605(2 downto 0) <= "110";
    dither_addr_6_reg_1610(2 downto 0) <= "111";
    tmp_11_reg_1615(2 downto 0) <= "000";
    or_ln38_reg_1628(0) <= '1';
    or_ln39_reg_1638(1) <= '1';
    or_ln40_reg_1648(1 downto 0) <= "11";
    or_ln41_reg_1658(2) <= '1';
    or_ln42_reg_1668(0) <= '1';
    or_ln42_reg_1668(2) <= '1';

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state2, icmp_ln33_fu_406_p2, ap_CS_fsm_state3, icmp_ln35_fu_610_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((icmp_ln33_fu_406_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                if (((icmp_ln35_fu_610_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXX";
        end case;
    end process;
    add_ln33_1_fu_397_p2 <= std_logic_vector(unsigned(phi_mul_reg_350) + unsigned(src_linesize));
    add_ln33_fu_392_p2 <= std_logic_vector(unsigned(phi_mul1_reg_362) + unsigned(dst_linesize));
    add_ln35_fu_542_p2 <= std_logic_vector(unsigned(width) + unsigned(ap_const_lv32_7));
    add_ln37_1_fu_645_p2 <= std_logic_vector(unsigned(shl_ln37_fu_626_p2) + unsigned(sext_ln37_2_fu_641_p1));
    add_ln37_2_fu_711_p2 <= std_logic_vector(unsigned(phi_mul1_reg_362) + unsigned(x_0_reg_374));
    add_ln37_fu_615_p2 <= std_logic_vector(unsigned(phi_mul_reg_350) + unsigned(x_0_reg_374));
    add_ln38_1_fu_758_p2 <= std_logic_vector(unsigned(shl_ln38_fu_739_p2) + unsigned(sext_ln38_2_fu_754_p1));
    add_ln38_2_fu_824_p2 <= std_logic_vector(unsigned(or_ln38_reg_1628) + unsigned(phi_mul1_reg_362));
    add_ln38_fu_728_p2 <= std_logic_vector(unsigned(or_ln38_fu_722_p2) + unsigned(phi_mul_reg_350));
    add_ln39_1_fu_870_p2 <= std_logic_vector(unsigned(shl_ln39_fu_851_p2) + unsigned(sext_ln39_2_fu_866_p1));
    add_ln39_2_fu_936_p2 <= std_logic_vector(unsigned(or_ln39_reg_1638) + unsigned(phi_mul1_reg_362));
    add_ln39_fu_840_p2 <= std_logic_vector(unsigned(or_ln39_fu_834_p2) + unsigned(phi_mul_reg_350));
    add_ln40_1_fu_982_p2 <= std_logic_vector(unsigned(shl_ln40_fu_963_p2) + unsigned(sext_ln40_2_fu_978_p1));
    add_ln40_2_fu_1048_p2 <= std_logic_vector(unsigned(or_ln40_reg_1648) + unsigned(phi_mul1_reg_362));
    add_ln40_fu_952_p2 <= std_logic_vector(unsigned(or_ln40_fu_946_p2) + unsigned(phi_mul_reg_350));
    add_ln41_1_fu_1094_p2 <= std_logic_vector(unsigned(shl_ln41_fu_1075_p2) + unsigned(sext_ln41_2_fu_1090_p1));
    add_ln41_2_fu_1160_p2 <= std_logic_vector(unsigned(or_ln41_reg_1658) + unsigned(phi_mul1_reg_362));
    add_ln41_fu_1064_p2 <= std_logic_vector(unsigned(or_ln41_fu_1058_p2) + unsigned(phi_mul_reg_350));
    add_ln42_1_fu_1206_p2 <= std_logic_vector(unsigned(shl_ln42_fu_1187_p2) + unsigned(sext_ln42_2_fu_1202_p1));
    add_ln42_2_fu_1272_p2 <= std_logic_vector(unsigned(or_ln42_reg_1668) + unsigned(phi_mul1_reg_362));
    add_ln42_fu_1176_p2 <= std_logic_vector(unsigned(or_ln42_fu_1170_p2) + unsigned(phi_mul_reg_350));
    add_ln43_1_fu_1353_p2 <= std_logic_vector(unsigned(shl_ln43_fu_1334_p2) + unsigned(sext_ln43_2_fu_1349_p1));
    add_ln43_2_fu_1299_p2 <= std_logic_vector(unsigned(or_ln43_fu_1282_p2) + unsigned(phi_mul1_reg_362));
    add_ln43_fu_1288_p2 <= std_logic_vector(unsigned(or_ln43_fu_1282_p2) + unsigned(phi_mul_reg_350));
    add_ln44_1_fu_1442_p2 <= std_logic_vector(unsigned(shl_ln44_fu_1423_p2) + unsigned(sext_ln44_2_fu_1438_p1));
    add_ln44_2_fu_1322_p2 <= std_logic_vector(unsigned(or_ln44_fu_1305_p2) + unsigned(phi_mul1_reg_362));
    add_ln44_fu_1311_p2 <= std_logic_vector(unsigned(or_ln44_fu_1305_p2) + unsigned(phi_mul_reg_350));
    and_ln37_fu_665_p2 <= (temp_fu_661_p1 and mask_reg_1545);
    and_ln38_fu_778_p2 <= (temp_3_fu_774_p1 and mask_reg_1545);
    and_ln39_fu_890_p2 <= (temp_6_fu_886_p1 and mask_reg_1545);
    and_ln40_fu_1002_p2 <= (temp_9_fu_998_p1 and mask_reg_1545);
    and_ln41_fu_1114_p2 <= (temp_12_fu_1110_p1 and mask_reg_1545);
    and_ln42_fu_1226_p2 <= (temp_15_fu_1222_p1 and mask_reg_1545);
    and_ln43_fu_1373_p2 <= (temp_18_fu_1369_p1 and mask_reg_1545);
    and_ln44_fu_1462_p2 <= (temp_21_fu_1458_p1 and mask_reg_1545);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);

    ap_done_assign_proc : process(ap_CS_fsm_state2, icmp_ln33_fu_406_p2)
    begin
        if (((icmp_ln33_fu_406_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state2, icmp_ln33_fu_406_p2)
    begin
        if (((icmp_ln33_fu_406_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    dither_address0_assign_proc : process(d_reg_1575, dither_addr_reg_1580, dither_addr_1_reg_1585, dither_addr_2_reg_1590, dither_addr_3_reg_1595, dither_addr_4_reg_1600, dither_addr_5_reg_1605, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            dither_address0 <= dither_addr_5_reg_1605;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            dither_address0 <= dither_addr_4_reg_1600;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            dither_address0 <= dither_addr_3_reg_1595;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            dither_address0 <= dither_addr_2_reg_1590;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            dither_address0 <= dither_addr_1_reg_1585;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            dither_address0 <= dither_addr_reg_1580;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            dither_address0 <= d_reg_1575;
        else 
            dither_address0 <= "XXXXXX";
        end if; 
    end process;

    dither_address1 <= dither_addr_6_reg_1610;

    dither_ce0_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            dither_ce0 <= ap_const_logic_1;
        else 
            dither_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    dither_ce1_assign_proc : process(ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            dither_ce1 <= ap_const_logic_1;
        else 
            dither_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    dst_address0_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, sext_ln37_1_fu_717_p1, sext_ln38_1_fu_829_p1, sext_ln39_1_fu_941_p1, sext_ln40_1_fu_1053_p1, sext_ln41_1_fu_1165_p1, sext_ln42_1_fu_1277_p1, sext_ln43_1_fu_1419_p1, sext_ln44_1_fu_1507_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            dst_address0 <= sext_ln44_1_fu_1507_p1(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            dst_address0 <= sext_ln43_1_fu_1419_p1(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            dst_address0 <= sext_ln42_1_fu_1277_p1(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            dst_address0 <= sext_ln41_1_fu_1165_p1(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            dst_address0 <= sext_ln40_1_fu_1053_p1(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            dst_address0 <= sext_ln39_1_fu_941_p1(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            dst_address0 <= sext_ln38_1_fu_829_p1(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            dst_address0 <= sext_ln37_1_fu_717_p1(3 - 1 downto 0);
        else 
            dst_address0 <= "XXX";
        end if; 
    end process;


    dst_ce0_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            dst_ce0 <= ap_const_logic_1;
        else 
            dst_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    dst_d0_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, sext_ln37_4_fu_706_p1, sext_ln38_4_fu_819_p1, sext_ln39_4_fu_931_p1, sext_ln40_4_fu_1043_p1, sext_ln41_4_fu_1155_p1, sext_ln42_4_fu_1267_p1, sext_ln43_4_fu_1414_p1, sext_ln44_4_fu_1503_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            dst_d0 <= sext_ln44_4_fu_1503_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            dst_d0 <= sext_ln43_4_fu_1414_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            dst_d0 <= sext_ln42_4_fu_1267_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            dst_d0 <= sext_ln41_4_fu_1155_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            dst_d0 <= sext_ln40_4_fu_1043_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            dst_d0 <= sext_ln39_4_fu_931_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            dst_d0 <= sext_ln38_4_fu_819_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            dst_d0 <= sext_ln37_4_fu_706_p1;
        else 
            dst_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    dst_we0_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            dst_we0 <= ap_const_logic_1;
        else 
            dst_we0 <= ap_const_logic_0;
        end if; 
    end process;

    icmp_ln33_fu_406_p2 <= "1" when (signed(zext_ln33_fu_402_p1) < signed(height)) else "0";
    icmp_ln35_fu_610_p2 <= "1" when (x_0_reg_374 = tmp_11_reg_1615) else "0";
    icmp_ln37_fu_670_p2 <= "1" when (and_ln37_fu_665_p2 = ap_const_lv32_0) else "0";
    icmp_ln38_fu_783_p2 <= "1" when (and_ln38_fu_778_p2 = ap_const_lv32_0) else "0";
    icmp_ln39_fu_895_p2 <= "1" when (and_ln39_fu_890_p2 = ap_const_lv32_0) else "0";
    icmp_ln40_fu_1007_p2 <= "1" when (and_ln40_fu_1002_p2 = ap_const_lv32_0) else "0";
    icmp_ln41_fu_1119_p2 <= "1" when (and_ln41_fu_1114_p2 = ap_const_lv32_0) else "0";
    icmp_ln42_fu_1231_p2 <= "1" when (and_ln42_fu_1226_p2 = ap_const_lv32_0) else "0";
    icmp_ln43_fu_1378_p2 <= "1" when (and_ln43_fu_1373_p2 = ap_const_lv32_0) else "0";
    icmp_ln44_fu_1467_p2 <= "1" when (and_ln44_fu_1462_p2 = ap_const_lv32_0) else "0";
    mask_fu_386_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv32_FFFFFFFF),to_integer(unsigned('0' & depth(31-1 downto 0)))));
    or_ln38_1_fu_430_p2 <= (tmp_fu_417_p3 or ap_const_lv34_1);
    or_ln38_fu_722_p2 <= (x_0_reg_374 or ap_const_lv32_1);
    or_ln39_1_fu_445_p2 <= (tmp_fu_417_p3 or ap_const_lv34_2);
    or_ln39_fu_834_p2 <= (x_0_reg_374 or ap_const_lv32_2);
    or_ln40_1_fu_460_p2 <= (tmp_fu_417_p3 or ap_const_lv34_3);
    or_ln40_fu_946_p2 <= (x_0_reg_374 or ap_const_lv32_3);
    or_ln41_1_fu_475_p2 <= (tmp_fu_417_p3 or ap_const_lv34_4);
    or_ln41_fu_1058_p2 <= (x_0_reg_374 or ap_const_lv32_4);
    or_ln42_1_fu_490_p2 <= (tmp_fu_417_p3 or ap_const_lv34_5);
    or_ln42_fu_1170_p2 <= (x_0_reg_374 or ap_const_lv32_5);
    or_ln43_1_fu_505_p2 <= (tmp_fu_417_p3 or ap_const_lv34_6);
    or_ln43_fu_1282_p2 <= (x_0_reg_374 or ap_const_lv32_6);
    or_ln44_1_fu_520_p2 <= (tmp_fu_417_p3 or ap_const_lv34_7);
    or_ln44_fu_1305_p2 <= (x_0_reg_374 or ap_const_lv32_7);
    p_lshr_fu_560_p4 <= sub_ln35_fu_555_p2(31 downto 3);
    select_ln35_1_fu_594_p3 <= 
        ap_const_lv29_0 when (tmp_8_fu_535_p3(0) = '1') else 
        select_ln35_fu_586_p3;
    select_ln35_fu_586_p3 <= 
        sub_ln35_1_fu_570_p2 when (tmp_9_fu_547_p3(0) = '1') else 
        tmp_10_fu_576_p4;
    select_ln37_fu_690_p3 <= 
        ap_const_lv27_7FFFFFF when (temp_1_fu_684_p2(0) = '1') else 
        ap_const_lv27_0;
    select_ln38_fu_803_p3 <= 
        ap_const_lv27_7FFFFFF when (temp_4_fu_797_p2(0) = '1') else 
        ap_const_lv27_0;
    select_ln39_fu_915_p3 <= 
        ap_const_lv27_7FFFFFF when (temp_7_fu_909_p2(0) = '1') else 
        ap_const_lv27_0;
    select_ln40_fu_1027_p3 <= 
        ap_const_lv27_7FFFFFF when (temp_10_fu_1021_p2(0) = '1') else 
        ap_const_lv27_0;
    select_ln41_fu_1139_p3 <= 
        ap_const_lv27_7FFFFFF when (temp_13_fu_1133_p2(0) = '1') else 
        ap_const_lv27_0;
    select_ln42_fu_1251_p3 <= 
        ap_const_lv27_7FFFFFF when (temp_16_fu_1245_p2(0) = '1') else 
        ap_const_lv27_0;
    select_ln43_fu_1398_p3 <= 
        ap_const_lv27_7FFFFFF when (temp_19_fu_1392_p2(0) = '1') else 
        ap_const_lv27_0;
    select_ln44_fu_1487_p3 <= 
        ap_const_lv27_7FFFFFF when (temp_22_fu_1481_p2(0) = '1') else 
        ap_const_lv27_0;
        sext_ln37_1_fu_717_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln37_2_fu_711_p2),64));

        sext_ln37_2_fu_641_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln_fu_631_p4),32));

        sext_ln37_4_fu_706_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(temp_2_fu_698_p3),32));

        sext_ln37_fu_621_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln37_fu_615_p2),64));

        sext_ln38_1_fu_829_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln38_2_fu_824_p2),64));

        sext_ln38_2_fu_754_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln1_fu_744_p4),32));

        sext_ln38_4_fu_819_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(temp_5_fu_811_p3),32));

        sext_ln38_fu_734_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln38_fu_728_p2),64));

        sext_ln39_1_fu_941_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln39_2_fu_936_p2),64));

        sext_ln39_2_fu_866_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln2_fu_856_p4),32));

        sext_ln39_4_fu_931_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(temp_8_fu_923_p3),32));

        sext_ln39_fu_846_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln39_fu_840_p2),64));

        sext_ln40_1_fu_1053_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln40_2_fu_1048_p2),64));

        sext_ln40_2_fu_978_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln3_fu_968_p4),32));

        sext_ln40_4_fu_1043_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(temp_11_fu_1035_p3),32));

        sext_ln40_fu_958_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln40_fu_952_p2),64));

        sext_ln41_1_fu_1165_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln41_2_fu_1160_p2),64));

        sext_ln41_2_fu_1090_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln4_fu_1080_p4),32));

        sext_ln41_4_fu_1155_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(temp_14_fu_1147_p3),32));

        sext_ln41_fu_1070_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln41_fu_1064_p2),64));

        sext_ln42_1_fu_1277_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln42_2_fu_1272_p2),64));

        sext_ln42_2_fu_1202_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln5_fu_1192_p4),32));

        sext_ln42_4_fu_1267_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(temp_17_fu_1259_p3),32));

        sext_ln42_fu_1182_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln42_fu_1176_p2),64));

        sext_ln43_1_fu_1419_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln43_2_reg_1683),64));

        sext_ln43_2_fu_1349_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln6_fu_1339_p4),32));

        sext_ln43_4_fu_1414_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(temp_20_fu_1406_p3),32));

        sext_ln43_fu_1294_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln43_fu_1288_p2),64));

        sext_ln44_1_fu_1507_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln44_2_reg_1693),64));

        sext_ln44_2_fu_1438_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln7_fu_1428_p4),32));

        sext_ln44_4_fu_1503_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(temp_23_reg_1703),32));

        sext_ln44_fu_1317_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln44_fu_1311_p2),64));

    shl_ln37_fu_626_p2 <= std_logic_vector(shift_left(unsigned(src_q0),to_integer(unsigned('0' & log2_scale(31-1 downto 0)))));
    shl_ln38_fu_739_p2 <= std_logic_vector(shift_left(unsigned(src_q0),to_integer(unsigned('0' & log2_scale(31-1 downto 0)))));
    shl_ln39_fu_851_p2 <= std_logic_vector(shift_left(unsigned(src_q0),to_integer(unsigned('0' & log2_scale(31-1 downto 0)))));
    shl_ln40_fu_963_p2 <= std_logic_vector(shift_left(unsigned(src_q0),to_integer(unsigned('0' & log2_scale(31-1 downto 0)))));
    shl_ln41_fu_1075_p2 <= std_logic_vector(shift_left(unsigned(src_q0),to_integer(unsigned('0' & log2_scale(31-1 downto 0)))));
    shl_ln42_fu_1187_p2 <= std_logic_vector(shift_left(unsigned(src_q0),to_integer(unsigned('0' & log2_scale(31-1 downto 0)))));
    shl_ln43_fu_1334_p2 <= std_logic_vector(shift_left(unsigned(src_q0),to_integer(unsigned('0' & log2_scale(31-1 downto 0)))));
    shl_ln44_fu_1423_p2 <= std_logic_vector(shift_left(unsigned(src_q1),to_integer(unsigned('0' & log2_scale(31-1 downto 0)))));

    src_address0_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, sext_ln37_fu_621_p1, sext_ln38_fu_734_p1, sext_ln39_fu_846_p1, sext_ln40_fu_958_p1, sext_ln41_fu_1070_p1, sext_ln42_fu_1182_p1, sext_ln43_fu_1294_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            src_address0 <= sext_ln43_fu_1294_p1(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            src_address0 <= sext_ln42_fu_1182_p1(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            src_address0 <= sext_ln41_fu_1070_p1(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            src_address0 <= sext_ln40_fu_958_p1(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            src_address0 <= sext_ln39_fu_846_p1(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            src_address0 <= sext_ln38_fu_734_p1(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            src_address0 <= sext_ln37_fu_621_p1(3 - 1 downto 0);
        else 
            src_address0 <= "XXX";
        end if; 
    end process;

    src_address1 <= sext_ln44_fu_1317_p1(3 - 1 downto 0);

    src_ce0_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            src_ce0 <= ap_const_logic_1;
        else 
            src_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    src_ce1_assign_proc : process(ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            src_ce1 <= ap_const_logic_1;
        else 
            src_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    sub_ln35_1_fu_570_p2 <= std_logic_vector(unsigned(ap_const_lv29_0) - unsigned(p_lshr_fu_560_p4));
    sub_ln35_fu_555_p2 <= std_logic_vector(signed(ap_const_lv32_FFFFFFF9) - signed(width));
    temp_10_fu_1021_p2 <= (tmp_15_fu_1013_p3 xor ap_const_lv1_1);
    temp_11_fu_1035_p3 <= 
        trunc_ln40_1_fu_988_p4 when (icmp_ln40_fu_1007_p2(0) = '1') else 
        select_ln40_fu_1027_p3;
        temp_12_fu_1110_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln41_1_fu_1100_p4),32));

    temp_13_fu_1133_p2 <= (tmp_16_fu_1125_p3 xor ap_const_lv1_1);
    temp_14_fu_1147_p3 <= 
        trunc_ln41_1_fu_1100_p4 when (icmp_ln41_fu_1119_p2(0) = '1') else 
        select_ln41_fu_1139_p3;
        temp_15_fu_1222_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln42_1_fu_1212_p4),32));

    temp_16_fu_1245_p2 <= (tmp_17_fu_1237_p3 xor ap_const_lv1_1);
    temp_17_fu_1259_p3 <= 
        trunc_ln42_1_fu_1212_p4 when (icmp_ln42_fu_1231_p2(0) = '1') else 
        select_ln42_fu_1251_p3;
        temp_18_fu_1369_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln43_1_fu_1359_p4),32));

    temp_19_fu_1392_p2 <= (tmp_18_fu_1384_p3 xor ap_const_lv1_1);
    temp_1_fu_684_p2 <= (tmp_12_fu_676_p3 xor ap_const_lv1_1);
    temp_20_fu_1406_p3 <= 
        trunc_ln43_1_fu_1359_p4 when (icmp_ln43_fu_1378_p2(0) = '1') else 
        select_ln43_fu_1398_p3;
        temp_21_fu_1458_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln44_1_fu_1448_p4),32));

    temp_22_fu_1481_p2 <= (tmp_19_fu_1473_p3 xor ap_const_lv1_1);
    temp_23_fu_1495_p3 <= 
        trunc_ln44_1_fu_1448_p4 when (icmp_ln44_fu_1467_p2(0) = '1') else 
        select_ln44_fu_1487_p3;
    temp_2_fu_698_p3 <= 
        trunc_ln37_1_fu_651_p4 when (icmp_ln37_fu_670_p2(0) = '1') else 
        select_ln37_fu_690_p3;
        temp_3_fu_774_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln38_1_fu_764_p4),32));

    temp_4_fu_797_p2 <= (tmp_13_fu_789_p3 xor ap_const_lv1_1);
    temp_5_fu_811_p3 <= 
        trunc_ln38_1_fu_764_p4 when (icmp_ln38_fu_783_p2(0) = '1') else 
        select_ln38_fu_803_p3;
        temp_6_fu_886_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln39_1_fu_876_p4),32));

    temp_7_fu_909_p2 <= (tmp_14_fu_901_p3 xor ap_const_lv1_1);
    temp_8_fu_923_p3 <= 
        trunc_ln39_1_fu_876_p4 when (icmp_ln39_fu_895_p2(0) = '1') else 
        select_ln39_fu_915_p3;
        temp_9_fu_998_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln40_1_fu_988_p4),32));

        temp_fu_661_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln37_1_fu_651_p4),32));

    tmp_10_fu_576_p4 <= add_ln35_fu_542_p2(31 downto 3);
    tmp_11_fu_602_p3 <= (select_ln35_1_fu_594_p3 & ap_const_lv3_0);
    tmp_12_fu_676_p3 <= add_ln37_1_fu_645_p2(31 downto 31);
    tmp_13_fu_789_p3 <= add_ln38_1_fu_758_p2(31 downto 31);
    tmp_14_fu_901_p3 <= add_ln39_1_fu_870_p2(31 downto 31);
    tmp_15_fu_1013_p3 <= add_ln40_1_fu_982_p2(31 downto 31);
    tmp_16_fu_1125_p3 <= add_ln41_1_fu_1094_p2(31 downto 31);
    tmp_17_fu_1237_p3 <= add_ln42_1_fu_1206_p2(31 downto 31);
    tmp_18_fu_1384_p3 <= add_ln43_1_fu_1353_p2(31 downto 31);
    tmp_19_fu_1473_p3 <= add_ln44_1_fu_1442_p2(31 downto 31);
    tmp_1_fu_436_p3 <= (ap_const_lv30_0 & or_ln38_1_fu_430_p2);
    tmp_2_fu_451_p3 <= (ap_const_lv30_0 & or_ln39_1_fu_445_p2);
    tmp_3_fu_466_p3 <= (ap_const_lv30_0 & or_ln40_1_fu_460_p2);
    tmp_4_fu_481_p3 <= (ap_const_lv30_0 & or_ln41_1_fu_475_p2);
    tmp_5_fu_496_p3 <= (ap_const_lv30_0 & or_ln42_1_fu_490_p2);
    tmp_6_fu_511_p3 <= (ap_const_lv30_0 & or_ln43_1_fu_505_p2);
    tmp_7_fu_526_p3 <= (ap_const_lv30_0 & or_ln44_1_fu_520_p2);
    tmp_8_fu_535_p3 <= width(31 downto 31);
    tmp_9_fu_547_p3 <= add_ln35_fu_542_p2(31 downto 31);
    tmp_fu_417_p3 <= (y_0_reg_339 & ap_const_lv3_0);
    trunc_ln1_fu_744_p4 <= dither_q0(31 downto 1);
    trunc_ln2_fu_856_p4 <= dither_q0(31 downto 1);
    trunc_ln37_1_fu_651_p4 <= add_ln37_1_fu_645_p2(31 downto 5);
    trunc_ln38_1_fu_764_p4 <= add_ln38_1_fu_758_p2(31 downto 5);
    trunc_ln39_1_fu_876_p4 <= add_ln39_1_fu_870_p2(31 downto 5);
    trunc_ln3_fu_968_p4 <= dither_q0(31 downto 1);
    trunc_ln40_1_fu_988_p4 <= add_ln40_1_fu_982_p2(31 downto 5);
    trunc_ln41_1_fu_1100_p4 <= add_ln41_1_fu_1094_p2(31 downto 5);
    trunc_ln42_1_fu_1212_p4 <= add_ln42_1_fu_1206_p2(31 downto 5);
    trunc_ln43_1_fu_1359_p4 <= add_ln43_1_fu_1353_p2(31 downto 5);
    trunc_ln44_1_fu_1448_p4 <= add_ln44_1_fu_1442_p2(31 downto 5);
    trunc_ln4_fu_1080_p4 <= dither_q0(31 downto 1);
    trunc_ln5_fu_1192_p4 <= dither_q0(31 downto 1);
    trunc_ln6_fu_1339_p4 <= dither_q0(31 downto 1);
    trunc_ln7_fu_1428_p4 <= dither_q1(31 downto 1);
    trunc_ln_fu_631_p4 <= dither_q0(31 downto 1);
    x_fu_1328_p2 <= std_logic_vector(unsigned(ap_const_lv32_8) + unsigned(x_0_reg_374));
    y_fu_411_p2 <= std_logic_vector(unsigned(y_0_reg_339) + unsigned(ap_const_lv31_1));
    zext_ln33_fu_402_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(y_0_reg_339),32));
    zext_ln34_fu_425_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_fu_417_p3),64));
end behav;
