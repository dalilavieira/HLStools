// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="store_slice16_c,hls_ip_2019_1,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7k160t-fbg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.619444,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=594,HLS_SYN_LUT=3465,HLS_VERSION=2019_1}" *)

module store_slice16_c (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        dst_address0,
        dst_ce0,
        dst_we0,
        dst_d0,
        src_address0,
        src_ce0,
        src_q0,
        src_address1,
        src_ce1,
        src_q1,
        dst_linesize,
        src_linesize,
        width,
        height,
        log2_scale,
        dither_address0,
        dither_ce0,
        dither_q0,
        dither_address1,
        dither_ce1,
        dither_q1,
        depth
);

parameter    ap_ST_fsm_state1 = 11'd1;
parameter    ap_ST_fsm_state2 = 11'd2;
parameter    ap_ST_fsm_state3 = 11'd4;
parameter    ap_ST_fsm_state4 = 11'd8;
parameter    ap_ST_fsm_state5 = 11'd16;
parameter    ap_ST_fsm_state6 = 11'd32;
parameter    ap_ST_fsm_state7 = 11'd64;
parameter    ap_ST_fsm_state8 = 11'd128;
parameter    ap_ST_fsm_state9 = 11'd256;
parameter    ap_ST_fsm_state10 = 11'd512;
parameter    ap_ST_fsm_state11 = 11'd1024;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [2:0] dst_address0;
output   dst_ce0;
output   dst_we0;
output  [31:0] dst_d0;
output  [2:0] src_address0;
output   src_ce0;
input  [31:0] src_q0;
output  [2:0] src_address1;
output   src_ce1;
input  [31:0] src_q1;
input  [31:0] dst_linesize;
input  [31:0] src_linesize;
input  [31:0] width;
input  [31:0] height;
input  [31:0] log2_scale;
output  [5:0] dither_address0;
output   dither_ce0;
input  [31:0] dither_q0;
output  [5:0] dither_address1;
output   dither_ce1;
input  [31:0] dither_q1;
input  [31:0] depth;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[2:0] dst_address0;
reg dst_ce0;
reg dst_we0;
reg[31:0] dst_d0;
reg[2:0] src_address0;
reg src_ce0;
reg src_ce1;
reg[5:0] dither_address0;
reg dither_ce0;
reg dither_ce1;

(* fsm_encoding = "none" *) reg   [10:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [31:0] mask_fu_386_p2;
reg   [31:0] mask_reg_1545;
wire   [31:0] add_ln33_fu_392_p2;
reg   [31:0] add_ln33_reg_1557;
wire    ap_CS_fsm_state2;
wire   [31:0] add_ln33_1_fu_397_p2;
reg   [31:0] add_ln33_1_reg_1562;
wire   [30:0] y_fu_411_p2;
reg   [30:0] y_reg_1570;
reg   [5:0] d_reg_1575;
wire   [0:0] icmp_ln33_fu_406_p2;
reg   [5:0] dither_addr_reg_1580;
reg   [5:0] dither_addr_1_reg_1585;
reg   [5:0] dither_addr_2_reg_1590;
reg   [5:0] dither_addr_3_reg_1595;
reg   [5:0] dither_addr_4_reg_1600;
reg   [5:0] dither_addr_5_reg_1605;
reg   [5:0] dither_addr_6_reg_1610;
wire   [31:0] tmp_11_fu_602_p3;
reg   [31:0] tmp_11_reg_1615;
wire    ap_CS_fsm_state3;
wire   [0:0] icmp_ln35_fu_610_p2;
wire   [31:0] or_ln38_fu_722_p2;
reg   [31:0] or_ln38_reg_1628;
wire    ap_CS_fsm_state4;
wire   [31:0] or_ln39_fu_834_p2;
reg   [31:0] or_ln39_reg_1638;
wire    ap_CS_fsm_state5;
wire   [31:0] or_ln40_fu_946_p2;
reg   [31:0] or_ln40_reg_1648;
wire    ap_CS_fsm_state6;
wire   [31:0] or_ln41_fu_1058_p2;
reg   [31:0] or_ln41_reg_1658;
wire    ap_CS_fsm_state7;
wire   [31:0] or_ln42_fu_1170_p2;
reg   [31:0] or_ln42_reg_1668;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state9;
wire   [31:0] add_ln43_2_fu_1299_p2;
reg   [31:0] add_ln43_2_reg_1683;
wire   [31:0] add_ln44_2_fu_1322_p2;
reg   [31:0] add_ln44_2_reg_1693;
wire   [31:0] x_fu_1328_p2;
reg   [31:0] x_reg_1698;
wire   [26:0] temp_23_fu_1495_p3;
reg   [26:0] temp_23_reg_1703;
wire    ap_CS_fsm_state10;
reg   [30:0] y_0_reg_339;
reg   [31:0] phi_mul_reg_350;
reg   [31:0] phi_mul1_reg_362;
reg   [31:0] x_0_reg_374;
wire    ap_CS_fsm_state11;
wire   [63:0] zext_ln34_fu_425_p1;
wire   [63:0] tmp_1_fu_436_p3;
wire   [63:0] tmp_2_fu_451_p3;
wire   [63:0] tmp_3_fu_466_p3;
wire   [63:0] tmp_4_fu_481_p3;
wire   [63:0] tmp_5_fu_496_p3;
wire   [63:0] tmp_6_fu_511_p3;
wire   [63:0] tmp_7_fu_526_p3;
wire  signed [63:0] sext_ln37_fu_621_p1;
wire  signed [63:0] sext_ln37_1_fu_717_p1;
wire  signed [63:0] sext_ln38_fu_734_p1;
wire  signed [63:0] sext_ln38_1_fu_829_p1;
wire  signed [63:0] sext_ln39_fu_846_p1;
wire  signed [63:0] sext_ln39_1_fu_941_p1;
wire  signed [63:0] sext_ln40_fu_958_p1;
wire  signed [63:0] sext_ln40_1_fu_1053_p1;
wire  signed [63:0] sext_ln41_fu_1070_p1;
wire  signed [63:0] sext_ln41_1_fu_1165_p1;
wire  signed [63:0] sext_ln42_fu_1182_p1;
wire  signed [63:0] sext_ln42_1_fu_1277_p1;
wire  signed [63:0] sext_ln43_fu_1294_p1;
wire  signed [63:0] sext_ln44_fu_1317_p1;
wire  signed [63:0] sext_ln43_1_fu_1419_p1;
wire  signed [63:0] sext_ln44_1_fu_1507_p1;
wire  signed [31:0] sext_ln37_4_fu_706_p1;
wire  signed [31:0] sext_ln38_4_fu_819_p1;
wire  signed [31:0] sext_ln39_4_fu_931_p1;
wire  signed [31:0] sext_ln40_4_fu_1043_p1;
wire  signed [31:0] sext_ln41_4_fu_1155_p1;
wire  signed [31:0] sext_ln42_4_fu_1267_p1;
wire  signed [31:0] sext_ln43_4_fu_1414_p1;
wire  signed [31:0] sext_ln44_4_fu_1503_p1;
wire   [31:0] zext_ln33_fu_402_p1;
wire   [33:0] tmp_fu_417_p3;
wire   [33:0] or_ln38_1_fu_430_p2;
wire   [33:0] or_ln39_1_fu_445_p2;
wire   [33:0] or_ln40_1_fu_460_p2;
wire   [33:0] or_ln41_1_fu_475_p2;
wire   [33:0] or_ln42_1_fu_490_p2;
wire   [33:0] or_ln43_1_fu_505_p2;
wire   [33:0] or_ln44_1_fu_520_p2;
wire   [31:0] add_ln35_fu_542_p2;
wire   [31:0] sub_ln35_fu_555_p2;
wire   [28:0] p_lshr_fu_560_p4;
wire   [0:0] tmp_9_fu_547_p3;
wire   [28:0] sub_ln35_1_fu_570_p2;
wire   [28:0] tmp_10_fu_576_p4;
wire   [0:0] tmp_8_fu_535_p3;
wire   [28:0] select_ln35_fu_586_p3;
wire   [28:0] select_ln35_1_fu_594_p3;
wire   [31:0] add_ln37_fu_615_p2;
wire   [30:0] trunc_ln_fu_631_p4;
wire   [31:0] shl_ln37_fu_626_p2;
wire  signed [31:0] sext_ln37_2_fu_641_p1;
wire   [31:0] add_ln37_1_fu_645_p2;
wire  signed [26:0] trunc_ln37_1_fu_651_p4;
wire  signed [31:0] temp_fu_661_p1;
wire   [31:0] and_ln37_fu_665_p2;
wire   [0:0] tmp_12_fu_676_p3;
wire   [0:0] temp_1_fu_684_p2;
wire   [0:0] icmp_ln37_fu_670_p2;
wire   [26:0] select_ln37_fu_690_p3;
wire   [26:0] temp_2_fu_698_p3;
wire   [31:0] add_ln37_2_fu_711_p2;
wire   [31:0] add_ln38_fu_728_p2;
wire   [30:0] trunc_ln1_fu_744_p4;
wire   [31:0] shl_ln38_fu_739_p2;
wire  signed [31:0] sext_ln38_2_fu_754_p1;
wire   [31:0] add_ln38_1_fu_758_p2;
wire  signed [26:0] trunc_ln38_1_fu_764_p4;
wire  signed [31:0] temp_3_fu_774_p1;
wire   [31:0] and_ln38_fu_778_p2;
wire   [0:0] tmp_13_fu_789_p3;
wire   [0:0] temp_4_fu_797_p2;
wire   [0:0] icmp_ln38_fu_783_p2;
wire   [26:0] select_ln38_fu_803_p3;
wire   [26:0] temp_5_fu_811_p3;
wire   [31:0] add_ln38_2_fu_824_p2;
wire   [31:0] add_ln39_fu_840_p2;
wire   [30:0] trunc_ln2_fu_856_p4;
wire   [31:0] shl_ln39_fu_851_p2;
wire  signed [31:0] sext_ln39_2_fu_866_p1;
wire   [31:0] add_ln39_1_fu_870_p2;
wire  signed [26:0] trunc_ln39_1_fu_876_p4;
wire  signed [31:0] temp_6_fu_886_p1;
wire   [31:0] and_ln39_fu_890_p2;
wire   [0:0] tmp_14_fu_901_p3;
wire   [0:0] temp_7_fu_909_p2;
wire   [0:0] icmp_ln39_fu_895_p2;
wire   [26:0] select_ln39_fu_915_p3;
wire   [26:0] temp_8_fu_923_p3;
wire   [31:0] add_ln39_2_fu_936_p2;
wire   [31:0] add_ln40_fu_952_p2;
wire   [30:0] trunc_ln3_fu_968_p4;
wire   [31:0] shl_ln40_fu_963_p2;
wire  signed [31:0] sext_ln40_2_fu_978_p1;
wire   [31:0] add_ln40_1_fu_982_p2;
wire  signed [26:0] trunc_ln40_1_fu_988_p4;
wire  signed [31:0] temp_9_fu_998_p1;
wire   [31:0] and_ln40_fu_1002_p2;
wire   [0:0] tmp_15_fu_1013_p3;
wire   [0:0] temp_10_fu_1021_p2;
wire   [0:0] icmp_ln40_fu_1007_p2;
wire   [26:0] select_ln40_fu_1027_p3;
wire   [26:0] temp_11_fu_1035_p3;
wire   [31:0] add_ln40_2_fu_1048_p2;
wire   [31:0] add_ln41_fu_1064_p2;
wire   [30:0] trunc_ln4_fu_1080_p4;
wire   [31:0] shl_ln41_fu_1075_p2;
wire  signed [31:0] sext_ln41_2_fu_1090_p1;
wire   [31:0] add_ln41_1_fu_1094_p2;
wire  signed [26:0] trunc_ln41_1_fu_1100_p4;
wire  signed [31:0] temp_12_fu_1110_p1;
wire   [31:0] and_ln41_fu_1114_p2;
wire   [0:0] tmp_16_fu_1125_p3;
wire   [0:0] temp_13_fu_1133_p2;
wire   [0:0] icmp_ln41_fu_1119_p2;
wire   [26:0] select_ln41_fu_1139_p3;
wire   [26:0] temp_14_fu_1147_p3;
wire   [31:0] add_ln41_2_fu_1160_p2;
wire   [31:0] add_ln42_fu_1176_p2;
wire   [30:0] trunc_ln5_fu_1192_p4;
wire   [31:0] shl_ln42_fu_1187_p2;
wire  signed [31:0] sext_ln42_2_fu_1202_p1;
wire   [31:0] add_ln42_1_fu_1206_p2;
wire  signed [26:0] trunc_ln42_1_fu_1212_p4;
wire  signed [31:0] temp_15_fu_1222_p1;
wire   [31:0] and_ln42_fu_1226_p2;
wire   [0:0] tmp_17_fu_1237_p3;
wire   [0:0] temp_16_fu_1245_p2;
wire   [0:0] icmp_ln42_fu_1231_p2;
wire   [26:0] select_ln42_fu_1251_p3;
wire   [26:0] temp_17_fu_1259_p3;
wire   [31:0] add_ln42_2_fu_1272_p2;
wire   [31:0] or_ln43_fu_1282_p2;
wire   [31:0] add_ln43_fu_1288_p2;
wire   [31:0] or_ln44_fu_1305_p2;
wire   [31:0] add_ln44_fu_1311_p2;
wire   [30:0] trunc_ln6_fu_1339_p4;
wire   [31:0] shl_ln43_fu_1334_p2;
wire  signed [31:0] sext_ln43_2_fu_1349_p1;
wire   [31:0] add_ln43_1_fu_1353_p2;
wire  signed [26:0] trunc_ln43_1_fu_1359_p4;
wire  signed [31:0] temp_18_fu_1369_p1;
wire   [31:0] and_ln43_fu_1373_p2;
wire   [0:0] tmp_18_fu_1384_p3;
wire   [0:0] temp_19_fu_1392_p2;
wire   [0:0] icmp_ln43_fu_1378_p2;
wire   [26:0] select_ln43_fu_1398_p3;
wire   [26:0] temp_20_fu_1406_p3;
wire   [30:0] trunc_ln7_fu_1428_p4;
wire   [31:0] shl_ln44_fu_1423_p2;
wire  signed [31:0] sext_ln44_2_fu_1438_p1;
wire   [31:0] add_ln44_1_fu_1442_p2;
wire  signed [26:0] trunc_ln44_1_fu_1448_p4;
wire  signed [31:0] temp_21_fu_1458_p1;
wire   [31:0] and_ln44_fu_1462_p2;
wire   [0:0] tmp_19_fu_1473_p3;
wire   [0:0] temp_22_fu_1481_p2;
wire   [0:0] icmp_ln44_fu_1467_p2;
wire   [26:0] select_ln44_fu_1487_p3;
reg   [10:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 11'd1;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln35_fu_610_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        phi_mul1_reg_362 <= add_ln33_reg_1557;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        phi_mul1_reg_362 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln35_fu_610_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        phi_mul_reg_350 <= add_ln33_1_reg_1562;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        phi_mul_reg_350 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        x_0_reg_374 <= x_reg_1698;
    end else if (((icmp_ln33_fu_406_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        x_0_reg_374 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln35_fu_610_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        y_0_reg_339 <= y_reg_1570;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        y_0_reg_339 <= 31'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        add_ln33_1_reg_1562 <= add_ln33_1_fu_397_p2;
        add_ln33_reg_1557 <= add_ln33_fu_392_p2;
        y_reg_1570 <= y_fu_411_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        add_ln43_2_reg_1683 <= add_ln43_2_fu_1299_p2;
        add_ln44_2_reg_1693 <= add_ln44_2_fu_1322_p2;
        x_reg_1698 <= x_fu_1328_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln33_fu_406_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        d_reg_1575[5 : 3] <= zext_ln34_fu_425_p1[5 : 3];
        dither_addr_1_reg_1585[5 : 3] <= tmp_2_fu_451_p3[5 : 3];
        dither_addr_2_reg_1590[5 : 3] <= tmp_3_fu_466_p3[5 : 3];
        dither_addr_3_reg_1595[5 : 3] <= tmp_4_fu_481_p3[5 : 3];
        dither_addr_4_reg_1600[5 : 3] <= tmp_5_fu_496_p3[5 : 3];
        dither_addr_5_reg_1605[5 : 3] <= tmp_6_fu_511_p3[5 : 3];
        dither_addr_6_reg_1610[5 : 3] <= tmp_7_fu_526_p3[5 : 3];
        dither_addr_reg_1580[5 : 3] <= tmp_1_fu_436_p3[5 : 3];
        tmp_11_reg_1615[31 : 3] <= tmp_11_fu_602_p3[31 : 3];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        mask_reg_1545 <= mask_fu_386_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        or_ln38_reg_1628[31 : 1] <= or_ln38_fu_722_p2[31 : 1];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        or_ln39_reg_1638[0] <= or_ln39_fu_834_p2[0];
or_ln39_reg_1638[31 : 2] <= or_ln39_fu_834_p2[31 : 2];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        or_ln40_reg_1648[31 : 2] <= or_ln40_fu_946_p2[31 : 2];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        or_ln41_reg_1658[1 : 0] <= or_ln41_fu_1058_p2[1 : 0];
or_ln41_reg_1658[31 : 3] <= or_ln41_fu_1058_p2[31 : 3];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        or_ln42_reg_1668[1] <= or_ln42_fu_1170_p2[1];
or_ln42_reg_1668[31 : 3] <= or_ln42_fu_1170_p2[31 : 3];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        temp_23_reg_1703 <= temp_23_fu_1495_p3;
    end
end

always @ (*) begin
    if (((icmp_ln33_fu_406_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln33_fu_406_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        dither_address0 = dither_addr_5_reg_1605;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        dither_address0 = dither_addr_4_reg_1600;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        dither_address0 = dither_addr_3_reg_1595;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        dither_address0 = dither_addr_2_reg_1590;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        dither_address0 = dither_addr_1_reg_1585;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        dither_address0 = dither_addr_reg_1580;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        dither_address0 = d_reg_1575;
    end else begin
        dither_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        dither_ce0 = 1'b1;
    end else begin
        dither_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        dither_ce1 = 1'b1;
    end else begin
        dither_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        dst_address0 = sext_ln44_1_fu_1507_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        dst_address0 = sext_ln43_1_fu_1419_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        dst_address0 = sext_ln42_1_fu_1277_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        dst_address0 = sext_ln41_1_fu_1165_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        dst_address0 = sext_ln40_1_fu_1053_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        dst_address0 = sext_ln39_1_fu_941_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        dst_address0 = sext_ln38_1_fu_829_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        dst_address0 = sext_ln37_1_fu_717_p1;
    end else begin
        dst_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4))) begin
        dst_ce0 = 1'b1;
    end else begin
        dst_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        dst_d0 = sext_ln44_4_fu_1503_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        dst_d0 = sext_ln43_4_fu_1414_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        dst_d0 = sext_ln42_4_fu_1267_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        dst_d0 = sext_ln41_4_fu_1155_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        dst_d0 = sext_ln40_4_fu_1043_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        dst_d0 = sext_ln39_4_fu_931_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        dst_d0 = sext_ln38_4_fu_819_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        dst_d0 = sext_ln37_4_fu_706_p1;
    end else begin
        dst_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4))) begin
        dst_we0 = 1'b1;
    end else begin
        dst_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        src_address0 = sext_ln43_fu_1294_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        src_address0 = sext_ln42_fu_1182_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        src_address0 = sext_ln41_fu_1070_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        src_address0 = sext_ln40_fu_958_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        src_address0 = sext_ln39_fu_846_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        src_address0 = sext_ln38_fu_734_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        src_address0 = sext_ln37_fu_621_p1;
    end else begin
        src_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        src_ce0 = 1'b1;
    end else begin
        src_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        src_ce1 = 1'b1;
    end else begin
        src_ce1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln33_fu_406_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((icmp_ln35_fu_610_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln33_1_fu_397_p2 = (phi_mul_reg_350 + src_linesize);

assign add_ln33_fu_392_p2 = (phi_mul1_reg_362 + dst_linesize);

assign add_ln35_fu_542_p2 = (width + 32'd7);

assign add_ln37_1_fu_645_p2 = ($signed(shl_ln37_fu_626_p2) + $signed(sext_ln37_2_fu_641_p1));

assign add_ln37_2_fu_711_p2 = (phi_mul1_reg_362 + x_0_reg_374);

assign add_ln37_fu_615_p2 = (phi_mul_reg_350 + x_0_reg_374);

assign add_ln38_1_fu_758_p2 = ($signed(shl_ln38_fu_739_p2) + $signed(sext_ln38_2_fu_754_p1));

assign add_ln38_2_fu_824_p2 = (or_ln38_reg_1628 + phi_mul1_reg_362);

assign add_ln38_fu_728_p2 = (or_ln38_fu_722_p2 + phi_mul_reg_350);

assign add_ln39_1_fu_870_p2 = ($signed(shl_ln39_fu_851_p2) + $signed(sext_ln39_2_fu_866_p1));

assign add_ln39_2_fu_936_p2 = (or_ln39_reg_1638 + phi_mul1_reg_362);

assign add_ln39_fu_840_p2 = (or_ln39_fu_834_p2 + phi_mul_reg_350);

assign add_ln40_1_fu_982_p2 = ($signed(shl_ln40_fu_963_p2) + $signed(sext_ln40_2_fu_978_p1));

assign add_ln40_2_fu_1048_p2 = (or_ln40_reg_1648 + phi_mul1_reg_362);

assign add_ln40_fu_952_p2 = (or_ln40_fu_946_p2 + phi_mul_reg_350);

assign add_ln41_1_fu_1094_p2 = ($signed(shl_ln41_fu_1075_p2) + $signed(sext_ln41_2_fu_1090_p1));

assign add_ln41_2_fu_1160_p2 = (or_ln41_reg_1658 + phi_mul1_reg_362);

assign add_ln41_fu_1064_p2 = (or_ln41_fu_1058_p2 + phi_mul_reg_350);

assign add_ln42_1_fu_1206_p2 = ($signed(shl_ln42_fu_1187_p2) + $signed(sext_ln42_2_fu_1202_p1));

assign add_ln42_2_fu_1272_p2 = (or_ln42_reg_1668 + phi_mul1_reg_362);

assign add_ln42_fu_1176_p2 = (or_ln42_fu_1170_p2 + phi_mul_reg_350);

assign add_ln43_1_fu_1353_p2 = ($signed(shl_ln43_fu_1334_p2) + $signed(sext_ln43_2_fu_1349_p1));

assign add_ln43_2_fu_1299_p2 = (or_ln43_fu_1282_p2 + phi_mul1_reg_362);

assign add_ln43_fu_1288_p2 = (or_ln43_fu_1282_p2 + phi_mul_reg_350);

assign add_ln44_1_fu_1442_p2 = ($signed(shl_ln44_fu_1423_p2) + $signed(sext_ln44_2_fu_1438_p1));

assign add_ln44_2_fu_1322_p2 = (or_ln44_fu_1305_p2 + phi_mul1_reg_362);

assign add_ln44_fu_1311_p2 = (or_ln44_fu_1305_p2 + phi_mul_reg_350);

assign and_ln37_fu_665_p2 = (temp_fu_661_p1 & mask_reg_1545);

assign and_ln38_fu_778_p2 = (temp_3_fu_774_p1 & mask_reg_1545);

assign and_ln39_fu_890_p2 = (temp_6_fu_886_p1 & mask_reg_1545);

assign and_ln40_fu_1002_p2 = (temp_9_fu_998_p1 & mask_reg_1545);

assign and_ln41_fu_1114_p2 = (temp_12_fu_1110_p1 & mask_reg_1545);

assign and_ln42_fu_1226_p2 = (temp_15_fu_1222_p1 & mask_reg_1545);

assign and_ln43_fu_1373_p2 = (temp_18_fu_1369_p1 & mask_reg_1545);

assign and_ln44_fu_1462_p2 = (temp_21_fu_1458_p1 & mask_reg_1545);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign dither_address1 = dither_addr_6_reg_1610;

assign icmp_ln33_fu_406_p2 = (($signed(zext_ln33_fu_402_p1) < $signed(height)) ? 1'b1 : 1'b0);

assign icmp_ln35_fu_610_p2 = ((x_0_reg_374 == tmp_11_reg_1615) ? 1'b1 : 1'b0);

assign icmp_ln37_fu_670_p2 = ((and_ln37_fu_665_p2 == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln38_fu_783_p2 = ((and_ln38_fu_778_p2 == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln39_fu_895_p2 = ((and_ln39_fu_890_p2 == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln40_fu_1007_p2 = ((and_ln40_fu_1002_p2 == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln41_fu_1119_p2 = ((and_ln41_fu_1114_p2 == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln42_fu_1231_p2 = ((and_ln42_fu_1226_p2 == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln43_fu_1378_p2 = ((and_ln43_fu_1373_p2 == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln44_fu_1467_p2 = ((and_ln44_fu_1462_p2 == 32'd0) ? 1'b1 : 1'b0);

assign mask_fu_386_p2 = 32'd4294967295 << depth;

assign or_ln38_1_fu_430_p2 = (tmp_fu_417_p3 | 34'd1);

assign or_ln38_fu_722_p2 = (x_0_reg_374 | 32'd1);

assign or_ln39_1_fu_445_p2 = (tmp_fu_417_p3 | 34'd2);

assign or_ln39_fu_834_p2 = (x_0_reg_374 | 32'd2);

assign or_ln40_1_fu_460_p2 = (tmp_fu_417_p3 | 34'd3);

assign or_ln40_fu_946_p2 = (x_0_reg_374 | 32'd3);

assign or_ln41_1_fu_475_p2 = (tmp_fu_417_p3 | 34'd4);

assign or_ln41_fu_1058_p2 = (x_0_reg_374 | 32'd4);

assign or_ln42_1_fu_490_p2 = (tmp_fu_417_p3 | 34'd5);

assign or_ln42_fu_1170_p2 = (x_0_reg_374 | 32'd5);

assign or_ln43_1_fu_505_p2 = (tmp_fu_417_p3 | 34'd6);

assign or_ln43_fu_1282_p2 = (x_0_reg_374 | 32'd6);

assign or_ln44_1_fu_520_p2 = (tmp_fu_417_p3 | 34'd7);

assign or_ln44_fu_1305_p2 = (x_0_reg_374 | 32'd7);

assign p_lshr_fu_560_p4 = {{sub_ln35_fu_555_p2[31:3]}};

assign select_ln35_1_fu_594_p3 = ((tmp_8_fu_535_p3[0:0] === 1'b1) ? 29'd0 : select_ln35_fu_586_p3);

assign select_ln35_fu_586_p3 = ((tmp_9_fu_547_p3[0:0] === 1'b1) ? sub_ln35_1_fu_570_p2 : tmp_10_fu_576_p4);

assign select_ln37_fu_690_p3 = ((temp_1_fu_684_p2[0:0] === 1'b1) ? 27'd134217727 : 27'd0);

assign select_ln38_fu_803_p3 = ((temp_4_fu_797_p2[0:0] === 1'b1) ? 27'd134217727 : 27'd0);

assign select_ln39_fu_915_p3 = ((temp_7_fu_909_p2[0:0] === 1'b1) ? 27'd134217727 : 27'd0);

assign select_ln40_fu_1027_p3 = ((temp_10_fu_1021_p2[0:0] === 1'b1) ? 27'd134217727 : 27'd0);

assign select_ln41_fu_1139_p3 = ((temp_13_fu_1133_p2[0:0] === 1'b1) ? 27'd134217727 : 27'd0);

assign select_ln42_fu_1251_p3 = ((temp_16_fu_1245_p2[0:0] === 1'b1) ? 27'd134217727 : 27'd0);

assign select_ln43_fu_1398_p3 = ((temp_19_fu_1392_p2[0:0] === 1'b1) ? 27'd134217727 : 27'd0);

assign select_ln44_fu_1487_p3 = ((temp_22_fu_1481_p2[0:0] === 1'b1) ? 27'd134217727 : 27'd0);

assign sext_ln37_1_fu_717_p1 = $signed(add_ln37_2_fu_711_p2);

assign sext_ln37_2_fu_641_p1 = $signed(trunc_ln_fu_631_p4);

assign sext_ln37_4_fu_706_p1 = $signed(temp_2_fu_698_p3);

assign sext_ln37_fu_621_p1 = $signed(add_ln37_fu_615_p2);

assign sext_ln38_1_fu_829_p1 = $signed(add_ln38_2_fu_824_p2);

assign sext_ln38_2_fu_754_p1 = $signed(trunc_ln1_fu_744_p4);

assign sext_ln38_4_fu_819_p1 = $signed(temp_5_fu_811_p3);

assign sext_ln38_fu_734_p1 = $signed(add_ln38_fu_728_p2);

assign sext_ln39_1_fu_941_p1 = $signed(add_ln39_2_fu_936_p2);

assign sext_ln39_2_fu_866_p1 = $signed(trunc_ln2_fu_856_p4);

assign sext_ln39_4_fu_931_p1 = $signed(temp_8_fu_923_p3);

assign sext_ln39_fu_846_p1 = $signed(add_ln39_fu_840_p2);

assign sext_ln40_1_fu_1053_p1 = $signed(add_ln40_2_fu_1048_p2);

assign sext_ln40_2_fu_978_p1 = $signed(trunc_ln3_fu_968_p4);

assign sext_ln40_4_fu_1043_p1 = $signed(temp_11_fu_1035_p3);

assign sext_ln40_fu_958_p1 = $signed(add_ln40_fu_952_p2);

assign sext_ln41_1_fu_1165_p1 = $signed(add_ln41_2_fu_1160_p2);

assign sext_ln41_2_fu_1090_p1 = $signed(trunc_ln4_fu_1080_p4);

assign sext_ln41_4_fu_1155_p1 = $signed(temp_14_fu_1147_p3);

assign sext_ln41_fu_1070_p1 = $signed(add_ln41_fu_1064_p2);

assign sext_ln42_1_fu_1277_p1 = $signed(add_ln42_2_fu_1272_p2);

assign sext_ln42_2_fu_1202_p1 = $signed(trunc_ln5_fu_1192_p4);

assign sext_ln42_4_fu_1267_p1 = $signed(temp_17_fu_1259_p3);

assign sext_ln42_fu_1182_p1 = $signed(add_ln42_fu_1176_p2);

assign sext_ln43_1_fu_1419_p1 = $signed(add_ln43_2_reg_1683);

assign sext_ln43_2_fu_1349_p1 = $signed(trunc_ln6_fu_1339_p4);

assign sext_ln43_4_fu_1414_p1 = $signed(temp_20_fu_1406_p3);

assign sext_ln43_fu_1294_p1 = $signed(add_ln43_fu_1288_p2);

assign sext_ln44_1_fu_1507_p1 = $signed(add_ln44_2_reg_1693);

assign sext_ln44_2_fu_1438_p1 = $signed(trunc_ln7_fu_1428_p4);

assign sext_ln44_4_fu_1503_p1 = $signed(temp_23_reg_1703);

assign sext_ln44_fu_1317_p1 = $signed(add_ln44_fu_1311_p2);

assign shl_ln37_fu_626_p2 = src_q0 << log2_scale;

assign shl_ln38_fu_739_p2 = src_q0 << log2_scale;

assign shl_ln39_fu_851_p2 = src_q0 << log2_scale;

assign shl_ln40_fu_963_p2 = src_q0 << log2_scale;

assign shl_ln41_fu_1075_p2 = src_q0 << log2_scale;

assign shl_ln42_fu_1187_p2 = src_q0 << log2_scale;

assign shl_ln43_fu_1334_p2 = src_q0 << log2_scale;

assign shl_ln44_fu_1423_p2 = src_q1 << log2_scale;

assign src_address1 = sext_ln44_fu_1317_p1;

assign sub_ln35_1_fu_570_p2 = (29'd0 - p_lshr_fu_560_p4);

assign sub_ln35_fu_555_p2 = ($signed(32'd4294967289) - $signed(width));

assign temp_10_fu_1021_p2 = (tmp_15_fu_1013_p3 ^ 1'd1);

assign temp_11_fu_1035_p3 = ((icmp_ln40_fu_1007_p2[0:0] === 1'b1) ? trunc_ln40_1_fu_988_p4 : select_ln40_fu_1027_p3);

assign temp_12_fu_1110_p1 = trunc_ln41_1_fu_1100_p4;

assign temp_13_fu_1133_p2 = (tmp_16_fu_1125_p3 ^ 1'd1);

assign temp_14_fu_1147_p3 = ((icmp_ln41_fu_1119_p2[0:0] === 1'b1) ? trunc_ln41_1_fu_1100_p4 : select_ln41_fu_1139_p3);

assign temp_15_fu_1222_p1 = trunc_ln42_1_fu_1212_p4;

assign temp_16_fu_1245_p2 = (tmp_17_fu_1237_p3 ^ 1'd1);

assign temp_17_fu_1259_p3 = ((icmp_ln42_fu_1231_p2[0:0] === 1'b1) ? trunc_ln42_1_fu_1212_p4 : select_ln42_fu_1251_p3);

assign temp_18_fu_1369_p1 = trunc_ln43_1_fu_1359_p4;

assign temp_19_fu_1392_p2 = (tmp_18_fu_1384_p3 ^ 1'd1);

assign temp_1_fu_684_p2 = (tmp_12_fu_676_p3 ^ 1'd1);

assign temp_20_fu_1406_p3 = ((icmp_ln43_fu_1378_p2[0:0] === 1'b1) ? trunc_ln43_1_fu_1359_p4 : select_ln43_fu_1398_p3);

assign temp_21_fu_1458_p1 = trunc_ln44_1_fu_1448_p4;

assign temp_22_fu_1481_p2 = (tmp_19_fu_1473_p3 ^ 1'd1);

assign temp_23_fu_1495_p3 = ((icmp_ln44_fu_1467_p2[0:0] === 1'b1) ? trunc_ln44_1_fu_1448_p4 : select_ln44_fu_1487_p3);

assign temp_2_fu_698_p3 = ((icmp_ln37_fu_670_p2[0:0] === 1'b1) ? trunc_ln37_1_fu_651_p4 : select_ln37_fu_690_p3);

assign temp_3_fu_774_p1 = trunc_ln38_1_fu_764_p4;

assign temp_4_fu_797_p2 = (tmp_13_fu_789_p3 ^ 1'd1);

assign temp_5_fu_811_p3 = ((icmp_ln38_fu_783_p2[0:0] === 1'b1) ? trunc_ln38_1_fu_764_p4 : select_ln38_fu_803_p3);

assign temp_6_fu_886_p1 = trunc_ln39_1_fu_876_p4;

assign temp_7_fu_909_p2 = (tmp_14_fu_901_p3 ^ 1'd1);

assign temp_8_fu_923_p3 = ((icmp_ln39_fu_895_p2[0:0] === 1'b1) ? trunc_ln39_1_fu_876_p4 : select_ln39_fu_915_p3);

assign temp_9_fu_998_p1 = trunc_ln40_1_fu_988_p4;

assign temp_fu_661_p1 = trunc_ln37_1_fu_651_p4;

assign tmp_10_fu_576_p4 = {{add_ln35_fu_542_p2[31:3]}};

assign tmp_11_fu_602_p3 = {{select_ln35_1_fu_594_p3}, {3'd0}};

assign tmp_12_fu_676_p3 = add_ln37_1_fu_645_p2[32'd31];

assign tmp_13_fu_789_p3 = add_ln38_1_fu_758_p2[32'd31];

assign tmp_14_fu_901_p3 = add_ln39_1_fu_870_p2[32'd31];

assign tmp_15_fu_1013_p3 = add_ln40_1_fu_982_p2[32'd31];

assign tmp_16_fu_1125_p3 = add_ln41_1_fu_1094_p2[32'd31];

assign tmp_17_fu_1237_p3 = add_ln42_1_fu_1206_p2[32'd31];

assign tmp_18_fu_1384_p3 = add_ln43_1_fu_1353_p2[32'd31];

assign tmp_19_fu_1473_p3 = add_ln44_1_fu_1442_p2[32'd31];

assign tmp_1_fu_436_p3 = {{30'd0}, {or_ln38_1_fu_430_p2}};

assign tmp_2_fu_451_p3 = {{30'd0}, {or_ln39_1_fu_445_p2}};

assign tmp_3_fu_466_p3 = {{30'd0}, {or_ln40_1_fu_460_p2}};

assign tmp_4_fu_481_p3 = {{30'd0}, {or_ln41_1_fu_475_p2}};

assign tmp_5_fu_496_p3 = {{30'd0}, {or_ln42_1_fu_490_p2}};

assign tmp_6_fu_511_p3 = {{30'd0}, {or_ln43_1_fu_505_p2}};

assign tmp_7_fu_526_p3 = {{30'd0}, {or_ln44_1_fu_520_p2}};

assign tmp_8_fu_535_p3 = width[32'd31];

assign tmp_9_fu_547_p3 = add_ln35_fu_542_p2[32'd31];

assign tmp_fu_417_p3 = {{y_0_reg_339}, {3'd0}};

assign trunc_ln1_fu_744_p4 = {{dither_q0[31:1]}};

assign trunc_ln2_fu_856_p4 = {{dither_q0[31:1]}};

assign trunc_ln37_1_fu_651_p4 = {{add_ln37_1_fu_645_p2[31:5]}};

assign trunc_ln38_1_fu_764_p4 = {{add_ln38_1_fu_758_p2[31:5]}};

assign trunc_ln39_1_fu_876_p4 = {{add_ln39_1_fu_870_p2[31:5]}};

assign trunc_ln3_fu_968_p4 = {{dither_q0[31:1]}};

assign trunc_ln40_1_fu_988_p4 = {{add_ln40_1_fu_982_p2[31:5]}};

assign trunc_ln41_1_fu_1100_p4 = {{add_ln41_1_fu_1094_p2[31:5]}};

assign trunc_ln42_1_fu_1212_p4 = {{add_ln42_1_fu_1206_p2[31:5]}};

assign trunc_ln43_1_fu_1359_p4 = {{add_ln43_1_fu_1353_p2[31:5]}};

assign trunc_ln44_1_fu_1448_p4 = {{add_ln44_1_fu_1442_p2[31:5]}};

assign trunc_ln4_fu_1080_p4 = {{dither_q0[31:1]}};

assign trunc_ln5_fu_1192_p4 = {{dither_q0[31:1]}};

assign trunc_ln6_fu_1339_p4 = {{dither_q0[31:1]}};

assign trunc_ln7_fu_1428_p4 = {{dither_q1[31:1]}};

assign trunc_ln_fu_631_p4 = {{dither_q0[31:1]}};

assign x_fu_1328_p2 = (32'd8 + x_0_reg_374);

assign y_fu_411_p2 = (y_0_reg_339 + 31'd1);

assign zext_ln33_fu_402_p1 = y_0_reg_339;

assign zext_ln34_fu_425_p1 = tmp_fu_417_p3;

always @ (posedge ap_clk) begin
    d_reg_1575[2:0] <= 3'b000;
    dither_addr_reg_1580[2:0] <= 3'b001;
    dither_addr_1_reg_1585[2:0] <= 3'b010;
    dither_addr_2_reg_1590[2:0] <= 3'b011;
    dither_addr_3_reg_1595[2:0] <= 3'b100;
    dither_addr_4_reg_1600[2:0] <= 3'b101;
    dither_addr_5_reg_1605[2:0] <= 3'b110;
    dither_addr_6_reg_1610[2:0] <= 3'b111;
    tmp_11_reg_1615[2:0] <= 3'b000;
    or_ln38_reg_1628[0] <= 1'b1;
    or_ln39_reg_1638[1] <= 1'b1;
    or_ln40_reg_1648[1:0] <= 2'b11;
    or_ln41_reg_1658[2] <= 1'b1;
    or_ln42_reg_1668[0] <= 1'b1;
    or_ln42_reg_1668[2] <= 1'b1;
end

endmodule //store_slice16_c
