// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "make_cube_faces.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic make_cube_faces::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic make_cube_faces::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<35> make_cube_faces::ap_ST_fsm_state1 = "1";
const sc_lv<35> make_cube_faces::ap_ST_fsm_state2 = "10";
const sc_lv<35> make_cube_faces::ap_ST_fsm_state3 = "100";
const sc_lv<35> make_cube_faces::ap_ST_fsm_state4 = "1000";
const sc_lv<35> make_cube_faces::ap_ST_fsm_state5 = "10000";
const sc_lv<35> make_cube_faces::ap_ST_fsm_state6 = "100000";
const sc_lv<35> make_cube_faces::ap_ST_fsm_state7 = "1000000";
const sc_lv<35> make_cube_faces::ap_ST_fsm_state8 = "10000000";
const sc_lv<35> make_cube_faces::ap_ST_fsm_state9 = "100000000";
const sc_lv<35> make_cube_faces::ap_ST_fsm_state10 = "1000000000";
const sc_lv<35> make_cube_faces::ap_ST_fsm_state11 = "10000000000";
const sc_lv<35> make_cube_faces::ap_ST_fsm_state12 = "100000000000";
const sc_lv<35> make_cube_faces::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<35> make_cube_faces::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<35> make_cube_faces::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<35> make_cube_faces::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<35> make_cube_faces::ap_ST_fsm_state17 = "10000000000000000";
const sc_lv<35> make_cube_faces::ap_ST_fsm_state18 = "100000000000000000";
const sc_lv<35> make_cube_faces::ap_ST_fsm_state19 = "1000000000000000000";
const sc_lv<35> make_cube_faces::ap_ST_fsm_state20 = "10000000000000000000";
const sc_lv<35> make_cube_faces::ap_ST_fsm_state21 = "100000000000000000000";
const sc_lv<35> make_cube_faces::ap_ST_fsm_state22 = "1000000000000000000000";
const sc_lv<35> make_cube_faces::ap_ST_fsm_state23 = "10000000000000000000000";
const sc_lv<35> make_cube_faces::ap_ST_fsm_state24 = "100000000000000000000000";
const sc_lv<35> make_cube_faces::ap_ST_fsm_state25 = "1000000000000000000000000";
const sc_lv<35> make_cube_faces::ap_ST_fsm_state26 = "10000000000000000000000000";
const sc_lv<35> make_cube_faces::ap_ST_fsm_state27 = "100000000000000000000000000";
const sc_lv<35> make_cube_faces::ap_ST_fsm_state28 = "1000000000000000000000000000";
const sc_lv<35> make_cube_faces::ap_ST_fsm_state29 = "10000000000000000000000000000";
const sc_lv<35> make_cube_faces::ap_ST_fsm_state30 = "100000000000000000000000000000";
const sc_lv<35> make_cube_faces::ap_ST_fsm_state31 = "1000000000000000000000000000000";
const sc_lv<35> make_cube_faces::ap_ST_fsm_state32 = "10000000000000000000000000000000";
const sc_lv<35> make_cube_faces::ap_ST_fsm_state33 = "100000000000000000000000000000000";
const sc_lv<35> make_cube_faces::ap_ST_fsm_state34 = "1000000000000000000000000000000000";
const sc_lv<35> make_cube_faces::ap_ST_fsm_state35 = "10000000000000000000000000000000000";
const sc_lv<32> make_cube_faces::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> make_cube_faces::ap_const_lv32_9 = "1001";
const sc_lv<32> make_cube_faces::ap_const_lv32_18 = "11000";
const sc_lv<32> make_cube_faces::ap_const_lv32_1E = "11110";
const sc_lv<32> make_cube_faces::ap_const_lv32_2 = "10";
const sc_lv<32> make_cube_faces::ap_const_lv32_3 = "11";
const sc_lv<1> make_cube_faces::ap_const_lv1_0 = "0";
const sc_lv<32> make_cube_faces::ap_const_lv32_4 = "100";
const sc_lv<32> make_cube_faces::ap_const_lv32_5 = "101";
const sc_lv<32> make_cube_faces::ap_const_lv32_6 = "110";
const sc_lv<32> make_cube_faces::ap_const_lv32_A = "1010";
const sc_lv<32> make_cube_faces::ap_const_lv32_B = "1011";
const sc_lv<32> make_cube_faces::ap_const_lv32_C = "1100";
const sc_lv<32> make_cube_faces::ap_const_lv32_D = "1101";
const sc_lv<1> make_cube_faces::ap_const_lv1_1 = "1";
const sc_lv<32> make_cube_faces::ap_const_lv32_E = "1110";
const sc_lv<32> make_cube_faces::ap_const_lv32_F = "1111";
const sc_lv<32> make_cube_faces::ap_const_lv32_10 = "10000";
const sc_lv<32> make_cube_faces::ap_const_lv32_11 = "10001";
const sc_lv<32> make_cube_faces::ap_const_lv32_14 = "10100";
const sc_lv<32> make_cube_faces::ap_const_lv32_19 = "11001";
const sc_lv<32> make_cube_faces::ap_const_lv32_1A = "11010";
const sc_lv<32> make_cube_faces::ap_const_lv32_1B = "11011";
const sc_lv<32> make_cube_faces::ap_const_lv32_20 = "100000";
const sc_lv<32> make_cube_faces::ap_const_lv32_21 = "100001";
const sc_lv<3> make_cube_faces::ap_const_lv3_0 = "000";
const sc_lv<6> make_cube_faces::ap_const_lv6_0 = "000000";
const sc_lv<32> make_cube_faces::ap_const_lv32_22 = "100010";
const sc_lv<64> make_cube_faces::ap_const_lv64_0 = "0000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<64> make_cube_faces::ap_const_lv64_1 = "1";
const sc_lv<64> make_cube_faces::ap_const_lv64_2 = "10";
const sc_lv<32> make_cube_faces::ap_const_lv32_1 = "1";
const sc_lv<64> make_cube_faces::ap_const_lv64_3 = "11";
const sc_lv<64> make_cube_faces::ap_const_lv64_4 = "100";
const sc_lv<64> make_cube_faces::ap_const_lv64_5 = "101";
const sc_lv<32> make_cube_faces::ap_const_lv32_1C = "11100";
const sc_lv<32> make_cube_faces::ap_const_lv32_1D = "11101";
const sc_lv<32> make_cube_faces::ap_const_lv32_1F = "11111";
const sc_lv<32> make_cube_faces::ap_const_lv32_7 = "111";
const sc_lv<32> make_cube_faces::ap_const_lv32_15 = "10101";
const sc_lv<32> make_cube_faces::ap_const_lv32_3D800000 = "111101100000000000000000000000";
const sc_lv<32> make_cube_faces::ap_const_lv32_12 = "10010";
const sc_lv<3> make_cube_faces::ap_const_lv3_6 = "110";
const sc_lv<3> make_cube_faces::ap_const_lv3_1 = "1";
const sc_lv<2> make_cube_faces::ap_const_lv2_0 = "00";
const sc_lv<5> make_cube_faces::ap_const_lv5_3 = "11";
const sc_lv<59> make_cube_faces::ap_const_lv59_0 = "00000000000000000000000000000000000000000000000000000000000";
const sc_lv<5> make_cube_faces::ap_const_lv5_1 = "1";
const sc_lv<5> make_cube_faces::ap_const_lv5_2 = "10";
const sc_lv<28> make_cube_faces::ap_const_lv28_0 = "0000000000000000000000000000";
const sc_lv<29> make_cube_faces::ap_const_lv29_0 = "00000000000000000000000000000";
const sc_lv<32> make_cube_faces::ap_const_lv32_17 = "10111";
const sc_lv<8> make_cube_faces::ap_const_lv8_FF = "11111111";
const sc_lv<23> make_cube_faces::ap_const_lv23_0 = "00000000000000000000000";
const sc_lv<64> make_cube_faces::ap_const_lv64_3C = "111100";
const sc_lv<11> make_cube_faces::ap_const_lv11_2 = "10";
const sc_lv<11> make_cube_faces::ap_const_lv11_3 = "11";
const sc_lv<11> make_cube_faces::ap_const_lv11_4 = "100";
const sc_lv<11> make_cube_faces::ap_const_lv11_5 = "101";
const sc_lv<11> make_cube_faces::ap_const_lv11_6 = "110";
const sc_lv<11> make_cube_faces::ap_const_lv11_7 = "111";
const sc_lv<11> make_cube_faces::ap_const_lv11_8 = "1000";
const sc_lv<11> make_cube_faces::ap_const_lv11_9 = "1001";
const sc_lv<6> make_cube_faces::ap_const_lv6_1 = "1";
const sc_lv<6> make_cube_faces::ap_const_lv6_A = "1010";
const sc_lv<9> make_cube_faces::ap_const_lv9_181 = "110000001";
const sc_lv<32> make_cube_faces::ap_const_lv32_8 = "1000";
const sc_lv<8> make_cube_faces::ap_const_lv8_7F = "1111111";
const sc_lv<32> make_cube_faces::ap_const_lv32_37 = "110111";
const sc_lv<8> make_cube_faces::ap_const_lv8_1 = "1";
const sc_lv<8> make_cube_faces::ap_const_lv8_2 = "10";
const sc_lv<64> make_cube_faces::ap_const_lv64_7227278D4E1B = "11100100010011100100111100011010100111000011011";
const sc_lv<63> make_cube_faces::ap_const_lv63_0 = "000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<32> make_cube_faces::ap_const_lv32_3A000000 = "111010000000000000000000000000";
const sc_lv<32> make_cube_faces::ap_const_lv32_3D7E0000 = "111101011111100000000000000000";
const bool make_cube_faces::ap_const_boolean_1 = true;

make_cube_faces::make_cube_faces(sc_module_name name) : sc_module(name), mVcdFile(0) {
    normals_0_U = new make_cube_faces_normals_0("normals_0_U");
    normals_0_U->clk(ap_clk);
    normals_0_U->reset(ap_rst);
    normals_0_U->address0(normals_0_address0);
    normals_0_U->ce0(normals_0_ce0);
    normals_0_U->q0(normals_0_q0);
    normals_1_U = new make_cube_faces_normals_1("normals_1_U");
    normals_1_U->clk(ap_clk);
    normals_1_U->reset(ap_rst);
    normals_1_U->address0(normals_1_address0);
    normals_1_U->ce0(normals_1_ce0);
    normals_1_U->q0(normals_1_q0);
    normals_2_U = new make_cube_faces_normals_2("normals_2_U");
    normals_2_U->clk(ap_clk);
    normals_2_U->reset(ap_rst);
    normals_2_U->address0(normals_2_address0);
    normals_2_U->ce0(normals_2_ce0);
    normals_2_U->q0(normals_2_q0);
    flipped_U = new make_cube_faces_flipped("flipped_U");
    flipped_U->clk(ap_clk);
    flipped_U->reset(ap_rst);
    flipped_U->address0(flipped_address0);
    flipped_U->ce0(flipped_ce0);
    flipped_U->q0(flipped_q0);
    indices_U = new make_cube_faces_indices("indices_U");
    indices_U->clk(ap_clk);
    indices_U->reset(ap_rst);
    indices_U->address0(indices_address0);
    indices_U->ce0(indices_ce0);
    indices_U->q0(indices_q0);
    positions_U = new make_cube_faces_positions("positions_U");
    positions_U->clk(ap_clk);
    positions_U->reset(ap_rst);
    positions_U->address0(positions_address0);
    positions_U->ce0(positions_ce0);
    positions_U->q0(positions_q0);
    positions_U->address1(positions_address1);
    positions_U->ce1(positions_ce1);
    positions_U->q1(positions_q1);
    positions_U->address2(positions_address2);
    positions_U->ce2(positions_ce2);
    positions_U->q2(positions_q2);
    uvs_U = new make_cube_faces_uvs("uvs_U");
    uvs_U->clk(ap_clk);
    uvs_U->reset(ap_rst);
    uvs_U->address0(uvs_address0);
    uvs_U->ce0(uvs_ce0);
    uvs_U->q0(uvs_q0);
    uvs_U->address1(uvs_address1);
    uvs_U->ce1(uvs_ce1);
    uvs_U->q1(uvs_q1);
    faces_U = new make_cube_faces_faces("faces_U");
    faces_U->clk(ap_clk);
    faces_U->reset(ap_rst);
    faces_U->address0(faces_address0);
    faces_U->ce0(faces_ce0);
    faces_U->we0(faces_we0);
    faces_U->d0(faces_d0);
    faces_U->q0(faces_q0);
    faces_U->address1(faces_address1);
    faces_U->ce1(faces_ce1);
    faces_U->we1(faces_we1);
    faces_U->d1(faces_d1);
    tiles_U = new make_cube_faces_faces("tiles_U");
    tiles_U->clk(ap_clk);
    tiles_U->reset(ap_rst);
    tiles_U->address0(tiles_address0);
    tiles_U->ce0(tiles_ce0);
    tiles_U->we0(tiles_we0);
    tiles_U->d0(tiles_d0);
    tiles_U->q0(tiles_q0);
    tiles_U->address1(tiles_address1);
    tiles_U->ce1(tiles_ce1);
    tiles_U->we1(tiles_we1);
    tiles_U->d1(tiles_d1);
    make_cube_faces_fadd_32ns_32ns_32_4_full_dsp_1_U1 = new make_cube_faces_fadd_32ns_32ns_32_4_full_dsp_1<1,4,32,32,32>("make_cube_faces_fadd_32ns_32ns_32_4_full_dsp_1_U1");
    make_cube_faces_fadd_32ns_32ns_32_4_full_dsp_1_U1->clk(ap_clk);
    make_cube_faces_fadd_32ns_32ns_32_4_full_dsp_1_U1->reset(ap_rst);
    make_cube_faces_fadd_32ns_32ns_32_4_full_dsp_1_U1->din0(grp_fu_754_p0);
    make_cube_faces_fadd_32ns_32ns_32_4_full_dsp_1_U1->din1(grp_fu_754_p1);
    make_cube_faces_fadd_32ns_32ns_32_4_full_dsp_1_U1->ce(ap_var_for_const0);
    make_cube_faces_fadd_32ns_32ns_32_4_full_dsp_1_U1->dout(grp_fu_754_p2);
    make_cube_faces_fadd_32ns_32ns_32_4_full_dsp_1_U2 = new make_cube_faces_fadd_32ns_32ns_32_4_full_dsp_1<1,4,32,32,32>("make_cube_faces_fadd_32ns_32ns_32_4_full_dsp_1_U2");
    make_cube_faces_fadd_32ns_32ns_32_4_full_dsp_1_U2->clk(ap_clk);
    make_cube_faces_fadd_32ns_32ns_32_4_full_dsp_1_U2->reset(ap_rst);
    make_cube_faces_fadd_32ns_32ns_32_4_full_dsp_1_U2->din0(grp_fu_758_p0);
    make_cube_faces_fadd_32ns_32ns_32_4_full_dsp_1_U2->din1(grp_fu_758_p1);
    make_cube_faces_fadd_32ns_32ns_32_4_full_dsp_1_U2->ce(ap_var_for_const0);
    make_cube_faces_fadd_32ns_32ns_32_4_full_dsp_1_U2->dout(grp_fu_758_p2);
    make_cube_faces_fadd_32ns_32ns_32_4_full_dsp_1_U3 = new make_cube_faces_fadd_32ns_32ns_32_4_full_dsp_1<1,4,32,32,32>("make_cube_faces_fadd_32ns_32ns_32_4_full_dsp_1_U3");
    make_cube_faces_fadd_32ns_32ns_32_4_full_dsp_1_U3->clk(ap_clk);
    make_cube_faces_fadd_32ns_32ns_32_4_full_dsp_1_U3->reset(ap_rst);
    make_cube_faces_fadd_32ns_32ns_32_4_full_dsp_1_U3->din0(tmp_9_reg_2065);
    make_cube_faces_fadd_32ns_32ns_32_4_full_dsp_1_U3->din1(z);
    make_cube_faces_fadd_32ns_32ns_32_4_full_dsp_1_U3->ce(ap_var_for_const0);
    make_cube_faces_fadd_32ns_32ns_32_4_full_dsp_1_U3->dout(grp_fu_762_p2);
    make_cube_faces_fmul_32ns_32ns_32_3_max_dsp_1_U4 = new make_cube_faces_fmul_32ns_32ns_32_3_max_dsp_1<1,3,32,32,32>("make_cube_faces_fmul_32ns_32ns_32_3_max_dsp_1_U4");
    make_cube_faces_fmul_32ns_32ns_32_3_max_dsp_1_U4->clk(ap_clk);
    make_cube_faces_fmul_32ns_32ns_32_3_max_dsp_1_U4->reset(ap_rst);
    make_cube_faces_fmul_32ns_32ns_32_3_max_dsp_1_U4->din0(grp_fu_766_p0);
    make_cube_faces_fmul_32ns_32ns_32_3_max_dsp_1_U4->din1(grp_fu_766_p1);
    make_cube_faces_fmul_32ns_32ns_32_3_max_dsp_1_U4->ce(ap_var_for_const0);
    make_cube_faces_fmul_32ns_32ns_32_3_max_dsp_1_U4->dout(grp_fu_766_p2);
    make_cube_faces_fmul_32ns_32ns_32_3_max_dsp_1_U5 = new make_cube_faces_fmul_32ns_32ns_32_3_max_dsp_1<1,3,32,32,32>("make_cube_faces_fmul_32ns_32ns_32_3_max_dsp_1_U5");
    make_cube_faces_fmul_32ns_32ns_32_3_max_dsp_1_U5->clk(ap_clk);
    make_cube_faces_fmul_32ns_32ns_32_3_max_dsp_1_U5->reset(ap_rst);
    make_cube_faces_fmul_32ns_32ns_32_3_max_dsp_1_U5->din0(grp_fu_771_p0);
    make_cube_faces_fmul_32ns_32ns_32_3_max_dsp_1_U5->din1(grp_fu_771_p1);
    make_cube_faces_fmul_32ns_32ns_32_3_max_dsp_1_U5->ce(ap_var_for_const0);
    make_cube_faces_fmul_32ns_32ns_32_3_max_dsp_1_U5->dout(grp_fu_771_p2);
    make_cube_faces_fmul_32ns_32ns_32_3_max_dsp_1_U6 = new make_cube_faces_fmul_32ns_32ns_32_3_max_dsp_1<1,3,32,32,32>("make_cube_faces_fmul_32ns_32ns_32_3_max_dsp_1_U6");
    make_cube_faces_fmul_32ns_32ns_32_3_max_dsp_1_U6->clk(ap_clk);
    make_cube_faces_fmul_32ns_32ns_32_3_max_dsp_1_U6->reset(ap_rst);
    make_cube_faces_fmul_32ns_32ns_32_3_max_dsp_1_U6->din0(positions_load_2_reg_2050);
    make_cube_faces_fmul_32ns_32ns_32_3_max_dsp_1_U6->din1(n);
    make_cube_faces_fmul_32ns_32ns_32_3_max_dsp_1_U6->ce(ap_var_for_const0);
    make_cube_faces_fmul_32ns_32ns_32_3_max_dsp_1_U6->dout(grp_fu_776_p2);
    make_cube_faces_sitofp_32ns_32_4_1_U7 = new make_cube_faces_sitofp_32ns_32_4_1<1,4,32,32>("make_cube_faces_sitofp_32ns_32_4_1_U7");
    make_cube_faces_sitofp_32ns_32_4_1_U7->clk(ap_clk);
    make_cube_faces_sitofp_32ns_32_4_1_U7->reset(ap_rst);
    make_cube_faces_sitofp_32ns_32_4_1_U7->din0(select_ln64_reg_1764);
    make_cube_faces_sitofp_32ns_32_4_1_U7->ce(ap_var_for_const0);
    make_cube_faces_sitofp_32ns_32_4_1_U7->dout(grp_fu_780_p1);
    make_cube_faces_sitofp_32s_32_4_1_U8 = new make_cube_faces_sitofp_32s_32_4_1<1,4,32,32>("make_cube_faces_sitofp_32s_32_4_1_U8");
    make_cube_faces_sitofp_32s_32_4_1_U8->clk(ap_clk);
    make_cube_faces_sitofp_32s_32_4_1_U8->reset(ap_rst);
    make_cube_faces_sitofp_32s_32_4_1_U8->din0(grp_fu_783_p0);
    make_cube_faces_sitofp_32s_32_4_1_U8->ce(ap_var_for_const0);
    make_cube_faces_sitofp_32s_32_4_1_U8->dout(grp_fu_783_p1);
    make_cube_faces_fcmp_32ns_32ns_1_2_1_U9 = new make_cube_faces_fcmp_32ns_32ns_1_2_1<1,2,32,32,1>("make_cube_faces_fcmp_32ns_32ns_1_2_1_U9");
    make_cube_faces_fcmp_32ns_32ns_1_2_1_U9->clk(ap_clk);
    make_cube_faces_fcmp_32ns_32ns_1_2_1_U9->reset(ap_rst);
    make_cube_faces_fcmp_32ns_32ns_1_2_1_U9->din0(reg_790);
    make_cube_faces_fcmp_32ns_32ns_1_2_1_U9->din1(tmp_3_reg_1809);
    make_cube_faces_fcmp_32ns_32ns_1_2_1_U9->ce(ap_var_for_const0);
    make_cube_faces_fcmp_32ns_32ns_1_2_1_U9->opcode(ap_var_for_const1);
    make_cube_faces_fcmp_32ns_32ns_1_2_1_U9->dout(grp_fu_786_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_add_ln339_fu_1315_p2);
    sensitive << ( zext_ln339_fu_1311_p1 );

    SC_METHOD(thread_add_ln67_fu_1101_p2);
    sensitive << ( d_0_idx_fu_196 );

    SC_METHOD(thread_add_ln68_fu_1189_p2);
    sensitive << ( sub_ln68_reg_1725 );
    sensitive << ( zext_ln68_2_fu_1185_p1 );

    SC_METHOD(thread_add_ln69_1_fu_1419_p2);
    sensitive << ( zext_ln66_reg_1730 );
    sensitive << ( sext_ln69_fu_1415_p1 );

    SC_METHOD(thread_add_ln69_fu_1210_p2);
    sensitive << ( trunc_ln60_reg_1885 );
    sensitive << ( zext_ln69_fu_1206_p1 );

    SC_METHOD(thread_add_ln70_1_fu_1215_p2);
    sensitive << ( add_ln70_reg_1891 );
    sensitive << ( d_1_rec_cast_fu_1159_p1 );

    SC_METHOD(thread_add_ln70_2_fu_1449_p2);
    sensitive << ( sub_ln69_fu_1439_p2 );

    SC_METHOD(thread_add_ln70_fu_1111_p2);
    sensitive << ( trunc_ln60_fu_1107_p1 );

    SC_METHOD(thread_add_ln71_1_fu_1220_p2);
    sensitive << ( add_ln71_reg_1896 );
    sensitive << ( d_1_rec_cast_fu_1159_p1 );

    SC_METHOD(thread_add_ln71_2_fu_1460_p2);
    sensitive << ( sub_ln69_fu_1439_p2 );

    SC_METHOD(thread_add_ln71_fu_1117_p2);
    sensitive << ( trunc_ln60_fu_1107_p1 );

    SC_METHOD(thread_add_ln72_1_fu_1225_p2);
    sensitive << ( add_ln72_reg_1901 );
    sensitive << ( d_1_rec_cast_fu_1159_p1 );

    SC_METHOD(thread_add_ln72_fu_1123_p2);
    sensitive << ( trunc_ln60_fu_1107_p1 );

    SC_METHOD(thread_add_ln73_1_fu_1230_p2);
    sensitive << ( add_ln73_reg_1906 );
    sensitive << ( d_1_rec_cast_fu_1159_p1 );

    SC_METHOD(thread_add_ln73_fu_1129_p2);
    sensitive << ( trunc_ln60_fu_1107_p1 );

    SC_METHOD(thread_add_ln74_1_fu_1235_p2);
    sensitive << ( add_ln74_reg_1911 );
    sensitive << ( d_1_rec_cast_fu_1159_p1 );

    SC_METHOD(thread_add_ln74_fu_1135_p2);
    sensitive << ( trunc_ln60_fu_1107_p1 );

    SC_METHOD(thread_add_ln75_1_fu_1240_p2);
    sensitive << ( add_ln75_reg_1916 );
    sensitive << ( d_1_rec_cast_fu_1159_p1 );

    SC_METHOD(thread_add_ln75_fu_1141_p2);
    sensitive << ( trunc_ln60_fu_1107_p1 );

    SC_METHOD(thread_add_ln76_1_fu_1245_p2);
    sensitive << ( add_ln76_reg_1921 );
    sensitive << ( d_1_rec_cast_fu_1159_p1 );

    SC_METHOD(thread_add_ln76_fu_1147_p2);
    sensitive << ( trunc_ln60_fu_1107_p1 );

    SC_METHOD(thread_add_ln77_1_fu_1250_p2);
    sensitive << ( add_ln77_reg_1926 );
    sensitive << ( d_1_rec_cast_fu_1159_p1 );

    SC_METHOD(thread_add_ln77_fu_1153_p2);
    sensitive << ( trunc_ln60_fu_1107_p1 );

    SC_METHOD(thread_add_ln78_fu_1255_p2);
    sensitive << ( d_1_rec_reg_732 );

    SC_METHOD(thread_and_ln66_1_fu_1095_p2);
    sensitive << ( and_ln66_fu_1089_p2 );
    sensitive << ( grp_fu_786_p2 );

    SC_METHOD(thread_and_ln66_fu_1089_p2);
    sensitive << ( or_ln66_fu_1081_p2 );
    sensitive << ( or_ln66_1_fu_1085_p2 );

    SC_METHOD(thread_and_ln75_fu_1610_p2);
    sensitive << ( icmp_ln75_2_reg_2085 );
    sensitive << ( or_ln75_fu_1606_p2 );

    SC_METHOD(thread_and_ln76_fu_1628_p2);
    sensitive << ( icmp_ln76_2_reg_2090 );
    sensitive << ( or_ln76_fu_1624_p2 );

    SC_METHOD(thread_ao_address0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ao_addr_2_reg_1745 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state33 );
    sensitive << ( zext_ln69_2_fu_861_p1 );
    sensitive << ( sext_ln69_1_fu_1658_p1 );

    SC_METHOD(thread_ao_address1);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ao_addr_3_reg_1750 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( tmp_19_fu_876_p3 );

    SC_METHOD(thread_ao_ce0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state33 );

    SC_METHOD(thread_ao_ce1);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state13);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state14);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state15);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state16);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state17);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state18);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state19);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state21);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state22);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state25);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state26);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state27);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state28);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state29);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state30);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state31);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state32);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state33);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state34);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state35);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( icmp_ln60_fu_806_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( icmp_ln60_fu_806_p2 );

    SC_METHOD(thread_bitcast_ln66_1_fu_1037_p1);
    sensitive << ( tmp_3_reg_1809 );

    SC_METHOD(thread_bitcast_ln66_fu_1019_p1);
    sensitive << ( reg_790 );

    SC_METHOD(thread_bitcast_ln75_fu_1542_p1);
    sensitive << ( uvs_q0 );

    SC_METHOD(thread_bitcast_ln76_fu_1572_p1);
    sensitive << ( uvs_q1 );

    SC_METHOD(thread_d_0_idx9_cast_fu_1168_p1);
    sensitive << ( d_0_idx9_fu_1163_p2 );

    SC_METHOD(thread_d_0_idx9_fu_1163_p2);
    sensitive << ( trunc_ln60_reg_1885 );
    sensitive << ( d_1_rec_cast_fu_1159_p1 );

    SC_METHOD(thread_d_1_rec_cast_fu_1159_p1);
    sensitive << ( d_1_rec_reg_732 );

    SC_METHOD(thread_data_address0);
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( data_addr_reg_1931 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( ap_CS_fsm_state33 );
    sensitive << ( ap_CS_fsm_state34 );
    sensitive << ( ap_CS_fsm_state35 );
    sensitive << ( zext_ln69_1_fu_1538_p1 );
    sensitive << ( zext_ln70_fu_1602_p1 );
    sensitive << ( zext_ln71_fu_1642_p1 );
    sensitive << ( ap_CS_fsm_state29 );
    sensitive << ( zext_ln72_fu_1646_p1 );
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( zext_ln73_fu_1650_p1 );
    sensitive << ( zext_ln74_fu_1654_p1 );
    sensitive << ( ap_CS_fsm_state32 );
    sensitive << ( zext_ln75_fu_1663_p1 );
    sensitive << ( zext_ln76_fu_1667_p1 );
    sensitive << ( zext_ln77_fu_1671_p1 );

    SC_METHOD(thread_data_ce0);
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( ap_CS_fsm_state33 );
    sensitive << ( ap_CS_fsm_state34 );
    sensitive << ( ap_CS_fsm_state35 );
    sensitive << ( ap_CS_fsm_state29 );
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( ap_CS_fsm_state32 );

    SC_METHOD(thread_data_d0);
    sensitive << ( ao_q0 );
    sensitive << ( reg_790 );
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( reg_796 );
    sensitive << ( normals_0_load_reg_1865 );
    sensitive << ( normals_1_load_reg_1870 );
    sensitive << ( normals_2_load_reg_1875 );
    sensitive << ( tmp_s_reg_2070 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( ap_CS_fsm_state33 );
    sensitive << ( light_load_reg_2135 );
    sensitive << ( ap_CS_fsm_state34 );
    sensitive << ( ap_CS_fsm_state35 );
    sensitive << ( ap_CS_fsm_state29 );
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( ap_CS_fsm_state32 );

    SC_METHOD(thread_data_we0);
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( ap_CS_fsm_state33 );
    sensitive << ( ap_CS_fsm_state34 );
    sensitive << ( ap_CS_fsm_state35 );
    sensitive << ( ap_CS_fsm_state29 );
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( ap_CS_fsm_state32 );

    SC_METHOD(thread_faces_address0);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( zext_ln61_fu_818_p1 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_faces_address1);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_faces_ce0);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_faces_ce1);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_faces_d0);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( left_r );
    sensitive << ( top );
    sensitive << ( front );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_faces_d1);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( right_r );
    sensitive << ( bottom );
    sensitive << ( back );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_faces_we0);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_faces_we1);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_flipped_address0);
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( sext_ln68_fu_1194_p1 );

    SC_METHOD(thread_flipped_ce0);
    sensitive << ( ap_CS_fsm_state14 );

    SC_METHOD(thread_grp_fu_754_p0);
    sensitive << ( ao_load_reg_1774 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ao_load_2_reg_1789 );
    sensitive << ( du_reg_1850 );
    sensitive << ( tmp_5_reg_2055 );
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state22 );

    SC_METHOD(thread_grp_fu_754_p1);
    sensitive << ( x );
    sensitive << ( ao_load_1_reg_1779 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ao_load_3_reg_1794 );
    sensitive << ( select_ln75_fu_1615_p3 );
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state22 );

    SC_METHOD(thread_grp_fu_758_p0);
    sensitive << ( dv_reg_1855 );
    sensitive << ( tmp_7_reg_2060 );
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( ap_CS_fsm_state22 );

    SC_METHOD(thread_grp_fu_758_p1);
    sensitive << ( y );
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( select_ln76_fu_1633_p3 );
    sensitive << ( ap_CS_fsm_state22 );

    SC_METHOD(thread_grp_fu_766_p0);
    sensitive << ( tmp_reg_1799 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( positions_load_reg_2040 );
    sensitive << ( ap_CS_fsm_state19 );

    SC_METHOD(thread_grp_fu_766_p1);
    sensitive << ( n );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state19 );

    SC_METHOD(thread_grp_fu_771_p0);
    sensitive << ( tmp_1_reg_1804 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( positions_load_1_reg_2045 );
    sensitive << ( ap_CS_fsm_state19 );

    SC_METHOD(thread_grp_fu_771_p1);
    sensitive << ( n );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state19 );

    SC_METHOD(thread_grp_fu_783_p0);
    sensitive << ( select_ln65_reg_1769 );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_i_fu_812_p2);
    sensitive << ( i_0_reg_720 );

    SC_METHOD(thread_icmp_ln60_fu_806_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( i_0_reg_720 );

    SC_METHOD(thread_icmp_ln61_fu_915_p2);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( faces_q0 );

    SC_METHOD(thread_icmp_ln66_1_fu_1060_p2);
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( trunc_ln66_fu_1033_p1 );

    SC_METHOD(thread_icmp_ln66_2_fu_1066_p2);
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( tmp_10_fu_1040_p4 );

    SC_METHOD(thread_icmp_ln66_3_fu_1072_p2);
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( trunc_ln66_1_fu_1050_p1 );

    SC_METHOD(thread_icmp_ln66_fu_1054_p2);
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( tmp_4_fu_1023_p4 );

    SC_METHOD(thread_icmp_ln67_fu_1173_p2);
    sensitive << ( icmp_ln61_reg_1755 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( v_0_reg_743 );

    SC_METHOD(thread_icmp_ln75_1_fu_1566_p2);
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( trunc_ln75_fu_1556_p1 );

    SC_METHOD(thread_icmp_ln75_2_fu_1508_p2);
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( tmp_26_fu_1500_p3 );

    SC_METHOD(thread_icmp_ln75_fu_1560_p2);
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( tmp_14_fu_1546_p4 );

    SC_METHOD(thread_icmp_ln76_1_fu_1596_p2);
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( trunc_ln76_fu_1586_p1 );

    SC_METHOD(thread_icmp_ln76_2_fu_1532_p2);
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( tmp_29_fu_1524_p3 );

    SC_METHOD(thread_icmp_ln76_fu_1590_p2);
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( tmp_15_fu_1576_p4 );

    SC_METHOD(thread_indices_address0);
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( sext_ln68_fu_1194_p1 );

    SC_METHOD(thread_indices_ce0);
    sensitive << ( ap_CS_fsm_state14 );

    SC_METHOD(thread_isNeg_fu_1321_p3);
    sensitive << ( add_ln339_fu_1315_p2 );

    SC_METHOD(thread_light_address0);
    sensitive << ( ap_CS_fsm_state33 );
    sensitive << ( sext_ln69_1_fu_1658_p1 );

    SC_METHOD(thread_light_ce0);
    sensitive << ( ap_CS_fsm_state33 );

    SC_METHOD(thread_lshr_ln75_fu_1490_p2);
    sensitive << ( sext_ln75_fu_1478_p1 );

    SC_METHOD(thread_lshr_ln76_fu_1514_p2);
    sensitive << ( or_ln76_1_fu_1483_p2 );

    SC_METHOD(thread_mantissa_V_fu_1297_p4);
    sensitive << ( tmp_V_1_fu_1293_p1 );

    SC_METHOD(thread_normals_0_address0);
    sensitive << ( zext_ln61_reg_1712 );
    sensitive << ( ap_CS_fsm_state12 );

    SC_METHOD(thread_normals_0_ce0);
    sensitive << ( ap_CS_fsm_state12 );

    SC_METHOD(thread_normals_1_address0);
    sensitive << ( zext_ln61_reg_1712 );
    sensitive << ( ap_CS_fsm_state12 );

    SC_METHOD(thread_normals_1_ce0);
    sensitive << ( ap_CS_fsm_state12 );

    SC_METHOD(thread_normals_2_address0);
    sensitive << ( zext_ln61_reg_1712 );
    sensitive << ( ap_CS_fsm_state12 );

    SC_METHOD(thread_normals_2_ce0);
    sensitive << ( ap_CS_fsm_state12 );

    SC_METHOD(thread_or_ln66_1_fu_1085_p2);
    sensitive << ( icmp_ln66_2_reg_1825 );
    sensitive << ( icmp_ln66_3_reg_1830 );

    SC_METHOD(thread_or_ln66_2_fu_870_p2);
    sensitive << ( tmp_18_fu_853_p3 );

    SC_METHOD(thread_or_ln66_3_fu_885_p2);
    sensitive << ( tmp_18_fu_853_p3 );

    SC_METHOD(thread_or_ln66_4_fu_900_p2);
    sensitive << ( tmp_18_fu_853_p3 );

    SC_METHOD(thread_or_ln66_fu_1081_p2);
    sensitive << ( icmp_ln66_reg_1815 );
    sensitive << ( icmp_ln66_1_reg_1820 );

    SC_METHOD(thread_or_ln69_fu_1200_p2);
    sensitive << ( d_1_rec_reg_732 );

    SC_METHOD(thread_or_ln75_fu_1606_p2);
    sensitive << ( icmp_ln75_reg_2095 );
    sensitive << ( icmp_ln75_1_reg_2100 );

    SC_METHOD(thread_or_ln76_1_fu_1483_p2);
    sensitive << ( sext_ln75_fu_1478_p1 );

    SC_METHOD(thread_or_ln76_fu_1624_p2);
    sensitive << ( icmp_ln76_reg_2105 );
    sensitive << ( icmp_ln76_1_reg_2110 );

    SC_METHOD(thread_p_Result_s_fu_1275_p3);
    sensitive << ( p_Val2_s_fu_1272_p1 );

    SC_METHOD(thread_p_Val2_4_fu_1393_p3);
    sensitive << ( isNeg_fu_1321_p3 );
    sensitive << ( zext_ln662_fu_1379_p1 );
    sensitive << ( tmp_25_fu_1383_p4 );

    SC_METHOD(thread_p_Val2_s_fu_1272_p1);
    sensitive << ( select_ln66_reg_2004 );

    SC_METHOD(thread_p_and_f_fu_933_p3);
    sensitive << ( trunc_ln64_fu_929_p1 );

    SC_METHOD(thread_p_and_t_fu_951_p3);
    sensitive << ( trunc_ln64_1_fu_947_p1 );

    SC_METHOD(thread_p_shl2_cast_fu_1432_p3);
    sensitive << ( trunc_ln69_1_reg_2020 );

    SC_METHOD(thread_positions_address0);
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( zext_ln69_3_fu_1444_p1 );

    SC_METHOD(thread_positions_address1);
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( zext_ln70_1_fu_1455_p1 );

    SC_METHOD(thread_positions_address2);
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( zext_ln71_1_fu_1466_p1 );

    SC_METHOD(thread_positions_ce0);
    sensitive << ( ap_CS_fsm_state17 );

    SC_METHOD(thread_positions_ce1);
    sensitive << ( ap_CS_fsm_state17 );

    SC_METHOD(thread_positions_ce2);
    sensitive << ( ap_CS_fsm_state17 );

    SC_METHOD(thread_r_V_1_fu_1365_p2);
    sensitive << ( zext_ln682_fu_1307_p1 );
    sensitive << ( zext_ln1287_fu_1355_p1 );

    SC_METHOD(thread_r_V_fu_1359_p2);
    sensitive << ( mantissa_V_fu_1297_p4 );
    sensitive << ( sext_ln1311_2_fu_1351_p1 );

    SC_METHOD(thread_result_V_1_fu_1401_p2);
    sensitive << ( p_Val2_4_fu_1393_p3 );

    SC_METHOD(thread_select_ln59_fu_1407_p3);
    sensitive << ( p_Val2_4_fu_1393_p3 );
    sensitive << ( p_Result_s_fu_1275_p3 );
    sensitive << ( result_V_1_fu_1401_p2 );

    SC_METHOD(thread_select_ln64_fu_965_p3);
    sensitive << ( tmp_22_fu_921_p3 );
    sensitive << ( sub_ln64_1_fu_959_p2 );
    sensitive << ( p_and_f_fu_933_p3 );

    SC_METHOD(thread_select_ln65_fu_1007_p3);
    sensitive << ( tmp_22_fu_921_p3 );
    sensitive << ( sub_ln65_fu_987_p2 );
    sensitive << ( zext_ln65_1_fu_1003_p1 );

    SC_METHOD(thread_select_ln66_fu_1265_p3);
    sensitive << ( flipped_q0 );
    sensitive << ( indices_q0 );
    sensitive << ( and_ln66_1_reg_1860 );

    SC_METHOD(thread_select_ln75_fu_1615_p3);
    sensitive << ( and_ln75_fu_1610_p2 );

    SC_METHOD(thread_select_ln76_fu_1633_p3);
    sensitive << ( and_ln76_fu_1628_p2 );

    SC_METHOD(thread_sext_ln1311_1_fu_1347_p1);
    sensitive << ( ush_fu_1339_p3 );

    SC_METHOD(thread_sext_ln1311_2_fu_1351_p1);
    sensitive << ( ush_fu_1339_p3 );

    SC_METHOD(thread_sext_ln1311_fu_1335_p1);
    sensitive << ( sub_ln1311_fu_1329_p2 );

    SC_METHOD(thread_sext_ln68_fu_1194_p1);
    sensitive << ( add_ln68_fu_1189_p2 );

    SC_METHOD(thread_sext_ln69_1_fu_1658_p1);
    sensitive << ( add_ln69_1_reg_2009 );

    SC_METHOD(thread_sext_ln69_fu_1415_p1);
    sensitive << ( select_ln59_fu_1407_p3 );

    SC_METHOD(thread_sext_ln75_fu_1478_p1);
    sensitive << ( tmp_28_fu_1471_p3 );

    SC_METHOD(thread_sub_ln1311_fu_1329_p2);
    sensitive << ( tmp_V_fu_1283_p4 );

    SC_METHOD(thread_sub_ln64_1_fu_959_p2);
    sensitive << ( p_and_t_fu_951_p3 );

    SC_METHOD(thread_sub_ln64_fu_941_p2);
    sensitive << ( tiles_q0 );

    SC_METHOD(thread_sub_ln65_fu_987_p2);
    sensitive << ( zext_ln65_fu_983_p1 );

    SC_METHOD(thread_sub_ln68_fu_847_p2);
    sensitive << ( zext_ln68_fu_831_p1 );
    sensitive << ( zext_ln68_1_fu_843_p1 );

    SC_METHOD(thread_sub_ln69_fu_1439_p2);
    sensitive << ( trunc_ln69_reg_2015 );
    sensitive << ( p_shl2_cast_fu_1432_p3 );

    SC_METHOD(thread_tiles_address0);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( zext_ln61_reg_1712 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_tiles_address1);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_tiles_ce0);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_tiles_ce1);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_tiles_d0);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( wleft );
    sensitive << ( wtop );
    sensitive << ( wfront );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_tiles_d1);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( wright );
    sensitive << ( wbottom );
    sensitive << ( wback );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_tiles_we0);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_tiles_we1);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_tmp_10_fu_1040_p4);
    sensitive << ( bitcast_ln66_1_fu_1037_p1 );

    SC_METHOD(thread_tmp_14_fu_1546_p4);
    sensitive << ( bitcast_ln75_fu_1542_p1 );

    SC_METHOD(thread_tmp_15_fu_1576_p4);
    sensitive << ( bitcast_ln76_fu_1572_p1 );

    SC_METHOD(thread_tmp_16_fu_823_p3);
    sensitive << ( i_0_reg_720 );

    SC_METHOD(thread_tmp_17_fu_835_p3);
    sensitive << ( i_0_reg_720 );

    SC_METHOD(thread_tmp_18_fu_853_p3);
    sensitive << ( i_0_reg_720 );

    SC_METHOD(thread_tmp_19_fu_876_p3);
    sensitive << ( or_ln66_2_fu_870_p2 );

    SC_METHOD(thread_tmp_20_fu_891_p3);
    sensitive << ( or_ln66_3_fu_885_p2 );

    SC_METHOD(thread_tmp_21_fu_906_p3);
    sensitive << ( or_ln66_4_fu_900_p2 );

    SC_METHOD(thread_tmp_22_fu_921_p3);
    sensitive << ( tiles_q0 );

    SC_METHOD(thread_tmp_23_fu_973_p4);
    sensitive << ( sub_ln64_fu_941_p2 );

    SC_METHOD(thread_tmp_24_fu_993_p4);
    sensitive << ( tiles_q0 );

    SC_METHOD(thread_tmp_25_fu_1383_p4);
    sensitive << ( r_V_1_fu_1365_p2 );

    SC_METHOD(thread_tmp_26_fu_1500_p3);
    sensitive << ( trunc_ln75_1_fu_1496_p1 );

    SC_METHOD(thread_tmp_27_fu_1371_p3);
    sensitive << ( r_V_fu_1359_p2 );

    SC_METHOD(thread_tmp_28_fu_1471_p3);
    sensitive << ( add_ln69_1_reg_2009 );

    SC_METHOD(thread_tmp_29_fu_1524_p3);
    sensitive << ( trunc_ln76_1_fu_1520_p1 );

    SC_METHOD(thread_tmp_4_fu_1023_p4);
    sensitive << ( bitcast_ln66_fu_1019_p1 );

    SC_METHOD(thread_tmp_V_1_fu_1293_p1);
    sensitive << ( p_Val2_s_fu_1272_p1 );

    SC_METHOD(thread_tmp_V_fu_1283_p4);
    sensitive << ( p_Val2_s_fu_1272_p1 );

    SC_METHOD(thread_trunc_ln60_fu_1107_p1);
    sensitive << ( d_0_idx_fu_196 );

    SC_METHOD(thread_trunc_ln64_1_fu_947_p1);
    sensitive << ( sub_ln64_fu_941_p2 );

    SC_METHOD(thread_trunc_ln64_fu_929_p1);
    sensitive << ( tiles_q0 );

    SC_METHOD(thread_trunc_ln66_1_fu_1050_p1);
    sensitive << ( bitcast_ln66_1_fu_1037_p1 );

    SC_METHOD(thread_trunc_ln66_fu_1033_p1);
    sensitive << ( bitcast_ln66_fu_1019_p1 );

    SC_METHOD(thread_trunc_ln69_1_fu_1428_p1);
    sensitive << ( add_ln69_1_fu_1419_p2 );

    SC_METHOD(thread_trunc_ln69_fu_1424_p1);
    sensitive << ( add_ln69_1_fu_1419_p2 );

    SC_METHOD(thread_trunc_ln75_1_fu_1496_p1);
    sensitive << ( lshr_ln75_fu_1490_p2 );

    SC_METHOD(thread_trunc_ln75_fu_1556_p1);
    sensitive << ( bitcast_ln75_fu_1542_p1 );

    SC_METHOD(thread_trunc_ln76_1_fu_1520_p1);
    sensitive << ( lshr_ln76_fu_1514_p2 );

    SC_METHOD(thread_trunc_ln76_fu_1586_p1);
    sensitive << ( bitcast_ln76_fu_1572_p1 );

    SC_METHOD(thread_ush_fu_1339_p3);
    sensitive << ( add_ln339_fu_1315_p2 );
    sensitive << ( isNeg_fu_1321_p3 );
    sensitive << ( sext_ln1311_fu_1335_p1 );

    SC_METHOD(thread_uvs_address0);
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( sext_ln75_fu_1478_p1 );

    SC_METHOD(thread_uvs_address1);
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( or_ln76_1_fu_1483_p2 );

    SC_METHOD(thread_uvs_ce0);
    sensitive << ( ap_CS_fsm_state26 );

    SC_METHOD(thread_uvs_ce1);
    sensitive << ( ap_CS_fsm_state26 );

    SC_METHOD(thread_v_fu_1179_p2);
    sensitive << ( v_0_reg_743 );

    SC_METHOD(thread_zext_ln1287_fu_1355_p1);
    sensitive << ( sext_ln1311_1_fu_1347_p1 );

    SC_METHOD(thread_zext_ln339_fu_1311_p1);
    sensitive << ( tmp_V_fu_1283_p4 );

    SC_METHOD(thread_zext_ln61_fu_818_p1);
    sensitive << ( i_0_reg_720 );

    SC_METHOD(thread_zext_ln65_1_fu_1003_p1);
    sensitive << ( tmp_24_fu_993_p4 );

    SC_METHOD(thread_zext_ln65_fu_983_p1);
    sensitive << ( tmp_23_fu_973_p4 );

    SC_METHOD(thread_zext_ln662_fu_1379_p1);
    sensitive << ( tmp_27_fu_1371_p3 );

    SC_METHOD(thread_zext_ln66_fu_866_p1);
    sensitive << ( tmp_18_fu_853_p3 );

    SC_METHOD(thread_zext_ln682_fu_1307_p1);
    sensitive << ( mantissa_V_fu_1297_p4 );

    SC_METHOD(thread_zext_ln68_1_fu_843_p1);
    sensitive << ( tmp_17_fu_835_p3 );

    SC_METHOD(thread_zext_ln68_2_fu_1185_p1);
    sensitive << ( v_0_reg_743 );

    SC_METHOD(thread_zext_ln68_fu_831_p1);
    sensitive << ( tmp_16_fu_823_p3 );

    SC_METHOD(thread_zext_ln69_1_fu_1538_p1);
    sensitive << ( add_ln69_reg_1954 );

    SC_METHOD(thread_zext_ln69_2_fu_861_p1);
    sensitive << ( tmp_18_fu_853_p3 );

    SC_METHOD(thread_zext_ln69_3_fu_1444_p1);
    sensitive << ( sub_ln69_fu_1439_p2 );

    SC_METHOD(thread_zext_ln69_fu_1206_p1);
    sensitive << ( or_ln69_fu_1200_p2 );

    SC_METHOD(thread_zext_ln70_1_fu_1455_p1);
    sensitive << ( add_ln70_2_fu_1449_p2 );

    SC_METHOD(thread_zext_ln70_fu_1602_p1);
    sensitive << ( add_ln70_1_reg_1959 );

    SC_METHOD(thread_zext_ln71_1_fu_1466_p1);
    sensitive << ( add_ln71_2_fu_1460_p2 );

    SC_METHOD(thread_zext_ln71_fu_1642_p1);
    sensitive << ( add_ln71_1_reg_1964 );

    SC_METHOD(thread_zext_ln72_fu_1646_p1);
    sensitive << ( add_ln72_1_reg_1969 );

    SC_METHOD(thread_zext_ln73_fu_1650_p1);
    sensitive << ( add_ln73_1_reg_1974 );

    SC_METHOD(thread_zext_ln74_fu_1654_p1);
    sensitive << ( add_ln74_1_reg_1979 );

    SC_METHOD(thread_zext_ln75_fu_1663_p1);
    sensitive << ( add_ln75_1_reg_1984 );

    SC_METHOD(thread_zext_ln76_fu_1667_p1);
    sensitive << ( add_ln76_1_reg_1989 );

    SC_METHOD(thread_zext_ln77_fu_1671_p1);
    sensitive << ( add_ln77_1_reg_1994 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( icmp_ln60_fu_806_p2 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( icmp_ln61_fu_915_p2 );
    sensitive << ( icmp_ln61_reg_1755 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( icmp_ln67_fu_1173_p2 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    SC_THREAD(thread_ap_var_for_const1);

    ap_CS_fsm = "00000000000000000000000000000000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "make_cube_faces_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, data_address0, "(port)data_address0");
    sc_trace(mVcdFile, data_ce0, "(port)data_ce0");
    sc_trace(mVcdFile, data_we0, "(port)data_we0");
    sc_trace(mVcdFile, data_d0, "(port)data_d0");
    sc_trace(mVcdFile, ao_address0, "(port)ao_address0");
    sc_trace(mVcdFile, ao_ce0, "(port)ao_ce0");
    sc_trace(mVcdFile, ao_q0, "(port)ao_q0");
    sc_trace(mVcdFile, ao_address1, "(port)ao_address1");
    sc_trace(mVcdFile, ao_ce1, "(port)ao_ce1");
    sc_trace(mVcdFile, ao_q1, "(port)ao_q1");
    sc_trace(mVcdFile, light_address0, "(port)light_address0");
    sc_trace(mVcdFile, light_ce0, "(port)light_ce0");
    sc_trace(mVcdFile, light_q0, "(port)light_q0");
    sc_trace(mVcdFile, left_r, "(port)left_r");
    sc_trace(mVcdFile, right_r, "(port)right_r");
    sc_trace(mVcdFile, top, "(port)top");
    sc_trace(mVcdFile, bottom, "(port)bottom");
    sc_trace(mVcdFile, front, "(port)front");
    sc_trace(mVcdFile, back, "(port)back");
    sc_trace(mVcdFile, wleft, "(port)wleft");
    sc_trace(mVcdFile, wright, "(port)wright");
    sc_trace(mVcdFile, wtop, "(port)wtop");
    sc_trace(mVcdFile, wbottom, "(port)wbottom");
    sc_trace(mVcdFile, wfront, "(port)wfront");
    sc_trace(mVcdFile, wback, "(port)wback");
    sc_trace(mVcdFile, x, "(port)x");
    sc_trace(mVcdFile, y, "(port)y");
    sc_trace(mVcdFile, z, "(port)z");
    sc_trace(mVcdFile, n, "(port)n");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, normals_0_address0, "normals_0_address0");
    sc_trace(mVcdFile, normals_0_ce0, "normals_0_ce0");
    sc_trace(mVcdFile, normals_0_q0, "normals_0_q0");
    sc_trace(mVcdFile, normals_1_address0, "normals_1_address0");
    sc_trace(mVcdFile, normals_1_ce0, "normals_1_ce0");
    sc_trace(mVcdFile, normals_1_q0, "normals_1_q0");
    sc_trace(mVcdFile, normals_2_address0, "normals_2_address0");
    sc_trace(mVcdFile, normals_2_ce0, "normals_2_ce0");
    sc_trace(mVcdFile, normals_2_q0, "normals_2_q0");
    sc_trace(mVcdFile, flipped_address0, "flipped_address0");
    sc_trace(mVcdFile, flipped_ce0, "flipped_ce0");
    sc_trace(mVcdFile, flipped_q0, "flipped_q0");
    sc_trace(mVcdFile, indices_address0, "indices_address0");
    sc_trace(mVcdFile, indices_ce0, "indices_ce0");
    sc_trace(mVcdFile, indices_q0, "indices_q0");
    sc_trace(mVcdFile, positions_address0, "positions_address0");
    sc_trace(mVcdFile, positions_ce0, "positions_ce0");
    sc_trace(mVcdFile, positions_q0, "positions_q0");
    sc_trace(mVcdFile, positions_address1, "positions_address1");
    sc_trace(mVcdFile, positions_ce1, "positions_ce1");
    sc_trace(mVcdFile, positions_q1, "positions_q1");
    sc_trace(mVcdFile, positions_address2, "positions_address2");
    sc_trace(mVcdFile, positions_ce2, "positions_ce2");
    sc_trace(mVcdFile, positions_q2, "positions_q2");
    sc_trace(mVcdFile, uvs_address0, "uvs_address0");
    sc_trace(mVcdFile, uvs_ce0, "uvs_ce0");
    sc_trace(mVcdFile, uvs_q0, "uvs_q0");
    sc_trace(mVcdFile, uvs_address1, "uvs_address1");
    sc_trace(mVcdFile, uvs_ce1, "uvs_ce1");
    sc_trace(mVcdFile, uvs_q1, "uvs_q1");
    sc_trace(mVcdFile, grp_fu_754_p2, "grp_fu_754_p2");
    sc_trace(mVcdFile, reg_790, "reg_790");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, ap_CS_fsm_state25, "ap_CS_fsm_state25");
    sc_trace(mVcdFile, ap_CS_fsm_state31, "ap_CS_fsm_state31");
    sc_trace(mVcdFile, grp_fu_758_p2, "grp_fu_758_p2");
    sc_trace(mVcdFile, reg_796, "reg_796");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, i_fu_812_p2, "i_fu_812_p2");
    sc_trace(mVcdFile, i_reg_1707, "i_reg_1707");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, zext_ln61_fu_818_p1, "zext_ln61_fu_818_p1");
    sc_trace(mVcdFile, zext_ln61_reg_1712, "zext_ln61_reg_1712");
    sc_trace(mVcdFile, icmp_ln60_fu_806_p2, "icmp_ln60_fu_806_p2");
    sc_trace(mVcdFile, sub_ln68_fu_847_p2, "sub_ln68_fu_847_p2");
    sc_trace(mVcdFile, sub_ln68_reg_1725, "sub_ln68_reg_1725");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, zext_ln66_fu_866_p1, "zext_ln66_fu_866_p1");
    sc_trace(mVcdFile, zext_ln66_reg_1730, "zext_ln66_reg_1730");
    sc_trace(mVcdFile, ao_addr_2_reg_1745, "ao_addr_2_reg_1745");
    sc_trace(mVcdFile, ao_addr_3_reg_1750, "ao_addr_3_reg_1750");
    sc_trace(mVcdFile, icmp_ln61_fu_915_p2, "icmp_ln61_fu_915_p2");
    sc_trace(mVcdFile, icmp_ln61_reg_1755, "icmp_ln61_reg_1755");
    sc_trace(mVcdFile, select_ln64_fu_965_p3, "select_ln64_fu_965_p3");
    sc_trace(mVcdFile, select_ln64_reg_1764, "select_ln64_reg_1764");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, select_ln65_fu_1007_p3, "select_ln65_fu_1007_p3");
    sc_trace(mVcdFile, select_ln65_reg_1769, "select_ln65_reg_1769");
    sc_trace(mVcdFile, ao_load_reg_1774, "ao_load_reg_1774");
    sc_trace(mVcdFile, ao_load_1_reg_1779, "ao_load_1_reg_1779");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, ao_load_2_reg_1789, "ao_load_2_reg_1789");
    sc_trace(mVcdFile, ao_load_3_reg_1794, "ao_load_3_reg_1794");
    sc_trace(mVcdFile, grp_fu_780_p1, "grp_fu_780_p1");
    sc_trace(mVcdFile, tmp_reg_1799, "tmp_reg_1799");
    sc_trace(mVcdFile, grp_fu_783_p1, "grp_fu_783_p1");
    sc_trace(mVcdFile, tmp_1_reg_1804, "tmp_1_reg_1804");
    sc_trace(mVcdFile, tmp_3_reg_1809, "tmp_3_reg_1809");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, icmp_ln66_fu_1054_p2, "icmp_ln66_fu_1054_p2");
    sc_trace(mVcdFile, icmp_ln66_reg_1815, "icmp_ln66_reg_1815");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, icmp_ln66_1_fu_1060_p2, "icmp_ln66_1_fu_1060_p2");
    sc_trace(mVcdFile, icmp_ln66_1_reg_1820, "icmp_ln66_1_reg_1820");
    sc_trace(mVcdFile, icmp_ln66_2_fu_1066_p2, "icmp_ln66_2_fu_1066_p2");
    sc_trace(mVcdFile, icmp_ln66_2_reg_1825, "icmp_ln66_2_reg_1825");
    sc_trace(mVcdFile, icmp_ln66_3_fu_1072_p2, "icmp_ln66_3_fu_1072_p2");
    sc_trace(mVcdFile, icmp_ln66_3_reg_1830, "icmp_ln66_3_reg_1830");
    sc_trace(mVcdFile, grp_fu_766_p2, "grp_fu_766_p2");
    sc_trace(mVcdFile, du_reg_1850, "du_reg_1850");
    sc_trace(mVcdFile, ap_CS_fsm_state13, "ap_CS_fsm_state13");
    sc_trace(mVcdFile, grp_fu_771_p2, "grp_fu_771_p2");
    sc_trace(mVcdFile, dv_reg_1855, "dv_reg_1855");
    sc_trace(mVcdFile, and_ln66_1_fu_1095_p2, "and_ln66_1_fu_1095_p2");
    sc_trace(mVcdFile, and_ln66_1_reg_1860, "and_ln66_1_reg_1860");
    sc_trace(mVcdFile, normals_0_load_reg_1865, "normals_0_load_reg_1865");
    sc_trace(mVcdFile, normals_1_load_reg_1870, "normals_1_load_reg_1870");
    sc_trace(mVcdFile, normals_2_load_reg_1875, "normals_2_load_reg_1875");
    sc_trace(mVcdFile, add_ln67_fu_1101_p2, "add_ln67_fu_1101_p2");
    sc_trace(mVcdFile, add_ln67_reg_1880, "add_ln67_reg_1880");
    sc_trace(mVcdFile, trunc_ln60_fu_1107_p1, "trunc_ln60_fu_1107_p1");
    sc_trace(mVcdFile, trunc_ln60_reg_1885, "trunc_ln60_reg_1885");
    sc_trace(mVcdFile, add_ln70_fu_1111_p2, "add_ln70_fu_1111_p2");
    sc_trace(mVcdFile, add_ln70_reg_1891, "add_ln70_reg_1891");
    sc_trace(mVcdFile, add_ln71_fu_1117_p2, "add_ln71_fu_1117_p2");
    sc_trace(mVcdFile, add_ln71_reg_1896, "add_ln71_reg_1896");
    sc_trace(mVcdFile, add_ln72_fu_1123_p2, "add_ln72_fu_1123_p2");
    sc_trace(mVcdFile, add_ln72_reg_1901, "add_ln72_reg_1901");
    sc_trace(mVcdFile, add_ln73_fu_1129_p2, "add_ln73_fu_1129_p2");
    sc_trace(mVcdFile, add_ln73_reg_1906, "add_ln73_reg_1906");
    sc_trace(mVcdFile, add_ln74_fu_1135_p2, "add_ln74_fu_1135_p2");
    sc_trace(mVcdFile, add_ln74_reg_1911, "add_ln74_reg_1911");
    sc_trace(mVcdFile, add_ln75_fu_1141_p2, "add_ln75_fu_1141_p2");
    sc_trace(mVcdFile, add_ln75_reg_1916, "add_ln75_reg_1916");
    sc_trace(mVcdFile, add_ln76_fu_1147_p2, "add_ln76_fu_1147_p2");
    sc_trace(mVcdFile, add_ln76_reg_1921, "add_ln76_reg_1921");
    sc_trace(mVcdFile, add_ln77_fu_1153_p2, "add_ln77_fu_1153_p2");
    sc_trace(mVcdFile, add_ln77_reg_1926, "add_ln77_reg_1926");
    sc_trace(mVcdFile, data_addr_reg_1931, "data_addr_reg_1931");
    sc_trace(mVcdFile, ap_CS_fsm_state14, "ap_CS_fsm_state14");
    sc_trace(mVcdFile, v_fu_1179_p2, "v_fu_1179_p2");
    sc_trace(mVcdFile, v_reg_1939, "v_reg_1939");
    sc_trace(mVcdFile, icmp_ln67_fu_1173_p2, "icmp_ln67_fu_1173_p2");
    sc_trace(mVcdFile, add_ln69_fu_1210_p2, "add_ln69_fu_1210_p2");
    sc_trace(mVcdFile, add_ln69_reg_1954, "add_ln69_reg_1954");
    sc_trace(mVcdFile, add_ln70_1_fu_1215_p2, "add_ln70_1_fu_1215_p2");
    sc_trace(mVcdFile, add_ln70_1_reg_1959, "add_ln70_1_reg_1959");
    sc_trace(mVcdFile, add_ln71_1_fu_1220_p2, "add_ln71_1_fu_1220_p2");
    sc_trace(mVcdFile, add_ln71_1_reg_1964, "add_ln71_1_reg_1964");
    sc_trace(mVcdFile, add_ln72_1_fu_1225_p2, "add_ln72_1_fu_1225_p2");
    sc_trace(mVcdFile, add_ln72_1_reg_1969, "add_ln72_1_reg_1969");
    sc_trace(mVcdFile, add_ln73_1_fu_1230_p2, "add_ln73_1_fu_1230_p2");
    sc_trace(mVcdFile, add_ln73_1_reg_1974, "add_ln73_1_reg_1974");
    sc_trace(mVcdFile, add_ln74_1_fu_1235_p2, "add_ln74_1_fu_1235_p2");
    sc_trace(mVcdFile, add_ln74_1_reg_1979, "add_ln74_1_reg_1979");
    sc_trace(mVcdFile, add_ln75_1_fu_1240_p2, "add_ln75_1_fu_1240_p2");
    sc_trace(mVcdFile, add_ln75_1_reg_1984, "add_ln75_1_reg_1984");
    sc_trace(mVcdFile, add_ln76_1_fu_1245_p2, "add_ln76_1_fu_1245_p2");
    sc_trace(mVcdFile, add_ln76_1_reg_1989, "add_ln76_1_reg_1989");
    sc_trace(mVcdFile, add_ln77_1_fu_1250_p2, "add_ln77_1_fu_1250_p2");
    sc_trace(mVcdFile, add_ln77_1_reg_1994, "add_ln77_1_reg_1994");
    sc_trace(mVcdFile, add_ln78_fu_1255_p2, "add_ln78_fu_1255_p2");
    sc_trace(mVcdFile, add_ln78_reg_1999, "add_ln78_reg_1999");
    sc_trace(mVcdFile, select_ln66_fu_1265_p3, "select_ln66_fu_1265_p3");
    sc_trace(mVcdFile, select_ln66_reg_2004, "select_ln66_reg_2004");
    sc_trace(mVcdFile, ap_CS_fsm_state15, "ap_CS_fsm_state15");
    sc_trace(mVcdFile, add_ln69_1_fu_1419_p2, "add_ln69_1_fu_1419_p2");
    sc_trace(mVcdFile, add_ln69_1_reg_2009, "add_ln69_1_reg_2009");
    sc_trace(mVcdFile, ap_CS_fsm_state16, "ap_CS_fsm_state16");
    sc_trace(mVcdFile, trunc_ln69_fu_1424_p1, "trunc_ln69_fu_1424_p1");
    sc_trace(mVcdFile, trunc_ln69_reg_2015, "trunc_ln69_reg_2015");
    sc_trace(mVcdFile, trunc_ln69_1_fu_1428_p1, "trunc_ln69_1_fu_1428_p1");
    sc_trace(mVcdFile, trunc_ln69_1_reg_2020, "trunc_ln69_1_reg_2020");
    sc_trace(mVcdFile, ap_CS_fsm_state17, "ap_CS_fsm_state17");
    sc_trace(mVcdFile, positions_load_reg_2040, "positions_load_reg_2040");
    sc_trace(mVcdFile, ap_CS_fsm_state18, "ap_CS_fsm_state18");
    sc_trace(mVcdFile, positions_load_1_reg_2045, "positions_load_1_reg_2045");
    sc_trace(mVcdFile, positions_load_2_reg_2050, "positions_load_2_reg_2050");
    sc_trace(mVcdFile, tmp_5_reg_2055, "tmp_5_reg_2055");
    sc_trace(mVcdFile, ap_CS_fsm_state21, "ap_CS_fsm_state21");
    sc_trace(mVcdFile, tmp_7_reg_2060, "tmp_7_reg_2060");
    sc_trace(mVcdFile, grp_fu_776_p2, "grp_fu_776_p2");
    sc_trace(mVcdFile, tmp_9_reg_2065, "tmp_9_reg_2065");
    sc_trace(mVcdFile, grp_fu_762_p2, "grp_fu_762_p2");
    sc_trace(mVcdFile, tmp_s_reg_2070, "tmp_s_reg_2070");
    sc_trace(mVcdFile, ap_CS_fsm_state26, "ap_CS_fsm_state26");
    sc_trace(mVcdFile, icmp_ln75_2_fu_1508_p2, "icmp_ln75_2_fu_1508_p2");
    sc_trace(mVcdFile, icmp_ln75_2_reg_2085, "icmp_ln75_2_reg_2085");
    sc_trace(mVcdFile, icmp_ln76_2_fu_1532_p2, "icmp_ln76_2_fu_1532_p2");
    sc_trace(mVcdFile, icmp_ln76_2_reg_2090, "icmp_ln76_2_reg_2090");
    sc_trace(mVcdFile, icmp_ln75_fu_1560_p2, "icmp_ln75_fu_1560_p2");
    sc_trace(mVcdFile, icmp_ln75_reg_2095, "icmp_ln75_reg_2095");
    sc_trace(mVcdFile, ap_CS_fsm_state27, "ap_CS_fsm_state27");
    sc_trace(mVcdFile, icmp_ln75_1_fu_1566_p2, "icmp_ln75_1_fu_1566_p2");
    sc_trace(mVcdFile, icmp_ln75_1_reg_2100, "icmp_ln75_1_reg_2100");
    sc_trace(mVcdFile, icmp_ln76_fu_1590_p2, "icmp_ln76_fu_1590_p2");
    sc_trace(mVcdFile, icmp_ln76_reg_2105, "icmp_ln76_reg_2105");
    sc_trace(mVcdFile, icmp_ln76_1_fu_1596_p2, "icmp_ln76_1_fu_1596_p2");
    sc_trace(mVcdFile, icmp_ln76_1_reg_2110, "icmp_ln76_1_reg_2110");
    sc_trace(mVcdFile, select_ln75_fu_1615_p3, "select_ln75_fu_1615_p3");
    sc_trace(mVcdFile, ap_CS_fsm_state28, "ap_CS_fsm_state28");
    sc_trace(mVcdFile, select_ln76_fu_1633_p3, "select_ln76_fu_1633_p3");
    sc_trace(mVcdFile, ap_CS_fsm_state33, "ap_CS_fsm_state33");
    sc_trace(mVcdFile, light_load_reg_2135, "light_load_reg_2135");
    sc_trace(mVcdFile, ap_CS_fsm_state34, "ap_CS_fsm_state34");
    sc_trace(mVcdFile, faces_address0, "faces_address0");
    sc_trace(mVcdFile, faces_ce0, "faces_ce0");
    sc_trace(mVcdFile, faces_we0, "faces_we0");
    sc_trace(mVcdFile, faces_d0, "faces_d0");
    sc_trace(mVcdFile, faces_q0, "faces_q0");
    sc_trace(mVcdFile, faces_address1, "faces_address1");
    sc_trace(mVcdFile, faces_ce1, "faces_ce1");
    sc_trace(mVcdFile, faces_we1, "faces_we1");
    sc_trace(mVcdFile, faces_d1, "faces_d1");
    sc_trace(mVcdFile, tiles_address0, "tiles_address0");
    sc_trace(mVcdFile, tiles_ce0, "tiles_ce0");
    sc_trace(mVcdFile, tiles_we0, "tiles_we0");
    sc_trace(mVcdFile, tiles_d0, "tiles_d0");
    sc_trace(mVcdFile, tiles_q0, "tiles_q0");
    sc_trace(mVcdFile, tiles_address1, "tiles_address1");
    sc_trace(mVcdFile, tiles_ce1, "tiles_ce1");
    sc_trace(mVcdFile, tiles_we1, "tiles_we1");
    sc_trace(mVcdFile, tiles_d1, "tiles_d1");
    sc_trace(mVcdFile, i_0_reg_720, "i_0_reg_720");
    sc_trace(mVcdFile, d_1_rec_reg_732, "d_1_rec_reg_732");
    sc_trace(mVcdFile, ap_CS_fsm_state35, "ap_CS_fsm_state35");
    sc_trace(mVcdFile, v_0_reg_743, "v_0_reg_743");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, zext_ln69_2_fu_861_p1, "zext_ln69_2_fu_861_p1");
    sc_trace(mVcdFile, tmp_19_fu_876_p3, "tmp_19_fu_876_p3");
    sc_trace(mVcdFile, tmp_20_fu_891_p3, "tmp_20_fu_891_p3");
    sc_trace(mVcdFile, tmp_21_fu_906_p3, "tmp_21_fu_906_p3");
    sc_trace(mVcdFile, d_0_idx9_cast_fu_1168_p1, "d_0_idx9_cast_fu_1168_p1");
    sc_trace(mVcdFile, sext_ln68_fu_1194_p1, "sext_ln68_fu_1194_p1");
    sc_trace(mVcdFile, zext_ln69_3_fu_1444_p1, "zext_ln69_3_fu_1444_p1");
    sc_trace(mVcdFile, zext_ln70_1_fu_1455_p1, "zext_ln70_1_fu_1455_p1");
    sc_trace(mVcdFile, zext_ln71_1_fu_1466_p1, "zext_ln71_1_fu_1466_p1");
    sc_trace(mVcdFile, sext_ln75_fu_1478_p1, "sext_ln75_fu_1478_p1");
    sc_trace(mVcdFile, or_ln76_1_fu_1483_p2, "or_ln76_1_fu_1483_p2");
    sc_trace(mVcdFile, zext_ln69_1_fu_1538_p1, "zext_ln69_1_fu_1538_p1");
    sc_trace(mVcdFile, zext_ln70_fu_1602_p1, "zext_ln70_fu_1602_p1");
    sc_trace(mVcdFile, zext_ln71_fu_1642_p1, "zext_ln71_fu_1642_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state29, "ap_CS_fsm_state29");
    sc_trace(mVcdFile, zext_ln72_fu_1646_p1, "zext_ln72_fu_1646_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state30, "ap_CS_fsm_state30");
    sc_trace(mVcdFile, zext_ln73_fu_1650_p1, "zext_ln73_fu_1650_p1");
    sc_trace(mVcdFile, zext_ln74_fu_1654_p1, "zext_ln74_fu_1654_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state32, "ap_CS_fsm_state32");
    sc_trace(mVcdFile, sext_ln69_1_fu_1658_p1, "sext_ln69_1_fu_1658_p1");
    sc_trace(mVcdFile, zext_ln75_fu_1663_p1, "zext_ln75_fu_1663_p1");
    sc_trace(mVcdFile, zext_ln76_fu_1667_p1, "zext_ln76_fu_1667_p1");
    sc_trace(mVcdFile, zext_ln77_fu_1671_p1, "zext_ln77_fu_1671_p1");
    sc_trace(mVcdFile, d_0_idx_fu_196, "d_0_idx_fu_196");
    sc_trace(mVcdFile, grp_fu_754_p0, "grp_fu_754_p0");
    sc_trace(mVcdFile, grp_fu_754_p1, "grp_fu_754_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, ap_CS_fsm_state22, "ap_CS_fsm_state22");
    sc_trace(mVcdFile, grp_fu_758_p0, "grp_fu_758_p0");
    sc_trace(mVcdFile, grp_fu_758_p1, "grp_fu_758_p1");
    sc_trace(mVcdFile, grp_fu_766_p0, "grp_fu_766_p0");
    sc_trace(mVcdFile, grp_fu_766_p1, "grp_fu_766_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state19, "ap_CS_fsm_state19");
    sc_trace(mVcdFile, grp_fu_771_p0, "grp_fu_771_p0");
    sc_trace(mVcdFile, grp_fu_771_p1, "grp_fu_771_p1");
    sc_trace(mVcdFile, grp_fu_783_p0, "grp_fu_783_p0");
    sc_trace(mVcdFile, tmp_16_fu_823_p3, "tmp_16_fu_823_p3");
    sc_trace(mVcdFile, tmp_17_fu_835_p3, "tmp_17_fu_835_p3");
    sc_trace(mVcdFile, zext_ln68_fu_831_p1, "zext_ln68_fu_831_p1");
    sc_trace(mVcdFile, zext_ln68_1_fu_843_p1, "zext_ln68_1_fu_843_p1");
    sc_trace(mVcdFile, tmp_18_fu_853_p3, "tmp_18_fu_853_p3");
    sc_trace(mVcdFile, or_ln66_2_fu_870_p2, "or_ln66_2_fu_870_p2");
    sc_trace(mVcdFile, or_ln66_3_fu_885_p2, "or_ln66_3_fu_885_p2");
    sc_trace(mVcdFile, or_ln66_4_fu_900_p2, "or_ln66_4_fu_900_p2");
    sc_trace(mVcdFile, trunc_ln64_fu_929_p1, "trunc_ln64_fu_929_p1");
    sc_trace(mVcdFile, sub_ln64_fu_941_p2, "sub_ln64_fu_941_p2");
    sc_trace(mVcdFile, trunc_ln64_1_fu_947_p1, "trunc_ln64_1_fu_947_p1");
    sc_trace(mVcdFile, p_and_t_fu_951_p3, "p_and_t_fu_951_p3");
    sc_trace(mVcdFile, tmp_22_fu_921_p3, "tmp_22_fu_921_p3");
    sc_trace(mVcdFile, sub_ln64_1_fu_959_p2, "sub_ln64_1_fu_959_p2");
    sc_trace(mVcdFile, p_and_f_fu_933_p3, "p_and_f_fu_933_p3");
    sc_trace(mVcdFile, tmp_23_fu_973_p4, "tmp_23_fu_973_p4");
    sc_trace(mVcdFile, zext_ln65_fu_983_p1, "zext_ln65_fu_983_p1");
    sc_trace(mVcdFile, tmp_24_fu_993_p4, "tmp_24_fu_993_p4");
    sc_trace(mVcdFile, sub_ln65_fu_987_p2, "sub_ln65_fu_987_p2");
    sc_trace(mVcdFile, zext_ln65_1_fu_1003_p1, "zext_ln65_1_fu_1003_p1");
    sc_trace(mVcdFile, bitcast_ln66_fu_1019_p1, "bitcast_ln66_fu_1019_p1");
    sc_trace(mVcdFile, bitcast_ln66_1_fu_1037_p1, "bitcast_ln66_1_fu_1037_p1");
    sc_trace(mVcdFile, tmp_4_fu_1023_p4, "tmp_4_fu_1023_p4");
    sc_trace(mVcdFile, trunc_ln66_fu_1033_p1, "trunc_ln66_fu_1033_p1");
    sc_trace(mVcdFile, tmp_10_fu_1040_p4, "tmp_10_fu_1040_p4");
    sc_trace(mVcdFile, trunc_ln66_1_fu_1050_p1, "trunc_ln66_1_fu_1050_p1");
    sc_trace(mVcdFile, or_ln66_fu_1081_p2, "or_ln66_fu_1081_p2");
    sc_trace(mVcdFile, or_ln66_1_fu_1085_p2, "or_ln66_1_fu_1085_p2");
    sc_trace(mVcdFile, and_ln66_fu_1089_p2, "and_ln66_fu_1089_p2");
    sc_trace(mVcdFile, grp_fu_786_p2, "grp_fu_786_p2");
    sc_trace(mVcdFile, d_1_rec_cast_fu_1159_p1, "d_1_rec_cast_fu_1159_p1");
    sc_trace(mVcdFile, d_0_idx9_fu_1163_p2, "d_0_idx9_fu_1163_p2");
    sc_trace(mVcdFile, zext_ln68_2_fu_1185_p1, "zext_ln68_2_fu_1185_p1");
    sc_trace(mVcdFile, add_ln68_fu_1189_p2, "add_ln68_fu_1189_p2");
    sc_trace(mVcdFile, or_ln69_fu_1200_p2, "or_ln69_fu_1200_p2");
    sc_trace(mVcdFile, zext_ln69_fu_1206_p1, "zext_ln69_fu_1206_p1");
    sc_trace(mVcdFile, p_Val2_s_fu_1272_p1, "p_Val2_s_fu_1272_p1");
    sc_trace(mVcdFile, tmp_V_1_fu_1293_p1, "tmp_V_1_fu_1293_p1");
    sc_trace(mVcdFile, mantissa_V_fu_1297_p4, "mantissa_V_fu_1297_p4");
    sc_trace(mVcdFile, tmp_V_fu_1283_p4, "tmp_V_fu_1283_p4");
    sc_trace(mVcdFile, zext_ln339_fu_1311_p1, "zext_ln339_fu_1311_p1");
    sc_trace(mVcdFile, add_ln339_fu_1315_p2, "add_ln339_fu_1315_p2");
    sc_trace(mVcdFile, sub_ln1311_fu_1329_p2, "sub_ln1311_fu_1329_p2");
    sc_trace(mVcdFile, isNeg_fu_1321_p3, "isNeg_fu_1321_p3");
    sc_trace(mVcdFile, sext_ln1311_fu_1335_p1, "sext_ln1311_fu_1335_p1");
    sc_trace(mVcdFile, ush_fu_1339_p3, "ush_fu_1339_p3");
    sc_trace(mVcdFile, sext_ln1311_1_fu_1347_p1, "sext_ln1311_1_fu_1347_p1");
    sc_trace(mVcdFile, sext_ln1311_2_fu_1351_p1, "sext_ln1311_2_fu_1351_p1");
    sc_trace(mVcdFile, zext_ln682_fu_1307_p1, "zext_ln682_fu_1307_p1");
    sc_trace(mVcdFile, zext_ln1287_fu_1355_p1, "zext_ln1287_fu_1355_p1");
    sc_trace(mVcdFile, r_V_fu_1359_p2, "r_V_fu_1359_p2");
    sc_trace(mVcdFile, tmp_27_fu_1371_p3, "tmp_27_fu_1371_p3");
    sc_trace(mVcdFile, r_V_1_fu_1365_p2, "r_V_1_fu_1365_p2");
    sc_trace(mVcdFile, zext_ln662_fu_1379_p1, "zext_ln662_fu_1379_p1");
    sc_trace(mVcdFile, tmp_25_fu_1383_p4, "tmp_25_fu_1383_p4");
    sc_trace(mVcdFile, p_Val2_4_fu_1393_p3, "p_Val2_4_fu_1393_p3");
    sc_trace(mVcdFile, p_Result_s_fu_1275_p3, "p_Result_s_fu_1275_p3");
    sc_trace(mVcdFile, result_V_1_fu_1401_p2, "result_V_1_fu_1401_p2");
    sc_trace(mVcdFile, select_ln59_fu_1407_p3, "select_ln59_fu_1407_p3");
    sc_trace(mVcdFile, sext_ln69_fu_1415_p1, "sext_ln69_fu_1415_p1");
    sc_trace(mVcdFile, p_shl2_cast_fu_1432_p3, "p_shl2_cast_fu_1432_p3");
    sc_trace(mVcdFile, sub_ln69_fu_1439_p2, "sub_ln69_fu_1439_p2");
    sc_trace(mVcdFile, add_ln70_2_fu_1449_p2, "add_ln70_2_fu_1449_p2");
    sc_trace(mVcdFile, add_ln71_2_fu_1460_p2, "add_ln71_2_fu_1460_p2");
    sc_trace(mVcdFile, tmp_28_fu_1471_p3, "tmp_28_fu_1471_p3");
    sc_trace(mVcdFile, lshr_ln75_fu_1490_p2, "lshr_ln75_fu_1490_p2");
    sc_trace(mVcdFile, trunc_ln75_1_fu_1496_p1, "trunc_ln75_1_fu_1496_p1");
    sc_trace(mVcdFile, tmp_26_fu_1500_p3, "tmp_26_fu_1500_p3");
    sc_trace(mVcdFile, lshr_ln76_fu_1514_p2, "lshr_ln76_fu_1514_p2");
    sc_trace(mVcdFile, trunc_ln76_1_fu_1520_p1, "trunc_ln76_1_fu_1520_p1");
    sc_trace(mVcdFile, tmp_29_fu_1524_p3, "tmp_29_fu_1524_p3");
    sc_trace(mVcdFile, bitcast_ln75_fu_1542_p1, "bitcast_ln75_fu_1542_p1");
    sc_trace(mVcdFile, tmp_14_fu_1546_p4, "tmp_14_fu_1546_p4");
    sc_trace(mVcdFile, trunc_ln75_fu_1556_p1, "trunc_ln75_fu_1556_p1");
    sc_trace(mVcdFile, bitcast_ln76_fu_1572_p1, "bitcast_ln76_fu_1572_p1");
    sc_trace(mVcdFile, tmp_15_fu_1576_p4, "tmp_15_fu_1576_p4");
    sc_trace(mVcdFile, trunc_ln76_fu_1586_p1, "trunc_ln76_fu_1586_p1");
    sc_trace(mVcdFile, or_ln75_fu_1606_p2, "or_ln75_fu_1606_p2");
    sc_trace(mVcdFile, and_ln75_fu_1610_p2, "and_ln75_fu_1610_p2");
    sc_trace(mVcdFile, or_ln76_fu_1624_p2, "or_ln76_fu_1624_p2");
    sc_trace(mVcdFile, and_ln76_fu_1628_p2, "and_ln76_fu_1628_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
    mHdltvinHandle.open("make_cube_faces.hdltvin.dat");
    mHdltvoutHandle.open("make_cube_faces.hdltvout.dat");
}

make_cube_faces::~make_cube_faces() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete normals_0_U;
    delete normals_1_U;
    delete normals_2_U;
    delete flipped_U;
    delete indices_U;
    delete positions_U;
    delete uvs_U;
    delete faces_U;
    delete tiles_U;
    delete make_cube_faces_fadd_32ns_32ns_32_4_full_dsp_1_U1;
    delete make_cube_faces_fadd_32ns_32ns_32_4_full_dsp_1_U2;
    delete make_cube_faces_fadd_32ns_32ns_32_4_full_dsp_1_U3;
    delete make_cube_faces_fmul_32ns_32ns_32_3_max_dsp_1_U4;
    delete make_cube_faces_fmul_32ns_32ns_32_3_max_dsp_1_U5;
    delete make_cube_faces_fmul_32ns_32ns_32_3_max_dsp_1_U6;
    delete make_cube_faces_sitofp_32ns_32_4_1_U7;
    delete make_cube_faces_sitofp_32s_32_4_1_U8;
    delete make_cube_faces_fcmp_32ns_32ns_1_2_1_U9;
}

void make_cube_faces::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void make_cube_faces::thread_ap_var_for_const1() {
    ap_var_for_const1 = ap_const_lv5_2;
}

void make_cube_faces::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln61_reg_1755.read()) && 
         esl_seteq<1,1,1>(icmp_ln67_fu_1173_p2.read(), ap_const_lv1_1))) {
        d_0_idx_fu_196 = add_ln67_reg_1880.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        d_0_idx_fu_196 = ap_const_lv64_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read())) {
        d_1_rec_reg_732 = add_ln78_reg_1999.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        d_1_rec_reg_732 = ap_const_lv6_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) && 
         (esl_seteq<1,1,1>(icmp_ln67_fu_1173_p2.read(), ap_const_lv1_1) || 
          esl_seteq<1,1,1>(icmp_ln61_reg_1755.read(), ap_const_lv1_1)))) {
        i_0_reg_720 = i_reg_1707.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        i_0_reg_720 = ap_const_lv3_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read())) {
        v_0_reg_743 = v_reg_1939.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        v_0_reg_743 = ap_const_lv3_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        add_ln67_reg_1880 = add_ln67_fu_1101_p2.read();
        add_ln70_reg_1891 = add_ln70_fu_1111_p2.read();
        add_ln71_reg_1896 = add_ln71_fu_1117_p2.read();
        add_ln72_reg_1901 = add_ln72_fu_1123_p2.read();
        add_ln73_reg_1906 = add_ln73_fu_1129_p2.read();
        add_ln74_reg_1911 = add_ln74_fu_1135_p2.read();
        add_ln75_reg_1916 = add_ln75_fu_1141_p2.read();
        add_ln76_reg_1921 = add_ln76_fu_1147_p2.read();
        add_ln77_reg_1926 = add_ln77_fu_1153_p2.read();
        and_ln66_1_reg_1860 = and_ln66_1_fu_1095_p2.read();
        du_reg_1850 = grp_fu_766_p2.read();
        dv_reg_1855 = grp_fu_771_p2.read();
        normals_0_load_reg_1865 = normals_0_q0.read();
        normals_1_load_reg_1870 = normals_1_q0.read();
        normals_2_load_reg_1875 = normals_2_q0.read();
        trunc_ln60_reg_1885 = trunc_ln60_fu_1107_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        add_ln69_1_reg_2009 = add_ln69_1_fu_1419_p2.read();
        trunc_ln69_1_reg_2020 = trunc_ln69_1_fu_1428_p1.read();
        trunc_ln69_reg_2015 = trunc_ln69_fu_1424_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln61_reg_1755.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln67_fu_1173_p2.read()))) {
        add_ln69_reg_1954 = add_ln69_fu_1210_p2.read();
        add_ln70_1_reg_1959 = add_ln70_1_fu_1215_p2.read();
        add_ln71_1_reg_1964 = add_ln71_1_fu_1220_p2.read();
        add_ln72_1_reg_1969 = add_ln72_1_fu_1225_p2.read();
        add_ln73_1_reg_1974 = add_ln73_1_fu_1230_p2.read();
        add_ln74_1_reg_1979 = add_ln74_1_fu_1235_p2.read();
        add_ln75_1_reg_1984 = add_ln75_1_fu_1240_p2.read();
        add_ln76_1_reg_1989 = add_ln76_1_fu_1245_p2.read();
        add_ln77_1_reg_1994 = add_ln77_1_fu_1250_p2.read();
        add_ln78_reg_1999 = add_ln78_fu_1255_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        ao_addr_2_reg_1745 =  (sc_lv<5>) (tmp_20_fu_891_p3.read());
        ao_addr_3_reg_1750 =  (sc_lv<5>) (tmp_21_fu_906_p3.read());
        icmp_ln61_reg_1755 = icmp_ln61_fu_915_p2.read();
        sub_ln68_reg_1725 = sub_ln68_fu_847_p2.read();
        zext_ln66_reg_1730 = zext_ln66_fu_866_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        ao_load_1_reg_1779 = ao_q1.read();
        ao_load_reg_1774 = ao_q0.read();
        select_ln64_reg_1764 = select_ln64_fu_965_p3.read();
        select_ln65_reg_1769 = select_ln65_fu_1007_p3.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        ao_load_2_reg_1789 = ao_q0.read();
        ao_load_3_reg_1794 = ao_q1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln61_reg_1755.read()))) {
        data_addr_reg_1931 =  (sc_lv<10>) (d_0_idx9_cast_fu_1168_p1.read());
        v_reg_1939 = v_fu_1179_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        i_reg_1707 = i_fu_812_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        icmp_ln66_1_reg_1820 = icmp_ln66_1_fu_1060_p2.read();
        icmp_ln66_2_reg_1825 = icmp_ln66_2_fu_1066_p2.read();
        icmp_ln66_3_reg_1830 = icmp_ln66_3_fu_1072_p2.read();
        icmp_ln66_reg_1815 = icmp_ln66_fu_1054_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read())) {
        icmp_ln75_1_reg_2100 = icmp_ln75_1_fu_1566_p2.read();
        icmp_ln75_reg_2095 = icmp_ln75_fu_1560_p2.read();
        icmp_ln76_1_reg_2110 = icmp_ln76_1_fu_1596_p2.read();
        icmp_ln76_reg_2105 = icmp_ln76_fu_1590_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read())) {
        icmp_ln75_2_reg_2085 = icmp_ln75_2_fu_1508_p2.read();
        icmp_ln76_2_reg_2090 = icmp_ln76_2_fu_1532_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read())) {
        light_load_reg_2135 = light_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        positions_load_1_reg_2045 = positions_q1.read();
        positions_load_2_reg_2050 = positions_q2.read();
        positions_load_reg_2040 = positions_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()))) {
        reg_790 = grp_fu_754_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()))) {
        reg_796 = grp_fu_758_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        select_ln66_reg_2004 = select_ln66_fu_1265_p3.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        tmp_1_reg_1804 = grp_fu_783_p1.read();
        tmp_reg_1799 = grp_fu_780_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        tmp_3_reg_1809 = grp_fu_754_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read())) {
        tmp_5_reg_2055 = grp_fu_766_p2.read();
        tmp_7_reg_2060 = grp_fu_771_p2.read();
        tmp_9_reg_2065 = grp_fu_776_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read())) {
        tmp_s_reg_2070 = grp_fu_762_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(icmp_ln60_fu_806_p2.read(), ap_const_lv1_0))) {
        zext_ln61_reg_1712 = zext_ln61_fu_818_p1.read();
    }
}

void make_cube_faces::thread_add_ln339_fu_1315_p2() {
    add_ln339_fu_1315_p2 = (!ap_const_lv9_181.is_01() || !zext_ln339_fu_1311_p1.read().is_01())? sc_lv<9>(): (sc_bigint<9>(ap_const_lv9_181) + sc_biguint<9>(zext_ln339_fu_1311_p1.read()));
}

void make_cube_faces::thread_add_ln67_fu_1101_p2() {
    add_ln67_fu_1101_p2 = (!ap_const_lv64_3C.is_01() || !d_0_idx_fu_196.read().is_01())? sc_lv<64>(): (sc_biguint<64>(ap_const_lv64_3C) + sc_biguint<64>(d_0_idx_fu_196.read()));
}

void make_cube_faces::thread_add_ln68_fu_1189_p2() {
    add_ln68_fu_1189_p2 = (!sub_ln68_reg_1725.read().is_01() || !zext_ln68_2_fu_1185_p1.read().is_01())? sc_lv<7>(): (sc_biguint<7>(sub_ln68_reg_1725.read()) + sc_biguint<7>(zext_ln68_2_fu_1185_p1.read()));
}

void make_cube_faces::thread_add_ln69_1_fu_1419_p2() {
    add_ln69_1_fu_1419_p2 = (!zext_ln66_reg_1730.read().is_01() || !sext_ln69_fu_1415_p1.read().is_01())? sc_lv<33>(): (sc_biguint<33>(zext_ln66_reg_1730.read()) + sc_bigint<33>(sext_ln69_fu_1415_p1.read()));
}

void make_cube_faces::thread_add_ln69_fu_1210_p2() {
    add_ln69_fu_1210_p2 = (!zext_ln69_fu_1206_p1.read().is_01() || !trunc_ln60_reg_1885.read().is_01())? sc_lv<11>(): (sc_biguint<11>(zext_ln69_fu_1206_p1.read()) + sc_biguint<11>(trunc_ln60_reg_1885.read()));
}

void make_cube_faces::thread_add_ln70_1_fu_1215_p2() {
    add_ln70_1_fu_1215_p2 = (!d_1_rec_cast_fu_1159_p1.read().is_01() || !add_ln70_reg_1891.read().is_01())? sc_lv<11>(): (sc_biguint<11>(d_1_rec_cast_fu_1159_p1.read()) + sc_biguint<11>(add_ln70_reg_1891.read()));
}

void make_cube_faces::thread_add_ln70_2_fu_1449_p2() {
    add_ln70_2_fu_1449_p2 = (!ap_const_lv8_1.is_01() || !sub_ln69_fu_1439_p2.read().is_01())? sc_lv<8>(): (sc_biguint<8>(ap_const_lv8_1) + sc_biguint<8>(sub_ln69_fu_1439_p2.read()));
}

void make_cube_faces::thread_add_ln70_fu_1111_p2() {
    add_ln70_fu_1111_p2 = (!ap_const_lv11_2.is_01() || !trunc_ln60_fu_1107_p1.read().is_01())? sc_lv<11>(): (sc_biguint<11>(ap_const_lv11_2) + sc_biguint<11>(trunc_ln60_fu_1107_p1.read()));
}

void make_cube_faces::thread_add_ln71_1_fu_1220_p2() {
    add_ln71_1_fu_1220_p2 = (!d_1_rec_cast_fu_1159_p1.read().is_01() || !add_ln71_reg_1896.read().is_01())? sc_lv<11>(): (sc_biguint<11>(d_1_rec_cast_fu_1159_p1.read()) + sc_biguint<11>(add_ln71_reg_1896.read()));
}

void make_cube_faces::thread_add_ln71_2_fu_1460_p2() {
    add_ln71_2_fu_1460_p2 = (!ap_const_lv8_2.is_01() || !sub_ln69_fu_1439_p2.read().is_01())? sc_lv<8>(): (sc_biguint<8>(ap_const_lv8_2) + sc_biguint<8>(sub_ln69_fu_1439_p2.read()));
}

void make_cube_faces::thread_add_ln71_fu_1117_p2() {
    add_ln71_fu_1117_p2 = (!ap_const_lv11_3.is_01() || !trunc_ln60_fu_1107_p1.read().is_01())? sc_lv<11>(): (sc_biguint<11>(ap_const_lv11_3) + sc_biguint<11>(trunc_ln60_fu_1107_p1.read()));
}

void make_cube_faces::thread_add_ln72_1_fu_1225_p2() {
    add_ln72_1_fu_1225_p2 = (!d_1_rec_cast_fu_1159_p1.read().is_01() || !add_ln72_reg_1901.read().is_01())? sc_lv<11>(): (sc_biguint<11>(d_1_rec_cast_fu_1159_p1.read()) + sc_biguint<11>(add_ln72_reg_1901.read()));
}

void make_cube_faces::thread_add_ln72_fu_1123_p2() {
    add_ln72_fu_1123_p2 = (!ap_const_lv11_4.is_01() || !trunc_ln60_fu_1107_p1.read().is_01())? sc_lv<11>(): (sc_biguint<11>(ap_const_lv11_4) + sc_biguint<11>(trunc_ln60_fu_1107_p1.read()));
}

void make_cube_faces::thread_add_ln73_1_fu_1230_p2() {
    add_ln73_1_fu_1230_p2 = (!d_1_rec_cast_fu_1159_p1.read().is_01() || !add_ln73_reg_1906.read().is_01())? sc_lv<11>(): (sc_biguint<11>(d_1_rec_cast_fu_1159_p1.read()) + sc_biguint<11>(add_ln73_reg_1906.read()));
}

void make_cube_faces::thread_add_ln73_fu_1129_p2() {
    add_ln73_fu_1129_p2 = (!ap_const_lv11_5.is_01() || !trunc_ln60_fu_1107_p1.read().is_01())? sc_lv<11>(): (sc_biguint<11>(ap_const_lv11_5) + sc_biguint<11>(trunc_ln60_fu_1107_p1.read()));
}

void make_cube_faces::thread_add_ln74_1_fu_1235_p2() {
    add_ln74_1_fu_1235_p2 = (!d_1_rec_cast_fu_1159_p1.read().is_01() || !add_ln74_reg_1911.read().is_01())? sc_lv<11>(): (sc_biguint<11>(d_1_rec_cast_fu_1159_p1.read()) + sc_biguint<11>(add_ln74_reg_1911.read()));
}

void make_cube_faces::thread_add_ln74_fu_1135_p2() {
    add_ln74_fu_1135_p2 = (!ap_const_lv11_6.is_01() || !trunc_ln60_fu_1107_p1.read().is_01())? sc_lv<11>(): (sc_biguint<11>(ap_const_lv11_6) + sc_biguint<11>(trunc_ln60_fu_1107_p1.read()));
}

void make_cube_faces::thread_add_ln75_1_fu_1240_p2() {
    add_ln75_1_fu_1240_p2 = (!d_1_rec_cast_fu_1159_p1.read().is_01() || !add_ln75_reg_1916.read().is_01())? sc_lv<11>(): (sc_biguint<11>(d_1_rec_cast_fu_1159_p1.read()) + sc_biguint<11>(add_ln75_reg_1916.read()));
}

void make_cube_faces::thread_add_ln75_fu_1141_p2() {
    add_ln75_fu_1141_p2 = (!ap_const_lv11_7.is_01() || !trunc_ln60_fu_1107_p1.read().is_01())? sc_lv<11>(): (sc_biguint<11>(ap_const_lv11_7) + sc_biguint<11>(trunc_ln60_fu_1107_p1.read()));
}

void make_cube_faces::thread_add_ln76_1_fu_1245_p2() {
    add_ln76_1_fu_1245_p2 = (!d_1_rec_cast_fu_1159_p1.read().is_01() || !add_ln76_reg_1921.read().is_01())? sc_lv<11>(): (sc_biguint<11>(d_1_rec_cast_fu_1159_p1.read()) + sc_biguint<11>(add_ln76_reg_1921.read()));
}

void make_cube_faces::thread_add_ln76_fu_1147_p2() {
    add_ln76_fu_1147_p2 = (!ap_const_lv11_8.is_01() || !trunc_ln60_fu_1107_p1.read().is_01())? sc_lv<11>(): (sc_biguint<11>(ap_const_lv11_8) + sc_biguint<11>(trunc_ln60_fu_1107_p1.read()));
}

void make_cube_faces::thread_add_ln77_1_fu_1250_p2() {
    add_ln77_1_fu_1250_p2 = (!d_1_rec_cast_fu_1159_p1.read().is_01() || !add_ln77_reg_1926.read().is_01())? sc_lv<11>(): (sc_biguint<11>(d_1_rec_cast_fu_1159_p1.read()) + sc_biguint<11>(add_ln77_reg_1926.read()));
}

void make_cube_faces::thread_add_ln77_fu_1153_p2() {
    add_ln77_fu_1153_p2 = (!ap_const_lv11_9.is_01() || !trunc_ln60_fu_1107_p1.read().is_01())? sc_lv<11>(): (sc_biguint<11>(ap_const_lv11_9) + sc_biguint<11>(trunc_ln60_fu_1107_p1.read()));
}

void make_cube_faces::thread_add_ln78_fu_1255_p2() {
    add_ln78_fu_1255_p2 = (!ap_const_lv6_A.is_01() || !d_1_rec_reg_732.read().is_01())? sc_lv<6>(): (sc_biguint<6>(ap_const_lv6_A) + sc_biguint<6>(d_1_rec_reg_732.read()));
}

void make_cube_faces::thread_and_ln66_1_fu_1095_p2() {
    and_ln66_1_fu_1095_p2 = (and_ln66_fu_1089_p2.read() & grp_fu_786_p2.read());
}

void make_cube_faces::thread_and_ln66_fu_1089_p2() {
    and_ln66_fu_1089_p2 = (or_ln66_fu_1081_p2.read() & or_ln66_1_fu_1085_p2.read());
}

void make_cube_faces::thread_and_ln75_fu_1610_p2() {
    and_ln75_fu_1610_p2 = (or_ln75_fu_1606_p2.read() & icmp_ln75_2_reg_2085.read());
}

void make_cube_faces::thread_and_ln76_fu_1628_p2() {
    and_ln76_fu_1628_p2 = (or_ln76_fu_1624_p2.read() & icmp_ln76_2_reg_2090.read());
}

void make_cube_faces::thread_ao_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read())) {
        ao_address0 =  (sc_lv<5>) (sext_ln69_1_fu_1658_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        ao_address0 = ao_addr_2_reg_1745.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        ao_address0 =  (sc_lv<5>) (zext_ln69_2_fu_861_p1.read());
    } else {
        ao_address0 = "XXXXX";
    }
}

void make_cube_faces::thread_ao_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        ao_address1 = ao_addr_3_reg_1750.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        ao_address1 =  (sc_lv<5>) (tmp_19_fu_876_p3.read());
    } else {
        ao_address1 = "XXXXX";
    }
}

void make_cube_faces::thread_ao_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read()))) {
        ao_ce0 = ap_const_logic_1;
    } else {
        ao_ce0 = ap_const_logic_0;
    }
}

void make_cube_faces::thread_ao_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()))) {
        ao_ce1 = ap_const_logic_1;
    } else {
        ao_ce1 = ap_const_logic_0;
    }
}

void make_cube_faces::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void make_cube_faces::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void make_cube_faces::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void make_cube_faces::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[11];
}

void make_cube_faces::thread_ap_CS_fsm_state13() {
    ap_CS_fsm_state13 = ap_CS_fsm.read()[12];
}

void make_cube_faces::thread_ap_CS_fsm_state14() {
    ap_CS_fsm_state14 = ap_CS_fsm.read()[13];
}

void make_cube_faces::thread_ap_CS_fsm_state15() {
    ap_CS_fsm_state15 = ap_CS_fsm.read()[14];
}

void make_cube_faces::thread_ap_CS_fsm_state16() {
    ap_CS_fsm_state16 = ap_CS_fsm.read()[15];
}

void make_cube_faces::thread_ap_CS_fsm_state17() {
    ap_CS_fsm_state17 = ap_CS_fsm.read()[16];
}

void make_cube_faces::thread_ap_CS_fsm_state18() {
    ap_CS_fsm_state18 = ap_CS_fsm.read()[17];
}

void make_cube_faces::thread_ap_CS_fsm_state19() {
    ap_CS_fsm_state19 = ap_CS_fsm.read()[18];
}

void make_cube_faces::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void make_cube_faces::thread_ap_CS_fsm_state21() {
    ap_CS_fsm_state21 = ap_CS_fsm.read()[20];
}

void make_cube_faces::thread_ap_CS_fsm_state22() {
    ap_CS_fsm_state22 = ap_CS_fsm.read()[21];
}

void make_cube_faces::thread_ap_CS_fsm_state25() {
    ap_CS_fsm_state25 = ap_CS_fsm.read()[24];
}

void make_cube_faces::thread_ap_CS_fsm_state26() {
    ap_CS_fsm_state26 = ap_CS_fsm.read()[25];
}

void make_cube_faces::thread_ap_CS_fsm_state27() {
    ap_CS_fsm_state27 = ap_CS_fsm.read()[26];
}

void make_cube_faces::thread_ap_CS_fsm_state28() {
    ap_CS_fsm_state28 = ap_CS_fsm.read()[27];
}

void make_cube_faces::thread_ap_CS_fsm_state29() {
    ap_CS_fsm_state29 = ap_CS_fsm.read()[28];
}

void make_cube_faces::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void make_cube_faces::thread_ap_CS_fsm_state30() {
    ap_CS_fsm_state30 = ap_CS_fsm.read()[29];
}

void make_cube_faces::thread_ap_CS_fsm_state31() {
    ap_CS_fsm_state31 = ap_CS_fsm.read()[30];
}

void make_cube_faces::thread_ap_CS_fsm_state32() {
    ap_CS_fsm_state32 = ap_CS_fsm.read()[31];
}

void make_cube_faces::thread_ap_CS_fsm_state33() {
    ap_CS_fsm_state33 = ap_CS_fsm.read()[32];
}

void make_cube_faces::thread_ap_CS_fsm_state34() {
    ap_CS_fsm_state34 = ap_CS_fsm.read()[33];
}

void make_cube_faces::thread_ap_CS_fsm_state35() {
    ap_CS_fsm_state35 = ap_CS_fsm.read()[34];
}

void make_cube_faces::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void make_cube_faces::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void make_cube_faces::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void make_cube_faces::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void make_cube_faces::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void make_cube_faces::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(icmp_ln60_fu_806_p2.read(), ap_const_lv1_1))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void make_cube_faces::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void make_cube_faces::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(icmp_ln60_fu_806_p2.read(), ap_const_lv1_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void make_cube_faces::thread_bitcast_ln66_1_fu_1037_p1() {
    bitcast_ln66_1_fu_1037_p1 = tmp_3_reg_1809.read();
}

void make_cube_faces::thread_bitcast_ln66_fu_1019_p1() {
    bitcast_ln66_fu_1019_p1 = reg_790.read();
}

void make_cube_faces::thread_bitcast_ln75_fu_1542_p1() {
    bitcast_ln75_fu_1542_p1 = uvs_q0.read();
}

void make_cube_faces::thread_bitcast_ln76_fu_1572_p1() {
    bitcast_ln76_fu_1572_p1 = uvs_q1.read();
}

void make_cube_faces::thread_d_0_idx9_cast_fu_1168_p1() {
    d_0_idx9_cast_fu_1168_p1 = esl_zext<64,11>(d_0_idx9_fu_1163_p2.read());
}

void make_cube_faces::thread_d_0_idx9_fu_1163_p2() {
    d_0_idx9_fu_1163_p2 = (!trunc_ln60_reg_1885.read().is_01() || !d_1_rec_cast_fu_1159_p1.read().is_01())? sc_lv<11>(): (sc_biguint<11>(trunc_ln60_reg_1885.read()) + sc_biguint<11>(d_1_rec_cast_fu_1159_p1.read()));
}

void make_cube_faces::thread_d_1_rec_cast_fu_1159_p1() {
    d_1_rec_cast_fu_1159_p1 = esl_zext<11,6>(d_1_rec_reg_732.read());
}

void make_cube_faces::thread_data_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read())) {
        data_address0 =  (sc_lv<10>) (zext_ln77_fu_1671_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read())) {
        data_address0 =  (sc_lv<10>) (zext_ln76_fu_1667_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read())) {
        data_address0 =  (sc_lv<10>) (zext_ln75_fu_1663_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read())) {
        data_address0 =  (sc_lv<10>) (zext_ln74_fu_1654_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read())) {
        data_address0 =  (sc_lv<10>) (zext_ln73_fu_1650_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read())) {
        data_address0 =  (sc_lv<10>) (zext_ln72_fu_1646_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read())) {
        data_address0 =  (sc_lv<10>) (zext_ln71_fu_1642_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read())) {
        data_address0 =  (sc_lv<10>) (zext_ln70_fu_1602_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read())) {
        data_address0 =  (sc_lv<10>) (zext_ln69_1_fu_1538_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read())) {
        data_address0 = data_addr_reg_1931.read();
    } else {
        data_address0 =  (sc_lv<10>) ("XXXXXXXXXX");
    }
}

void make_cube_faces::thread_data_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read()))) {
        data_ce0 = ap_const_logic_1;
    } else {
        data_ce0 = ap_const_logic_0;
    }
}

void make_cube_faces::thread_data_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read())) {
        data_d0 = light_load_reg_2135.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read())) {
        data_d0 = ao_q0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read())) {
        data_d0 = normals_2_load_reg_1875.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read())) {
        data_d0 = normals_1_load_reg_1870.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read())) {
        data_d0 = normals_0_load_reg_1865.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read())) {
        data_d0 = tmp_s_reg_2070.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read()))) {
        data_d0 = reg_796.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read()))) {
        data_d0 = reg_790.read();
    } else {
        data_d0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void make_cube_faces::thread_data_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read()))) {
        data_we0 = ap_const_logic_1;
    } else {
        data_we0 = ap_const_logic_0;
    }
}

void make_cube_faces::thread_faces_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        faces_address0 =  (sc_lv<3>) (zext_ln61_fu_818_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        faces_address0 =  (sc_lv<3>) (ap_const_lv64_4);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        faces_address0 =  (sc_lv<3>) (ap_const_lv64_2);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) {
        faces_address0 =  (sc_lv<3>) (ap_const_lv64_0);
    } else {
        faces_address0 =  (sc_lv<3>) ("XXX");
    }
}

void make_cube_faces::thread_faces_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        faces_address1 =  (sc_lv<3>) (ap_const_lv64_5);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        faces_address1 =  (sc_lv<3>) (ap_const_lv64_3);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) {
        faces_address1 =  (sc_lv<3>) (ap_const_lv64_1);
    } else {
        faces_address1 =  (sc_lv<3>) ("XXX");
    }
}

void make_cube_faces::thread_faces_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1)))) {
        faces_ce0 = ap_const_logic_1;
    } else {
        faces_ce0 = ap_const_logic_0;
    }
}

void make_cube_faces::thread_faces_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1)))) {
        faces_ce1 = ap_const_logic_1;
    } else {
        faces_ce1 = ap_const_logic_0;
    }
}

void make_cube_faces::thread_faces_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        faces_d0 = front.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        faces_d0 = top.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) {
        faces_d0 = left_r.read();
    } else {
        faces_d0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void make_cube_faces::thread_faces_d1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        faces_d1 = back.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        faces_d1 = bottom.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) {
        faces_d1 = right_r.read();
    } else {
        faces_d1 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void make_cube_faces::thread_faces_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1)))) {
        faces_we0 = ap_const_logic_1;
    } else {
        faces_we0 = ap_const_logic_0;
    }
}

void make_cube_faces::thread_faces_we1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1)))) {
        faces_we1 = ap_const_logic_1;
    } else {
        faces_we1 = ap_const_logic_0;
    }
}

void make_cube_faces::thread_flipped_address0() {
    flipped_address0 =  (sc_lv<6>) (sext_ln68_fu_1194_p1.read());
}

void make_cube_faces::thread_flipped_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        flipped_ce0 = ap_const_logic_1;
    } else {
        flipped_ce0 = ap_const_logic_0;
    }
}

void make_cube_faces::thread_grp_fu_754_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read())) {
        grp_fu_754_p0 = du_reg_1850.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())) {
        grp_fu_754_p0 = tmp_5_reg_2055.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        grp_fu_754_p0 = ao_load_2_reg_1789.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        grp_fu_754_p0 = ao_load_reg_1774.read();
    } else {
        grp_fu_754_p0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void make_cube_faces::thread_grp_fu_754_p1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read())) {
        grp_fu_754_p1 = select_ln75_fu_1615_p3.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())) {
        grp_fu_754_p1 = x.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        grp_fu_754_p1 = ao_load_3_reg_1794.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        grp_fu_754_p1 = ao_load_1_reg_1779.read();
    } else {
        grp_fu_754_p1 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void make_cube_faces::thread_grp_fu_758_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read())) {
        grp_fu_758_p0 = dv_reg_1855.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())) {
        grp_fu_758_p0 = tmp_7_reg_2060.read();
    } else {
        grp_fu_758_p0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void make_cube_faces::thread_grp_fu_758_p1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read())) {
        grp_fu_758_p1 = select_ln76_fu_1633_p3.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())) {
        grp_fu_758_p1 = y.read();
    } else {
        grp_fu_758_p1 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void make_cube_faces::thread_grp_fu_766_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read())) {
        grp_fu_766_p0 = positions_load_reg_2040.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        grp_fu_766_p0 = tmp_reg_1799.read();
    } else {
        grp_fu_766_p0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void make_cube_faces::thread_grp_fu_766_p1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read())) {
        grp_fu_766_p1 = n.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        grp_fu_766_p1 = ap_const_lv32_3D800000;
    } else {
        grp_fu_766_p1 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void make_cube_faces::thread_grp_fu_771_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read())) {
        grp_fu_771_p0 = positions_load_1_reg_2045.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        grp_fu_771_p0 = tmp_1_reg_1804.read();
    } else {
        grp_fu_771_p0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void make_cube_faces::thread_grp_fu_771_p1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read())) {
        grp_fu_771_p1 = n.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        grp_fu_771_p1 = ap_const_lv32_3D800000;
    } else {
        grp_fu_771_p1 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void make_cube_faces::thread_grp_fu_783_p0() {
    grp_fu_783_p0 = esl_sext<32,29>(select_ln65_reg_1769.read());
}

void make_cube_faces::thread_i_fu_812_p2() {
    i_fu_812_p2 = (!i_0_reg_720.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(i_0_reg_720.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void make_cube_faces::thread_icmp_ln60_fu_806_p2() {
    icmp_ln60_fu_806_p2 = (!i_0_reg_720.read().is_01() || !ap_const_lv3_6.is_01())? sc_lv<1>(): sc_lv<1>(i_0_reg_720.read() == ap_const_lv3_6);
}

void make_cube_faces::thread_icmp_ln61_fu_915_p2() {
    icmp_ln61_fu_915_p2 = (!faces_q0.read().is_01() || !ap_const_lv32_0.is_01())? sc_lv<1>(): sc_lv<1>(faces_q0.read() == ap_const_lv32_0);
}

void make_cube_faces::thread_icmp_ln66_1_fu_1060_p2() {
    icmp_ln66_1_fu_1060_p2 = (!trunc_ln66_fu_1033_p1.read().is_01() || !ap_const_lv23_0.is_01())? sc_lv<1>(): sc_lv<1>(trunc_ln66_fu_1033_p1.read() == ap_const_lv23_0);
}

void make_cube_faces::thread_icmp_ln66_2_fu_1066_p2() {
    icmp_ln66_2_fu_1066_p2 = (!tmp_10_fu_1040_p4.read().is_01() || !ap_const_lv8_FF.is_01())? sc_lv<1>(): sc_lv<1>(tmp_10_fu_1040_p4.read() != ap_const_lv8_FF);
}

void make_cube_faces::thread_icmp_ln66_3_fu_1072_p2() {
    icmp_ln66_3_fu_1072_p2 = (!trunc_ln66_1_fu_1050_p1.read().is_01() || !ap_const_lv23_0.is_01())? sc_lv<1>(): sc_lv<1>(trunc_ln66_1_fu_1050_p1.read() == ap_const_lv23_0);
}

void make_cube_faces::thread_icmp_ln66_fu_1054_p2() {
    icmp_ln66_fu_1054_p2 = (!tmp_4_fu_1023_p4.read().is_01() || !ap_const_lv8_FF.is_01())? sc_lv<1>(): sc_lv<1>(tmp_4_fu_1023_p4.read() != ap_const_lv8_FF);
}

void make_cube_faces::thread_icmp_ln67_fu_1173_p2() {
    icmp_ln67_fu_1173_p2 = (!v_0_reg_743.read().is_01() || !ap_const_lv3_6.is_01())? sc_lv<1>(): sc_lv<1>(v_0_reg_743.read() == ap_const_lv3_6);
}

void make_cube_faces::thread_icmp_ln75_1_fu_1566_p2() {
    icmp_ln75_1_fu_1566_p2 = (!trunc_ln75_fu_1556_p1.read().is_01() || !ap_const_lv23_0.is_01())? sc_lv<1>(): sc_lv<1>(trunc_ln75_fu_1556_p1.read() == ap_const_lv23_0);
}

void make_cube_faces::thread_icmp_ln75_2_fu_1508_p2() {
    icmp_ln75_2_fu_1508_p2 = (!tmp_26_fu_1500_p3.read().is_01() || !ap_const_lv64_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_26_fu_1500_p3.read() != ap_const_lv64_0);
}

void make_cube_faces::thread_icmp_ln75_fu_1560_p2() {
    icmp_ln75_fu_1560_p2 = (!tmp_14_fu_1546_p4.read().is_01() || !ap_const_lv8_FF.is_01())? sc_lv<1>(): sc_lv<1>(tmp_14_fu_1546_p4.read() != ap_const_lv8_FF);
}

void make_cube_faces::thread_icmp_ln76_1_fu_1596_p2() {
    icmp_ln76_1_fu_1596_p2 = (!trunc_ln76_fu_1586_p1.read().is_01() || !ap_const_lv23_0.is_01())? sc_lv<1>(): sc_lv<1>(trunc_ln76_fu_1586_p1.read() == ap_const_lv23_0);
}

void make_cube_faces::thread_icmp_ln76_2_fu_1532_p2() {
    icmp_ln76_2_fu_1532_p2 = (!tmp_29_fu_1524_p3.read().is_01() || !ap_const_lv64_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_29_fu_1524_p3.read() != ap_const_lv64_0);
}

void make_cube_faces::thread_icmp_ln76_fu_1590_p2() {
    icmp_ln76_fu_1590_p2 = (!tmp_15_fu_1576_p4.read().is_01() || !ap_const_lv8_FF.is_01())? sc_lv<1>(): sc_lv<1>(tmp_15_fu_1576_p4.read() != ap_const_lv8_FF);
}

void make_cube_faces::thread_indices_address0() {
    indices_address0 =  (sc_lv<6>) (sext_ln68_fu_1194_p1.read());
}

void make_cube_faces::thread_indices_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        indices_ce0 = ap_const_logic_1;
    } else {
        indices_ce0 = ap_const_logic_0;
    }
}

void make_cube_faces::thread_isNeg_fu_1321_p3() {
    isNeg_fu_1321_p3 = add_ln339_fu_1315_p2.read().range(8, 8);
}

void make_cube_faces::thread_light_address0() {
    light_address0 =  (sc_lv<5>) (sext_ln69_1_fu_1658_p1.read());
}

void make_cube_faces::thread_light_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read())) {
        light_ce0 = ap_const_logic_1;
    } else {
        light_ce0 = ap_const_logic_0;
    }
}

void make_cube_faces::thread_lshr_ln75_fu_1490_p2() {
    lshr_ln75_fu_1490_p2 = (!sext_ln75_fu_1478_p1.read().is_01())? sc_lv<64>(): ap_const_lv64_7227278D4E1B >> (unsigned short)sext_ln75_fu_1478_p1.read().to_uint();
}

void make_cube_faces::thread_lshr_ln76_fu_1514_p2() {
    lshr_ln76_fu_1514_p2 = (!or_ln76_1_fu_1483_p2.read().is_01())? sc_lv<64>(): ap_const_lv64_7227278D4E1B >> (unsigned short)or_ln76_1_fu_1483_p2.read().to_uint();
}

void make_cube_faces::thread_mantissa_V_fu_1297_p4() {
    mantissa_V_fu_1297_p4 = esl_concat<24,1>(esl_concat<1,23>(ap_const_lv1_1, tmp_V_1_fu_1293_p1.read()), ap_const_lv1_0);
}

void make_cube_faces::thread_normals_0_address0() {
    normals_0_address0 =  (sc_lv<3>) (zext_ln61_reg_1712.read());
}

void make_cube_faces::thread_normals_0_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        normals_0_ce0 = ap_const_logic_1;
    } else {
        normals_0_ce0 = ap_const_logic_0;
    }
}

void make_cube_faces::thread_normals_1_address0() {
    normals_1_address0 =  (sc_lv<3>) (zext_ln61_reg_1712.read());
}

void make_cube_faces::thread_normals_1_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        normals_1_ce0 = ap_const_logic_1;
    } else {
        normals_1_ce0 = ap_const_logic_0;
    }
}

void make_cube_faces::thread_normals_2_address0() {
    normals_2_address0 =  (sc_lv<3>) (zext_ln61_reg_1712.read());
}

void make_cube_faces::thread_normals_2_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        normals_2_ce0 = ap_const_logic_1;
    } else {
        normals_2_ce0 = ap_const_logic_0;
    }
}

void make_cube_faces::thread_or_ln66_1_fu_1085_p2() {
    or_ln66_1_fu_1085_p2 = (icmp_ln66_3_reg_1830.read() | icmp_ln66_2_reg_1825.read());
}

void make_cube_faces::thread_or_ln66_2_fu_870_p2() {
    or_ln66_2_fu_870_p2 = (tmp_18_fu_853_p3.read() | ap_const_lv5_3);
}

void make_cube_faces::thread_or_ln66_3_fu_885_p2() {
    or_ln66_3_fu_885_p2 = (tmp_18_fu_853_p3.read() | ap_const_lv5_1);
}

void make_cube_faces::thread_or_ln66_4_fu_900_p2() {
    or_ln66_4_fu_900_p2 = (tmp_18_fu_853_p3.read() | ap_const_lv5_2);
}

void make_cube_faces::thread_or_ln66_fu_1081_p2() {
    or_ln66_fu_1081_p2 = (icmp_ln66_1_reg_1820.read() | icmp_ln66_reg_1815.read());
}

void make_cube_faces::thread_or_ln69_fu_1200_p2() {
    or_ln69_fu_1200_p2 = (d_1_rec_reg_732.read() | ap_const_lv6_1);
}

void make_cube_faces::thread_or_ln75_fu_1606_p2() {
    or_ln75_fu_1606_p2 = (icmp_ln75_1_reg_2100.read() | icmp_ln75_reg_2095.read());
}

void make_cube_faces::thread_or_ln76_1_fu_1483_p2() {
    or_ln76_1_fu_1483_p2 = (sext_ln75_fu_1478_p1.read() | ap_const_lv64_1);
}

void make_cube_faces::thread_or_ln76_fu_1624_p2() {
    or_ln76_fu_1624_p2 = (icmp_ln76_1_reg_2110.read() | icmp_ln76_reg_2105.read());
}

void make_cube_faces::thread_p_Result_s_fu_1275_p3() {
    p_Result_s_fu_1275_p3 = p_Val2_s_fu_1272_p1.read().range(31, 31);
}

void make_cube_faces::thread_p_Val2_4_fu_1393_p3() {
    p_Val2_4_fu_1393_p3 = (!isNeg_fu_1321_p3.read()[0].is_01())? sc_lv<32>(): ((isNeg_fu_1321_p3.read()[0].to_bool())? zext_ln662_fu_1379_p1.read(): tmp_25_fu_1383_p4.read());
}

void make_cube_faces::thread_p_Val2_s_fu_1272_p1() {
    p_Val2_s_fu_1272_p1 = select_ln66_reg_2004.read();
}

void make_cube_faces::thread_p_and_f_fu_933_p3() {
    p_and_f_fu_933_p3 = esl_concat<28,4>(ap_const_lv28_0, trunc_ln64_fu_929_p1.read());
}

void make_cube_faces::thread_p_and_t_fu_951_p3() {
    p_and_t_fu_951_p3 = esl_concat<28,4>(ap_const_lv28_0, trunc_ln64_1_fu_947_p1.read());
}

void make_cube_faces::thread_p_shl2_cast_fu_1432_p3() {
    p_shl2_cast_fu_1432_p3 = esl_concat<6,2>(trunc_ln69_1_reg_2020.read(), ap_const_lv2_0);
}

void make_cube_faces::thread_positions_address0() {
    positions_address0 =  (sc_lv<7>) (zext_ln69_3_fu_1444_p1.read());
}

void make_cube_faces::thread_positions_address1() {
    positions_address1 =  (sc_lv<7>) (zext_ln70_1_fu_1455_p1.read());
}

void make_cube_faces::thread_positions_address2() {
    positions_address2 =  (sc_lv<7>) (zext_ln71_1_fu_1466_p1.read());
}

void make_cube_faces::thread_positions_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        positions_ce0 = ap_const_logic_1;
    } else {
        positions_ce0 = ap_const_logic_0;
    }
}

void make_cube_faces::thread_positions_ce1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        positions_ce1 = ap_const_logic_1;
    } else {
        positions_ce1 = ap_const_logic_0;
    }
}

void make_cube_faces::thread_positions_ce2() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        positions_ce2 = ap_const_logic_1;
    } else {
        positions_ce2 = ap_const_logic_0;
    }
}

void make_cube_faces::thread_r_V_1_fu_1365_p2() {
    r_V_1_fu_1365_p2 = (!zext_ln1287_fu_1355_p1.read().is_01())? sc_lv<79>(): zext_ln682_fu_1307_p1.read() << (unsigned short)zext_ln1287_fu_1355_p1.read().to_uint();
}

void make_cube_faces::thread_r_V_fu_1359_p2() {
    r_V_fu_1359_p2 = (!sext_ln1311_2_fu_1351_p1.read().is_01())? sc_lv<25>(): mantissa_V_fu_1297_p4.read() >> (unsigned short)sext_ln1311_2_fu_1351_p1.read().to_uint();
}

void make_cube_faces::thread_result_V_1_fu_1401_p2() {
    result_V_1_fu_1401_p2 = (!ap_const_lv32_0.is_01() || !p_Val2_4_fu_1393_p3.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_0) - sc_biguint<32>(p_Val2_4_fu_1393_p3.read()));
}

void make_cube_faces::thread_select_ln59_fu_1407_p3() {
    select_ln59_fu_1407_p3 = (!p_Result_s_fu_1275_p3.read()[0].is_01())? sc_lv<32>(): ((p_Result_s_fu_1275_p3.read()[0].to_bool())? result_V_1_fu_1401_p2.read(): p_Val2_4_fu_1393_p3.read());
}

void make_cube_faces::thread_select_ln64_fu_965_p3() {
    select_ln64_fu_965_p3 = (!tmp_22_fu_921_p3.read()[0].is_01())? sc_lv<32>(): ((tmp_22_fu_921_p3.read()[0].to_bool())? sub_ln64_1_fu_959_p2.read(): p_and_f_fu_933_p3.read());
}

void make_cube_faces::thread_select_ln65_fu_1007_p3() {
    select_ln65_fu_1007_p3 = (!tmp_22_fu_921_p3.read()[0].is_01())? sc_lv<29>(): ((tmp_22_fu_921_p3.read()[0].to_bool())? sub_ln65_fu_987_p2.read(): zext_ln65_1_fu_1003_p1.read());
}

void make_cube_faces::thread_select_ln66_fu_1265_p3() {
    select_ln66_fu_1265_p3 = (!and_ln66_1_reg_1860.read()[0].is_01())? sc_lv<32>(): ((and_ln66_1_reg_1860.read()[0].to_bool())? flipped_q0.read(): indices_q0.read());
}

void make_cube_faces::thread_select_ln75_fu_1615_p3() {
    select_ln75_fu_1615_p3 = (!and_ln75_fu_1610_p2.read()[0].is_01())? sc_lv<32>(): ((and_ln75_fu_1610_p2.read()[0].to_bool())? ap_const_lv32_3A000000: ap_const_lv32_3D7E0000);
}

void make_cube_faces::thread_select_ln76_fu_1633_p3() {
    select_ln76_fu_1633_p3 = (!and_ln76_fu_1628_p2.read()[0].is_01())? sc_lv<32>(): ((and_ln76_fu_1628_p2.read()[0].to_bool())? ap_const_lv32_3A000000: ap_const_lv32_3D7E0000);
}

void make_cube_faces::thread_sext_ln1311_1_fu_1347_p1() {
    sext_ln1311_1_fu_1347_p1 = esl_sext<32,9>(ush_fu_1339_p3.read());
}

void make_cube_faces::thread_sext_ln1311_2_fu_1351_p1() {
    sext_ln1311_2_fu_1351_p1 = esl_sext<25,9>(ush_fu_1339_p3.read());
}

void make_cube_faces::thread_sext_ln1311_fu_1335_p1() {
    sext_ln1311_fu_1335_p1 = esl_sext<9,8>(sub_ln1311_fu_1329_p2.read());
}

void make_cube_faces::thread_sext_ln68_fu_1194_p1() {
    sext_ln68_fu_1194_p1 = esl_sext<64,7>(add_ln68_fu_1189_p2.read());
}

void make_cube_faces::thread_sext_ln69_1_fu_1658_p1() {
    sext_ln69_1_fu_1658_p1 = esl_sext<64,33>(add_ln69_1_reg_2009.read());
}

void make_cube_faces::thread_sext_ln69_fu_1415_p1() {
    sext_ln69_fu_1415_p1 = esl_sext<33,32>(select_ln59_fu_1407_p3.read());
}

void make_cube_faces::thread_sext_ln75_fu_1478_p1() {
    sext_ln75_fu_1478_p1 = esl_sext<64,34>(tmp_28_fu_1471_p3.read());
}

void make_cube_faces::thread_sub_ln1311_fu_1329_p2() {
    sub_ln1311_fu_1329_p2 = (!ap_const_lv8_7F.is_01() || !tmp_V_fu_1283_p4.read().is_01())? sc_lv<8>(): (sc_biguint<8>(ap_const_lv8_7F) - sc_biguint<8>(tmp_V_fu_1283_p4.read()));
}

void make_cube_faces::thread_sub_ln64_1_fu_959_p2() {
    sub_ln64_1_fu_959_p2 = (!ap_const_lv32_0.is_01() || !p_and_t_fu_951_p3.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_0) - sc_biguint<32>(p_and_t_fu_951_p3.read()));
}

void make_cube_faces::thread_sub_ln64_fu_941_p2() {
    sub_ln64_fu_941_p2 = (!ap_const_lv32_0.is_01() || !tiles_q0.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_0) - sc_biguint<32>(tiles_q0.read()));
}

void make_cube_faces::thread_sub_ln65_fu_987_p2() {
    sub_ln65_fu_987_p2 = (!ap_const_lv29_0.is_01() || !zext_ln65_fu_983_p1.read().is_01())? sc_lv<29>(): (sc_biguint<29>(ap_const_lv29_0) - sc_biguint<29>(zext_ln65_fu_983_p1.read()));
}

void make_cube_faces::thread_sub_ln68_fu_847_p2() {
    sub_ln68_fu_847_p2 = (!zext_ln68_fu_831_p1.read().is_01() || !zext_ln68_1_fu_843_p1.read().is_01())? sc_lv<7>(): (sc_biguint<7>(zext_ln68_fu_831_p1.read()) - sc_biguint<7>(zext_ln68_1_fu_843_p1.read()));
}

void make_cube_faces::thread_sub_ln69_fu_1439_p2() {
    sub_ln69_fu_1439_p2 = (!p_shl2_cast_fu_1432_p3.read().is_01() || !trunc_ln69_reg_2015.read().is_01())? sc_lv<8>(): (sc_biguint<8>(p_shl2_cast_fu_1432_p3.read()) - sc_biguint<8>(trunc_ln69_reg_2015.read()));
}

void make_cube_faces::thread_tiles_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        tiles_address0 =  (sc_lv<3>) (zext_ln61_reg_1712.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        tiles_address0 =  (sc_lv<3>) (ap_const_lv64_4);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        tiles_address0 =  (sc_lv<3>) (ap_const_lv64_2);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) {
        tiles_address0 =  (sc_lv<3>) (ap_const_lv64_0);
    } else {
        tiles_address0 =  (sc_lv<3>) ("XXX");
    }
}

void make_cube_faces::thread_tiles_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        tiles_address1 =  (sc_lv<3>) (ap_const_lv64_5);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        tiles_address1 =  (sc_lv<3>) (ap_const_lv64_3);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) {
        tiles_address1 =  (sc_lv<3>) (ap_const_lv64_1);
    } else {
        tiles_address1 =  (sc_lv<3>) ("XXX");
    }
}

void make_cube_faces::thread_tiles_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1)))) {
        tiles_ce0 = ap_const_logic_1;
    } else {
        tiles_ce0 = ap_const_logic_0;
    }
}

void make_cube_faces::thread_tiles_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1)))) {
        tiles_ce1 = ap_const_logic_1;
    } else {
        tiles_ce1 = ap_const_logic_0;
    }
}

void make_cube_faces::thread_tiles_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        tiles_d0 = wfront.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        tiles_d0 = wtop.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) {
        tiles_d0 = wleft.read();
    } else {
        tiles_d0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void make_cube_faces::thread_tiles_d1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        tiles_d1 = wback.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        tiles_d1 = wbottom.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) {
        tiles_d1 = wright.read();
    } else {
        tiles_d1 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void make_cube_faces::thread_tiles_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1)))) {
        tiles_we0 = ap_const_logic_1;
    } else {
        tiles_we0 = ap_const_logic_0;
    }
}

void make_cube_faces::thread_tiles_we1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1)))) {
        tiles_we1 = ap_const_logic_1;
    } else {
        tiles_we1 = ap_const_logic_0;
    }
}

void make_cube_faces::thread_tmp_10_fu_1040_p4() {
    tmp_10_fu_1040_p4 = bitcast_ln66_1_fu_1037_p1.read().range(30, 23);
}

void make_cube_faces::thread_tmp_14_fu_1546_p4() {
    tmp_14_fu_1546_p4 = bitcast_ln75_fu_1542_p1.read().range(30, 23);
}

void make_cube_faces::thread_tmp_15_fu_1576_p4() {
    tmp_15_fu_1576_p4 = bitcast_ln76_fu_1572_p1.read().range(30, 23);
}

void make_cube_faces::thread_tmp_16_fu_823_p3() {
    tmp_16_fu_823_p3 = esl_concat<3,3>(i_0_reg_720.read(), ap_const_lv3_0);
}

void make_cube_faces::thread_tmp_17_fu_835_p3() {
    tmp_17_fu_835_p3 = esl_concat<3,1>(i_0_reg_720.read(), ap_const_lv1_0);
}

void make_cube_faces::thread_tmp_18_fu_853_p3() {
    tmp_18_fu_853_p3 = esl_concat<3,2>(i_0_reg_720.read(), ap_const_lv2_0);
}

void make_cube_faces::thread_tmp_19_fu_876_p3() {
    tmp_19_fu_876_p3 = esl_concat<59,5>(ap_const_lv59_0, or_ln66_2_fu_870_p2.read());
}

void make_cube_faces::thread_tmp_20_fu_891_p3() {
    tmp_20_fu_891_p3 = esl_concat<59,5>(ap_const_lv59_0, or_ln66_3_fu_885_p2.read());
}

void make_cube_faces::thread_tmp_21_fu_906_p3() {
    tmp_21_fu_906_p3 = esl_concat<59,5>(ap_const_lv59_0, or_ln66_4_fu_900_p2.read());
}

void make_cube_faces::thread_tmp_22_fu_921_p3() {
    tmp_22_fu_921_p3 = tiles_q0.read().range(31, 31);
}

void make_cube_faces::thread_tmp_23_fu_973_p4() {
    tmp_23_fu_973_p4 = sub_ln64_fu_941_p2.read().range(31, 4);
}

void make_cube_faces::thread_tmp_24_fu_993_p4() {
    tmp_24_fu_993_p4 = tiles_q0.read().range(31, 4);
}

void make_cube_faces::thread_tmp_25_fu_1383_p4() {
    tmp_25_fu_1383_p4 = r_V_1_fu_1365_p2.read().range(55, 24);
}

void make_cube_faces::thread_tmp_26_fu_1500_p3() {
    tmp_26_fu_1500_p3 = esl_concat<63,1>(ap_const_lv63_0, trunc_ln75_1_fu_1496_p1.read());
}

void make_cube_faces::thread_tmp_27_fu_1371_p3() {
    tmp_27_fu_1371_p3 = r_V_fu_1359_p2.read().range(24, 24);
}

void make_cube_faces::thread_tmp_28_fu_1471_p3() {
    tmp_28_fu_1471_p3 = esl_concat<33,1>(add_ln69_1_reg_2009.read(), ap_const_lv1_0);
}

void make_cube_faces::thread_tmp_29_fu_1524_p3() {
    tmp_29_fu_1524_p3 = esl_concat<63,1>(ap_const_lv63_0, trunc_ln76_1_fu_1520_p1.read());
}

void make_cube_faces::thread_tmp_4_fu_1023_p4() {
    tmp_4_fu_1023_p4 = bitcast_ln66_fu_1019_p1.read().range(30, 23);
}

void make_cube_faces::thread_tmp_V_1_fu_1293_p1() {
    tmp_V_1_fu_1293_p1 = p_Val2_s_fu_1272_p1.read().range(23-1, 0);
}

void make_cube_faces::thread_tmp_V_fu_1283_p4() {
    tmp_V_fu_1283_p4 = p_Val2_s_fu_1272_p1.read().range(30, 23);
}

void make_cube_faces::thread_trunc_ln60_fu_1107_p1() {
    trunc_ln60_fu_1107_p1 = d_0_idx_fu_196.read().range(11-1, 0);
}

void make_cube_faces::thread_trunc_ln64_1_fu_947_p1() {
    trunc_ln64_1_fu_947_p1 = sub_ln64_fu_941_p2.read().range(4-1, 0);
}

void make_cube_faces::thread_trunc_ln64_fu_929_p1() {
    trunc_ln64_fu_929_p1 = tiles_q0.read().range(4-1, 0);
}

void make_cube_faces::thread_trunc_ln66_1_fu_1050_p1() {
    trunc_ln66_1_fu_1050_p1 = bitcast_ln66_1_fu_1037_p1.read().range(23-1, 0);
}

void make_cube_faces::thread_trunc_ln66_fu_1033_p1() {
    trunc_ln66_fu_1033_p1 = bitcast_ln66_fu_1019_p1.read().range(23-1, 0);
}

void make_cube_faces::thread_trunc_ln69_1_fu_1428_p1() {
    trunc_ln69_1_fu_1428_p1 = add_ln69_1_fu_1419_p2.read().range(6-1, 0);
}

void make_cube_faces::thread_trunc_ln69_fu_1424_p1() {
    trunc_ln69_fu_1424_p1 = add_ln69_1_fu_1419_p2.read().range(8-1, 0);
}

void make_cube_faces::thread_trunc_ln75_1_fu_1496_p1() {
    trunc_ln75_1_fu_1496_p1 = lshr_ln75_fu_1490_p2.read().range(1-1, 0);
}

void make_cube_faces::thread_trunc_ln75_fu_1556_p1() {
    trunc_ln75_fu_1556_p1 = bitcast_ln75_fu_1542_p1.read().range(23-1, 0);
}

void make_cube_faces::thread_trunc_ln76_1_fu_1520_p1() {
    trunc_ln76_1_fu_1520_p1 = lshr_ln76_fu_1514_p2.read().range(1-1, 0);
}

void make_cube_faces::thread_trunc_ln76_fu_1586_p1() {
    trunc_ln76_fu_1586_p1 = bitcast_ln76_fu_1572_p1.read().range(23-1, 0);
}

void make_cube_faces::thread_ush_fu_1339_p3() {
    ush_fu_1339_p3 = (!isNeg_fu_1321_p3.read()[0].is_01())? sc_lv<9>(): ((isNeg_fu_1321_p3.read()[0].to_bool())? sext_ln1311_fu_1335_p1.read(): add_ln339_fu_1315_p2.read());
}

void make_cube_faces::thread_uvs_address0() {
    uvs_address0 =  (sc_lv<6>) (sext_ln75_fu_1478_p1.read());
}

void make_cube_faces::thread_uvs_address1() {
    uvs_address1 =  (sc_lv<6>) (or_ln76_1_fu_1483_p2.read());
}

void make_cube_faces::thread_uvs_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read())) {
        uvs_ce0 = ap_const_logic_1;
    } else {
        uvs_ce0 = ap_const_logic_0;
    }
}

void make_cube_faces::thread_uvs_ce1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read())) {
        uvs_ce1 = ap_const_logic_1;
    } else {
        uvs_ce1 = ap_const_logic_0;
    }
}

void make_cube_faces::thread_v_fu_1179_p2() {
    v_fu_1179_p2 = (!v_0_reg_743.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(v_0_reg_743.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void make_cube_faces::thread_zext_ln1287_fu_1355_p1() {
    zext_ln1287_fu_1355_p1 = esl_zext<79,32>(sext_ln1311_1_fu_1347_p1.read());
}

void make_cube_faces::thread_zext_ln339_fu_1311_p1() {
    zext_ln339_fu_1311_p1 = esl_zext<9,8>(tmp_V_fu_1283_p4.read());
}

void make_cube_faces::thread_zext_ln61_fu_818_p1() {
    zext_ln61_fu_818_p1 = esl_zext<64,3>(i_0_reg_720.read());
}

void make_cube_faces::thread_zext_ln65_1_fu_1003_p1() {
    zext_ln65_1_fu_1003_p1 = esl_zext<29,28>(tmp_24_fu_993_p4.read());
}

void make_cube_faces::thread_zext_ln65_fu_983_p1() {
    zext_ln65_fu_983_p1 = esl_zext<29,28>(tmp_23_fu_973_p4.read());
}

void make_cube_faces::thread_zext_ln662_fu_1379_p1() {
    zext_ln662_fu_1379_p1 = esl_zext<32,1>(tmp_27_fu_1371_p3.read());
}

void make_cube_faces::thread_zext_ln66_fu_866_p1() {
    zext_ln66_fu_866_p1 = esl_zext<33,5>(tmp_18_fu_853_p3.read());
}

void make_cube_faces::thread_zext_ln682_fu_1307_p1() {
    zext_ln682_fu_1307_p1 = esl_zext<79,25>(mantissa_V_fu_1297_p4.read());
}

void make_cube_faces::thread_zext_ln68_1_fu_843_p1() {
    zext_ln68_1_fu_843_p1 = esl_zext<7,4>(tmp_17_fu_835_p3.read());
}

void make_cube_faces::thread_zext_ln68_2_fu_1185_p1() {
    zext_ln68_2_fu_1185_p1 = esl_zext<7,3>(v_0_reg_743.read());
}

void make_cube_faces::thread_zext_ln68_fu_831_p1() {
    zext_ln68_fu_831_p1 = esl_zext<7,6>(tmp_16_fu_823_p3.read());
}

void make_cube_faces::thread_zext_ln69_1_fu_1538_p1() {
    zext_ln69_1_fu_1538_p1 = esl_zext<64,11>(add_ln69_reg_1954.read());
}

void make_cube_faces::thread_zext_ln69_2_fu_861_p1() {
    zext_ln69_2_fu_861_p1 = esl_zext<64,5>(tmp_18_fu_853_p3.read());
}

void make_cube_faces::thread_zext_ln69_3_fu_1444_p1() {
    zext_ln69_3_fu_1444_p1 = esl_zext<64,8>(sub_ln69_fu_1439_p2.read());
}

void make_cube_faces::thread_zext_ln69_fu_1206_p1() {
    zext_ln69_fu_1206_p1 = esl_zext<11,6>(or_ln69_fu_1200_p2.read());
}

void make_cube_faces::thread_zext_ln70_1_fu_1455_p1() {
    zext_ln70_1_fu_1455_p1 = esl_zext<64,8>(add_ln70_2_fu_1449_p2.read());
}

void make_cube_faces::thread_zext_ln70_fu_1602_p1() {
    zext_ln70_fu_1602_p1 = esl_zext<64,11>(add_ln70_1_reg_1959.read());
}

void make_cube_faces::thread_zext_ln71_1_fu_1466_p1() {
    zext_ln71_1_fu_1466_p1 = esl_zext<64,8>(add_ln71_2_fu_1460_p2.read());
}

void make_cube_faces::thread_zext_ln71_fu_1642_p1() {
    zext_ln71_fu_1642_p1 = esl_zext<64,11>(add_ln71_1_reg_1964.read());
}

void make_cube_faces::thread_zext_ln72_fu_1646_p1() {
    zext_ln72_fu_1646_p1 = esl_zext<64,11>(add_ln72_1_reg_1969.read());
}

void make_cube_faces::thread_zext_ln73_fu_1650_p1() {
    zext_ln73_fu_1650_p1 = esl_zext<64,11>(add_ln73_1_reg_1974.read());
}

void make_cube_faces::thread_zext_ln74_fu_1654_p1() {
    zext_ln74_fu_1654_p1 = esl_zext<64,11>(add_ln74_1_reg_1979.read());
}

void make_cube_faces::thread_zext_ln75_fu_1663_p1() {
    zext_ln75_fu_1663_p1 = esl_zext<64,11>(add_ln75_1_reg_1984.read());
}

void make_cube_faces::thread_zext_ln76_fu_1667_p1() {
    zext_ln76_fu_1667_p1 = esl_zext<64,11>(add_ln76_1_reg_1989.read());
}

void make_cube_faces::thread_zext_ln77_fu_1671_p1() {
    zext_ln77_fu_1671_p1 = esl_zext<64,11>(add_ln77_1_reg_1994.read());
}

void make_cube_faces::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            ap_NS_fsm = ap_ST_fsm_state3;
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(icmp_ln60_fu_806_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        case 16 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(icmp_ln61_fu_915_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state14;
            } else {
                ap_NS_fsm = ap_ST_fsm_state6;
            }
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state12;
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state13;
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_fsm_state14;
            break;
        case 8192 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) && (esl_seteq<1,1,1>(icmp_ln67_fu_1173_p2.read(), ap_const_lv1_1) || 
  esl_seteq<1,1,1>(icmp_ln61_reg_1755.read(), ap_const_lv1_1)))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_state15;
            }
            break;
        case 16384 : 
            ap_NS_fsm = ap_ST_fsm_state16;
            break;
        case 32768 : 
            ap_NS_fsm = ap_ST_fsm_state17;
            break;
        case 65536 : 
            ap_NS_fsm = ap_ST_fsm_state18;
            break;
        case 131072 : 
            ap_NS_fsm = ap_ST_fsm_state19;
            break;
        case 262144 : 
            ap_NS_fsm = ap_ST_fsm_state20;
            break;
        case 524288 : 
            ap_NS_fsm = ap_ST_fsm_state21;
            break;
        case 1048576 : 
            ap_NS_fsm = ap_ST_fsm_state22;
            break;
        case 2097152 : 
            ap_NS_fsm = ap_ST_fsm_state23;
            break;
        case 4194304 : 
            ap_NS_fsm = ap_ST_fsm_state24;
            break;
        case 8388608 : 
            ap_NS_fsm = ap_ST_fsm_state25;
            break;
        case 16777216 : 
            ap_NS_fsm = ap_ST_fsm_state26;
            break;
        case 33554432 : 
            ap_NS_fsm = ap_ST_fsm_state27;
            break;
        case 67108864 : 
            ap_NS_fsm = ap_ST_fsm_state28;
            break;
        case 134217728 : 
            ap_NS_fsm = ap_ST_fsm_state29;
            break;
        case 268435456 : 
            ap_NS_fsm = ap_ST_fsm_state30;
            break;
        case 536870912 : 
            ap_NS_fsm = ap_ST_fsm_state31;
            break;
        case 1073741824 : 
            ap_NS_fsm = ap_ST_fsm_state32;
            break;
        case 2147483648 : 
            ap_NS_fsm = ap_ST_fsm_state33;
            break;
        case 4294967296 : 
            ap_NS_fsm = ap_ST_fsm_state34;
            break;
        case 8589934592 : 
            ap_NS_fsm = ap_ST_fsm_state35;
            break;
        case 17179869184 : 
            ap_NS_fsm = ap_ST_fsm_state14;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<35>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
            break;
    }
}

void make_cube_faces::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"data_address0\" :  \"" << data_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"data_ce0\" :  \"" << data_ce0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"data_we0\" :  \"" << data_we0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"data_d0\" :  \"" << data_d0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ao_address0\" :  \"" << ao_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ao_ce0\" :  \"" << ao_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ao_q0\" :  \"" << ao_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ao_address1\" :  \"" << ao_address1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ao_ce1\" :  \"" << ao_ce1.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ao_q1\" :  \"" << ao_q1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"light_address0\" :  \"" << light_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"light_ce0\" :  \"" << light_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"light_q0\" :  \"" << light_q0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"left_r\" :  \"" << left_r.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"right_r\" :  \"" << right_r.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"top\" :  \"" << top.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"bottom\" :  \"" << bottom.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"front\" :  \"" << front.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"back\" :  \"" << back.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"wleft\" :  \"" << wleft.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"wright\" :  \"" << wright.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"wtop\" :  \"" << wtop.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"wbottom\" :  \"" << wbottom.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"wfront\" :  \"" << wfront.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"wback\" :  \"" << wback.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"x\" :  \"" << x.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"y\" :  \"" << y.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"z\" :  \"" << z.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"n\" :  \"" << n.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

