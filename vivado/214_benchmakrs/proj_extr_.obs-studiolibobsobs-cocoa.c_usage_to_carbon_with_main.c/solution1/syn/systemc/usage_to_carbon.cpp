// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "usage_to_carbon.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic usage_to_carbon::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic usage_to_carbon::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<2> usage_to_carbon::ap_ST_fsm_state1 = "1";
const sc_lv<2> usage_to_carbon::ap_ST_fsm_state2 = "10";
const sc_lv<32> usage_to_carbon::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> usage_to_carbon::ap_const_lv32_C6 = "11000110";
const sc_lv<32> usage_to_carbon::ap_const_lv32_121 = "100100001";
const sc_lv<32> usage_to_carbon::ap_const_lv32_A2 = "10100010";
const sc_lv<32> usage_to_carbon::ap_const_lv32_113 = "100010011";
const sc_lv<32> usage_to_carbon::ap_const_lv32_9D = "10011101";
const sc_lv<32> usage_to_carbon::ap_const_lv32_B9 = "10111001";
const sc_lv<32> usage_to_carbon::ap_const_lv32_115 = "100010101";
const sc_lv<32> usage_to_carbon::ap_const_lv32_C5 = "11000101";
const sc_lv<32> usage_to_carbon::ap_const_lv32_ED = "11101101";
const sc_lv<32> usage_to_carbon::ap_const_lv32_9A = "10011010";
const sc_lv<32> usage_to_carbon::ap_const_lv32_99 = "10011001";
const sc_lv<32> usage_to_carbon::ap_const_lv32_C9 = "11001001";
const sc_lv<32> usage_to_carbon::ap_const_lv32_CA = "11001010";
const sc_lv<32> usage_to_carbon::ap_const_lv32_88 = "10001000";
const sc_lv<32> usage_to_carbon::ap_const_lv32_C8 = "11001000";
const sc_lv<32> usage_to_carbon::ap_const_lv32_E4 = "11100100";
const sc_lv<32> usage_to_carbon::ap_const_lv32_85 = "10000101";
const sc_lv<32> usage_to_carbon::ap_const_lv32_E2 = "11100010";
const sc_lv<32> usage_to_carbon::ap_const_lv32_E3 = "11100011";
const sc_lv<32> usage_to_carbon::ap_const_lv32_E0 = "11100000";
const sc_lv<32> usage_to_carbon::ap_const_lv32_E1 = "11100001";
const sc_lv<32> usage_to_carbon::ap_const_lv32_DE = "11011110";
const sc_lv<32> usage_to_carbon::ap_const_lv32_DF = "11011111";
const sc_lv<32> usage_to_carbon::ap_const_lv32_DC = "11011100";
const sc_lv<32> usage_to_carbon::ap_const_lv32_DD = "11011101";
const sc_lv<32> usage_to_carbon::ap_const_lv32_D7 = "11010111";
const sc_lv<32> usage_to_carbon::ap_const_lv32_D8 = "11011000";
const sc_lv<32> usage_to_carbon::ap_const_lv32_D5 = "11010101";
const sc_lv<32> usage_to_carbon::ap_const_lv32_D6 = "11010110";
const sc_lv<32> usage_to_carbon::ap_const_lv32_D3 = "11010011";
const sc_lv<32> usage_to_carbon::ap_const_lv32_D4 = "11010100";
const sc_lv<32> usage_to_carbon::ap_const_lv32_D1 = "11010001";
const sc_lv<32> usage_to_carbon::ap_const_lv32_D2 = "11010010";
const sc_lv<32> usage_to_carbon::ap_const_lv32_120 = "100100000";
const sc_lv<32> usage_to_carbon::ap_const_lv32_D0 = "11010000";
const sc_lv<32> usage_to_carbon::ap_const_lv32_11B = "100011011";
const sc_lv<32> usage_to_carbon::ap_const_lv32_A1 = "10100001";
const sc_lv<32> usage_to_carbon::ap_const_lv32_B4 = "10110100";
const sc_lv<32> usage_to_carbon::ap_const_lv32_119 = "100011001";
const sc_lv<32> usage_to_carbon::ap_const_lv32_A5 = "10100101";
const sc_lv<32> usage_to_carbon::ap_const_lv32_B0 = "10110000";
const sc_lv<32> usage_to_carbon::ap_const_lv32_BF = "10111111";
const sc_lv<32> usage_to_carbon::ap_const_lv32_BE = "10111110";
const sc_lv<32> usage_to_carbon::ap_const_lv32_114 = "100010100";
const sc_lv<32> usage_to_carbon::ap_const_lv32_118 = "100011000";
const sc_lv<32> usage_to_carbon::ap_const_lv32_CD = "11001101";
const sc_lv<32> usage_to_carbon::ap_const_lv32_108 = "100001000";
const sc_lv<32> usage_to_carbon::ap_const_lv32_CF = "11001111";
const sc_lv<32> usage_to_carbon::ap_const_lv32_CB = "11001011";
const sc_lv<32> usage_to_carbon::ap_const_lv32_AC = "10101100";
const sc_lv<32> usage_to_carbon::ap_const_lv32_CC = "11001100";
const sc_lv<32> usage_to_carbon::ap_const_lv32_AE = "10101110";
const sc_lv<32> usage_to_carbon::ap_const_lv32_AA = "10101010";
const sc_lv<32> usage_to_carbon::ap_const_lv32_AB = "10101011";
const sc_lv<32> usage_to_carbon::ap_const_lv32_94 = "10010100";
const sc_lv<32> usage_to_carbon::ap_const_lv32_1 = "1";
const sc_lv<7> usage_to_carbon::ap_const_lv7_7F = "1111111";
const sc_lv<7> usage_to_carbon::ap_const_lv7_0 = "0000000";
const sc_lv<7> usage_to_carbon::ap_const_lv7_36 = "110110";
const bool usage_to_carbon::ap_const_boolean_1 = true;

usage_to_carbon::usage_to_carbon(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_and_ln304_10_fu_272_p2);
    sensitive << ( icmp_ln304_12_fu_266_p2 );
    sensitive << ( icmp_ln304_11_fu_260_p2 );

    SC_METHOD(thread_and_ln304_11_fu_278_p2);
    sensitive << ( and_ln304_9_fu_254_p2 );
    sensitive << ( and_ln304_10_fu_272_p2 );

    SC_METHOD(thread_and_ln304_12_fu_296_p2);
    sensitive << ( icmp_ln304_14_fu_290_p2 );
    sensitive << ( icmp_ln304_13_fu_284_p2 );

    SC_METHOD(thread_and_ln304_13_fu_302_p2);
    sensitive << ( and_ln304_11_fu_278_p2 );
    sensitive << ( and_ln304_12_fu_296_p2 );

    SC_METHOD(thread_and_ln304_14_fu_320_p2);
    sensitive << ( icmp_ln304_16_fu_314_p2 );
    sensitive << ( icmp_ln304_15_fu_308_p2 );

    SC_METHOD(thread_and_ln304_15_fu_326_p2);
    sensitive << ( and_ln304_13_fu_302_p2 );
    sensitive << ( and_ln304_14_fu_320_p2 );

    SC_METHOD(thread_and_ln304_16_fu_344_p2);
    sensitive << ( icmp_ln304_18_fu_338_p2 );
    sensitive << ( icmp_ln304_17_fu_332_p2 );

    SC_METHOD(thread_and_ln304_17_fu_350_p2);
    sensitive << ( and_ln304_15_fu_326_p2 );
    sensitive << ( and_ln304_16_fu_344_p2 );

    SC_METHOD(thread_and_ln304_18_fu_368_p2);
    sensitive << ( icmp_ln304_20_fu_362_p2 );
    sensitive << ( icmp_ln304_19_fu_356_p2 );

    SC_METHOD(thread_and_ln304_19_fu_374_p2);
    sensitive << ( and_ln304_17_fu_350_p2 );
    sensitive << ( and_ln304_18_fu_368_p2 );

    SC_METHOD(thread_and_ln304_1_fu_158_p2);
    sensitive << ( icmp_ln304_fu_134_p2 );
    sensitive << ( and_ln304_fu_152_p2 );

    SC_METHOD(thread_and_ln304_20_fu_392_p2);
    sensitive << ( icmp_ln304_22_fu_386_p2 );
    sensitive << ( icmp_ln304_21_fu_380_p2 );

    SC_METHOD(thread_and_ln304_21_fu_398_p2);
    sensitive << ( and_ln304_19_fu_374_p2 );
    sensitive << ( and_ln304_20_fu_392_p2 );

    SC_METHOD(thread_and_ln304_22_fu_416_p2);
    sensitive << ( icmp_ln304_24_fu_410_p2 );
    sensitive << ( icmp_ln304_23_fu_404_p2 );

    SC_METHOD(thread_and_ln304_23_fu_422_p2);
    sensitive << ( and_ln304_21_fu_398_p2 );
    sensitive << ( and_ln304_22_fu_416_p2 );

    SC_METHOD(thread_and_ln304_24_fu_440_p2);
    sensitive << ( icmp_ln304_26_fu_434_p2 );
    sensitive << ( icmp_ln304_25_fu_428_p2 );

    SC_METHOD(thread_and_ln304_25_fu_446_p2);
    sensitive << ( and_ln304_23_fu_422_p2 );
    sensitive << ( and_ln304_24_fu_440_p2 );

    SC_METHOD(thread_and_ln304_26_fu_464_p2);
    sensitive << ( icmp_ln304_28_fu_458_p2 );
    sensitive << ( icmp_ln304_27_fu_452_p2 );

    SC_METHOD(thread_and_ln304_27_fu_470_p2);
    sensitive << ( and_ln304_25_fu_446_p2 );
    sensitive << ( and_ln304_26_fu_464_p2 );

    SC_METHOD(thread_and_ln304_28_fu_488_p2);
    sensitive << ( icmp_ln304_30_fu_482_p2 );
    sensitive << ( icmp_ln304_29_fu_476_p2 );

    SC_METHOD(thread_and_ln304_29_fu_494_p2);
    sensitive << ( and_ln304_27_fu_470_p2 );
    sensitive << ( and_ln304_28_fu_488_p2 );

    SC_METHOD(thread_and_ln304_2_fu_176_p2);
    sensitive << ( icmp_ln304_4_fu_170_p2 );
    sensitive << ( icmp_ln304_3_fu_164_p2 );

    SC_METHOD(thread_and_ln304_30_fu_512_p2);
    sensitive << ( icmp_ln304_32_fu_506_p2 );
    sensitive << ( icmp_ln304_31_fu_500_p2 );

    SC_METHOD(thread_and_ln304_31_fu_518_p2);
    sensitive << ( and_ln304_29_fu_494_p2 );
    sensitive << ( and_ln304_30_fu_512_p2 );

    SC_METHOD(thread_and_ln304_32_fu_536_p2);
    sensitive << ( icmp_ln304_34_fu_530_p2 );
    sensitive << ( icmp_ln304_33_fu_524_p2 );

    SC_METHOD(thread_and_ln304_33_fu_542_p2);
    sensitive << ( and_ln304_31_fu_518_p2 );
    sensitive << ( and_ln304_32_fu_536_p2 );

    SC_METHOD(thread_and_ln304_34_fu_560_p2);
    sensitive << ( icmp_ln304_36_fu_554_p2 );
    sensitive << ( icmp_ln304_35_fu_548_p2 );

    SC_METHOD(thread_and_ln304_35_fu_566_p2);
    sensitive << ( and_ln304_33_fu_542_p2 );
    sensitive << ( and_ln304_34_fu_560_p2 );

    SC_METHOD(thread_and_ln304_36_fu_584_p2);
    sensitive << ( icmp_ln304_38_fu_578_p2 );
    sensitive << ( icmp_ln304_37_fu_572_p2 );

    SC_METHOD(thread_and_ln304_37_fu_590_p2);
    sensitive << ( and_ln304_35_fu_566_p2 );
    sensitive << ( and_ln304_36_fu_584_p2 );

    SC_METHOD(thread_and_ln304_38_fu_608_p2);
    sensitive << ( icmp_ln304_40_fu_602_p2 );
    sensitive << ( icmp_ln304_39_fu_596_p2 );

    SC_METHOD(thread_and_ln304_39_fu_614_p2);
    sensitive << ( and_ln304_37_fu_590_p2 );
    sensitive << ( and_ln304_38_fu_608_p2 );

    SC_METHOD(thread_and_ln304_3_fu_182_p2);
    sensitive << ( and_ln304_1_fu_158_p2 );
    sensitive << ( and_ln304_2_fu_176_p2 );

    SC_METHOD(thread_and_ln304_40_fu_632_p2);
    sensitive << ( icmp_ln304_42_fu_626_p2 );
    sensitive << ( icmp_ln304_41_fu_620_p2 );

    SC_METHOD(thread_and_ln304_41_fu_638_p2);
    sensitive << ( and_ln304_39_fu_614_p2 );
    sensitive << ( and_ln304_40_fu_632_p2 );

    SC_METHOD(thread_and_ln304_42_fu_656_p2);
    sensitive << ( icmp_ln304_44_fu_650_p2 );
    sensitive << ( icmp_ln304_43_fu_644_p2 );

    SC_METHOD(thread_and_ln304_43_fu_662_p2);
    sensitive << ( and_ln304_41_fu_638_p2 );
    sensitive << ( and_ln304_42_fu_656_p2 );

    SC_METHOD(thread_and_ln304_44_fu_728_p2);
    sensitive << ( icmp_ln304_45_reg_803 );
    sensitive << ( icmp_ln304_46_reg_808 );

    SC_METHOD(thread_and_ln304_45_fu_732_p2);
    sensitive << ( and_ln304_43_reg_798 );
    sensitive << ( and_ln304_44_fu_728_p2 );

    SC_METHOD(thread_and_ln304_46_fu_737_p2);
    sensitive << ( icmp_ln304_47_reg_813 );
    sensitive << ( icmp_ln304_48_reg_818 );

    SC_METHOD(thread_and_ln304_47_fu_741_p2);
    sensitive << ( and_ln304_45_fu_732_p2 );
    sensitive << ( and_ln304_46_fu_737_p2 );

    SC_METHOD(thread_and_ln304_48_fu_747_p2);
    sensitive << ( icmp_ln304_49_reg_823 );
    sensitive << ( icmp_ln304_50_reg_828 );

    SC_METHOD(thread_and_ln304_49_fu_751_p2);
    sensitive << ( and_ln304_47_fu_741_p2 );
    sensitive << ( and_ln304_48_fu_747_p2 );

    SC_METHOD(thread_and_ln304_4_fu_200_p2);
    sensitive << ( icmp_ln304_6_fu_194_p2 );
    sensitive << ( icmp_ln304_5_fu_188_p2 );

    SC_METHOD(thread_and_ln304_50_fu_757_p2);
    sensitive << ( icmp_ln304_51_reg_833 );
    sensitive << ( icmp_ln304_52_reg_838 );

    SC_METHOD(thread_and_ln304_51_fu_761_p2);
    sensitive << ( and_ln304_49_fu_751_p2 );
    sensitive << ( and_ln304_50_fu_757_p2 );

    SC_METHOD(thread_and_ln304_5_fu_206_p2);
    sensitive << ( and_ln304_3_fu_182_p2 );
    sensitive << ( and_ln304_4_fu_200_p2 );

    SC_METHOD(thread_and_ln304_6_fu_224_p2);
    sensitive << ( icmp_ln304_8_fu_218_p2 );
    sensitive << ( icmp_ln304_7_fu_212_p2 );

    SC_METHOD(thread_and_ln304_7_fu_230_p2);
    sensitive << ( and_ln304_5_fu_206_p2 );
    sensitive << ( and_ln304_6_fu_224_p2 );

    SC_METHOD(thread_and_ln304_8_fu_248_p2);
    sensitive << ( icmp_ln304_10_fu_242_p2 );
    sensitive << ( icmp_ln304_9_fu_236_p2 );

    SC_METHOD(thread_and_ln304_9_fu_254_p2);
    sensitive << ( and_ln304_7_fu_230_p2 );
    sensitive << ( and_ln304_8_fu_248_p2 );

    SC_METHOD(thread_and_ln304_fu_152_p2);
    sensitive << ( icmp_ln304_2_fu_146_p2 );
    sensitive << ( icmp_ln304_1_fu_140_p2 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_ap_return);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( p_0_fu_786_p3 );

    SC_METHOD(thread_empty_fu_782_p2);
    sensitive << ( icmp_ln304_53_reg_843 );
    sensitive << ( icmp_ln304_54_reg_848 );

    SC_METHOD(thread_icmp_ln304_10_fu_242_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( usage );

    SC_METHOD(thread_icmp_ln304_11_fu_260_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( usage );

    SC_METHOD(thread_icmp_ln304_12_fu_266_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( usage );

    SC_METHOD(thread_icmp_ln304_13_fu_284_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( usage );

    SC_METHOD(thread_icmp_ln304_14_fu_290_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( usage );

    SC_METHOD(thread_icmp_ln304_15_fu_308_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( usage );

    SC_METHOD(thread_icmp_ln304_16_fu_314_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( usage );

    SC_METHOD(thread_icmp_ln304_17_fu_332_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( usage );

    SC_METHOD(thread_icmp_ln304_18_fu_338_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( usage );

    SC_METHOD(thread_icmp_ln304_19_fu_356_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( usage );

    SC_METHOD(thread_icmp_ln304_1_fu_140_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( usage );

    SC_METHOD(thread_icmp_ln304_20_fu_362_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( usage );

    SC_METHOD(thread_icmp_ln304_21_fu_380_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( usage );

    SC_METHOD(thread_icmp_ln304_22_fu_386_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( usage );

    SC_METHOD(thread_icmp_ln304_23_fu_404_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( usage );

    SC_METHOD(thread_icmp_ln304_24_fu_410_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( usage );

    SC_METHOD(thread_icmp_ln304_25_fu_428_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( usage );

    SC_METHOD(thread_icmp_ln304_26_fu_434_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( usage );

    SC_METHOD(thread_icmp_ln304_27_fu_452_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( usage );

    SC_METHOD(thread_icmp_ln304_28_fu_458_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( usage );

    SC_METHOD(thread_icmp_ln304_29_fu_476_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( usage );

    SC_METHOD(thread_icmp_ln304_2_fu_146_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( usage );

    SC_METHOD(thread_icmp_ln304_30_fu_482_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( usage );

    SC_METHOD(thread_icmp_ln304_31_fu_500_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( usage );

    SC_METHOD(thread_icmp_ln304_32_fu_506_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( usage );

    SC_METHOD(thread_icmp_ln304_33_fu_524_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( usage );

    SC_METHOD(thread_icmp_ln304_34_fu_530_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( usage );

    SC_METHOD(thread_icmp_ln304_35_fu_548_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( usage );

    SC_METHOD(thread_icmp_ln304_36_fu_554_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( usage );

    SC_METHOD(thread_icmp_ln304_37_fu_572_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( usage );

    SC_METHOD(thread_icmp_ln304_38_fu_578_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( usage );

    SC_METHOD(thread_icmp_ln304_39_fu_596_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( usage );

    SC_METHOD(thread_icmp_ln304_3_fu_164_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( usage );

    SC_METHOD(thread_icmp_ln304_40_fu_602_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( usage );

    SC_METHOD(thread_icmp_ln304_41_fu_620_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( usage );

    SC_METHOD(thread_icmp_ln304_42_fu_626_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( usage );

    SC_METHOD(thread_icmp_ln304_43_fu_644_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( usage );

    SC_METHOD(thread_icmp_ln304_44_fu_650_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( usage );

    SC_METHOD(thread_icmp_ln304_45_fu_668_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( usage );

    SC_METHOD(thread_icmp_ln304_46_fu_674_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( usage );

    SC_METHOD(thread_icmp_ln304_47_fu_680_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( usage );

    SC_METHOD(thread_icmp_ln304_48_fu_686_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( usage );

    SC_METHOD(thread_icmp_ln304_49_fu_692_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( usage );

    SC_METHOD(thread_icmp_ln304_4_fu_170_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( usage );

    SC_METHOD(thread_icmp_ln304_50_fu_698_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( usage );

    SC_METHOD(thread_icmp_ln304_51_fu_704_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( usage );

    SC_METHOD(thread_icmp_ln304_52_fu_710_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( usage );

    SC_METHOD(thread_icmp_ln304_53_fu_716_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( usage );

    SC_METHOD(thread_icmp_ln304_54_fu_722_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( usage );

    SC_METHOD(thread_icmp_ln304_5_fu_188_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( usage );

    SC_METHOD(thread_icmp_ln304_6_fu_194_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( usage );

    SC_METHOD(thread_icmp_ln304_7_fu_212_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( usage );

    SC_METHOD(thread_icmp_ln304_8_fu_218_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( usage );

    SC_METHOD(thread_icmp_ln304_9_fu_236_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( usage );

    SC_METHOD(thread_icmp_ln304_fu_134_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( usage );

    SC_METHOD(thread_p_0_fu_786_p3);
    sensitive << ( empty_fu_782_p2 );
    sensitive << ( select_ln304_54_cast_fu_775_p3 );
    sensitive << ( select_ln304_fu_767_p3 );

    SC_METHOD(thread_select_ln304_54_cast_fu_775_p3);
    sensitive << ( icmp_ln304_54_reg_848 );

    SC_METHOD(thread_select_ln304_fu_767_p3);
    sensitive << ( and_ln304_51_fu_761_p2 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    ap_CS_fsm = "01";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "usage_to_carbon_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, usage, "(port)usage");
    sc_trace(mVcdFile, ap_return, "(port)ap_return");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, and_ln304_43_fu_662_p2, "and_ln304_43_fu_662_p2");
    sc_trace(mVcdFile, and_ln304_43_reg_798, "and_ln304_43_reg_798");
    sc_trace(mVcdFile, icmp_ln304_45_fu_668_p2, "icmp_ln304_45_fu_668_p2");
    sc_trace(mVcdFile, icmp_ln304_45_reg_803, "icmp_ln304_45_reg_803");
    sc_trace(mVcdFile, icmp_ln304_46_fu_674_p2, "icmp_ln304_46_fu_674_p2");
    sc_trace(mVcdFile, icmp_ln304_46_reg_808, "icmp_ln304_46_reg_808");
    sc_trace(mVcdFile, icmp_ln304_47_fu_680_p2, "icmp_ln304_47_fu_680_p2");
    sc_trace(mVcdFile, icmp_ln304_47_reg_813, "icmp_ln304_47_reg_813");
    sc_trace(mVcdFile, icmp_ln304_48_fu_686_p2, "icmp_ln304_48_fu_686_p2");
    sc_trace(mVcdFile, icmp_ln304_48_reg_818, "icmp_ln304_48_reg_818");
    sc_trace(mVcdFile, icmp_ln304_49_fu_692_p2, "icmp_ln304_49_fu_692_p2");
    sc_trace(mVcdFile, icmp_ln304_49_reg_823, "icmp_ln304_49_reg_823");
    sc_trace(mVcdFile, icmp_ln304_50_fu_698_p2, "icmp_ln304_50_fu_698_p2");
    sc_trace(mVcdFile, icmp_ln304_50_reg_828, "icmp_ln304_50_reg_828");
    sc_trace(mVcdFile, icmp_ln304_51_fu_704_p2, "icmp_ln304_51_fu_704_p2");
    sc_trace(mVcdFile, icmp_ln304_51_reg_833, "icmp_ln304_51_reg_833");
    sc_trace(mVcdFile, icmp_ln304_52_fu_710_p2, "icmp_ln304_52_fu_710_p2");
    sc_trace(mVcdFile, icmp_ln304_52_reg_838, "icmp_ln304_52_reg_838");
    sc_trace(mVcdFile, icmp_ln304_53_fu_716_p2, "icmp_ln304_53_fu_716_p2");
    sc_trace(mVcdFile, icmp_ln304_53_reg_843, "icmp_ln304_53_reg_843");
    sc_trace(mVcdFile, icmp_ln304_54_fu_722_p2, "icmp_ln304_54_fu_722_p2");
    sc_trace(mVcdFile, icmp_ln304_54_reg_848, "icmp_ln304_54_reg_848");
    sc_trace(mVcdFile, icmp_ln304_2_fu_146_p2, "icmp_ln304_2_fu_146_p2");
    sc_trace(mVcdFile, icmp_ln304_1_fu_140_p2, "icmp_ln304_1_fu_140_p2");
    sc_trace(mVcdFile, icmp_ln304_fu_134_p2, "icmp_ln304_fu_134_p2");
    sc_trace(mVcdFile, and_ln304_fu_152_p2, "and_ln304_fu_152_p2");
    sc_trace(mVcdFile, icmp_ln304_4_fu_170_p2, "icmp_ln304_4_fu_170_p2");
    sc_trace(mVcdFile, icmp_ln304_3_fu_164_p2, "icmp_ln304_3_fu_164_p2");
    sc_trace(mVcdFile, and_ln304_1_fu_158_p2, "and_ln304_1_fu_158_p2");
    sc_trace(mVcdFile, and_ln304_2_fu_176_p2, "and_ln304_2_fu_176_p2");
    sc_trace(mVcdFile, icmp_ln304_6_fu_194_p2, "icmp_ln304_6_fu_194_p2");
    sc_trace(mVcdFile, icmp_ln304_5_fu_188_p2, "icmp_ln304_5_fu_188_p2");
    sc_trace(mVcdFile, and_ln304_3_fu_182_p2, "and_ln304_3_fu_182_p2");
    sc_trace(mVcdFile, and_ln304_4_fu_200_p2, "and_ln304_4_fu_200_p2");
    sc_trace(mVcdFile, icmp_ln304_8_fu_218_p2, "icmp_ln304_8_fu_218_p2");
    sc_trace(mVcdFile, icmp_ln304_7_fu_212_p2, "icmp_ln304_7_fu_212_p2");
    sc_trace(mVcdFile, and_ln304_5_fu_206_p2, "and_ln304_5_fu_206_p2");
    sc_trace(mVcdFile, and_ln304_6_fu_224_p2, "and_ln304_6_fu_224_p2");
    sc_trace(mVcdFile, icmp_ln304_10_fu_242_p2, "icmp_ln304_10_fu_242_p2");
    sc_trace(mVcdFile, icmp_ln304_9_fu_236_p2, "icmp_ln304_9_fu_236_p2");
    sc_trace(mVcdFile, and_ln304_7_fu_230_p2, "and_ln304_7_fu_230_p2");
    sc_trace(mVcdFile, and_ln304_8_fu_248_p2, "and_ln304_8_fu_248_p2");
    sc_trace(mVcdFile, icmp_ln304_12_fu_266_p2, "icmp_ln304_12_fu_266_p2");
    sc_trace(mVcdFile, icmp_ln304_11_fu_260_p2, "icmp_ln304_11_fu_260_p2");
    sc_trace(mVcdFile, and_ln304_9_fu_254_p2, "and_ln304_9_fu_254_p2");
    sc_trace(mVcdFile, and_ln304_10_fu_272_p2, "and_ln304_10_fu_272_p2");
    sc_trace(mVcdFile, icmp_ln304_14_fu_290_p2, "icmp_ln304_14_fu_290_p2");
    sc_trace(mVcdFile, icmp_ln304_13_fu_284_p2, "icmp_ln304_13_fu_284_p2");
    sc_trace(mVcdFile, and_ln304_11_fu_278_p2, "and_ln304_11_fu_278_p2");
    sc_trace(mVcdFile, and_ln304_12_fu_296_p2, "and_ln304_12_fu_296_p2");
    sc_trace(mVcdFile, icmp_ln304_16_fu_314_p2, "icmp_ln304_16_fu_314_p2");
    sc_trace(mVcdFile, icmp_ln304_15_fu_308_p2, "icmp_ln304_15_fu_308_p2");
    sc_trace(mVcdFile, and_ln304_13_fu_302_p2, "and_ln304_13_fu_302_p2");
    sc_trace(mVcdFile, and_ln304_14_fu_320_p2, "and_ln304_14_fu_320_p2");
    sc_trace(mVcdFile, icmp_ln304_18_fu_338_p2, "icmp_ln304_18_fu_338_p2");
    sc_trace(mVcdFile, icmp_ln304_17_fu_332_p2, "icmp_ln304_17_fu_332_p2");
    sc_trace(mVcdFile, and_ln304_15_fu_326_p2, "and_ln304_15_fu_326_p2");
    sc_trace(mVcdFile, and_ln304_16_fu_344_p2, "and_ln304_16_fu_344_p2");
    sc_trace(mVcdFile, icmp_ln304_20_fu_362_p2, "icmp_ln304_20_fu_362_p2");
    sc_trace(mVcdFile, icmp_ln304_19_fu_356_p2, "icmp_ln304_19_fu_356_p2");
    sc_trace(mVcdFile, and_ln304_17_fu_350_p2, "and_ln304_17_fu_350_p2");
    sc_trace(mVcdFile, and_ln304_18_fu_368_p2, "and_ln304_18_fu_368_p2");
    sc_trace(mVcdFile, icmp_ln304_22_fu_386_p2, "icmp_ln304_22_fu_386_p2");
    sc_trace(mVcdFile, icmp_ln304_21_fu_380_p2, "icmp_ln304_21_fu_380_p2");
    sc_trace(mVcdFile, and_ln304_19_fu_374_p2, "and_ln304_19_fu_374_p2");
    sc_trace(mVcdFile, and_ln304_20_fu_392_p2, "and_ln304_20_fu_392_p2");
    sc_trace(mVcdFile, icmp_ln304_24_fu_410_p2, "icmp_ln304_24_fu_410_p2");
    sc_trace(mVcdFile, icmp_ln304_23_fu_404_p2, "icmp_ln304_23_fu_404_p2");
    sc_trace(mVcdFile, and_ln304_21_fu_398_p2, "and_ln304_21_fu_398_p2");
    sc_trace(mVcdFile, and_ln304_22_fu_416_p2, "and_ln304_22_fu_416_p2");
    sc_trace(mVcdFile, icmp_ln304_26_fu_434_p2, "icmp_ln304_26_fu_434_p2");
    sc_trace(mVcdFile, icmp_ln304_25_fu_428_p2, "icmp_ln304_25_fu_428_p2");
    sc_trace(mVcdFile, and_ln304_23_fu_422_p2, "and_ln304_23_fu_422_p2");
    sc_trace(mVcdFile, and_ln304_24_fu_440_p2, "and_ln304_24_fu_440_p2");
    sc_trace(mVcdFile, icmp_ln304_28_fu_458_p2, "icmp_ln304_28_fu_458_p2");
    sc_trace(mVcdFile, icmp_ln304_27_fu_452_p2, "icmp_ln304_27_fu_452_p2");
    sc_trace(mVcdFile, and_ln304_25_fu_446_p2, "and_ln304_25_fu_446_p2");
    sc_trace(mVcdFile, and_ln304_26_fu_464_p2, "and_ln304_26_fu_464_p2");
    sc_trace(mVcdFile, icmp_ln304_30_fu_482_p2, "icmp_ln304_30_fu_482_p2");
    sc_trace(mVcdFile, icmp_ln304_29_fu_476_p2, "icmp_ln304_29_fu_476_p2");
    sc_trace(mVcdFile, and_ln304_27_fu_470_p2, "and_ln304_27_fu_470_p2");
    sc_trace(mVcdFile, and_ln304_28_fu_488_p2, "and_ln304_28_fu_488_p2");
    sc_trace(mVcdFile, icmp_ln304_32_fu_506_p2, "icmp_ln304_32_fu_506_p2");
    sc_trace(mVcdFile, icmp_ln304_31_fu_500_p2, "icmp_ln304_31_fu_500_p2");
    sc_trace(mVcdFile, and_ln304_29_fu_494_p2, "and_ln304_29_fu_494_p2");
    sc_trace(mVcdFile, and_ln304_30_fu_512_p2, "and_ln304_30_fu_512_p2");
    sc_trace(mVcdFile, icmp_ln304_34_fu_530_p2, "icmp_ln304_34_fu_530_p2");
    sc_trace(mVcdFile, icmp_ln304_33_fu_524_p2, "icmp_ln304_33_fu_524_p2");
    sc_trace(mVcdFile, and_ln304_31_fu_518_p2, "and_ln304_31_fu_518_p2");
    sc_trace(mVcdFile, and_ln304_32_fu_536_p2, "and_ln304_32_fu_536_p2");
    sc_trace(mVcdFile, icmp_ln304_36_fu_554_p2, "icmp_ln304_36_fu_554_p2");
    sc_trace(mVcdFile, icmp_ln304_35_fu_548_p2, "icmp_ln304_35_fu_548_p2");
    sc_trace(mVcdFile, and_ln304_33_fu_542_p2, "and_ln304_33_fu_542_p2");
    sc_trace(mVcdFile, and_ln304_34_fu_560_p2, "and_ln304_34_fu_560_p2");
    sc_trace(mVcdFile, icmp_ln304_38_fu_578_p2, "icmp_ln304_38_fu_578_p2");
    sc_trace(mVcdFile, icmp_ln304_37_fu_572_p2, "icmp_ln304_37_fu_572_p2");
    sc_trace(mVcdFile, and_ln304_35_fu_566_p2, "and_ln304_35_fu_566_p2");
    sc_trace(mVcdFile, and_ln304_36_fu_584_p2, "and_ln304_36_fu_584_p2");
    sc_trace(mVcdFile, icmp_ln304_40_fu_602_p2, "icmp_ln304_40_fu_602_p2");
    sc_trace(mVcdFile, icmp_ln304_39_fu_596_p2, "icmp_ln304_39_fu_596_p2");
    sc_trace(mVcdFile, and_ln304_37_fu_590_p2, "and_ln304_37_fu_590_p2");
    sc_trace(mVcdFile, and_ln304_38_fu_608_p2, "and_ln304_38_fu_608_p2");
    sc_trace(mVcdFile, icmp_ln304_42_fu_626_p2, "icmp_ln304_42_fu_626_p2");
    sc_trace(mVcdFile, icmp_ln304_41_fu_620_p2, "icmp_ln304_41_fu_620_p2");
    sc_trace(mVcdFile, and_ln304_39_fu_614_p2, "and_ln304_39_fu_614_p2");
    sc_trace(mVcdFile, and_ln304_40_fu_632_p2, "and_ln304_40_fu_632_p2");
    sc_trace(mVcdFile, icmp_ln304_44_fu_650_p2, "icmp_ln304_44_fu_650_p2");
    sc_trace(mVcdFile, icmp_ln304_43_fu_644_p2, "icmp_ln304_43_fu_644_p2");
    sc_trace(mVcdFile, and_ln304_41_fu_638_p2, "and_ln304_41_fu_638_p2");
    sc_trace(mVcdFile, and_ln304_42_fu_656_p2, "and_ln304_42_fu_656_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, and_ln304_44_fu_728_p2, "and_ln304_44_fu_728_p2");
    sc_trace(mVcdFile, and_ln304_45_fu_732_p2, "and_ln304_45_fu_732_p2");
    sc_trace(mVcdFile, and_ln304_46_fu_737_p2, "and_ln304_46_fu_737_p2");
    sc_trace(mVcdFile, and_ln304_47_fu_741_p2, "and_ln304_47_fu_741_p2");
    sc_trace(mVcdFile, and_ln304_48_fu_747_p2, "and_ln304_48_fu_747_p2");
    sc_trace(mVcdFile, and_ln304_49_fu_751_p2, "and_ln304_49_fu_751_p2");
    sc_trace(mVcdFile, and_ln304_50_fu_757_p2, "and_ln304_50_fu_757_p2");
    sc_trace(mVcdFile, and_ln304_51_fu_761_p2, "and_ln304_51_fu_761_p2");
    sc_trace(mVcdFile, empty_fu_782_p2, "empty_fu_782_p2");
    sc_trace(mVcdFile, select_ln304_54_cast_fu_775_p3, "select_ln304_54_cast_fu_775_p3");
    sc_trace(mVcdFile, select_ln304_fu_767_p3, "select_ln304_fu_767_p3");
    sc_trace(mVcdFile, p_0_fu_786_p3, "p_0_fu_786_p3");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
    mHdltvinHandle.open("usage_to_carbon.hdltvin.dat");
    mHdltvoutHandle.open("usage_to_carbon.hdltvout.dat");
}

usage_to_carbon::~usage_to_carbon() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
}

void usage_to_carbon::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        and_ln304_43_reg_798 = and_ln304_43_fu_662_p2.read();
        icmp_ln304_45_reg_803 = icmp_ln304_45_fu_668_p2.read();
        icmp_ln304_46_reg_808 = icmp_ln304_46_fu_674_p2.read();
        icmp_ln304_47_reg_813 = icmp_ln304_47_fu_680_p2.read();
        icmp_ln304_48_reg_818 = icmp_ln304_48_fu_686_p2.read();
        icmp_ln304_49_reg_823 = icmp_ln304_49_fu_692_p2.read();
        icmp_ln304_50_reg_828 = icmp_ln304_50_fu_698_p2.read();
        icmp_ln304_51_reg_833 = icmp_ln304_51_fu_704_p2.read();
        icmp_ln304_52_reg_838 = icmp_ln304_52_fu_710_p2.read();
        icmp_ln304_53_reg_843 = icmp_ln304_53_fu_716_p2.read();
        icmp_ln304_54_reg_848 = icmp_ln304_54_fu_722_p2.read();
    }
}

void usage_to_carbon::thread_and_ln304_10_fu_272_p2() {
    and_ln304_10_fu_272_p2 = (icmp_ln304_12_fu_266_p2.read() & icmp_ln304_11_fu_260_p2.read());
}

void usage_to_carbon::thread_and_ln304_11_fu_278_p2() {
    and_ln304_11_fu_278_p2 = (and_ln304_9_fu_254_p2.read() & and_ln304_10_fu_272_p2.read());
}

void usage_to_carbon::thread_and_ln304_12_fu_296_p2() {
    and_ln304_12_fu_296_p2 = (icmp_ln304_14_fu_290_p2.read() & icmp_ln304_13_fu_284_p2.read());
}

void usage_to_carbon::thread_and_ln304_13_fu_302_p2() {
    and_ln304_13_fu_302_p2 = (and_ln304_11_fu_278_p2.read() & and_ln304_12_fu_296_p2.read());
}

void usage_to_carbon::thread_and_ln304_14_fu_320_p2() {
    and_ln304_14_fu_320_p2 = (icmp_ln304_16_fu_314_p2.read() & icmp_ln304_15_fu_308_p2.read());
}

void usage_to_carbon::thread_and_ln304_15_fu_326_p2() {
    and_ln304_15_fu_326_p2 = (and_ln304_13_fu_302_p2.read() & and_ln304_14_fu_320_p2.read());
}

void usage_to_carbon::thread_and_ln304_16_fu_344_p2() {
    and_ln304_16_fu_344_p2 = (icmp_ln304_18_fu_338_p2.read() & icmp_ln304_17_fu_332_p2.read());
}

void usage_to_carbon::thread_and_ln304_17_fu_350_p2() {
    and_ln304_17_fu_350_p2 = (and_ln304_15_fu_326_p2.read() & and_ln304_16_fu_344_p2.read());
}

void usage_to_carbon::thread_and_ln304_18_fu_368_p2() {
    and_ln304_18_fu_368_p2 = (icmp_ln304_20_fu_362_p2.read() & icmp_ln304_19_fu_356_p2.read());
}

void usage_to_carbon::thread_and_ln304_19_fu_374_p2() {
    and_ln304_19_fu_374_p2 = (and_ln304_17_fu_350_p2.read() & and_ln304_18_fu_368_p2.read());
}

void usage_to_carbon::thread_and_ln304_1_fu_158_p2() {
    and_ln304_1_fu_158_p2 = (icmp_ln304_fu_134_p2.read() & and_ln304_fu_152_p2.read());
}

void usage_to_carbon::thread_and_ln304_20_fu_392_p2() {
    and_ln304_20_fu_392_p2 = (icmp_ln304_22_fu_386_p2.read() & icmp_ln304_21_fu_380_p2.read());
}

void usage_to_carbon::thread_and_ln304_21_fu_398_p2() {
    and_ln304_21_fu_398_p2 = (and_ln304_19_fu_374_p2.read() & and_ln304_20_fu_392_p2.read());
}

void usage_to_carbon::thread_and_ln304_22_fu_416_p2() {
    and_ln304_22_fu_416_p2 = (icmp_ln304_24_fu_410_p2.read() & icmp_ln304_23_fu_404_p2.read());
}

void usage_to_carbon::thread_and_ln304_23_fu_422_p2() {
    and_ln304_23_fu_422_p2 = (and_ln304_21_fu_398_p2.read() & and_ln304_22_fu_416_p2.read());
}

void usage_to_carbon::thread_and_ln304_24_fu_440_p2() {
    and_ln304_24_fu_440_p2 = (icmp_ln304_26_fu_434_p2.read() & icmp_ln304_25_fu_428_p2.read());
}

void usage_to_carbon::thread_and_ln304_25_fu_446_p2() {
    and_ln304_25_fu_446_p2 = (and_ln304_23_fu_422_p2.read() & and_ln304_24_fu_440_p2.read());
}

void usage_to_carbon::thread_and_ln304_26_fu_464_p2() {
    and_ln304_26_fu_464_p2 = (icmp_ln304_28_fu_458_p2.read() & icmp_ln304_27_fu_452_p2.read());
}

void usage_to_carbon::thread_and_ln304_27_fu_470_p2() {
    and_ln304_27_fu_470_p2 = (and_ln304_25_fu_446_p2.read() & and_ln304_26_fu_464_p2.read());
}

void usage_to_carbon::thread_and_ln304_28_fu_488_p2() {
    and_ln304_28_fu_488_p2 = (icmp_ln304_30_fu_482_p2.read() & icmp_ln304_29_fu_476_p2.read());
}

void usage_to_carbon::thread_and_ln304_29_fu_494_p2() {
    and_ln304_29_fu_494_p2 = (and_ln304_27_fu_470_p2.read() & and_ln304_28_fu_488_p2.read());
}

void usage_to_carbon::thread_and_ln304_2_fu_176_p2() {
    and_ln304_2_fu_176_p2 = (icmp_ln304_4_fu_170_p2.read() & icmp_ln304_3_fu_164_p2.read());
}

void usage_to_carbon::thread_and_ln304_30_fu_512_p2() {
    and_ln304_30_fu_512_p2 = (icmp_ln304_32_fu_506_p2.read() & icmp_ln304_31_fu_500_p2.read());
}

void usage_to_carbon::thread_and_ln304_31_fu_518_p2() {
    and_ln304_31_fu_518_p2 = (and_ln304_29_fu_494_p2.read() & and_ln304_30_fu_512_p2.read());
}

void usage_to_carbon::thread_and_ln304_32_fu_536_p2() {
    and_ln304_32_fu_536_p2 = (icmp_ln304_34_fu_530_p2.read() & icmp_ln304_33_fu_524_p2.read());
}

void usage_to_carbon::thread_and_ln304_33_fu_542_p2() {
    and_ln304_33_fu_542_p2 = (and_ln304_31_fu_518_p2.read() & and_ln304_32_fu_536_p2.read());
}

void usage_to_carbon::thread_and_ln304_34_fu_560_p2() {
    and_ln304_34_fu_560_p2 = (icmp_ln304_36_fu_554_p2.read() & icmp_ln304_35_fu_548_p2.read());
}

void usage_to_carbon::thread_and_ln304_35_fu_566_p2() {
    and_ln304_35_fu_566_p2 = (and_ln304_33_fu_542_p2.read() & and_ln304_34_fu_560_p2.read());
}

void usage_to_carbon::thread_and_ln304_36_fu_584_p2() {
    and_ln304_36_fu_584_p2 = (icmp_ln304_38_fu_578_p2.read() & icmp_ln304_37_fu_572_p2.read());
}

void usage_to_carbon::thread_and_ln304_37_fu_590_p2() {
    and_ln304_37_fu_590_p2 = (and_ln304_35_fu_566_p2.read() & and_ln304_36_fu_584_p2.read());
}

void usage_to_carbon::thread_and_ln304_38_fu_608_p2() {
    and_ln304_38_fu_608_p2 = (icmp_ln304_40_fu_602_p2.read() & icmp_ln304_39_fu_596_p2.read());
}

void usage_to_carbon::thread_and_ln304_39_fu_614_p2() {
    and_ln304_39_fu_614_p2 = (and_ln304_37_fu_590_p2.read() & and_ln304_38_fu_608_p2.read());
}

void usage_to_carbon::thread_and_ln304_3_fu_182_p2() {
    and_ln304_3_fu_182_p2 = (and_ln304_1_fu_158_p2.read() & and_ln304_2_fu_176_p2.read());
}

void usage_to_carbon::thread_and_ln304_40_fu_632_p2() {
    and_ln304_40_fu_632_p2 = (icmp_ln304_42_fu_626_p2.read() & icmp_ln304_41_fu_620_p2.read());
}

void usage_to_carbon::thread_and_ln304_41_fu_638_p2() {
    and_ln304_41_fu_638_p2 = (and_ln304_39_fu_614_p2.read() & and_ln304_40_fu_632_p2.read());
}

void usage_to_carbon::thread_and_ln304_42_fu_656_p2() {
    and_ln304_42_fu_656_p2 = (icmp_ln304_44_fu_650_p2.read() & icmp_ln304_43_fu_644_p2.read());
}

void usage_to_carbon::thread_and_ln304_43_fu_662_p2() {
    and_ln304_43_fu_662_p2 = (and_ln304_41_fu_638_p2.read() & and_ln304_42_fu_656_p2.read());
}

void usage_to_carbon::thread_and_ln304_44_fu_728_p2() {
    and_ln304_44_fu_728_p2 = (icmp_ln304_46_reg_808.read() & icmp_ln304_45_reg_803.read());
}

void usage_to_carbon::thread_and_ln304_45_fu_732_p2() {
    and_ln304_45_fu_732_p2 = (and_ln304_43_reg_798.read() & and_ln304_44_fu_728_p2.read());
}

void usage_to_carbon::thread_and_ln304_46_fu_737_p2() {
    and_ln304_46_fu_737_p2 = (icmp_ln304_48_reg_818.read() & icmp_ln304_47_reg_813.read());
}

void usage_to_carbon::thread_and_ln304_47_fu_741_p2() {
    and_ln304_47_fu_741_p2 = (and_ln304_45_fu_732_p2.read() & and_ln304_46_fu_737_p2.read());
}

void usage_to_carbon::thread_and_ln304_48_fu_747_p2() {
    and_ln304_48_fu_747_p2 = (icmp_ln304_50_reg_828.read() & icmp_ln304_49_reg_823.read());
}

void usage_to_carbon::thread_and_ln304_49_fu_751_p2() {
    and_ln304_49_fu_751_p2 = (and_ln304_47_fu_741_p2.read() & and_ln304_48_fu_747_p2.read());
}

void usage_to_carbon::thread_and_ln304_4_fu_200_p2() {
    and_ln304_4_fu_200_p2 = (icmp_ln304_6_fu_194_p2.read() & icmp_ln304_5_fu_188_p2.read());
}

void usage_to_carbon::thread_and_ln304_50_fu_757_p2() {
    and_ln304_50_fu_757_p2 = (icmp_ln304_52_reg_838.read() & icmp_ln304_51_reg_833.read());
}

void usage_to_carbon::thread_and_ln304_51_fu_761_p2() {
    and_ln304_51_fu_761_p2 = (and_ln304_49_fu_751_p2.read() & and_ln304_50_fu_757_p2.read());
}

void usage_to_carbon::thread_and_ln304_5_fu_206_p2() {
    and_ln304_5_fu_206_p2 = (and_ln304_3_fu_182_p2.read() & and_ln304_4_fu_200_p2.read());
}

void usage_to_carbon::thread_and_ln304_6_fu_224_p2() {
    and_ln304_6_fu_224_p2 = (icmp_ln304_8_fu_218_p2.read() & icmp_ln304_7_fu_212_p2.read());
}

void usage_to_carbon::thread_and_ln304_7_fu_230_p2() {
    and_ln304_7_fu_230_p2 = (and_ln304_5_fu_206_p2.read() & and_ln304_6_fu_224_p2.read());
}

void usage_to_carbon::thread_and_ln304_8_fu_248_p2() {
    and_ln304_8_fu_248_p2 = (icmp_ln304_10_fu_242_p2.read() & icmp_ln304_9_fu_236_p2.read());
}

void usage_to_carbon::thread_and_ln304_9_fu_254_p2() {
    and_ln304_9_fu_254_p2 = (and_ln304_7_fu_230_p2.read() & and_ln304_8_fu_248_p2.read());
}

void usage_to_carbon::thread_and_ln304_fu_152_p2() {
    and_ln304_fu_152_p2 = (icmp_ln304_2_fu_146_p2.read() & icmp_ln304_1_fu_140_p2.read());
}

void usage_to_carbon::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void usage_to_carbon::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void usage_to_carbon::thread_ap_done() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void usage_to_carbon::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void usage_to_carbon::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void usage_to_carbon::thread_ap_return() {
    ap_return = esl_zext<32,7>(p_0_fu_786_p3.read());
}

void usage_to_carbon::thread_empty_fu_782_p2() {
    empty_fu_782_p2 = (icmp_ln304_54_reg_848.read() | icmp_ln304_53_reg_843.read());
}

void usage_to_carbon::thread_icmp_ln304_10_fu_242_p2() {
    icmp_ln304_10_fu_242_p2 = (!usage.read().is_01() || !ap_const_lv32_99.is_01())? sc_lv<1>(): sc_lv<1>(usage.read() != ap_const_lv32_99);
}

void usage_to_carbon::thread_icmp_ln304_11_fu_260_p2() {
    icmp_ln304_11_fu_260_p2 = (!usage.read().is_01() || !ap_const_lv32_C9.is_01())? sc_lv<1>(): sc_lv<1>(usage.read() != ap_const_lv32_C9);
}

void usage_to_carbon::thread_icmp_ln304_12_fu_266_p2() {
    icmp_ln304_12_fu_266_p2 = (!usage.read().is_01() || !ap_const_lv32_CA.is_01())? sc_lv<1>(): sc_lv<1>(usage.read() != ap_const_lv32_CA);
}

void usage_to_carbon::thread_icmp_ln304_13_fu_284_p2() {
    icmp_ln304_13_fu_284_p2 = (!usage.read().is_01() || !ap_const_lv32_88.is_01())? sc_lv<1>(): sc_lv<1>(usage.read() != ap_const_lv32_88);
}

void usage_to_carbon::thread_icmp_ln304_14_fu_290_p2() {
    icmp_ln304_14_fu_290_p2 = (!usage.read().is_01() || !ap_const_lv32_C8.is_01())? sc_lv<1>(): sc_lv<1>(usage.read() != ap_const_lv32_C8);
}

void usage_to_carbon::thread_icmp_ln304_15_fu_308_p2() {
    icmp_ln304_15_fu_308_p2 = (!usage.read().is_01() || !ap_const_lv32_E4.is_01())? sc_lv<1>(): sc_lv<1>(usage.read() != ap_const_lv32_E4);
}

void usage_to_carbon::thread_icmp_ln304_16_fu_314_p2() {
    icmp_ln304_16_fu_314_p2 = (!usage.read().is_01() || !ap_const_lv32_85.is_01())? sc_lv<1>(): sc_lv<1>(usage.read() != ap_const_lv32_85);
}

void usage_to_carbon::thread_icmp_ln304_17_fu_332_p2() {
    icmp_ln304_17_fu_332_p2 = (!usage.read().is_01() || !ap_const_lv32_E2.is_01())? sc_lv<1>(): sc_lv<1>(usage.read() != ap_const_lv32_E2);
}

void usage_to_carbon::thread_icmp_ln304_18_fu_338_p2() {
    icmp_ln304_18_fu_338_p2 = (!usage.read().is_01() || !ap_const_lv32_E3.is_01())? sc_lv<1>(): sc_lv<1>(usage.read() != ap_const_lv32_E3);
}

void usage_to_carbon::thread_icmp_ln304_19_fu_356_p2() {
    icmp_ln304_19_fu_356_p2 = (!usage.read().is_01() || !ap_const_lv32_E0.is_01())? sc_lv<1>(): sc_lv<1>(usage.read() != ap_const_lv32_E0);
}

void usage_to_carbon::thread_icmp_ln304_1_fu_140_p2() {
    icmp_ln304_1_fu_140_p2 = (!usage.read().is_01() || !ap_const_lv32_121.is_01())? sc_lv<1>(): sc_lv<1>(usage.read() != ap_const_lv32_121);
}

void usage_to_carbon::thread_icmp_ln304_20_fu_362_p2() {
    icmp_ln304_20_fu_362_p2 = (!usage.read().is_01() || !ap_const_lv32_E1.is_01())? sc_lv<1>(): sc_lv<1>(usage.read() != ap_const_lv32_E1);
}

void usage_to_carbon::thread_icmp_ln304_21_fu_380_p2() {
    icmp_ln304_21_fu_380_p2 = (!usage.read().is_01() || !ap_const_lv32_DE.is_01())? sc_lv<1>(): sc_lv<1>(usage.read() != ap_const_lv32_DE);
}

void usage_to_carbon::thread_icmp_ln304_22_fu_386_p2() {
    icmp_ln304_22_fu_386_p2 = (!usage.read().is_01() || !ap_const_lv32_DF.is_01())? sc_lv<1>(): sc_lv<1>(usage.read() != ap_const_lv32_DF);
}

void usage_to_carbon::thread_icmp_ln304_23_fu_404_p2() {
    icmp_ln304_23_fu_404_p2 = (!usage.read().is_01() || !ap_const_lv32_DC.is_01())? sc_lv<1>(): sc_lv<1>(usage.read() != ap_const_lv32_DC);
}

void usage_to_carbon::thread_icmp_ln304_24_fu_410_p2() {
    icmp_ln304_24_fu_410_p2 = (!usage.read().is_01() || !ap_const_lv32_DD.is_01())? sc_lv<1>(): sc_lv<1>(usage.read() != ap_const_lv32_DD);
}

void usage_to_carbon::thread_icmp_ln304_25_fu_428_p2() {
    icmp_ln304_25_fu_428_p2 = (!usage.read().is_01() || !ap_const_lv32_D7.is_01())? sc_lv<1>(): sc_lv<1>(usage.read() != ap_const_lv32_D7);
}

void usage_to_carbon::thread_icmp_ln304_26_fu_434_p2() {
    icmp_ln304_26_fu_434_p2 = (!usage.read().is_01() || !ap_const_lv32_D8.is_01())? sc_lv<1>(): sc_lv<1>(usage.read() != ap_const_lv32_D8);
}

void usage_to_carbon::thread_icmp_ln304_27_fu_452_p2() {
    icmp_ln304_27_fu_452_p2 = (!usage.read().is_01() || !ap_const_lv32_D5.is_01())? sc_lv<1>(): sc_lv<1>(usage.read() != ap_const_lv32_D5);
}

void usage_to_carbon::thread_icmp_ln304_28_fu_458_p2() {
    icmp_ln304_28_fu_458_p2 = (!usage.read().is_01() || !ap_const_lv32_D6.is_01())? sc_lv<1>(): sc_lv<1>(usage.read() != ap_const_lv32_D6);
}

void usage_to_carbon::thread_icmp_ln304_29_fu_476_p2() {
    icmp_ln304_29_fu_476_p2 = (!usage.read().is_01() || !ap_const_lv32_D3.is_01())? sc_lv<1>(): sc_lv<1>(usage.read() != ap_const_lv32_D3);
}

void usage_to_carbon::thread_icmp_ln304_2_fu_146_p2() {
    icmp_ln304_2_fu_146_p2 = (!usage.read().is_01() || !ap_const_lv32_A2.is_01())? sc_lv<1>(): sc_lv<1>(usage.read() != ap_const_lv32_A2);
}

void usage_to_carbon::thread_icmp_ln304_30_fu_482_p2() {
    icmp_ln304_30_fu_482_p2 = (!usage.read().is_01() || !ap_const_lv32_D4.is_01())? sc_lv<1>(): sc_lv<1>(usage.read() != ap_const_lv32_D4);
}

void usage_to_carbon::thread_icmp_ln304_31_fu_500_p2() {
    icmp_ln304_31_fu_500_p2 = (!usage.read().is_01() || !ap_const_lv32_D1.is_01())? sc_lv<1>(): sc_lv<1>(usage.read() != ap_const_lv32_D1);
}

void usage_to_carbon::thread_icmp_ln304_32_fu_506_p2() {
    icmp_ln304_32_fu_506_p2 = (!usage.read().is_01() || !ap_const_lv32_D2.is_01())? sc_lv<1>(): sc_lv<1>(usage.read() != ap_const_lv32_D2);
}

void usage_to_carbon::thread_icmp_ln304_33_fu_524_p2() {
    icmp_ln304_33_fu_524_p2 = (!usage.read().is_01() || !ap_const_lv32_120.is_01())? sc_lv<1>(): sc_lv<1>(usage.read() != ap_const_lv32_120);
}

void usage_to_carbon::thread_icmp_ln304_34_fu_530_p2() {
    icmp_ln304_34_fu_530_p2 = (!usage.read().is_01() || !ap_const_lv32_D0.is_01())? sc_lv<1>(): sc_lv<1>(usage.read() != ap_const_lv32_D0);
}

void usage_to_carbon::thread_icmp_ln304_35_fu_548_p2() {
    icmp_ln304_35_fu_548_p2 = (!usage.read().is_01() || !ap_const_lv32_11B.is_01())? sc_lv<1>(): sc_lv<1>(usage.read() != ap_const_lv32_11B);
}

void usage_to_carbon::thread_icmp_ln304_36_fu_554_p2() {
    icmp_ln304_36_fu_554_p2 = (!usage.read().is_01() || !ap_const_lv32_A1.is_01())? sc_lv<1>(): sc_lv<1>(usage.read() != ap_const_lv32_A1);
}

void usage_to_carbon::thread_icmp_ln304_37_fu_572_p2() {
    icmp_ln304_37_fu_572_p2 = (!usage.read().is_01() || !ap_const_lv32_B4.is_01())? sc_lv<1>(): sc_lv<1>(usage.read() != ap_const_lv32_B4);
}

void usage_to_carbon::thread_icmp_ln304_38_fu_578_p2() {
    icmp_ln304_38_fu_578_p2 = (!usage.read().is_01() || !ap_const_lv32_119.is_01())? sc_lv<1>(): sc_lv<1>(usage.read() != ap_const_lv32_119);
}

void usage_to_carbon::thread_icmp_ln304_39_fu_596_p2() {
    icmp_ln304_39_fu_596_p2 = (!usage.read().is_01() || !ap_const_lv32_A5.is_01())? sc_lv<1>(): sc_lv<1>(usage.read() != ap_const_lv32_A5);
}

void usage_to_carbon::thread_icmp_ln304_3_fu_164_p2() {
    icmp_ln304_3_fu_164_p2 = (!usage.read().is_01() || !ap_const_lv32_113.is_01())? sc_lv<1>(): sc_lv<1>(usage.read() != ap_const_lv32_113);
}

void usage_to_carbon::thread_icmp_ln304_40_fu_602_p2() {
    icmp_ln304_40_fu_602_p2 = (!usage.read().is_01() || !ap_const_lv32_B0.is_01())? sc_lv<1>(): sc_lv<1>(usage.read() != ap_const_lv32_B0);
}

void usage_to_carbon::thread_icmp_ln304_41_fu_620_p2() {
    icmp_ln304_41_fu_620_p2 = (!usage.read().is_01() || !ap_const_lv32_BF.is_01())? sc_lv<1>(): sc_lv<1>(usage.read() != ap_const_lv32_BF);
}

void usage_to_carbon::thread_icmp_ln304_42_fu_626_p2() {
    icmp_ln304_42_fu_626_p2 = (!usage.read().is_01() || !ap_const_lv32_BE.is_01())? sc_lv<1>(): sc_lv<1>(usage.read() != ap_const_lv32_BE);
}

void usage_to_carbon::thread_icmp_ln304_43_fu_644_p2() {
    icmp_ln304_43_fu_644_p2 = (!usage.read().is_01() || !ap_const_lv32_114.is_01())? sc_lv<1>(): sc_lv<1>(usage.read() != ap_const_lv32_114);
}

void usage_to_carbon::thread_icmp_ln304_44_fu_650_p2() {
    icmp_ln304_44_fu_650_p2 = (!usage.read().is_01() || !ap_const_lv32_118.is_01())? sc_lv<1>(): sc_lv<1>(usage.read() != ap_const_lv32_118);
}

void usage_to_carbon::thread_icmp_ln304_45_fu_668_p2() {
    icmp_ln304_45_fu_668_p2 = (!usage.read().is_01() || !ap_const_lv32_CD.is_01())? sc_lv<1>(): sc_lv<1>(usage.read() != ap_const_lv32_CD);
}

void usage_to_carbon::thread_icmp_ln304_46_fu_674_p2() {
    icmp_ln304_46_fu_674_p2 = (!usage.read().is_01() || !ap_const_lv32_108.is_01())? sc_lv<1>(): sc_lv<1>(usage.read() != ap_const_lv32_108);
}

void usage_to_carbon::thread_icmp_ln304_47_fu_680_p2() {
    icmp_ln304_47_fu_680_p2 = (!usage.read().is_01() || !ap_const_lv32_CF.is_01())? sc_lv<1>(): sc_lv<1>(usage.read() != ap_const_lv32_CF);
}

void usage_to_carbon::thread_icmp_ln304_48_fu_686_p2() {
    icmp_ln304_48_fu_686_p2 = (!usage.read().is_01() || !ap_const_lv32_CB.is_01())? sc_lv<1>(): sc_lv<1>(usage.read() != ap_const_lv32_CB);
}

void usage_to_carbon::thread_icmp_ln304_49_fu_692_p2() {
    icmp_ln304_49_fu_692_p2 = (!usage.read().is_01() || !ap_const_lv32_AC.is_01())? sc_lv<1>(): sc_lv<1>(usage.read() != ap_const_lv32_AC);
}

void usage_to_carbon::thread_icmp_ln304_4_fu_170_p2() {
    icmp_ln304_4_fu_170_p2 = (!usage.read().is_01() || !ap_const_lv32_9D.is_01())? sc_lv<1>(): sc_lv<1>(usage.read() != ap_const_lv32_9D);
}

void usage_to_carbon::thread_icmp_ln304_50_fu_698_p2() {
    icmp_ln304_50_fu_698_p2 = (!usage.read().is_01() || !ap_const_lv32_CC.is_01())? sc_lv<1>(): sc_lv<1>(usage.read() != ap_const_lv32_CC);
}

void usage_to_carbon::thread_icmp_ln304_51_fu_704_p2() {
    icmp_ln304_51_fu_704_p2 = (!usage.read().is_01() || !ap_const_lv32_AE.is_01())? sc_lv<1>(): sc_lv<1>(usage.read() != ap_const_lv32_AE);
}

void usage_to_carbon::thread_icmp_ln304_52_fu_710_p2() {
    icmp_ln304_52_fu_710_p2 = (!usage.read().is_01() || !ap_const_lv32_AA.is_01())? sc_lv<1>(): sc_lv<1>(usage.read() != ap_const_lv32_AA);
}

void usage_to_carbon::thread_icmp_ln304_53_fu_716_p2() {
    icmp_ln304_53_fu_716_p2 = (!usage.read().is_01() || !ap_const_lv32_AB.is_01())? sc_lv<1>(): sc_lv<1>(usage.read() == ap_const_lv32_AB);
}

void usage_to_carbon::thread_icmp_ln304_54_fu_722_p2() {
    icmp_ln304_54_fu_722_p2 = (!usage.read().is_01() || !ap_const_lv32_94.is_01())? sc_lv<1>(): sc_lv<1>(usage.read() == ap_const_lv32_94);
}

void usage_to_carbon::thread_icmp_ln304_5_fu_188_p2() {
    icmp_ln304_5_fu_188_p2 = (!usage.read().is_01() || !ap_const_lv32_B9.is_01())? sc_lv<1>(): sc_lv<1>(usage.read() != ap_const_lv32_B9);
}

void usage_to_carbon::thread_icmp_ln304_6_fu_194_p2() {
    icmp_ln304_6_fu_194_p2 = (!usage.read().is_01() || !ap_const_lv32_115.is_01())? sc_lv<1>(): sc_lv<1>(usage.read() != ap_const_lv32_115);
}

void usage_to_carbon::thread_icmp_ln304_7_fu_212_p2() {
    icmp_ln304_7_fu_212_p2 = (!usage.read().is_01() || !ap_const_lv32_C5.is_01())? sc_lv<1>(): sc_lv<1>(usage.read() != ap_const_lv32_C5);
}

void usage_to_carbon::thread_icmp_ln304_8_fu_218_p2() {
    icmp_ln304_8_fu_218_p2 = (!usage.read().is_01() || !ap_const_lv32_ED.is_01())? sc_lv<1>(): sc_lv<1>(usage.read() != ap_const_lv32_ED);
}

void usage_to_carbon::thread_icmp_ln304_9_fu_236_p2() {
    icmp_ln304_9_fu_236_p2 = (!usage.read().is_01() || !ap_const_lv32_9A.is_01())? sc_lv<1>(): sc_lv<1>(usage.read() != ap_const_lv32_9A);
}

void usage_to_carbon::thread_icmp_ln304_fu_134_p2() {
    icmp_ln304_fu_134_p2 = (!usage.read().is_01() || !ap_const_lv32_C6.is_01())? sc_lv<1>(): sc_lv<1>(usage.read() == ap_const_lv32_C6);
}

void usage_to_carbon::thread_p_0_fu_786_p3() {
    p_0_fu_786_p3 = (!empty_fu_782_p2.read()[0].is_01())? sc_lv<7>(): ((empty_fu_782_p2.read()[0].to_bool())? select_ln304_54_cast_fu_775_p3.read(): select_ln304_fu_767_p3.read());
}

void usage_to_carbon::thread_select_ln304_54_cast_fu_775_p3() {
    select_ln304_54_cast_fu_775_p3 = (!icmp_ln304_54_reg_848.read()[0].is_01())? sc_lv<7>(): ((icmp_ln304_54_reg_848.read()[0].to_bool())? ap_const_lv7_0: ap_const_lv7_36);
}

void usage_to_carbon::thread_select_ln304_fu_767_p3() {
    select_ln304_fu_767_p3 = (!and_ln304_51_fu_761_p2.read()[0].is_01())? sc_lv<7>(): ((and_ln304_51_fu_761_p2.read()[0].to_bool())? ap_const_lv7_7F: ap_const_lv7_0);
}

void usage_to_carbon::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm = "XX";
            break;
    }
}

void usage_to_carbon::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"usage\" :  \"" << usage.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_return\" :  \"" << ap_return.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

