// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "Mat4Multiply.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic Mat4Multiply::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic Mat4Multiply::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<14> Mat4Multiply::ap_ST_fsm_state1 = "1";
const sc_lv<14> Mat4Multiply::ap_ST_fsm_state2 = "10";
const sc_lv<14> Mat4Multiply::ap_ST_fsm_state3 = "100";
const sc_lv<14> Mat4Multiply::ap_ST_fsm_state4 = "1000";
const sc_lv<14> Mat4Multiply::ap_ST_fsm_state5 = "10000";
const sc_lv<14> Mat4Multiply::ap_ST_fsm_state6 = "100000";
const sc_lv<14> Mat4Multiply::ap_ST_fsm_state7 = "1000000";
const sc_lv<14> Mat4Multiply::ap_ST_fsm_state8 = "10000000";
const sc_lv<14> Mat4Multiply::ap_ST_fsm_state9 = "100000000";
const sc_lv<14> Mat4Multiply::ap_ST_fsm_state10 = "1000000000";
const sc_lv<14> Mat4Multiply::ap_ST_fsm_state11 = "10000000000";
const sc_lv<14> Mat4Multiply::ap_ST_fsm_state12 = "100000000000";
const sc_lv<14> Mat4Multiply::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<14> Mat4Multiply::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<32> Mat4Multiply::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> Mat4Multiply::ap_const_lv32_2 = "10";
const sc_lv<32> Mat4Multiply::ap_const_lv32_9 = "1001";
const sc_lv<32> Mat4Multiply::ap_const_lv32_1 = "1";
const sc_lv<32> Mat4Multiply::ap_const_lv32_3 = "11";
const sc_lv<32> Mat4Multiply::ap_const_lv32_4 = "100";
const sc_lv<32> Mat4Multiply::ap_const_lv32_5 = "101";
const sc_lv<32> Mat4Multiply::ap_const_lv32_6 = "110";
const sc_lv<32> Mat4Multiply::ap_const_lv32_7 = "111";
const sc_lv<32> Mat4Multiply::ap_const_lv32_8 = "1000";
const sc_lv<32> Mat4Multiply::ap_const_lv32_A = "1010";
const sc_lv<32> Mat4Multiply::ap_const_lv32_B = "1011";
const sc_lv<64> Mat4Multiply::ap_const_lv64_0 = "0000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<64> Mat4Multiply::ap_const_lv64_4 = "100";
const sc_lv<64> Mat4Multiply::ap_const_lv64_1 = "1";
const sc_lv<64> Mat4Multiply::ap_const_lv64_8 = "1000";
const sc_lv<64> Mat4Multiply::ap_const_lv64_C = "1100";
const sc_lv<64> Mat4Multiply::ap_const_lv64_2 = "10";
const sc_lv<64> Mat4Multiply::ap_const_lv64_3 = "11";
const sc_lv<64> Mat4Multiply::ap_const_lv64_5 = "101";
const sc_lv<64> Mat4Multiply::ap_const_lv64_9 = "1001";
const sc_lv<64> Mat4Multiply::ap_const_lv64_D = "1101";
const sc_lv<64> Mat4Multiply::ap_const_lv64_6 = "110";
const sc_lv<64> Mat4Multiply::ap_const_lv64_7 = "111";
const sc_lv<64> Mat4Multiply::ap_const_lv64_A = "1010";
const sc_lv<64> Mat4Multiply::ap_const_lv64_E = "1110";
const sc_lv<64> Mat4Multiply::ap_const_lv64_B = "1011";
const sc_lv<64> Mat4Multiply::ap_const_lv64_F = "1111";
const sc_lv<32> Mat4Multiply::ap_const_lv32_C = "1100";
const sc_lv<32> Mat4Multiply::ap_const_lv32_D = "1101";
const bool Mat4Multiply::ap_const_boolean_1 = true;

Mat4Multiply::Mat4Multiply(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_add_ln18_1_fu_529_p2);
    sensitive << ( mul_ln18_2_fu_521_p2 );
    sensitive << ( mul_ln18_3_fu_525_p2 );

    SC_METHOD(thread_add_ln18_2_fu_563_p2);
    sensitive << ( add_ln18_1_reg_1229 );
    sensitive << ( add_ln18_fu_559_p2 );

    SC_METHOD(thread_add_ln18_fu_559_p2);
    sensitive << ( mul_ln18_reg_1219 );
    sensitive << ( mul_ln18_1_reg_1224 );

    SC_METHOD(thread_add_ln19_1_fu_553_p2);
    sensitive << ( mul_ln19_2_fu_545_p2 );
    sensitive << ( mul_ln19_3_fu_549_p2 );

    SC_METHOD(thread_add_ln19_2_fu_573_p2);
    sensitive << ( add_ln19_1_reg_1244 );
    sensitive << ( add_ln19_fu_569_p2 );

    SC_METHOD(thread_add_ln19_fu_569_p2);
    sensitive << ( mul_ln19_reg_1234 );
    sensitive << ( mul_ln19_1_reg_1239 );

    SC_METHOD(thread_add_ln20_1_fu_641_p2);
    sensitive << ( mul_ln20_2_fu_633_p2 );
    sensitive << ( mul_ln20_3_fu_637_p2 );

    SC_METHOD(thread_add_ln20_2_fu_693_p2);
    sensitive << ( add_ln20_1_reg_1393 );
    sensitive << ( add_ln20_fu_689_p2 );

    SC_METHOD(thread_add_ln20_fu_689_p2);
    sensitive << ( mul_ln20_reg_1383 );
    sensitive << ( mul_ln20_1_reg_1388 );

    SC_METHOD(thread_add_ln21_1_fu_771_p2);
    sensitive << ( mul_ln21_2_fu_763_p2 );
    sensitive << ( mul_ln21_3_fu_767_p2 );

    SC_METHOD(thread_add_ln21_2_fu_899_p2);
    sensitive << ( add_ln21_1_reg_1547 );
    sensitive << ( add_ln21_fu_895_p2 );

    SC_METHOD(thread_add_ln21_fu_895_p2);
    sensitive << ( mul_ln21_reg_1537 );
    sensitive << ( mul_ln21_1_reg_1542 );

    SC_METHOD(thread_add_ln23_1_fu_595_p2);
    sensitive << ( mul_ln23_2_fu_587_p2 );
    sensitive << ( mul_ln23_3_fu_591_p2 );

    SC_METHOD(thread_add_ln23_2_fu_651_p2);
    sensitive << ( add_ln23_1_reg_1337 );
    sensitive << ( add_ln23_fu_647_p2 );

    SC_METHOD(thread_add_ln23_fu_647_p2);
    sensitive << ( mul_ln23_reg_1327 );
    sensitive << ( mul_ln23_1_reg_1332 );

    SC_METHOD(thread_add_ln24_1_fu_617_p2);
    sensitive << ( mul_ln24_2_fu_609_p2 );
    sensitive << ( mul_ln24_3_fu_613_p2 );

    SC_METHOD(thread_add_ln24_2_fu_661_p2);
    sensitive << ( add_ln24_1_reg_1352 );
    sensitive << ( add_ln24_fu_657_p2 );

    SC_METHOD(thread_add_ln24_fu_657_p2);
    sensitive << ( mul_ln24_reg_1342 );
    sensitive << ( mul_ln24_1_reg_1347 );

    SC_METHOD(thread_add_ln25_1_fu_683_p2);
    sensitive << ( mul_ln25_2_fu_675_p2 );
    sensitive << ( mul_ln25_3_fu_679_p2 );

    SC_METHOD(thread_add_ln25_2_fu_703_p2);
    sensitive << ( add_ln25_1_reg_1434 );
    sensitive << ( add_ln25_fu_699_p2 );

    SC_METHOD(thread_add_ln25_fu_699_p2);
    sensitive << ( mul_ln25_reg_1424 );
    sensitive << ( mul_ln25_1_reg_1429 );

    SC_METHOD(thread_add_ln26_1_fu_793_p2);
    sensitive << ( mul_ln26_2_fu_785_p2 );
    sensitive << ( mul_ln26_3_fu_789_p2 );

    SC_METHOD(thread_add_ln26_2_fu_909_p2);
    sensitive << ( add_ln26_1_reg_1562 );
    sensitive << ( add_ln26_fu_905_p2 );

    SC_METHOD(thread_add_ln26_fu_905_p2);
    sensitive << ( mul_ln26_reg_1552 );
    sensitive << ( mul_ln26_1_reg_1557 );

    SC_METHOD(thread_add_ln28_1_fu_725_p2);
    sensitive << ( mul_ln28_2_fu_717_p2 );
    sensitive << ( mul_ln28_3_fu_721_p2 );

    SC_METHOD(thread_add_ln28_2_fu_803_p2);
    sensitive << ( add_ln28_1_reg_1491 );
    sensitive << ( add_ln28_fu_799_p2 );

    SC_METHOD(thread_add_ln28_fu_799_p2);
    sensitive << ( mul_ln28_reg_1481 );
    sensitive << ( mul_ln28_1_reg_1486 );

    SC_METHOD(thread_add_ln29_1_fu_747_p2);
    sensitive << ( mul_ln29_2_fu_739_p2 );
    sensitive << ( mul_ln29_3_fu_743_p2 );

    SC_METHOD(thread_add_ln29_2_fu_813_p2);
    sensitive << ( add_ln29_1_reg_1506 );
    sensitive << ( add_ln29_fu_809_p2 );

    SC_METHOD(thread_add_ln29_fu_809_p2);
    sensitive << ( mul_ln29_reg_1496 );
    sensitive << ( mul_ln29_1_reg_1501 );

    SC_METHOD(thread_add_ln30_1_fu_835_p2);
    sensitive << ( mul_ln30_2_fu_827_p2 );
    sensitive << ( mul_ln30_3_fu_831_p2 );

    SC_METHOD(thread_add_ln30_2_fu_919_p2);
    sensitive << ( add_ln30_1_reg_1577 );
    sensitive << ( add_ln30_fu_915_p2 );

    SC_METHOD(thread_add_ln30_fu_915_p2);
    sensitive << ( mul_ln30_reg_1567 );
    sensitive << ( mul_ln30_1_reg_1572 );

    SC_METHOD(thread_add_ln31_1_fu_857_p2);
    sensitive << ( mul_ln31_2_fu_849_p2 );
    sensitive << ( mul_ln31_3_fu_853_p2 );

    SC_METHOD(thread_add_ln31_2_fu_928_p2);
    sensitive << ( add_ln31_1_reg_1592 );
    sensitive << ( add_ln31_fu_924_p2 );

    SC_METHOD(thread_add_ln31_fu_924_p2);
    sensitive << ( mul_ln31_reg_1582 );
    sensitive << ( mul_ln31_1_reg_1587 );

    SC_METHOD(thread_add_ln33_1_fu_943_p2);
    sensitive << ( mul_ln33_2_fu_933_p2 );
    sensitive << ( mul_ln33_3_fu_938_p2 );

    SC_METHOD(thread_add_ln33_2_fu_1001_p2);
    sensitive << ( add_ln33_1_reg_1647 );
    sensitive << ( add_ln33_fu_997_p2 );

    SC_METHOD(thread_add_ln33_fu_997_p2);
    sensitive << ( mul_ln33_reg_1597 );
    sensitive << ( mul_ln33_1_reg_1602 );

    SC_METHOD(thread_add_ln34_1_fu_959_p2);
    sensitive << ( mul_ln34_2_fu_949_p2 );
    sensitive << ( mul_ln34_3_fu_954_p2 );

    SC_METHOD(thread_add_ln34_2_fu_1010_p2);
    sensitive << ( add_ln34_1_reg_1652 );
    sensitive << ( add_ln34_fu_1006_p2 );

    SC_METHOD(thread_add_ln34_fu_1006_p2);
    sensitive << ( mul_ln34_reg_1607 );
    sensitive << ( mul_ln34_1_reg_1612 );

    SC_METHOD(thread_add_ln35_1_fu_975_p2);
    sensitive << ( mul_ln35_2_fu_965_p2 );
    sensitive << ( mul_ln35_3_fu_970_p2 );

    SC_METHOD(thread_add_ln35_2_fu_1019_p2);
    sensitive << ( add_ln35_1_reg_1657 );
    sensitive << ( add_ln35_fu_1015_p2 );

    SC_METHOD(thread_add_ln35_fu_1015_p2);
    sensitive << ( mul_ln35_reg_1617 );
    sensitive << ( mul_ln35_1_reg_1622 );

    SC_METHOD(thread_add_ln36_1_fu_991_p2);
    sensitive << ( mul_ln36_2_fu_981_p2 );
    sensitive << ( mul_ln36_3_fu_986_p2 );

    SC_METHOD(thread_add_ln36_2_fu_1028_p2);
    sensitive << ( add_ln36_1_reg_1662 );
    sensitive << ( add_ln36_fu_1024_p2 );

    SC_METHOD(thread_add_ln36_fu_1024_p2);
    sensitive << ( mul_ln36_reg_1627 );
    sensitive << ( mul_ln36_1_reg_1632 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state13);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state14);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state14 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state14 );

    SC_METHOD(thread_in1_address0);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_in1_address1);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_in1_ce0);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_in1_ce1);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_in2_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_in2_address1);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_in2_ce0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_in2_ce1);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_mul_ln18_1_fu_516_p2);
    sensitive << ( reg_507 );
    sensitive << ( in1_load_1_reg_1056 );

    SC_METHOD(thread_mul_ln18_2_fu_521_p2);
    sensitive << ( in1_load_2_reg_1079 );
    sensitive << ( in2_load_2_reg_1115 );

    SC_METHOD(thread_mul_ln18_3_fu_525_p2);
    sensitive << ( in1_load_3_reg_1092 );
    sensitive << ( in2_load_3_reg_1123 );

    SC_METHOD(thread_mul_ln18_fu_511_p2);
    sensitive << ( reg_503 );
    sensitive << ( in1_load_reg_1048 );

    SC_METHOD(thread_mul_ln19_1_fu_540_p2);
    sensitive << ( reg_507 );
    sensitive << ( in1_load_5_reg_1139 );

    SC_METHOD(thread_mul_ln19_2_fu_545_p2);
    sensitive << ( in2_load_2_reg_1115 );
    sensitive << ( in1_load_6_reg_1167 );

    SC_METHOD(thread_mul_ln19_3_fu_549_p2);
    sensitive << ( in2_load_3_reg_1123 );
    sensitive << ( in1_load_7_reg_1175 );

    SC_METHOD(thread_mul_ln19_fu_535_p2);
    sensitive << ( reg_503 );
    sensitive << ( in1_load_4_reg_1131 );

    SC_METHOD(thread_mul_ln20_1_fu_628_p2);
    sensitive << ( reg_507 );
    sensitive << ( in1_load_9_reg_1257 );

    SC_METHOD(thread_mul_ln20_2_fu_633_p2);
    sensitive << ( in2_load_2_reg_1115 );
    sensitive << ( in1_load_10_reg_1301 );

    SC_METHOD(thread_mul_ln20_3_fu_637_p2);
    sensitive << ( in2_load_3_reg_1123 );
    sensitive << ( in1_load_11_reg_1309 );

    SC_METHOD(thread_mul_ln20_fu_623_p2);
    sensitive << ( reg_503 );
    sensitive << ( in1_load_8_reg_1249 );

    SC_METHOD(thread_mul_ln21_1_fu_758_p2);
    sensitive << ( reg_507 );
    sensitive << ( in1_load_13_reg_1406 );

    SC_METHOD(thread_mul_ln21_2_fu_763_p2);
    sensitive << ( in2_load_2_reg_1115 );
    sensitive << ( in1_load_14_reg_1465 );

    SC_METHOD(thread_mul_ln21_3_fu_767_p2);
    sensitive << ( in2_load_3_reg_1123 );
    sensitive << ( in1_load_15_reg_1473 );

    SC_METHOD(thread_mul_ln21_fu_753_p2);
    sensitive << ( reg_503 );
    sensitive << ( in1_load_12_reg_1398 );

    SC_METHOD(thread_mul_ln23_1_fu_583_p2);
    sensitive << ( in1_load_1_reg_1056 );
    sensitive << ( in2_load_5_reg_1201 );

    SC_METHOD(thread_mul_ln23_2_fu_587_p2);
    sensitive << ( in1_load_2_reg_1079 );
    sensitive << ( in2_load_6_reg_1275 );

    SC_METHOD(thread_mul_ln23_3_fu_591_p2);
    sensitive << ( in1_load_3_reg_1092 );
    sensitive << ( in2_load_7_reg_1283 );

    SC_METHOD(thread_mul_ln23_fu_579_p2);
    sensitive << ( in1_load_reg_1048 );
    sensitive << ( in2_load_4_reg_1193 );

    SC_METHOD(thread_mul_ln24_1_fu_605_p2);
    sensitive << ( in1_load_5_reg_1139 );
    sensitive << ( in2_load_5_reg_1201 );

    SC_METHOD(thread_mul_ln24_2_fu_609_p2);
    sensitive << ( in1_load_6_reg_1167 );
    sensitive << ( in2_load_6_reg_1275 );

    SC_METHOD(thread_mul_ln24_3_fu_613_p2);
    sensitive << ( in1_load_7_reg_1175 );
    sensitive << ( in2_load_7_reg_1283 );

    SC_METHOD(thread_mul_ln24_fu_601_p2);
    sensitive << ( in1_load_4_reg_1131 );
    sensitive << ( in2_load_4_reg_1193 );

    SC_METHOD(thread_mul_ln25_1_fu_671_p2);
    sensitive << ( in2_load_5_reg_1201 );
    sensitive << ( in1_load_9_reg_1257 );

    SC_METHOD(thread_mul_ln25_2_fu_675_p2);
    sensitive << ( in2_load_6_reg_1275 );
    sensitive << ( in1_load_10_reg_1301 );

    SC_METHOD(thread_mul_ln25_3_fu_679_p2);
    sensitive << ( in2_load_7_reg_1283 );
    sensitive << ( in1_load_11_reg_1309 );

    SC_METHOD(thread_mul_ln25_fu_667_p2);
    sensitive << ( in2_load_4_reg_1193 );
    sensitive << ( in1_load_8_reg_1249 );

    SC_METHOD(thread_mul_ln26_1_fu_781_p2);
    sensitive << ( in2_load_5_reg_1201 );
    sensitive << ( in1_load_13_reg_1406 );

    SC_METHOD(thread_mul_ln26_2_fu_785_p2);
    sensitive << ( in2_load_6_reg_1275 );
    sensitive << ( in1_load_14_reg_1465 );

    SC_METHOD(thread_mul_ln26_3_fu_789_p2);
    sensitive << ( in2_load_7_reg_1283 );
    sensitive << ( in1_load_15_reg_1473 );

    SC_METHOD(thread_mul_ln26_fu_777_p2);
    sensitive << ( in2_load_4_reg_1193 );
    sensitive << ( in1_load_12_reg_1398 );

    SC_METHOD(thread_mul_ln28_1_fu_713_p2);
    sensitive << ( in1_load_1_reg_1056 );
    sensitive << ( in2_load_9_reg_1365 );

    SC_METHOD(thread_mul_ln28_2_fu_717_p2);
    sensitive << ( in1_load_2_reg_1079 );
    sensitive << ( in2_load_10_reg_1439 );

    SC_METHOD(thread_mul_ln28_3_fu_721_p2);
    sensitive << ( in1_load_3_reg_1092 );
    sensitive << ( in2_load_11_reg_1447 );

    SC_METHOD(thread_mul_ln28_fu_709_p2);
    sensitive << ( in1_load_reg_1048 );
    sensitive << ( in2_load_8_reg_1357 );

    SC_METHOD(thread_mul_ln29_1_fu_735_p2);
    sensitive << ( in1_load_5_reg_1139 );
    sensitive << ( in2_load_9_reg_1365 );

    SC_METHOD(thread_mul_ln29_2_fu_739_p2);
    sensitive << ( in1_load_6_reg_1167 );
    sensitive << ( in2_load_10_reg_1439 );

    SC_METHOD(thread_mul_ln29_3_fu_743_p2);
    sensitive << ( in1_load_7_reg_1175 );
    sensitive << ( in2_load_11_reg_1447 );

    SC_METHOD(thread_mul_ln29_fu_731_p2);
    sensitive << ( in1_load_4_reg_1131 );
    sensitive << ( in2_load_8_reg_1357 );

    SC_METHOD(thread_mul_ln30_1_fu_823_p2);
    sensitive << ( in1_load_9_reg_1257 );
    sensitive << ( in2_load_9_reg_1365 );

    SC_METHOD(thread_mul_ln30_2_fu_827_p2);
    sensitive << ( in1_load_10_reg_1301 );
    sensitive << ( in2_load_10_reg_1439 );

    SC_METHOD(thread_mul_ln30_3_fu_831_p2);
    sensitive << ( in1_load_11_reg_1309 );
    sensitive << ( in2_load_11_reg_1447 );

    SC_METHOD(thread_mul_ln30_fu_819_p2);
    sensitive << ( in1_load_8_reg_1249 );
    sensitive << ( in2_load_8_reg_1357 );

    SC_METHOD(thread_mul_ln31_1_fu_845_p2);
    sensitive << ( in2_load_9_reg_1365 );
    sensitive << ( in1_load_13_reg_1406 );

    SC_METHOD(thread_mul_ln31_2_fu_849_p2);
    sensitive << ( in2_load_10_reg_1439 );
    sensitive << ( in1_load_14_reg_1465 );

    SC_METHOD(thread_mul_ln31_3_fu_853_p2);
    sensitive << ( in2_load_11_reg_1447 );
    sensitive << ( in1_load_15_reg_1473 );

    SC_METHOD(thread_mul_ln31_fu_841_p2);
    sensitive << ( in2_load_8_reg_1357 );
    sensitive << ( in1_load_12_reg_1398 );

    SC_METHOD(thread_mul_ln33_1_fu_867_p2);
    sensitive << ( in1_load_1_reg_1056 );
    sensitive << ( in2_load_13_reg_1519 );

    SC_METHOD(thread_mul_ln33_2_fu_933_p2);
    sensitive << ( reg_503 );
    sensitive << ( in1_load_2_reg_1079 );

    SC_METHOD(thread_mul_ln33_3_fu_938_p2);
    sensitive << ( reg_507 );
    sensitive << ( in1_load_3_reg_1092 );

    SC_METHOD(thread_mul_ln33_fu_863_p2);
    sensitive << ( in1_load_reg_1048 );
    sensitive << ( in2_load_12_reg_1511 );

    SC_METHOD(thread_mul_ln34_1_fu_875_p2);
    sensitive << ( in1_load_5_reg_1139 );
    sensitive << ( in2_load_13_reg_1519 );

    SC_METHOD(thread_mul_ln34_2_fu_949_p2);
    sensitive << ( reg_503 );
    sensitive << ( in1_load_6_reg_1167 );

    SC_METHOD(thread_mul_ln34_3_fu_954_p2);
    sensitive << ( reg_507 );
    sensitive << ( in1_load_7_reg_1175 );

    SC_METHOD(thread_mul_ln34_fu_871_p2);
    sensitive << ( in1_load_4_reg_1131 );
    sensitive << ( in2_load_12_reg_1511 );

    SC_METHOD(thread_mul_ln35_1_fu_883_p2);
    sensitive << ( in1_load_9_reg_1257 );
    sensitive << ( in2_load_13_reg_1519 );

    SC_METHOD(thread_mul_ln35_2_fu_965_p2);
    sensitive << ( reg_503 );
    sensitive << ( in1_load_10_reg_1301 );

    SC_METHOD(thread_mul_ln35_3_fu_970_p2);
    sensitive << ( reg_507 );
    sensitive << ( in1_load_11_reg_1309 );

    SC_METHOD(thread_mul_ln35_fu_879_p2);
    sensitive << ( in1_load_8_reg_1249 );
    sensitive << ( in2_load_12_reg_1511 );

    SC_METHOD(thread_mul_ln36_1_fu_891_p2);
    sensitive << ( in1_load_13_reg_1406 );
    sensitive << ( in2_load_13_reg_1519 );

    SC_METHOD(thread_mul_ln36_2_fu_981_p2);
    sensitive << ( reg_503 );
    sensitive << ( in1_load_14_reg_1465 );

    SC_METHOD(thread_mul_ln36_3_fu_986_p2);
    sensitive << ( reg_507 );
    sensitive << ( in1_load_15_reg_1473 );

    SC_METHOD(thread_mul_ln36_fu_887_p2);
    sensitive << ( in1_load_12_reg_1398 );
    sensitive << ( in2_load_12_reg_1511 );

    SC_METHOD(thread_out_r_address0);
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state14 );

    SC_METHOD(thread_out_r_address1);
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state14 );

    SC_METHOD(thread_out_r_ce0);
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state14 );

    SC_METHOD(thread_out_r_ce1);
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state14 );

    SC_METHOD(thread_out_r_d0);
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( add_ln30_2_reg_1637 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( add_ln33_2_reg_1667 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( add_ln35_2_reg_1677 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( add_ln18_2_fu_563_p2 );
    sensitive << ( add_ln23_2_fu_651_p2 );
    sensitive << ( add_ln20_2_fu_693_p2 );
    sensitive << ( add_ln28_2_fu_803_p2 );
    sensitive << ( add_ln21_2_fu_899_p2 );

    SC_METHOD(thread_out_r_d1);
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( add_ln31_2_reg_1642 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( add_ln34_2_reg_1672 );
    sensitive << ( add_ln36_2_reg_1682 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( add_ln19_2_fu_573_p2 );
    sensitive << ( add_ln24_2_fu_661_p2 );
    sensitive << ( add_ln25_2_fu_703_p2 );
    sensitive << ( add_ln29_2_fu_813_p2 );
    sensitive << ( add_ln26_2_fu_909_p2 );

    SC_METHOD(thread_out_r_we0);
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state14 );

    SC_METHOD(thread_out_r_we1);
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state14 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    ap_CS_fsm = "00000000000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "Mat4Multiply_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, in1_address0, "(port)in1_address0");
    sc_trace(mVcdFile, in1_ce0, "(port)in1_ce0");
    sc_trace(mVcdFile, in1_q0, "(port)in1_q0");
    sc_trace(mVcdFile, in1_address1, "(port)in1_address1");
    sc_trace(mVcdFile, in1_ce1, "(port)in1_ce1");
    sc_trace(mVcdFile, in1_q1, "(port)in1_q1");
    sc_trace(mVcdFile, in2_address0, "(port)in2_address0");
    sc_trace(mVcdFile, in2_ce0, "(port)in2_ce0");
    sc_trace(mVcdFile, in2_q0, "(port)in2_q0");
    sc_trace(mVcdFile, in2_address1, "(port)in2_address1");
    sc_trace(mVcdFile, in2_ce1, "(port)in2_ce1");
    sc_trace(mVcdFile, in2_q1, "(port)in2_q1");
    sc_trace(mVcdFile, out_r_address0, "(port)out_r_address0");
    sc_trace(mVcdFile, out_r_ce0, "(port)out_r_ce0");
    sc_trace(mVcdFile, out_r_we0, "(port)out_r_we0");
    sc_trace(mVcdFile, out_r_d0, "(port)out_r_d0");
    sc_trace(mVcdFile, out_r_address1, "(port)out_r_address1");
    sc_trace(mVcdFile, out_r_ce1, "(port)out_r_ce1");
    sc_trace(mVcdFile, out_r_we1, "(port)out_r_we1");
    sc_trace(mVcdFile, out_r_d1, "(port)out_r_d1");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, reg_503, "reg_503");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, reg_507, "reg_507");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, in1_load_reg_1048, "in1_load_reg_1048");
    sc_trace(mVcdFile, in1_load_1_reg_1056, "in1_load_1_reg_1056");
    sc_trace(mVcdFile, in1_load_2_reg_1079, "in1_load_2_reg_1079");
    sc_trace(mVcdFile, in1_load_3_reg_1092, "in1_load_3_reg_1092");
    sc_trace(mVcdFile, in2_load_2_reg_1115, "in2_load_2_reg_1115");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, in2_load_3_reg_1123, "in2_load_3_reg_1123");
    sc_trace(mVcdFile, in1_load_4_reg_1131, "in1_load_4_reg_1131");
    sc_trace(mVcdFile, in1_load_5_reg_1139, "in1_load_5_reg_1139");
    sc_trace(mVcdFile, in1_load_6_reg_1167, "in1_load_6_reg_1167");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, in1_load_7_reg_1175, "in1_load_7_reg_1175");
    sc_trace(mVcdFile, in2_load_4_reg_1193, "in2_load_4_reg_1193");
    sc_trace(mVcdFile, in2_load_5_reg_1201, "in2_load_5_reg_1201");
    sc_trace(mVcdFile, mul_ln18_fu_511_p2, "mul_ln18_fu_511_p2");
    sc_trace(mVcdFile, mul_ln18_reg_1219, "mul_ln18_reg_1219");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, mul_ln18_1_fu_516_p2, "mul_ln18_1_fu_516_p2");
    sc_trace(mVcdFile, mul_ln18_1_reg_1224, "mul_ln18_1_reg_1224");
    sc_trace(mVcdFile, add_ln18_1_fu_529_p2, "add_ln18_1_fu_529_p2");
    sc_trace(mVcdFile, add_ln18_1_reg_1229, "add_ln18_1_reg_1229");
    sc_trace(mVcdFile, mul_ln19_fu_535_p2, "mul_ln19_fu_535_p2");
    sc_trace(mVcdFile, mul_ln19_reg_1234, "mul_ln19_reg_1234");
    sc_trace(mVcdFile, mul_ln19_1_fu_540_p2, "mul_ln19_1_fu_540_p2");
    sc_trace(mVcdFile, mul_ln19_1_reg_1239, "mul_ln19_1_reg_1239");
    sc_trace(mVcdFile, add_ln19_1_fu_553_p2, "add_ln19_1_fu_553_p2");
    sc_trace(mVcdFile, add_ln19_1_reg_1244, "add_ln19_1_reg_1244");
    sc_trace(mVcdFile, in1_load_8_reg_1249, "in1_load_8_reg_1249");
    sc_trace(mVcdFile, in1_load_9_reg_1257, "in1_load_9_reg_1257");
    sc_trace(mVcdFile, in2_load_6_reg_1275, "in2_load_6_reg_1275");
    sc_trace(mVcdFile, in2_load_7_reg_1283, "in2_load_7_reg_1283");
    sc_trace(mVcdFile, in1_load_10_reg_1301, "in1_load_10_reg_1301");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, in1_load_11_reg_1309, "in1_load_11_reg_1309");
    sc_trace(mVcdFile, mul_ln23_fu_579_p2, "mul_ln23_fu_579_p2");
    sc_trace(mVcdFile, mul_ln23_reg_1327, "mul_ln23_reg_1327");
    sc_trace(mVcdFile, mul_ln23_1_fu_583_p2, "mul_ln23_1_fu_583_p2");
    sc_trace(mVcdFile, mul_ln23_1_reg_1332, "mul_ln23_1_reg_1332");
    sc_trace(mVcdFile, add_ln23_1_fu_595_p2, "add_ln23_1_fu_595_p2");
    sc_trace(mVcdFile, add_ln23_1_reg_1337, "add_ln23_1_reg_1337");
    sc_trace(mVcdFile, mul_ln24_fu_601_p2, "mul_ln24_fu_601_p2");
    sc_trace(mVcdFile, mul_ln24_reg_1342, "mul_ln24_reg_1342");
    sc_trace(mVcdFile, mul_ln24_1_fu_605_p2, "mul_ln24_1_fu_605_p2");
    sc_trace(mVcdFile, mul_ln24_1_reg_1347, "mul_ln24_1_reg_1347");
    sc_trace(mVcdFile, add_ln24_1_fu_617_p2, "add_ln24_1_fu_617_p2");
    sc_trace(mVcdFile, add_ln24_1_reg_1352, "add_ln24_1_reg_1352");
    sc_trace(mVcdFile, in2_load_8_reg_1357, "in2_load_8_reg_1357");
    sc_trace(mVcdFile, in2_load_9_reg_1365, "in2_load_9_reg_1365");
    sc_trace(mVcdFile, mul_ln20_fu_623_p2, "mul_ln20_fu_623_p2");
    sc_trace(mVcdFile, mul_ln20_reg_1383, "mul_ln20_reg_1383");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, mul_ln20_1_fu_628_p2, "mul_ln20_1_fu_628_p2");
    sc_trace(mVcdFile, mul_ln20_1_reg_1388, "mul_ln20_1_reg_1388");
    sc_trace(mVcdFile, add_ln20_1_fu_641_p2, "add_ln20_1_fu_641_p2");
    sc_trace(mVcdFile, add_ln20_1_reg_1393, "add_ln20_1_reg_1393");
    sc_trace(mVcdFile, in1_load_12_reg_1398, "in1_load_12_reg_1398");
    sc_trace(mVcdFile, in1_load_13_reg_1406, "in1_load_13_reg_1406");
    sc_trace(mVcdFile, mul_ln25_fu_667_p2, "mul_ln25_fu_667_p2");
    sc_trace(mVcdFile, mul_ln25_reg_1424, "mul_ln25_reg_1424");
    sc_trace(mVcdFile, mul_ln25_1_fu_671_p2, "mul_ln25_1_fu_671_p2");
    sc_trace(mVcdFile, mul_ln25_1_reg_1429, "mul_ln25_1_reg_1429");
    sc_trace(mVcdFile, add_ln25_1_fu_683_p2, "add_ln25_1_fu_683_p2");
    sc_trace(mVcdFile, add_ln25_1_reg_1434, "add_ln25_1_reg_1434");
    sc_trace(mVcdFile, in2_load_10_reg_1439, "in2_load_10_reg_1439");
    sc_trace(mVcdFile, in2_load_11_reg_1447, "in2_load_11_reg_1447");
    sc_trace(mVcdFile, in1_load_14_reg_1465, "in1_load_14_reg_1465");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, in1_load_15_reg_1473, "in1_load_15_reg_1473");
    sc_trace(mVcdFile, mul_ln28_fu_709_p2, "mul_ln28_fu_709_p2");
    sc_trace(mVcdFile, mul_ln28_reg_1481, "mul_ln28_reg_1481");
    sc_trace(mVcdFile, mul_ln28_1_fu_713_p2, "mul_ln28_1_fu_713_p2");
    sc_trace(mVcdFile, mul_ln28_1_reg_1486, "mul_ln28_1_reg_1486");
    sc_trace(mVcdFile, add_ln28_1_fu_725_p2, "add_ln28_1_fu_725_p2");
    sc_trace(mVcdFile, add_ln28_1_reg_1491, "add_ln28_1_reg_1491");
    sc_trace(mVcdFile, mul_ln29_fu_731_p2, "mul_ln29_fu_731_p2");
    sc_trace(mVcdFile, mul_ln29_reg_1496, "mul_ln29_reg_1496");
    sc_trace(mVcdFile, mul_ln29_1_fu_735_p2, "mul_ln29_1_fu_735_p2");
    sc_trace(mVcdFile, mul_ln29_1_reg_1501, "mul_ln29_1_reg_1501");
    sc_trace(mVcdFile, add_ln29_1_fu_747_p2, "add_ln29_1_fu_747_p2");
    sc_trace(mVcdFile, add_ln29_1_reg_1506, "add_ln29_1_reg_1506");
    sc_trace(mVcdFile, in2_load_12_reg_1511, "in2_load_12_reg_1511");
    sc_trace(mVcdFile, in2_load_13_reg_1519, "in2_load_13_reg_1519");
    sc_trace(mVcdFile, mul_ln21_fu_753_p2, "mul_ln21_fu_753_p2");
    sc_trace(mVcdFile, mul_ln21_reg_1537, "mul_ln21_reg_1537");
    sc_trace(mVcdFile, mul_ln21_1_fu_758_p2, "mul_ln21_1_fu_758_p2");
    sc_trace(mVcdFile, mul_ln21_1_reg_1542, "mul_ln21_1_reg_1542");
    sc_trace(mVcdFile, add_ln21_1_fu_771_p2, "add_ln21_1_fu_771_p2");
    sc_trace(mVcdFile, add_ln21_1_reg_1547, "add_ln21_1_reg_1547");
    sc_trace(mVcdFile, mul_ln26_fu_777_p2, "mul_ln26_fu_777_p2");
    sc_trace(mVcdFile, mul_ln26_reg_1552, "mul_ln26_reg_1552");
    sc_trace(mVcdFile, mul_ln26_1_fu_781_p2, "mul_ln26_1_fu_781_p2");
    sc_trace(mVcdFile, mul_ln26_1_reg_1557, "mul_ln26_1_reg_1557");
    sc_trace(mVcdFile, add_ln26_1_fu_793_p2, "add_ln26_1_fu_793_p2");
    sc_trace(mVcdFile, add_ln26_1_reg_1562, "add_ln26_1_reg_1562");
    sc_trace(mVcdFile, mul_ln30_fu_819_p2, "mul_ln30_fu_819_p2");
    sc_trace(mVcdFile, mul_ln30_reg_1567, "mul_ln30_reg_1567");
    sc_trace(mVcdFile, mul_ln30_1_fu_823_p2, "mul_ln30_1_fu_823_p2");
    sc_trace(mVcdFile, mul_ln30_1_reg_1572, "mul_ln30_1_reg_1572");
    sc_trace(mVcdFile, add_ln30_1_fu_835_p2, "add_ln30_1_fu_835_p2");
    sc_trace(mVcdFile, add_ln30_1_reg_1577, "add_ln30_1_reg_1577");
    sc_trace(mVcdFile, mul_ln31_fu_841_p2, "mul_ln31_fu_841_p2");
    sc_trace(mVcdFile, mul_ln31_reg_1582, "mul_ln31_reg_1582");
    sc_trace(mVcdFile, mul_ln31_1_fu_845_p2, "mul_ln31_1_fu_845_p2");
    sc_trace(mVcdFile, mul_ln31_1_reg_1587, "mul_ln31_1_reg_1587");
    sc_trace(mVcdFile, add_ln31_1_fu_857_p2, "add_ln31_1_fu_857_p2");
    sc_trace(mVcdFile, add_ln31_1_reg_1592, "add_ln31_1_reg_1592");
    sc_trace(mVcdFile, mul_ln33_fu_863_p2, "mul_ln33_fu_863_p2");
    sc_trace(mVcdFile, mul_ln33_reg_1597, "mul_ln33_reg_1597");
    sc_trace(mVcdFile, mul_ln33_1_fu_867_p2, "mul_ln33_1_fu_867_p2");
    sc_trace(mVcdFile, mul_ln33_1_reg_1602, "mul_ln33_1_reg_1602");
    sc_trace(mVcdFile, mul_ln34_fu_871_p2, "mul_ln34_fu_871_p2");
    sc_trace(mVcdFile, mul_ln34_reg_1607, "mul_ln34_reg_1607");
    sc_trace(mVcdFile, mul_ln34_1_fu_875_p2, "mul_ln34_1_fu_875_p2");
    sc_trace(mVcdFile, mul_ln34_1_reg_1612, "mul_ln34_1_reg_1612");
    sc_trace(mVcdFile, mul_ln35_fu_879_p2, "mul_ln35_fu_879_p2");
    sc_trace(mVcdFile, mul_ln35_reg_1617, "mul_ln35_reg_1617");
    sc_trace(mVcdFile, mul_ln35_1_fu_883_p2, "mul_ln35_1_fu_883_p2");
    sc_trace(mVcdFile, mul_ln35_1_reg_1622, "mul_ln35_1_reg_1622");
    sc_trace(mVcdFile, mul_ln36_fu_887_p2, "mul_ln36_fu_887_p2");
    sc_trace(mVcdFile, mul_ln36_reg_1627, "mul_ln36_reg_1627");
    sc_trace(mVcdFile, mul_ln36_1_fu_891_p2, "mul_ln36_1_fu_891_p2");
    sc_trace(mVcdFile, mul_ln36_1_reg_1632, "mul_ln36_1_reg_1632");
    sc_trace(mVcdFile, add_ln30_2_fu_919_p2, "add_ln30_2_fu_919_p2");
    sc_trace(mVcdFile, add_ln30_2_reg_1637, "add_ln30_2_reg_1637");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, add_ln31_2_fu_928_p2, "add_ln31_2_fu_928_p2");
    sc_trace(mVcdFile, add_ln31_2_reg_1642, "add_ln31_2_reg_1642");
    sc_trace(mVcdFile, add_ln33_1_fu_943_p2, "add_ln33_1_fu_943_p2");
    sc_trace(mVcdFile, add_ln33_1_reg_1647, "add_ln33_1_reg_1647");
    sc_trace(mVcdFile, add_ln34_1_fu_959_p2, "add_ln34_1_fu_959_p2");
    sc_trace(mVcdFile, add_ln34_1_reg_1652, "add_ln34_1_reg_1652");
    sc_trace(mVcdFile, add_ln35_1_fu_975_p2, "add_ln35_1_fu_975_p2");
    sc_trace(mVcdFile, add_ln35_1_reg_1657, "add_ln35_1_reg_1657");
    sc_trace(mVcdFile, add_ln36_1_fu_991_p2, "add_ln36_1_fu_991_p2");
    sc_trace(mVcdFile, add_ln36_1_reg_1662, "add_ln36_1_reg_1662");
    sc_trace(mVcdFile, add_ln33_2_fu_1001_p2, "add_ln33_2_fu_1001_p2");
    sc_trace(mVcdFile, add_ln33_2_reg_1667, "add_ln33_2_reg_1667");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, add_ln34_2_fu_1010_p2, "add_ln34_2_fu_1010_p2");
    sc_trace(mVcdFile, add_ln34_2_reg_1672, "add_ln34_2_reg_1672");
    sc_trace(mVcdFile, add_ln35_2_fu_1019_p2, "add_ln35_2_fu_1019_p2");
    sc_trace(mVcdFile, add_ln35_2_reg_1677, "add_ln35_2_reg_1677");
    sc_trace(mVcdFile, add_ln36_2_fu_1028_p2, "add_ln36_2_fu_1028_p2");
    sc_trace(mVcdFile, add_ln36_2_reg_1682, "add_ln36_2_reg_1682");
    sc_trace(mVcdFile, ap_CS_fsm_state13, "ap_CS_fsm_state13");
    sc_trace(mVcdFile, ap_CS_fsm_state14, "ap_CS_fsm_state14");
    sc_trace(mVcdFile, add_ln18_2_fu_563_p2, "add_ln18_2_fu_563_p2");
    sc_trace(mVcdFile, add_ln19_2_fu_573_p2, "add_ln19_2_fu_573_p2");
    sc_trace(mVcdFile, add_ln23_2_fu_651_p2, "add_ln23_2_fu_651_p2");
    sc_trace(mVcdFile, add_ln24_2_fu_661_p2, "add_ln24_2_fu_661_p2");
    sc_trace(mVcdFile, add_ln20_2_fu_693_p2, "add_ln20_2_fu_693_p2");
    sc_trace(mVcdFile, add_ln25_2_fu_703_p2, "add_ln25_2_fu_703_p2");
    sc_trace(mVcdFile, add_ln28_2_fu_803_p2, "add_ln28_2_fu_803_p2");
    sc_trace(mVcdFile, add_ln29_2_fu_813_p2, "add_ln29_2_fu_813_p2");
    sc_trace(mVcdFile, add_ln21_2_fu_899_p2, "add_ln21_2_fu_899_p2");
    sc_trace(mVcdFile, add_ln26_2_fu_909_p2, "add_ln26_2_fu_909_p2");
    sc_trace(mVcdFile, mul_ln18_2_fu_521_p2, "mul_ln18_2_fu_521_p2");
    sc_trace(mVcdFile, mul_ln18_3_fu_525_p2, "mul_ln18_3_fu_525_p2");
    sc_trace(mVcdFile, mul_ln19_2_fu_545_p2, "mul_ln19_2_fu_545_p2");
    sc_trace(mVcdFile, mul_ln19_3_fu_549_p2, "mul_ln19_3_fu_549_p2");
    sc_trace(mVcdFile, add_ln18_fu_559_p2, "add_ln18_fu_559_p2");
    sc_trace(mVcdFile, add_ln19_fu_569_p2, "add_ln19_fu_569_p2");
    sc_trace(mVcdFile, mul_ln23_2_fu_587_p2, "mul_ln23_2_fu_587_p2");
    sc_trace(mVcdFile, mul_ln23_3_fu_591_p2, "mul_ln23_3_fu_591_p2");
    sc_trace(mVcdFile, mul_ln24_2_fu_609_p2, "mul_ln24_2_fu_609_p2");
    sc_trace(mVcdFile, mul_ln24_3_fu_613_p2, "mul_ln24_3_fu_613_p2");
    sc_trace(mVcdFile, mul_ln20_2_fu_633_p2, "mul_ln20_2_fu_633_p2");
    sc_trace(mVcdFile, mul_ln20_3_fu_637_p2, "mul_ln20_3_fu_637_p2");
    sc_trace(mVcdFile, add_ln23_fu_647_p2, "add_ln23_fu_647_p2");
    sc_trace(mVcdFile, add_ln24_fu_657_p2, "add_ln24_fu_657_p2");
    sc_trace(mVcdFile, mul_ln25_2_fu_675_p2, "mul_ln25_2_fu_675_p2");
    sc_trace(mVcdFile, mul_ln25_3_fu_679_p2, "mul_ln25_3_fu_679_p2");
    sc_trace(mVcdFile, add_ln20_fu_689_p2, "add_ln20_fu_689_p2");
    sc_trace(mVcdFile, add_ln25_fu_699_p2, "add_ln25_fu_699_p2");
    sc_trace(mVcdFile, mul_ln28_2_fu_717_p2, "mul_ln28_2_fu_717_p2");
    sc_trace(mVcdFile, mul_ln28_3_fu_721_p2, "mul_ln28_3_fu_721_p2");
    sc_trace(mVcdFile, mul_ln29_2_fu_739_p2, "mul_ln29_2_fu_739_p2");
    sc_trace(mVcdFile, mul_ln29_3_fu_743_p2, "mul_ln29_3_fu_743_p2");
    sc_trace(mVcdFile, mul_ln21_2_fu_763_p2, "mul_ln21_2_fu_763_p2");
    sc_trace(mVcdFile, mul_ln21_3_fu_767_p2, "mul_ln21_3_fu_767_p2");
    sc_trace(mVcdFile, mul_ln26_2_fu_785_p2, "mul_ln26_2_fu_785_p2");
    sc_trace(mVcdFile, mul_ln26_3_fu_789_p2, "mul_ln26_3_fu_789_p2");
    sc_trace(mVcdFile, add_ln28_fu_799_p2, "add_ln28_fu_799_p2");
    sc_trace(mVcdFile, add_ln29_fu_809_p2, "add_ln29_fu_809_p2");
    sc_trace(mVcdFile, mul_ln30_2_fu_827_p2, "mul_ln30_2_fu_827_p2");
    sc_trace(mVcdFile, mul_ln30_3_fu_831_p2, "mul_ln30_3_fu_831_p2");
    sc_trace(mVcdFile, mul_ln31_2_fu_849_p2, "mul_ln31_2_fu_849_p2");
    sc_trace(mVcdFile, mul_ln31_3_fu_853_p2, "mul_ln31_3_fu_853_p2");
    sc_trace(mVcdFile, add_ln21_fu_895_p2, "add_ln21_fu_895_p2");
    sc_trace(mVcdFile, add_ln26_fu_905_p2, "add_ln26_fu_905_p2");
    sc_trace(mVcdFile, add_ln30_fu_915_p2, "add_ln30_fu_915_p2");
    sc_trace(mVcdFile, add_ln31_fu_924_p2, "add_ln31_fu_924_p2");
    sc_trace(mVcdFile, mul_ln33_2_fu_933_p2, "mul_ln33_2_fu_933_p2");
    sc_trace(mVcdFile, mul_ln33_3_fu_938_p2, "mul_ln33_3_fu_938_p2");
    sc_trace(mVcdFile, mul_ln34_2_fu_949_p2, "mul_ln34_2_fu_949_p2");
    sc_trace(mVcdFile, mul_ln34_3_fu_954_p2, "mul_ln34_3_fu_954_p2");
    sc_trace(mVcdFile, mul_ln35_2_fu_965_p2, "mul_ln35_2_fu_965_p2");
    sc_trace(mVcdFile, mul_ln35_3_fu_970_p2, "mul_ln35_3_fu_970_p2");
    sc_trace(mVcdFile, mul_ln36_2_fu_981_p2, "mul_ln36_2_fu_981_p2");
    sc_trace(mVcdFile, mul_ln36_3_fu_986_p2, "mul_ln36_3_fu_986_p2");
    sc_trace(mVcdFile, add_ln33_fu_997_p2, "add_ln33_fu_997_p2");
    sc_trace(mVcdFile, add_ln34_fu_1006_p2, "add_ln34_fu_1006_p2");
    sc_trace(mVcdFile, add_ln35_fu_1015_p2, "add_ln35_fu_1015_p2");
    sc_trace(mVcdFile, add_ln36_fu_1024_p2, "add_ln36_fu_1024_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
    mHdltvinHandle.open("Mat4Multiply.hdltvin.dat");
    mHdltvoutHandle.open("Mat4Multiply.hdltvout.dat");
}

Mat4Multiply::~Mat4Multiply() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
}

void Mat4Multiply::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        add_ln18_1_reg_1229 = add_ln18_1_fu_529_p2.read();
        add_ln19_1_reg_1244 = add_ln19_1_fu_553_p2.read();
        in1_load_8_reg_1249 = in1_q0.read();
        in1_load_9_reg_1257 = in1_q1.read();
        in2_load_6_reg_1275 = in2_q0.read();
        in2_load_7_reg_1283 = in2_q1.read();
        mul_ln18_1_reg_1224 = mul_ln18_1_fu_516_p2.read();
        mul_ln18_reg_1219 = mul_ln18_fu_511_p2.read();
        mul_ln19_1_reg_1239 = mul_ln19_1_fu_540_p2.read();
        mul_ln19_reg_1234 = mul_ln19_fu_535_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        add_ln20_1_reg_1393 = add_ln20_1_fu_641_p2.read();
        add_ln25_1_reg_1434 = add_ln25_1_fu_683_p2.read();
        in1_load_12_reg_1398 = in1_q0.read();
        in1_load_13_reg_1406 = in1_q1.read();
        in2_load_10_reg_1439 = in2_q0.read();
        in2_load_11_reg_1447 = in2_q1.read();
        mul_ln20_1_reg_1388 = mul_ln20_1_fu_628_p2.read();
        mul_ln20_reg_1383 = mul_ln20_fu_623_p2.read();
        mul_ln25_1_reg_1429 = mul_ln25_1_fu_671_p2.read();
        mul_ln25_reg_1424 = mul_ln25_fu_667_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        add_ln21_1_reg_1547 = add_ln21_1_fu_771_p2.read();
        add_ln26_1_reg_1562 = add_ln26_1_fu_793_p2.read();
        add_ln30_1_reg_1577 = add_ln30_1_fu_835_p2.read();
        add_ln31_1_reg_1592 = add_ln31_1_fu_857_p2.read();
        mul_ln21_1_reg_1542 = mul_ln21_1_fu_758_p2.read();
        mul_ln21_reg_1537 = mul_ln21_fu_753_p2.read();
        mul_ln26_1_reg_1557 = mul_ln26_1_fu_781_p2.read();
        mul_ln26_reg_1552 = mul_ln26_fu_777_p2.read();
        mul_ln30_1_reg_1572 = mul_ln30_1_fu_823_p2.read();
        mul_ln30_reg_1567 = mul_ln30_fu_819_p2.read();
        mul_ln31_1_reg_1587 = mul_ln31_1_fu_845_p2.read();
        mul_ln31_reg_1582 = mul_ln31_fu_841_p2.read();
        mul_ln33_1_reg_1602 = mul_ln33_1_fu_867_p2.read();
        mul_ln33_reg_1597 = mul_ln33_fu_863_p2.read();
        mul_ln34_1_reg_1612 = mul_ln34_1_fu_875_p2.read();
        mul_ln34_reg_1607 = mul_ln34_fu_871_p2.read();
        mul_ln35_1_reg_1622 = mul_ln35_1_fu_883_p2.read();
        mul_ln35_reg_1617 = mul_ln35_fu_879_p2.read();
        mul_ln36_1_reg_1632 = mul_ln36_1_fu_891_p2.read();
        mul_ln36_reg_1627 = mul_ln36_fu_887_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        add_ln23_1_reg_1337 = add_ln23_1_fu_595_p2.read();
        add_ln24_1_reg_1352 = add_ln24_1_fu_617_p2.read();
        in1_load_10_reg_1301 = in1_q0.read();
        in1_load_11_reg_1309 = in1_q1.read();
        in2_load_8_reg_1357 = in2_q0.read();
        in2_load_9_reg_1365 = in2_q1.read();
        mul_ln23_1_reg_1332 = mul_ln23_1_fu_583_p2.read();
        mul_ln23_reg_1327 = mul_ln23_fu_579_p2.read();
        mul_ln24_1_reg_1347 = mul_ln24_1_fu_605_p2.read();
        mul_ln24_reg_1342 = mul_ln24_fu_601_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        add_ln28_1_reg_1491 = add_ln28_1_fu_725_p2.read();
        add_ln29_1_reg_1506 = add_ln29_1_fu_747_p2.read();
        in1_load_14_reg_1465 = in1_q0.read();
        in1_load_15_reg_1473 = in1_q1.read();
        in2_load_12_reg_1511 = in2_q0.read();
        in2_load_13_reg_1519 = in2_q1.read();
        mul_ln28_1_reg_1486 = mul_ln28_1_fu_713_p2.read();
        mul_ln28_reg_1481 = mul_ln28_fu_709_p2.read();
        mul_ln29_1_reg_1501 = mul_ln29_1_fu_735_p2.read();
        mul_ln29_reg_1496 = mul_ln29_fu_731_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        add_ln30_2_reg_1637 = add_ln30_2_fu_919_p2.read();
        add_ln31_2_reg_1642 = add_ln31_2_fu_928_p2.read();
        add_ln33_1_reg_1647 = add_ln33_1_fu_943_p2.read();
        add_ln34_1_reg_1652 = add_ln34_1_fu_959_p2.read();
        add_ln35_1_reg_1657 = add_ln35_1_fu_975_p2.read();
        add_ln36_1_reg_1662 = add_ln36_1_fu_991_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        add_ln33_2_reg_1667 = add_ln33_2_fu_1001_p2.read();
        add_ln34_2_reg_1672 = add_ln34_2_fu_1010_p2.read();
        add_ln35_2_reg_1677 = add_ln35_2_fu_1019_p2.read();
        add_ln36_2_reg_1682 = add_ln36_2_fu_1028_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        in1_load_1_reg_1056 = in1_q1.read();
        in1_load_reg_1048 = in1_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        in1_load_2_reg_1079 = in1_q0.read();
        in1_load_3_reg_1092 = in1_q1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        in1_load_4_reg_1131 = in1_q0.read();
        in1_load_5_reg_1139 = in1_q1.read();
        in2_load_2_reg_1115 = in2_q0.read();
        in2_load_3_reg_1123 = in2_q1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        in1_load_6_reg_1167 = in1_q0.read();
        in1_load_7_reg_1175 = in1_q1.read();
        in2_load_4_reg_1193 = in2_q0.read();
        in2_load_5_reg_1201 = in2_q1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()))) {
        reg_503 = in2_q0.read();
        reg_507 = in2_q1.read();
    }
}

void Mat4Multiply::thread_add_ln18_1_fu_529_p2() {
    add_ln18_1_fu_529_p2 = (!mul_ln18_2_fu_521_p2.read().is_01() || !mul_ln18_3_fu_525_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(mul_ln18_2_fu_521_p2.read()) + sc_biguint<32>(mul_ln18_3_fu_525_p2.read()));
}

void Mat4Multiply::thread_add_ln18_2_fu_563_p2() {
    add_ln18_2_fu_563_p2 = (!add_ln18_1_reg_1229.read().is_01() || !add_ln18_fu_559_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(add_ln18_1_reg_1229.read()) + sc_biguint<32>(add_ln18_fu_559_p2.read()));
}

void Mat4Multiply::thread_add_ln18_fu_559_p2() {
    add_ln18_fu_559_p2 = (!mul_ln18_1_reg_1224.read().is_01() || !mul_ln18_reg_1219.read().is_01())? sc_lv<32>(): (sc_biguint<32>(mul_ln18_1_reg_1224.read()) + sc_biguint<32>(mul_ln18_reg_1219.read()));
}

void Mat4Multiply::thread_add_ln19_1_fu_553_p2() {
    add_ln19_1_fu_553_p2 = (!mul_ln19_2_fu_545_p2.read().is_01() || !mul_ln19_3_fu_549_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(mul_ln19_2_fu_545_p2.read()) + sc_biguint<32>(mul_ln19_3_fu_549_p2.read()));
}

void Mat4Multiply::thread_add_ln19_2_fu_573_p2() {
    add_ln19_2_fu_573_p2 = (!add_ln19_1_reg_1244.read().is_01() || !add_ln19_fu_569_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(add_ln19_1_reg_1244.read()) + sc_biguint<32>(add_ln19_fu_569_p2.read()));
}

void Mat4Multiply::thread_add_ln19_fu_569_p2() {
    add_ln19_fu_569_p2 = (!mul_ln19_1_reg_1239.read().is_01() || !mul_ln19_reg_1234.read().is_01())? sc_lv<32>(): (sc_biguint<32>(mul_ln19_1_reg_1239.read()) + sc_biguint<32>(mul_ln19_reg_1234.read()));
}

void Mat4Multiply::thread_add_ln20_1_fu_641_p2() {
    add_ln20_1_fu_641_p2 = (!mul_ln20_2_fu_633_p2.read().is_01() || !mul_ln20_3_fu_637_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(mul_ln20_2_fu_633_p2.read()) + sc_biguint<32>(mul_ln20_3_fu_637_p2.read()));
}

void Mat4Multiply::thread_add_ln20_2_fu_693_p2() {
    add_ln20_2_fu_693_p2 = (!add_ln20_1_reg_1393.read().is_01() || !add_ln20_fu_689_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(add_ln20_1_reg_1393.read()) + sc_biguint<32>(add_ln20_fu_689_p2.read()));
}

void Mat4Multiply::thread_add_ln20_fu_689_p2() {
    add_ln20_fu_689_p2 = (!mul_ln20_1_reg_1388.read().is_01() || !mul_ln20_reg_1383.read().is_01())? sc_lv<32>(): (sc_biguint<32>(mul_ln20_1_reg_1388.read()) + sc_biguint<32>(mul_ln20_reg_1383.read()));
}

void Mat4Multiply::thread_add_ln21_1_fu_771_p2() {
    add_ln21_1_fu_771_p2 = (!mul_ln21_2_fu_763_p2.read().is_01() || !mul_ln21_3_fu_767_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(mul_ln21_2_fu_763_p2.read()) + sc_biguint<32>(mul_ln21_3_fu_767_p2.read()));
}

void Mat4Multiply::thread_add_ln21_2_fu_899_p2() {
    add_ln21_2_fu_899_p2 = (!add_ln21_1_reg_1547.read().is_01() || !add_ln21_fu_895_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(add_ln21_1_reg_1547.read()) + sc_biguint<32>(add_ln21_fu_895_p2.read()));
}

void Mat4Multiply::thread_add_ln21_fu_895_p2() {
    add_ln21_fu_895_p2 = (!mul_ln21_1_reg_1542.read().is_01() || !mul_ln21_reg_1537.read().is_01())? sc_lv<32>(): (sc_biguint<32>(mul_ln21_1_reg_1542.read()) + sc_biguint<32>(mul_ln21_reg_1537.read()));
}

void Mat4Multiply::thread_add_ln23_1_fu_595_p2() {
    add_ln23_1_fu_595_p2 = (!mul_ln23_2_fu_587_p2.read().is_01() || !mul_ln23_3_fu_591_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(mul_ln23_2_fu_587_p2.read()) + sc_biguint<32>(mul_ln23_3_fu_591_p2.read()));
}

void Mat4Multiply::thread_add_ln23_2_fu_651_p2() {
    add_ln23_2_fu_651_p2 = (!add_ln23_1_reg_1337.read().is_01() || !add_ln23_fu_647_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(add_ln23_1_reg_1337.read()) + sc_biguint<32>(add_ln23_fu_647_p2.read()));
}

void Mat4Multiply::thread_add_ln23_fu_647_p2() {
    add_ln23_fu_647_p2 = (!mul_ln23_1_reg_1332.read().is_01() || !mul_ln23_reg_1327.read().is_01())? sc_lv<32>(): (sc_biguint<32>(mul_ln23_1_reg_1332.read()) + sc_biguint<32>(mul_ln23_reg_1327.read()));
}

void Mat4Multiply::thread_add_ln24_1_fu_617_p2() {
    add_ln24_1_fu_617_p2 = (!mul_ln24_2_fu_609_p2.read().is_01() || !mul_ln24_3_fu_613_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(mul_ln24_2_fu_609_p2.read()) + sc_biguint<32>(mul_ln24_3_fu_613_p2.read()));
}

void Mat4Multiply::thread_add_ln24_2_fu_661_p2() {
    add_ln24_2_fu_661_p2 = (!add_ln24_1_reg_1352.read().is_01() || !add_ln24_fu_657_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(add_ln24_1_reg_1352.read()) + sc_biguint<32>(add_ln24_fu_657_p2.read()));
}

void Mat4Multiply::thread_add_ln24_fu_657_p2() {
    add_ln24_fu_657_p2 = (!mul_ln24_1_reg_1347.read().is_01() || !mul_ln24_reg_1342.read().is_01())? sc_lv<32>(): (sc_biguint<32>(mul_ln24_1_reg_1347.read()) + sc_biguint<32>(mul_ln24_reg_1342.read()));
}

void Mat4Multiply::thread_add_ln25_1_fu_683_p2() {
    add_ln25_1_fu_683_p2 = (!mul_ln25_2_fu_675_p2.read().is_01() || !mul_ln25_3_fu_679_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(mul_ln25_2_fu_675_p2.read()) + sc_biguint<32>(mul_ln25_3_fu_679_p2.read()));
}

void Mat4Multiply::thread_add_ln25_2_fu_703_p2() {
    add_ln25_2_fu_703_p2 = (!add_ln25_1_reg_1434.read().is_01() || !add_ln25_fu_699_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(add_ln25_1_reg_1434.read()) + sc_biguint<32>(add_ln25_fu_699_p2.read()));
}

void Mat4Multiply::thread_add_ln25_fu_699_p2() {
    add_ln25_fu_699_p2 = (!mul_ln25_1_reg_1429.read().is_01() || !mul_ln25_reg_1424.read().is_01())? sc_lv<32>(): (sc_biguint<32>(mul_ln25_1_reg_1429.read()) + sc_biguint<32>(mul_ln25_reg_1424.read()));
}

void Mat4Multiply::thread_add_ln26_1_fu_793_p2() {
    add_ln26_1_fu_793_p2 = (!mul_ln26_2_fu_785_p2.read().is_01() || !mul_ln26_3_fu_789_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(mul_ln26_2_fu_785_p2.read()) + sc_biguint<32>(mul_ln26_3_fu_789_p2.read()));
}

void Mat4Multiply::thread_add_ln26_2_fu_909_p2() {
    add_ln26_2_fu_909_p2 = (!add_ln26_1_reg_1562.read().is_01() || !add_ln26_fu_905_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(add_ln26_1_reg_1562.read()) + sc_biguint<32>(add_ln26_fu_905_p2.read()));
}

void Mat4Multiply::thread_add_ln26_fu_905_p2() {
    add_ln26_fu_905_p2 = (!mul_ln26_1_reg_1557.read().is_01() || !mul_ln26_reg_1552.read().is_01())? sc_lv<32>(): (sc_biguint<32>(mul_ln26_1_reg_1557.read()) + sc_biguint<32>(mul_ln26_reg_1552.read()));
}

void Mat4Multiply::thread_add_ln28_1_fu_725_p2() {
    add_ln28_1_fu_725_p2 = (!mul_ln28_2_fu_717_p2.read().is_01() || !mul_ln28_3_fu_721_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(mul_ln28_2_fu_717_p2.read()) + sc_biguint<32>(mul_ln28_3_fu_721_p2.read()));
}

void Mat4Multiply::thread_add_ln28_2_fu_803_p2() {
    add_ln28_2_fu_803_p2 = (!add_ln28_1_reg_1491.read().is_01() || !add_ln28_fu_799_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(add_ln28_1_reg_1491.read()) + sc_biguint<32>(add_ln28_fu_799_p2.read()));
}

void Mat4Multiply::thread_add_ln28_fu_799_p2() {
    add_ln28_fu_799_p2 = (!mul_ln28_1_reg_1486.read().is_01() || !mul_ln28_reg_1481.read().is_01())? sc_lv<32>(): (sc_biguint<32>(mul_ln28_1_reg_1486.read()) + sc_biguint<32>(mul_ln28_reg_1481.read()));
}

void Mat4Multiply::thread_add_ln29_1_fu_747_p2() {
    add_ln29_1_fu_747_p2 = (!mul_ln29_2_fu_739_p2.read().is_01() || !mul_ln29_3_fu_743_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(mul_ln29_2_fu_739_p2.read()) + sc_biguint<32>(mul_ln29_3_fu_743_p2.read()));
}

void Mat4Multiply::thread_add_ln29_2_fu_813_p2() {
    add_ln29_2_fu_813_p2 = (!add_ln29_1_reg_1506.read().is_01() || !add_ln29_fu_809_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(add_ln29_1_reg_1506.read()) + sc_biguint<32>(add_ln29_fu_809_p2.read()));
}

void Mat4Multiply::thread_add_ln29_fu_809_p2() {
    add_ln29_fu_809_p2 = (!mul_ln29_1_reg_1501.read().is_01() || !mul_ln29_reg_1496.read().is_01())? sc_lv<32>(): (sc_biguint<32>(mul_ln29_1_reg_1501.read()) + sc_biguint<32>(mul_ln29_reg_1496.read()));
}

void Mat4Multiply::thread_add_ln30_1_fu_835_p2() {
    add_ln30_1_fu_835_p2 = (!mul_ln30_2_fu_827_p2.read().is_01() || !mul_ln30_3_fu_831_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(mul_ln30_2_fu_827_p2.read()) + sc_biguint<32>(mul_ln30_3_fu_831_p2.read()));
}

void Mat4Multiply::thread_add_ln30_2_fu_919_p2() {
    add_ln30_2_fu_919_p2 = (!add_ln30_1_reg_1577.read().is_01() || !add_ln30_fu_915_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(add_ln30_1_reg_1577.read()) + sc_biguint<32>(add_ln30_fu_915_p2.read()));
}

void Mat4Multiply::thread_add_ln30_fu_915_p2() {
    add_ln30_fu_915_p2 = (!mul_ln30_1_reg_1572.read().is_01() || !mul_ln30_reg_1567.read().is_01())? sc_lv<32>(): (sc_biguint<32>(mul_ln30_1_reg_1572.read()) + sc_biguint<32>(mul_ln30_reg_1567.read()));
}

void Mat4Multiply::thread_add_ln31_1_fu_857_p2() {
    add_ln31_1_fu_857_p2 = (!mul_ln31_2_fu_849_p2.read().is_01() || !mul_ln31_3_fu_853_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(mul_ln31_2_fu_849_p2.read()) + sc_biguint<32>(mul_ln31_3_fu_853_p2.read()));
}

void Mat4Multiply::thread_add_ln31_2_fu_928_p2() {
    add_ln31_2_fu_928_p2 = (!add_ln31_1_reg_1592.read().is_01() || !add_ln31_fu_924_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(add_ln31_1_reg_1592.read()) + sc_biguint<32>(add_ln31_fu_924_p2.read()));
}

void Mat4Multiply::thread_add_ln31_fu_924_p2() {
    add_ln31_fu_924_p2 = (!mul_ln31_1_reg_1587.read().is_01() || !mul_ln31_reg_1582.read().is_01())? sc_lv<32>(): (sc_biguint<32>(mul_ln31_1_reg_1587.read()) + sc_biguint<32>(mul_ln31_reg_1582.read()));
}

void Mat4Multiply::thread_add_ln33_1_fu_943_p2() {
    add_ln33_1_fu_943_p2 = (!mul_ln33_2_fu_933_p2.read().is_01() || !mul_ln33_3_fu_938_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(mul_ln33_2_fu_933_p2.read()) + sc_biguint<32>(mul_ln33_3_fu_938_p2.read()));
}

void Mat4Multiply::thread_add_ln33_2_fu_1001_p2() {
    add_ln33_2_fu_1001_p2 = (!add_ln33_1_reg_1647.read().is_01() || !add_ln33_fu_997_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(add_ln33_1_reg_1647.read()) + sc_biguint<32>(add_ln33_fu_997_p2.read()));
}

void Mat4Multiply::thread_add_ln33_fu_997_p2() {
    add_ln33_fu_997_p2 = (!mul_ln33_1_reg_1602.read().is_01() || !mul_ln33_reg_1597.read().is_01())? sc_lv<32>(): (sc_biguint<32>(mul_ln33_1_reg_1602.read()) + sc_biguint<32>(mul_ln33_reg_1597.read()));
}

void Mat4Multiply::thread_add_ln34_1_fu_959_p2() {
    add_ln34_1_fu_959_p2 = (!mul_ln34_2_fu_949_p2.read().is_01() || !mul_ln34_3_fu_954_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(mul_ln34_2_fu_949_p2.read()) + sc_biguint<32>(mul_ln34_3_fu_954_p2.read()));
}

void Mat4Multiply::thread_add_ln34_2_fu_1010_p2() {
    add_ln34_2_fu_1010_p2 = (!add_ln34_1_reg_1652.read().is_01() || !add_ln34_fu_1006_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(add_ln34_1_reg_1652.read()) + sc_biguint<32>(add_ln34_fu_1006_p2.read()));
}

void Mat4Multiply::thread_add_ln34_fu_1006_p2() {
    add_ln34_fu_1006_p2 = (!mul_ln34_1_reg_1612.read().is_01() || !mul_ln34_reg_1607.read().is_01())? sc_lv<32>(): (sc_biguint<32>(mul_ln34_1_reg_1612.read()) + sc_biguint<32>(mul_ln34_reg_1607.read()));
}

void Mat4Multiply::thread_add_ln35_1_fu_975_p2() {
    add_ln35_1_fu_975_p2 = (!mul_ln35_2_fu_965_p2.read().is_01() || !mul_ln35_3_fu_970_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(mul_ln35_2_fu_965_p2.read()) + sc_biguint<32>(mul_ln35_3_fu_970_p2.read()));
}

void Mat4Multiply::thread_add_ln35_2_fu_1019_p2() {
    add_ln35_2_fu_1019_p2 = (!add_ln35_1_reg_1657.read().is_01() || !add_ln35_fu_1015_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(add_ln35_1_reg_1657.read()) + sc_biguint<32>(add_ln35_fu_1015_p2.read()));
}

void Mat4Multiply::thread_add_ln35_fu_1015_p2() {
    add_ln35_fu_1015_p2 = (!mul_ln35_1_reg_1622.read().is_01() || !mul_ln35_reg_1617.read().is_01())? sc_lv<32>(): (sc_biguint<32>(mul_ln35_1_reg_1622.read()) + sc_biguint<32>(mul_ln35_reg_1617.read()));
}

void Mat4Multiply::thread_add_ln36_1_fu_991_p2() {
    add_ln36_1_fu_991_p2 = (!mul_ln36_2_fu_981_p2.read().is_01() || !mul_ln36_3_fu_986_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(mul_ln36_2_fu_981_p2.read()) + sc_biguint<32>(mul_ln36_3_fu_986_p2.read()));
}

void Mat4Multiply::thread_add_ln36_2_fu_1028_p2() {
    add_ln36_2_fu_1028_p2 = (!add_ln36_1_reg_1662.read().is_01() || !add_ln36_fu_1024_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(add_ln36_1_reg_1662.read()) + sc_biguint<32>(add_ln36_fu_1024_p2.read()));
}

void Mat4Multiply::thread_add_ln36_fu_1024_p2() {
    add_ln36_fu_1024_p2 = (!mul_ln36_1_reg_1632.read().is_01() || !mul_ln36_reg_1627.read().is_01())? sc_lv<32>(): (sc_biguint<32>(mul_ln36_1_reg_1632.read()) + sc_biguint<32>(mul_ln36_reg_1627.read()));
}

void Mat4Multiply::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void Mat4Multiply::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void Mat4Multiply::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void Mat4Multiply::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[11];
}

void Mat4Multiply::thread_ap_CS_fsm_state13() {
    ap_CS_fsm_state13 = ap_CS_fsm.read()[12];
}

void Mat4Multiply::thread_ap_CS_fsm_state14() {
    ap_CS_fsm_state14 = ap_CS_fsm.read()[13];
}

void Mat4Multiply::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void Mat4Multiply::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void Mat4Multiply::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void Mat4Multiply::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void Mat4Multiply::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void Mat4Multiply::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void Mat4Multiply::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void Mat4Multiply::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void Mat4Multiply::thread_ap_done() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void Mat4Multiply::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void Mat4Multiply::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void Mat4Multiply::thread_in1_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        in1_address0 =  (sc_lv<10>) (ap_const_lv64_B);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        in1_address0 =  (sc_lv<10>) (ap_const_lv64_3);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        in1_address0 =  (sc_lv<10>) (ap_const_lv64_A);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        in1_address0 =  (sc_lv<10>) (ap_const_lv64_2);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        in1_address0 =  (sc_lv<10>) (ap_const_lv64_9);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        in1_address0 =  (sc_lv<10>) (ap_const_lv64_1);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        in1_address0 =  (sc_lv<10>) (ap_const_lv64_8);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) {
        in1_address0 =  (sc_lv<10>) (ap_const_lv64_0);
    } else {
        in1_address0 = "XXXXXXXXXX";
    }
}

void Mat4Multiply::thread_in1_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        in1_address1 =  (sc_lv<10>) (ap_const_lv64_F);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        in1_address1 =  (sc_lv<10>) (ap_const_lv64_7);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        in1_address1 =  (sc_lv<10>) (ap_const_lv64_E);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        in1_address1 =  (sc_lv<10>) (ap_const_lv64_6);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        in1_address1 =  (sc_lv<10>) (ap_const_lv64_D);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        in1_address1 =  (sc_lv<10>) (ap_const_lv64_5);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        in1_address1 =  (sc_lv<10>) (ap_const_lv64_C);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) {
        in1_address1 =  (sc_lv<10>) (ap_const_lv64_4);
    } else {
        in1_address1 = "XXXXXXXXXX";
    }
}

void Mat4Multiply::thread_in1_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1)) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()))) {
        in1_ce0 = ap_const_logic_1;
    } else {
        in1_ce0 = ap_const_logic_0;
    }
}

void Mat4Multiply::thread_in1_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1)) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()))) {
        in1_ce1 = ap_const_logic_1;
    } else {
        in1_ce1 = ap_const_logic_0;
    }
}

void Mat4Multiply::thread_in2_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        in2_address0 =  (sc_lv<10>) (ap_const_lv64_E);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        in2_address0 =  (sc_lv<10>) (ap_const_lv64_C);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        in2_address0 =  (sc_lv<10>) (ap_const_lv64_A);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        in2_address0 =  (sc_lv<10>) (ap_const_lv64_8);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        in2_address0 =  (sc_lv<10>) (ap_const_lv64_6);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        in2_address0 =  (sc_lv<10>) (ap_const_lv64_4);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        in2_address0 =  (sc_lv<10>) (ap_const_lv64_2);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        in2_address0 =  (sc_lv<10>) (ap_const_lv64_0);
    } else {
        in2_address0 = "XXXXXXXXXX";
    }
}

void Mat4Multiply::thread_in2_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        in2_address1 =  (sc_lv<10>) (ap_const_lv64_F);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        in2_address1 =  (sc_lv<10>) (ap_const_lv64_D);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        in2_address1 =  (sc_lv<10>) (ap_const_lv64_B);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        in2_address1 =  (sc_lv<10>) (ap_const_lv64_9);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        in2_address1 =  (sc_lv<10>) (ap_const_lv64_7);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        in2_address1 =  (sc_lv<10>) (ap_const_lv64_5);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        in2_address1 =  (sc_lv<10>) (ap_const_lv64_3);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        in2_address1 =  (sc_lv<10>) (ap_const_lv64_1);
    } else {
        in2_address1 = "XXXXXXXXXX";
    }
}

void Mat4Multiply::thread_in2_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()))) {
        in2_ce0 = ap_const_logic_1;
    } else {
        in2_ce0 = ap_const_logic_0;
    }
}

void Mat4Multiply::thread_in2_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()))) {
        in2_ce1 = ap_const_logic_1;
    } else {
        in2_ce1 = ap_const_logic_0;
    }
}

void Mat4Multiply::thread_mul_ln18_1_fu_516_p2() {
    mul_ln18_1_fu_516_p2 = (!reg_507.read().is_01() || !in1_load_1_reg_1056.read().is_01())? sc_lv<32>(): sc_bigint<32>(reg_507.read()) * sc_bigint<32>(in1_load_1_reg_1056.read());
}

void Mat4Multiply::thread_mul_ln18_2_fu_521_p2() {
    mul_ln18_2_fu_521_p2 = (!in2_load_2_reg_1115.read().is_01() || !in1_load_2_reg_1079.read().is_01())? sc_lv<32>(): sc_bigint<32>(in2_load_2_reg_1115.read()) * sc_bigint<32>(in1_load_2_reg_1079.read());
}

void Mat4Multiply::thread_mul_ln18_3_fu_525_p2() {
    mul_ln18_3_fu_525_p2 = (!in2_load_3_reg_1123.read().is_01() || !in1_load_3_reg_1092.read().is_01())? sc_lv<32>(): sc_bigint<32>(in2_load_3_reg_1123.read()) * sc_bigint<32>(in1_load_3_reg_1092.read());
}

void Mat4Multiply::thread_mul_ln18_fu_511_p2() {
    mul_ln18_fu_511_p2 = (!reg_503.read().is_01() || !in1_load_reg_1048.read().is_01())? sc_lv<32>(): sc_bigint<32>(reg_503.read()) * sc_bigint<32>(in1_load_reg_1048.read());
}

void Mat4Multiply::thread_mul_ln19_1_fu_540_p2() {
    mul_ln19_1_fu_540_p2 = (!reg_507.read().is_01() || !in1_load_5_reg_1139.read().is_01())? sc_lv<32>(): sc_bigint<32>(reg_507.read()) * sc_bigint<32>(in1_load_5_reg_1139.read());
}

void Mat4Multiply::thread_mul_ln19_2_fu_545_p2() {
    mul_ln19_2_fu_545_p2 = (!in2_load_2_reg_1115.read().is_01() || !in1_load_6_reg_1167.read().is_01())? sc_lv<32>(): sc_bigint<32>(in2_load_2_reg_1115.read()) * sc_bigint<32>(in1_load_6_reg_1167.read());
}

void Mat4Multiply::thread_mul_ln19_3_fu_549_p2() {
    mul_ln19_3_fu_549_p2 = (!in2_load_3_reg_1123.read().is_01() || !in1_load_7_reg_1175.read().is_01())? sc_lv<32>(): sc_bigint<32>(in2_load_3_reg_1123.read()) * sc_bigint<32>(in1_load_7_reg_1175.read());
}

void Mat4Multiply::thread_mul_ln19_fu_535_p2() {
    mul_ln19_fu_535_p2 = (!reg_503.read().is_01() || !in1_load_4_reg_1131.read().is_01())? sc_lv<32>(): sc_bigint<32>(reg_503.read()) * sc_bigint<32>(in1_load_4_reg_1131.read());
}

void Mat4Multiply::thread_mul_ln20_1_fu_628_p2() {
    mul_ln20_1_fu_628_p2 = (!reg_507.read().is_01() || !in1_load_9_reg_1257.read().is_01())? sc_lv<32>(): sc_bigint<32>(reg_507.read()) * sc_bigint<32>(in1_load_9_reg_1257.read());
}

void Mat4Multiply::thread_mul_ln20_2_fu_633_p2() {
    mul_ln20_2_fu_633_p2 = (!in2_load_2_reg_1115.read().is_01() || !in1_load_10_reg_1301.read().is_01())? sc_lv<32>(): sc_bigint<32>(in2_load_2_reg_1115.read()) * sc_bigint<32>(in1_load_10_reg_1301.read());
}

void Mat4Multiply::thread_mul_ln20_3_fu_637_p2() {
    mul_ln20_3_fu_637_p2 = (!in2_load_3_reg_1123.read().is_01() || !in1_load_11_reg_1309.read().is_01())? sc_lv<32>(): sc_bigint<32>(in2_load_3_reg_1123.read()) * sc_bigint<32>(in1_load_11_reg_1309.read());
}

void Mat4Multiply::thread_mul_ln20_fu_623_p2() {
    mul_ln20_fu_623_p2 = (!reg_503.read().is_01() || !in1_load_8_reg_1249.read().is_01())? sc_lv<32>(): sc_bigint<32>(reg_503.read()) * sc_bigint<32>(in1_load_8_reg_1249.read());
}

void Mat4Multiply::thread_mul_ln21_1_fu_758_p2() {
    mul_ln21_1_fu_758_p2 = (!reg_507.read().is_01() || !in1_load_13_reg_1406.read().is_01())? sc_lv<32>(): sc_bigint<32>(reg_507.read()) * sc_bigint<32>(in1_load_13_reg_1406.read());
}

void Mat4Multiply::thread_mul_ln21_2_fu_763_p2() {
    mul_ln21_2_fu_763_p2 = (!in2_load_2_reg_1115.read().is_01() || !in1_load_14_reg_1465.read().is_01())? sc_lv<32>(): sc_bigint<32>(in2_load_2_reg_1115.read()) * sc_bigint<32>(in1_load_14_reg_1465.read());
}

void Mat4Multiply::thread_mul_ln21_3_fu_767_p2() {
    mul_ln21_3_fu_767_p2 = (!in2_load_3_reg_1123.read().is_01() || !in1_load_15_reg_1473.read().is_01())? sc_lv<32>(): sc_bigint<32>(in2_load_3_reg_1123.read()) * sc_bigint<32>(in1_load_15_reg_1473.read());
}

void Mat4Multiply::thread_mul_ln21_fu_753_p2() {
    mul_ln21_fu_753_p2 = (!reg_503.read().is_01() || !in1_load_12_reg_1398.read().is_01())? sc_lv<32>(): sc_bigint<32>(reg_503.read()) * sc_bigint<32>(in1_load_12_reg_1398.read());
}

void Mat4Multiply::thread_mul_ln23_1_fu_583_p2() {
    mul_ln23_1_fu_583_p2 = (!in2_load_5_reg_1201.read().is_01() || !in1_load_1_reg_1056.read().is_01())? sc_lv<32>(): sc_bigint<32>(in2_load_5_reg_1201.read()) * sc_bigint<32>(in1_load_1_reg_1056.read());
}

void Mat4Multiply::thread_mul_ln23_2_fu_587_p2() {
    mul_ln23_2_fu_587_p2 = (!in2_load_6_reg_1275.read().is_01() || !in1_load_2_reg_1079.read().is_01())? sc_lv<32>(): sc_bigint<32>(in2_load_6_reg_1275.read()) * sc_bigint<32>(in1_load_2_reg_1079.read());
}

void Mat4Multiply::thread_mul_ln23_3_fu_591_p2() {
    mul_ln23_3_fu_591_p2 = (!in2_load_7_reg_1283.read().is_01() || !in1_load_3_reg_1092.read().is_01())? sc_lv<32>(): sc_bigint<32>(in2_load_7_reg_1283.read()) * sc_bigint<32>(in1_load_3_reg_1092.read());
}

void Mat4Multiply::thread_mul_ln23_fu_579_p2() {
    mul_ln23_fu_579_p2 = (!in2_load_4_reg_1193.read().is_01() || !in1_load_reg_1048.read().is_01())? sc_lv<32>(): sc_bigint<32>(in2_load_4_reg_1193.read()) * sc_bigint<32>(in1_load_reg_1048.read());
}

void Mat4Multiply::thread_mul_ln24_1_fu_605_p2() {
    mul_ln24_1_fu_605_p2 = (!in2_load_5_reg_1201.read().is_01() || !in1_load_5_reg_1139.read().is_01())? sc_lv<32>(): sc_bigint<32>(in2_load_5_reg_1201.read()) * sc_bigint<32>(in1_load_5_reg_1139.read());
}

void Mat4Multiply::thread_mul_ln24_2_fu_609_p2() {
    mul_ln24_2_fu_609_p2 = (!in2_load_6_reg_1275.read().is_01() || !in1_load_6_reg_1167.read().is_01())? sc_lv<32>(): sc_bigint<32>(in2_load_6_reg_1275.read()) * sc_bigint<32>(in1_load_6_reg_1167.read());
}

void Mat4Multiply::thread_mul_ln24_3_fu_613_p2() {
    mul_ln24_3_fu_613_p2 = (!in2_load_7_reg_1283.read().is_01() || !in1_load_7_reg_1175.read().is_01())? sc_lv<32>(): sc_bigint<32>(in2_load_7_reg_1283.read()) * sc_bigint<32>(in1_load_7_reg_1175.read());
}

void Mat4Multiply::thread_mul_ln24_fu_601_p2() {
    mul_ln24_fu_601_p2 = (!in2_load_4_reg_1193.read().is_01() || !in1_load_4_reg_1131.read().is_01())? sc_lv<32>(): sc_bigint<32>(in2_load_4_reg_1193.read()) * sc_bigint<32>(in1_load_4_reg_1131.read());
}

void Mat4Multiply::thread_mul_ln25_1_fu_671_p2() {
    mul_ln25_1_fu_671_p2 = (!in2_load_5_reg_1201.read().is_01() || !in1_load_9_reg_1257.read().is_01())? sc_lv<32>(): sc_bigint<32>(in2_load_5_reg_1201.read()) * sc_bigint<32>(in1_load_9_reg_1257.read());
}

void Mat4Multiply::thread_mul_ln25_2_fu_675_p2() {
    mul_ln25_2_fu_675_p2 = (!in2_load_6_reg_1275.read().is_01() || !in1_load_10_reg_1301.read().is_01())? sc_lv<32>(): sc_bigint<32>(in2_load_6_reg_1275.read()) * sc_bigint<32>(in1_load_10_reg_1301.read());
}

void Mat4Multiply::thread_mul_ln25_3_fu_679_p2() {
    mul_ln25_3_fu_679_p2 = (!in2_load_7_reg_1283.read().is_01() || !in1_load_11_reg_1309.read().is_01())? sc_lv<32>(): sc_bigint<32>(in2_load_7_reg_1283.read()) * sc_bigint<32>(in1_load_11_reg_1309.read());
}

void Mat4Multiply::thread_mul_ln25_fu_667_p2() {
    mul_ln25_fu_667_p2 = (!in2_load_4_reg_1193.read().is_01() || !in1_load_8_reg_1249.read().is_01())? sc_lv<32>(): sc_bigint<32>(in2_load_4_reg_1193.read()) * sc_bigint<32>(in1_load_8_reg_1249.read());
}

void Mat4Multiply::thread_mul_ln26_1_fu_781_p2() {
    mul_ln26_1_fu_781_p2 = (!in2_load_5_reg_1201.read().is_01() || !in1_load_13_reg_1406.read().is_01())? sc_lv<32>(): sc_bigint<32>(in2_load_5_reg_1201.read()) * sc_bigint<32>(in1_load_13_reg_1406.read());
}

void Mat4Multiply::thread_mul_ln26_2_fu_785_p2() {
    mul_ln26_2_fu_785_p2 = (!in2_load_6_reg_1275.read().is_01() || !in1_load_14_reg_1465.read().is_01())? sc_lv<32>(): sc_bigint<32>(in2_load_6_reg_1275.read()) * sc_bigint<32>(in1_load_14_reg_1465.read());
}

void Mat4Multiply::thread_mul_ln26_3_fu_789_p2() {
    mul_ln26_3_fu_789_p2 = (!in2_load_7_reg_1283.read().is_01() || !in1_load_15_reg_1473.read().is_01())? sc_lv<32>(): sc_bigint<32>(in2_load_7_reg_1283.read()) * sc_bigint<32>(in1_load_15_reg_1473.read());
}

void Mat4Multiply::thread_mul_ln26_fu_777_p2() {
    mul_ln26_fu_777_p2 = (!in2_load_4_reg_1193.read().is_01() || !in1_load_12_reg_1398.read().is_01())? sc_lv<32>(): sc_bigint<32>(in2_load_4_reg_1193.read()) * sc_bigint<32>(in1_load_12_reg_1398.read());
}

void Mat4Multiply::thread_mul_ln28_1_fu_713_p2() {
    mul_ln28_1_fu_713_p2 = (!in2_load_9_reg_1365.read().is_01() || !in1_load_1_reg_1056.read().is_01())? sc_lv<32>(): sc_bigint<32>(in2_load_9_reg_1365.read()) * sc_bigint<32>(in1_load_1_reg_1056.read());
}

void Mat4Multiply::thread_mul_ln28_2_fu_717_p2() {
    mul_ln28_2_fu_717_p2 = (!in2_load_10_reg_1439.read().is_01() || !in1_load_2_reg_1079.read().is_01())? sc_lv<32>(): sc_bigint<32>(in2_load_10_reg_1439.read()) * sc_bigint<32>(in1_load_2_reg_1079.read());
}

void Mat4Multiply::thread_mul_ln28_3_fu_721_p2() {
    mul_ln28_3_fu_721_p2 = (!in2_load_11_reg_1447.read().is_01() || !in1_load_3_reg_1092.read().is_01())? sc_lv<32>(): sc_bigint<32>(in2_load_11_reg_1447.read()) * sc_bigint<32>(in1_load_3_reg_1092.read());
}

void Mat4Multiply::thread_mul_ln28_fu_709_p2() {
    mul_ln28_fu_709_p2 = (!in2_load_8_reg_1357.read().is_01() || !in1_load_reg_1048.read().is_01())? sc_lv<32>(): sc_bigint<32>(in2_load_8_reg_1357.read()) * sc_bigint<32>(in1_load_reg_1048.read());
}

void Mat4Multiply::thread_mul_ln29_1_fu_735_p2() {
    mul_ln29_1_fu_735_p2 = (!in2_load_9_reg_1365.read().is_01() || !in1_load_5_reg_1139.read().is_01())? sc_lv<32>(): sc_bigint<32>(in2_load_9_reg_1365.read()) * sc_bigint<32>(in1_load_5_reg_1139.read());
}

void Mat4Multiply::thread_mul_ln29_2_fu_739_p2() {
    mul_ln29_2_fu_739_p2 = (!in2_load_10_reg_1439.read().is_01() || !in1_load_6_reg_1167.read().is_01())? sc_lv<32>(): sc_bigint<32>(in2_load_10_reg_1439.read()) * sc_bigint<32>(in1_load_6_reg_1167.read());
}

void Mat4Multiply::thread_mul_ln29_3_fu_743_p2() {
    mul_ln29_3_fu_743_p2 = (!in2_load_11_reg_1447.read().is_01() || !in1_load_7_reg_1175.read().is_01())? sc_lv<32>(): sc_bigint<32>(in2_load_11_reg_1447.read()) * sc_bigint<32>(in1_load_7_reg_1175.read());
}

void Mat4Multiply::thread_mul_ln29_fu_731_p2() {
    mul_ln29_fu_731_p2 = (!in2_load_8_reg_1357.read().is_01() || !in1_load_4_reg_1131.read().is_01())? sc_lv<32>(): sc_bigint<32>(in2_load_8_reg_1357.read()) * sc_bigint<32>(in1_load_4_reg_1131.read());
}

void Mat4Multiply::thread_mul_ln30_1_fu_823_p2() {
    mul_ln30_1_fu_823_p2 = (!in2_load_9_reg_1365.read().is_01() || !in1_load_9_reg_1257.read().is_01())? sc_lv<32>(): sc_bigint<32>(in2_load_9_reg_1365.read()) * sc_bigint<32>(in1_load_9_reg_1257.read());
}

void Mat4Multiply::thread_mul_ln30_2_fu_827_p2() {
    mul_ln30_2_fu_827_p2 = (!in2_load_10_reg_1439.read().is_01() || !in1_load_10_reg_1301.read().is_01())? sc_lv<32>(): sc_bigint<32>(in2_load_10_reg_1439.read()) * sc_bigint<32>(in1_load_10_reg_1301.read());
}

void Mat4Multiply::thread_mul_ln30_3_fu_831_p2() {
    mul_ln30_3_fu_831_p2 = (!in2_load_11_reg_1447.read().is_01() || !in1_load_11_reg_1309.read().is_01())? sc_lv<32>(): sc_bigint<32>(in2_load_11_reg_1447.read()) * sc_bigint<32>(in1_load_11_reg_1309.read());
}

void Mat4Multiply::thread_mul_ln30_fu_819_p2() {
    mul_ln30_fu_819_p2 = (!in2_load_8_reg_1357.read().is_01() || !in1_load_8_reg_1249.read().is_01())? sc_lv<32>(): sc_bigint<32>(in2_load_8_reg_1357.read()) * sc_bigint<32>(in1_load_8_reg_1249.read());
}

void Mat4Multiply::thread_mul_ln31_1_fu_845_p2() {
    mul_ln31_1_fu_845_p2 = (!in2_load_9_reg_1365.read().is_01() || !in1_load_13_reg_1406.read().is_01())? sc_lv<32>(): sc_bigint<32>(in2_load_9_reg_1365.read()) * sc_bigint<32>(in1_load_13_reg_1406.read());
}

void Mat4Multiply::thread_mul_ln31_2_fu_849_p2() {
    mul_ln31_2_fu_849_p2 = (!in2_load_10_reg_1439.read().is_01() || !in1_load_14_reg_1465.read().is_01())? sc_lv<32>(): sc_bigint<32>(in2_load_10_reg_1439.read()) * sc_bigint<32>(in1_load_14_reg_1465.read());
}

void Mat4Multiply::thread_mul_ln31_3_fu_853_p2() {
    mul_ln31_3_fu_853_p2 = (!in2_load_11_reg_1447.read().is_01() || !in1_load_15_reg_1473.read().is_01())? sc_lv<32>(): sc_bigint<32>(in2_load_11_reg_1447.read()) * sc_bigint<32>(in1_load_15_reg_1473.read());
}

void Mat4Multiply::thread_mul_ln31_fu_841_p2() {
    mul_ln31_fu_841_p2 = (!in2_load_8_reg_1357.read().is_01() || !in1_load_12_reg_1398.read().is_01())? sc_lv<32>(): sc_bigint<32>(in2_load_8_reg_1357.read()) * sc_bigint<32>(in1_load_12_reg_1398.read());
}

void Mat4Multiply::thread_mul_ln33_1_fu_867_p2() {
    mul_ln33_1_fu_867_p2 = (!in2_load_13_reg_1519.read().is_01() || !in1_load_1_reg_1056.read().is_01())? sc_lv<32>(): sc_bigint<32>(in2_load_13_reg_1519.read()) * sc_bigint<32>(in1_load_1_reg_1056.read());
}

void Mat4Multiply::thread_mul_ln33_2_fu_933_p2() {
    mul_ln33_2_fu_933_p2 = (!reg_503.read().is_01() || !in1_load_2_reg_1079.read().is_01())? sc_lv<32>(): sc_bigint<32>(reg_503.read()) * sc_bigint<32>(in1_load_2_reg_1079.read());
}

void Mat4Multiply::thread_mul_ln33_3_fu_938_p2() {
    mul_ln33_3_fu_938_p2 = (!reg_507.read().is_01() || !in1_load_3_reg_1092.read().is_01())? sc_lv<32>(): sc_bigint<32>(reg_507.read()) * sc_bigint<32>(in1_load_3_reg_1092.read());
}

void Mat4Multiply::thread_mul_ln33_fu_863_p2() {
    mul_ln33_fu_863_p2 = (!in2_load_12_reg_1511.read().is_01() || !in1_load_reg_1048.read().is_01())? sc_lv<32>(): sc_bigint<32>(in2_load_12_reg_1511.read()) * sc_bigint<32>(in1_load_reg_1048.read());
}

void Mat4Multiply::thread_mul_ln34_1_fu_875_p2() {
    mul_ln34_1_fu_875_p2 = (!in2_load_13_reg_1519.read().is_01() || !in1_load_5_reg_1139.read().is_01())? sc_lv<32>(): sc_bigint<32>(in2_load_13_reg_1519.read()) * sc_bigint<32>(in1_load_5_reg_1139.read());
}

void Mat4Multiply::thread_mul_ln34_2_fu_949_p2() {
    mul_ln34_2_fu_949_p2 = (!reg_503.read().is_01() || !in1_load_6_reg_1167.read().is_01())? sc_lv<32>(): sc_bigint<32>(reg_503.read()) * sc_bigint<32>(in1_load_6_reg_1167.read());
}

void Mat4Multiply::thread_mul_ln34_3_fu_954_p2() {
    mul_ln34_3_fu_954_p2 = (!reg_507.read().is_01() || !in1_load_7_reg_1175.read().is_01())? sc_lv<32>(): sc_bigint<32>(reg_507.read()) * sc_bigint<32>(in1_load_7_reg_1175.read());
}

void Mat4Multiply::thread_mul_ln34_fu_871_p2() {
    mul_ln34_fu_871_p2 = (!in2_load_12_reg_1511.read().is_01() || !in1_load_4_reg_1131.read().is_01())? sc_lv<32>(): sc_bigint<32>(in2_load_12_reg_1511.read()) * sc_bigint<32>(in1_load_4_reg_1131.read());
}

void Mat4Multiply::thread_mul_ln35_1_fu_883_p2() {
    mul_ln35_1_fu_883_p2 = (!in2_load_13_reg_1519.read().is_01() || !in1_load_9_reg_1257.read().is_01())? sc_lv<32>(): sc_bigint<32>(in2_load_13_reg_1519.read()) * sc_bigint<32>(in1_load_9_reg_1257.read());
}

void Mat4Multiply::thread_mul_ln35_2_fu_965_p2() {
    mul_ln35_2_fu_965_p2 = (!reg_503.read().is_01() || !in1_load_10_reg_1301.read().is_01())? sc_lv<32>(): sc_bigint<32>(reg_503.read()) * sc_bigint<32>(in1_load_10_reg_1301.read());
}

void Mat4Multiply::thread_mul_ln35_3_fu_970_p2() {
    mul_ln35_3_fu_970_p2 = (!reg_507.read().is_01() || !in1_load_11_reg_1309.read().is_01())? sc_lv<32>(): sc_bigint<32>(reg_507.read()) * sc_bigint<32>(in1_load_11_reg_1309.read());
}

void Mat4Multiply::thread_mul_ln35_fu_879_p2() {
    mul_ln35_fu_879_p2 = (!in2_load_12_reg_1511.read().is_01() || !in1_load_8_reg_1249.read().is_01())? sc_lv<32>(): sc_bigint<32>(in2_load_12_reg_1511.read()) * sc_bigint<32>(in1_load_8_reg_1249.read());
}

void Mat4Multiply::thread_mul_ln36_1_fu_891_p2() {
    mul_ln36_1_fu_891_p2 = (!in2_load_13_reg_1519.read().is_01() || !in1_load_13_reg_1406.read().is_01())? sc_lv<32>(): sc_bigint<32>(in2_load_13_reg_1519.read()) * sc_bigint<32>(in1_load_13_reg_1406.read());
}

void Mat4Multiply::thread_mul_ln36_2_fu_981_p2() {
    mul_ln36_2_fu_981_p2 = (!reg_503.read().is_01() || !in1_load_14_reg_1465.read().is_01())? sc_lv<32>(): sc_bigint<32>(reg_503.read()) * sc_bigint<32>(in1_load_14_reg_1465.read());
}

void Mat4Multiply::thread_mul_ln36_3_fu_986_p2() {
    mul_ln36_3_fu_986_p2 = (!reg_507.read().is_01() || !in1_load_15_reg_1473.read().is_01())? sc_lv<32>(): sc_bigint<32>(reg_507.read()) * sc_bigint<32>(in1_load_15_reg_1473.read());
}

void Mat4Multiply::thread_mul_ln36_fu_887_p2() {
    mul_ln36_fu_887_p2 = (!in2_load_12_reg_1511.read().is_01() || !in1_load_12_reg_1398.read().is_01())? sc_lv<32>(): sc_bigint<32>(in2_load_12_reg_1511.read()) * sc_bigint<32>(in1_load_12_reg_1398.read());
}

void Mat4Multiply::thread_out_r_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        out_r_address0 =  (sc_lv<10>) (ap_const_lv64_E);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        out_r_address0 =  (sc_lv<10>) (ap_const_lv64_C);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        out_r_address0 =  (sc_lv<10>) (ap_const_lv64_A);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        out_r_address0 =  (sc_lv<10>) (ap_const_lv64_3);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        out_r_address0 =  (sc_lv<10>) (ap_const_lv64_8);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        out_r_address0 =  (sc_lv<10>) (ap_const_lv64_2);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        out_r_address0 =  (sc_lv<10>) (ap_const_lv64_4);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        out_r_address0 =  (sc_lv<10>) (ap_const_lv64_0);
    } else {
        out_r_address0 = "XXXXXXXXXX";
    }
}

void Mat4Multiply::thread_out_r_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        out_r_address1 =  (sc_lv<10>) (ap_const_lv64_F);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        out_r_address1 =  (sc_lv<10>) (ap_const_lv64_D);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        out_r_address1 =  (sc_lv<10>) (ap_const_lv64_B);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        out_r_address1 =  (sc_lv<10>) (ap_const_lv64_7);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        out_r_address1 =  (sc_lv<10>) (ap_const_lv64_9);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        out_r_address1 =  (sc_lv<10>) (ap_const_lv64_6);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        out_r_address1 =  (sc_lv<10>) (ap_const_lv64_5);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        out_r_address1 =  (sc_lv<10>) (ap_const_lv64_1);
    } else {
        out_r_address1 = "XXXXXXXXXX";
    }
}

void Mat4Multiply::thread_out_r_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()))) {
        out_r_ce0 = ap_const_logic_1;
    } else {
        out_r_ce0 = ap_const_logic_0;
    }
}

void Mat4Multiply::thread_out_r_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()))) {
        out_r_ce1 = ap_const_logic_1;
    } else {
        out_r_ce1 = ap_const_logic_0;
    }
}

void Mat4Multiply::thread_out_r_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        out_r_d0 = add_ln35_2_reg_1677.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        out_r_d0 = add_ln33_2_reg_1667.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        out_r_d0 = add_ln30_2_reg_1637.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        out_r_d0 = add_ln21_2_fu_899_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        out_r_d0 = add_ln28_2_fu_803_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        out_r_d0 = add_ln20_2_fu_693_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        out_r_d0 = add_ln23_2_fu_651_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        out_r_d0 = add_ln18_2_fu_563_p2.read();
    } else {
        out_r_d0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void Mat4Multiply::thread_out_r_d1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        out_r_d1 = add_ln36_2_reg_1682.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        out_r_d1 = add_ln34_2_reg_1672.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        out_r_d1 = add_ln31_2_reg_1642.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        out_r_d1 = add_ln26_2_fu_909_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        out_r_d1 = add_ln29_2_fu_813_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        out_r_d1 = add_ln25_2_fu_703_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        out_r_d1 = add_ln24_2_fu_661_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        out_r_d1 = add_ln19_2_fu_573_p2.read();
    } else {
        out_r_d1 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void Mat4Multiply::thread_out_r_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()))) {
        out_r_we0 = ap_const_logic_1;
    } else {
        out_r_we0 = ap_const_logic_0;
    }
}

void Mat4Multiply::thread_out_r_we1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()))) {
        out_r_we1 = ap_const_logic_1;
    } else {
        out_r_we1 = ap_const_logic_0;
    }
}

void Mat4Multiply::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            ap_NS_fsm = ap_ST_fsm_state3;
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state12;
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state13;
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_fsm_state14;
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<14>) ("XXXXXXXXXXXXXX");
            break;
    }
}

void Mat4Multiply::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"in1_address0\" :  \"" << in1_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"in1_ce0\" :  \"" << in1_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"in1_q0\" :  \"" << in1_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"in1_address1\" :  \"" << in1_address1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"in1_ce1\" :  \"" << in1_ce1.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"in1_q1\" :  \"" << in1_q1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"in2_address0\" :  \"" << in2_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"in2_ce0\" :  \"" << in2_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"in2_q0\" :  \"" << in2_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"in2_address1\" :  \"" << in2_address1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"in2_ce1\" :  \"" << in2_ce1.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"in2_q1\" :  \"" << in2_q1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_r_address0\" :  \"" << out_r_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_r_ce0\" :  \"" << out_r_ce0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_r_we0\" :  \"" << out_r_we0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_r_d0\" :  \"" << out_r_d0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_r_address1\" :  \"" << out_r_address1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_r_ce1\" :  \"" << out_r_ce1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_r_we1\" :  \"" << out_r_we1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_r_d1\" :  \"" << out_r_d1.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

