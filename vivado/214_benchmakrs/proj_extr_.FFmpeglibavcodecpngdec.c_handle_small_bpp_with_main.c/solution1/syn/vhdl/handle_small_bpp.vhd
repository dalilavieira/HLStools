-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2019.1
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity handle_small_bpp is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    s_bits_per_pixel_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    s_bits_per_pixel_ce0 : OUT STD_LOGIC;
    s_bits_per_pixel_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    s_color_type_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    s_color_type_ce0 : OUT STD_LOGIC;
    s_color_type_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    s_height_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    s_height_ce0 : OUT STD_LOGIC;
    s_height_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    s_width_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    s_width_ce0 : OUT STD_LOGIC;
    s_width_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    s_image_linesize_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    s_image_linesize_ce0 : OUT STD_LOGIC;
    s_image_linesize_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_data_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    p_data_ce0 : OUT STD_LOGIC;
    p_data_we0 : OUT STD_LOGIC;
    p_data_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    p_data_q0 : IN STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of handle_small_bpp is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "handle_small_bpp,hls_ip_2019_1,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7k160t-fbg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.618000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=2,HLS_SYN_FF=1208,HLS_SYN_LUT=2863,HLS_VERSION=2019_1}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (72 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (72 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (72 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (72 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (72 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (72 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (72 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (72 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (72 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (72 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (72 downto 0) := "0000000000000000000000000000000000000000000000000000000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (72 downto 0) := "0000000000000000000000000000000000000000000000000000000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (72 downto 0) := "0000000000000000000000000000000000000000000000000000000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (72 downto 0) := "0000000000000000000000000000000000000000000000000000000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (72 downto 0) := "0000000000000000000000000000000000000000000000000000000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (72 downto 0) := "0000000000000000000000000000000000000000000000000000000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (72 downto 0) := "0000000000000000000000000000000000000000000000000000000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (72 downto 0) := "0000000000000000000000000000000000000000000000000000000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (72 downto 0) := "0000000000000000000000000000000000000000000000000000001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (72 downto 0) := "0000000000000000000000000000000000000000000000000000010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (72 downto 0) := "0000000000000000000000000000000000000000000000000000100000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (72 downto 0) := "0000000000000000000000000000000000000000000000000001000000000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (72 downto 0) := "0000000000000000000000000000000000000000000000000010000000000000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (72 downto 0) := "0000000000000000000000000000000000000000000000000100000000000000000000000";
    constant ap_ST_fsm_state25 : STD_LOGIC_VECTOR (72 downto 0) := "0000000000000000000000000000000000000000000000001000000000000000000000000";
    constant ap_ST_fsm_state26 : STD_LOGIC_VECTOR (72 downto 0) := "0000000000000000000000000000000000000000000000010000000000000000000000000";
    constant ap_ST_fsm_state27 : STD_LOGIC_VECTOR (72 downto 0) := "0000000000000000000000000000000000000000000000100000000000000000000000000";
    constant ap_ST_fsm_state28 : STD_LOGIC_VECTOR (72 downto 0) := "0000000000000000000000000000000000000000000001000000000000000000000000000";
    constant ap_ST_fsm_state29 : STD_LOGIC_VECTOR (72 downto 0) := "0000000000000000000000000000000000000000000010000000000000000000000000000";
    constant ap_ST_fsm_state30 : STD_LOGIC_VECTOR (72 downto 0) := "0000000000000000000000000000000000000000000100000000000000000000000000000";
    constant ap_ST_fsm_state31 : STD_LOGIC_VECTOR (72 downto 0) := "0000000000000000000000000000000000000000001000000000000000000000000000000";
    constant ap_ST_fsm_state32 : STD_LOGIC_VECTOR (72 downto 0) := "0000000000000000000000000000000000000000010000000000000000000000000000000";
    constant ap_ST_fsm_state33 : STD_LOGIC_VECTOR (72 downto 0) := "0000000000000000000000000000000000000000100000000000000000000000000000000";
    constant ap_ST_fsm_state34 : STD_LOGIC_VECTOR (72 downto 0) := "0000000000000000000000000000000000000001000000000000000000000000000000000";
    constant ap_ST_fsm_state35 : STD_LOGIC_VECTOR (72 downto 0) := "0000000000000000000000000000000000000010000000000000000000000000000000000";
    constant ap_ST_fsm_state36 : STD_LOGIC_VECTOR (72 downto 0) := "0000000000000000000000000000000000000100000000000000000000000000000000000";
    constant ap_ST_fsm_state37 : STD_LOGIC_VECTOR (72 downto 0) := "0000000000000000000000000000000000001000000000000000000000000000000000000";
    constant ap_ST_fsm_state38 : STD_LOGIC_VECTOR (72 downto 0) := "0000000000000000000000000000000000010000000000000000000000000000000000000";
    constant ap_ST_fsm_state39 : STD_LOGIC_VECTOR (72 downto 0) := "0000000000000000000000000000000000100000000000000000000000000000000000000";
    constant ap_ST_fsm_state40 : STD_LOGIC_VECTOR (72 downto 0) := "0000000000000000000000000000000001000000000000000000000000000000000000000";
    constant ap_ST_fsm_state41 : STD_LOGIC_VECTOR (72 downto 0) := "0000000000000000000000000000000010000000000000000000000000000000000000000";
    constant ap_ST_fsm_state42 : STD_LOGIC_VECTOR (72 downto 0) := "0000000000000000000000000000000100000000000000000000000000000000000000000";
    constant ap_ST_fsm_state43 : STD_LOGIC_VECTOR (72 downto 0) := "0000000000000000000000000000001000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state44 : STD_LOGIC_VECTOR (72 downto 0) := "0000000000000000000000000000010000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state45 : STD_LOGIC_VECTOR (72 downto 0) := "0000000000000000000000000000100000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state46 : STD_LOGIC_VECTOR (72 downto 0) := "0000000000000000000000000001000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state47 : STD_LOGIC_VECTOR (72 downto 0) := "0000000000000000000000000010000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state48 : STD_LOGIC_VECTOR (72 downto 0) := "0000000000000000000000000100000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state49 : STD_LOGIC_VECTOR (72 downto 0) := "0000000000000000000000001000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state50 : STD_LOGIC_VECTOR (72 downto 0) := "0000000000000000000000010000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state51 : STD_LOGIC_VECTOR (72 downto 0) := "0000000000000000000000100000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state52 : STD_LOGIC_VECTOR (72 downto 0) := "0000000000000000000001000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state53 : STD_LOGIC_VECTOR (72 downto 0) := "0000000000000000000010000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state54 : STD_LOGIC_VECTOR (72 downto 0) := "0000000000000000000100000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state55 : STD_LOGIC_VECTOR (72 downto 0) := "0000000000000000001000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state56 : STD_LOGIC_VECTOR (72 downto 0) := "0000000000000000010000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state57 : STD_LOGIC_VECTOR (72 downto 0) := "0000000000000000100000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state58 : STD_LOGIC_VECTOR (72 downto 0) := "0000000000000001000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state59 : STD_LOGIC_VECTOR (72 downto 0) := "0000000000000010000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state60 : STD_LOGIC_VECTOR (72 downto 0) := "0000000000000100000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state61 : STD_LOGIC_VECTOR (72 downto 0) := "0000000000001000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state62 : STD_LOGIC_VECTOR (72 downto 0) := "0000000000010000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state63 : STD_LOGIC_VECTOR (72 downto 0) := "0000000000100000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state64 : STD_LOGIC_VECTOR (72 downto 0) := "0000000001000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state65 : STD_LOGIC_VECTOR (72 downto 0) := "0000000010000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state66 : STD_LOGIC_VECTOR (72 downto 0) := "0000000100000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state67 : STD_LOGIC_VECTOR (72 downto 0) := "0000001000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state68 : STD_LOGIC_VECTOR (72 downto 0) := "0000010000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state69 : STD_LOGIC_VECTOR (72 downto 0) := "0000100000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state70 : STD_LOGIC_VECTOR (72 downto 0) := "0001000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state71 : STD_LOGIC_VECTOR (72 downto 0) := "0010000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state72 : STD_LOGIC_VECTOR (72 downto 0) := "0100000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state73 : STD_LOGIC_VECTOR (72 downto 0) := "1000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_22 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100010";
    constant ap_const_lv32_24 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100100";
    constant ap_const_lv32_25 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100101";
    constant ap_const_lv32_26 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100110";
    constant ap_const_lv32_27 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100111";
    constant ap_const_lv32_28 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101000";
    constant ap_const_lv32_2A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101010";
    constant ap_const_lv32_2B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101011";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv32_32 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110010";
    constant ap_const_lv32_34 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110100";
    constant ap_const_lv32_35 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110101";
    constant ap_const_lv32_36 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110110";
    constant ap_const_lv32_37 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110111";
    constant ap_const_lv32_38 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111000";
    constant ap_const_lv32_39 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111001";
    constant ap_const_lv32_45 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000101";
    constant ap_const_lv32_48 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001000";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv32_23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100011";
    constant ap_const_lv32_29 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101001";
    constant ap_const_lv32_31 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110001";
    constant ap_const_lv3_7 : STD_LOGIC_VECTOR (2 downto 0) := "111";
    constant ap_const_lv32_47 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000111";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv32_2D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101101";
    constant ap_const_lv32_3B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111011";
    constant ap_const_lv32_3D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111101";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_41 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000001";
    constant ap_const_lv32_43 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000011";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_33 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110011";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_21 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100001";
    constant ap_const_lv32_2C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101100";
    constant ap_const_lv32_2E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101110";
    constant ap_const_lv32_30 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110000";
    constant ap_const_lv32_3A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111010";
    constant ap_const_lv32_3C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111100";
    constant ap_const_lv32_3E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111110";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv32_42 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000010";
    constant ap_const_lv32_44 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000100";
    constant ap_const_lv32_46 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000110";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv32_FFFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111111";
    constant ap_const_lv4_F : STD_LOGIC_VECTOR (3 downto 0) := "1111";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv31_0 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv10_55 : STD_LOGIC_VECTOR (9 downto 0) := "0001010101";
    constant ap_const_lv4_2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_const_lv4_3 : STD_LOGIC_VECTOR (3 downto 0) := "0011";
    constant ap_const_lv30_0 : STD_LOGIC_VECTOR (29 downto 0) := "000000000000000000000000000000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv4_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv4_7 : STD_LOGIC_VECTOR (3 downto 0) := "0111";
    constant ap_const_lv4_6 : STD_LOGIC_VECTOR (3 downto 0) := "0110";
    constant ap_const_lv4_5 : STD_LOGIC_VECTOR (3 downto 0) := "0101";
    constant ap_const_lv4_4 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_const_lv32_55 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010101";
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal ap_CS_fsm : STD_LOGIC_VECTOR (72 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal s_color_type_addr_reg_2219 : STD_LOGIC_VECTOR (3 downto 0);
    signal s_bits_per_pixel_loa_reg_2224 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln25_fu_721_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln25_reg_2230 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_649_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln25_1_reg_2234 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal icmp_ln45_fu_727_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln45_reg_2238 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln73_fu_732_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln73_reg_2242 : STD_LOGIC_VECTOR (0 downto 0);
    signal j_1_fu_743_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal j_1_reg_2249 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal j_2_fu_755_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal j_2_reg_2257 : STD_LOGIC_VECTOR (31 downto 0);
    signal j_fu_767_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal j_reg_2265 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln77_fu_773_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln77_reg_2270 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal i_2_fu_811_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_2_reg_2274 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln78_reg_2284 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln76_1_fu_822_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln76_1_reg_2288 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal i_5_fu_881_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_5_reg_2298 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal trunc_ln76_3_fu_899_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln76_3_reg_2306 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln86_fu_887_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_data_addr_30_reg_2312 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln87_2_fu_914_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln87_2_reg_2317 : STD_LOGIC_VECTOR (2 downto 0);
    signal i_4_fu_922_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_4_reg_2322 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln76_2_fu_940_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln76_2_reg_2330 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln80_fu_928_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_data_addr_27_reg_2336 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln81_2_fu_955_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln81_2_reg_2341 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln88_fu_999_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln88_reg_2346 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal trunc_ln76_fu_1030_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln76_reg_2351 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal add_ln82_fu_1103_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln82_reg_2361 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal add_ln91_fu_1121_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state18 : signal is "none";
    signal s_width_load_1_reg_2371 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state20 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state20 : signal is "none";
    signal trunc_ln49_fu_1127_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln49_reg_2376 : STD_LOGIC_VECTOR (1 downto 0);
    signal i_1_fu_1165_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal i_1_reg_2381 : STD_LOGIC_VECTOR (30 downto 0);
    signal sext_ln49_fu_1173_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln49_reg_2397 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln50_reg_2403 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln51_fu_1177_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln51_reg_2407 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln48_1_fu_1186_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln48_1_reg_2411 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state21 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state21 : signal is "none";
    signal grp_fu_689_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_8_reg_2421 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state22 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state22 : signal is "none";
    signal trunc_ln48_3_fu_1246_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln48_3_reg_2425 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state23 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state23 : signal is "none";
    signal grp_fu_706_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln63_reg_2435 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state24 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state24 : signal is "none";
    signal trunc_ln63_fu_1303_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln63_reg_2439 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln63_1_fu_1306_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln63_1_reg_2444 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state25 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state25 : signal is "none";
    signal add_ln63_1_fu_1330_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln63_1_reg_2454 : STD_LOGIC_VECTOR (3 downto 0);
    signal mul_ln63_fu_2187_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln63_reg_2459 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state26 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state26 : signal is "none";
    signal i_7_fu_1348_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_7_reg_2464 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state28 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state28 : signal is "none";
    signal trunc_ln48_7_fu_1366_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln48_7_reg_2472 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln64_fu_1354_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_data_addr_38_reg_2480 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln65_2_fu_1381_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln65_2_reg_2485 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln65_1_fu_1404_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln65_1_reg_2490 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state29 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state29 : signal is "none";
    signal add_ln68_fu_1487_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln68_reg_2497 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state33 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state33 : signal is "none";
    signal mul_ln68_fu_2193_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln68_reg_2502 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state35 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state35 : signal is "none";
    signal trunc_ln48_fu_1502_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln48_reg_2507 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state37 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state37 : signal is "none";
    signal tmp_7_reg_2517 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state38 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state38 : signal is "none";
    signal trunc_ln48_2_fu_1552_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln48_2_reg_2521 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state39 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state39 : signal is "none";
    signal icmp_ln53_reg_2531 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state40 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state40 : signal is "none";
    signal trunc_ln53_fu_1599_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln53_reg_2535 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln53_1_fu_1602_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln53_1_reg_2540 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state41 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state41 : signal is "none";
    signal add_ln53_1_fu_1626_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln53_1_reg_2550 : STD_LOGIC_VECTOR (3 downto 0);
    signal i_6_fu_1645_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_6_reg_2555 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state43 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state43 : signal is "none";
    signal trunc_ln48_6_fu_1663_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln48_6_reg_2563 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln54_fu_1651_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_data_addr_33_reg_2571 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln55_2_fu_1678_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln55_2_reg_2576 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln55_1_fu_1691_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln55_1_reg_2581 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state44 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state44 : signal is "none";
    signal add_ln58_fu_1754_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln58_reg_2588 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state48 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state48 : signal is "none";
    signal add_ln71_fu_1771_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state51 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state51 : signal is "none";
    signal i_fu_1811_p3 : STD_LOGIC_VECTOR (29 downto 0);
    signal i_reg_2598 : STD_LOGIC_VECTOR (29 downto 0);
    signal ap_CS_fsm_state53 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state53 : signal is "none";
    signal sext_ln29_fu_1819_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln29_reg_2603 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln28_1_fu_1827_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln28_1_reg_2608 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_data_addr_reg_2622 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln30_fu_1842_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln30_reg_2627 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state54 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state54 : signal is "none";
    signal icmp_ln31_fu_1856_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln31_reg_2635 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state55 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state55 : signal is "none";
    signal trunc_ln32_2_fu_1862_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln32_2_reg_2639 : STD_LOGIC_VECTOR (0 downto 0);
    signal k_fu_1912_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state56 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state56 : signal is "none";
    signal i_3_fu_1922_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_3_reg_2649 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state57 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state57 : signal is "none";
    signal p_data_addr_6_reg_2657 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln33_fu_1928_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln34_2_fu_1950_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln34_2_reg_2662 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln34_1_fu_1963_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln34_1_reg_2667 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state58 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state58 : signal is "none";
    signal add_ln41_fu_2154_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln41_reg_2678 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state70 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state70 : signal is "none";
    signal add_ln43_fu_2181_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state73 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state73 : signal is "none";
    signal j5_0_reg_523 : STD_LOGIC_VECTOR (31 downto 0);
    signal pd6_0_rec_reg_534 : STD_LOGIC_VECTOR (63 downto 0);
    signal pd3_0_rec_reg_546 : STD_LOGIC_VECTOR (63 downto 0);
    signal j2_0_reg_558 : STD_LOGIC_VECTOR (31 downto 0);
    signal pd_0_rec_reg_569 : STD_LOGIC_VECTOR (63 downto 0);
    signal j_0_reg_581 : STD_LOGIC_VECTOR (31 downto 0);
    signal i4_1_in_reg_592 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal i4_0_in_reg_601 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal i1_1_in_reg_610 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state27 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state27 : signal is "none";
    signal ap_CS_fsm_state36 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state36 : signal is "none";
    signal i1_0_in_reg_619 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state42 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state42 : signal is "none";
    signal ap_CS_fsm_state50 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state50 : signal is "none";
    signal k_0_reg_628 : STD_LOGIC_VECTOR (2 downto 0);
    signal i_0_in_reg_640 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state72 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state72 : signal is "none";
    signal icmp_ln30_fu_1846_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln85_fu_832_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln85_1_fu_872_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln87_fu_909_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln81_fu_950_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln87_2_fu_994_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln88_fu_1023_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln79_fu_1040_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln79_1_fu_1066_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln81_2_fu_1098_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln82_fu_1113_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln61_fu_1196_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln61_3_fu_1238_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln62_fu_1256_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln62_3_fu_1298_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln63_fu_1318_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln63_1_fu_1340_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln65_fu_1376_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln65_3_fu_1422_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln66_2_fu_1452_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state31 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state31 : signal is "none";
    signal zext_ln67_2_fu_1482_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln68_fu_1495_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln51_fu_1512_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln51_2_fu_1544_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln52_fu_1562_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln52_2_fu_1594_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln53_fu_1614_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln53_1_fu_1637_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln55_fu_1673_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln55_2_fu_1709_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln56_1_fu_1729_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state46 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state46 : signal is "none";
    signal zext_ln57_1_fu_1749_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln58_fu_1763_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln32_fu_1837_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln32_3_fu_1907_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln34_fu_1945_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln34_2_fu_1981_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln35_1_fu_2009_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state60 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state60 : signal is "none";
    signal zext_ln36_1_fu_2037_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state62 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state62 : signal is "none";
    signal zext_ln37_1_fu_2065_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state64 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state64 : signal is "none";
    signal zext_ln38_1_fu_2093_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state66 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state66 : signal is "none";
    signal zext_ln39_1_fu_2121_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state68 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state68 : signal is "none";
    signal zext_ln40_1_fu_2149_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln41_fu_2173_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln76_fu_737_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln48_fu_749_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal ap_CS_fsm_state19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state19 : signal is "none";
    signal ap_CS_fsm_state52 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state52 : signal is "none";
    signal icmp_ln28_fu_761_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln85_2_fu_849_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln87_1_fu_971_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal add_ln88_1_fu_1016_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln79_fu_1045_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln81_1_fu_1075_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal sext_ln82_fu_1108_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln61_2_fu_1211_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln62_2_fu_1271_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln65_2_fu_1399_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state30 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state30 : signal is "none";
    signal zext_ln66_1_fu_1437_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state32 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state32 : signal is "none";
    signal zext_ln67_1_fu_1467_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state34 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state34 : signal is "none";
    signal zext_ln51_1_fu_1517_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln52_1_fu_1567_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln53_fu_1632_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln55_1_fu_1686_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state45 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state45 : signal is "none";
    signal zext_ln56_fu_1714_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state47 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state47 : signal is "none";
    signal zext_ln57_fu_1734_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state49 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state49 : signal is "none";
    signal sext_ln58_fu_1758_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln32_2_fu_1884_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln34_1_fu_1958_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state59 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state59 : signal is "none";
    signal zext_ln35_fu_1994_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state61 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state61 : signal is "none";
    signal zext_ln36_fu_2022_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state63 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state63 : signal is "none";
    signal zext_ln37_fu_2050_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state65 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state65 : signal is "none";
    signal zext_ln38_fu_2078_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state67 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state67 : signal is "none";
    signal zext_ln39_fu_2106_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state69 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state69 : signal is "none";
    signal zext_ln40_fu_2134_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state71 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state71 : signal is "none";
    signal sext_ln41_fu_2168_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_663_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal lshr_ln77_1_fu_777_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal zext_ln77_fu_787_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal lshr_ln77_2_fu_797_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal grp_fu_655_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln77_1_fu_791_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln77_1_fu_807_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln85_fu_819_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln85_fu_826_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_fu_669_p4 : STD_LOGIC_VECTOR (27 downto 0);
    signal sext_ln85_fu_837_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln5_fu_841_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln85_1_fu_856_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal shl_ln85_1_fu_859_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln85_1_fu_867_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln86_fu_877_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln87_2_fu_893_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln87_fu_903_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln80_fu_918_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln81_2_fu_934_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln81_fu_944_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln87_fu_959_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal or_ln87_1_fu_963_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln87_1_fu_976_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal or_ln87_fu_983_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln87_1_fu_989_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal sext_ln88_fu_1004_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln8_fu_1008_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln79_fu_1027_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln79_fu_1034_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal sext_ln79_fu_1045_p0 : STD_LOGIC_VECTOR (27 downto 0);
    signal trunc_ln79_1_fu_1050_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal shl_ln4_fu_1053_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln79_1_fu_1061_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln81_fu_1071_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln81_1_fu_1080_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal or_ln81_fu_1087_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln81_1_fu_1093_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal sext_ln82_fu_1108_p0 : STD_LOGIC_VECTOR (27 downto 0);
    signal sext_ln91_fu_1117_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_3_fu_1131_p4 : STD_LOGIC_VECTOR (29 downto 0);
    signal zext_ln49_fu_1141_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_4_fu_1151_p4 : STD_LOGIC_VECTOR (29 downto 0);
    signal sub_ln49_1_fu_1145_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal zext_ln49_1_fu_1161_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal trunc_ln61_fu_1183_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln61_fu_1190_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_fu_679_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal mul_ln61_fu_1205_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal mul_ln61_fu_1205_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln61_1_fu_1216_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal shl_ln1_fu_1219_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal or_ln61_fu_1227_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln61_1_fu_1233_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln62_fu_1243_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln62_fu_1250_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_fu_696_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal mul_ln62_fu_1265_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal mul_ln62_fu_1265_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln62_1_fu_1276_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal shl_ln3_fu_1279_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal or_ln62_fu_1287_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln62_1_fu_1293_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln48_5_fu_1309_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln63_fu_1313_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal shl_ln7_fu_1323_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_fu_711_p4 : STD_LOGIC_VECTOR (25 downto 0);
    signal trunc_ln64_fu_1344_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln65_2_fu_1360_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln65_fu_1370_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln65_fu_1385_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal mul_ln65_fu_1393_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal mul_ln65_fu_1393_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal or_ln65_fu_1411_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln65_1_fu_1417_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal mul_ln66_fu_1431_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal mul_ln66_fu_1431_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal or_ln66_fu_1442_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln66_fu_1447_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal mul_ln67_fu_1461_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal mul_ln67_fu_1461_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal or_ln67_fu_1472_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln67_fu_1477_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln51_fu_1499_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln51_fu_1506_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln51_1_fu_1522_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal shl_ln_fu_1525_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal or_ln51_fu_1533_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln51_1_fu_1539_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln52_fu_1549_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln52_fu_1556_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln52_1_fu_1572_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal shl_ln2_fu_1575_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal or_ln52_fu_1583_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln52_1_fu_1589_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln48_4_fu_1605_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln53_fu_1609_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal shl_ln6_fu_1619_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln54_fu_1641_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln55_2_fu_1657_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln55_fu_1667_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln55_fu_1682_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal or_ln55_fu_1698_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln55_1_fu_1704_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal or_ln56_fu_1719_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln56_fu_1724_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal or_ln57_fu_1739_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln57_fu_1744_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal sext_ln71_fu_1767_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_1_fu_1777_p4 : STD_LOGIC_VECTOR (28 downto 0);
    signal zext_ln29_fu_1787_p1 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_2_fu_1797_p4 : STD_LOGIC_VECTOR (28 downto 0);
    signal sub_ln29_1_fu_1791_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal zext_ln29_1_fu_1807_p1 : STD_LOGIC_VECTOR (29 downto 0);
    signal trunc_ln32_fu_1823_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln32_fu_1831_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln31_fu_1852_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal sub_ln32_fu_1865_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln32_1_fu_1870_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ashr_ln32_fu_1874_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln32_1_fu_1880_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln32_1_fu_1889_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal sext_ln32_1_cast_fu_1895_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln32_2_fu_1902_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln33_fu_1918_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln34_2_fu_1934_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln34_fu_1940_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln34_fu_1954_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln34_fu_1970_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln34_1_fu_1976_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_9_fu_1986_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln35_fu_1999_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln35_fu_2004_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_10_fu_2014_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln36_fu_2027_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln36_fu_2032_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_11_fu_2042_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln37_fu_2055_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln37_fu_2060_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_12_fu_2070_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln38_fu_2083_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln38_fu_2088_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_13_fu_2098_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln39_fu_2111_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln39_fu_2116_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_14_fu_2126_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln40_fu_2139_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln40_fu_2144_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln2_fu_2158_p4 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln43_fu_2177_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln63_fu_2187_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln68_fu_2193_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (72 downto 0);
    signal mul_ln61_fu_1205_p10 : STD_LOGIC_VECTOR (9 downto 0);
    signal mul_ln62_fu_1265_p10 : STD_LOGIC_VECTOR (9 downto 0);
    signal mul_ln65_fu_1393_p10 : STD_LOGIC_VECTOR (9 downto 0);
    signal mul_ln66_fu_1431_p10 : STD_LOGIC_VECTOR (9 downto 0);
    signal mul_ln67_fu_1461_p10 : STD_LOGIC_VECTOR (9 downto 0);

    component handle_small_bpp_mul_mul_8ns_26s_32_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (25 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    handle_small_bpp_mul_mul_8ns_26s_32_1_1_U1 : component handle_small_bpp_mul_mul_8ns_26s_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 26,
        dout_WIDTH => 32)
    port map (
        din0 => mul_ln63_fu_2187_p0,
        din1 => grp_fu_711_p4,
        dout => mul_ln63_fu_2187_p2);

    handle_small_bpp_mul_mul_8ns_26s_32_1_1_U2 : component handle_small_bpp_mul_mul_8ns_26s_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 26,
        dout_WIDTH => 32)
    port map (
        din0 => mul_ln68_fu_2193_p0,
        din1 => grp_fu_711_p4,
        dout => mul_ln68_fu_2193_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    i1_0_in_reg_619_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state50)) then 
                i1_0_in_reg_619 <= i_6_reg_2555;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
                i1_0_in_reg_619 <= sext_ln49_reg_2397;
            end if; 
        end if;
    end process;

    i1_1_in_reg_610_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
                i1_1_in_reg_610 <= i_7_reg_2464;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
                i1_1_in_reg_610 <= sext_ln49_reg_2397;
            end if; 
        end if;
    end process;

    i4_0_in_reg_601_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
                i4_0_in_reg_601 <= i_4_reg_2322;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
                i4_0_in_reg_601 <= i_2_reg_2274;
            end if; 
        end if;
    end process;

    i4_1_in_reg_592_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
                i4_1_in_reg_592 <= i_5_reg_2298;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
                i4_1_in_reg_592 <= i_2_reg_2274;
            end if; 
        end if;
    end process;

    i_0_in_reg_640_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state54) and (icmp_ln30_fu_1846_p2 = ap_const_lv1_1))) then 
                i_0_in_reg_640 <= sext_ln29_reg_2603;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state72)) then 
                i_0_in_reg_640 <= i_3_reg_2649;
            end if; 
        end if;
    end process;

    j2_0_reg_558_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state3) and (((icmp_ln45_fu_727_p2 = ap_const_lv1_1) and (icmp_ln25_reg_2230 = ap_const_lv1_0)) or ((icmp_ln45_fu_727_p2 = ap_const_lv1_1) and (grp_fu_649_p2 = ap_const_lv1_0))))) then 
                j2_0_reg_558 <= ap_const_lv32_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state51)) then 
                j2_0_reg_558 <= j_2_reg_2257;
            end if; 
        end if;
    end process;

    j5_0_reg_523_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state3) and (((icmp_ln45_fu_727_p2 = ap_const_lv1_0) and (icmp_ln73_fu_732_p2 = ap_const_lv1_1) and (icmp_ln25_reg_2230 = ap_const_lv1_0)) or ((icmp_ln45_fu_727_p2 = ap_const_lv1_0) and (icmp_ln73_fu_732_p2 = ap_const_lv1_1) and (grp_fu_649_p2 = ap_const_lv1_0))))) then 
                j5_0_reg_523 <= ap_const_lv32_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
                j5_0_reg_523 <= j_1_reg_2249;
            end if; 
        end if;
    end process;

    j_0_reg_581_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state3) and (grp_fu_649_p2 = ap_const_lv1_1) and (icmp_ln25_reg_2230 = ap_const_lv1_1))) then 
                j_0_reg_581 <= ap_const_lv32_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state73)) then 
                j_0_reg_581 <= j_reg_2265;
            end if; 
        end if;
    end process;

    k_0_reg_628_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state56)) then 
                k_0_reg_628 <= k_fu_1912_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state53)) then 
                k_0_reg_628 <= ap_const_lv3_7;
            end if; 
        end if;
    end process;

    pd3_0_rec_reg_546_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state3) and (((icmp_ln45_fu_727_p2 = ap_const_lv1_1) and (icmp_ln25_reg_2230 = ap_const_lv1_0)) or ((icmp_ln45_fu_727_p2 = ap_const_lv1_1) and (grp_fu_649_p2 = ap_const_lv1_0))))) then 
                pd3_0_rec_reg_546 <= ap_const_lv64_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state51)) then 
                pd3_0_rec_reg_546 <= add_ln71_fu_1771_p2;
            end if; 
        end if;
    end process;

    pd6_0_rec_reg_534_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state3) and (((icmp_ln45_fu_727_p2 = ap_const_lv1_0) and (icmp_ln73_fu_732_p2 = ap_const_lv1_1) and (icmp_ln25_reg_2230 = ap_const_lv1_0)) or ((icmp_ln45_fu_727_p2 = ap_const_lv1_0) and (icmp_ln73_fu_732_p2 = ap_const_lv1_1) and (grp_fu_649_p2 = ap_const_lv1_0))))) then 
                pd6_0_rec_reg_534 <= ap_const_lv64_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
                pd6_0_rec_reg_534 <= add_ln91_fu_1121_p2;
            end if; 
        end if;
    end process;

    pd_0_rec_reg_569_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state3) and (grp_fu_649_p2 = ap_const_lv1_1) and (icmp_ln25_reg_2230 = ap_const_lv1_1))) then 
                pd_0_rec_reg_569 <= ap_const_lv64_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state73)) then 
                pd_0_rec_reg_569 <= add_ln43_fu_2181_p2;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state70)) then
                add_ln41_reg_2678 <= add_ln41_fu_2154_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state41)) then
                add_ln53_1_reg_2550 <= add_ln53_1_fu_1626_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state48)) then
                add_ln58_reg_2588 <= add_ln58_fu_1754_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state25)) then
                add_ln63_1_reg_2454 <= add_ln63_1_fu_1330_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state33)) then
                add_ln68_reg_2497 <= add_ln68_fu_1487_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state15)) then
                add_ln82_reg_2361 <= add_ln82_fu_1103_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state10)) then
                add_ln88_reg_2346 <= add_ln88_fu_999_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state20)) then
                i_1_reg_2381 <= i_1_fu_1165_p3;
                icmp_ln50_reg_2403 <= grp_fu_649_p2;
                icmp_ln51_reg_2407 <= icmp_ln51_fu_1177_p2;
                s_width_load_1_reg_2371 <= s_width_q0;
                sext_ln49_reg_2397 <= sext_ln49_fu_1173_p1;
                trunc_ln49_reg_2376 <= trunc_ln49_fu_1127_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
                i_2_reg_2274 <= i_2_fu_811_p3;
                icmp_ln78_reg_2284 <= grp_fu_649_p2;
                trunc_ln77_reg_2270 <= trunc_ln77_fu_773_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state57)) then
                i_3_reg_2649 <= i_3_fu_1922_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state9) and (icmp_ln78_reg_2284 = ap_const_lv1_1))) then
                i_4_reg_2322 <= i_4_fu_922_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state9) and (icmp_ln78_reg_2284 = ap_const_lv1_0))) then
                i_5_reg_2298 <= i_5_fu_881_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state43)) then
                i_6_reg_2555 <= i_6_fu_1645_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state28) and (icmp_ln50_reg_2403 = ap_const_lv1_0))) then
                i_7_reg_2464 <= i_7_fu_1348_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state53)) then
                i_reg_2598 <= i_fu_1811_p3;
                    p_data_addr_reg_2622(3 downto 0) <= zext_ln32_fu_1837_p1(8 - 1 downto 0)(3 downto 0);
                sext_ln29_reg_2603 <= sext_ln29_fu_1819_p1;
                trunc_ln28_1_reg_2608 <= trunc_ln28_1_fu_1827_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln25_reg_2230 = ap_const_lv1_1))) then
                icmp_ln25_1_reg_2234 <= grp_fu_649_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                icmp_ln25_reg_2230 <= icmp_ln25_fu_721_p2;
                s_bits_per_pixel_loa_reg_2224 <= s_bits_per_pixel_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state55)) then
                icmp_ln31_reg_2635 <= icmp_ln31_fu_1856_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state3) and ((grp_fu_649_p2 = ap_const_lv1_0) or (icmp_ln25_reg_2230 = ap_const_lv1_0)))) then
                icmp_ln45_reg_2238 <= icmp_ln45_fu_727_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state40)) then
                icmp_ln53_reg_2531 <= grp_fu_706_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state24)) then
                icmp_ln63_reg_2435 <= grp_fu_706_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state3) and (((icmp_ln45_fu_727_p2 = ap_const_lv1_0) and (icmp_ln25_reg_2230 = ap_const_lv1_0)) or ((icmp_ln45_fu_727_p2 = ap_const_lv1_0) and (grp_fu_649_p2 = ap_const_lv1_0))))) then
                icmp_ln73_reg_2242 <= icmp_ln73_fu_732_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state5) and (((icmp_ln45_reg_2238 = ap_const_lv1_0) and (icmp_ln73_reg_2242 = ap_const_lv1_1) and (icmp_ln25_1_reg_2234 = ap_const_lv1_0)) or ((icmp_ln45_reg_2238 = ap_const_lv1_0) and (icmp_ln73_reg_2242 = ap_const_lv1_1) and (icmp_ln25_reg_2230 = ap_const_lv1_0))))) then
                j_1_reg_2249 <= j_1_fu_743_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state5) and (((icmp_ln45_reg_2238 = ap_const_lv1_1) and (icmp_ln25_1_reg_2234 = ap_const_lv1_0)) or ((icmp_ln45_reg_2238 = ap_const_lv1_1) and (icmp_ln25_reg_2230 = ap_const_lv1_0))))) then
                j_2_reg_2257 <= j_2_fu_755_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln25_1_reg_2234 = ap_const_lv1_1) and (icmp_ln25_reg_2230 = ap_const_lv1_1))) then
                j_reg_2265 <= j_fu_767_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state26)) then
                mul_ln63_reg_2459 <= mul_ln63_fu_2187_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state35)) then
                mul_ln68_reg_2502 <= mul_ln68_fu_2193_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state9) and (icmp_ln80_fu_928_p2 = ap_const_lv1_1) and (icmp_ln78_reg_2284 = ap_const_lv1_1))) then
                    p_data_addr_27_reg_2336(3 downto 0) <= zext_ln81_fu_950_p1(8 - 1 downto 0)(3 downto 0);
                trunc_ln76_2_reg_2330 <= trunc_ln76_2_fu_940_p1;
                trunc_ln81_2_reg_2341 <= trunc_ln81_2_fu_955_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state9) and (icmp_ln78_reg_2284 = ap_const_lv1_0) and (icmp_ln86_fu_887_p2 = ap_const_lv1_1))) then
                    p_data_addr_30_reg_2312(3 downto 0) <= zext_ln87_fu_909_p1(8 - 1 downto 0)(3 downto 0);
                trunc_ln76_3_reg_2306 <= trunc_ln76_3_fu_899_p1;
                trunc_ln87_2_reg_2317 <= trunc_ln87_2_fu_914_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state43) and (icmp_ln54_fu_1651_p2 = ap_const_lv1_1))) then
                    p_data_addr_33_reg_2571(3 downto 0) <= zext_ln55_fu_1673_p1(8 - 1 downto 0)(3 downto 0);
                trunc_ln48_6_reg_2563 <= trunc_ln48_6_fu_1663_p1;
                trunc_ln55_2_reg_2576 <= trunc_ln55_2_fu_1678_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state28) and (icmp_ln50_reg_2403 = ap_const_lv1_0) and (icmp_ln64_fu_1354_p2 = ap_const_lv1_1))) then
                    p_data_addr_38_reg_2480(3 downto 0) <= zext_ln65_fu_1376_p1(8 - 1 downto 0)(3 downto 0);
                trunc_ln48_7_reg_2472 <= trunc_ln48_7_fu_1366_p1;
                trunc_ln65_2_reg_2485 <= trunc_ln65_2_fu_1381_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state57) and (icmp_ln33_fu_1928_p2 = ap_const_lv1_1))) then
                    p_data_addr_6_reg_2657(3 downto 0) <= zext_ln34_fu_1945_p1(8 - 1 downto 0)(3 downto 0);
                trunc_ln34_2_reg_2662 <= trunc_ln34_2_fu_1950_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state38)) then
                tmp_7_reg_2517 <= s_width_load_1_reg_2371(1 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state22)) then
                tmp_8_reg_2421 <= s_width_load_1_reg_2371(1 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state55) and (icmp_ln31_fu_1856_p2 = ap_const_lv1_0))) then
                trunc_ln32_2_reg_2639 <= trunc_ln32_2_fu_1862_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state58)) then
                    trunc_ln34_1_reg_2667(3) <= trunc_ln34_1_fu_1963_p3(3);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state21)) then
                trunc_ln48_1_reg_2411 <= trunc_ln48_1_fu_1186_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state39)) then
                trunc_ln48_2_reg_2521 <= trunc_ln48_2_fu_1552_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state23)) then
                trunc_ln48_3_reg_2425 <= trunc_ln48_3_fu_1246_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state37)) then
                trunc_ln48_reg_2507 <= trunc_ln48_fu_1502_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state40) and (grp_fu_706_p2 = ap_const_lv1_0))) then
                trunc_ln53_1_reg_2540 <= trunc_ln53_1_fu_1602_p1;
                trunc_ln53_reg_2535 <= trunc_ln53_fu_1599_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state44)) then
                    trunc_ln55_1_reg_2581(3 downto 2) <= trunc_ln55_1_fu_1691_p3(3 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state24) and (grp_fu_706_p2 = ap_const_lv1_0))) then
                trunc_ln63_1_reg_2444 <= trunc_ln63_1_fu_1306_p1;
                trunc_ln63_reg_2439 <= trunc_ln63_fu_1303_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state29)) then
                    trunc_ln65_1_reg_2490(3 downto 2) <= trunc_ln65_1_fu_1404_p3(3 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then
                trunc_ln76_1_reg_2288 <= trunc_ln76_1_fu_822_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state13)) then
                trunc_ln76_reg_2351 <= trunc_ln76_fu_1030_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state54)) then
                    zext_ln30_reg_2627(2 downto 0) <= zext_ln30_fu_1842_p1(2 downto 0);
            end if;
        end if;
    end process;
    p_data_addr_30_reg_2312(7 downto 4) <= "0000";
    p_data_addr_27_reg_2336(7 downto 4) <= "0000";
    p_data_addr_38_reg_2480(7 downto 4) <= "0000";
    trunc_ln65_1_reg_2490(1 downto 0) <= "00";
    p_data_addr_33_reg_2571(7 downto 4) <= "0000";
    trunc_ln55_1_reg_2581(1 downto 0) <= "00";
    p_data_addr_reg_2622(7 downto 4) <= "0000";
    zext_ln30_reg_2627(3) <= '0';
    p_data_addr_6_reg_2657(7 downto 4) <= "0000";
    trunc_ln34_1_reg_2667(2 downto 0) <= "000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, icmp_ln25_reg_2230, grp_fu_649_p2, icmp_ln25_1_reg_2234, ap_CS_fsm_state3, icmp_ln45_fu_727_p2, icmp_ln45_reg_2238, icmp_ln73_fu_732_p2, icmp_ln73_reg_2242, ap_CS_fsm_state5, trunc_ln77_fu_773_p1, ap_CS_fsm_state6, icmp_ln78_reg_2284, ap_CS_fsm_state9, icmp_ln86_fu_887_p2, icmp_ln80_fu_928_p2, ap_CS_fsm_state20, icmp_ln50_reg_2403, icmp_ln51_fu_1177_p2, grp_fu_689_p3, ap_CS_fsm_state22, grp_fu_706_p2, ap_CS_fsm_state24, ap_CS_fsm_state28, icmp_ln64_fu_1354_p2, ap_CS_fsm_state38, ap_CS_fsm_state40, ap_CS_fsm_state43, icmp_ln54_fu_1651_p2, ap_CS_fsm_state54, ap_CS_fsm_state57, icmp_ln33_fu_1928_p2, icmp_ln30_fu_1846_p2, icmp_ln76_fu_737_p2, icmp_ln48_fu_749_p2, icmp_ln28_fu_761_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state3) and (grp_fu_649_p2 = ap_const_lv1_1) and (icmp_ln25_reg_2230 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state52;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and (((icmp_ln45_fu_727_p2 = ap_const_lv1_1) and (icmp_ln25_reg_2230 = ap_const_lv1_0)) or ((icmp_ln45_fu_727_p2 = ap_const_lv1_1) and (grp_fu_649_p2 = ap_const_lv1_0))))) then
                    ap_NS_fsm <= ap_ST_fsm_state19;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and (((icmp_ln45_fu_727_p2 = ap_const_lv1_0) and (icmp_ln73_fu_732_p2 = ap_const_lv1_1) and (icmp_ln25_reg_2230 = ap_const_lv1_0)) or ((icmp_ln45_fu_727_p2 = ap_const_lv1_0) and (icmp_ln73_fu_732_p2 = ap_const_lv1_1) and (grp_fu_649_p2 = ap_const_lv1_0))))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state5) and ((((((((icmp_ln48_fu_749_p2 = ap_const_lv1_0) and (icmp_ln45_reg_2238 = ap_const_lv1_1) and (icmp_ln25_1_reg_2234 = ap_const_lv1_0)) or ((icmp_ln76_fu_737_p2 = ap_const_lv1_0) and (icmp_ln45_reg_2238 = ap_const_lv1_0) and (icmp_ln25_1_reg_2234 = ap_const_lv1_0))) or ((icmp_ln73_reg_2242 = ap_const_lv1_0) and (icmp_ln45_reg_2238 = ap_const_lv1_0) and (icmp_ln25_1_reg_2234 = ap_const_lv1_0))) or ((icmp_ln28_fu_761_p2 = ap_const_lv1_0) and (icmp_ln25_1_reg_2234 = ap_const_lv1_1) and (icmp_ln25_reg_2230 = ap_const_lv1_1))) or ((icmp_ln48_fu_749_p2 = ap_const_lv1_0) and (icmp_ln45_reg_2238 = ap_const_lv1_1) and (icmp_ln25_reg_2230 = ap_const_lv1_0))) or ((icmp_ln76_fu_737_p2 = ap_const_lv1_0) and (icmp_ln45_reg_2238 = ap_const_lv1_0) and (icmp_ln25_reg_2230 = ap_const_lv1_0))) or ((icmp_ln73_reg_2242 = ap_const_lv1_0) and (icmp_ln45_reg_2238 = ap_const_lv1_0) and (icmp_ln25_reg_2230 = ap_const_lv1_0))))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln28_fu_761_p2 = ap_const_lv1_1) and (icmp_ln25_1_reg_2234 = ap_const_lv1_1) and (icmp_ln25_reg_2230 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state53;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state5) and (((icmp_ln48_fu_749_p2 = ap_const_lv1_1) and (icmp_ln45_reg_2238 = ap_const_lv1_1) and (icmp_ln25_1_reg_2234 = ap_const_lv1_0)) or ((icmp_ln48_fu_749_p2 = ap_const_lv1_1) and (icmp_ln45_reg_2238 = ap_const_lv1_1) and (icmp_ln25_reg_2230 = ap_const_lv1_0))))) then
                    ap_NS_fsm <= ap_ST_fsm_state20;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_state6 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state6) and (trunc_ln77_fu_773_p1 = ap_const_lv1_0) and (grp_fu_649_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state14;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state6) and (trunc_ln77_fu_773_p1 = ap_const_lv1_1) and (grp_fu_649_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state13;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state6) and (trunc_ln77_fu_773_p1 = ap_const_lv1_0) and (grp_fu_649_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state9) and (icmp_ln80_fu_928_p2 = ap_const_lv1_1) and (icmp_ln78_reg_2284 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state15;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state9) and (((icmp_ln80_fu_928_p2 = ap_const_lv1_0) and (icmp_ln78_reg_2284 = ap_const_lv1_1)) or ((icmp_ln86_fu_887_p2 = ap_const_lv1_0) and (icmp_ln78_reg_2284 = ap_const_lv1_0))))) then
                    ap_NS_fsm <= ap_ST_fsm_state18;
                else
                    ap_NS_fsm <= ap_ST_fsm_state10;
                end if;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state16;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state19 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state20 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state20) and (icmp_ln51_fu_1177_p2 = ap_const_lv1_0) and (grp_fu_649_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state38;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state20) and (icmp_ln51_fu_1177_p2 = ap_const_lv1_1) and (grp_fu_649_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state37;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state20) and (icmp_ln51_fu_1177_p2 = ap_const_lv1_0) and (grp_fu_649_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state22;
                else
                    ap_NS_fsm <= ap_ST_fsm_state21;
                end if;
            when ap_ST_fsm_state21 => 
                ap_NS_fsm <= ap_ST_fsm_state22;
            when ap_ST_fsm_state22 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state22) and (grp_fu_689_p3 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state24;
                else
                    ap_NS_fsm <= ap_ST_fsm_state23;
                end if;
            when ap_ST_fsm_state23 => 
                ap_NS_fsm <= ap_ST_fsm_state24;
            when ap_ST_fsm_state24 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state24) and (grp_fu_706_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state27;
                else
                    ap_NS_fsm <= ap_ST_fsm_state25;
                end if;
            when ap_ST_fsm_state25 => 
                ap_NS_fsm <= ap_ST_fsm_state26;
            when ap_ST_fsm_state26 => 
                ap_NS_fsm <= ap_ST_fsm_state27;
            when ap_ST_fsm_state27 => 
                ap_NS_fsm <= ap_ST_fsm_state28;
            when ap_ST_fsm_state28 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state28) and ((icmp_ln64_fu_1354_p2 = ap_const_lv1_0) or (icmp_ln50_reg_2403 = ap_const_lv1_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state51;
                else
                    ap_NS_fsm <= ap_ST_fsm_state29;
                end if;
            when ap_ST_fsm_state29 => 
                ap_NS_fsm <= ap_ST_fsm_state30;
            when ap_ST_fsm_state30 => 
                ap_NS_fsm <= ap_ST_fsm_state31;
            when ap_ST_fsm_state31 => 
                ap_NS_fsm <= ap_ST_fsm_state32;
            when ap_ST_fsm_state32 => 
                ap_NS_fsm <= ap_ST_fsm_state33;
            when ap_ST_fsm_state33 => 
                ap_NS_fsm <= ap_ST_fsm_state34;
            when ap_ST_fsm_state34 => 
                ap_NS_fsm <= ap_ST_fsm_state35;
            when ap_ST_fsm_state35 => 
                ap_NS_fsm <= ap_ST_fsm_state36;
            when ap_ST_fsm_state36 => 
                ap_NS_fsm <= ap_ST_fsm_state28;
            when ap_ST_fsm_state37 => 
                ap_NS_fsm <= ap_ST_fsm_state38;
            when ap_ST_fsm_state38 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state38) and (grp_fu_689_p3 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state40;
                else
                    ap_NS_fsm <= ap_ST_fsm_state39;
                end if;
            when ap_ST_fsm_state39 => 
                ap_NS_fsm <= ap_ST_fsm_state40;
            when ap_ST_fsm_state40 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state40) and (grp_fu_706_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state42;
                else
                    ap_NS_fsm <= ap_ST_fsm_state41;
                end if;
            when ap_ST_fsm_state41 => 
                ap_NS_fsm <= ap_ST_fsm_state42;
            when ap_ST_fsm_state42 => 
                ap_NS_fsm <= ap_ST_fsm_state43;
            when ap_ST_fsm_state43 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state43) and (icmp_ln54_fu_1651_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state28;
                else
                    ap_NS_fsm <= ap_ST_fsm_state44;
                end if;
            when ap_ST_fsm_state44 => 
                ap_NS_fsm <= ap_ST_fsm_state45;
            when ap_ST_fsm_state45 => 
                ap_NS_fsm <= ap_ST_fsm_state46;
            when ap_ST_fsm_state46 => 
                ap_NS_fsm <= ap_ST_fsm_state47;
            when ap_ST_fsm_state47 => 
                ap_NS_fsm <= ap_ST_fsm_state48;
            when ap_ST_fsm_state48 => 
                ap_NS_fsm <= ap_ST_fsm_state49;
            when ap_ST_fsm_state49 => 
                ap_NS_fsm <= ap_ST_fsm_state50;
            when ap_ST_fsm_state50 => 
                ap_NS_fsm <= ap_ST_fsm_state43;
            when ap_ST_fsm_state51 => 
                ap_NS_fsm <= ap_ST_fsm_state19;
            when ap_ST_fsm_state52 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state53 => 
                ap_NS_fsm <= ap_ST_fsm_state54;
            when ap_ST_fsm_state54 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state54) and (icmp_ln30_fu_1846_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state57;
                else
                    ap_NS_fsm <= ap_ST_fsm_state55;
                end if;
            when ap_ST_fsm_state55 => 
                ap_NS_fsm <= ap_ST_fsm_state56;
            when ap_ST_fsm_state56 => 
                ap_NS_fsm <= ap_ST_fsm_state54;
            when ap_ST_fsm_state57 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state57) and (icmp_ln33_fu_1928_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state73;
                else
                    ap_NS_fsm <= ap_ST_fsm_state58;
                end if;
            when ap_ST_fsm_state58 => 
                ap_NS_fsm <= ap_ST_fsm_state59;
            when ap_ST_fsm_state59 => 
                ap_NS_fsm <= ap_ST_fsm_state60;
            when ap_ST_fsm_state60 => 
                ap_NS_fsm <= ap_ST_fsm_state61;
            when ap_ST_fsm_state61 => 
                ap_NS_fsm <= ap_ST_fsm_state62;
            when ap_ST_fsm_state62 => 
                ap_NS_fsm <= ap_ST_fsm_state63;
            when ap_ST_fsm_state63 => 
                ap_NS_fsm <= ap_ST_fsm_state64;
            when ap_ST_fsm_state64 => 
                ap_NS_fsm <= ap_ST_fsm_state65;
            when ap_ST_fsm_state65 => 
                ap_NS_fsm <= ap_ST_fsm_state66;
            when ap_ST_fsm_state66 => 
                ap_NS_fsm <= ap_ST_fsm_state67;
            when ap_ST_fsm_state67 => 
                ap_NS_fsm <= ap_ST_fsm_state68;
            when ap_ST_fsm_state68 => 
                ap_NS_fsm <= ap_ST_fsm_state69;
            when ap_ST_fsm_state69 => 
                ap_NS_fsm <= ap_ST_fsm_state70;
            when ap_ST_fsm_state70 => 
                ap_NS_fsm <= ap_ST_fsm_state71;
            when ap_ST_fsm_state71 => 
                ap_NS_fsm <= ap_ST_fsm_state72;
            when ap_ST_fsm_state72 => 
                ap_NS_fsm <= ap_ST_fsm_state57;
            when ap_ST_fsm_state73 => 
                ap_NS_fsm <= ap_ST_fsm_state52;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    add_ln32_1_fu_1889_p2 <= std_logic_vector(signed(ap_const_lv3_7) + signed(k_0_reg_628));
    add_ln32_2_fu_1902_p2 <= std_logic_vector(unsigned(sext_ln32_1_cast_fu_1895_p3) + unsigned(trunc_ln28_1_reg_2608));
    add_ln32_fu_1831_p2 <= std_logic_vector(unsigned(trunc_ln32_fu_1823_p1) + unsigned(trunc_ln28_1_fu_1827_p1));
    add_ln34_1_fu_1976_p2 <= std_logic_vector(unsigned(or_ln34_fu_1970_p2) + unsigned(trunc_ln28_1_reg_2608));
    add_ln34_2_fu_1934_p2 <= std_logic_vector(signed(ap_const_lv4_F) + signed(trunc_ln33_fu_1918_p1));
    add_ln34_fu_1940_p2 <= std_logic_vector(unsigned(add_ln34_2_fu_1934_p2) + unsigned(trunc_ln28_1_reg_2608));
    add_ln35_fu_2004_p2 <= std_logic_vector(unsigned(or_ln35_fu_1999_p2) + unsigned(trunc_ln28_1_reg_2608));
    add_ln36_fu_2032_p2 <= std_logic_vector(unsigned(or_ln36_fu_2027_p2) + unsigned(trunc_ln28_1_reg_2608));
    add_ln37_fu_2060_p2 <= std_logic_vector(unsigned(or_ln37_fu_2055_p2) + unsigned(trunc_ln28_1_reg_2608));
    add_ln38_fu_2088_p2 <= std_logic_vector(unsigned(or_ln38_fu_2083_p2) + unsigned(trunc_ln28_1_reg_2608));
    add_ln39_fu_2116_p2 <= std_logic_vector(unsigned(or_ln39_fu_2111_p2) + unsigned(trunc_ln28_1_reg_2608));
    add_ln40_fu_2144_p2 <= std_logic_vector(unsigned(or_ln40_fu_2139_p2) + unsigned(trunc_ln28_1_reg_2608));
    add_ln41_fu_2154_p2 <= std_logic_vector(unsigned(trunc_ln34_1_reg_2667) + unsigned(trunc_ln28_1_reg_2608));
    add_ln43_fu_2181_p2 <= std_logic_vector(signed(sext_ln43_fu_2177_p1) + signed(pd_0_rec_reg_569));
    add_ln51_1_fu_1539_p2 <= std_logic_vector(unsigned(trunc_ln48_reg_2507) + unsigned(or_ln51_fu_1533_p2));
    add_ln51_fu_1506_p2 <= std_logic_vector(unsigned(trunc_ln48_fu_1502_p1) + unsigned(trunc_ln51_fu_1499_p1));
    add_ln52_1_fu_1589_p2 <= std_logic_vector(unsigned(trunc_ln48_2_reg_2521) + unsigned(or_ln52_fu_1583_p2));
    add_ln52_fu_1556_p2 <= std_logic_vector(unsigned(trunc_ln48_2_fu_1552_p1) + unsigned(trunc_ln52_fu_1549_p1));
    add_ln53_1_fu_1626_p2 <= std_logic_vector(unsigned(shl_ln6_fu_1619_p3) + unsigned(trunc_ln48_4_fu_1605_p1));
    add_ln53_fu_1609_p2 <= std_logic_vector(unsigned(trunc_ln53_reg_2535) + unsigned(trunc_ln48_4_fu_1605_p1));
    add_ln55_1_fu_1704_p2 <= std_logic_vector(unsigned(or_ln55_fu_1698_p2) + unsigned(trunc_ln48_6_reg_2563));
    add_ln55_2_fu_1657_p2 <= std_logic_vector(signed(ap_const_lv4_F) + signed(trunc_ln54_fu_1641_p1));
    add_ln55_fu_1667_p2 <= std_logic_vector(unsigned(add_ln55_2_fu_1657_p2) + unsigned(trunc_ln48_6_fu_1663_p1));
    add_ln56_fu_1724_p2 <= std_logic_vector(unsigned(or_ln56_fu_1719_p2) + unsigned(trunc_ln48_6_reg_2563));
    add_ln57_fu_1744_p2 <= std_logic_vector(unsigned(or_ln57_fu_1739_p2) + unsigned(trunc_ln48_6_reg_2563));
    add_ln58_fu_1754_p2 <= std_logic_vector(unsigned(trunc_ln55_1_reg_2581) + unsigned(trunc_ln48_6_reg_2563));
    add_ln61_1_fu_1233_p2 <= std_logic_vector(unsigned(trunc_ln48_1_reg_2411) + unsigned(or_ln61_fu_1227_p2));
    add_ln61_fu_1190_p2 <= std_logic_vector(unsigned(trunc_ln48_1_fu_1186_p1) + unsigned(trunc_ln61_fu_1183_p1));
    add_ln62_1_fu_1293_p2 <= std_logic_vector(unsigned(trunc_ln48_3_reg_2425) + unsigned(or_ln62_fu_1287_p2));
    add_ln62_fu_1250_p2 <= std_logic_vector(unsigned(trunc_ln48_3_fu_1246_p1) + unsigned(trunc_ln62_fu_1243_p1));
    add_ln63_1_fu_1330_p2 <= std_logic_vector(unsigned(shl_ln7_fu_1323_p3) + unsigned(trunc_ln48_5_fu_1309_p1));
    add_ln63_fu_1313_p2 <= std_logic_vector(unsigned(trunc_ln63_reg_2439) + unsigned(trunc_ln48_5_fu_1309_p1));
    add_ln65_1_fu_1417_p2 <= std_logic_vector(unsigned(or_ln65_fu_1411_p2) + unsigned(trunc_ln48_7_reg_2472));
    add_ln65_2_fu_1360_p2 <= std_logic_vector(signed(ap_const_lv4_F) + signed(trunc_ln64_fu_1344_p1));
    add_ln65_fu_1370_p2 <= std_logic_vector(unsigned(add_ln65_2_fu_1360_p2) + unsigned(trunc_ln48_7_fu_1366_p1));
    add_ln66_fu_1447_p2 <= std_logic_vector(unsigned(or_ln66_fu_1442_p2) + unsigned(trunc_ln48_7_reg_2472));
    add_ln67_fu_1477_p2 <= std_logic_vector(unsigned(or_ln67_fu_1472_p2) + unsigned(trunc_ln48_7_reg_2472));
    add_ln68_fu_1487_p2 <= std_logic_vector(unsigned(trunc_ln65_1_reg_2490) + unsigned(trunc_ln48_7_reg_2472));
    add_ln71_fu_1771_p2 <= std_logic_vector(signed(sext_ln71_fu_1767_p1) + signed(pd3_0_rec_reg_546));
    add_ln79_1_fu_1061_p2 <= std_logic_vector(unsigned(shl_ln4_fu_1053_p3) + unsigned(trunc_ln76_reg_2351));
    add_ln79_fu_1034_p2 <= std_logic_vector(unsigned(trunc_ln79_fu_1027_p1) + unsigned(trunc_ln76_fu_1030_p1));
    add_ln81_1_fu_1093_p2 <= std_logic_vector(unsigned(trunc_ln76_2_reg_2330) + unsigned(or_ln81_fu_1087_p2));
    add_ln81_2_fu_934_p2 <= std_logic_vector(signed(ap_const_lv4_F) + signed(trunc_ln80_fu_918_p1));
    add_ln81_fu_944_p2 <= std_logic_vector(unsigned(trunc_ln76_2_fu_940_p1) + unsigned(add_ln81_2_fu_934_p2));
    add_ln82_fu_1103_p2 <= std_logic_vector(unsigned(trunc_ln76_2_reg_2330) + unsigned(trunc_ln81_1_fu_1080_p3));
    add_ln85_1_fu_867_p2 <= std_logic_vector(unsigned(shl_ln85_1_fu_859_p3) + unsigned(trunc_ln76_1_reg_2288));
    add_ln85_2_fu_849_p2 <= std_logic_vector(signed(sext_ln85_fu_837_p1) + signed(shl_ln5_fu_841_p3));
    add_ln85_fu_826_p2 <= std_logic_vector(unsigned(trunc_ln85_fu_819_p1) + unsigned(trunc_ln76_1_fu_822_p1));
    add_ln87_1_fu_989_p2 <= std_logic_vector(unsigned(or_ln87_fu_983_p2) + unsigned(trunc_ln76_3_reg_2306));
    add_ln87_2_fu_893_p2 <= std_logic_vector(signed(ap_const_lv4_F) + signed(trunc_ln86_fu_877_p1));
    add_ln87_fu_903_p2 <= std_logic_vector(unsigned(add_ln87_2_fu_893_p2) + unsigned(trunc_ln76_3_fu_899_p1));
    add_ln88_1_fu_1016_p2 <= std_logic_vector(signed(sext_ln88_fu_1004_p1) + signed(shl_ln8_fu_1008_p3));
    add_ln88_fu_999_p2 <= std_logic_vector(unsigned(trunc_ln87_1_fu_976_p3) + unsigned(trunc_ln76_3_reg_2306));
    add_ln91_fu_1121_p2 <= std_logic_vector(signed(sext_ln91_fu_1117_p1) + signed(pd6_0_rec_reg_534));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state16 <= ap_CS_fsm(15);
    ap_CS_fsm_state17 <= ap_CS_fsm(16);
    ap_CS_fsm_state18 <= ap_CS_fsm(17);
    ap_CS_fsm_state19 <= ap_CS_fsm(18);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state20 <= ap_CS_fsm(19);
    ap_CS_fsm_state21 <= ap_CS_fsm(20);
    ap_CS_fsm_state22 <= ap_CS_fsm(21);
    ap_CS_fsm_state23 <= ap_CS_fsm(22);
    ap_CS_fsm_state24 <= ap_CS_fsm(23);
    ap_CS_fsm_state25 <= ap_CS_fsm(24);
    ap_CS_fsm_state26 <= ap_CS_fsm(25);
    ap_CS_fsm_state27 <= ap_CS_fsm(26);
    ap_CS_fsm_state28 <= ap_CS_fsm(27);
    ap_CS_fsm_state29 <= ap_CS_fsm(28);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state30 <= ap_CS_fsm(29);
    ap_CS_fsm_state31 <= ap_CS_fsm(30);
    ap_CS_fsm_state32 <= ap_CS_fsm(31);
    ap_CS_fsm_state33 <= ap_CS_fsm(32);
    ap_CS_fsm_state34 <= ap_CS_fsm(33);
    ap_CS_fsm_state35 <= ap_CS_fsm(34);
    ap_CS_fsm_state36 <= ap_CS_fsm(35);
    ap_CS_fsm_state37 <= ap_CS_fsm(36);
    ap_CS_fsm_state38 <= ap_CS_fsm(37);
    ap_CS_fsm_state39 <= ap_CS_fsm(38);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state40 <= ap_CS_fsm(39);
    ap_CS_fsm_state41 <= ap_CS_fsm(40);
    ap_CS_fsm_state42 <= ap_CS_fsm(41);
    ap_CS_fsm_state43 <= ap_CS_fsm(42);
    ap_CS_fsm_state44 <= ap_CS_fsm(43);
    ap_CS_fsm_state45 <= ap_CS_fsm(44);
    ap_CS_fsm_state46 <= ap_CS_fsm(45);
    ap_CS_fsm_state47 <= ap_CS_fsm(46);
    ap_CS_fsm_state48 <= ap_CS_fsm(47);
    ap_CS_fsm_state49 <= ap_CS_fsm(48);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state50 <= ap_CS_fsm(49);
    ap_CS_fsm_state51 <= ap_CS_fsm(50);
    ap_CS_fsm_state52 <= ap_CS_fsm(51);
    ap_CS_fsm_state53 <= ap_CS_fsm(52);
    ap_CS_fsm_state54 <= ap_CS_fsm(53);
    ap_CS_fsm_state55 <= ap_CS_fsm(54);
    ap_CS_fsm_state56 <= ap_CS_fsm(55);
    ap_CS_fsm_state57 <= ap_CS_fsm(56);
    ap_CS_fsm_state58 <= ap_CS_fsm(57);
    ap_CS_fsm_state59 <= ap_CS_fsm(58);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state60 <= ap_CS_fsm(59);
    ap_CS_fsm_state61 <= ap_CS_fsm(60);
    ap_CS_fsm_state62 <= ap_CS_fsm(61);
    ap_CS_fsm_state63 <= ap_CS_fsm(62);
    ap_CS_fsm_state64 <= ap_CS_fsm(63);
    ap_CS_fsm_state65 <= ap_CS_fsm(64);
    ap_CS_fsm_state66 <= ap_CS_fsm(65);
    ap_CS_fsm_state67 <= ap_CS_fsm(66);
    ap_CS_fsm_state68 <= ap_CS_fsm(67);
    ap_CS_fsm_state69 <= ap_CS_fsm(68);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state70 <= ap_CS_fsm(69);
    ap_CS_fsm_state71 <= ap_CS_fsm(70);
    ap_CS_fsm_state72 <= ap_CS_fsm(71);
    ap_CS_fsm_state73 <= ap_CS_fsm(72);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);

    ap_done_assign_proc : process(icmp_ln25_reg_2230, icmp_ln25_1_reg_2234, icmp_ln45_reg_2238, icmp_ln73_reg_2242, ap_CS_fsm_state5, icmp_ln76_fu_737_p2, icmp_ln48_fu_749_p2, icmp_ln28_fu_761_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) and ((((((((icmp_ln48_fu_749_p2 = ap_const_lv1_0) and (icmp_ln45_reg_2238 = ap_const_lv1_1) and (icmp_ln25_1_reg_2234 = ap_const_lv1_0)) or ((icmp_ln76_fu_737_p2 = ap_const_lv1_0) and (icmp_ln45_reg_2238 = ap_const_lv1_0) and (icmp_ln25_1_reg_2234 = ap_const_lv1_0))) or ((icmp_ln73_reg_2242 = ap_const_lv1_0) and (icmp_ln45_reg_2238 = ap_const_lv1_0) and (icmp_ln25_1_reg_2234 = ap_const_lv1_0))) or ((icmp_ln28_fu_761_p2 = ap_const_lv1_0) and (icmp_ln25_1_reg_2234 = ap_const_lv1_1) and (icmp_ln25_reg_2230 = ap_const_lv1_1))) or ((icmp_ln48_fu_749_p2 = ap_const_lv1_0) and (icmp_ln45_reg_2238 = ap_const_lv1_1) and (icmp_ln25_reg_2230 = ap_const_lv1_0))) or ((icmp_ln76_fu_737_p2 = ap_const_lv1_0) and (icmp_ln45_reg_2238 = ap_const_lv1_0) and (icmp_ln25_reg_2230 = ap_const_lv1_0))) or ((icmp_ln73_reg_2242 = ap_const_lv1_0) and (icmp_ln45_reg_2238 = ap_const_lv1_0) and (icmp_ln25_reg_2230 = ap_const_lv1_0))))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(icmp_ln25_reg_2230, icmp_ln25_1_reg_2234, icmp_ln45_reg_2238, icmp_ln73_reg_2242, ap_CS_fsm_state5, icmp_ln76_fu_737_p2, icmp_ln48_fu_749_p2, icmp_ln28_fu_761_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) and ((((((((icmp_ln48_fu_749_p2 = ap_const_lv1_0) and (icmp_ln45_reg_2238 = ap_const_lv1_1) and (icmp_ln25_1_reg_2234 = ap_const_lv1_0)) or ((icmp_ln76_fu_737_p2 = ap_const_lv1_0) and (icmp_ln45_reg_2238 = ap_const_lv1_0) and (icmp_ln25_1_reg_2234 = ap_const_lv1_0))) or ((icmp_ln73_reg_2242 = ap_const_lv1_0) and (icmp_ln45_reg_2238 = ap_const_lv1_0) and (icmp_ln25_1_reg_2234 = ap_const_lv1_0))) or ((icmp_ln28_fu_761_p2 = ap_const_lv1_0) and (icmp_ln25_1_reg_2234 = ap_const_lv1_1) and (icmp_ln25_reg_2230 = ap_const_lv1_1))) or ((icmp_ln48_fu_749_p2 = ap_const_lv1_0) and (icmp_ln45_reg_2238 = ap_const_lv1_1) and (icmp_ln25_reg_2230 = ap_const_lv1_0))) or ((icmp_ln76_fu_737_p2 = ap_const_lv1_0) and (icmp_ln45_reg_2238 = ap_const_lv1_0) and (icmp_ln25_reg_2230 = ap_const_lv1_0))) or ((icmp_ln73_reg_2242 = ap_const_lv1_0) and (icmp_ln45_reg_2238 = ap_const_lv1_0) and (icmp_ln25_reg_2230 = ap_const_lv1_0))))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    ashr_ln32_fu_1874_p2 <= std_logic_vector(shift_right(signed(p_data_q0),to_integer(unsigned('0' & zext_ln32_1_fu_1870_p1(31-1 downto 0)))));
    grp_fu_649_p2 <= "1" when (s_color_type_q0 = ap_const_lv32_0) else "0";
    grp_fu_655_p3 <= s_width_q0(31 downto 31);
    grp_fu_663_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(s_width_q0));
    grp_fu_669_p4 <= p_data_q0(31 downto 4);
    grp_fu_679_p4 <= p_data_q0(3 downto 2);
    grp_fu_689_p3 <= s_width_load_1_reg_2371(1 downto 1);
    grp_fu_696_p4 <= p_data_q0(5 downto 4);
    grp_fu_706_p2 <= "1" when (trunc_ln49_reg_2376 = ap_const_lv2_0) else "0";
    grp_fu_711_p4 <= p_data_q0(31 downto 6);
    i_1_fu_1165_p3 <= 
        sub_ln49_1_fu_1145_p2 when (grp_fu_655_p3(0) = '1') else 
        zext_ln49_1_fu_1161_p1;
    i_2_fu_811_p3 <= 
        sub_ln77_1_fu_791_p2 when (grp_fu_655_p3(0) = '1') else 
        zext_ln77_1_fu_807_p1;
    i_3_fu_1922_p2 <= std_logic_vector(signed(ap_const_lv32_FFFFFFFF) + signed(i_0_in_reg_640));
    i_4_fu_922_p2 <= std_logic_vector(signed(ap_const_lv32_FFFFFFFF) + signed(i4_0_in_reg_601));
    i_5_fu_881_p2 <= std_logic_vector(signed(ap_const_lv32_FFFFFFFF) + signed(i4_1_in_reg_592));
    i_6_fu_1645_p2 <= std_logic_vector(signed(ap_const_lv32_FFFFFFFF) + signed(i1_0_in_reg_619));
    i_7_fu_1348_p2 <= std_logic_vector(signed(ap_const_lv32_FFFFFFFF) + signed(i1_1_in_reg_610));
    i_fu_1811_p3 <= 
        sub_ln29_1_fu_1791_p2 when (grp_fu_655_p3(0) = '1') else 
        zext_ln29_1_fu_1807_p1;
    icmp_ln25_fu_721_p2 <= "1" when (s_bits_per_pixel_q0 = ap_const_lv32_1) else "0";
    icmp_ln28_fu_761_p2 <= "1" when (signed(j_0_reg_581) < signed(s_height_q0)) else "0";
    icmp_ln30_fu_1846_p2 <= "1" when (k_0_reg_628 = ap_const_lv3_0) else "0";
    icmp_ln31_fu_1856_p2 <= "1" when (unsigned(trunc_ln31_fu_1852_p1) < unsigned(k_0_reg_628)) else "0";
    icmp_ln33_fu_1928_p2 <= "1" when (signed(i_0_in_reg_640) > signed(ap_const_lv32_0)) else "0";
    icmp_ln45_fu_727_p2 <= "1" when (s_bits_per_pixel_loa_reg_2224 = ap_const_lv32_2) else "0";
    icmp_ln48_fu_749_p2 <= "1" when (signed(j2_0_reg_558) < signed(s_height_q0)) else "0";
    icmp_ln51_fu_1177_p2 <= "1" when (trunc_ln49_fu_1127_p1 = ap_const_lv2_3) else "0";
    icmp_ln54_fu_1651_p2 <= "1" when (signed(i1_0_in_reg_619) > signed(ap_const_lv32_0)) else "0";
    icmp_ln64_fu_1354_p2 <= "1" when (signed(i1_1_in_reg_610) > signed(ap_const_lv32_0)) else "0";
    icmp_ln73_fu_732_p2 <= "1" when (s_bits_per_pixel_loa_reg_2224 = ap_const_lv32_4) else "0";
    icmp_ln76_fu_737_p2 <= "1" when (signed(j5_0_reg_523) < signed(s_height_q0)) else "0";
    icmp_ln80_fu_928_p2 <= "1" when (signed(i4_0_in_reg_601) > signed(ap_const_lv32_0)) else "0";
    icmp_ln86_fu_887_p2 <= "1" when (signed(i4_1_in_reg_592) > signed(ap_const_lv32_0)) else "0";
    j_1_fu_743_p2 <= std_logic_vector(unsigned(j5_0_reg_523) + unsigned(ap_const_lv32_1));
    j_2_fu_755_p2 <= std_logic_vector(unsigned(j2_0_reg_558) + unsigned(ap_const_lv32_1));
    j_fu_767_p2 <= std_logic_vector(unsigned(j_0_reg_581) + unsigned(ap_const_lv32_1));
    k_fu_1912_p2 <= std_logic_vector(unsigned(k_0_reg_628) + unsigned(ap_const_lv3_7));
    lshr_ln77_1_fu_777_p4 <= grp_fu_663_p2(31 downto 1);
    lshr_ln77_2_fu_797_p4 <= s_width_q0(31 downto 1);
    mul_ln61_fu_1205_p1 <= mul_ln61_fu_1205_p10(2 - 1 downto 0);
    mul_ln61_fu_1205_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_679_p4),10));
    mul_ln61_fu_1205_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_const_lv10_55) * unsigned(mul_ln61_fu_1205_p1), 10));
    mul_ln62_fu_1265_p1 <= mul_ln62_fu_1265_p10(2 - 1 downto 0);
    mul_ln62_fu_1265_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_696_p4),10));
    mul_ln62_fu_1265_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_const_lv10_55) * unsigned(mul_ln62_fu_1265_p1), 10));
    mul_ln63_fu_2187_p0 <= ap_const_lv32_55(8 - 1 downto 0);
    mul_ln65_fu_1393_p1 <= mul_ln65_fu_1393_p10(2 - 1 downto 0);
    mul_ln65_fu_1393_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln65_fu_1385_p1),10));
    mul_ln65_fu_1393_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_const_lv10_55) * unsigned(mul_ln65_fu_1393_p1), 10));
    mul_ln66_fu_1431_p1 <= mul_ln66_fu_1431_p10(2 - 1 downto 0);
    mul_ln66_fu_1431_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_679_p4),10));
    mul_ln66_fu_1431_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_const_lv10_55) * unsigned(mul_ln66_fu_1431_p1), 10));
    mul_ln67_fu_1461_p1 <= mul_ln67_fu_1461_p10(2 - 1 downto 0);
    mul_ln67_fu_1461_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_696_p4),10));
    mul_ln67_fu_1461_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_const_lv10_55) * unsigned(mul_ln67_fu_1461_p1), 10));
    mul_ln68_fu_2193_p0 <= ap_const_lv32_55(8 - 1 downto 0);
    or_ln34_fu_1970_p2 <= (trunc_ln34_1_fu_1963_p3 or ap_const_lv4_7);
    or_ln35_fu_1999_p2 <= (trunc_ln34_1_reg_2667 or ap_const_lv4_6);
    or_ln36_fu_2027_p2 <= (trunc_ln34_1_reg_2667 or ap_const_lv4_5);
    or_ln37_fu_2055_p2 <= (trunc_ln34_1_reg_2667 or ap_const_lv4_4);
    or_ln38_fu_2083_p2 <= (trunc_ln34_1_reg_2667 or ap_const_lv4_3);
    or_ln39_fu_2111_p2 <= (trunc_ln34_1_reg_2667 or ap_const_lv4_2);
    or_ln40_fu_2139_p2 <= (trunc_ln34_1_reg_2667 or ap_const_lv4_1);
    or_ln51_fu_1533_p2 <= (shl_ln_fu_1525_p3 or ap_const_lv4_2);
    or_ln52_fu_1583_p2 <= (shl_ln2_fu_1575_p3 or ap_const_lv4_1);
    or_ln55_fu_1698_p2 <= (trunc_ln55_1_fu_1691_p3 or ap_const_lv4_3);
    or_ln56_fu_1719_p2 <= (trunc_ln55_1_reg_2581 or ap_const_lv4_2);
    or_ln57_fu_1739_p2 <= (trunc_ln55_1_reg_2581 or ap_const_lv4_1);
    or_ln61_fu_1227_p2 <= (shl_ln1_fu_1219_p3 or ap_const_lv4_2);
    or_ln62_fu_1287_p2 <= (shl_ln3_fu_1279_p3 or ap_const_lv4_1);
    or_ln65_fu_1411_p2 <= (trunc_ln65_1_fu_1404_p3 or ap_const_lv4_3);
    or_ln66_fu_1442_p2 <= (trunc_ln65_1_reg_2490 or ap_const_lv4_2);
    or_ln67_fu_1472_p2 <= (trunc_ln65_1_reg_2490 or ap_const_lv4_1);
    or_ln81_fu_1087_p2 <= (trunc_ln81_1_fu_1080_p3 or ap_const_lv4_1);
    or_ln87_1_fu_963_p3 <= (trunc_ln87_fu_959_p1 & trunc_ln87_fu_959_p1);
    or_ln87_fu_983_p2 <= (trunc_ln87_1_fu_976_p3 or ap_const_lv4_1);

    p_data_address0_assign_proc : process(icmp_ln78_reg_2284, ap_CS_fsm_state7, ap_CS_fsm_state9, icmp_ln86_fu_887_p2, p_data_addr_30_reg_2312, icmp_ln80_fu_928_p2, p_data_addr_27_reg_2336, ap_CS_fsm_state10, ap_CS_fsm_state13, ap_CS_fsm_state15, ap_CS_fsm_state21, ap_CS_fsm_state22, ap_CS_fsm_state23, ap_CS_fsm_state24, ap_CS_fsm_state25, ap_CS_fsm_state28, p_data_addr_38_reg_2480, ap_CS_fsm_state29, ap_CS_fsm_state33, ap_CS_fsm_state37, ap_CS_fsm_state38, ap_CS_fsm_state39, ap_CS_fsm_state40, ap_CS_fsm_state41, ap_CS_fsm_state43, p_data_addr_33_reg_2571, ap_CS_fsm_state44, ap_CS_fsm_state48, p_data_addr_reg_2622, ap_CS_fsm_state55, ap_CS_fsm_state56, ap_CS_fsm_state57, p_data_addr_6_reg_2657, ap_CS_fsm_state58, ap_CS_fsm_state70, ap_CS_fsm_state8, ap_CS_fsm_state12, ap_CS_fsm_state14, ap_CS_fsm_state17, ap_CS_fsm_state27, ap_CS_fsm_state36, ap_CS_fsm_state42, ap_CS_fsm_state50, ap_CS_fsm_state72, zext_ln85_fu_832_p1, zext_ln85_1_fu_872_p1, zext_ln87_fu_909_p1, zext_ln81_fu_950_p1, zext_ln87_2_fu_994_p1, zext_ln88_fu_1023_p1, zext_ln79_fu_1040_p1, zext_ln79_1_fu_1066_p1, zext_ln81_2_fu_1098_p1, zext_ln82_fu_1113_p1, zext_ln61_fu_1196_p1, zext_ln61_3_fu_1238_p1, zext_ln62_fu_1256_p1, zext_ln62_3_fu_1298_p1, zext_ln63_fu_1318_p1, zext_ln63_1_fu_1340_p1, zext_ln65_fu_1376_p1, zext_ln65_3_fu_1422_p1, zext_ln66_2_fu_1452_p1, ap_CS_fsm_state31, zext_ln67_2_fu_1482_p1, zext_ln68_fu_1495_p1, zext_ln51_fu_1512_p1, zext_ln51_2_fu_1544_p1, zext_ln52_fu_1562_p1, zext_ln52_2_fu_1594_p1, zext_ln53_fu_1614_p1, zext_ln53_1_fu_1637_p1, zext_ln55_fu_1673_p1, zext_ln55_2_fu_1709_p1, zext_ln56_1_fu_1729_p1, ap_CS_fsm_state46, zext_ln57_1_fu_1749_p1, zext_ln58_fu_1763_p1, zext_ln32_3_fu_1907_p1, zext_ln34_fu_1945_p1, zext_ln34_2_fu_1981_p1, zext_ln35_1_fu_2009_p1, ap_CS_fsm_state60, zext_ln36_1_fu_2037_p1, ap_CS_fsm_state62, zext_ln37_1_fu_2065_p1, ap_CS_fsm_state64, zext_ln38_1_fu_2093_p1, ap_CS_fsm_state66, zext_ln39_1_fu_2121_p1, ap_CS_fsm_state68, zext_ln40_1_fu_2149_p1, zext_ln41_fu_2173_p1, ap_CS_fsm_state11, ap_CS_fsm_state16, ap_CS_fsm_state30, ap_CS_fsm_state32, ap_CS_fsm_state34, ap_CS_fsm_state45, ap_CS_fsm_state47, ap_CS_fsm_state49, ap_CS_fsm_state59, ap_CS_fsm_state61, ap_CS_fsm_state63, ap_CS_fsm_state65, ap_CS_fsm_state67, ap_CS_fsm_state69, ap_CS_fsm_state71)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state72)) then 
            p_data_address0 <= zext_ln41_fu_2173_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state70)) then 
            p_data_address0 <= zext_ln40_1_fu_2149_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state68)) then 
            p_data_address0 <= zext_ln39_1_fu_2121_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state66)) then 
            p_data_address0 <= zext_ln38_1_fu_2093_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state64)) then 
            p_data_address0 <= zext_ln37_1_fu_2065_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state62)) then 
            p_data_address0 <= zext_ln36_1_fu_2037_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state60)) then 
            p_data_address0 <= zext_ln35_1_fu_2009_p1(8 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state71) or (ap_const_logic_1 = ap_CS_fsm_state69) or (ap_const_logic_1 = ap_CS_fsm_state67) or (ap_const_logic_1 = ap_CS_fsm_state65) or (ap_const_logic_1 = ap_CS_fsm_state63) or (ap_const_logic_1 = ap_CS_fsm_state61) or (ap_const_logic_1 = ap_CS_fsm_state59))) then 
            p_data_address0 <= p_data_addr_6_reg_2657;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state58)) then 
            p_data_address0 <= zext_ln34_2_fu_1981_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state57)) then 
            p_data_address0 <= zext_ln34_fu_1945_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state56)) then 
            p_data_address0 <= zext_ln32_3_fu_1907_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
            p_data_address0 <= p_data_addr_reg_2622;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state50)) then 
            p_data_address0 <= zext_ln58_fu_1763_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state48)) then 
            p_data_address0 <= zext_ln57_1_fu_1749_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state46)) then 
            p_data_address0 <= zext_ln56_1_fu_1729_p1(8 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state49) or (ap_const_logic_1 = ap_CS_fsm_state47) or (ap_const_logic_1 = ap_CS_fsm_state45))) then 
            p_data_address0 <= p_data_addr_33_reg_2571;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state44)) then 
            p_data_address0 <= zext_ln55_2_fu_1709_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state43)) then 
            p_data_address0 <= zext_ln55_fu_1673_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
            p_data_address0 <= zext_ln53_1_fu_1637_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
            p_data_address0 <= zext_ln53_fu_1614_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state40)) then 
            p_data_address0 <= zext_ln52_2_fu_1594_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
            p_data_address0 <= zext_ln52_fu_1562_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state38)) then 
            p_data_address0 <= zext_ln51_2_fu_1544_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            p_data_address0 <= zext_ln51_fu_1512_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            p_data_address0 <= zext_ln68_fu_1495_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
            p_data_address0 <= zext_ln67_2_fu_1482_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
            p_data_address0 <= zext_ln66_2_fu_1452_p1(8 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state34) or (ap_const_logic_1 = ap_CS_fsm_state32) or (ap_const_logic_1 = ap_CS_fsm_state30))) then 
            p_data_address0 <= p_data_addr_38_reg_2480;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            p_data_address0 <= zext_ln65_3_fu_1422_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            p_data_address0 <= zext_ln65_fu_1376_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            p_data_address0 <= zext_ln63_1_fu_1340_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            p_data_address0 <= zext_ln63_fu_1318_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            p_data_address0 <= zext_ln62_3_fu_1298_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            p_data_address0 <= zext_ln62_fu_1256_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            p_data_address0 <= zext_ln61_3_fu_1238_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            p_data_address0 <= zext_ln61_fu_1196_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            p_data_address0 <= zext_ln82_fu_1113_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            p_data_address0 <= p_data_addr_27_reg_2336;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            p_data_address0 <= zext_ln81_2_fu_1098_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            p_data_address0 <= zext_ln79_1_fu_1066_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            p_data_address0 <= zext_ln79_fu_1040_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            p_data_address0 <= zext_ln88_fu_1023_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            p_data_address0 <= p_data_addr_30_reg_2312;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            p_data_address0 <= zext_ln87_2_fu_994_p1(8 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state9) and (icmp_ln80_fu_928_p2 = ap_const_lv1_1) and (icmp_ln78_reg_2284 = ap_const_lv1_1))) then 
            p_data_address0 <= zext_ln81_fu_950_p1(8 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state9) and (icmp_ln78_reg_2284 = ap_const_lv1_0) and (icmp_ln86_fu_887_p2 = ap_const_lv1_1))) then 
            p_data_address0 <= zext_ln87_fu_909_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            p_data_address0 <= zext_ln85_1_fu_872_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            p_data_address0 <= zext_ln85_fu_832_p1(8 - 1 downto 0);
        else 
            p_data_address0 <= "XXXXXXXX";
        end if; 
    end process;


    p_data_ce0_assign_proc : process(icmp_ln78_reg_2284, ap_CS_fsm_state7, ap_CS_fsm_state9, icmp_ln86_fu_887_p2, icmp_ln80_fu_928_p2, ap_CS_fsm_state10, ap_CS_fsm_state13, ap_CS_fsm_state15, ap_CS_fsm_state21, ap_CS_fsm_state22, ap_CS_fsm_state23, ap_CS_fsm_state24, ap_CS_fsm_state25, ap_CS_fsm_state28, ap_CS_fsm_state29, ap_CS_fsm_state33, ap_CS_fsm_state37, ap_CS_fsm_state38, ap_CS_fsm_state39, ap_CS_fsm_state40, ap_CS_fsm_state41, ap_CS_fsm_state43, ap_CS_fsm_state44, ap_CS_fsm_state48, ap_CS_fsm_state55, ap_CS_fsm_state56, ap_CS_fsm_state57, ap_CS_fsm_state58, ap_CS_fsm_state70, ap_CS_fsm_state8, ap_CS_fsm_state12, ap_CS_fsm_state14, ap_CS_fsm_state17, ap_CS_fsm_state27, ap_CS_fsm_state36, ap_CS_fsm_state42, ap_CS_fsm_state50, ap_CS_fsm_state72, ap_CS_fsm_state31, ap_CS_fsm_state46, ap_CS_fsm_state60, ap_CS_fsm_state62, ap_CS_fsm_state64, ap_CS_fsm_state66, ap_CS_fsm_state68, ap_CS_fsm_state11, ap_CS_fsm_state16, ap_CS_fsm_state30, ap_CS_fsm_state32, ap_CS_fsm_state34, ap_CS_fsm_state45, ap_CS_fsm_state47, ap_CS_fsm_state49, ap_CS_fsm_state59, ap_CS_fsm_state61, ap_CS_fsm_state63, ap_CS_fsm_state65, ap_CS_fsm_state67, ap_CS_fsm_state69, ap_CS_fsm_state71)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state71) or (ap_const_logic_1 = ap_CS_fsm_state69) or (ap_const_logic_1 = ap_CS_fsm_state67) or (ap_const_logic_1 = ap_CS_fsm_state65) or (ap_const_logic_1 = ap_CS_fsm_state63) or (ap_const_logic_1 = ap_CS_fsm_state61) or (ap_const_logic_1 = ap_CS_fsm_state59) or (ap_const_logic_1 = ap_CS_fsm_state49) or (ap_const_logic_1 = ap_CS_fsm_state47) or (ap_const_logic_1 = ap_CS_fsm_state45) or (ap_const_logic_1 = ap_CS_fsm_state34) or (ap_const_logic_1 = ap_CS_fsm_state32) or (ap_const_logic_1 = ap_CS_fsm_state30) or (ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state68) or (ap_const_logic_1 = ap_CS_fsm_state66) or (ap_const_logic_1 = ap_CS_fsm_state64) or (ap_const_logic_1 = ap_CS_fsm_state62) or (ap_const_logic_1 = ap_CS_fsm_state60) or (ap_const_logic_1 = ap_CS_fsm_state46) or (ap_const_logic_1 = ap_CS_fsm_state31) or (ap_const_logic_1 = ap_CS_fsm_state72) or (ap_const_logic_1 = ap_CS_fsm_state50) or (ap_const_logic_1 = ap_CS_fsm_state42) or (ap_const_logic_1 = ap_CS_fsm_state36) or (ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state70) or (ap_const_logic_1 = ap_CS_fsm_state58) or (ap_const_logic_1 = ap_CS_fsm_state57) or (ap_const_logic_1 = ap_CS_fsm_state56) or (ap_const_logic_1 = ap_CS_fsm_state55) or (ap_const_logic_1 = ap_CS_fsm_state48) or (ap_const_logic_1 = ap_CS_fsm_state44) or (ap_const_logic_1 = ap_CS_fsm_state43) or (ap_const_logic_1 = ap_CS_fsm_state41) or (ap_const_logic_1 = ap_CS_fsm_state40) or (ap_const_logic_1 = ap_CS_fsm_state39) or (ap_const_logic_1 = ap_CS_fsm_state38) or (ap_const_logic_1 = ap_CS_fsm_state37) or (ap_const_logic_1 = ap_CS_fsm_state33) or (ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state25) or (ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state22) or (ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state7) or ((ap_const_logic_1 = ap_CS_fsm_state9) and (icmp_ln80_fu_928_p2 = ap_const_lv1_1) and (icmp_ln78_reg_2284 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state9) and (icmp_ln78_reg_2284 = ap_const_lv1_0) and (icmp_ln86_fu_887_p2 = ap_const_lv1_1)))) then 
            p_data_ce0 <= ap_const_logic_1;
        else 
            p_data_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    p_data_d0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state15, ap_CS_fsm_state22, ap_CS_fsm_state24, mul_ln63_reg_2459, ap_CS_fsm_state29, ap_CS_fsm_state33, mul_ln68_reg_2502, ap_CS_fsm_state38, ap_CS_fsm_state40, ap_CS_fsm_state44, ap_CS_fsm_state48, ap_CS_fsm_state56, ap_CS_fsm_state58, ap_CS_fsm_state70, ap_CS_fsm_state8, ap_CS_fsm_state12, ap_CS_fsm_state14, ap_CS_fsm_state17, ap_CS_fsm_state27, ap_CS_fsm_state36, ap_CS_fsm_state42, ap_CS_fsm_state50, ap_CS_fsm_state72, ap_CS_fsm_state31, ap_CS_fsm_state46, ap_CS_fsm_state60, ap_CS_fsm_state62, ap_CS_fsm_state64, ap_CS_fsm_state66, ap_CS_fsm_state68, add_ln85_2_fu_849_p2, zext_ln87_1_fu_971_p1, add_ln88_1_fu_1016_p2, sext_ln79_fu_1045_p1, zext_ln81_1_fu_1075_p1, sext_ln82_fu_1108_p1, zext_ln61_2_fu_1211_p1, zext_ln62_2_fu_1271_p1, zext_ln65_2_fu_1399_p1, zext_ln66_1_fu_1437_p1, zext_ln67_1_fu_1467_p1, zext_ln51_1_fu_1517_p1, zext_ln52_1_fu_1567_p1, sext_ln53_fu_1632_p1, zext_ln55_1_fu_1686_p1, zext_ln56_fu_1714_p1, zext_ln57_fu_1734_p1, sext_ln58_fu_1758_p1, zext_ln32_2_fu_1884_p1, zext_ln34_1_fu_1958_p1, zext_ln35_fu_1994_p1, zext_ln36_fu_2022_p1, zext_ln37_fu_2050_p1, zext_ln38_fu_2078_p1, zext_ln39_fu_2106_p1, zext_ln40_fu_2134_p1, sext_ln41_fu_2168_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state72)) then 
            p_data_d0 <= sext_ln41_fu_2168_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state70)) then 
            p_data_d0 <= zext_ln40_fu_2134_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state68)) then 
            p_data_d0 <= zext_ln39_fu_2106_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state66)) then 
            p_data_d0 <= zext_ln38_fu_2078_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state64)) then 
            p_data_d0 <= zext_ln37_fu_2050_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state62)) then 
            p_data_d0 <= zext_ln36_fu_2022_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state60)) then 
            p_data_d0 <= zext_ln35_fu_1994_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state58)) then 
            p_data_d0 <= zext_ln34_1_fu_1958_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state56)) then 
            p_data_d0 <= zext_ln32_2_fu_1884_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state50)) then 
            p_data_d0 <= sext_ln58_fu_1758_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state48)) then 
            p_data_d0 <= zext_ln57_fu_1734_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state46)) then 
            p_data_d0 <= zext_ln56_fu_1714_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state44)) then 
            p_data_d0 <= zext_ln55_1_fu_1686_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
            p_data_d0 <= sext_ln53_fu_1632_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state40)) then 
            p_data_d0 <= zext_ln52_1_fu_1567_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state38)) then 
            p_data_d0 <= zext_ln51_1_fu_1517_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            p_data_d0 <= mul_ln68_reg_2502;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
            p_data_d0 <= zext_ln67_1_fu_1467_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
            p_data_d0 <= zext_ln66_1_fu_1437_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            p_data_d0 <= zext_ln65_2_fu_1399_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            p_data_d0 <= mul_ln63_reg_2459;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            p_data_d0 <= zext_ln62_2_fu_1271_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            p_data_d0 <= zext_ln61_2_fu_1211_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            p_data_d0 <= sext_ln82_fu_1108_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            p_data_d0 <= zext_ln81_1_fu_1075_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            p_data_d0 <= sext_ln79_fu_1045_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            p_data_d0 <= add_ln88_1_fu_1016_p2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            p_data_d0 <= zext_ln87_1_fu_971_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            p_data_d0 <= add_ln85_2_fu_849_p2;
        else 
            p_data_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    p_data_we0_assign_proc : process(trunc_ln77_reg_2270, ap_CS_fsm_state10, ap_CS_fsm_state15, icmp_ln51_reg_2407, tmp_8_reg_2421, ap_CS_fsm_state22, icmp_ln63_reg_2435, ap_CS_fsm_state24, ap_CS_fsm_state29, ap_CS_fsm_state33, tmp_7_reg_2517, ap_CS_fsm_state38, icmp_ln53_reg_2531, ap_CS_fsm_state40, ap_CS_fsm_state44, ap_CS_fsm_state48, icmp_ln31_reg_2635, ap_CS_fsm_state56, ap_CS_fsm_state58, ap_CS_fsm_state70, ap_CS_fsm_state8, ap_CS_fsm_state12, ap_CS_fsm_state14, ap_CS_fsm_state17, ap_CS_fsm_state27, ap_CS_fsm_state36, ap_CS_fsm_state42, ap_CS_fsm_state50, ap_CS_fsm_state72, ap_CS_fsm_state31, ap_CS_fsm_state46, ap_CS_fsm_state60, ap_CS_fsm_state62, ap_CS_fsm_state64, ap_CS_fsm_state66, ap_CS_fsm_state68)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state68) or (ap_const_logic_1 = ap_CS_fsm_state66) or (ap_const_logic_1 = ap_CS_fsm_state64) or (ap_const_logic_1 = ap_CS_fsm_state62) or (ap_const_logic_1 = ap_CS_fsm_state60) or (ap_const_logic_1 = ap_CS_fsm_state46) or (ap_const_logic_1 = ap_CS_fsm_state31) or (ap_const_logic_1 = ap_CS_fsm_state72) or (ap_const_logic_1 = ap_CS_fsm_state50) or (ap_const_logic_1 = ap_CS_fsm_state36) or (ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state70) or (ap_const_logic_1 = ap_CS_fsm_state58) or (ap_const_logic_1 = ap_CS_fsm_state48) or (ap_const_logic_1 = ap_CS_fsm_state44) or (ap_const_logic_1 = ap_CS_fsm_state33) or (ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state10) or ((ap_const_logic_1 = ap_CS_fsm_state42) and (icmp_ln53_reg_2531 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state27) and (icmp_ln63_reg_2435 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state14) and (trunc_ln77_reg_2270 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state8) and (trunc_ln77_reg_2270 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state56) and (icmp_ln31_reg_2635 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state40) and (tmp_7_reg_2517 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state38) and (icmp_ln51_reg_2407 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state24) and (tmp_8_reg_2421 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state22) and (icmp_ln51_reg_2407 = ap_const_lv1_1)))) then 
            p_data_we0 <= ap_const_logic_1;
        else 
            p_data_we0 <= ap_const_logic_0;
        end if; 
    end process;

    s_bits_per_pixel_address0 <= ap_const_lv64_0(4 - 1 downto 0);

    s_bits_per_pixel_ce0_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            s_bits_per_pixel_ce0 <= ap_const_logic_1;
        else 
            s_bits_per_pixel_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    s_color_type_addr_reg_2219 <= ap_const_lv64_0(4 - 1 downto 0);

    s_color_type_address0_assign_proc : process(ap_CS_fsm_state2, s_color_type_addr_reg_2219, icmp_ln25_reg_2230, icmp_ln25_1_reg_2234, icmp_ln45_reg_2238, icmp_ln73_reg_2242, ap_CS_fsm_state5, icmp_ln76_fu_737_p2, icmp_ln48_fu_749_p2)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state5) and (((icmp_ln48_fu_749_p2 = ap_const_lv1_1) and (icmp_ln45_reg_2238 = ap_const_lv1_1) and (icmp_ln25_1_reg_2234 = ap_const_lv1_0)) or ((icmp_ln48_fu_749_p2 = ap_const_lv1_1) and (icmp_ln45_reg_2238 = ap_const_lv1_1) and (icmp_ln25_reg_2230 = ap_const_lv1_0)))) or ((ap_const_logic_1 = ap_CS_fsm_state5) and (((icmp_ln45_reg_2238 = ap_const_lv1_0) and (icmp_ln76_fu_737_p2 = ap_const_lv1_1) and (icmp_ln73_reg_2242 = ap_const_lv1_1) and (icmp_ln25_1_reg_2234 = ap_const_lv1_0)) or ((icmp_ln45_reg_2238 = ap_const_lv1_0) and (icmp_ln76_fu_737_p2 = ap_const_lv1_1) and (icmp_ln73_reg_2242 = ap_const_lv1_1) and (icmp_ln25_reg_2230 = ap_const_lv1_0)))))) then 
            s_color_type_address0 <= s_color_type_addr_reg_2219;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            s_color_type_address0 <= ap_const_lv64_0(4 - 1 downto 0);
        else 
            s_color_type_address0 <= "XXXX";
        end if; 
    end process;


    s_color_type_ce0_assign_proc : process(ap_CS_fsm_state2, icmp_ln25_reg_2230, icmp_ln25_1_reg_2234, icmp_ln45_reg_2238, icmp_ln73_reg_2242, ap_CS_fsm_state5, icmp_ln76_fu_737_p2, icmp_ln48_fu_749_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or ((ap_const_logic_1 = ap_CS_fsm_state5) and (((icmp_ln48_fu_749_p2 = ap_const_lv1_1) and (icmp_ln45_reg_2238 = ap_const_lv1_1) and (icmp_ln25_1_reg_2234 = ap_const_lv1_0)) or ((icmp_ln48_fu_749_p2 = ap_const_lv1_1) and (icmp_ln45_reg_2238 = ap_const_lv1_1) and (icmp_ln25_reg_2230 = ap_const_lv1_0)))) or ((ap_const_logic_1 = ap_CS_fsm_state5) and (((icmp_ln45_reg_2238 = ap_const_lv1_0) and (icmp_ln76_fu_737_p2 = ap_const_lv1_1) and (icmp_ln73_reg_2242 = ap_const_lv1_1) and (icmp_ln25_1_reg_2234 = ap_const_lv1_0)) or ((icmp_ln45_reg_2238 = ap_const_lv1_0) and (icmp_ln76_fu_737_p2 = ap_const_lv1_1) and (icmp_ln73_reg_2242 = ap_const_lv1_1) and (icmp_ln25_reg_2230 = ap_const_lv1_0)))))) then 
            s_color_type_ce0 <= ap_const_logic_1;
        else 
            s_color_type_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    s_height_address0 <= ap_const_lv64_0(4 - 1 downto 0);

    s_height_ce0_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state19, ap_CS_fsm_state52)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state52) or (ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            s_height_ce0 <= ap_const_logic_1;
        else 
            s_height_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    s_image_linesize_address0 <= ap_const_lv64_0(4 - 1 downto 0);

    s_image_linesize_ce0_assign_proc : process(ap_CS_fsm_state9, ap_CS_fsm_state28, ap_CS_fsm_state57)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state57) or (ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            s_image_linesize_ce0 <= ap_const_logic_1;
        else 
            s_image_linesize_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    s_width_address0 <= ap_const_lv64_0(4 - 1 downto 0);

    s_width_ce0_assign_proc : process(icmp_ln25_reg_2230, icmp_ln25_1_reg_2234, icmp_ln45_reg_2238, icmp_ln73_reg_2242, ap_CS_fsm_state5, ap_CS_fsm_state54, icmp_ln76_fu_737_p2, icmp_ln48_fu_749_p2, icmp_ln28_fu_761_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state54) or ((ap_const_logic_1 = ap_CS_fsm_state5) and (((icmp_ln48_fu_749_p2 = ap_const_lv1_1) and (icmp_ln45_reg_2238 = ap_const_lv1_1) and (icmp_ln25_1_reg_2234 = ap_const_lv1_0)) or ((icmp_ln48_fu_749_p2 = ap_const_lv1_1) and (icmp_ln45_reg_2238 = ap_const_lv1_1) and (icmp_ln25_reg_2230 = ap_const_lv1_0)))) or ((ap_const_logic_1 = ap_CS_fsm_state5) and (((icmp_ln45_reg_2238 = ap_const_lv1_0) and (icmp_ln76_fu_737_p2 = ap_const_lv1_1) and (icmp_ln73_reg_2242 = ap_const_lv1_1) and (icmp_ln25_1_reg_2234 = ap_const_lv1_0)) or ((icmp_ln45_reg_2238 = ap_const_lv1_0) and (icmp_ln76_fu_737_p2 = ap_const_lv1_1) and (icmp_ln73_reg_2242 = ap_const_lv1_1) and (icmp_ln25_reg_2230 = ap_const_lv1_0)))) or ((ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln28_fu_761_p2 = ap_const_lv1_1) and (icmp_ln25_1_reg_2234 = ap_const_lv1_1) and (icmp_ln25_reg_2230 = ap_const_lv1_1)))) then 
            s_width_ce0 <= ap_const_logic_1;
        else 
            s_width_ce0 <= ap_const_logic_0;
        end if; 
    end process;

        sext_ln29_fu_1819_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(i_fu_1811_p3),32));

    sext_ln32_1_cast_fu_1895_p3 <= (trunc_ln32_2_reg_2639 & add_ln32_1_fu_1889_p2);
        sext_ln41_fu_2168_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln2_fu_2158_p4),32));

        sext_ln43_fu_2177_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(s_image_linesize_q0),64));

        sext_ln49_fu_1173_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(i_1_fu_1165_p3),32));

        sext_ln53_fu_1632_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_fu_711_p4),32));

        sext_ln58_fu_1758_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_fu_711_p4),32));

        sext_ln71_fu_1767_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(s_image_linesize_q0),64));

    sext_ln79_fu_1045_p0 <= grp_fu_669_p4;
        sext_ln79_fu_1045_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln79_fu_1045_p0),32));

    sext_ln82_fu_1108_p0 <= grp_fu_669_p4;
        sext_ln82_fu_1108_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln82_fu_1108_p0),32));

        sext_ln85_fu_837_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_fu_669_p4),32));

        sext_ln88_fu_1004_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_fu_669_p4),32));

        sext_ln91_fu_1117_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(s_image_linesize_q0),64));

    shl_ln1_fu_1219_p3 <= (trunc_ln61_1_fu_1216_p1 & ap_const_lv2_0);
    shl_ln2_fu_1575_p3 <= (trunc_ln52_1_fu_1572_p1 & ap_const_lv2_0);
    shl_ln3_fu_1279_p3 <= (trunc_ln62_1_fu_1276_p1 & ap_const_lv2_0);
    shl_ln4_fu_1053_p3 <= (trunc_ln79_1_fu_1050_p1 & ap_const_lv1_0);
    shl_ln5_fu_841_p3 <= (grp_fu_669_p4 & ap_const_lv4_0);
    shl_ln6_fu_1619_p3 <= (trunc_ln53_1_reg_2540 & ap_const_lv2_0);
    shl_ln7_fu_1323_p3 <= (trunc_ln63_1_reg_2444 & ap_const_lv2_0);
    shl_ln85_1_fu_859_p3 <= (trunc_ln85_1_fu_856_p1 & ap_const_lv1_0);
    shl_ln8_fu_1008_p3 <= (grp_fu_669_p4 & ap_const_lv4_0);
    shl_ln_fu_1525_p3 <= (trunc_ln51_1_fu_1522_p1 & ap_const_lv2_0);
    sub_ln29_1_fu_1791_p2 <= std_logic_vector(unsigned(ap_const_lv30_0) - unsigned(zext_ln29_fu_1787_p1));
    sub_ln32_fu_1865_p2 <= std_logic_vector(signed(ap_const_lv4_8) - signed(zext_ln30_reg_2627));
    sub_ln49_1_fu_1145_p2 <= std_logic_vector(unsigned(ap_const_lv31_0) - unsigned(zext_ln49_fu_1141_p1));
    sub_ln77_1_fu_791_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(zext_ln77_fu_787_p1));
    tmp_10_fu_2014_p3 <= p_data_q0(2 downto 2);
    tmp_11_fu_2042_p3 <= p_data_q0(3 downto 3);
    tmp_12_fu_2070_p3 <= p_data_q0(4 downto 4);
    tmp_13_fu_2098_p3 <= p_data_q0(5 downto 5);
    tmp_14_fu_2126_p3 <= p_data_q0(6 downto 6);
    tmp_1_fu_1777_p4 <= grp_fu_663_p2(31 downto 3);
    tmp_2_fu_1797_p4 <= s_width_q0(31 downto 3);
    tmp_3_fu_1131_p4 <= grp_fu_663_p2(31 downto 2);
    tmp_4_fu_1151_p4 <= s_width_q0(31 downto 2);
    tmp_9_fu_1986_p3 <= p_data_q0(1 downto 1);
    trunc_ln28_1_fu_1827_p1 <= pd_0_rec_reg_569(4 - 1 downto 0);
    trunc_ln2_fu_2158_p4 <= p_data_q0(31 downto 7);
    trunc_ln31_fu_1852_p1 <= s_width_q0(3 - 1 downto 0);
    trunc_ln32_1_fu_1880_p1 <= ashr_ln32_fu_1874_p2(1 - 1 downto 0);
    trunc_ln32_2_fu_1862_p1 <= i_reg_2598(1 - 1 downto 0);
    trunc_ln32_fu_1823_p1 <= i_fu_1811_p3(4 - 1 downto 0);
    trunc_ln33_fu_1918_p1 <= i_0_in_reg_640(4 - 1 downto 0);
    trunc_ln34_1_fu_1963_p3 <= (trunc_ln34_2_reg_2662 & ap_const_lv3_0);
    trunc_ln34_2_fu_1950_p1 <= i_3_fu_1922_p2(1 - 1 downto 0);
    trunc_ln34_fu_1954_p1 <= p_data_q0(1 - 1 downto 0);
    trunc_ln48_1_fu_1186_p1 <= pd3_0_rec_reg_546(4 - 1 downto 0);
    trunc_ln48_2_fu_1552_p1 <= pd3_0_rec_reg_546(4 - 1 downto 0);
    trunc_ln48_3_fu_1246_p1 <= pd3_0_rec_reg_546(4 - 1 downto 0);
    trunc_ln48_4_fu_1605_p1 <= pd3_0_rec_reg_546(4 - 1 downto 0);
    trunc_ln48_5_fu_1309_p1 <= pd3_0_rec_reg_546(4 - 1 downto 0);
    trunc_ln48_6_fu_1663_p1 <= pd3_0_rec_reg_546(4 - 1 downto 0);
    trunc_ln48_7_fu_1366_p1 <= pd3_0_rec_reg_546(4 - 1 downto 0);
    trunc_ln48_fu_1502_p1 <= pd3_0_rec_reg_546(4 - 1 downto 0);
    trunc_ln49_fu_1127_p1 <= s_width_q0(2 - 1 downto 0);
    trunc_ln51_1_fu_1522_p1 <= i_1_reg_2381(2 - 1 downto 0);
    trunc_ln51_fu_1499_p1 <= i_1_reg_2381(4 - 1 downto 0);
    trunc_ln52_1_fu_1572_p1 <= i_1_reg_2381(2 - 1 downto 0);
    trunc_ln52_fu_1549_p1 <= i_1_reg_2381(4 - 1 downto 0);
    trunc_ln53_1_fu_1602_p1 <= i_1_reg_2381(2 - 1 downto 0);
    trunc_ln53_fu_1599_p1 <= i_1_reg_2381(4 - 1 downto 0);
    trunc_ln54_fu_1641_p1 <= i1_0_in_reg_619(4 - 1 downto 0);
    trunc_ln55_1_fu_1691_p3 <= (trunc_ln55_2_reg_2576 & ap_const_lv2_0);
    trunc_ln55_2_fu_1678_p1 <= i_6_fu_1645_p2(2 - 1 downto 0);
    trunc_ln55_fu_1682_p1 <= p_data_q0(2 - 1 downto 0);
    trunc_ln61_1_fu_1216_p1 <= i_1_reg_2381(2 - 1 downto 0);
    trunc_ln61_fu_1183_p1 <= i_1_reg_2381(4 - 1 downto 0);
    trunc_ln62_1_fu_1276_p1 <= i_1_reg_2381(2 - 1 downto 0);
    trunc_ln62_fu_1243_p1 <= i_1_reg_2381(4 - 1 downto 0);
    trunc_ln63_1_fu_1306_p1 <= i_1_reg_2381(2 - 1 downto 0);
    trunc_ln63_fu_1303_p1 <= i_1_reg_2381(4 - 1 downto 0);
    trunc_ln64_fu_1344_p1 <= i1_1_in_reg_610(4 - 1 downto 0);
    trunc_ln65_1_fu_1404_p3 <= (trunc_ln65_2_reg_2485 & ap_const_lv2_0);
    trunc_ln65_2_fu_1381_p1 <= i_7_fu_1348_p2(2 - 1 downto 0);
    trunc_ln65_fu_1385_p1 <= p_data_q0(2 - 1 downto 0);
    trunc_ln76_1_fu_822_p1 <= pd6_0_rec_reg_534(4 - 1 downto 0);
    trunc_ln76_2_fu_940_p1 <= pd6_0_rec_reg_534(4 - 1 downto 0);
    trunc_ln76_3_fu_899_p1 <= pd6_0_rec_reg_534(4 - 1 downto 0);
    trunc_ln76_fu_1030_p1 <= pd6_0_rec_reg_534(4 - 1 downto 0);
    trunc_ln77_fu_773_p1 <= s_width_q0(1 - 1 downto 0);
    trunc_ln79_1_fu_1050_p1 <= i_2_reg_2274(3 - 1 downto 0);
    trunc_ln79_fu_1027_p1 <= i_2_reg_2274(4 - 1 downto 0);
    trunc_ln80_fu_918_p1 <= i4_0_in_reg_601(4 - 1 downto 0);
    trunc_ln81_1_fu_1080_p3 <= (trunc_ln81_2_reg_2341 & ap_const_lv1_0);
    trunc_ln81_2_fu_955_p1 <= i_4_fu_922_p2(3 - 1 downto 0);
    trunc_ln81_fu_1071_p1 <= p_data_q0(4 - 1 downto 0);
    trunc_ln85_1_fu_856_p1 <= i_2_reg_2274(3 - 1 downto 0);
    trunc_ln85_fu_819_p1 <= i_2_reg_2274(4 - 1 downto 0);
    trunc_ln86_fu_877_p1 <= i4_1_in_reg_592(4 - 1 downto 0);
    trunc_ln87_1_fu_976_p3 <= (trunc_ln87_2_reg_2317 & ap_const_lv1_0);
    trunc_ln87_2_fu_914_p1 <= i_5_fu_881_p2(3 - 1 downto 0);
    trunc_ln87_fu_959_p1 <= p_data_q0(4 - 1 downto 0);
    zext_ln29_1_fu_1807_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_2_fu_1797_p4),30));
    zext_ln29_fu_1787_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_1_fu_1777_p4),30));
    zext_ln30_fu_1842_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(k_0_reg_628),4));
    zext_ln32_1_fu_1870_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln32_fu_1865_p2),32));
    zext_ln32_2_fu_1884_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln32_1_fu_1880_p1),32));
    zext_ln32_3_fu_1907_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln32_2_fu_1902_p2),64));
    zext_ln32_fu_1837_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln32_fu_1831_p2),64));
    zext_ln34_1_fu_1958_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln34_fu_1954_p1),32));
    zext_ln34_2_fu_1981_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln34_1_fu_1976_p2),64));
    zext_ln34_fu_1945_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln34_fu_1940_p2),64));
    zext_ln35_1_fu_2009_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln35_fu_2004_p2),64));
    zext_ln35_fu_1994_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_9_fu_1986_p3),32));
    zext_ln36_1_fu_2037_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln36_fu_2032_p2),64));
    zext_ln36_fu_2022_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_10_fu_2014_p3),32));
    zext_ln37_1_fu_2065_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln37_fu_2060_p2),64));
    zext_ln37_fu_2050_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_11_fu_2042_p3),32));
    zext_ln38_1_fu_2093_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln38_fu_2088_p2),64));
    zext_ln38_fu_2078_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_12_fu_2070_p3),32));
    zext_ln39_1_fu_2121_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln39_fu_2116_p2),64));
    zext_ln39_fu_2106_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_13_fu_2098_p3),32));
    zext_ln40_1_fu_2149_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln40_fu_2144_p2),64));
    zext_ln40_fu_2134_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_14_fu_2126_p3),32));
    zext_ln41_fu_2173_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln41_reg_2678),64));
    zext_ln49_1_fu_1161_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_4_fu_1151_p4),31));
    zext_ln49_fu_1141_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_3_fu_1131_p4),31));
    zext_ln51_1_fu_1517_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_679_p4),32));
    zext_ln51_2_fu_1544_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln51_1_fu_1539_p2),64));
    zext_ln51_fu_1512_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln51_fu_1506_p2),64));
    zext_ln52_1_fu_1567_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_696_p4),32));
    zext_ln52_2_fu_1594_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln52_1_fu_1589_p2),64));
    zext_ln52_fu_1562_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln52_fu_1556_p2),64));
    zext_ln53_1_fu_1637_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln53_1_reg_2550),64));
    zext_ln53_fu_1614_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln53_fu_1609_p2),64));
    zext_ln55_1_fu_1686_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln55_fu_1682_p1),32));
    zext_ln55_2_fu_1709_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln55_1_fu_1704_p2),64));
    zext_ln55_fu_1673_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln55_fu_1667_p2),64));
    zext_ln56_1_fu_1729_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln56_fu_1724_p2),64));
    zext_ln56_fu_1714_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_679_p4),32));
    zext_ln57_1_fu_1749_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln57_fu_1744_p2),64));
    zext_ln57_fu_1734_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_696_p4),32));
    zext_ln58_fu_1763_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln58_reg_2588),64));
    zext_ln61_2_fu_1211_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mul_ln61_fu_1205_p2),32));
    zext_ln61_3_fu_1238_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln61_1_fu_1233_p2),64));
    zext_ln61_fu_1196_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln61_fu_1190_p2),64));
    zext_ln62_2_fu_1271_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mul_ln62_fu_1265_p2),32));
    zext_ln62_3_fu_1298_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln62_1_fu_1293_p2),64));
    zext_ln62_fu_1256_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln62_fu_1250_p2),64));
    zext_ln63_1_fu_1340_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln63_1_reg_2454),64));
    zext_ln63_fu_1318_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln63_fu_1313_p2),64));
    zext_ln65_2_fu_1399_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mul_ln65_fu_1393_p2),32));
    zext_ln65_3_fu_1422_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln65_1_fu_1417_p2),64));
    zext_ln65_fu_1376_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln65_fu_1370_p2),64));
    zext_ln66_1_fu_1437_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mul_ln66_fu_1431_p2),32));
    zext_ln66_2_fu_1452_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln66_fu_1447_p2),64));
    zext_ln67_1_fu_1467_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mul_ln67_fu_1461_p2),32));
    zext_ln67_2_fu_1482_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln67_fu_1477_p2),64));
    zext_ln68_fu_1495_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln68_reg_2497),64));
    zext_ln77_1_fu_807_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln77_2_fu_797_p4),32));
    zext_ln77_fu_787_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln77_1_fu_777_p4),32));
    zext_ln79_1_fu_1066_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln79_1_fu_1061_p2),64));
    zext_ln79_fu_1040_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln79_fu_1034_p2),64));
    zext_ln81_1_fu_1075_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln81_fu_1071_p1),32));
    zext_ln81_2_fu_1098_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln81_1_fu_1093_p2),64));
    zext_ln81_fu_950_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln81_fu_944_p2),64));
    zext_ln82_fu_1113_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln82_reg_2361),64));
    zext_ln85_1_fu_872_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln85_1_fu_867_p2),64));
    zext_ln85_fu_832_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln85_fu_826_p2),64));
    zext_ln87_1_fu_971_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln87_1_fu_963_p3),32));
    zext_ln87_2_fu_994_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln87_1_fu_989_p2),64));
    zext_ln87_fu_909_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln87_fu_903_p2),64));
    zext_ln88_fu_1023_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln88_reg_2346),64));
end behav;
