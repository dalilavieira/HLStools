// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _imsttfb_check_var_HH_
#define _imsttfb_check_var_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "imsttfb_check_var_sdiv_32ns_32ns_32_36_seq_1.h"
#include "imsttfb_check_var_sdiv_32ns_32s_32_36_seq_1.h"

namespace ap_rtl {

struct imsttfb_check_var : public sc_module {
    // Port declarations 59
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<32> > var_bits_per_pixel;
    sc_in< sc_lv<32> > var_xres_virtual;
    sc_in< sc_lv<32> > var_xres;
    sc_in< sc_lv<32> > var_yres_virtual_i;
    sc_out< sc_lv<32> > var_yres_virtual_o;
    sc_out< sc_logic > var_yres_virtual_o_ap_vld;
    sc_in< sc_lv<32> > var_yres;
    sc_out< sc_lv<32> > var_vmode;
    sc_out< sc_logic > var_vmode_ap_vld;
    sc_out< sc_lv<32> > var_height;
    sc_out< sc_logic > var_height_ap_vld;
    sc_out< sc_lv<32> > var_width;
    sc_out< sc_logic > var_width_ap_vld;
    sc_out< sc_lv<32> > var_left_margin;
    sc_out< sc_logic > var_left_margin_ap_vld;
    sc_out< sc_lv<32> > var_right_margin;
    sc_out< sc_logic > var_right_margin_ap_vld;
    sc_out< sc_lv<32> > var_upper_margin;
    sc_out< sc_logic > var_upper_margin_ap_vld;
    sc_out< sc_lv<32> > var_lower_margin;
    sc_out< sc_logic > var_lower_margin_ap_vld;
    sc_out< sc_lv<32> > var_hsync_len;
    sc_out< sc_logic > var_hsync_len_ap_vld;
    sc_out< sc_lv<32> > var_vsync_len;
    sc_out< sc_logic > var_vsync_len_ap_vld;
    sc_out< sc_lv<32> > var_transp_offset;
    sc_out< sc_logic > var_transp_offset_ap_vld;
    sc_out< sc_lv<32> > var_transp_length;
    sc_out< sc_logic > var_transp_length_ap_vld;
    sc_out< sc_lv<32> > var_transp_msb_right;
    sc_out< sc_logic > var_transp_msb_right_ap_vld;
    sc_out< sc_lv<32> > var_blue_length;
    sc_out< sc_logic > var_blue_length_ap_vld;
    sc_out< sc_lv<32> > var_blue_msb_right;
    sc_out< sc_logic > var_blue_msb_right_ap_vld;
    sc_out< sc_lv<32> > var_blue_offset;
    sc_out< sc_logic > var_blue_offset_ap_vld;
    sc_out< sc_lv<32> > var_green_offset;
    sc_out< sc_logic > var_green_offset_ap_vld;
    sc_in< sc_lv<32> > var_green_length_i;
    sc_out< sc_lv<32> > var_green_length_o;
    sc_out< sc_logic > var_green_length_o_ap_vld;
    sc_out< sc_lv<32> > var_green_msb_right;
    sc_out< sc_logic > var_green_msb_right_ap_vld;
    sc_out< sc_lv<32> > var_red_offset;
    sc_out< sc_logic > var_red_offset_ap_vld;
    sc_out< sc_lv<32> > var_red_length;
    sc_out< sc_logic > var_red_length_ap_vld;
    sc_out< sc_lv<32> > var_red_msb_right;
    sc_out< sc_logic > var_red_msb_right_ap_vld;
    sc_in< sc_lv<32> > var_nonstd;
    sc_in< sc_lv<32> > info_fix_smem_len;
    sc_out< sc_lv<32> > ap_return;
    sc_signal< sc_logic > ap_var_for_const0;


    // Module declarations
    imsttfb_check_var(sc_module_name name);
    SC_HAS_PROCESS(imsttfb_check_var);

    ~imsttfb_check_var();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    imsttfb_check_var_sdiv_32ns_32ns_32_36_seq_1<1,36,32,32,32>* imsttfb_check_var_sdiv_32ns_32ns_32_36_seq_1_U1;
    imsttfb_check_var_sdiv_32ns_32s_32_36_seq_1<1,36,32,32,32>* imsttfb_check_var_sdiv_32ns_32s_32_36_seq_1_U2;
    sc_signal< sc_lv<73> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<32> > var_bits_per_pixel_r_read_fu_90_p2;
    sc_signal< sc_lv<1> > empty_9_fu_358_p2;
    sc_signal< sc_lv<1> > empty_9_reg_468;
    sc_signal< sc_lv<1> > icmp_ln34_fu_364_p2;
    sc_signal< sc_lv<1> > icmp_ln34_reg_483;
    sc_signal< sc_lv<32> > var_yres_virtual_rea_reg_487;
    sc_signal< sc_lv<1> > icmp_ln34_1_fu_370_p2;
    sc_signal< sc_lv<1> > icmp_ln34_1_reg_500;
    sc_signal< sc_lv<1> > icmp_ln34_2_fu_376_p2;
    sc_signal< sc_lv<1> > icmp_ln34_2_reg_504;
    sc_signal< sc_lv<32> > zext_ln41_fu_392_p1;
    sc_signal< sc_lv<32> > zext_ln41_reg_508;
    sc_signal< sc_lv<32> > mul_ln41_fu_396_p2;
    sc_signal< sc_lv<32> > mul_ln41_reg_513;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<1> > icmp_ln41_fu_406_p2;
    sc_signal< sc_lv<1> > icmp_ln41_reg_524;
    sc_signal< sc_lv<32> > mul_ln41_2_fu_412_p2;
    sc_signal< sc_lv<32> > mul_ln41_2_reg_528;
    sc_signal< sc_lv<1> > icmp_ln41_1_fu_420_p2;
    sc_signal< sc_lv<1> > icmp_ln41_1_reg_533;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<1> > icmp_ln90_fu_431_p2;
    sc_signal< sc_lv<1> > icmp_ln90_reg_540;
    sc_signal< sc_lv<32> > grp_fu_440_p2;
    sc_signal< sc_logic > ap_CS_fsm_state38;
    sc_signal< sc_lv<1> > icmp_ln57_fu_425_p2;
    sc_signal< sc_lv<32> > select_ln93_fu_455_p3;
    sc_signal< sc_logic > ap_CS_fsm_state73;
    sc_signal< sc_lv<1> > empty_4_fu_328_p2;
    sc_signal< sc_lv<1> > empty_fu_322_p2;
    sc_signal< sc_lv<1> > empty_6_fu_340_p2;
    sc_signal< sc_lv<1> > empty_5_fu_334_p2;
    sc_signal< sc_lv<1> > empty_8_fu_352_p2;
    sc_signal< sc_lv<1> > empty_7_fu_346_p2;
    sc_signal< sc_lv<32> > icmp_ln34_fu_364_p0;
    sc_signal< sc_lv<32> > icmp_ln34_fu_364_p1;
    sc_signal< sc_lv<32> > icmp_ln34_1_fu_370_p0;
    sc_signal< sc_lv<32> > icmp_ln34_1_fu_370_p1;
    sc_signal< sc_lv<29> > trunc_ln_fu_382_p4;
    sc_signal< sc_lv<32> > mul_ln41_fu_396_p0;
    sc_signal< sc_lv<29> > mul_ln41_fu_396_p1;
    sc_signal< sc_lv<32> > mul_ln41_1_fu_402_p1;
    sc_signal< sc_lv<32> > mul_ln41_1_fu_402_p2;
    sc_signal< sc_lv<29> > mul_ln41_2_fu_412_p1;
    sc_signal< sc_lv<32> > mul_ln41_3_fu_416_p1;
    sc_signal< sc_lv<32> > mul_ln41_3_fu_416_p2;
    sc_signal< sc_lv<32> > icmp_ln90_fu_431_p0;
    sc_signal< sc_lv<32> > grp_fu_440_p0;
    sc_signal< sc_lv<32> > grp_fu_445_p2;
    sc_signal< sc_lv<1> > icmp_ln93_fu_450_p2;
    sc_signal< sc_logic > grp_fu_440_ap_start;
    sc_signal< sc_logic > grp_fu_440_ap_done;
    sc_signal< sc_logic > grp_fu_445_ap_start;
    sc_signal< sc_logic > grp_fu_445_ap_done;
    sc_signal< sc_lv<73> > ap_NS_fsm;
    sc_signal< sc_lv<32> > mul_ln41_fu_396_p10;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<73> ap_ST_fsm_state1;
    static const sc_lv<73> ap_ST_fsm_state2;
    static const sc_lv<73> ap_ST_fsm_state3;
    static const sc_lv<73> ap_ST_fsm_state4;
    static const sc_lv<73> ap_ST_fsm_state5;
    static const sc_lv<73> ap_ST_fsm_state6;
    static const sc_lv<73> ap_ST_fsm_state7;
    static const sc_lv<73> ap_ST_fsm_state8;
    static const sc_lv<73> ap_ST_fsm_state9;
    static const sc_lv<73> ap_ST_fsm_state10;
    static const sc_lv<73> ap_ST_fsm_state11;
    static const sc_lv<73> ap_ST_fsm_state12;
    static const sc_lv<73> ap_ST_fsm_state13;
    static const sc_lv<73> ap_ST_fsm_state14;
    static const sc_lv<73> ap_ST_fsm_state15;
    static const sc_lv<73> ap_ST_fsm_state16;
    static const sc_lv<73> ap_ST_fsm_state17;
    static const sc_lv<73> ap_ST_fsm_state18;
    static const sc_lv<73> ap_ST_fsm_state19;
    static const sc_lv<73> ap_ST_fsm_state20;
    static const sc_lv<73> ap_ST_fsm_state21;
    static const sc_lv<73> ap_ST_fsm_state22;
    static const sc_lv<73> ap_ST_fsm_state23;
    static const sc_lv<73> ap_ST_fsm_state24;
    static const sc_lv<73> ap_ST_fsm_state25;
    static const sc_lv<73> ap_ST_fsm_state26;
    static const sc_lv<73> ap_ST_fsm_state27;
    static const sc_lv<73> ap_ST_fsm_state28;
    static const sc_lv<73> ap_ST_fsm_state29;
    static const sc_lv<73> ap_ST_fsm_state30;
    static const sc_lv<73> ap_ST_fsm_state31;
    static const sc_lv<73> ap_ST_fsm_state32;
    static const sc_lv<73> ap_ST_fsm_state33;
    static const sc_lv<73> ap_ST_fsm_state34;
    static const sc_lv<73> ap_ST_fsm_state35;
    static const sc_lv<73> ap_ST_fsm_state36;
    static const sc_lv<73> ap_ST_fsm_state37;
    static const sc_lv<73> ap_ST_fsm_state38;
    static const sc_lv<73> ap_ST_fsm_state39;
    static const sc_lv<73> ap_ST_fsm_state40;
    static const sc_lv<73> ap_ST_fsm_state41;
    static const sc_lv<73> ap_ST_fsm_state42;
    static const sc_lv<73> ap_ST_fsm_state43;
    static const sc_lv<73> ap_ST_fsm_state44;
    static const sc_lv<73> ap_ST_fsm_state45;
    static const sc_lv<73> ap_ST_fsm_state46;
    static const sc_lv<73> ap_ST_fsm_state47;
    static const sc_lv<73> ap_ST_fsm_state48;
    static const sc_lv<73> ap_ST_fsm_state49;
    static const sc_lv<73> ap_ST_fsm_state50;
    static const sc_lv<73> ap_ST_fsm_state51;
    static const sc_lv<73> ap_ST_fsm_state52;
    static const sc_lv<73> ap_ST_fsm_state53;
    static const sc_lv<73> ap_ST_fsm_state54;
    static const sc_lv<73> ap_ST_fsm_state55;
    static const sc_lv<73> ap_ST_fsm_state56;
    static const sc_lv<73> ap_ST_fsm_state57;
    static const sc_lv<73> ap_ST_fsm_state58;
    static const sc_lv<73> ap_ST_fsm_state59;
    static const sc_lv<73> ap_ST_fsm_state60;
    static const sc_lv<73> ap_ST_fsm_state61;
    static const sc_lv<73> ap_ST_fsm_state62;
    static const sc_lv<73> ap_ST_fsm_state63;
    static const sc_lv<73> ap_ST_fsm_state64;
    static const sc_lv<73> ap_ST_fsm_state65;
    static const sc_lv<73> ap_ST_fsm_state66;
    static const sc_lv<73> ap_ST_fsm_state67;
    static const sc_lv<73> ap_ST_fsm_state68;
    static const sc_lv<73> ap_ST_fsm_state69;
    static const sc_lv<73> ap_ST_fsm_state70;
    static const sc_lv<73> ap_ST_fsm_state71;
    static const sc_lv<73> ap_ST_fsm_state72;
    static const sc_lv<73> ap_ST_fsm_state73;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_25;
    static const sc_lv<32> ap_const_lv32_10;
    static const sc_lv<32> ap_const_lv32_20;
    static const sc_lv<32> ap_const_lv32_18;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_48;
    static const sc_lv<32> ap_const_lv32_FFFFFFFF;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_1F;
    static const sc_lv<32> ap_const_lv32_6;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state38();
    void thread_ap_CS_fsm_state73();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_return();
    void thread_empty_4_fu_328_p2();
    void thread_empty_5_fu_334_p2();
    void thread_empty_6_fu_340_p2();
    void thread_empty_7_fu_346_p2();
    void thread_empty_8_fu_352_p2();
    void thread_empty_9_fu_358_p2();
    void thread_empty_fu_322_p2();
    void thread_grp_fu_440_ap_start();
    void thread_grp_fu_440_p0();
    void thread_grp_fu_445_ap_start();
    void thread_icmp_ln34_1_fu_370_p0();
    void thread_icmp_ln34_1_fu_370_p1();
    void thread_icmp_ln34_1_fu_370_p2();
    void thread_icmp_ln34_2_fu_376_p2();
    void thread_icmp_ln34_fu_364_p0();
    void thread_icmp_ln34_fu_364_p1();
    void thread_icmp_ln34_fu_364_p2();
    void thread_icmp_ln41_1_fu_420_p2();
    void thread_icmp_ln41_fu_406_p2();
    void thread_icmp_ln57_fu_425_p2();
    void thread_icmp_ln90_fu_431_p0();
    void thread_icmp_ln90_fu_431_p2();
    void thread_icmp_ln93_fu_450_p2();
    void thread_mul_ln41_1_fu_402_p1();
    void thread_mul_ln41_1_fu_402_p2();
    void thread_mul_ln41_2_fu_412_p1();
    void thread_mul_ln41_2_fu_412_p2();
    void thread_mul_ln41_3_fu_416_p1();
    void thread_mul_ln41_3_fu_416_p2();
    void thread_mul_ln41_fu_396_p0();
    void thread_mul_ln41_fu_396_p1();
    void thread_mul_ln41_fu_396_p10();
    void thread_mul_ln41_fu_396_p2();
    void thread_select_ln93_fu_455_p3();
    void thread_trunc_ln_fu_382_p4();
    void thread_var_bits_per_pixel_r_read_fu_90_p2();
    void thread_var_blue_length();
    void thread_var_blue_length_ap_vld();
    void thread_var_blue_msb_right();
    void thread_var_blue_msb_right_ap_vld();
    void thread_var_blue_offset();
    void thread_var_blue_offset_ap_vld();
    void thread_var_green_length_o();
    void thread_var_green_length_o_ap_vld();
    void thread_var_green_msb_right();
    void thread_var_green_msb_right_ap_vld();
    void thread_var_green_offset();
    void thread_var_green_offset_ap_vld();
    void thread_var_height();
    void thread_var_height_ap_vld();
    void thread_var_hsync_len();
    void thread_var_hsync_len_ap_vld();
    void thread_var_left_margin();
    void thread_var_left_margin_ap_vld();
    void thread_var_lower_margin();
    void thread_var_lower_margin_ap_vld();
    void thread_var_red_length();
    void thread_var_red_length_ap_vld();
    void thread_var_red_msb_right();
    void thread_var_red_msb_right_ap_vld();
    void thread_var_red_offset();
    void thread_var_red_offset_ap_vld();
    void thread_var_right_margin();
    void thread_var_right_margin_ap_vld();
    void thread_var_transp_length();
    void thread_var_transp_length_ap_vld();
    void thread_var_transp_msb_right();
    void thread_var_transp_msb_right_ap_vld();
    void thread_var_transp_offset();
    void thread_var_transp_offset_ap_vld();
    void thread_var_upper_margin();
    void thread_var_upper_margin_ap_vld();
    void thread_var_vmode();
    void thread_var_vmode_ap_vld();
    void thread_var_vsync_len();
    void thread_var_vsync_len_ap_vld();
    void thread_var_width();
    void thread_var_width_ap_vld();
    void thread_var_yres_virtual_o();
    void thread_var_yres_virtual_o_ap_vld();
    void thread_zext_ln41_fu_392_p1();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
