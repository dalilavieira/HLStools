// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="fsquare_inner,hls_ip_2019_1,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7k160t-fbg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.365000,HLS_SYN_LAT=12,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=165,HLS_SYN_FF=1693,HLS_SYN_LUT=2787,HLS_VERSION=2019_1}" *)

module fsquare_inner (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        output_r_address0,
        output_r_ce0,
        output_r_we0,
        output_r_d0,
        output_r_address1,
        output_r_ce1,
        output_r_we1,
        output_r_d1,
        in_r_address0,
        in_r_ce0,
        in_r_q0,
        in_r_address1,
        in_r_ce1,
        in_r_q1
);

parameter    ap_ST_fsm_state1 = 13'd1;
parameter    ap_ST_fsm_state2 = 13'd2;
parameter    ap_ST_fsm_state3 = 13'd4;
parameter    ap_ST_fsm_state4 = 13'd8;
parameter    ap_ST_fsm_state5 = 13'd16;
parameter    ap_ST_fsm_state6 = 13'd32;
parameter    ap_ST_fsm_state7 = 13'd64;
parameter    ap_ST_fsm_state8 = 13'd128;
parameter    ap_ST_fsm_state9 = 13'd256;
parameter    ap_ST_fsm_state10 = 13'd512;
parameter    ap_ST_fsm_state11 = 13'd1024;
parameter    ap_ST_fsm_state12 = 13'd2048;
parameter    ap_ST_fsm_state13 = 13'd4096;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [9:0] output_r_address0;
output   output_r_ce0;
output   output_r_we0;
output  [31:0] output_r_d0;
output  [9:0] output_r_address1;
output   output_r_ce1;
output   output_r_we1;
output  [31:0] output_r_d1;
output  [9:0] in_r_address0;
output   in_r_ce0;
input  [31:0] in_r_q0;
output  [9:0] in_r_address1;
output   in_r_ce1;
input  [31:0] in_r_q1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[9:0] output_r_address0;
reg output_r_ce0;
reg output_r_we0;
reg[31:0] output_r_d0;
reg[9:0] output_r_address1;
reg output_r_ce1;
reg output_r_we1;
reg[31:0] output_r_d1;
reg[9:0] in_r_address0;
reg in_r_ce0;
reg[9:0] in_r_address1;
reg in_r_ce1;

(* fsm_encoding = "none" *) reg   [12:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg  signed [31:0] in_load_reg_981;
wire    ap_CS_fsm_state2;
reg  signed [31:0] in_load_1_reg_996;
wire   [31:0] mul_ln18_fu_337_p2;
reg   [31:0] mul_ln18_reg_1021;
wire    ap_CS_fsm_state3;
wire   [31:0] mul_ln19_fu_341_p2;
reg   [31:0] mul_ln19_reg_1026;
reg  signed [31:0] in_load_2_reg_1031;
reg  signed [31:0] in_load_3_reg_1046;
wire   [31:0] add_ln20_fu_359_p2;
reg   [31:0] add_ln20_reg_1071;
wire    ap_CS_fsm_state4;
wire   [31:0] add_ln22_fu_373_p2;
reg   [31:0] add_ln22_reg_1076;
reg  signed [31:0] in_load_4_reg_1081;
reg  signed [31:0] in_load_5_reg_1096;
wire   [31:0] mul_ln24_fu_391_p2;
reg   [31:0] mul_ln24_reg_1121;
wire    ap_CS_fsm_state5;
wire   [31:0] mul_ln24_1_fu_395_p2;
reg   [31:0] mul_ln24_1_reg_1126;
wire   [31:0] mul_ln24_2_fu_399_p2;
reg   [31:0] mul_ln24_2_reg_1131;
wire   [31:0] mul_ln27_fu_403_p2;
reg   [31:0] mul_ln27_reg_1136;
wire   [31:0] mul_ln27_1_fu_407_p2;
reg   [31:0] mul_ln27_1_reg_1141;
wire   [31:0] mul_ln27_2_fu_411_p2;
reg   [31:0] mul_ln27_2_reg_1146;
reg  signed [31:0] in_load_6_reg_1151;
reg  signed [31:0] in_load_7_reg_1166;
wire   [31:0] mul_ln30_fu_453_p2;
reg   [31:0] mul_ln30_reg_1191;
wire    ap_CS_fsm_state6;
wire   [31:0] mul_ln30_1_fu_457_p2;
reg   [31:0] mul_ln30_1_reg_1196;
wire   [31:0] mul_ln30_2_fu_461_p2;
reg   [31:0] mul_ln30_2_reg_1201;
wire   [29:0] trunc_ln30_fu_469_p1;
reg   [29:0] trunc_ln30_reg_1206;
wire   [30:0] trunc_ln34_fu_501_p1;
reg   [30:0] trunc_ln34_reg_1211;
wire   [30:0] trunc_ln34_1_fu_505_p1;
reg   [30:0] trunc_ln34_1_reg_1216;
reg  signed [31:0] in_load_8_reg_1221;
reg  signed [31:0] in_load_9_reg_1236;
wire   [31:0] mul_ln38_fu_557_p2;
reg   [31:0] mul_ln38_reg_1251;
wire    ap_CS_fsm_state7;
wire   [29:0] trunc_ln38_fu_583_p1;
reg   [29:0] trunc_ln38_reg_1256;
wire   [30:0] trunc_ln38_1_fu_593_p1;
reg   [30:0] trunc_ln38_1_reg_1261;
wire   [31:0] mul_ln43_2_fu_605_p2;
reg   [31:0] mul_ln43_2_reg_1266;
wire   [31:0] mul_ln43_3_fu_609_p2;
reg   [31:0] mul_ln43_3_reg_1271;
wire   [31:0] mul_ln43_4_fu_613_p2;
reg   [31:0] mul_ln43_4_reg_1276;
wire   [30:0] trunc_ln43_fu_623_p1;
reg   [30:0] trunc_ln43_reg_1281;
wire   [31:0] mul_ln48_fu_627_p2;
reg   [31:0] mul_ln48_reg_1286;
wire   [31:0] mul_ln48_1_fu_631_p2;
reg   [31:0] mul_ln48_1_reg_1291;
wire   [31:0] mul_ln48_2_fu_635_p2;
reg   [31:0] mul_ln48_2_reg_1296;
wire   [29:0] trunc_ln48_fu_653_p1;
reg   [29:0] trunc_ln48_reg_1301;
wire   [30:0] trunc_ln53_1_fu_671_p1;
reg   [30:0] trunc_ln53_1_reg_1306;
wire   [31:0] add_ln57_fu_683_p2;
reg   [31:0] add_ln57_reg_1311;
wire   [30:0] add_ln48_3_fu_762_p2;
reg   [30:0] add_ln48_3_reg_1316;
wire    ap_CS_fsm_state8;
wire   [30:0] trunc_ln53_fu_782_p1;
reg   [30:0] trunc_ln53_reg_1321;
wire   [31:0] add_ln57_1_fu_795_p2;
reg   [31:0] add_ln57_1_reg_1326;
wire   [31:0] mul_ln61_fu_801_p2;
reg   [31:0] mul_ln61_reg_1331;
wire   [31:0] mul_ln61_1_fu_805_p2;
reg   [31:0] mul_ln61_1_reg_1336;
wire   [31:0] mul_ln61_2_fu_809_p2;
reg   [31:0] mul_ln61_2_reg_1341;
wire   [29:0] trunc_ln64_fu_817_p1;
reg   [29:0] trunc_ln64_reg_1346;
wire   [31:0] add_ln57_2_fu_851_p2;
reg   [31:0] add_ln57_2_reg_1351;
wire    ap_CS_fsm_state9;
wire   [31:0] add_ln61_1_fu_861_p2;
reg   [31:0] add_ln61_1_reg_1356;
wire   [30:0] trunc_ln64_1_fu_886_p1;
reg   [30:0] trunc_ln64_1_reg_1361;
wire    ap_CS_fsm_state10;
wire   [31:0] add_ln67_fu_898_p2;
reg   [31:0] add_ln67_reg_1366;
wire   [31:0] add_ln69_fu_945_p2;
reg   [31:0] add_ln69_reg_1371;
wire    ap_CS_fsm_state11;
wire   [31:0] mul_ln71_fu_951_p2;
reg   [31:0] mul_ln71_reg_1376;
wire   [31:0] mul_ln72_fu_961_p2;
reg   [31:0] mul_ln72_reg_1381;
wire    ap_CS_fsm_state12;
wire    ap_CS_fsm_state13;
wire   [31:0] shl_ln19_fu_345_p2;
wire   [31:0] shl_ln20_fu_379_p2;
wire   [31:0] shl_ln22_fu_385_p2;
wire   [31:0] add_ln24_1_fu_430_p2;
wire   [31:0] shl_ln27_fu_446_p2;
wire   [31:0] shl_ln5_fu_535_p3;
wire   [31:0] shl_ln6_fu_548_p3;
wire   [31:0] add_ln38_3_fu_709_p2;
wire   [31:0] shl_ln8_fu_733_p3;
wire   [31:0] shl_ln9_fu_821_p3;
wire   [31:0] shl_ln_fu_833_p3;
wire   [31:0] shl_ln61_fu_866_p2;
wire   [31:0] shl_ln1_fu_916_p3;
wire   [31:0] shl_ln67_fu_925_p2;
wire   [31:0] shl_ln71_fu_955_p2;
wire   [31:0] shl_ln72_fu_965_p2;
wire   [31:0] mul_ln20_fu_351_p2;
wire   [31:0] mul_ln20_1_fu_355_p2;
wire   [31:0] mul_ln22_fu_365_p2;
wire   [31:0] mul_ln22_1_fu_369_p2;
wire   [31:0] shl_ln24_1_fu_420_p2;
wire   [31:0] shl_ln24_fu_415_p2;
wire   [31:0] add_ln24_fu_425_p2;
wire   [31:0] add_ln27_fu_437_p2;
wire   [31:0] add_ln27_1_fu_441_p2;
wire   [31:0] mul_ln30_3_fu_465_p2;
wire   [31:0] mul_ln34_fu_473_p2;
wire   [31:0] mul_ln34_1_fu_477_p2;
wire   [31:0] mul_ln34_3_fu_485_p2;
wire   [31:0] mul_ln34_2_fu_481_p2;
wire   [31:0] add_ln34_fu_489_p2;
wire   [31:0] add_ln34_1_fu_495_p2;
wire   [31:0] add_ln30_fu_516_p2;
wire   [31:0] add_ln30_1_fu_520_p2;
wire   [30:0] trunc_ln30_1_fu_525_p1;
wire   [30:0] shl_ln30_1_fu_509_p3;
wire   [30:0] add_ln30_2_fu_529_p2;
wire   [30:0] add_ln34_2_fu_544_p2;
wire   [31:0] mul_ln38_3_fu_569_p2;
wire   [31:0] mul_ln38_4_fu_573_p2;
wire   [31:0] add_ln38_fu_577_p2;
wire   [31:0] mul_ln38_1_fu_561_p2;
wire   [31:0] mul_ln38_2_fu_565_p2;
wire   [31:0] add_ln38_1_fu_587_p2;
wire   [31:0] mul_ln43_fu_597_p2;
wire   [31:0] mul_ln43_1_fu_601_p2;
wire   [31:0] add_ln43_fu_617_p2;
wire   [31:0] mul_ln48_3_fu_639_p2;
wire   [31:0] mul_ln48_4_fu_643_p2;
wire   [31:0] add_ln48_fu_647_p2;
wire   [31:0] mul_ln53_3_fu_661_p2;
wire   [31:0] mul_ln53_2_fu_657_p2;
wire   [31:0] add_ln53_1_fu_665_p2;
wire   [31:0] mul_ln57_2_fu_675_p2;
wire   [31:0] mul_ln57_3_fu_679_p2;
wire   [30:0] shl_ln7_fu_689_p3;
wire   [30:0] add_ln38_2_fu_696_p2;
wire   [31:0] shl_ln38_1_fu_701_p3;
wire   [31:0] add_ln43_1_fu_715_p2;
wire   [31:0] add_ln43_2_fu_719_p2;
wire   [30:0] trunc_ln43_1_fu_724_p1;
wire   [30:0] add_ln43_3_fu_728_p2;
wire   [31:0] add_ln48_1_fu_749_p2;
wire   [31:0] add_ln48_2_fu_753_p2;
wire   [30:0] trunc_ln48_1_fu_758_p1;
wire   [30:0] shl_ln48_1_fu_742_p3;
wire   [31:0] mul_ln53_fu_768_p2;
wire   [31:0] mul_ln53_1_fu_772_p2;
wire   [31:0] add_ln53_fu_776_p2;
wire   [31:0] mul_ln57_1_fu_786_p2;
wire   [31:0] shl_ln57_fu_790_p2;
wire   [31:0] mul_ln64_2_fu_813_p2;
wire   [30:0] add_ln53_2_fu_829_p2;
wire   [31:0] mul_ln57_fu_842_p2;
wire   [31:0] shl_ln57_1_fu_846_p2;
wire   [31:0] add_ln61_fu_857_p2;
wire   [31:0] mul_ln64_fu_872_p2;
wire   [31:0] mul_ln64_1_fu_876_p2;
wire   [31:0] add_ln64_fu_880_p2;
wire   [31:0] mul_ln67_fu_890_p2;
wire   [31:0] mul_ln67_1_fu_894_p2;
wire   [30:0] shl_ln64_1_fu_904_p3;
wire   [30:0] add_ln64_1_fu_911_p2;
wire   [31:0] mul_ln69_1_fu_935_p2;
wire   [31:0] mul_ln69_fu_931_p2;
wire   [31:0] shl_ln69_fu_939_p2;
reg   [12:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 13'd1;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        add_ln20_reg_1071 <= add_ln20_fu_359_p2;
        add_ln22_reg_1076 <= add_ln22_fu_373_p2;
        in_load_4_reg_1081 <= in_r_q0;
        in_load_5_reg_1096 <= in_r_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        add_ln48_3_reg_1316 <= add_ln48_3_fu_762_p2;
        add_ln57_1_reg_1326 <= add_ln57_1_fu_795_p2;
        mul_ln61_1_reg_1336 <= mul_ln61_1_fu_805_p2;
        mul_ln61_2_reg_1341 <= mul_ln61_2_fu_809_p2;
        mul_ln61_reg_1331 <= mul_ln61_fu_801_p2;
        trunc_ln53_reg_1321 <= trunc_ln53_fu_782_p1;
        trunc_ln64_reg_1346 <= trunc_ln64_fu_817_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        add_ln57_2_reg_1351 <= add_ln57_2_fu_851_p2;
        add_ln61_1_reg_1356 <= add_ln61_1_fu_861_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        add_ln57_reg_1311 <= add_ln57_fu_683_p2;
        mul_ln38_reg_1251 <= mul_ln38_fu_557_p2;
        mul_ln43_2_reg_1266 <= mul_ln43_2_fu_605_p2;
        mul_ln43_3_reg_1271 <= mul_ln43_3_fu_609_p2;
        mul_ln43_4_reg_1276 <= mul_ln43_4_fu_613_p2;
        mul_ln48_1_reg_1291 <= mul_ln48_1_fu_631_p2;
        mul_ln48_2_reg_1296 <= mul_ln48_2_fu_635_p2;
        mul_ln48_reg_1286 <= mul_ln48_fu_627_p2;
        trunc_ln38_1_reg_1261 <= trunc_ln38_1_fu_593_p1;
        trunc_ln38_reg_1256 <= trunc_ln38_fu_583_p1;
        trunc_ln43_reg_1281 <= trunc_ln43_fu_623_p1;
        trunc_ln48_reg_1301 <= trunc_ln48_fu_653_p1;
        trunc_ln53_1_reg_1306 <= trunc_ln53_1_fu_671_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        add_ln67_reg_1366 <= add_ln67_fu_898_p2;
        trunc_ln64_1_reg_1361 <= trunc_ln64_1_fu_886_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        add_ln69_reg_1371 <= add_ln69_fu_945_p2;
        mul_ln71_reg_1376 <= mul_ln71_fu_951_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        in_load_1_reg_996 <= in_r_q1;
        in_load_reg_981 <= in_r_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        in_load_2_reg_1031 <= in_r_q0;
        in_load_3_reg_1046 <= in_r_q1;
        mul_ln18_reg_1021 <= mul_ln18_fu_337_p2;
        mul_ln19_reg_1026 <= mul_ln19_fu_341_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        in_load_6_reg_1151 <= in_r_q0;
        in_load_7_reg_1166 <= in_r_q1;
        mul_ln24_1_reg_1126 <= mul_ln24_1_fu_395_p2;
        mul_ln24_2_reg_1131 <= mul_ln24_2_fu_399_p2;
        mul_ln24_reg_1121 <= mul_ln24_fu_391_p2;
        mul_ln27_1_reg_1141 <= mul_ln27_1_fu_407_p2;
        mul_ln27_2_reg_1146 <= mul_ln27_2_fu_411_p2;
        mul_ln27_reg_1136 <= mul_ln27_fu_403_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        in_load_8_reg_1221 <= in_r_q0;
        in_load_9_reg_1236 <= in_r_q1;
        mul_ln30_1_reg_1196 <= mul_ln30_1_fu_457_p2;
        mul_ln30_2_reg_1201 <= mul_ln30_2_fu_461_p2;
        mul_ln30_reg_1191 <= mul_ln30_fu_453_p2;
        trunc_ln30_reg_1206 <= trunc_ln30_fu_469_p1;
        trunc_ln34_1_reg_1216 <= trunc_ln34_1_fu_505_p1;
        trunc_ln34_reg_1211 <= trunc_ln34_fu_501_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        mul_ln72_reg_1381 <= mul_ln72_fu_961_p2;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        in_r_address0 = 64'd8;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        in_r_address0 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        in_r_address0 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        in_r_address0 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        in_r_address0 = 64'd0;
    end else begin
        in_r_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        in_r_address1 = 64'd9;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        in_r_address1 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        in_r_address1 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        in_r_address1 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        in_r_address1 = 64'd1;
    end else begin
        in_r_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state5) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)))) begin
        in_r_ce0 = 1'b1;
    end else begin
        in_r_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state5) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)))) begin
        in_r_ce1 = 1'b1;
    end else begin
        in_r_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        output_r_address0 = 64'd18;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        output_r_address0 = 64'd16;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        output_r_address0 = 64'd14;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        output_r_address0 = 64'd12;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        output_r_address0 = 64'd10;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        output_r_address0 = 64'd8;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        output_r_address0 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        output_r_address0 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        output_r_address0 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        output_r_address0 = 64'd0;
    end else begin
        output_r_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        output_r_address1 = 64'd17;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        output_r_address1 = 64'd15;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        output_r_address1 = 64'd13;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        output_r_address1 = 64'd11;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        output_r_address1 = 64'd9;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        output_r_address1 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        output_r_address1 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        output_r_address1 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        output_r_address1 = 64'd1;
    end else begin
        output_r_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5))) begin
        output_r_ce0 = 1'b1;
    end else begin
        output_r_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5))) begin
        output_r_ce1 = 1'b1;
    end else begin
        output_r_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        output_r_d0 = shl_ln72_fu_965_p2;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        output_r_d0 = add_ln69_reg_1371;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        output_r_d0 = shl_ln1_fu_916_p3;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        output_r_d0 = add_ln57_2_reg_1351;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        output_r_d0 = shl_ln9_fu_821_p3;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        output_r_d0 = add_ln38_3_fu_709_p2;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        output_r_d0 = shl_ln5_fu_535_p3;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        output_r_d0 = add_ln24_1_fu_430_p2;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        output_r_d0 = shl_ln20_fu_379_p2;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        output_r_d0 = mul_ln18_reg_1021;
    end else begin
        output_r_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        output_r_d1 = shl_ln71_fu_955_p2;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        output_r_d1 = shl_ln67_fu_925_p2;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        output_r_d1 = shl_ln61_fu_866_p2;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        output_r_d1 = shl_ln_fu_833_p3;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        output_r_d1 = shl_ln8_fu_733_p3;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        output_r_d1 = shl_ln6_fu_548_p3;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        output_r_d1 = shl_ln27_fu_446_p2;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        output_r_d1 = shl_ln22_fu_385_p2;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        output_r_d1 = shl_ln19_fu_345_p2;
    end else begin
        output_r_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5))) begin
        output_r_we0 = 1'b1;
    end else begin
        output_r_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5))) begin
        output_r_we1 = 1'b1;
    end else begin
        output_r_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln20_fu_359_p2 = (mul_ln20_fu_351_p2 + mul_ln20_1_fu_355_p2);

assign add_ln22_fu_373_p2 = (mul_ln22_fu_365_p2 + mul_ln22_1_fu_369_p2);

assign add_ln24_1_fu_430_p2 = (shl_ln24_fu_415_p2 + add_ln24_fu_425_p2);

assign add_ln24_fu_425_p2 = (shl_ln24_1_fu_420_p2 + mul_ln24_reg_1121);

assign add_ln27_1_fu_441_p2 = (mul_ln27_1_reg_1141 + add_ln27_fu_437_p2);

assign add_ln27_fu_437_p2 = (mul_ln27_2_reg_1146 + mul_ln27_reg_1136);

assign add_ln30_1_fu_520_p2 = (mul_ln30_1_reg_1196 + add_ln30_fu_516_p2);

assign add_ln30_2_fu_529_p2 = (trunc_ln30_1_fu_525_p1 + shl_ln30_1_fu_509_p3);

assign add_ln30_fu_516_p2 = (mul_ln30_2_reg_1201 + mul_ln30_reg_1191);

assign add_ln34_1_fu_495_p2 = (mul_ln34_3_fu_485_p2 + mul_ln34_2_fu_481_p2);

assign add_ln34_2_fu_544_p2 = (trunc_ln34_1_reg_1216 + trunc_ln34_reg_1211);

assign add_ln34_fu_489_p2 = (mul_ln34_fu_473_p2 + mul_ln34_1_fu_477_p2);

assign add_ln38_1_fu_587_p2 = (mul_ln38_1_fu_561_p2 + mul_ln38_2_fu_565_p2);

assign add_ln38_2_fu_696_p2 = (trunc_ln38_1_reg_1261 + shl_ln7_fu_689_p3);

assign add_ln38_3_fu_709_p2 = (mul_ln38_reg_1251 + shl_ln38_1_fu_701_p3);

assign add_ln38_fu_577_p2 = (mul_ln38_3_fu_569_p2 + mul_ln38_4_fu_573_p2);

assign add_ln43_1_fu_715_p2 = (mul_ln43_4_reg_1276 + mul_ln43_3_reg_1271);

assign add_ln43_2_fu_719_p2 = (mul_ln43_2_reg_1266 + add_ln43_1_fu_715_p2);

assign add_ln43_3_fu_728_p2 = (trunc_ln43_1_fu_724_p1 + trunc_ln43_reg_1281);

assign add_ln43_fu_617_p2 = (mul_ln43_fu_597_p2 + mul_ln43_1_fu_601_p2);

assign add_ln48_1_fu_749_p2 = (mul_ln48_2_reg_1296 + mul_ln48_reg_1286);

assign add_ln48_2_fu_753_p2 = (mul_ln48_1_reg_1291 + add_ln48_1_fu_749_p2);

assign add_ln48_3_fu_762_p2 = (trunc_ln48_1_fu_758_p1 + shl_ln48_1_fu_742_p3);

assign add_ln48_fu_647_p2 = (mul_ln48_3_fu_639_p2 + mul_ln48_4_fu_643_p2);

assign add_ln53_1_fu_665_p2 = (mul_ln53_3_fu_661_p2 + mul_ln53_2_fu_657_p2);

assign add_ln53_2_fu_829_p2 = (trunc_ln53_1_reg_1306 + trunc_ln53_reg_1321);

assign add_ln53_fu_776_p2 = (mul_ln53_fu_768_p2 + mul_ln53_1_fu_772_p2);

assign add_ln57_1_fu_795_p2 = (mul_ln57_1_fu_786_p2 + shl_ln57_fu_790_p2);

assign add_ln57_2_fu_851_p2 = (mul_ln57_fu_842_p2 + shl_ln57_1_fu_846_p2);

assign add_ln57_fu_683_p2 = (mul_ln57_2_fu_675_p2 + mul_ln57_3_fu_679_p2);

assign add_ln61_1_fu_861_p2 = (mul_ln61_1_reg_1336 + add_ln61_fu_857_p2);

assign add_ln61_fu_857_p2 = (mul_ln61_2_reg_1341 + mul_ln61_reg_1331);

assign add_ln64_1_fu_911_p2 = (trunc_ln64_1_reg_1361 + shl_ln64_1_fu_904_p3);

assign add_ln64_fu_880_p2 = (mul_ln64_fu_872_p2 + mul_ln64_1_fu_876_p2);

assign add_ln67_fu_898_p2 = (mul_ln67_fu_890_p2 + mul_ln67_1_fu_894_p2);

assign add_ln69_fu_945_p2 = (mul_ln69_fu_931_p2 + shl_ln69_fu_939_p2);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign mul_ln18_fu_337_p2 = ($signed(in_load_reg_981) * $signed(in_load_reg_981));

assign mul_ln19_fu_341_p2 = ($signed(in_load_reg_981) * $signed(in_load_1_reg_996));

assign mul_ln20_1_fu_355_p2 = ($signed(in_load_reg_981) * $signed(in_load_2_reg_1031));

assign mul_ln20_fu_351_p2 = ($signed(in_load_1_reg_996) * $signed(in_load_1_reg_996));

assign mul_ln22_1_fu_369_p2 = ($signed(in_load_reg_981) * $signed(in_load_3_reg_1046));

assign mul_ln22_fu_365_p2 = ($signed(in_load_1_reg_996) * $signed(in_load_2_reg_1031));

assign mul_ln24_1_fu_395_p2 = ($signed(in_load_1_reg_996) * $signed(in_load_3_reg_1046));

assign mul_ln24_2_fu_399_p2 = ($signed(in_load_reg_981) * $signed(in_load_4_reg_1081));

assign mul_ln24_fu_391_p2 = ($signed(in_load_2_reg_1031) * $signed(in_load_2_reg_1031));

assign mul_ln27_1_fu_407_p2 = ($signed(in_load_1_reg_996) * $signed(in_load_4_reg_1081));

assign mul_ln27_2_fu_411_p2 = ($signed(in_load_reg_981) * $signed(in_load_5_reg_1096));

assign mul_ln27_fu_403_p2 = ($signed(in_load_2_reg_1031) * $signed(in_load_3_reg_1046));

assign mul_ln30_1_fu_457_p2 = ($signed(in_load_2_reg_1031) * $signed(in_load_4_reg_1081));

assign mul_ln30_2_fu_461_p2 = ($signed(in_load_reg_981) * $signed(in_load_6_reg_1151));

assign mul_ln30_3_fu_465_p2 = ($signed(in_load_1_reg_996) * $signed(in_load_5_reg_1096));

assign mul_ln30_fu_453_p2 = ($signed(in_load_3_reg_1046) * $signed(in_load_3_reg_1046));

assign mul_ln34_1_fu_477_p2 = ($signed(in_load_2_reg_1031) * $signed(in_load_5_reg_1096));

assign mul_ln34_2_fu_481_p2 = ($signed(in_load_1_reg_996) * $signed(in_load_6_reg_1151));

assign mul_ln34_3_fu_485_p2 = ($signed(in_load_reg_981) * $signed(in_load_7_reg_1166));

assign mul_ln34_fu_473_p2 = ($signed(in_load_3_reg_1046) * $signed(in_load_4_reg_1081));

assign mul_ln38_1_fu_561_p2 = ($signed(in_load_2_reg_1031) * $signed(in_load_6_reg_1151));

assign mul_ln38_2_fu_565_p2 = ($signed(in_load_reg_981) * $signed(in_load_8_reg_1221));

assign mul_ln38_3_fu_569_p2 = ($signed(in_load_1_reg_996) * $signed(in_load_7_reg_1166));

assign mul_ln38_4_fu_573_p2 = ($signed(in_load_3_reg_1046) * $signed(in_load_5_reg_1096));

assign mul_ln38_fu_557_p2 = ($signed(in_load_4_reg_1081) * $signed(in_load_4_reg_1081));

assign mul_ln43_1_fu_601_p2 = ($signed(in_load_3_reg_1046) * $signed(in_load_6_reg_1151));

assign mul_ln43_2_fu_605_p2 = ($signed(in_load_2_reg_1031) * $signed(in_load_7_reg_1166));

assign mul_ln43_3_fu_609_p2 = ($signed(in_load_1_reg_996) * $signed(in_load_8_reg_1221));

assign mul_ln43_4_fu_613_p2 = ($signed(in_load_reg_981) * $signed(in_load_9_reg_1236));

assign mul_ln43_fu_597_p2 = ($signed(in_load_4_reg_1081) * $signed(in_load_5_reg_1096));

assign mul_ln48_1_fu_631_p2 = ($signed(in_load_4_reg_1081) * $signed(in_load_6_reg_1151));

assign mul_ln48_2_fu_635_p2 = ($signed(in_load_2_reg_1031) * $signed(in_load_8_reg_1221));

assign mul_ln48_3_fu_639_p2 = ($signed(in_load_3_reg_1046) * $signed(in_load_7_reg_1166));

assign mul_ln48_4_fu_643_p2 = ($signed(in_load_1_reg_996) * $signed(in_load_9_reg_1236));

assign mul_ln48_fu_627_p2 = ($signed(in_load_5_reg_1096) * $signed(in_load_5_reg_1096));

assign mul_ln53_1_fu_772_p2 = ($signed(in_load_4_reg_1081) * $signed(in_load_7_reg_1166));

assign mul_ln53_2_fu_657_p2 = ($signed(in_load_3_reg_1046) * $signed(in_load_8_reg_1221));

assign mul_ln53_3_fu_661_p2 = ($signed(in_load_2_reg_1031) * $signed(in_load_9_reg_1236));

assign mul_ln53_fu_768_p2 = ($signed(in_load_5_reg_1096) * $signed(in_load_6_reg_1151));

assign mul_ln57_1_fu_786_p2 = ($signed(in_load_4_reg_1081) * $signed(in_load_8_reg_1221));

assign mul_ln57_2_fu_675_p2 = ($signed(in_load_5_reg_1096) * $signed(in_load_7_reg_1166));

assign mul_ln57_3_fu_679_p2 = ($signed(in_load_3_reg_1046) * $signed(in_load_9_reg_1236));

assign mul_ln57_fu_842_p2 = ($signed(in_load_6_reg_1151) * $signed(in_load_6_reg_1151));

assign mul_ln61_1_fu_805_p2 = ($signed(in_load_5_reg_1096) * $signed(in_load_8_reg_1221));

assign mul_ln61_2_fu_809_p2 = ($signed(in_load_4_reg_1081) * $signed(in_load_9_reg_1236));

assign mul_ln61_fu_801_p2 = ($signed(in_load_6_reg_1151) * $signed(in_load_7_reg_1166));

assign mul_ln64_1_fu_876_p2 = ($signed(in_load_6_reg_1151) * $signed(in_load_8_reg_1221));

assign mul_ln64_2_fu_813_p2 = ($signed(in_load_5_reg_1096) * $signed(in_load_9_reg_1236));

assign mul_ln64_fu_872_p2 = ($signed(in_load_7_reg_1166) * $signed(in_load_7_reg_1166));

assign mul_ln67_1_fu_894_p2 = ($signed(in_load_6_reg_1151) * $signed(in_load_9_reg_1236));

assign mul_ln67_fu_890_p2 = ($signed(in_load_7_reg_1166) * $signed(in_load_8_reg_1221));

assign mul_ln69_1_fu_935_p2 = ($signed(in_load_7_reg_1166) * $signed(in_load_9_reg_1236));

assign mul_ln69_fu_931_p2 = ($signed(in_load_8_reg_1221) * $signed(in_load_8_reg_1221));

assign mul_ln71_fu_951_p2 = ($signed(in_load_8_reg_1221) * $signed(in_load_9_reg_1236));

assign mul_ln72_fu_961_p2 = ($signed(in_load_9_reg_1236) * $signed(in_load_9_reg_1236));

assign shl_ln19_fu_345_p2 = mul_ln19_reg_1026 << 32'd1;

assign shl_ln1_fu_916_p3 = {{add_ln64_1_fu_911_p2}, {1'd0}};

assign shl_ln20_fu_379_p2 = add_ln20_reg_1071 << 32'd1;

assign shl_ln22_fu_385_p2 = add_ln22_reg_1076 << 32'd1;

assign shl_ln24_1_fu_420_p2 = mul_ln24_2_reg_1131 << 32'd1;

assign shl_ln24_fu_415_p2 = mul_ln24_1_reg_1126 << 32'd2;

assign shl_ln27_fu_446_p2 = add_ln27_1_fu_441_p2 << 32'd1;

assign shl_ln30_1_fu_509_p3 = {{trunc_ln30_reg_1206}, {1'd0}};

assign shl_ln38_1_fu_701_p3 = {{add_ln38_2_fu_696_p2}, {1'd0}};

assign shl_ln48_1_fu_742_p3 = {{trunc_ln48_reg_1301}, {1'd0}};

assign shl_ln57_1_fu_846_p2 = add_ln57_1_reg_1326 << 32'd1;

assign shl_ln57_fu_790_p2 = add_ln57_reg_1311 << 32'd1;

assign shl_ln5_fu_535_p3 = {{add_ln30_2_fu_529_p2}, {1'd0}};

assign shl_ln61_fu_866_p2 = add_ln61_1_reg_1356 << 32'd1;

assign shl_ln64_1_fu_904_p3 = {{trunc_ln64_reg_1346}, {1'd0}};

assign shl_ln67_fu_925_p2 = add_ln67_reg_1366 << 32'd1;

assign shl_ln69_fu_939_p2 = mul_ln69_1_fu_935_p2 << 32'd2;

assign shl_ln6_fu_548_p3 = {{add_ln34_2_fu_544_p2}, {1'd0}};

assign shl_ln71_fu_955_p2 = mul_ln71_reg_1376 << 32'd1;

assign shl_ln72_fu_965_p2 = mul_ln72_reg_1381 << 32'd1;

assign shl_ln7_fu_689_p3 = {{trunc_ln38_reg_1256}, {1'd0}};

assign shl_ln8_fu_733_p3 = {{add_ln43_3_fu_728_p2}, {1'd0}};

assign shl_ln9_fu_821_p3 = {{add_ln48_3_reg_1316}, {1'd0}};

assign shl_ln_fu_833_p3 = {{add_ln53_2_fu_829_p2}, {1'd0}};

assign trunc_ln30_1_fu_525_p1 = add_ln30_1_fu_520_p2[30:0];

assign trunc_ln30_fu_469_p1 = mul_ln30_3_fu_465_p2[29:0];

assign trunc_ln34_1_fu_505_p1 = add_ln34_1_fu_495_p2[30:0];

assign trunc_ln34_fu_501_p1 = add_ln34_fu_489_p2[30:0];

assign trunc_ln38_1_fu_593_p1 = add_ln38_1_fu_587_p2[30:0];

assign trunc_ln38_fu_583_p1 = add_ln38_fu_577_p2[29:0];

assign trunc_ln43_1_fu_724_p1 = add_ln43_2_fu_719_p2[30:0];

assign trunc_ln43_fu_623_p1 = add_ln43_fu_617_p2[30:0];

assign trunc_ln48_1_fu_758_p1 = add_ln48_2_fu_753_p2[30:0];

assign trunc_ln48_fu_653_p1 = add_ln48_fu_647_p2[29:0];

assign trunc_ln53_1_fu_671_p1 = add_ln53_1_fu_665_p2[30:0];

assign trunc_ln53_fu_782_p1 = add_ln53_fu_776_p2[30:0];

assign trunc_ln64_1_fu_886_p1 = add_ln64_fu_880_p2[30:0];

assign trunc_ln64_fu_817_p1 = mul_ln64_2_fu_813_p2[29:0];

endmodule //fsquare_inner
