// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "resolveResolved.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic resolveResolved::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic resolveResolved::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<8> resolveResolved::ap_ST_fsm_state1 = "1";
const sc_lv<8> resolveResolved::ap_ST_fsm_state2 = "10";
const sc_lv<8> resolveResolved::ap_ST_fsm_state3 = "100";
const sc_lv<8> resolveResolved::ap_ST_fsm_state4 = "1000";
const sc_lv<8> resolveResolved::ap_ST_fsm_state5 = "10000";
const sc_lv<8> resolveResolved::ap_ST_fsm_state6 = "100000";
const sc_lv<8> resolveResolved::ap_ST_fsm_state7 = "1000000";
const sc_lv<8> resolveResolved::ap_ST_fsm_state8 = "10000000";
const sc_lv<32> resolveResolved::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> resolveResolved::ap_const_lv32_1 = "1";
const sc_lv<1> resolveResolved::ap_const_lv1_0 = "0";
const sc_lv<32> resolveResolved::ap_const_lv32_2 = "10";
const sc_lv<1> resolveResolved::ap_const_lv1_1 = "1";
const sc_lv<32> resolveResolved::ap_const_lv32_3 = "11";
const sc_lv<32> resolveResolved::ap_const_lv32_4 = "100";
const sc_lv<32> resolveResolved::ap_const_lv32_5 = "101";
const sc_lv<32> resolveResolved::ap_const_lv32_6 = "110";
const sc_lv<32> resolveResolved::ap_const_lv32_7 = "111";
const sc_lv<32> resolveResolved::ap_const_lv32_FFFFFFFF = "11111111111111111111111111111111";
const bool resolveResolved::ap_const_boolean_1 = true;

resolveResolved::resolveResolved(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_condition_208);
    sensitive << ( icmp_ln36_reg_259 );
    sensitive << ( or_ln39_reg_273 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_ap_condition_211);
    sensitive << ( icmp_ln51_reg_290 );
    sensitive << ( icmp_ln51_1_reg_294 );
    sensitive << ( icmp_ln57_reg_298 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln34_fu_152_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln34_fu_152_p2 );

    SC_METHOD(thread_grp_fu_141_p2);
    sensitive << ( pcls_q0 );
    sensitive << ( icmp_ln36_reg_259 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( or_ln39_reg_273 );
    sensitive << ( icmp_ln51_reg_290 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( icmp_ln51_1_reg_294 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( icmp_ln57_reg_298 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_i_fu_215_p2);
    sensitive << ( j_1_reg_111 );

    SC_METHOD(thread_icmp_ln34_fu_152_p1);
    sensitive << ( eos );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_icmp_ln34_fu_152_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( j_1_reg_111 );
    sensitive << ( icmp_ln34_fu_152_p1 );

    SC_METHOD(thread_icmp_ln39_1_fu_179_p2);
    sensitive << ( sos );
    sensitive << ( j_fu_173_p2 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_icmp_ln39_fu_162_p2);
    sensitive << ( sos );
    sensitive << ( grp_fu_141_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( j_1_reg_111 );

    SC_METHOD(thread_icmp_ln51_fu_194_p1);
    sensitive << ( eos );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_icmp_ln51_fu_194_p2);
    sensitive << ( grp_fu_141_p2 );
    sensitive << ( icmp_ln36_reg_259 );
    sensitive << ( or_ln39_reg_273 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( j_1_reg_111 );
    sensitive << ( icmp_ln51_fu_194_p1 );

    SC_METHOD(thread_icmp_ln57_fu_199_p2);
    sensitive << ( sos );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( j1_0_reg_131 );

    SC_METHOD(thread_j_2_fu_209_p2);
    sensitive << ( j1_0_reg_131 );

    SC_METHOD(thread_j_fu_173_p2);
    sensitive << ( j_0_in_reg_121 );

    SC_METHOD(thread_or_ln39_fu_184_p2);
    sensitive << ( xor_ln39_reg_263 );
    sensitive << ( icmp_ln39_1_fu_179_p2 );

    SC_METHOD(thread_pcls_address0);
    sensitive << ( pcls_addr_2_reg_241 );
    sensitive << ( sext_ln36_fu_157_p1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( sext_ln39_fu_189_p1 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( sext_ln57_fu_204_p1 );

    SC_METHOD(thread_pcls_ce0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_plevel_address0);
    sensitive << ( sext_ln36_reg_249 );
    sensitive << ( grp_fu_141_p2 );
    sensitive << ( icmp_ln36_reg_259 );
    sensitive << ( or_ln39_reg_273 );
    sensitive << ( sext_ln39_reg_277 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( sext_ln57_reg_302 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_plevel_ce0);
    sensitive << ( grp_fu_141_p2 );
    sensitive << ( icmp_ln36_reg_259 );
    sensitive << ( or_ln39_reg_273 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_plevel_d0);
    sensitive << ( baselevel );
    sensitive << ( grp_fu_141_p2 );
    sensitive << ( icmp_ln36_reg_259 );
    sensitive << ( or_ln39_reg_273 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_plevel_we0);
    sensitive << ( grp_fu_141_p2 );
    sensitive << ( icmp_ln36_reg_259 );
    sensitive << ( or_ln39_reg_273 );
    sensitive << ( icmp_ln51_reg_290 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( icmp_ln51_1_reg_294 );
    sensitive << ( icmp_ln57_reg_298 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_sext_ln36_fu_157_p1);
    sensitive << ( j_1_reg_111 );

    SC_METHOD(thread_sext_ln39_fu_189_p1);
    sensitive << ( j_fu_173_p2 );

    SC_METHOD(thread_sext_ln51_fu_147_p0);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( eos );

    SC_METHOD(thread_sext_ln51_fu_147_p1);
    sensitive << ( sext_ln51_fu_147_p0 );

    SC_METHOD(thread_sext_ln57_fu_204_p1);
    sensitive << ( j1_0_reg_131 );

    SC_METHOD(thread_xor_ln39_fu_167_p2);
    sensitive << ( icmp_ln39_fu_162_p2 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln34_fu_152_p2 );
    sensitive << ( grp_fu_141_p2 );
    sensitive << ( icmp_ln36_reg_259 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( or_ln39_reg_273 );
    sensitive << ( icmp_ln51_fu_194_p2 );
    sensitive << ( icmp_ln51_reg_290 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( icmp_ln51_1_reg_294 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( icmp_ln57_reg_298 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    ap_CS_fsm = "00000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "resolveResolved_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, baselevel, "(port)baselevel");
    sc_trace(mVcdFile, pcls_address0, "(port)pcls_address0");
    sc_trace(mVcdFile, pcls_ce0, "(port)pcls_ce0");
    sc_trace(mVcdFile, pcls_q0, "(port)pcls_q0");
    sc_trace(mVcdFile, plevel_address0, "(port)plevel_address0");
    sc_trace(mVcdFile, plevel_ce0, "(port)plevel_ce0");
    sc_trace(mVcdFile, plevel_we0, "(port)plevel_we0");
    sc_trace(mVcdFile, plevel_d0, "(port)plevel_d0");
    sc_trace(mVcdFile, sos, "(port)sos");
    sc_trace(mVcdFile, eos, "(port)eos");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, pcls_addr_2_reg_241, "pcls_addr_2_reg_241");
    sc_trace(mVcdFile, sext_ln36_fu_157_p1, "sext_ln36_fu_157_p1");
    sc_trace(mVcdFile, sext_ln36_reg_249, "sext_ln36_reg_249");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, icmp_ln34_fu_152_p2, "icmp_ln34_fu_152_p2");
    sc_trace(mVcdFile, grp_fu_141_p2, "grp_fu_141_p2");
    sc_trace(mVcdFile, icmp_ln36_reg_259, "icmp_ln36_reg_259");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, xor_ln39_fu_167_p2, "xor_ln39_fu_167_p2");
    sc_trace(mVcdFile, xor_ln39_reg_263, "xor_ln39_reg_263");
    sc_trace(mVcdFile, j_fu_173_p2, "j_fu_173_p2");
    sc_trace(mVcdFile, j_reg_268, "j_reg_268");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, or_ln39_fu_184_p2, "or_ln39_fu_184_p2");
    sc_trace(mVcdFile, or_ln39_reg_273, "or_ln39_reg_273");
    sc_trace(mVcdFile, sext_ln39_fu_189_p1, "sext_ln39_fu_189_p1");
    sc_trace(mVcdFile, sext_ln39_reg_277, "sext_ln39_reg_277");
    sc_trace(mVcdFile, icmp_ln51_fu_194_p2, "icmp_ln51_fu_194_p2");
    sc_trace(mVcdFile, icmp_ln51_reg_290, "icmp_ln51_reg_290");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, icmp_ln51_1_reg_294, "icmp_ln51_1_reg_294");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, icmp_ln57_fu_199_p2, "icmp_ln57_fu_199_p2");
    sc_trace(mVcdFile, icmp_ln57_reg_298, "icmp_ln57_reg_298");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, sext_ln57_fu_204_p1, "sext_ln57_fu_204_p1");
    sc_trace(mVcdFile, sext_ln57_reg_302, "sext_ln57_reg_302");
    sc_trace(mVcdFile, j_2_fu_209_p2, "j_2_fu_209_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, i_fu_215_p2, "i_fu_215_p2");
    sc_trace(mVcdFile, j_1_reg_111, "j_1_reg_111");
    sc_trace(mVcdFile, j_0_in_reg_121, "j_0_in_reg_121");
    sc_trace(mVcdFile, j1_0_reg_131, "j1_0_reg_131");
    sc_trace(mVcdFile, sext_ln51_fu_147_p1, "sext_ln51_fu_147_p1");
    sc_trace(mVcdFile, sext_ln51_fu_147_p0, "sext_ln51_fu_147_p0");
    sc_trace(mVcdFile, icmp_ln34_fu_152_p1, "icmp_ln34_fu_152_p1");
    sc_trace(mVcdFile, icmp_ln39_fu_162_p2, "icmp_ln39_fu_162_p2");
    sc_trace(mVcdFile, icmp_ln39_1_fu_179_p2, "icmp_ln39_1_fu_179_p2");
    sc_trace(mVcdFile, icmp_ln51_fu_194_p1, "icmp_ln51_fu_194_p1");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_condition_211, "ap_condition_211");
    sc_trace(mVcdFile, ap_condition_208, "ap_condition_208");
#endif

    }
    mHdltvinHandle.open("resolveResolved.hdltvin.dat");
    mHdltvoutHandle.open("resolveResolved.hdltvout.dat");
}

resolveResolved::~resolveResolved() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
}

void resolveResolved::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if (esl_seteq<1,1,1>(grp_fu_141_p2.read(), ap_const_lv1_1)) {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
            j1_0_reg_131 = eos.read();
        } else if (esl_seteq<1,1,1>(ap_condition_211.read(), ap_const_boolean_1)) {
            j1_0_reg_131 = j_2_fu_209_p2.read();
        }
    }
    if (esl_seteq<1,1,1>(grp_fu_141_p2.read(), ap_const_lv1_1)) {
        if (esl_seteq<1,1,1>(ap_condition_208.read(), ap_const_boolean_1)) {
            j_0_in_reg_121 = j_reg_268.read();
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
            j_0_in_reg_121 = j_1_reg_111.read();
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
         (((esl_seteq<1,1,1>(ap_const_lv1_0, grp_fu_141_p2.read()) || 
            esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln57_reg_298.read())) || 
           esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln51_1_reg_294.read())) || 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln51_reg_290.read())))) {
        j_1_reg_111 = i_fu_215_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        j_1_reg_111 = sos.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        icmp_ln36_reg_259 = grp_fu_141_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        icmp_ln51_1_reg_294 = grp_fu_141_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && ((esl_seteq<1,1,1>(ap_const_lv1_0, grp_fu_141_p2.read()) || 
   esl_seteq<1,1,1>(ap_const_lv1_1, or_ln39_reg_273.read())) || 
  esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln36_reg_259.read())))) {
        icmp_ln51_reg_290 = icmp_ln51_fu_194_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        icmp_ln57_reg_298 = icmp_ln57_fu_199_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        j_reg_268 = j_fu_173_p2.read();
        or_ln39_reg_273 = or_ln39_fu_184_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        pcls_addr_2_reg_241 =  (sc_lv<8>) (sext_ln51_fu_147_p1.read());
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln34_fu_152_p2.read(), ap_const_lv1_0))) {
        sext_ln36_reg_249 = sext_ln36_fu_157_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, or_ln39_fu_184_p2.read()))) {
        sext_ln39_reg_277 = sext_ln39_fu_189_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln57_fu_199_p2.read()))) {
        sext_ln57_reg_302 = sext_ln57_fu_204_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(grp_fu_141_p2.read(), ap_const_lv1_1))) {
        xor_ln39_reg_263 = xor_ln39_fu_167_p2.read();
    }
}

void resolveResolved::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void resolveResolved::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void resolveResolved::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void resolveResolved::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void resolveResolved::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void resolveResolved::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void resolveResolved::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void resolveResolved::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void resolveResolved::thread_ap_condition_208() {
    ap_condition_208 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(icmp_ln36_reg_259.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_lv1_0, or_ln39_reg_273.read()));
}

void resolveResolved::thread_ap_condition_211() {
    ap_condition_211 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln51_reg_290.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln51_1_reg_294.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln57_reg_298.read()));
}

void resolveResolved::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln34_fu_152_p2.read(), ap_const_lv1_1))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void resolveResolved::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void resolveResolved::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln34_fu_152_p2.read(), ap_const_lv1_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void resolveResolved::thread_grp_fu_141_p2() {
    grp_fu_141_p2 = (!pcls_q0.read().is_01() || !ap_const_lv32_0.is_01())? sc_lv<1>(): sc_lv<1>(pcls_q0.read() == ap_const_lv32_0);
}

void resolveResolved::thread_i_fu_215_p2() {
    i_fu_215_p2 = (!j_1_reg_111.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_bigint<32>(j_1_reg_111.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void resolveResolved::thread_icmp_ln34_fu_152_p1() {
    icmp_ln34_fu_152_p1 = eos.read();
}

void resolveResolved::thread_icmp_ln34_fu_152_p2() {
    icmp_ln34_fu_152_p2 = (!j_1_reg_111.read().is_01() || !icmp_ln34_fu_152_p1.read().is_01())? sc_lv<1>(): (sc_bigint<32>(j_1_reg_111.read()) > sc_bigint<32>(icmp_ln34_fu_152_p1.read()));
}

void resolveResolved::thread_icmp_ln39_1_fu_179_p2() {
    icmp_ln39_1_fu_179_p2 = (!j_fu_173_p2.read().is_01() || !sos.read().is_01())? sc_lv<1>(): (sc_bigint<32>(j_fu_173_p2.read()) < sc_bigint<32>(sos.read()));
}

void resolveResolved::thread_icmp_ln39_fu_162_p2() {
    icmp_ln39_fu_162_p2 = (!sos.read().is_01() || !j_1_reg_111.read().is_01())? sc_lv<1>(): (sc_bigint<32>(sos.read()) < sc_bigint<32>(j_1_reg_111.read()));
}

void resolveResolved::thread_icmp_ln51_fu_194_p1() {
    icmp_ln51_fu_194_p1 = eos.read();
}

void resolveResolved::thread_icmp_ln51_fu_194_p2() {
    icmp_ln51_fu_194_p2 = (!j_1_reg_111.read().is_01() || !icmp_ln51_fu_194_p1.read().is_01())? sc_lv<1>(): sc_lv<1>(j_1_reg_111.read() == icmp_ln51_fu_194_p1.read());
}

void resolveResolved::thread_icmp_ln57_fu_199_p2() {
    icmp_ln57_fu_199_p2 = (!j1_0_reg_131.read().is_01() || !sos.read().is_01())? sc_lv<1>(): (sc_bigint<32>(j1_0_reg_131.read()) < sc_bigint<32>(sos.read()));
}

void resolveResolved::thread_j_2_fu_209_p2() {
    j_2_fu_209_p2 = (!j1_0_reg_131.read().is_01() || !ap_const_lv32_FFFFFFFF.is_01())? sc_lv<32>(): (sc_bigint<32>(j1_0_reg_131.read()) + sc_bigint<32>(ap_const_lv32_FFFFFFFF));
}

void resolveResolved::thread_j_fu_173_p2() {
    j_fu_173_p2 = (!j_0_in_reg_121.read().is_01() || !ap_const_lv32_FFFFFFFF.is_01())? sc_lv<32>(): (sc_biguint<32>(j_0_in_reg_121.read()) + sc_bigint<32>(ap_const_lv32_FFFFFFFF));
}

void resolveResolved::thread_or_ln39_fu_184_p2() {
    or_ln39_fu_184_p2 = (xor_ln39_reg_263.read() | icmp_ln39_1_fu_179_p2.read());
}

void resolveResolved::thread_pcls_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        pcls_address0 =  (sc_lv<8>) (sext_ln57_fu_204_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        pcls_address0 = pcls_addr_2_reg_241.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        pcls_address0 =  (sc_lv<8>) (sext_ln39_fu_189_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        pcls_address0 =  (sc_lv<8>) (sext_ln36_fu_157_p1.read());
    } else {
        pcls_address0 = "XXXXXXXX";
    }
}

void resolveResolved::thread_pcls_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()))) {
        pcls_ce0 = ap_const_logic_1;
    } else {
        pcls_ce0 = ap_const_logic_0;
    }
}

void resolveResolved::thread_plevel_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        plevel_address0 =  (sc_lv<8>) (sext_ln57_reg_302.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
                ((esl_seteq<1,1,1>(ap_const_lv1_0, grp_fu_141_p2.read()) && 
                  esl_seteq<1,1,1>(icmp_ln36_reg_259.read(), ap_const_lv1_1)) || 
                 (esl_seteq<1,1,1>(ap_const_lv1_1, or_ln39_reg_273.read()) && 
                  esl_seteq<1,1,1>(icmp_ln36_reg_259.read(), ap_const_lv1_1))))) {
        plevel_address0 =  (sc_lv<8>) (sext_ln36_reg_249.read());
    } else if ((esl_seteq<1,1,1>(grp_fu_141_p2.read(), ap_const_lv1_1) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
                esl_seteq<1,1,1>(icmp_ln36_reg_259.read(), ap_const_lv1_1) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, or_ln39_reg_273.read()))) {
        plevel_address0 =  (sc_lv<8>) (sext_ln39_reg_277.read());
    } else {
        plevel_address0 = "XXXXXXXX";
    }
}

void resolveResolved::thread_plevel_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         (esl_seteq<1,1,1>(grp_fu_141_p2.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
          esl_seteq<1,1,1>(icmp_ln36_reg_259.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, or_ln39_reg_273.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
          ((esl_seteq<1,1,1>(ap_const_lv1_0, grp_fu_141_p2.read()) && 
            esl_seteq<1,1,1>(icmp_ln36_reg_259.read(), ap_const_lv1_1)) || 
           (esl_seteq<1,1,1>(ap_const_lv1_1, or_ln39_reg_273.read()) && 
            esl_seteq<1,1,1>(icmp_ln36_reg_259.read(), ap_const_lv1_1)))))) {
        plevel_ce0 = ap_const_logic_1;
    } else {
        plevel_ce0 = ap_const_logic_0;
    }
}

void resolveResolved::thread_plevel_d0() {
    plevel_d0 = baselevel.read();
}

void resolveResolved::thread_plevel_we0() {
    if (((esl_seteq<1,1,1>(grp_fu_141_p2.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln51_reg_290.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln51_1_reg_294.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln57_reg_298.read())) || 
         (esl_seteq<1,1,1>(grp_fu_141_p2.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
          esl_seteq<1,1,1>(icmp_ln36_reg_259.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, or_ln39_reg_273.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
          ((esl_seteq<1,1,1>(ap_const_lv1_0, grp_fu_141_p2.read()) && 
            esl_seteq<1,1,1>(icmp_ln36_reg_259.read(), ap_const_lv1_1)) || 
           (esl_seteq<1,1,1>(ap_const_lv1_1, or_ln39_reg_273.read()) && 
            esl_seteq<1,1,1>(icmp_ln36_reg_259.read(), ap_const_lv1_1)))))) {
        plevel_we0 = ap_const_logic_1;
    } else {
        plevel_we0 = ap_const_logic_0;
    }
}

void resolveResolved::thread_sext_ln36_fu_157_p1() {
    sext_ln36_fu_157_p1 = esl_sext<64,32>(j_1_reg_111.read());
}

void resolveResolved::thread_sext_ln39_fu_189_p1() {
    sext_ln39_fu_189_p1 = esl_sext<64,32>(j_fu_173_p2.read());
}

void resolveResolved::thread_sext_ln51_fu_147_p0() {
    sext_ln51_fu_147_p0 = eos.read();
}

void resolveResolved::thread_sext_ln51_fu_147_p1() {
    sext_ln51_fu_147_p1 = esl_sext<64,32>(sext_ln51_fu_147_p0.read());
}

void resolveResolved::thread_sext_ln57_fu_204_p1() {
    sext_ln57_fu_204_p1 = esl_sext<64,32>(j1_0_reg_131.read());
}

void resolveResolved::thread_xor_ln39_fu_167_p2() {
    xor_ln39_fu_167_p2 = (icmp_ln39_fu_162_p2.read() ^ ap_const_lv1_1);
}

void resolveResolved::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln34_fu_152_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(grp_fu_141_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 16 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && (((esl_seteq<1,1,1>(ap_const_lv1_0, grp_fu_141_p2.read()) && 
    esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln51_fu_194_p2.read())) || 
   (esl_seteq<1,1,1>(ap_const_lv1_1, or_ln39_reg_273.read()) && 
    esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln51_fu_194_p2.read()))) || 
  (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln36_reg_259.read()) && 
   esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln51_fu_194_p2.read()))))) {
                ap_NS_fsm = ap_ST_fsm_state8;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && (((esl_seteq<1,1,1>(ap_const_lv1_0, grp_fu_141_p2.read()) && 
    esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln51_fu_194_p2.read())) || 
   (esl_seteq<1,1,1>(ap_const_lv1_1, or_ln39_reg_273.read()) && 
    esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln51_fu_194_p2.read()))) || 
  (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln36_reg_259.read()) && 
   esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln51_fu_194_p2.read()))))) {
                ap_NS_fsm = ap_ST_fsm_state6;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 32 : 
            if ((esl_seteq<1,1,1>(grp_fu_141_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()))) {
                ap_NS_fsm = ap_ST_fsm_state7;
            } else {
                ap_NS_fsm = ap_ST_fsm_state8;
            }
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && (((esl_seteq<1,1,1>(ap_const_lv1_0, grp_fu_141_p2.read()) || 
    esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln57_reg_298.read())) || 
   esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln51_1_reg_294.read())) || 
  esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln51_reg_290.read())))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state7;
            }
            break;
        default : 
            ap_NS_fsm = "XXXXXXXX";
            break;
    }
}

void resolveResolved::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"baselevel\" :  \"" << baselevel.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"pcls_address0\" :  \"" << pcls_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"pcls_ce0\" :  \"" << pcls_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"pcls_q0\" :  \"" << pcls_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"plevel_address0\" :  \"" << plevel_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"plevel_ce0\" :  \"" << plevel_ce0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"plevel_we0\" :  \"" << plevel_we0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"plevel_d0\" :  \"" << plevel_d0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"sos\" :  \"" << sos.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"eos\" :  \"" << eos.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

