// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _resolveResolved_HH_
#define _resolveResolved_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct resolveResolved : public sc_module {
    // Port declarations 16
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<32> > baselevel;
    sc_out< sc_lv<8> > pcls_address0;
    sc_out< sc_logic > pcls_ce0;
    sc_in< sc_lv<32> > pcls_q0;
    sc_out< sc_lv<8> > plevel_address0;
    sc_out< sc_logic > plevel_ce0;
    sc_out< sc_logic > plevel_we0;
    sc_out< sc_lv<32> > plevel_d0;
    sc_in< sc_lv<32> > sos;
    sc_in< sc_lv<32> > eos;


    // Module declarations
    resolveResolved(sc_module_name name);
    SC_HAS_PROCESS(resolveResolved);

    ~resolveResolved();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    sc_signal< sc_lv<8> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<8> > pcls_addr_2_reg_241;
    sc_signal< sc_lv<64> > sext_ln36_fu_157_p1;
    sc_signal< sc_lv<64> > sext_ln36_reg_249;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<1> > icmp_ln34_fu_152_p2;
    sc_signal< sc_lv<1> > grp_fu_141_p2;
    sc_signal< sc_lv<1> > icmp_ln36_reg_259;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<1> > xor_ln39_fu_167_p2;
    sc_signal< sc_lv<1> > xor_ln39_reg_263;
    sc_signal< sc_lv<32> > j_fu_173_p2;
    sc_signal< sc_lv<32> > j_reg_268;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<1> > or_ln39_fu_184_p2;
    sc_signal< sc_lv<1> > or_ln39_reg_273;
    sc_signal< sc_lv<64> > sext_ln39_fu_189_p1;
    sc_signal< sc_lv<64> > sext_ln39_reg_277;
    sc_signal< sc_lv<1> > icmp_ln51_fu_194_p2;
    sc_signal< sc_lv<1> > icmp_ln51_reg_290;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<1> > icmp_ln51_1_reg_294;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<1> > icmp_ln57_fu_199_p2;
    sc_signal< sc_lv<1> > icmp_ln57_reg_298;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<64> > sext_ln57_fu_204_p1;
    sc_signal< sc_lv<64> > sext_ln57_reg_302;
    sc_signal< sc_lv<32> > j_2_fu_209_p2;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<32> > i_fu_215_p2;
    sc_signal< sc_lv<32> > j_1_reg_111;
    sc_signal< sc_lv<32> > j_0_in_reg_121;
    sc_signal< sc_lv<32> > j1_0_reg_131;
    sc_signal< sc_lv<64> > sext_ln51_fu_147_p1;
    sc_signal< sc_lv<32> > sext_ln51_fu_147_p0;
    sc_signal< sc_lv<32> > icmp_ln34_fu_152_p1;
    sc_signal< sc_lv<1> > icmp_ln39_fu_162_p2;
    sc_signal< sc_lv<1> > icmp_ln39_1_fu_179_p2;
    sc_signal< sc_lv<32> > icmp_ln51_fu_194_p1;
    sc_signal< sc_lv<8> > ap_NS_fsm;
    sc_signal< bool > ap_condition_211;
    sc_signal< bool > ap_condition_208;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<8> ap_ST_fsm_state1;
    static const sc_lv<8> ap_ST_fsm_state2;
    static const sc_lv<8> ap_ST_fsm_state3;
    static const sc_lv<8> ap_ST_fsm_state4;
    static const sc_lv<8> ap_ST_fsm_state5;
    static const sc_lv<8> ap_ST_fsm_state6;
    static const sc_lv<8> ap_ST_fsm_state7;
    static const sc_lv<8> ap_ST_fsm_state8;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_FFFFFFFF;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_condition_208();
    void thread_ap_condition_211();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_grp_fu_141_p2();
    void thread_i_fu_215_p2();
    void thread_icmp_ln34_fu_152_p1();
    void thread_icmp_ln34_fu_152_p2();
    void thread_icmp_ln39_1_fu_179_p2();
    void thread_icmp_ln39_fu_162_p2();
    void thread_icmp_ln51_fu_194_p1();
    void thread_icmp_ln51_fu_194_p2();
    void thread_icmp_ln57_fu_199_p2();
    void thread_j_2_fu_209_p2();
    void thread_j_fu_173_p2();
    void thread_or_ln39_fu_184_p2();
    void thread_pcls_address0();
    void thread_pcls_ce0();
    void thread_plevel_address0();
    void thread_plevel_ce0();
    void thread_plevel_d0();
    void thread_plevel_we0();
    void thread_sext_ln36_fu_157_p1();
    void thread_sext_ln39_fu_189_p1();
    void thread_sext_ln51_fu_147_p0();
    void thread_sext_ln51_fu_147_p1();
    void thread_sext_ln57_fu_204_p1();
    void thread_xor_ln39_fu_167_p2();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
