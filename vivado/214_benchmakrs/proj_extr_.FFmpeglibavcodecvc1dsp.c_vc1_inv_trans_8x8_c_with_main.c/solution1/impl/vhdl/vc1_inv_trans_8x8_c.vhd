-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2019.1
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity vc1_inv_trans_8x8_c is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    block_r_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    block_r_ce0 : OUT STD_LOGIC;
    block_r_we0 : OUT STD_LOGIC;
    block_r_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    block_r_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    block_r_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
    block_r_ce1 : OUT STD_LOGIC;
    block_r_we1 : OUT STD_LOGIC;
    block_r_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    block_r_q1 : IN STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of vc1_inv_trans_8x8_c is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "vc1_inv_trans_8x8_c,hls_ip_2019_1,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7k160t-fbg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.328000,HLS_SYN_LAT=146,HLS_SYN_TPT=none,HLS_SYN_MEM=2,HLS_SYN_DSP=0,HLS_SYN_FF=1330,HLS_SYN_LUT=3747,HLS_VERSION=2019_1}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (18 downto 0) := "0000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (18 downto 0) := "0000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (18 downto 0) := "0000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (18 downto 0) := "0000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (18 downto 0) := "0000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (18 downto 0) := "0000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (18 downto 0) := "0001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (18 downto 0) := "0010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (18 downto 0) := "0100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (18 downto 0) := "1000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv4_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv7_8 : STD_LOGIC_VECTOR (6 downto 0) := "0001000";
    constant ap_const_lv6_28 : STD_LOGIC_VECTOR (5 downto 0) := "101000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv6_2 : STD_LOGIC_VECTOR (5 downto 0) := "000010";
    constant ap_const_lv6_3 : STD_LOGIC_VECTOR (5 downto 0) := "000011";
    constant ap_const_lv6_4 : STD_LOGIC_VECTOR (5 downto 0) := "000100";
    constant ap_const_lv6_5 : STD_LOGIC_VECTOR (5 downto 0) := "000101";
    constant ap_const_lv6_6 : STD_LOGIC_VECTOR (5 downto 0) := "000110";
    constant ap_const_lv6_7 : STD_LOGIC_VECTOR (5 downto 0) := "000111";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal ap_CS_fsm : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal src_0_rec_cast17_fu_381_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal src_0_rec_cast17_reg_1729 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal temp_addr_reg_1734 : STD_LOGIC_VECTOR (5 downto 0);
    signal i_fu_401_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal i_reg_1747 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln24_fu_395_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_5_fu_420_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal empty_5_reg_1757 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln50_fu_424_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln50_reg_1768 : STD_LOGIC_VECTOR (6 downto 0);
    signal block_load_reg_1773 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal block_load_1_reg_1779 : STD_LOGIC_VECTOR (31 downto 0);
    signal block_load_2_reg_1795 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal block_load_3_reg_1802 : STD_LOGIC_VECTOR (31 downto 0);
    signal xor_ln35_fu_452_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal xor_ln35_reg_1809 : STD_LOGIC_VECTOR (3 downto 0);
    signal block_load_4_reg_1824 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal block_load_5_reg_1833 : STD_LOGIC_VECTOR (31 downto 0);
    signal t1_fu_512_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal t1_reg_1852 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal t2_fu_540_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal t2_reg_1858 : STD_LOGIC_VECTOR (31 downto 0);
    signal t3_fu_567_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal t3_reg_1864 : STD_LOGIC_VECTOR (31 downto 0);
    signal t4_fu_594_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal t4_reg_1870 : STD_LOGIC_VECTOR (31 downto 0);
    signal t1_1_fu_645_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal t1_1_reg_1876 : STD_LOGIC_VECTOR (31 downto 0);
    signal t2_1_fu_697_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal t2_1_reg_1882 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln37_2_fu_719_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln37_2_reg_1888 : STD_LOGIC_VECTOR (31 downto 0);
    signal t3_1_fu_743_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal t3_1_reg_1893 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln38_fu_771_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln38_reg_1899 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln2_reg_1904 : STD_LOGIC_VECTOR (28 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal trunc_ln3_reg_1909 : STD_LOGIC_VECTOR (28 downto 0);
    signal trunc_ln4_reg_1914 : STD_LOGIC_VECTOR (28 downto 0);
    signal trunc_ln5_reg_1919 : STD_LOGIC_VECTOR (28 downto 0);
    signal trunc_ln6_reg_1924 : STD_LOGIC_VECTOR (28 downto 0);
    signal trunc_ln7_reg_1929 : STD_LOGIC_VECTOR (28 downto 0);
    signal src_1_rec_cast14_fu_1002_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal src_1_rec_cast14_reg_1934 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal block_addr_1_reg_1939 : STD_LOGIC_VECTOR (5 downto 0);
    signal i_1_fu_1018_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal i_1_reg_1952 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln56_fu_1032_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln56_reg_1957 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln55_fu_1012_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal temp_q0 : STD_LOGIC_VECTOR (28 downto 0);
    signal temp_load_reg_1967 : STD_LOGIC_VECTOR (28 downto 0);
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal temp_q1 : STD_LOGIC_VECTOR (28 downto 0);
    signal temp_load_1_reg_1972 : STD_LOGIC_VECTOR (28 downto 0);
    signal zext_ln58_fu_1045_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln58_reg_1977 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln58_1_fu_1054_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln58_1_reg_1987 : STD_LOGIC_VECTOR (63 downto 0);
    signal t3_2_fu_1097_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal t3_2_reg_1997 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal t4_2_fu_1141_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal t4_2_reg_2003 : STD_LOGIC_VECTOR (31 downto 0);
    signal xor_ln66_fu_1147_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal xor_ln66_reg_2009 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln66_fu_1153_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln66_reg_2014 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln66_1_fu_1162_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln66_1_reg_2024 : STD_LOGIC_VECTOR (63 downto 0);
    signal temp_load_4_reg_2034 : STD_LOGIC_VECTOR (28 downto 0);
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal trunc_ln66_fu_1167_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal trunc_ln66_reg_2041 : STD_LOGIC_VECTOR (27 downto 0);
    signal temp_load_5_reg_2046 : STD_LOGIC_VECTOR (28 downto 0);
    signal trunc_ln66_1_fu_1171_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal trunc_ln66_1_reg_2053 : STD_LOGIC_VECTOR (27 downto 0);
    signal zext_ln66_2_fu_1180_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln66_2_reg_2058 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln66_3_fu_1188_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln66_3_reg_2068 : STD_LOGIC_VECTOR (63 downto 0);
    signal t1_2_fu_1231_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal t1_2_reg_2078 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal t2_2_fu_1269_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal t2_2_reg_2084 : STD_LOGIC_VECTOR (31 downto 0);
    signal t1_3_fu_1347_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal t1_3_reg_2090 : STD_LOGIC_VECTOR (31 downto 0);
    signal t2_3_fu_1414_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal t2_3_reg_2096 : STD_LOGIC_VECTOR (31 downto 0);
    signal t3_3_fu_1475_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal t3_3_reg_2102 : STD_LOGIC_VECTOR (31 downto 0);
    signal t4_3_fu_1529_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal t4_3_reg_2108 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln8_reg_2114 : STD_LOGIC_VECTOR (24 downto 0);
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal trunc_ln11_reg_2119 : STD_LOGIC_VECTOR (24 downto 0);
    signal trunc_ln12_reg_2124 : STD_LOGIC_VECTOR (24 downto 0);
    signal trunc_ln13_reg_2129 : STD_LOGIC_VECTOR (24 downto 0);
    signal trunc_ln14_reg_2134 : STD_LOGIC_VECTOR (24 downto 0);
    signal trunc_ln15_reg_2139 : STD_LOGIC_VECTOR (24 downto 0);
    signal temp_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal temp_ce0 : STD_LOGIC;
    signal temp_we0 : STD_LOGIC;
    signal temp_d0 : STD_LOGIC_VECTOR (28 downto 0);
    signal temp_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal temp_ce1 : STD_LOGIC;
    signal temp_we1 : STD_LOGIC;
    signal temp_d1 : STD_LOGIC_VECTOR (28 downto 0);
    signal src_0_rec_reg_346 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal dst_0_rec_reg_358 : STD_LOGIC_VECTOR (6 downto 0);
    signal src_1_rec_reg_369 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state19 : signal is "none";
    signal dst_0_rec_cast_fu_390_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal src_0_rec_cast_fu_385_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln25_fu_415_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln27_fu_438_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln27_1_fu_447_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln35_fu_458_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln35_1_fu_467_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln35_2_fu_477_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln35_3_fu_485_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln41_fu_845_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln42_fu_947_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal zext_ln43_fu_957_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln44_fu_967_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal zext_ln45_fu_977_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln46_fu_987_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln47_fu_997_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal src_1_rec_cast_fu_1006_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal ap_CS_fsm_state18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state18 : signal is "none";
    signal sext_ln72_fu_1581_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln73_fu_1601_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln71_fu_1705_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln74_fu_1709_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln75_fu_1713_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln76_fu_1717_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln77_fu_1721_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln78_fu_1725_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln_fu_407_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal or_ln1_fu_430_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal sext_ln27_fu_443_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal sext_ln35_fu_463_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln35_fu_472_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal sext_ln35_1_fu_482_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln25_fu_490_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln25_fu_494_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln25_1_fu_500_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln25_fu_506_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln26_fu_518_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln26_fu_522_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln26_1_fu_528_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln26_1_fu_534_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln27_1_fu_551_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln27_2_fu_556_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln27_fu_561_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln27_fu_546_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln28_fu_573_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln28_1_fu_578_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln28_fu_583_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln28_2_fu_589_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln35_1_fu_605_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln35_fu_610_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln35_3_fu_621_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln35_2_fu_615_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln35_fu_600_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln35_2_fu_633_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln35_1_fu_627_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln35_3_fu_639_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln36_2_fu_667_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln36_1_fu_673_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln36_fu_651_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln36_fu_656_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln36_3_fu_685_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln36_1_fu_661_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln36_4_fu_691_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln36_2_fu_679_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln37_fu_703_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln37_fu_708_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln37_fu_725_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln37_1_fu_731_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln37_1_fu_713_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln37_1_fu_737_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln38_1_fu_749_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln38_fu_754_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln38_2_fu_765_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln38_1_fu_760_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln38_fu_793_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln38_1_fu_798_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal t5_fu_777_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln40_fu_808_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal t6_fu_781_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln41_fu_824_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln41_fu_840_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal t7_fu_785_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln42_fu_850_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal t4_1_fu_803_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal t8_fu_789_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln43_fu_865_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln44_fu_881_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln45_fu_897_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln46_fu_912_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln47_fu_927_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln42_fu_942_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal or_ln43_fu_952_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal or_ln44_fu_962_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal or_ln45_fu_972_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal or_ln46_fu_982_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal or_ln47_fu_992_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal or_ln2_fu_1024_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal or_ln3_fu_1037_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal sext_ln58_fu_1050_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln58_fu_1059_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal shl_ln58_2_fu_1079_p3 : STD_LOGIC_VECTOR (29 downto 0);
    signal shl_ln58_1_fu_1071_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln58_1_fu_1087_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln_fu_1063_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln58_fu_1091_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln59_2_fu_1111_p3 : STD_LOGIC_VECTOR (29 downto 0);
    signal shl_ln59_1_fu_1103_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln59_fu_1119_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln59_fu_1129_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal sub_ln59_fu_1123_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln1_fu_1133_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln66_1_fu_1158_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal trunc_ln66_fu_1167_p0 : STD_LOGIC_VECTOR (28 downto 0);
    signal trunc_ln66_1_fu_1171_p0 : STD_LOGIC_VECTOR (28 downto 0);
    signal add_ln66_fu_1175_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal sext_ln66_4_fu_1185_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal sext_ln56_fu_1193_p1 : STD_LOGIC_VECTOR (29 downto 0);
    signal sext_ln56_1_fu_1196_p1 : STD_LOGIC_VECTOR (29 downto 0);
    signal add_ln56_fu_1199_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal trunc_ln56_fu_1205_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal shl_ln8_fu_1209_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln56_1_fu_1217_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln56_fu_1225_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln57_fu_1237_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal trunc_ln57_fu_1243_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal shl_ln9_fu_1247_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln57_1_fu_1255_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln57_1_fu_1263_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln66_2_fu_1288_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln66_2_fu_1285_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln66_3_fu_1301_p0 : STD_LOGIC_VECTOR (28 downto 0);
    signal shl_ln66_3_fu_1305_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal sext_ln66_5_fu_1313_p0 : STD_LOGIC_VECTOR (28 downto 0);
    signal shl_ln2_fu_1317_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal shl_ln2_fu_1317_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal sext_ln66_3_fu_1301_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln66_fu_1295_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln66_3_fu_1305_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln66_6_fu_1325_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln66_2_fu_1335_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln66_1_fu_1278_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln66_3_fu_1341_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln66_1_fu_1329_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln66_fu_1275_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln3_fu_1359_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal trunc_ln67_fu_1370_p0 : STD_LOGIC_VECTOR (28 downto 0);
    signal trunc_ln67_fu_1370_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal shl_ln67_2_fu_1382_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal shl_ln67_2_fu_1382_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln67_1_fu_1390_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln66_5_fu_1313_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln67_fu_1353_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln67_fu_1366_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln67_3_fu_1402_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln67_1_fu_1374_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln67_2_fu_1396_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln67_4_fu_1408_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln4_fu_1420_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln68_1_fu_1433_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal shl_ln68_1_fu_1433_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal trunc_ln68_fu_1445_p0 : STD_LOGIC_VECTOR (28 downto 0);
    signal trunc_ln68_fu_1445_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal shl_ln68_2_fu_1449_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln68_fu_1427_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln68_1_fu_1463_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln68_fu_1457_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln68_1_fu_1469_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln68_fu_1441_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln5_fu_1481_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal shl_ln69_1_fu_1492_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln69_fu_1499_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln69_1_fu_1505_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln69_2_fu_1511_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln69_fu_1517_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln69_fu_1488_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln69_1_fu_1523_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal t5_1_fu_1535_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln71_fu_1551_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal t6_1_fu_1539_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln72_fu_1566_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln9_fu_1571_p4 : STD_LOGIC_VECTOR (24 downto 0);
    signal t7_1_fu_1543_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln73_fu_1586_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln10_fu_1591_p4 : STD_LOGIC_VECTOR (24 downto 0);
    signal t8_1_fu_1547_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln74_fu_1606_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln75_fu_1621_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln75_fu_1627_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln76_fu_1642_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln76_fu_1648_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln77_fu_1663_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln77_fu_1669_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln78_fu_1684_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln78_fu_1690_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (18 downto 0);

    component vc1_inv_trans_8x8_c_temp IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (28 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (28 downto 0);
        address1 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (28 downto 0);
        q1 : OUT STD_LOGIC_VECTOR (28 downto 0) );
    end component;



begin
    temp_U : component vc1_inv_trans_8x8_c_temp
    generic map (
        DataWidth => 29,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => temp_address0,
        ce0 => temp_ce0,
        we0 => temp_we0,
        d0 => temp_d0,
        q0 => temp_q0,
        address1 => temp_address1,
        ce1 => temp_ce1,
        we1 => temp_we1,
        d1 => temp_d1,
        q1 => temp_q1);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    dst_0_rec_reg_358_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
                dst_0_rec_reg_358 <= add_ln50_reg_1768;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                dst_0_rec_reg_358 <= ap_const_lv7_0;
            end if; 
        end if;
    end process;

    src_0_rec_reg_346_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
                src_0_rec_reg_346 <= i_reg_1747;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                src_0_rec_reg_346 <= ap_const_lv4_0;
            end if; 
        end if;
    end process;

    src_1_rec_reg_369_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln24_fu_395_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                src_1_rec_reg_369 <= ap_const_lv4_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
                src_1_rec_reg_369 <= i_1_reg_1952;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
                add_ln38_reg_1899 <= add_ln38_fu_771_p2;
                    shl_ln37_2_reg_1888(31 downto 4) <= shl_ln37_2_fu_719_p2(31 downto 4);
                t1_1_reg_1876 <= t1_1_fu_645_p2;
                    t1_reg_1852(31 downto 2) <= t1_fu_512_p2(31 downto 2);
                t2_1_reg_1882 <= t2_1_fu_697_p2;
                    t2_reg_1858(31 downto 2) <= t2_fu_540_p2(31 downto 2);
                t3_1_reg_1893 <= t3_1_fu_743_p2;
                    t3_reg_1864(31 downto 1) <= t3_fu_567_p2(31 downto 1);
                    t4_reg_1870(31 downto 1) <= t4_fu_594_p2(31 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln24_fu_395_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                add_ln50_reg_1768 <= add_ln50_fu_424_p2;
                empty_5_reg_1757 <= empty_5_fu_420_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state11)) then
                    block_addr_1_reg_1939(3 downto 0) <= src_1_rec_cast_fu_1006_p1(6 - 1 downto 0)(3 downto 0);
                i_1_reg_1952 <= i_1_fu_1018_p2;
                    src_1_rec_cast14_reg_1934(3 downto 0) <= src_1_rec_cast14_fu_1002_p1(3 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                block_load_1_reg_1779 <= block_r_q1;
                block_load_reg_1773 <= block_r_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                block_load_2_reg_1795 <= block_r_q0;
                block_load_3_reg_1802 <= block_r_q1;
                xor_ln35_reg_1809 <= xor_ln35_fu_452_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                block_load_4_reg_1824 <= block_r_q0;
                block_load_5_reg_1833 <= block_r_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                i_reg_1747 <= i_fu_401_p2;
                    src_0_rec_cast17_reg_1729(3 downto 0) <= src_0_rec_cast17_fu_381_p1(3 downto 0);
                temp_addr_reg_1734 <= dst_0_rec_cast_fu_390_p1(6 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state15)) then
                    t1_2_reg_2078(31 downto 2) <= t1_2_fu_1231_p2(31 downto 2);
                t1_3_reg_2090 <= t1_3_fu_1347_p2;
                    t2_2_reg_2084(31 downto 2) <= t2_2_fu_1269_p2(31 downto 2);
                t2_3_reg_2096 <= t2_3_fu_1414_p2;
                t3_3_reg_2102 <= t3_3_fu_1475_p2;
                t4_3_reg_2108 <= t4_3_fu_1529_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state13)) then
                    t3_2_reg_1997(31 downto 1) <= t3_2_fu_1097_p2(31 downto 1);
                    t4_2_reg_2003(31 downto 1) <= t4_2_fu_1141_p2(31 downto 1);
                xor_ln66_reg_2009 <= xor_ln66_fu_1147_p2;
                    zext_ln66_1_reg_2024(4 downto 0) <= zext_ln66_1_fu_1162_p1(4 downto 0);
                    zext_ln66_reg_2014(3 downto 0) <= zext_ln66_fu_1153_p1(3 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state12)) then
                temp_load_1_reg_1972 <= temp_q1;
                temp_load_reg_1967 <= temp_q0;
                    zext_ln58_1_reg_1987(3 downto 0) <= zext_ln58_1_fu_1054_p1(3 downto 0);
                    zext_ln58_reg_1977(3 downto 0) <= zext_ln58_fu_1045_p1(3 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state14)) then
                temp_load_4_reg_2034 <= temp_q0;
                temp_load_5_reg_2046 <= temp_q1;
                trunc_ln66_1_reg_2053 <= trunc_ln66_1_fu_1171_p1;
                trunc_ln66_reg_2041 <= trunc_ln66_fu_1167_p1;
                    zext_ln66_2_reg_2058(5 downto 0) <= zext_ln66_2_fu_1180_p1(5 downto 0);
                    zext_ln66_3_reg_2068(5 downto 0) <= zext_ln66_3_fu_1188_p1(5 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state16)) then
                trunc_ln11_reg_2119 <= add_ln74_fu_1606_p2(31 downto 7);
                trunc_ln12_reg_2124 <= sub_ln75_fu_1627_p2(31 downto 7);
                trunc_ln13_reg_2129 <= sub_ln76_fu_1648_p2(31 downto 7);
                trunc_ln14_reg_2134 <= sub_ln77_fu_1669_p2(31 downto 7);
                trunc_ln15_reg_2139 <= sub_ln78_fu_1690_p2(31 downto 7);
                trunc_ln8_reg_2114 <= add_ln71_fu_1551_p2(31 downto 7);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then
                trunc_ln2_reg_1904 <= add_ln42_fu_850_p2(31 downto 3);
                trunc_ln3_reg_1909 <= add_ln43_fu_865_p2(31 downto 3);
                trunc_ln4_reg_1914 <= sub_ln44_fu_881_p2(31 downto 3);
                trunc_ln5_reg_1919 <= sub_ln45_fu_897_p2(31 downto 3);
                trunc_ln6_reg_1924 <= sub_ln46_fu_912_p2(31 downto 3);
                trunc_ln7_reg_1929 <= sub_ln47_fu_927_p2(31 downto 3);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln55_fu_1012_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11))) then
                    zext_ln56_reg_1957(3 downto 0) <= zext_ln56_fu_1032_p1(3 downto 0);
            end if;
        end if;
    end process;
    src_0_rec_cast17_reg_1729(5 downto 4) <= "00";
    t1_reg_1852(1 downto 0) <= "00";
    t2_reg_1858(1 downto 0) <= "00";
    t3_reg_1864(0) <= '0';
    t4_reg_1870(0) <= '0';
    shl_ln37_2_reg_1888(3 downto 0) <= "0000";
    src_1_rec_cast14_reg_1934(5 downto 4) <= "00";
    block_addr_1_reg_1939(5 downto 4) <= "00";
    zext_ln56_reg_1957(63 downto 4) <= "000000000000000000000000000000000000000000000000000000000010";
    zext_ln58_reg_1977(63 downto 4) <= "000000000000000000000000000000000000000000000000000000000001";
    zext_ln58_1_reg_1987(63 downto 4) <= "000000000000000000000000000000000000000000000000000000000011";
    t3_2_reg_1997(0) <= '0';
    t4_2_reg_2003(0) <= '0';
    zext_ln66_reg_2014(63 downto 4) <= "000000000000000000000000000000000000000000000000000000000000";
    zext_ln66_1_reg_2024(63 downto 5) <= "00000000000000000000000000000000000000000000000000000000000";
    zext_ln66_2_reg_2058(63 downto 6) <= "0000000000000000000000000000000000000000000000000000000000";
    zext_ln66_3_reg_2068(63 downto 6) <= "0000000000000000000000000000000000000000000000000000000000";
    t1_2_reg_2078(1 downto 0) <= "00";
    t2_2_reg_2084(1 downto 0) <= "00";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state2, icmp_ln24_fu_395_p2, ap_CS_fsm_state11, icmp_ln55_fu_1012_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((icmp_ln24_fu_395_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state11;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state2;
            when ap_ST_fsm_state11 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state11) and (icmp_ln55_fu_1012_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state12;
                end if;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state16;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state18;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state19;
            when ap_ST_fsm_state19 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    add_ln25_fu_490_p2 <= std_logic_vector(unsigned(block_load_1_reg_1779) + unsigned(block_load_reg_1773));
    add_ln35_1_fu_627_p2 <= std_logic_vector(unsigned(sub_ln35_fu_610_p2) + unsigned(block_r_q0));
    add_ln35_2_fu_633_p2 <= std_logic_vector(unsigned(shl_ln35_3_fu_621_p2) + unsigned(shl_ln35_2_fu_615_p2));
    add_ln35_3_fu_639_p2 <= std_logic_vector(unsigned(shl_ln35_fu_600_p2) + unsigned(add_ln35_2_fu_633_p2));
    add_ln35_fu_472_p2 <= std_logic_vector(signed(ap_const_lv6_28) + signed(src_0_rec_cast17_reg_1729));
    add_ln37_1_fu_737_p2 <= std_logic_vector(unsigned(sub_ln37_fu_725_p2) + unsigned(sub_ln37_1_fu_731_p2));
    add_ln37_fu_708_p2 <= std_logic_vector(unsigned(shl_ln37_fu_703_p2) + unsigned(block_load_4_reg_1824));
    add_ln38_1_fu_798_p2 <= std_logic_vector(unsigned(shl_ln38_fu_793_p2) + unsigned(add_ln38_reg_1899));
    add_ln38_fu_771_p2 <= std_logic_vector(unsigned(sub_ln38_2_fu_765_p2) + unsigned(sub_ln38_1_fu_760_p2));
    add_ln40_fu_808_p2 <= std_logic_vector(unsigned(t1_1_reg_1876) + unsigned(t5_fu_777_p2));
    add_ln41_fu_824_p2 <= std_logic_vector(unsigned(t2_1_reg_1882) + unsigned(t6_fu_781_p2));
    add_ln42_fu_850_p2 <= std_logic_vector(unsigned(t3_1_reg_1893) + unsigned(t7_fu_785_p2));
    add_ln43_fu_865_p2 <= std_logic_vector(unsigned(t4_1_fu_803_p2) + unsigned(t8_fu_789_p2));
    add_ln50_fu_424_p2 <= std_logic_vector(unsigned(ap_const_lv7_8) + unsigned(dst_0_rec_reg_358));
    add_ln56_fu_1199_p2 <= std_logic_vector(signed(sext_ln56_fu_1193_p1) + signed(sext_ln56_1_fu_1196_p1));
    add_ln66_1_fu_1329_p2 <= std_logic_vector(signed(sext_ln66_3_fu_1301_p1) + signed(sub_ln66_fu_1295_p2));
    add_ln66_2_fu_1335_p2 <= std_logic_vector(unsigned(shl_ln66_3_fu_1305_p3) + unsigned(sext_ln66_6_fu_1325_p1));
    add_ln66_3_fu_1341_p2 <= std_logic_vector(unsigned(add_ln66_2_fu_1335_p2) + unsigned(shl_ln66_1_fu_1278_p3));
    add_ln66_fu_1175_p2 <= std_logic_vector(signed(ap_const_lv6_28) + signed(src_1_rec_cast14_reg_1934));
    add_ln68_1_fu_1469_p2 <= std_logic_vector(unsigned(sub_ln68_1_fu_1463_p2) + unsigned(sub_ln68_fu_1457_p2));
    add_ln68_fu_1427_p2 <= std_logic_vector(signed(sext_ln66_fu_1275_p1) + signed(shl_ln4_fu_1420_p3));
    add_ln69_1_fu_1523_p2 <= std_logic_vector(unsigned(add_ln69_fu_1517_p2) + unsigned(sext_ln69_fu_1488_p1));
    add_ln69_fu_1517_p2 <= std_logic_vector(unsigned(sub_ln69_1_fu_1505_p2) + unsigned(sub_ln69_2_fu_1511_p2));
    add_ln71_fu_1551_p2 <= std_logic_vector(unsigned(t5_1_fu_1535_p2) + unsigned(t1_3_reg_2090));
    add_ln72_fu_1566_p2 <= std_logic_vector(unsigned(t6_1_fu_1539_p2) + unsigned(t2_3_reg_2096));
    add_ln73_fu_1586_p2 <= std_logic_vector(unsigned(t7_1_fu_1543_p2) + unsigned(t3_3_reg_2102));
    add_ln74_fu_1606_p2 <= std_logic_vector(unsigned(t8_1_fu_1547_p2) + unsigned(t4_3_reg_2108));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state16 <= ap_CS_fsm(15);
    ap_CS_fsm_state17 <= ap_CS_fsm(16);
    ap_CS_fsm_state18 <= ap_CS_fsm(17);
    ap_CS_fsm_state19 <= ap_CS_fsm(18);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);

    ap_done_assign_proc : process(ap_CS_fsm_state11, icmp_ln55_fu_1012_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state11) and (icmp_ln55_fu_1012_p2 = ap_const_lv1_1))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state11, icmp_ln55_fu_1012_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state11) and (icmp_ln55_fu_1012_p2 = ap_const_lv1_1))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    block_r_address0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, block_addr_1_reg_1939, zext_ln56_reg_1957, zext_ln58_1_reg_1987, zext_ln66_reg_2014, ap_CS_fsm_state16, ap_CS_fsm_state19, src_0_rec_cast_fu_385_p1, zext_ln27_fu_438_p1, zext_ln35_fu_458_p1, zext_ln35_2_fu_477_p1, ap_CS_fsm_state17, ap_CS_fsm_state18)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            block_r_address0 <= zext_ln58_1_reg_1987(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            block_r_address0 <= zext_ln56_reg_1957(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            block_r_address0 <= block_addr_1_reg_1939;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            block_r_address0 <= zext_ln66_reg_2014(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            block_r_address0 <= zext_ln35_2_fu_477_p1(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            block_r_address0 <= zext_ln35_fu_458_p1(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            block_r_address0 <= zext_ln27_fu_438_p1(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            block_r_address0 <= src_0_rec_cast_fu_385_p1(6 - 1 downto 0);
        else 
            block_r_address0 <= "XXXXXX";
        end if; 
    end process;


    block_r_address1_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, zext_ln58_reg_1977, zext_ln66_1_reg_2024, zext_ln66_2_reg_2058, zext_ln66_3_reg_2068, ap_CS_fsm_state16, ap_CS_fsm_state19, zext_ln25_fu_415_p1, zext_ln27_1_fu_447_p1, zext_ln35_1_fu_467_p1, zext_ln35_3_fu_485_p1, ap_CS_fsm_state17, ap_CS_fsm_state18)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            block_r_address1 <= zext_ln66_3_reg_2068(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            block_r_address1 <= zext_ln66_2_reg_2058(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            block_r_address1 <= zext_ln66_1_reg_2024(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            block_r_address1 <= zext_ln58_reg_1977(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            block_r_address1 <= zext_ln35_3_fu_485_p1(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            block_r_address1 <= zext_ln35_1_fu_467_p1(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            block_r_address1 <= zext_ln27_1_fu_447_p1(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            block_r_address1 <= zext_ln25_fu_415_p1(6 - 1 downto 0);
        else 
            block_r_address1 <= "XXXXXX";
        end if; 
    end process;


    block_r_ce0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state16, ap_CS_fsm_state19, ap_CS_fsm_state17, ap_CS_fsm_state18)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            block_r_ce0 <= ap_const_logic_1;
        else 
            block_r_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    block_r_ce1_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state16, ap_CS_fsm_state19, ap_CS_fsm_state17, ap_CS_fsm_state18)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            block_r_ce1 <= ap_const_logic_1;
        else 
            block_r_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    block_r_d0_assign_proc : process(ap_CS_fsm_state16, ap_CS_fsm_state19, ap_CS_fsm_state17, ap_CS_fsm_state18, sext_ln72_fu_1581_p1, sext_ln71_fu_1705_p1, sext_ln75_fu_1713_p1, sext_ln77_fu_1721_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            block_r_d0 <= sext_ln77_fu_1721_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            block_r_d0 <= sext_ln75_fu_1713_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            block_r_d0 <= sext_ln71_fu_1705_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            block_r_d0 <= sext_ln72_fu_1581_p1;
        else 
            block_r_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    block_r_d1_assign_proc : process(ap_CS_fsm_state16, ap_CS_fsm_state19, ap_CS_fsm_state17, ap_CS_fsm_state18, sext_ln73_fu_1601_p1, sext_ln74_fu_1709_p1, sext_ln76_fu_1717_p1, sext_ln78_fu_1725_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            block_r_d1 <= sext_ln78_fu_1725_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            block_r_d1 <= sext_ln76_fu_1717_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            block_r_d1 <= sext_ln74_fu_1709_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            block_r_d1 <= sext_ln73_fu_1601_p1;
        else 
            block_r_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    block_r_we0_assign_proc : process(ap_CS_fsm_state16, ap_CS_fsm_state19, ap_CS_fsm_state17, ap_CS_fsm_state18)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state16))) then 
            block_r_we0 <= ap_const_logic_1;
        else 
            block_r_we0 <= ap_const_logic_0;
        end if; 
    end process;


    block_r_we1_assign_proc : process(ap_CS_fsm_state16, ap_CS_fsm_state19, ap_CS_fsm_state17, ap_CS_fsm_state18)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state16))) then 
            block_r_we1 <= ap_const_logic_1;
        else 
            block_r_we1 <= ap_const_logic_0;
        end if; 
    end process;

    dst_0_rec_cast_fu_390_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(dst_0_rec_reg_358),64));
    empty_5_fu_420_p1 <= dst_0_rec_reg_358(6 - 1 downto 0);
    i_1_fu_1018_p2 <= std_logic_vector(unsigned(src_1_rec_reg_369) + unsigned(ap_const_lv4_1));
    i_fu_401_p2 <= std_logic_vector(unsigned(src_0_rec_reg_346) + unsigned(ap_const_lv4_1));
    icmp_ln24_fu_395_p2 <= "1" when (src_0_rec_reg_346 = ap_const_lv4_8) else "0";
    icmp_ln55_fu_1012_p2 <= "1" when (src_1_rec_reg_369 = ap_const_lv4_8) else "0";
    or_ln1_fu_430_p3 <= (ap_const_lv1_1 & src_0_rec_reg_346);
    or_ln2_fu_1024_p3 <= (ap_const_lv2_2 & src_1_rec_reg_369);
    or_ln3_fu_1037_p3 <= (ap_const_lv1_1 & src_1_rec_reg_369);
    or_ln41_fu_840_p2 <= (empty_5_reg_1757 or ap_const_lv6_1);
    or_ln42_fu_942_p2 <= (empty_5_reg_1757 or ap_const_lv6_2);
    or_ln43_fu_952_p2 <= (empty_5_reg_1757 or ap_const_lv6_3);
    or_ln44_fu_962_p2 <= (empty_5_reg_1757 or ap_const_lv6_4);
    or_ln45_fu_972_p2 <= (empty_5_reg_1757 or ap_const_lv6_5);
    or_ln46_fu_982_p2 <= (empty_5_reg_1757 or ap_const_lv6_6);
    or_ln47_fu_992_p2 <= (empty_5_reg_1757 or ap_const_lv6_7);
    or_ln75_fu_1621_p2 <= (t8_1_fu_1547_p2 or ap_const_lv32_1);
    or_ln76_fu_1642_p2 <= (t7_1_fu_1543_p2 or ap_const_lv32_1);
    or_ln77_fu_1663_p2 <= (t6_1_fu_1539_p2 or ap_const_lv32_1);
    or_ln78_fu_1684_p2 <= (t5_1_fu_1535_p2 or ap_const_lv32_1);
    or_ln_fu_407_p3 <= (ap_const_lv2_2 & src_0_rec_reg_346);
        sext_ln27_fu_443_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(or_ln1_fu_430_p3),6));

        sext_ln35_1_fu_482_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(xor_ln35_reg_1809),6));

        sext_ln35_fu_463_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(xor_ln35_fu_452_p2),5));

        sext_ln56_1_fu_1196_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(temp_load_1_reg_1972),30));

        sext_ln56_fu_1193_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(temp_load_reg_1967),30));

        sext_ln58_1_fu_1087_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln58_2_fu_1079_p3),32));

        sext_ln58_fu_1050_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(or_ln3_fu_1037_p3),6));

        sext_ln59_fu_1119_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln59_2_fu_1111_p3),32));

        sext_ln66_1_fu_1158_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(xor_ln66_fu_1147_p2),5));

        sext_ln66_2_fu_1285_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(temp_load_5_reg_2046),32));

    sext_ln66_3_fu_1301_p0 <= temp_q0;
        sext_ln66_3_fu_1301_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln66_3_fu_1301_p0),32));

        sext_ln66_4_fu_1185_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(xor_ln66_reg_2009),6));

    sext_ln66_5_fu_1313_p0 <= temp_q1;
        sext_ln66_5_fu_1313_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln66_5_fu_1313_p0),32));

        sext_ln66_6_fu_1325_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln2_fu_1317_p3),32));

        sext_ln66_fu_1275_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(temp_load_4_reg_2034),32));

        sext_ln67_fu_1366_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln3_fu_1359_p3),32));

        sext_ln68_fu_1441_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln68_1_fu_1433_p3),32));

        sext_ln69_fu_1488_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln5_fu_1481_p3),32));

        sext_ln71_fu_1705_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln8_reg_2114),32));

        sext_ln72_fu_1581_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln9_fu_1571_p4),32));

        sext_ln73_fu_1601_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln10_fu_1591_p4),32));

        sext_ln74_fu_1709_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln11_reg_2119),32));

        sext_ln75_fu_1713_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln12_reg_2124),32));

        sext_ln76_fu_1717_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln13_reg_2129),32));

        sext_ln77_fu_1721_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln14_reg_2134),32));

        sext_ln78_fu_1725_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln15_reg_2139),32));

    shl_ln1_fu_1133_p3 <= (trunc_ln59_fu_1129_p1 & ap_const_lv4_0);
    shl_ln25_1_fu_500_p2 <= std_logic_vector(shift_left(unsigned(add_ln25_fu_490_p2),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));
    shl_ln25_fu_494_p2 <= std_logic_vector(shift_left(unsigned(add_ln25_fu_490_p2),to_integer(unsigned('0' & ap_const_lv32_4(31-1 downto 0)))));
    shl_ln26_1_fu_528_p2 <= std_logic_vector(shift_left(unsigned(sub_ln26_fu_518_p2),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));
    shl_ln26_fu_522_p2 <= std_logic_vector(shift_left(unsigned(sub_ln26_fu_518_p2),to_integer(unsigned('0' & ap_const_lv32_4(31-1 downto 0)))));
    shl_ln27_1_fu_551_p2 <= std_logic_vector(shift_left(unsigned(block_load_3_reg_1802),to_integer(unsigned('0' & ap_const_lv32_3(31-1 downto 0)))));
    shl_ln27_2_fu_556_p2 <= std_logic_vector(shift_left(unsigned(block_load_3_reg_1802),to_integer(unsigned('0' & ap_const_lv32_1(31-1 downto 0)))));
    shl_ln27_fu_546_p2 <= std_logic_vector(shift_left(unsigned(block_load_2_reg_1795),to_integer(unsigned('0' & ap_const_lv32_4(31-1 downto 0)))));
    shl_ln28_1_fu_578_p2 <= std_logic_vector(shift_left(unsigned(block_load_2_reg_1795),to_integer(unsigned('0' & ap_const_lv32_1(31-1 downto 0)))));
    shl_ln28_2_fu_589_p2 <= std_logic_vector(shift_left(unsigned(block_load_3_reg_1802),to_integer(unsigned('0' & ap_const_lv32_4(31-1 downto 0)))));
    shl_ln28_fu_573_p2 <= std_logic_vector(shift_left(unsigned(block_load_2_reg_1795),to_integer(unsigned('0' & ap_const_lv32_3(31-1 downto 0)))));
    shl_ln2_fu_1317_p1 <= temp_q1;
    shl_ln2_fu_1317_p3 <= (shl_ln2_fu_1317_p1 & ap_const_lv2_0);
    shl_ln35_1_fu_605_p2 <= std_logic_vector(shift_left(unsigned(block_load_5_reg_1833),to_integer(unsigned('0' & ap_const_lv32_4(31-1 downto 0)))));
    shl_ln35_2_fu_615_p2 <= std_logic_vector(shift_left(unsigned(block_r_q0),to_integer(unsigned('0' & ap_const_lv32_3(31-1 downto 0)))));
    shl_ln35_3_fu_621_p2 <= std_logic_vector(shift_left(unsigned(block_r_q1),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));
    shl_ln35_fu_600_p2 <= std_logic_vector(shift_left(unsigned(block_load_4_reg_1824),to_integer(unsigned('0' & ap_const_lv32_4(31-1 downto 0)))));
    shl_ln36_1_fu_661_p2 <= std_logic_vector(shift_left(unsigned(block_r_q0),to_integer(unsigned('0' & ap_const_lv32_4(31-1 downto 0)))));
    shl_ln36_2_fu_667_p2 <= std_logic_vector(shift_left(unsigned(block_r_q1),to_integer(unsigned('0' & ap_const_lv32_3(31-1 downto 0)))));
    shl_ln36_fu_656_p2 <= std_logic_vector(shift_left(unsigned(block_load_5_reg_1833),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));
    shl_ln37_1_fu_713_p2 <= std_logic_vector(shift_left(unsigned(block_r_q0),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));
    shl_ln37_2_fu_719_p2 <= std_logic_vector(shift_left(unsigned(block_r_q1),to_integer(unsigned('0' & ap_const_lv32_4(31-1 downto 0)))));
    shl_ln37_fu_703_p2 <= std_logic_vector(shift_left(unsigned(block_load_4_reg_1824),to_integer(unsigned('0' & ap_const_lv32_3(31-1 downto 0)))));
    shl_ln38_1_fu_749_p2 <= std_logic_vector(shift_left(unsigned(block_load_5_reg_1833),to_integer(unsigned('0' & ap_const_lv32_3(31-1 downto 0)))));
    shl_ln38_fu_793_p2 <= std_logic_vector(shift_left(unsigned(block_load_4_reg_1824),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));
    shl_ln3_fu_1359_p3 <= (temp_load_5_reg_2046 & ap_const_lv2_0);
    shl_ln4_fu_1420_p3 <= (temp_load_4_reg_2034 & ap_const_lv3_0);
    shl_ln56_1_fu_1217_p3 <= (add_ln56_fu_1199_p2 & ap_const_lv2_0);
    shl_ln57_1_fu_1255_p3 <= (sub_ln57_fu_1237_p2 & ap_const_lv2_0);
    shl_ln58_1_fu_1071_p3 <= (temp_q1 & ap_const_lv3_0);
    shl_ln58_2_fu_1079_p3 <= (temp_q1 & ap_const_lv1_0);
    shl_ln59_1_fu_1103_p3 <= (temp_q0 & ap_const_lv3_0);
    shl_ln59_2_fu_1111_p3 <= (temp_q0 & ap_const_lv1_0);
    shl_ln5_fu_1481_p3 <= (temp_load_4_reg_2034 & ap_const_lv2_0);
    shl_ln66_1_fu_1278_p3 <= (trunc_ln66_reg_2041 & ap_const_lv4_0);
    shl_ln66_2_fu_1288_p3 <= (trunc_ln66_1_reg_2053 & ap_const_lv4_0);
    shl_ln66_3_fu_1305_p1 <= temp_q0;
    shl_ln66_3_fu_1305_p3 <= (shl_ln66_3_fu_1305_p1 & ap_const_lv3_0);
    shl_ln67_1_fu_1374_p3 <= (trunc_ln67_fu_1370_p1 & ap_const_lv4_0);
    shl_ln67_2_fu_1382_p1 <= temp_q1;
    shl_ln67_2_fu_1382_p3 <= (shl_ln67_2_fu_1382_p1 & ap_const_lv3_0);
    shl_ln68_1_fu_1433_p1 <= temp_q0;
    shl_ln68_1_fu_1433_p3 <= (shl_ln68_1_fu_1433_p1 & ap_const_lv2_0);
    shl_ln68_2_fu_1449_p3 <= (trunc_ln68_fu_1445_p1 & ap_const_lv4_0);
    shl_ln69_1_fu_1492_p3 <= (temp_load_5_reg_2046 & ap_const_lv3_0);
    shl_ln8_fu_1209_p3 <= (trunc_ln56_fu_1205_p1 & ap_const_lv4_0);
    shl_ln9_fu_1247_p3 <= (trunc_ln57_fu_1243_p1 & ap_const_lv4_0);
    shl_ln_fu_1063_p3 <= (trunc_ln58_fu_1059_p1 & ap_const_lv4_0);
    src_0_rec_cast17_fu_381_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_0_rec_reg_346),6));
    src_0_rec_cast_fu_385_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_0_rec_reg_346),64));
    src_1_rec_cast14_fu_1002_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_1_rec_reg_369),6));
    src_1_rec_cast_fu_1006_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_1_rec_reg_369),64));
    sub_ln25_fu_506_p2 <= std_logic_vector(unsigned(shl_ln25_fu_494_p2) - unsigned(shl_ln25_1_fu_500_p2));
    sub_ln26_1_fu_534_p2 <= std_logic_vector(unsigned(shl_ln26_fu_522_p2) - unsigned(shl_ln26_1_fu_528_p2));
    sub_ln26_fu_518_p2 <= std_logic_vector(unsigned(block_load_reg_1773) - unsigned(block_load_1_reg_1779));
    sub_ln27_fu_561_p2 <= std_logic_vector(unsigned(shl_ln27_1_fu_551_p2) - unsigned(shl_ln27_2_fu_556_p2));
    sub_ln28_fu_583_p2 <= std_logic_vector(unsigned(shl_ln28_fu_573_p2) - unsigned(shl_ln28_1_fu_578_p2));
    sub_ln35_fu_610_p2 <= std_logic_vector(unsigned(shl_ln35_1_fu_605_p2) - unsigned(block_load_5_reg_1833));
    sub_ln36_1_fu_673_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(shl_ln36_2_fu_667_p2));
    sub_ln36_2_fu_679_p2 <= std_logic_vector(unsigned(sub_ln36_1_fu_673_p2) - unsigned(block_r_q1));
    sub_ln36_3_fu_685_p2 <= std_logic_vector(unsigned(sub_ln36_fu_651_p2) - unsigned(shl_ln36_fu_656_p2));
    sub_ln36_4_fu_691_p2 <= std_logic_vector(unsigned(sub_ln36_3_fu_685_p2) - unsigned(shl_ln36_1_fu_661_p2));
    sub_ln36_fu_651_p2 <= std_logic_vector(unsigned(shl_ln35_fu_600_p2) - unsigned(block_load_4_reg_1824));
    sub_ln37_1_fu_731_p2 <= std_logic_vector(unsigned(add_ln37_fu_708_p2) - unsigned(shl_ln35_1_fu_605_p2));
    sub_ln37_fu_725_p2 <= std_logic_vector(unsigned(shl_ln37_2_fu_719_p2) - unsigned(block_r_q1));
    sub_ln38_1_fu_760_p2 <= std_logic_vector(unsigned(sub_ln38_fu_754_p2) - unsigned(block_load_5_reg_1833));
    sub_ln38_2_fu_765_p2 <= std_logic_vector(unsigned(shl_ln36_1_fu_661_p2) - unsigned(block_r_q0));
    sub_ln38_fu_754_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(shl_ln38_1_fu_749_p2));
    sub_ln44_fu_881_p2 <= std_logic_vector(unsigned(t8_fu_789_p2) - unsigned(t4_1_fu_803_p2));
    sub_ln45_fu_897_p2 <= std_logic_vector(unsigned(t7_fu_785_p2) - unsigned(t3_1_reg_1893));
    sub_ln46_fu_912_p2 <= std_logic_vector(unsigned(t6_fu_781_p2) - unsigned(t2_1_reg_1882));
    sub_ln47_fu_927_p2 <= std_logic_vector(unsigned(t5_fu_777_p2) - unsigned(t1_1_reg_1876));
    sub_ln56_fu_1225_p2 <= std_logic_vector(unsigned(shl_ln8_fu_1209_p3) - unsigned(shl_ln56_1_fu_1217_p3));
    sub_ln57_1_fu_1263_p2 <= std_logic_vector(unsigned(shl_ln9_fu_1247_p3) - unsigned(shl_ln57_1_fu_1255_p3));
    sub_ln57_fu_1237_p2 <= std_logic_vector(signed(sext_ln56_fu_1193_p1) - signed(sext_ln56_1_fu_1196_p1));
    sub_ln58_fu_1091_p2 <= std_logic_vector(unsigned(shl_ln58_1_fu_1071_p3) - unsigned(sext_ln58_1_fu_1087_p1));
    sub_ln59_fu_1123_p2 <= std_logic_vector(unsigned(shl_ln59_1_fu_1103_p3) - unsigned(sext_ln59_fu_1119_p1));
    sub_ln66_fu_1295_p2 <= std_logic_vector(unsigned(shl_ln66_2_fu_1288_p3) - unsigned(sext_ln66_2_fu_1285_p1));
    sub_ln67_1_fu_1390_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(shl_ln67_2_fu_1382_p3));
    sub_ln67_2_fu_1396_p2 <= std_logic_vector(unsigned(sub_ln67_1_fu_1390_p2) - unsigned(sext_ln66_5_fu_1313_p1));
    sub_ln67_3_fu_1402_p2 <= std_logic_vector(unsigned(sub_ln67_fu_1353_p2) - unsigned(sext_ln67_fu_1366_p1));
    sub_ln67_4_fu_1408_p2 <= std_logic_vector(unsigned(sub_ln67_3_fu_1402_p2) - unsigned(shl_ln67_1_fu_1374_p3));
    sub_ln67_fu_1353_p2 <= std_logic_vector(unsigned(shl_ln66_1_fu_1278_p3) - unsigned(sext_ln66_fu_1275_p1));
    sub_ln68_1_fu_1463_p2 <= std_logic_vector(unsigned(add_ln68_fu_1427_p2) - unsigned(shl_ln66_2_fu_1288_p3));
    sub_ln68_fu_1457_p2 <= std_logic_vector(unsigned(shl_ln68_2_fu_1449_p3) - unsigned(sext_ln66_5_fu_1313_p1));
    sub_ln69_1_fu_1505_p2 <= std_logic_vector(unsigned(sub_ln69_fu_1499_p2) - unsigned(sext_ln66_2_fu_1285_p1));
    sub_ln69_2_fu_1511_p2 <= std_logic_vector(unsigned(shl_ln67_1_fu_1374_p3) - unsigned(sext_ln66_3_fu_1301_p1));
    sub_ln69_fu_1499_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(shl_ln69_1_fu_1492_p3));
    sub_ln75_fu_1627_p2 <= std_logic_vector(unsigned(or_ln75_fu_1621_p2) - unsigned(t4_3_reg_2108));
    sub_ln76_fu_1648_p2 <= std_logic_vector(unsigned(or_ln76_fu_1642_p2) - unsigned(t3_3_reg_2102));
    sub_ln77_fu_1669_p2 <= std_logic_vector(unsigned(or_ln77_fu_1663_p2) - unsigned(t2_3_reg_2096));
    sub_ln78_fu_1690_p2 <= std_logic_vector(unsigned(or_ln78_fu_1684_p2) - unsigned(t1_3_reg_2090));
    t1_1_fu_645_p2 <= std_logic_vector(unsigned(add_ln35_1_fu_627_p2) + unsigned(add_ln35_3_fu_639_p2));
    t1_2_fu_1231_p2 <= std_logic_vector(unsigned(ap_const_lv32_40) + unsigned(sub_ln56_fu_1225_p2));
    t1_3_fu_1347_p2 <= std_logic_vector(unsigned(add_ln66_3_fu_1341_p2) + unsigned(add_ln66_1_fu_1329_p2));
    t1_fu_512_p2 <= std_logic_vector(unsigned(ap_const_lv32_4) + unsigned(sub_ln25_fu_506_p2));
    t2_1_fu_697_p2 <= std_logic_vector(unsigned(sub_ln36_4_fu_691_p2) + unsigned(sub_ln36_2_fu_679_p2));
    t2_2_fu_1269_p2 <= std_logic_vector(unsigned(ap_const_lv32_40) + unsigned(sub_ln57_1_fu_1263_p2));
    t2_3_fu_1414_p2 <= std_logic_vector(unsigned(sub_ln67_2_fu_1396_p2) + unsigned(sub_ln67_4_fu_1408_p2));
    t2_fu_540_p2 <= std_logic_vector(unsigned(ap_const_lv32_4) + unsigned(sub_ln26_1_fu_534_p2));
    t3_1_fu_743_p2 <= std_logic_vector(unsigned(shl_ln37_1_fu_713_p2) + unsigned(add_ln37_1_fu_737_p2));
    t3_2_fu_1097_p2 <= std_logic_vector(unsigned(shl_ln_fu_1063_p3) + unsigned(sub_ln58_fu_1091_p2));
    t3_3_fu_1475_p2 <= std_logic_vector(unsigned(add_ln68_1_fu_1469_p2) + unsigned(sext_ln68_fu_1441_p1));
    t3_fu_567_p2 <= std_logic_vector(unsigned(sub_ln27_fu_561_p2) + unsigned(shl_ln27_fu_546_p2));
    t4_1_fu_803_p2 <= std_logic_vector(unsigned(add_ln38_1_fu_798_p2) - unsigned(shl_ln37_2_reg_1888));
    t4_2_fu_1141_p2 <= std_logic_vector(unsigned(sub_ln59_fu_1123_p2) - unsigned(shl_ln1_fu_1133_p3));
    t4_3_fu_1529_p2 <= std_logic_vector(unsigned(add_ln69_1_fu_1523_p2) - unsigned(shl_ln68_2_fu_1449_p3));
    t4_fu_594_p2 <= std_logic_vector(unsigned(sub_ln28_fu_583_p2) - unsigned(shl_ln28_2_fu_589_p2));
    t5_1_fu_1535_p2 <= std_logic_vector(unsigned(t1_2_reg_2078) + unsigned(t3_2_reg_1997));
    t5_fu_777_p2 <= std_logic_vector(unsigned(t3_reg_1864) + unsigned(t1_reg_1852));
    t6_1_fu_1539_p2 <= std_logic_vector(unsigned(t2_2_reg_2084) + unsigned(t4_2_reg_2003));
    t6_fu_781_p2 <= std_logic_vector(unsigned(t4_reg_1870) + unsigned(t2_reg_1858));
    t7_1_fu_1543_p2 <= std_logic_vector(unsigned(t2_2_reg_2084) - unsigned(t4_2_reg_2003));
    t7_fu_785_p2 <= std_logic_vector(unsigned(t2_reg_1858) - unsigned(t4_reg_1870));
    t8_1_fu_1547_p2 <= std_logic_vector(unsigned(t1_2_reg_2078) - unsigned(t3_2_reg_1997));
    t8_fu_789_p2 <= std_logic_vector(unsigned(t1_reg_1852) - unsigned(t3_reg_1864));

    temp_address0_assign_proc : process(temp_addr_reg_1734, ap_CS_fsm_state7, ap_CS_fsm_state11, ap_CS_fsm_state12, zext_ln58_fu_1045_p1, ap_CS_fsm_state13, zext_ln66_fu_1153_p1, ap_CS_fsm_state14, zext_ln66_2_fu_1180_p1, ap_CS_fsm_state10, zext_ln42_fu_947_p1, ap_CS_fsm_state8, zext_ln44_fu_967_p1, ap_CS_fsm_state9, zext_ln46_fu_987_p1, src_1_rec_cast_fu_1006_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            temp_address0 <= zext_ln66_2_fu_1180_p1(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            temp_address0 <= zext_ln66_fu_1153_p1(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            temp_address0 <= zext_ln58_fu_1045_p1(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            temp_address0 <= src_1_rec_cast_fu_1006_p1(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            temp_address0 <= zext_ln46_fu_987_p1(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            temp_address0 <= zext_ln44_fu_967_p1(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            temp_address0 <= zext_ln42_fu_947_p1(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            temp_address0 <= temp_addr_reg_1734;
        else 
            temp_address0 <= "XXXXXX";
        end if; 
    end process;


    temp_address1_assign_proc : process(ap_CS_fsm_state7, ap_CS_fsm_state11, zext_ln56_fu_1032_p1, ap_CS_fsm_state12, zext_ln58_1_fu_1054_p1, ap_CS_fsm_state13, zext_ln66_1_fu_1162_p1, ap_CS_fsm_state14, zext_ln66_3_fu_1188_p1, ap_CS_fsm_state10, zext_ln41_fu_845_p1, ap_CS_fsm_state8, zext_ln43_fu_957_p1, ap_CS_fsm_state9, zext_ln45_fu_977_p1, zext_ln47_fu_997_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            temp_address1 <= zext_ln66_3_fu_1188_p1(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            temp_address1 <= zext_ln66_1_fu_1162_p1(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            temp_address1 <= zext_ln58_1_fu_1054_p1(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            temp_address1 <= zext_ln56_fu_1032_p1(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            temp_address1 <= zext_ln47_fu_997_p1(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            temp_address1 <= zext_ln45_fu_977_p1(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            temp_address1 <= zext_ln43_fu_957_p1(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            temp_address1 <= zext_ln41_fu_845_p1(6 - 1 downto 0);
        else 
            temp_address1 <= "XXXXXX";
        end if; 
    end process;


    temp_ce0_assign_proc : process(ap_CS_fsm_state7, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state10, ap_CS_fsm_state8, ap_CS_fsm_state9)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            temp_ce0 <= ap_const_logic_1;
        else 
            temp_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    temp_ce1_assign_proc : process(ap_CS_fsm_state7, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state10, ap_CS_fsm_state8, ap_CS_fsm_state9)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            temp_ce1 <= ap_const_logic_1;
        else 
            temp_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    temp_d0_assign_proc : process(trunc_ln2_reg_1904, ap_CS_fsm_state7, trunc_ln4_reg_1914, trunc_ln6_reg_1924, ap_CS_fsm_state10, ap_CS_fsm_state8, ap_CS_fsm_state9, add_ln40_fu_808_p2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            temp_d0 <= trunc_ln6_reg_1924;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            temp_d0 <= trunc_ln4_reg_1914;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            temp_d0 <= trunc_ln2_reg_1904;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            temp_d0 <= add_ln40_fu_808_p2(31 downto 3);
        else 
            temp_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    temp_d1_assign_proc : process(ap_CS_fsm_state7, trunc_ln3_reg_1909, trunc_ln5_reg_1919, trunc_ln7_reg_1929, ap_CS_fsm_state10, ap_CS_fsm_state8, ap_CS_fsm_state9, add_ln41_fu_824_p2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            temp_d1 <= trunc_ln7_reg_1929;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            temp_d1 <= trunc_ln5_reg_1919;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            temp_d1 <= trunc_ln3_reg_1909;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            temp_d1 <= add_ln41_fu_824_p2(31 downto 3);
        else 
            temp_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    temp_we0_assign_proc : process(ap_CS_fsm_state7, ap_CS_fsm_state10, ap_CS_fsm_state8, ap_CS_fsm_state9)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            temp_we0 <= ap_const_logic_1;
        else 
            temp_we0 <= ap_const_logic_0;
        end if; 
    end process;


    temp_we1_assign_proc : process(ap_CS_fsm_state7, ap_CS_fsm_state10, ap_CS_fsm_state8, ap_CS_fsm_state9)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            temp_we1 <= ap_const_logic_1;
        else 
            temp_we1 <= ap_const_logic_0;
        end if; 
    end process;

    trunc_ln10_fu_1591_p4 <= add_ln73_fu_1586_p2(31 downto 7);
    trunc_ln56_fu_1205_p1 <= add_ln56_fu_1199_p2(28 - 1 downto 0);
    trunc_ln57_fu_1243_p1 <= sub_ln57_fu_1237_p2(28 - 1 downto 0);
    trunc_ln58_fu_1059_p1 <= temp_q0(28 - 1 downto 0);
    trunc_ln59_fu_1129_p1 <= temp_q1(28 - 1 downto 0);
    trunc_ln66_1_fu_1171_p0 <= temp_q1;
    trunc_ln66_1_fu_1171_p1 <= trunc_ln66_1_fu_1171_p0(28 - 1 downto 0);
    trunc_ln66_fu_1167_p0 <= temp_q0;
    trunc_ln66_fu_1167_p1 <= trunc_ln66_fu_1167_p0(28 - 1 downto 0);
    trunc_ln67_fu_1370_p0 <= temp_q0;
    trunc_ln67_fu_1370_p1 <= trunc_ln67_fu_1370_p0(28 - 1 downto 0);
    trunc_ln68_fu_1445_p0 <= temp_q1;
    trunc_ln68_fu_1445_p1 <= trunc_ln68_fu_1445_p0(28 - 1 downto 0);
    trunc_ln9_fu_1571_p4 <= add_ln72_fu_1566_p2(31 downto 7);
    xor_ln35_fu_452_p2 <= (src_0_rec_reg_346 xor ap_const_lv4_8);
    xor_ln66_fu_1147_p2 <= (src_1_rec_reg_369 xor ap_const_lv4_8);
    zext_ln25_fu_415_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln_fu_407_p3),64));
    zext_ln27_1_fu_447_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln27_fu_443_p1),64));
    zext_ln27_fu_438_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln1_fu_430_p3),64));
    zext_ln35_1_fu_467_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln35_fu_463_p1),64));
    zext_ln35_2_fu_477_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln35_fu_472_p2),64));
    zext_ln35_3_fu_485_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln35_1_fu_482_p1),64));
    zext_ln35_fu_458_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(xor_ln35_fu_452_p2),64));
    zext_ln41_fu_845_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln41_fu_840_p2),64));
    zext_ln42_fu_947_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln42_fu_942_p2),64));
    zext_ln43_fu_957_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln43_fu_952_p2),64));
    zext_ln44_fu_967_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln44_fu_962_p2),64));
    zext_ln45_fu_977_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln45_fu_972_p2),64));
    zext_ln46_fu_987_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln46_fu_982_p2),64));
    zext_ln47_fu_997_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln47_fu_992_p2),64));
    zext_ln56_fu_1032_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln2_fu_1024_p3),64));
    zext_ln58_1_fu_1054_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln58_fu_1050_p1),64));
    zext_ln58_fu_1045_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln3_fu_1037_p3),64));
    zext_ln66_1_fu_1162_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln66_1_fu_1158_p1),64));
    zext_ln66_2_fu_1180_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln66_fu_1175_p2),64));
    zext_ln66_3_fu_1188_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln66_4_fu_1185_p1),64));
    zext_ln66_fu_1153_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(xor_ln66_fu_1147_p2),64));
end behav;
