// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="fproduct,hls_ip_2019_1,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7k160t-fbg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.365000,HLS_SYN_LAT=12,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=300,HLS_SYN_FF=3303,HLS_SYN_LUT=5305,HLS_VERSION=2019_1}" *)

module fproduct (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        output_r_address0,
        output_r_ce0,
        output_r_we0,
        output_r_d0,
        output_r_address1,
        output_r_ce1,
        output_r_we1,
        output_r_d1,
        in2_address0,
        in2_ce0,
        in2_q0,
        in2_address1,
        in2_ce1,
        in2_q1,
        in_r_address0,
        in_r_ce0,
        in_r_q0,
        in_r_address1,
        in_r_ce1,
        in_r_q1
);

parameter    ap_ST_fsm_state1 = 13'd1;
parameter    ap_ST_fsm_state2 = 13'd2;
parameter    ap_ST_fsm_state3 = 13'd4;
parameter    ap_ST_fsm_state4 = 13'd8;
parameter    ap_ST_fsm_state5 = 13'd16;
parameter    ap_ST_fsm_state6 = 13'd32;
parameter    ap_ST_fsm_state7 = 13'd64;
parameter    ap_ST_fsm_state8 = 13'd128;
parameter    ap_ST_fsm_state9 = 13'd256;
parameter    ap_ST_fsm_state10 = 13'd512;
parameter    ap_ST_fsm_state11 = 13'd1024;
parameter    ap_ST_fsm_state12 = 13'd2048;
parameter    ap_ST_fsm_state13 = 13'd4096;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [9:0] output_r_address0;
output   output_r_ce0;
output   output_r_we0;
output  [31:0] output_r_d0;
output  [9:0] output_r_address1;
output   output_r_ce1;
output   output_r_we1;
output  [31:0] output_r_d1;
output  [9:0] in2_address0;
output   in2_ce0;
input  [31:0] in2_q0;
output  [9:0] in2_address1;
output   in2_ce1;
input  [31:0] in2_q1;
output  [9:0] in_r_address0;
output   in_r_ce0;
input  [31:0] in_r_q0;
output  [9:0] in_r_address1;
output   in_r_ce1;
input  [31:0] in_r_q1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[9:0] output_r_address0;
reg output_r_ce0;
reg output_r_we0;
reg[31:0] output_r_d0;
reg[9:0] output_r_address1;
reg output_r_ce1;
reg output_r_we1;
reg[31:0] output_r_d1;
reg[9:0] in2_address0;
reg in2_ce0;
reg[9:0] in2_address1;
reg in2_ce1;
reg[9:0] in_r_address0;
reg in_r_ce0;
reg[9:0] in_r_address1;
reg in_r_ce1;

(* fsm_encoding = "none" *) reg   [12:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg  signed [31:0] in2_load_reg_1360;
wire    ap_CS_fsm_state2;
reg  signed [31:0] in_load_reg_1374;
reg  signed [31:0] in_load_1_reg_1388;
reg  signed [31:0] in2_load_1_reg_1402;
wire   [31:0] mul_ln18_fu_434_p2;
reg   [31:0] mul_ln18_reg_1436;
wire    ap_CS_fsm_state3;
wire   [31:0] add_ln19_fu_446_p2;
reg   [31:0] add_ln19_reg_1441;
reg  signed [31:0] in_load_2_reg_1446;
reg  signed [31:0] in2_load_2_reg_1460;
reg  signed [31:0] in_load_3_reg_1474;
reg  signed [31:0] in2_load_3_reg_1488;
wire   [31:0] mul_ln21_fu_452_p2;
reg   [31:0] mul_ln21_reg_1522;
wire    ap_CS_fsm_state4;
wire   [31:0] mul_ln21_1_fu_456_p2;
reg   [31:0] mul_ln21_1_reg_1527;
wire   [31:0] mul_ln21_2_fu_460_p2;
reg   [31:0] mul_ln21_2_reg_1532;
wire   [31:0] mul_ln24_2_fu_472_p2;
reg   [31:0] mul_ln24_2_reg_1537;
wire   [31:0] mul_ln24_3_fu_476_p2;
reg   [31:0] mul_ln24_3_reg_1542;
wire   [31:0] add_ln24_fu_480_p2;
reg   [31:0] add_ln24_reg_1547;
reg  signed [31:0] in_load_4_reg_1552;
reg  signed [31:0] in2_load_4_reg_1566;
reg  signed [31:0] in_load_5_reg_1580;
reg  signed [31:0] in2_load_5_reg_1594;
wire   [31:0] mul_ln28_fu_512_p2;
reg   [31:0] mul_ln28_reg_1628;
wire    ap_CS_fsm_state5;
wire   [31:0] add_ln28_fu_524_p2;
reg   [31:0] add_ln28_reg_1633;
wire   [31:0] mul_ln28_3_fu_530_p2;
reg   [31:0] mul_ln28_3_reg_1638;
wire   [31:0] mul_ln28_4_fu_534_p2;
reg   [31:0] mul_ln28_4_reg_1643;
wire   [31:0] mul_ln33_fu_538_p2;
reg   [31:0] mul_ln33_reg_1648;
wire   [31:0] mul_ln33_1_fu_542_p2;
reg   [31:0] mul_ln33_1_reg_1653;
wire   [31:0] mul_ln33_2_fu_546_p2;
reg   [31:0] mul_ln33_2_reg_1658;
wire   [31:0] mul_ln33_3_fu_550_p2;
reg   [31:0] mul_ln33_3_reg_1663;
wire   [31:0] add_ln33_2_fu_562_p2;
reg   [31:0] add_ln33_2_reg_1668;
wire   [31:0] mul_ln39_fu_568_p2;
reg   [31:0] mul_ln39_reg_1673;
wire   [31:0] mul_ln39_1_fu_572_p2;
reg   [31:0] mul_ln39_1_reg_1678;
wire   [31:0] mul_ln39_2_fu_576_p2;
reg   [31:0] mul_ln39_2_reg_1683;
reg  signed [31:0] in_load_6_reg_1688;
reg  signed [31:0] in2_load_6_reg_1702;
reg  signed [31:0] in_load_7_reg_1716;
reg  signed [31:0] in2_load_7_reg_1730;
wire   [31:0] mul_ln39_4_fu_640_p2;
reg   [31:0] mul_ln39_4_reg_1764;
wire    ap_CS_fsm_state6;
wire   [31:0] add_ln39_2_fu_652_p2;
reg   [31:0] add_ln39_2_reg_1769;
wire   [31:0] add_ln39_3_fu_658_p2;
reg   [31:0] add_ln39_3_reg_1774;
wire   [31:0] mul_ln46_2_fu_672_p2;
reg   [31:0] mul_ln46_2_reg_1779;
wire   [31:0] mul_ln46_3_fu_676_p2;
reg   [31:0] mul_ln46_3_reg_1784;
wire   [31:0] add_ln46_fu_696_p2;
reg   [31:0] add_ln46_reg_1789;
wire   [31:0] add_ln46_3_fu_702_p2;
reg   [31:0] add_ln46_3_reg_1794;
wire   [31:0] add_ln46_4_fu_708_p2;
reg   [31:0] add_ln46_4_reg_1799;
wire   [30:0] trunc_ln54_fu_742_p1;
reg   [30:0] trunc_ln54_reg_1804;
wire   [30:0] trunc_ln54_1_fu_746_p1;
reg   [30:0] trunc_ln54_1_reg_1809;
reg  signed [31:0] in_load_8_reg_1814;
reg  signed [31:0] in2_load_8_reg_1828;
reg  signed [31:0] in_load_9_reg_1842;
reg  signed [31:0] in2_load_9_reg_1856;
wire   [31:0] mul_ln54_fu_780_p2;
reg   [31:0] mul_ln54_reg_1870;
wire    ap_CS_fsm_state7;
wire   [30:0] add_ln54_2_fu_784_p2;
reg   [30:0] add_ln54_2_reg_1875;
wire   [31:0] mul_ln54_5_fu_788_p2;
reg   [31:0] mul_ln54_5_reg_1880;
wire   [31:0] mul_ln54_6_fu_792_p2;
reg   [31:0] mul_ln54_6_reg_1885;
wire   [31:0] add_ln54_5_fu_804_p2;
reg   [31:0] add_ln54_5_reg_1890;
wire   [31:0] mul_ln63_2_fu_818_p2;
reg   [31:0] mul_ln63_2_reg_1895;
wire   [31:0] mul_ln63_7_fu_838_p2;
reg   [31:0] mul_ln63_7_reg_1900;
wire   [31:0] mul_ln63_8_fu_842_p2;
reg   [31:0] mul_ln63_8_reg_1905;
wire   [31:0] mul_ln63_9_fu_846_p2;
reg   [31:0] mul_ln63_9_reg_1910;
wire   [31:0] add_ln63_fu_850_p2;
reg   [31:0] add_ln63_reg_1915;
wire   [31:0] add_ln63_1_fu_856_p2;
reg   [31:0] add_ln63_1_reg_1920;
wire   [31:0] add_ln63_4_fu_862_p2;
reg   [31:0] add_ln63_4_reg_1925;
wire   [31:0] mul_ln73_2_fu_876_p2;
reg   [31:0] mul_ln73_2_reg_1930;
wire   [31:0] mul_ln73_3_fu_880_p2;
reg   [31:0] mul_ln73_3_reg_1935;
wire   [31:0] mul_ln73_4_fu_884_p2;
reg   [31:0] mul_ln73_4_reg_1940;
wire   [30:0] trunc_ln73_fu_894_p1;
reg   [30:0] trunc_ln73_reg_1945;
wire   [31:0] mul_ln73_5_fu_898_p2;
reg   [31:0] mul_ln73_5_reg_1950;
wire   [31:0] mul_ln73_6_fu_902_p2;
reg   [31:0] mul_ln73_6_reg_1955;
wire   [31:0] add_ln73_5_fu_914_p2;
reg   [31:0] add_ln73_5_reg_1960;
wire   [31:0] mul_ln82_2_fu_928_p2;
reg   [31:0] mul_ln82_2_reg_1965;
wire   [31:0] mul_ln82_3_fu_932_p2;
reg   [31:0] mul_ln82_3_reg_1970;
wire   [31:0] add_ln82_fu_952_p2;
reg   [31:0] add_ln82_reg_1975;
wire   [31:0] add_ln82_3_fu_958_p2;
reg   [31:0] add_ln82_3_reg_1980;
wire   [31:0] add_ln82_4_fu_964_p2;
reg   [31:0] add_ln82_4_reg_1985;
wire   [31:0] mul_ln90_fu_970_p2;
reg   [31:0] mul_ln90_reg_1990;
wire   [30:0] trunc_ln90_fu_1002_p1;
reg   [30:0] trunc_ln90_reg_1995;
wire   [30:0] trunc_ln90_1_fu_1006_p1;
reg   [30:0] trunc_ln90_1_reg_2000;
wire   [31:0] mul_ln90_5_fu_1010_p2;
reg   [31:0] mul_ln90_5_reg_2005;
wire   [31:0] mul_ln90_6_fu_1014_p2;
reg   [31:0] mul_ln90_6_reg_2010;
wire   [31:0] mul_ln97_fu_1018_p2;
reg   [31:0] mul_ln97_reg_2015;
wire   [31:0] mul_ln97_1_fu_1022_p2;
reg   [31:0] mul_ln97_1_reg_2020;
wire   [31:0] mul_ln97_2_fu_1026_p2;
reg   [31:0] mul_ln97_2_reg_2025;
wire   [31:0] mul_ln97_3_fu_1030_p2;
reg   [31:0] mul_ln97_3_reg_2030;
wire   [31:0] add_ln97_2_fu_1042_p2;
reg   [31:0] add_ln97_2_reg_2035;
wire   [31:0] mul_ln103_fu_1048_p2;
reg   [31:0] mul_ln103_reg_2040;
wire   [31:0] mul_ln103_1_fu_1052_p2;
reg   [31:0] mul_ln103_1_reg_2045;
wire   [31:0] mul_ln103_2_fu_1056_p2;
reg   [31:0] mul_ln103_2_reg_2050;
wire   [31:0] mul_ln103_3_fu_1060_p2;
reg   [31:0] mul_ln103_3_reg_2055;
wire   [31:0] mul_ln103_4_fu_1064_p2;
reg   [31:0] mul_ln103_4_reg_2060;
wire   [31:0] mul_ln108_2_fu_1076_p2;
reg   [31:0] mul_ln108_2_reg_2065;
wire   [31:0] mul_ln108_3_fu_1080_p2;
reg   [31:0] mul_ln108_3_reg_2070;
wire   [31:0] add_ln108_fu_1084_p2;
reg   [31:0] add_ln108_reg_2075;
wire   [31:0] mul_ln112_fu_1090_p2;
reg   [31:0] mul_ln112_reg_2080;
wire   [31:0] add_ln112_fu_1102_p2;
reg   [31:0] add_ln112_reg_2085;
wire   [31:0] add_ln115_fu_1116_p2;
reg   [31:0] add_ln115_reg_2090;
wire   [31:0] mul_ln117_fu_1122_p2;
reg   [31:0] mul_ln117_reg_2095;
wire   [31:0] add_ln73_4_fu_1210_p2;
reg   [31:0] add_ln73_4_reg_2100;
wire    ap_CS_fsm_state8;
wire   [31:0] add_ln82_6_fu_1228_p2;
reg   [31:0] add_ln82_6_reg_2105;
wire   [31:0] add_ln90_5_fu_1255_p2;
reg   [31:0] add_ln90_5_reg_2110;
wire   [31:0] add_ln97_4_fu_1274_p2;
reg   [31:0] add_ln97_4_reg_2115;
wire   [31:0] add_ln103_3_fu_1300_p2;
reg   [31:0] add_ln103_3_reg_2120;
wire   [31:0] add_ln108_2_fu_1309_p2;
reg   [31:0] add_ln108_2_reg_2125;
wire   [31:0] add_ln112_1_fu_1319_p2;
reg   [31:0] add_ln112_1_reg_2130;
wire    ap_CS_fsm_state9;
wire    ap_CS_fsm_state10;
wire    ap_CS_fsm_state11;
wire    ap_CS_fsm_state12;
wire    ap_CS_fsm_state13;
wire   [31:0] add_ln21_1_fu_496_p2;
wire   [31:0] add_ln24_2_fu_506_p2;
wire   [31:0] add_ln28_3_fu_594_p2;
wire   [31:0] add_ln33_4_fu_614_p2;
wire   [31:0] add_ln39_5_fu_754_p2;
wire   [31:0] add_ln46_6_fu_773_p2;
wire   [31:0] add_ln54_7_fu_1147_p2;
wire   [31:0] add_ln63_8_fu_1177_p2;
wire   [31:0] add_ln73_7_fu_1328_p2;
wire   [31:0] shl_ln117_fu_1334_p2;
wire   [31:0] mul_ln19_fu_438_p2;
wire   [31:0] mul_ln19_1_fu_442_p2;
wire   [31:0] mul_ln24_fu_464_p2;
wire   [31:0] mul_ln24_1_fu_468_p2;
wire   [31:0] shl_ln21_fu_486_p2;
wire   [31:0] add_ln21_fu_491_p2;
wire   [31:0] add_ln24_1_fu_502_p2;
wire   [31:0] mul_ln28_1_fu_516_p2;
wire   [31:0] mul_ln28_2_fu_520_p2;
wire   [31:0] mul_ln33_5_fu_558_p2;
wire   [31:0] mul_ln33_4_fu_554_p2;
wire   [31:0] shl_ln28_fu_580_p2;
wire   [31:0] add_ln28_1_fu_585_p2;
wire   [31:0] add_ln28_2_fu_590_p2;
wire   [31:0] add_ln33_fu_601_p2;
wire   [31:0] add_ln33_1_fu_605_p2;
wire   [31:0] add_ln33_3_fu_610_p2;
wire   [31:0] add_ln39_fu_621_p2;
wire   [31:0] add_ln39_1_fu_625_p2;
wire   [31:0] shl_ln39_fu_630_p2;
wire   [31:0] mul_ln39_3_fu_636_p2;
wire   [31:0] mul_ln39_6_fu_648_p2;
wire   [31:0] mul_ln39_5_fu_644_p2;
wire   [31:0] mul_ln46_fu_664_p2;
wire   [31:0] mul_ln46_1_fu_668_p2;
wire   [31:0] mul_ln46_5_fu_684_p2;
wire   [31:0] mul_ln46_4_fu_680_p2;
wire   [31:0] mul_ln46_7_fu_692_p2;
wire   [31:0] mul_ln46_6_fu_688_p2;
wire   [31:0] mul_ln54_1_fu_714_p2;
wire   [31:0] mul_ln54_2_fu_718_p2;
wire   [31:0] mul_ln54_4_fu_726_p2;
wire   [31:0] mul_ln54_3_fu_722_p2;
wire   [31:0] add_ln54_fu_730_p2;
wire   [31:0] add_ln54_1_fu_736_p2;
wire   [31:0] add_ln39_4_fu_750_p2;
wire   [31:0] add_ln46_1_fu_760_p2;
wire   [31:0] add_ln46_2_fu_764_p2;
wire   [31:0] add_ln46_5_fu_769_p2;
wire   [31:0] mul_ln54_8_fu_800_p2;
wire   [31:0] mul_ln54_7_fu_796_p2;
wire   [31:0] mul_ln63_fu_810_p2;
wire   [31:0] mul_ln63_1_fu_814_p2;
wire   [31:0] mul_ln63_4_fu_826_p2;
wire   [31:0] mul_ln63_3_fu_822_p2;
wire   [31:0] mul_ln63_6_fu_834_p2;
wire   [31:0] mul_ln63_5_fu_830_p2;
wire   [31:0] mul_ln73_fu_868_p2;
wire   [31:0] mul_ln73_1_fu_872_p2;
wire   [31:0] add_ln73_fu_888_p2;
wire   [31:0] mul_ln73_8_fu_910_p2;
wire   [31:0] mul_ln73_7_fu_906_p2;
wire   [31:0] mul_ln82_fu_920_p2;
wire   [31:0] mul_ln82_1_fu_924_p2;
wire   [31:0] mul_ln82_5_fu_940_p2;
wire   [31:0] mul_ln82_4_fu_936_p2;
wire   [31:0] mul_ln82_7_fu_948_p2;
wire   [31:0] mul_ln82_6_fu_944_p2;
wire   [31:0] mul_ln90_1_fu_974_p2;
wire   [31:0] mul_ln90_2_fu_978_p2;
wire   [31:0] mul_ln90_4_fu_986_p2;
wire   [31:0] mul_ln90_3_fu_982_p2;
wire   [31:0] add_ln90_fu_990_p2;
wire   [31:0] add_ln90_1_fu_996_p2;
wire   [31:0] mul_ln97_5_fu_1038_p2;
wire   [31:0] mul_ln97_4_fu_1034_p2;
wire   [31:0] mul_ln108_fu_1068_p2;
wire   [31:0] mul_ln108_1_fu_1072_p2;
wire   [31:0] mul_ln112_1_fu_1094_p2;
wire   [31:0] mul_ln112_2_fu_1098_p2;
wire   [31:0] mul_ln115_fu_1108_p2;
wire   [31:0] mul_ln115_1_fu_1112_p2;
wire   [31:0] shl_ln3_fu_1126_p3;
wire   [31:0] add_ln54_3_fu_1133_p2;
wire   [31:0] add_ln54_4_fu_1137_p2;
wire   [31:0] add_ln54_6_fu_1143_p2;
wire   [31:0] add_ln63_2_fu_1154_p2;
wire   [31:0] add_ln63_5_fu_1163_p2;
wire   [31:0] add_ln63_6_fu_1167_p2;
wire   [31:0] add_ln63_3_fu_1158_p2;
wire   [31:0] add_ln63_7_fu_1172_p2;
wire   [31:0] add_ln73_1_fu_1184_p2;
wire   [31:0] add_ln73_2_fu_1188_p2;
wire   [30:0] trunc_ln73_1_fu_1193_p1;
wire   [30:0] add_ln73_3_fu_1197_p2;
wire   [31:0] shl_ln4_fu_1202_p3;
wire   [31:0] add_ln82_1_fu_1215_p2;
wire   [31:0] add_ln82_2_fu_1219_p2;
wire   [31:0] add_ln82_5_fu_1224_p2;
wire   [30:0] add_ln90_2_fu_1234_p2;
wire   [31:0] shl_ln5_fu_1238_p3;
wire   [31:0] add_ln90_3_fu_1246_p2;
wire   [31:0] add_ln90_4_fu_1251_p2;
wire   [31:0] add_ln97_fu_1261_p2;
wire   [31:0] add_ln97_1_fu_1265_p2;
wire   [31:0] add_ln97_3_fu_1270_p2;
wire   [31:0] add_ln103_fu_1280_p2;
wire   [31:0] add_ln103_1_fu_1284_p2;
wire   [31:0] shl_ln103_fu_1289_p2;
wire   [31:0] add_ln103_2_fu_1295_p2;
wire   [31:0] add_ln108_1_fu_1305_p2;
wire   [31:0] shl_ln112_fu_1314_p2;
wire   [31:0] add_ln73_6_fu_1324_p2;
reg   [12:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 13'd1;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        add_ln103_3_reg_2120 <= add_ln103_3_fu_1300_p2;
        add_ln108_2_reg_2125 <= add_ln108_2_fu_1309_p2;
        add_ln112_1_reg_2130 <= add_ln112_1_fu_1319_p2;
        add_ln73_4_reg_2100 <= add_ln73_4_fu_1210_p2;
        add_ln82_6_reg_2105 <= add_ln82_6_fu_1228_p2;
        add_ln90_5_reg_2110 <= add_ln90_5_fu_1255_p2;
        add_ln97_4_reg_2115 <= add_ln97_4_fu_1274_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        add_ln108_reg_2075 <= add_ln108_fu_1084_p2;
        add_ln112_reg_2085 <= add_ln112_fu_1102_p2;
        add_ln115_reg_2090 <= add_ln115_fu_1116_p2;
        add_ln54_2_reg_1875 <= add_ln54_2_fu_784_p2;
        add_ln54_5_reg_1890 <= add_ln54_5_fu_804_p2;
        add_ln63_1_reg_1920 <= add_ln63_1_fu_856_p2;
        add_ln63_4_reg_1925 <= add_ln63_4_fu_862_p2;
        add_ln63_reg_1915 <= add_ln63_fu_850_p2;
        add_ln73_5_reg_1960 <= add_ln73_5_fu_914_p2;
        add_ln82_3_reg_1980 <= add_ln82_3_fu_958_p2;
        add_ln82_4_reg_1985 <= add_ln82_4_fu_964_p2;
        add_ln82_reg_1975 <= add_ln82_fu_952_p2;
        add_ln97_2_reg_2035 <= add_ln97_2_fu_1042_p2;
        mul_ln103_1_reg_2045 <= mul_ln103_1_fu_1052_p2;
        mul_ln103_2_reg_2050 <= mul_ln103_2_fu_1056_p2;
        mul_ln103_3_reg_2055 <= mul_ln103_3_fu_1060_p2;
        mul_ln103_4_reg_2060 <= mul_ln103_4_fu_1064_p2;
        mul_ln103_reg_2040 <= mul_ln103_fu_1048_p2;
        mul_ln108_2_reg_2065 <= mul_ln108_2_fu_1076_p2;
        mul_ln108_3_reg_2070 <= mul_ln108_3_fu_1080_p2;
        mul_ln112_reg_2080 <= mul_ln112_fu_1090_p2;
        mul_ln117_reg_2095 <= mul_ln117_fu_1122_p2;
        mul_ln54_5_reg_1880 <= mul_ln54_5_fu_788_p2;
        mul_ln54_6_reg_1885 <= mul_ln54_6_fu_792_p2;
        mul_ln54_reg_1870 <= mul_ln54_fu_780_p2;
        mul_ln63_2_reg_1895 <= mul_ln63_2_fu_818_p2;
        mul_ln63_7_reg_1900 <= mul_ln63_7_fu_838_p2;
        mul_ln63_8_reg_1905 <= mul_ln63_8_fu_842_p2;
        mul_ln63_9_reg_1910 <= mul_ln63_9_fu_846_p2;
        mul_ln73_2_reg_1930 <= mul_ln73_2_fu_876_p2;
        mul_ln73_3_reg_1935 <= mul_ln73_3_fu_880_p2;
        mul_ln73_4_reg_1940 <= mul_ln73_4_fu_884_p2;
        mul_ln73_5_reg_1950 <= mul_ln73_5_fu_898_p2;
        mul_ln73_6_reg_1955 <= mul_ln73_6_fu_902_p2;
        mul_ln82_2_reg_1965 <= mul_ln82_2_fu_928_p2;
        mul_ln82_3_reg_1970 <= mul_ln82_3_fu_932_p2;
        mul_ln90_5_reg_2005 <= mul_ln90_5_fu_1010_p2;
        mul_ln90_6_reg_2010 <= mul_ln90_6_fu_1014_p2;
        mul_ln90_reg_1990 <= mul_ln90_fu_970_p2;
        mul_ln97_1_reg_2020 <= mul_ln97_1_fu_1022_p2;
        mul_ln97_2_reg_2025 <= mul_ln97_2_fu_1026_p2;
        mul_ln97_3_reg_2030 <= mul_ln97_3_fu_1030_p2;
        mul_ln97_reg_2015 <= mul_ln97_fu_1018_p2;
        trunc_ln73_reg_1945 <= trunc_ln73_fu_894_p1;
        trunc_ln90_1_reg_2000 <= trunc_ln90_1_fu_1006_p1;
        trunc_ln90_reg_1995 <= trunc_ln90_fu_1002_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        add_ln19_reg_1441 <= add_ln19_fu_446_p2;
        in2_load_2_reg_1460 <= in2_q0;
        in2_load_3_reg_1488 <= in2_q1;
        in_load_2_reg_1446 <= in_r_q0;
        in_load_3_reg_1474 <= in_r_q1;
        mul_ln18_reg_1436 <= mul_ln18_fu_434_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        add_ln24_reg_1547 <= add_ln24_fu_480_p2;
        in2_load_4_reg_1566 <= in2_q0;
        in2_load_5_reg_1594 <= in2_q1;
        in_load_4_reg_1552 <= in_r_q0;
        in_load_5_reg_1580 <= in_r_q1;
        mul_ln21_1_reg_1527 <= mul_ln21_1_fu_456_p2;
        mul_ln21_2_reg_1532 <= mul_ln21_2_fu_460_p2;
        mul_ln21_reg_1522 <= mul_ln21_fu_452_p2;
        mul_ln24_2_reg_1537 <= mul_ln24_2_fu_472_p2;
        mul_ln24_3_reg_1542 <= mul_ln24_3_fu_476_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        add_ln28_reg_1633 <= add_ln28_fu_524_p2;
        add_ln33_2_reg_1668 <= add_ln33_2_fu_562_p2;
        in2_load_6_reg_1702 <= in2_q0;
        in2_load_7_reg_1730 <= in2_q1;
        in_load_6_reg_1688 <= in_r_q0;
        in_load_7_reg_1716 <= in_r_q1;
        mul_ln28_3_reg_1638 <= mul_ln28_3_fu_530_p2;
        mul_ln28_4_reg_1643 <= mul_ln28_4_fu_534_p2;
        mul_ln28_reg_1628 <= mul_ln28_fu_512_p2;
        mul_ln33_1_reg_1653 <= mul_ln33_1_fu_542_p2;
        mul_ln33_2_reg_1658 <= mul_ln33_2_fu_546_p2;
        mul_ln33_3_reg_1663 <= mul_ln33_3_fu_550_p2;
        mul_ln33_reg_1648 <= mul_ln33_fu_538_p2;
        mul_ln39_1_reg_1678 <= mul_ln39_1_fu_572_p2;
        mul_ln39_2_reg_1683 <= mul_ln39_2_fu_576_p2;
        mul_ln39_reg_1673 <= mul_ln39_fu_568_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        add_ln39_2_reg_1769 <= add_ln39_2_fu_652_p2;
        add_ln39_3_reg_1774 <= add_ln39_3_fu_658_p2;
        add_ln46_3_reg_1794 <= add_ln46_3_fu_702_p2;
        add_ln46_4_reg_1799 <= add_ln46_4_fu_708_p2;
        add_ln46_reg_1789 <= add_ln46_fu_696_p2;
        in2_load_8_reg_1828 <= in2_q0;
        in2_load_9_reg_1856 <= in2_q1;
        in_load_8_reg_1814 <= in_r_q0;
        in_load_9_reg_1842 <= in_r_q1;
        mul_ln39_4_reg_1764 <= mul_ln39_4_fu_640_p2;
        mul_ln46_2_reg_1779 <= mul_ln46_2_fu_672_p2;
        mul_ln46_3_reg_1784 <= mul_ln46_3_fu_676_p2;
        trunc_ln54_1_reg_1809 <= trunc_ln54_1_fu_746_p1;
        trunc_ln54_reg_1804 <= trunc_ln54_fu_742_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        in2_load_1_reg_1402 <= in2_q1;
        in2_load_reg_1360 <= in2_q0;
        in_load_1_reg_1388 <= in_r_q1;
        in_load_reg_1374 <= in_r_q0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        in2_address0 = 64'd8;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        in2_address0 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        in2_address0 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        in2_address0 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        in2_address0 = 64'd0;
    end else begin
        in2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        in2_address1 = 64'd9;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        in2_address1 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        in2_address1 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        in2_address1 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        in2_address1 = 64'd1;
    end else begin
        in2_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)))) begin
        in2_ce0 = 1'b1;
    end else begin
        in2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)))) begin
        in2_ce1 = 1'b1;
    end else begin
        in2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        in_r_address0 = 64'd8;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        in_r_address0 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        in_r_address0 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        in_r_address0 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        in_r_address0 = 64'd0;
    end else begin
        in_r_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        in_r_address1 = 64'd9;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        in_r_address1 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        in_r_address1 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        in_r_address1 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        in_r_address1 = 64'd1;
    end else begin
        in_r_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)))) begin
        in_r_ce0 = 1'b1;
    end else begin
        in_r_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)))) begin
        in_r_ce1 = 1'b1;
    end else begin
        in_r_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        output_r_address0 = 64'd18;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        output_r_address0 = 64'd16;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        output_r_address0 = 64'd14;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        output_r_address0 = 64'd12;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        output_r_address0 = 64'd10;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        output_r_address0 = 64'd8;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        output_r_address0 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        output_r_address0 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        output_r_address0 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        output_r_address0 = 64'd0;
    end else begin
        output_r_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        output_r_address1 = 64'd17;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        output_r_address1 = 64'd15;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        output_r_address1 = 64'd13;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        output_r_address1 = 64'd11;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        output_r_address1 = 64'd9;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        output_r_address1 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        output_r_address1 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        output_r_address1 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        output_r_address1 = 64'd1;
    end else begin
        output_r_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4))) begin
        output_r_ce0 = 1'b1;
    end else begin
        output_r_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4))) begin
        output_r_ce1 = 1'b1;
    end else begin
        output_r_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        output_r_d0 = shl_ln117_fu_1334_p2;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        output_r_d0 = add_ln112_1_reg_2130;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        output_r_d0 = add_ln103_3_reg_2120;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        output_r_d0 = add_ln90_5_reg_2110;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        output_r_d0 = add_ln73_7_fu_1328_p2;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        output_r_d0 = add_ln54_7_fu_1147_p2;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        output_r_d0 = add_ln39_5_fu_754_p2;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        output_r_d0 = add_ln28_3_fu_594_p2;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        output_r_d0 = add_ln21_1_fu_496_p2;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        output_r_d0 = mul_ln18_reg_1436;
    end else begin
        output_r_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        output_r_d1 = add_ln115_reg_2090;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        output_r_d1 = add_ln108_2_reg_2125;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        output_r_d1 = add_ln97_4_reg_2115;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        output_r_d1 = add_ln82_6_reg_2105;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        output_r_d1 = add_ln63_8_fu_1177_p2;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        output_r_d1 = add_ln46_6_fu_773_p2;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        output_r_d1 = add_ln33_4_fu_614_p2;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        output_r_d1 = add_ln24_2_fu_506_p2;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        output_r_d1 = add_ln19_reg_1441;
    end else begin
        output_r_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4))) begin
        output_r_we0 = 1'b1;
    end else begin
        output_r_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4))) begin
        output_r_we1 = 1'b1;
    end else begin
        output_r_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln103_1_fu_1284_p2 = (mul_ln103_1_reg_2045 + add_ln103_fu_1280_p2);

assign add_ln103_2_fu_1295_p2 = (mul_ln103_4_reg_2060 + shl_ln103_fu_1289_p2);

assign add_ln103_3_fu_1300_p2 = (mul_ln103_3_reg_2055 + add_ln103_2_fu_1295_p2);

assign add_ln103_fu_1280_p2 = (mul_ln103_2_reg_2050 + mul_ln103_reg_2040);

assign add_ln108_1_fu_1305_p2 = (mul_ln108_3_reg_2070 + mul_ln108_2_reg_2065);

assign add_ln108_2_fu_1309_p2 = (add_ln108_reg_2075 + add_ln108_1_fu_1305_p2);

assign add_ln108_fu_1084_p2 = (mul_ln108_fu_1068_p2 + mul_ln108_1_fu_1072_p2);

assign add_ln112_1_fu_1319_p2 = (mul_ln112_reg_2080 + shl_ln112_fu_1314_p2);

assign add_ln112_fu_1102_p2 = (mul_ln112_1_fu_1094_p2 + mul_ln112_2_fu_1098_p2);

assign add_ln115_fu_1116_p2 = (mul_ln115_fu_1108_p2 + mul_ln115_1_fu_1112_p2);

assign add_ln19_fu_446_p2 = (mul_ln19_fu_438_p2 + mul_ln19_1_fu_442_p2);

assign add_ln21_1_fu_496_p2 = (mul_ln21_1_reg_1527 + add_ln21_fu_491_p2);

assign add_ln21_fu_491_p2 = (mul_ln21_2_reg_1532 + shl_ln21_fu_486_p2);

assign add_ln24_1_fu_502_p2 = (mul_ln24_3_reg_1542 + mul_ln24_2_reg_1537);

assign add_ln24_2_fu_506_p2 = (add_ln24_reg_1547 + add_ln24_1_fu_502_p2);

assign add_ln24_fu_480_p2 = (mul_ln24_fu_464_p2 + mul_ln24_1_fu_468_p2);

assign add_ln28_1_fu_585_p2 = (mul_ln28_reg_1628 + shl_ln28_fu_580_p2);

assign add_ln28_2_fu_590_p2 = (mul_ln28_4_reg_1643 + mul_ln28_3_reg_1638);

assign add_ln28_3_fu_594_p2 = (add_ln28_1_fu_585_p2 + add_ln28_2_fu_590_p2);

assign add_ln28_fu_524_p2 = (mul_ln28_1_fu_516_p2 + mul_ln28_2_fu_520_p2);

assign add_ln33_1_fu_605_p2 = (mul_ln33_1_reg_1653 + add_ln33_fu_601_p2);

assign add_ln33_2_fu_562_p2 = (mul_ln33_5_fu_558_p2 + mul_ln33_4_fu_554_p2);

assign add_ln33_3_fu_610_p2 = (mul_ln33_3_reg_1663 + add_ln33_2_reg_1668);

assign add_ln33_4_fu_614_p2 = (add_ln33_1_fu_605_p2 + add_ln33_3_fu_610_p2);

assign add_ln33_fu_601_p2 = (mul_ln33_2_reg_1658 + mul_ln33_reg_1648);

assign add_ln39_1_fu_625_p2 = (mul_ln39_1_reg_1678 + add_ln39_fu_621_p2);

assign add_ln39_2_fu_652_p2 = (shl_ln39_fu_630_p2 + mul_ln39_3_fu_636_p2);

assign add_ln39_3_fu_658_p2 = (mul_ln39_6_fu_648_p2 + mul_ln39_5_fu_644_p2);

assign add_ln39_4_fu_750_p2 = (mul_ln39_4_reg_1764 + add_ln39_3_reg_1774);

assign add_ln39_5_fu_754_p2 = (add_ln39_2_reg_1769 + add_ln39_4_fu_750_p2);

assign add_ln39_fu_621_p2 = (mul_ln39_2_reg_1683 + mul_ln39_reg_1673);

assign add_ln46_1_fu_760_p2 = (mul_ln46_3_reg_1784 + mul_ln46_2_reg_1779);

assign add_ln46_2_fu_764_p2 = (add_ln46_reg_1789 + add_ln46_1_fu_760_p2);

assign add_ln46_3_fu_702_p2 = (mul_ln46_5_fu_684_p2 + mul_ln46_4_fu_680_p2);

assign add_ln46_4_fu_708_p2 = (mul_ln46_7_fu_692_p2 + mul_ln46_6_fu_688_p2);

assign add_ln46_5_fu_769_p2 = (add_ln46_3_reg_1794 + add_ln46_4_reg_1799);

assign add_ln46_6_fu_773_p2 = (add_ln46_2_fu_764_p2 + add_ln46_5_fu_769_p2);

assign add_ln46_fu_696_p2 = (mul_ln46_fu_664_p2 + mul_ln46_1_fu_668_p2);

assign add_ln54_1_fu_736_p2 = (mul_ln54_4_fu_726_p2 + mul_ln54_3_fu_722_p2);

assign add_ln54_2_fu_784_p2 = (trunc_ln54_1_reg_1809 + trunc_ln54_reg_1804);

assign add_ln54_3_fu_1133_p2 = (mul_ln54_5_reg_1880 + mul_ln54_reg_1870);

assign add_ln54_4_fu_1137_p2 = (shl_ln3_fu_1126_p3 + add_ln54_3_fu_1133_p2);

assign add_ln54_5_fu_804_p2 = (mul_ln54_8_fu_800_p2 + mul_ln54_7_fu_796_p2);

assign add_ln54_6_fu_1143_p2 = (mul_ln54_6_reg_1885 + add_ln54_5_reg_1890);

assign add_ln54_7_fu_1147_p2 = (add_ln54_4_fu_1137_p2 + add_ln54_6_fu_1143_p2);

assign add_ln54_fu_730_p2 = (mul_ln54_1_fu_714_p2 + mul_ln54_2_fu_718_p2);

assign add_ln63_1_fu_856_p2 = (mul_ln63_4_fu_826_p2 + mul_ln63_3_fu_822_p2);

assign add_ln63_2_fu_1154_p2 = (mul_ln63_2_reg_1895 + add_ln63_1_reg_1920);

assign add_ln63_3_fu_1158_p2 = (add_ln63_reg_1915 + add_ln63_2_fu_1154_p2);

assign add_ln63_4_fu_862_p2 = (mul_ln63_6_fu_834_p2 + mul_ln63_5_fu_830_p2);

assign add_ln63_5_fu_1163_p2 = (mul_ln63_9_reg_1910 + mul_ln63_8_reg_1905);

assign add_ln63_6_fu_1167_p2 = (mul_ln63_7_reg_1900 + add_ln63_5_fu_1163_p2);

assign add_ln63_7_fu_1172_p2 = (add_ln63_4_reg_1925 + add_ln63_6_fu_1167_p2);

assign add_ln63_8_fu_1177_p2 = (add_ln63_3_fu_1158_p2 + add_ln63_7_fu_1172_p2);

assign add_ln63_fu_850_p2 = (mul_ln63_fu_810_p2 + mul_ln63_1_fu_814_p2);

assign add_ln73_1_fu_1184_p2 = (mul_ln73_4_reg_1940 + mul_ln73_3_reg_1935);

assign add_ln73_2_fu_1188_p2 = (mul_ln73_2_reg_1930 + add_ln73_1_fu_1184_p2);

assign add_ln73_3_fu_1197_p2 = (trunc_ln73_1_fu_1193_p1 + trunc_ln73_reg_1945);

assign add_ln73_4_fu_1210_p2 = (shl_ln4_fu_1202_p3 + mul_ln73_5_reg_1950);

assign add_ln73_5_fu_914_p2 = (mul_ln73_8_fu_910_p2 + mul_ln73_7_fu_906_p2);

assign add_ln73_6_fu_1324_p2 = (mul_ln73_6_reg_1955 + add_ln73_5_reg_1960);

assign add_ln73_7_fu_1328_p2 = (add_ln73_4_reg_2100 + add_ln73_6_fu_1324_p2);

assign add_ln73_fu_888_p2 = (mul_ln73_fu_868_p2 + mul_ln73_1_fu_872_p2);

assign add_ln82_1_fu_1215_p2 = (mul_ln82_3_reg_1970 + mul_ln82_2_reg_1965);

assign add_ln82_2_fu_1219_p2 = (add_ln82_reg_1975 + add_ln82_1_fu_1215_p2);

assign add_ln82_3_fu_958_p2 = (mul_ln82_5_fu_940_p2 + mul_ln82_4_fu_936_p2);

assign add_ln82_4_fu_964_p2 = (mul_ln82_7_fu_948_p2 + mul_ln82_6_fu_944_p2);

assign add_ln82_5_fu_1224_p2 = (add_ln82_3_reg_1980 + add_ln82_4_reg_1985);

assign add_ln82_6_fu_1228_p2 = (add_ln82_2_fu_1219_p2 + add_ln82_5_fu_1224_p2);

assign add_ln82_fu_952_p2 = (mul_ln82_fu_920_p2 + mul_ln82_1_fu_924_p2);

assign add_ln90_1_fu_996_p2 = (mul_ln90_4_fu_986_p2 + mul_ln90_3_fu_982_p2);

assign add_ln90_2_fu_1234_p2 = (trunc_ln90_1_reg_2000 + trunc_ln90_reg_1995);

assign add_ln90_3_fu_1246_p2 = (mul_ln90_reg_1990 + shl_ln5_fu_1238_p3);

assign add_ln90_4_fu_1251_p2 = (mul_ln90_6_reg_2010 + mul_ln90_5_reg_2005);

assign add_ln90_5_fu_1255_p2 = (add_ln90_3_fu_1246_p2 + add_ln90_4_fu_1251_p2);

assign add_ln90_fu_990_p2 = (mul_ln90_1_fu_974_p2 + mul_ln90_2_fu_978_p2);

assign add_ln97_1_fu_1265_p2 = (mul_ln97_1_reg_2020 + add_ln97_fu_1261_p2);

assign add_ln97_2_fu_1042_p2 = (mul_ln97_5_fu_1038_p2 + mul_ln97_4_fu_1034_p2);

assign add_ln97_3_fu_1270_p2 = (mul_ln97_3_reg_2030 + add_ln97_2_reg_2035);

assign add_ln97_4_fu_1274_p2 = (add_ln97_1_fu_1265_p2 + add_ln97_3_fu_1270_p2);

assign add_ln97_fu_1261_p2 = (mul_ln97_2_reg_2025 + mul_ln97_reg_2015);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign mul_ln103_1_fu_1052_p2 = ($signed(in2_load_5_reg_1594) * $signed(in_load_9_reg_1842));

assign mul_ln103_2_fu_1056_p2 = ($signed(in2_load_9_reg_1856) * $signed(in_load_5_reg_1580));

assign mul_ln103_3_fu_1060_p2 = ($signed(in2_load_6_reg_1702) * $signed(in_load_8_reg_1814));

assign mul_ln103_4_fu_1064_p2 = ($signed(in2_load_8_reg_1828) * $signed(in_load_6_reg_1688));

assign mul_ln103_fu_1048_p2 = ($signed(in2_load_7_reg_1730) * $signed(in_load_7_reg_1716));

assign mul_ln108_1_fu_1072_p2 = ($signed(in2_load_8_reg_1828) * $signed(in_load_7_reg_1716));

assign mul_ln108_2_fu_1076_p2 = ($signed(in2_load_6_reg_1702) * $signed(in_load_9_reg_1842));

assign mul_ln108_3_fu_1080_p2 = ($signed(in2_load_9_reg_1856) * $signed(in_load_6_reg_1688));

assign mul_ln108_fu_1068_p2 = ($signed(in2_load_7_reg_1730) * $signed(in_load_8_reg_1814));

assign mul_ln112_1_fu_1094_p2 = ($signed(in2_load_7_reg_1730) * $signed(in_load_9_reg_1842));

assign mul_ln112_2_fu_1098_p2 = ($signed(in2_load_9_reg_1856) * $signed(in_load_7_reg_1716));

assign mul_ln112_fu_1090_p2 = ($signed(in2_load_8_reg_1828) * $signed(in_load_8_reg_1814));

assign mul_ln115_1_fu_1112_p2 = ($signed(in2_load_9_reg_1856) * $signed(in_load_8_reg_1814));

assign mul_ln115_fu_1108_p2 = ($signed(in2_load_8_reg_1828) * $signed(in_load_9_reg_1842));

assign mul_ln117_fu_1122_p2 = ($signed(in2_load_9_reg_1856) * $signed(in_load_9_reg_1842));

assign mul_ln18_fu_434_p2 = ($signed(in2_load_reg_1360) * $signed(in_load_reg_1374));

assign mul_ln19_1_fu_442_p2 = ($signed(in2_load_1_reg_1402) * $signed(in_load_reg_1374));

assign mul_ln19_fu_438_p2 = ($signed(in2_load_reg_1360) * $signed(in_load_1_reg_1388));

assign mul_ln21_1_fu_456_p2 = ($signed(in2_load_reg_1360) * $signed(in_load_2_reg_1446));

assign mul_ln21_2_fu_460_p2 = ($signed(in2_load_2_reg_1460) * $signed(in_load_reg_1374));

assign mul_ln21_fu_452_p2 = ($signed(in2_load_1_reg_1402) * $signed(in_load_1_reg_1388));

assign mul_ln24_1_fu_468_p2 = ($signed(in2_load_2_reg_1460) * $signed(in_load_1_reg_1388));

assign mul_ln24_2_fu_472_p2 = ($signed(in2_load_reg_1360) * $signed(in_load_3_reg_1474));

assign mul_ln24_3_fu_476_p2 = ($signed(in2_load_3_reg_1488) * $signed(in_load_reg_1374));

assign mul_ln24_fu_464_p2 = ($signed(in2_load_1_reg_1402) * $signed(in_load_2_reg_1446));

assign mul_ln28_1_fu_516_p2 = ($signed(in2_load_1_reg_1402) * $signed(in_load_3_reg_1474));

assign mul_ln28_2_fu_520_p2 = ($signed(in2_load_3_reg_1488) * $signed(in_load_1_reg_1388));

assign mul_ln28_3_fu_530_p2 = ($signed(in2_load_reg_1360) * $signed(in_load_4_reg_1552));

assign mul_ln28_4_fu_534_p2 = ($signed(in2_load_4_reg_1566) * $signed(in_load_reg_1374));

assign mul_ln28_fu_512_p2 = ($signed(in2_load_2_reg_1460) * $signed(in_load_2_reg_1446));

assign mul_ln33_1_fu_542_p2 = ($signed(in2_load_3_reg_1488) * $signed(in_load_2_reg_1446));

assign mul_ln33_2_fu_546_p2 = ($signed(in2_load_1_reg_1402) * $signed(in_load_4_reg_1552));

assign mul_ln33_3_fu_550_p2 = ($signed(in2_load_4_reg_1566) * $signed(in_load_1_reg_1388));

assign mul_ln33_4_fu_554_p2 = ($signed(in2_load_reg_1360) * $signed(in_load_5_reg_1580));

assign mul_ln33_5_fu_558_p2 = ($signed(in2_load_5_reg_1594) * $signed(in_load_reg_1374));

assign mul_ln33_fu_538_p2 = ($signed(in2_load_2_reg_1460) * $signed(in_load_3_reg_1474));

assign mul_ln39_1_fu_572_p2 = ($signed(in2_load_1_reg_1402) * $signed(in_load_5_reg_1580));

assign mul_ln39_2_fu_576_p2 = ($signed(in2_load_5_reg_1594) * $signed(in_load_1_reg_1388));

assign mul_ln39_3_fu_636_p2 = ($signed(in2_load_2_reg_1460) * $signed(in_load_4_reg_1552));

assign mul_ln39_4_fu_640_p2 = ($signed(in2_load_4_reg_1566) * $signed(in_load_2_reg_1446));

assign mul_ln39_5_fu_644_p2 = ($signed(in2_load_reg_1360) * $signed(in_load_6_reg_1688));

assign mul_ln39_6_fu_648_p2 = ($signed(in2_load_6_reg_1702) * $signed(in_load_reg_1374));

assign mul_ln39_fu_568_p2 = ($signed(in2_load_3_reg_1488) * $signed(in_load_3_reg_1474));

assign mul_ln46_1_fu_668_p2 = ($signed(in2_load_4_reg_1566) * $signed(in_load_3_reg_1474));

assign mul_ln46_2_fu_672_p2 = ($signed(in2_load_2_reg_1460) * $signed(in_load_5_reg_1580));

assign mul_ln46_3_fu_676_p2 = ($signed(in2_load_5_reg_1594) * $signed(in_load_2_reg_1446));

assign mul_ln46_4_fu_680_p2 = ($signed(in2_load_1_reg_1402) * $signed(in_load_6_reg_1688));

assign mul_ln46_5_fu_684_p2 = ($signed(in2_load_6_reg_1702) * $signed(in_load_1_reg_1388));

assign mul_ln46_6_fu_688_p2 = ($signed(in2_load_reg_1360) * $signed(in_load_7_reg_1716));

assign mul_ln46_7_fu_692_p2 = ($signed(in2_load_7_reg_1730) * $signed(in_load_reg_1374));

assign mul_ln46_fu_664_p2 = ($signed(in2_load_3_reg_1488) * $signed(in_load_4_reg_1552));

assign mul_ln54_1_fu_714_p2 = ($signed(in2_load_3_reg_1488) * $signed(in_load_5_reg_1580));

assign mul_ln54_2_fu_718_p2 = ($signed(in2_load_5_reg_1594) * $signed(in_load_3_reg_1474));

assign mul_ln54_3_fu_722_p2 = ($signed(in2_load_1_reg_1402) * $signed(in_load_7_reg_1716));

assign mul_ln54_4_fu_726_p2 = ($signed(in2_load_7_reg_1730) * $signed(in_load_1_reg_1388));

assign mul_ln54_5_fu_788_p2 = ($signed(in2_load_2_reg_1460) * $signed(in_load_6_reg_1688));

assign mul_ln54_6_fu_792_p2 = ($signed(in2_load_6_reg_1702) * $signed(in_load_2_reg_1446));

assign mul_ln54_7_fu_796_p2 = ($signed(in2_load_reg_1360) * $signed(in_load_8_reg_1814));

assign mul_ln54_8_fu_800_p2 = ($signed(in2_load_8_reg_1828) * $signed(in_load_reg_1374));

assign mul_ln54_fu_780_p2 = ($signed(in2_load_4_reg_1566) * $signed(in_load_4_reg_1552));

assign mul_ln63_1_fu_814_p2 = ($signed(in2_load_5_reg_1594) * $signed(in_load_4_reg_1552));

assign mul_ln63_2_fu_818_p2 = ($signed(in2_load_3_reg_1488) * $signed(in_load_6_reg_1688));

assign mul_ln63_3_fu_822_p2 = ($signed(in2_load_6_reg_1702) * $signed(in_load_3_reg_1474));

assign mul_ln63_4_fu_826_p2 = ($signed(in2_load_2_reg_1460) * $signed(in_load_7_reg_1716));

assign mul_ln63_5_fu_830_p2 = ($signed(in2_load_7_reg_1730) * $signed(in_load_2_reg_1446));

assign mul_ln63_6_fu_834_p2 = ($signed(in2_load_1_reg_1402) * $signed(in_load_8_reg_1814));

assign mul_ln63_7_fu_838_p2 = ($signed(in2_load_8_reg_1828) * $signed(in_load_1_reg_1388));

assign mul_ln63_8_fu_842_p2 = ($signed(in2_load_reg_1360) * $signed(in_load_9_reg_1842));

assign mul_ln63_9_fu_846_p2 = ($signed(in2_load_9_reg_1856) * $signed(in_load_reg_1374));

assign mul_ln63_fu_810_p2 = ($signed(in2_load_4_reg_1566) * $signed(in_load_5_reg_1580));

assign mul_ln73_1_fu_872_p2 = ($signed(in2_load_3_reg_1488) * $signed(in_load_7_reg_1716));

assign mul_ln73_2_fu_876_p2 = ($signed(in2_load_7_reg_1730) * $signed(in_load_3_reg_1474));

assign mul_ln73_3_fu_880_p2 = ($signed(in2_load_1_reg_1402) * $signed(in_load_9_reg_1842));

assign mul_ln73_4_fu_884_p2 = ($signed(in2_load_9_reg_1856) * $signed(in_load_1_reg_1388));

assign mul_ln73_5_fu_898_p2 = ($signed(in2_load_4_reg_1566) * $signed(in_load_6_reg_1688));

assign mul_ln73_6_fu_902_p2 = ($signed(in2_load_6_reg_1702) * $signed(in_load_4_reg_1552));

assign mul_ln73_7_fu_906_p2 = ($signed(in2_load_2_reg_1460) * $signed(in_load_8_reg_1814));

assign mul_ln73_8_fu_910_p2 = ($signed(in2_load_8_reg_1828) * $signed(in_load_2_reg_1446));

assign mul_ln73_fu_868_p2 = ($signed(in2_load_5_reg_1594) * $signed(in_load_5_reg_1580));

assign mul_ln82_1_fu_924_p2 = ($signed(in2_load_6_reg_1702) * $signed(in_load_5_reg_1580));

assign mul_ln82_2_fu_928_p2 = ($signed(in2_load_4_reg_1566) * $signed(in_load_7_reg_1716));

assign mul_ln82_3_fu_932_p2 = ($signed(in2_load_7_reg_1730) * $signed(in_load_4_reg_1552));

assign mul_ln82_4_fu_936_p2 = ($signed(in2_load_3_reg_1488) * $signed(in_load_8_reg_1814));

assign mul_ln82_5_fu_940_p2 = ($signed(in2_load_8_reg_1828) * $signed(in_load_3_reg_1474));

assign mul_ln82_6_fu_944_p2 = ($signed(in2_load_2_reg_1460) * $signed(in_load_9_reg_1842));

assign mul_ln82_7_fu_948_p2 = ($signed(in2_load_9_reg_1856) * $signed(in_load_2_reg_1446));

assign mul_ln82_fu_920_p2 = ($signed(in2_load_5_reg_1594) * $signed(in_load_6_reg_1688));

assign mul_ln90_1_fu_974_p2 = ($signed(in2_load_5_reg_1594) * $signed(in_load_7_reg_1716));

assign mul_ln90_2_fu_978_p2 = ($signed(in2_load_7_reg_1730) * $signed(in_load_5_reg_1580));

assign mul_ln90_3_fu_982_p2 = ($signed(in2_load_3_reg_1488) * $signed(in_load_9_reg_1842));

assign mul_ln90_4_fu_986_p2 = ($signed(in2_load_9_reg_1856) * $signed(in_load_3_reg_1474));

assign mul_ln90_5_fu_1010_p2 = ($signed(in2_load_4_reg_1566) * $signed(in_load_8_reg_1814));

assign mul_ln90_6_fu_1014_p2 = ($signed(in2_load_8_reg_1828) * $signed(in_load_4_reg_1552));

assign mul_ln90_fu_970_p2 = ($signed(in2_load_6_reg_1702) * $signed(in_load_6_reg_1688));

assign mul_ln97_1_fu_1022_p2 = ($signed(in2_load_7_reg_1730) * $signed(in_load_6_reg_1688));

assign mul_ln97_2_fu_1026_p2 = ($signed(in2_load_5_reg_1594) * $signed(in_load_8_reg_1814));

assign mul_ln97_3_fu_1030_p2 = ($signed(in2_load_8_reg_1828) * $signed(in_load_5_reg_1580));

assign mul_ln97_4_fu_1034_p2 = ($signed(in2_load_4_reg_1566) * $signed(in_load_9_reg_1842));

assign mul_ln97_5_fu_1038_p2 = ($signed(in2_load_9_reg_1856) * $signed(in_load_4_reg_1552));

assign mul_ln97_fu_1018_p2 = ($signed(in2_load_6_reg_1702) * $signed(in_load_7_reg_1716));

assign shl_ln103_fu_1289_p2 = add_ln103_1_fu_1284_p2 << 32'd1;

assign shl_ln112_fu_1314_p2 = add_ln112_reg_2085 << 32'd1;

assign shl_ln117_fu_1334_p2 = mul_ln117_reg_2095 << 32'd1;

assign shl_ln21_fu_486_p2 = mul_ln21_reg_1522 << 32'd1;

assign shl_ln28_fu_580_p2 = add_ln28_reg_1633 << 32'd1;

assign shl_ln39_fu_630_p2 = add_ln39_1_fu_625_p2 << 32'd1;

assign shl_ln3_fu_1126_p3 = {{add_ln54_2_reg_1875}, {1'd0}};

assign shl_ln4_fu_1202_p3 = {{add_ln73_3_fu_1197_p2}, {1'd0}};

assign shl_ln5_fu_1238_p3 = {{add_ln90_2_fu_1234_p2}, {1'd0}};

assign trunc_ln54_1_fu_746_p1 = add_ln54_1_fu_736_p2[30:0];

assign trunc_ln54_fu_742_p1 = add_ln54_fu_730_p2[30:0];

assign trunc_ln73_1_fu_1193_p1 = add_ln73_2_fu_1188_p2[30:0];

assign trunc_ln73_fu_894_p1 = add_ln73_fu_888_p2[30:0];

assign trunc_ln90_1_fu_1006_p1 = add_ln90_1_fu_996_p2[30:0];

assign trunc_ln90_fu_1002_p1 = add_ln90_fu_990_p2[30:0];

endmodule //fproduct
