#include "hls_design_meta.h"
const Port_Property HLS_Design_Meta::port_props[]={
	Port_Property("ap_clk", 1, hls_in, -1, "", "", 1),
	Port_Property("ap_rst", 1, hls_in, -1, "", "", 1),
	Port_Property("ap_start", 1, hls_in, -1, "", "", 1),
	Port_Property("ap_done", 1, hls_out, -1, "", "", 1),
	Port_Property("ap_idle", 1, hls_out, -1, "", "", 1),
	Port_Property("ap_ready", 1, hls_out, -1, "", "", 1),
	Port_Property("r_address0", 10, hls_out, 0, "ap_memory", "mem_address", 1),
	Port_Property("r_ce0", 1, hls_out, 0, "ap_memory", "mem_ce", 1),
	Port_Property("r_we0", 1, hls_out, 0, "ap_memory", "mem_we", 1),
	Port_Property("r_d0", 16, hls_out, 0, "ap_memory", "mem_din", 1),
	Port_Property("g_address0", 10, hls_out, 1, "ap_memory", "mem_address", 1),
	Port_Property("g_ce0", 1, hls_out, 1, "ap_memory", "mem_ce", 1),
	Port_Property("g_we0", 1, hls_out, 1, "ap_memory", "mem_we", 1),
	Port_Property("g_d0", 16, hls_out, 1, "ap_memory", "mem_din", 1),
	Port_Property("b_address0", 10, hls_out, 2, "ap_memory", "mem_address", 1),
	Port_Property("b_ce0", 1, hls_out, 2, "ap_memory", "mem_ce", 1),
	Port_Property("b_we0", 1, hls_out, 2, "ap_memory", "mem_we", 1),
	Port_Property("b_d0", 16, hls_out, 2, "ap_memory", "mem_din", 1),
	Port_Property("a_address0", 10, hls_out, 3, "ap_memory", "mem_address", 1),
	Port_Property("a_ce0", 1, hls_out, 3, "ap_memory", "mem_ce", 1),
	Port_Property("a_we0", 1, hls_out, 3, "ap_memory", "mem_we", 1),
	Port_Property("a_d0", 16, hls_out, 3, "ap_memory", "mem_din", 1),
	Port_Property("in_r_address0", 10, hls_out, 4, "ap_memory", "mem_address", 1),
	Port_Property("in_r_ce0", 1, hls_out, 4, "ap_memory", "mem_ce", 1),
	Port_Property("in_r_q0", 8, hls_in, 4, "ap_memory", "mem_dout", 1),
	Port_Property("in_r_address1", 10, hls_out, 4, "ap_memory", "MemPortADDR2", 1),
	Port_Property("in_r_ce1", 1, hls_out, 4, "ap_memory", "MemPortCE2", 1),
	Port_Property("in_r_q1", 8, hls_in, 4, "ap_memory", "MemPortDOUT2", 1),
	Port_Property("i", 64, hls_in, 5, "ap_none", "in_data", 1),
	Port_Property("mode_bitdepth_address0", 10, hls_out, 6, "ap_memory", "mem_address", 1),
	Port_Property("mode_bitdepth_ce0", 1, hls_out, 6, "ap_memory", "mem_ce", 1),
	Port_Property("mode_bitdepth_q0", 32, hls_in, 6, "ap_memory", "mem_dout", 1),
	Port_Property("mode_colortype_address0", 10, hls_out, 7, "ap_memory", "mem_address", 1),
	Port_Property("mode_colortype_ce0", 1, hls_out, 7, "ap_memory", "mem_ce", 1),
	Port_Property("mode_colortype_q0", 32, hls_in, 7, "ap_memory", "mem_dout", 1),
	Port_Property("mode_key_r_address0", 10, hls_out, 8, "ap_memory", "mem_address", 1),
	Port_Property("mode_key_r_ce0", 1, hls_out, 8, "ap_memory", "mem_ce", 1),
	Port_Property("mode_key_r_q0", 32, hls_in, 8, "ap_memory", "mem_dout", 1),
	Port_Property("mode_key_g_address0", 10, hls_out, 9, "ap_memory", "mem_address", 1),
	Port_Property("mode_key_g_ce0", 1, hls_out, 9, "ap_memory", "mem_ce", 1),
	Port_Property("mode_key_g_we0", 1, hls_out, 9, "ap_memory", "mem_we", 1),
	Port_Property("mode_key_g_d0", 32, hls_out, 9, "ap_memory", "mem_din", 1),
	Port_Property("mode_key_g_q0", 32, hls_in, 9, "ap_memory", "mem_dout", 1),
	Port_Property("mode_key_g_address1", 10, hls_out, 9, "ap_memory", "MemPortADDR2", 1),
	Port_Property("mode_key_g_ce1", 1, hls_out, 9, "ap_memory", "MemPortCE2", 1),
	Port_Property("mode_key_g_we1", 1, hls_out, 9, "ap_memory", "MemPortWE2", 1),
	Port_Property("mode_key_g_d1", 32, hls_out, 9, "ap_memory", "MemPortDIN2", 1),
	Port_Property("mode_key_g_q1", 32, hls_in, 9, "ap_memory", "MemPortDOUT2", 1),
	Port_Property("mode_key_b_address0", 10, hls_out, 10, "ap_memory", "mem_address", 1),
	Port_Property("mode_key_b_ce0", 1, hls_out, 10, "ap_memory", "mem_ce", 1),
	Port_Property("mode_key_b_we0", 1, hls_out, 10, "ap_memory", "mem_we", 1),
	Port_Property("mode_key_b_d0", 32, hls_out, 10, "ap_memory", "mem_din", 1),
	Port_Property("mode_key_b_q0", 32, hls_in, 10, "ap_memory", "mem_dout", 1),
	Port_Property("mode_key_b_address1", 10, hls_out, 10, "ap_memory", "MemPortADDR2", 1),
	Port_Property("mode_key_b_ce1", 1, hls_out, 10, "ap_memory", "MemPortCE2", 1),
	Port_Property("mode_key_b_we1", 1, hls_out, 10, "ap_memory", "MemPortWE2", 1),
	Port_Property("mode_key_b_d1", 32, hls_out, 10, "ap_memory", "MemPortDIN2", 1),
	Port_Property("mode_key_b_q1", 32, hls_in, 10, "ap_memory", "MemPortDOUT2", 1),
	Port_Property("mode_key_defined_address0", 10, hls_out, 11, "ap_memory", "mem_address", 1),
	Port_Property("mode_key_defined_ce0", 1, hls_out, 11, "ap_memory", "mem_ce", 1),
	Port_Property("mode_key_defined_q0", 32, hls_in, 11, "ap_memory", "mem_dout", 1),
	Port_Property("ap_return", 32, hls_out, -1, "", "", 1),
};
const char* HLS_Design_Meta::dut_name = "getPixelColorRGBA16";
