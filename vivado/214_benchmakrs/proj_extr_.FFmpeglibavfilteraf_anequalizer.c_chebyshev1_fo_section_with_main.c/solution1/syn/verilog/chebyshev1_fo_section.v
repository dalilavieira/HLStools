// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="chebyshev1_fo_section,hls_ip_2019_1,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7k160t-fbg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=9.150600,HLS_SYN_LAT=61,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=92,HLS_SYN_FF=17283,HLS_SYN_LUT=27948,HLS_VERSION=2019_1}" *)

module chebyshev1_fo_section (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        S_b0,
        S_b0_ap_vld,
        S_b1,
        S_b1_ap_vld,
        S_b2,
        S_b2_ap_vld,
        S_b3,
        S_b3_ap_vld,
        S_b4,
        S_b4_ap_vld,
        S_a0,
        S_a0_ap_vld,
        S_a1,
        S_a1_ap_vld,
        S_a2,
        S_a2_ap_vld,
        S_a3,
        S_a3_ap_vld,
        S_a4,
        S_a4_ap_vld,
        a,
        c,
        tetta_b,
        g0,
        si,
        b,
        D,
        c0
);

parameter    ap_ST_fsm_state1 = 120'd1;
parameter    ap_ST_fsm_state2 = 120'd2;
parameter    ap_ST_fsm_state3 = 120'd4;
parameter    ap_ST_fsm_state4 = 120'd8;
parameter    ap_ST_fsm_state5 = 120'd16;
parameter    ap_ST_fsm_state6 = 120'd32;
parameter    ap_ST_fsm_state7 = 120'd64;
parameter    ap_ST_fsm_state8 = 120'd128;
parameter    ap_ST_fsm_state9 = 120'd256;
parameter    ap_ST_fsm_state10 = 120'd512;
parameter    ap_ST_fsm_state11 = 120'd1024;
parameter    ap_ST_fsm_state12 = 120'd2048;
parameter    ap_ST_fsm_state13 = 120'd4096;
parameter    ap_ST_fsm_state14 = 120'd8192;
parameter    ap_ST_fsm_state15 = 120'd16384;
parameter    ap_ST_fsm_state16 = 120'd32768;
parameter    ap_ST_fsm_state17 = 120'd65536;
parameter    ap_ST_fsm_state18 = 120'd131072;
parameter    ap_ST_fsm_state19 = 120'd262144;
parameter    ap_ST_fsm_state20 = 120'd524288;
parameter    ap_ST_fsm_state21 = 120'd1048576;
parameter    ap_ST_fsm_state22 = 120'd2097152;
parameter    ap_ST_fsm_state23 = 120'd4194304;
parameter    ap_ST_fsm_state24 = 120'd8388608;
parameter    ap_ST_fsm_state25 = 120'd16777216;
parameter    ap_ST_fsm_state26 = 120'd33554432;
parameter    ap_ST_fsm_state27 = 120'd67108864;
parameter    ap_ST_fsm_state28 = 120'd134217728;
parameter    ap_ST_fsm_state29 = 120'd268435456;
parameter    ap_ST_fsm_state30 = 120'd536870912;
parameter    ap_ST_fsm_state31 = 120'd1073741824;
parameter    ap_ST_fsm_state32 = 120'd2147483648;
parameter    ap_ST_fsm_state33 = 120'd4294967296;
parameter    ap_ST_fsm_state34 = 120'd8589934592;
parameter    ap_ST_fsm_state35 = 120'd17179869184;
parameter    ap_ST_fsm_state36 = 120'd34359738368;
parameter    ap_ST_fsm_state37 = 120'd68719476736;
parameter    ap_ST_fsm_state38 = 120'd137438953472;
parameter    ap_ST_fsm_state39 = 120'd274877906944;
parameter    ap_ST_fsm_state40 = 120'd549755813888;
parameter    ap_ST_fsm_state41 = 120'd1099511627776;
parameter    ap_ST_fsm_state42 = 120'd2199023255552;
parameter    ap_ST_fsm_state43 = 120'd4398046511104;
parameter    ap_ST_fsm_state44 = 120'd8796093022208;
parameter    ap_ST_fsm_state45 = 120'd17592186044416;
parameter    ap_ST_fsm_state46 = 120'd35184372088832;
parameter    ap_ST_fsm_state47 = 120'd70368744177664;
parameter    ap_ST_fsm_state48 = 120'd140737488355328;
parameter    ap_ST_fsm_state49 = 120'd281474976710656;
parameter    ap_ST_fsm_state50 = 120'd562949953421312;
parameter    ap_ST_fsm_state51 = 120'd1125899906842624;
parameter    ap_ST_fsm_state52 = 120'd2251799813685248;
parameter    ap_ST_fsm_state53 = 120'd4503599627370496;
parameter    ap_ST_fsm_state54 = 120'd9007199254740992;
parameter    ap_ST_fsm_state55 = 120'd18014398509481984;
parameter    ap_ST_fsm_state56 = 120'd36028797018963968;
parameter    ap_ST_fsm_state57 = 120'd72057594037927936;
parameter    ap_ST_fsm_state58 = 120'd144115188075855872;
parameter    ap_ST_fsm_state59 = 120'd288230376151711744;
parameter    ap_ST_fsm_state60 = 120'd576460752303423488;
parameter    ap_ST_fsm_state61 = 120'd1152921504606846976;
parameter    ap_ST_fsm_state62 = 120'd2305843009213693952;
parameter    ap_ST_fsm_state63 = 120'd4611686018427387904;
parameter    ap_ST_fsm_state64 = 120'd9223372036854775808;
parameter    ap_ST_fsm_state65 = 120'd18446744073709551616;
parameter    ap_ST_fsm_state66 = 120'd36893488147419103232;
parameter    ap_ST_fsm_state67 = 120'd73786976294838206464;
parameter    ap_ST_fsm_state68 = 120'd147573952589676412928;
parameter    ap_ST_fsm_state69 = 120'd295147905179352825856;
parameter    ap_ST_fsm_state70 = 120'd590295810358705651712;
parameter    ap_ST_fsm_state71 = 120'd1180591620717411303424;
parameter    ap_ST_fsm_state72 = 120'd2361183241434822606848;
parameter    ap_ST_fsm_state73 = 120'd4722366482869645213696;
parameter    ap_ST_fsm_state74 = 120'd9444732965739290427392;
parameter    ap_ST_fsm_state75 = 120'd18889465931478580854784;
parameter    ap_ST_fsm_state76 = 120'd37778931862957161709568;
parameter    ap_ST_fsm_state77 = 120'd75557863725914323419136;
parameter    ap_ST_fsm_state78 = 120'd151115727451828646838272;
parameter    ap_ST_fsm_state79 = 120'd302231454903657293676544;
parameter    ap_ST_fsm_state80 = 120'd604462909807314587353088;
parameter    ap_ST_fsm_state81 = 120'd1208925819614629174706176;
parameter    ap_ST_fsm_state82 = 120'd2417851639229258349412352;
parameter    ap_ST_fsm_state83 = 120'd4835703278458516698824704;
parameter    ap_ST_fsm_state84 = 120'd9671406556917033397649408;
parameter    ap_ST_fsm_state85 = 120'd19342813113834066795298816;
parameter    ap_ST_fsm_state86 = 120'd38685626227668133590597632;
parameter    ap_ST_fsm_state87 = 120'd77371252455336267181195264;
parameter    ap_ST_fsm_state88 = 120'd154742504910672534362390528;
parameter    ap_ST_fsm_state89 = 120'd309485009821345068724781056;
parameter    ap_ST_fsm_state90 = 120'd618970019642690137449562112;
parameter    ap_ST_fsm_state91 = 120'd1237940039285380274899124224;
parameter    ap_ST_fsm_state92 = 120'd2475880078570760549798248448;
parameter    ap_ST_fsm_state93 = 120'd4951760157141521099596496896;
parameter    ap_ST_fsm_state94 = 120'd9903520314283042199192993792;
parameter    ap_ST_fsm_state95 = 120'd19807040628566084398385987584;
parameter    ap_ST_fsm_state96 = 120'd39614081257132168796771975168;
parameter    ap_ST_fsm_state97 = 120'd79228162514264337593543950336;
parameter    ap_ST_fsm_state98 = 120'd158456325028528675187087900672;
parameter    ap_ST_fsm_state99 = 120'd316912650057057350374175801344;
parameter    ap_ST_fsm_state100 = 120'd633825300114114700748351602688;
parameter    ap_ST_fsm_state101 = 120'd1267650600228229401496703205376;
parameter    ap_ST_fsm_state102 = 120'd2535301200456458802993406410752;
parameter    ap_ST_fsm_state103 = 120'd5070602400912917605986812821504;
parameter    ap_ST_fsm_state104 = 120'd10141204801825835211973625643008;
parameter    ap_ST_fsm_state105 = 120'd20282409603651670423947251286016;
parameter    ap_ST_fsm_state106 = 120'd40564819207303340847894502572032;
parameter    ap_ST_fsm_state107 = 120'd81129638414606681695789005144064;
parameter    ap_ST_fsm_state108 = 120'd162259276829213363391578010288128;
parameter    ap_ST_fsm_state109 = 120'd324518553658426726783156020576256;
parameter    ap_ST_fsm_state110 = 120'd649037107316853453566312041152512;
parameter    ap_ST_fsm_state111 = 120'd1298074214633706907132624082305024;
parameter    ap_ST_fsm_state112 = 120'd2596148429267413814265248164610048;
parameter    ap_ST_fsm_state113 = 120'd5192296858534827628530496329220096;
parameter    ap_ST_fsm_state114 = 120'd10384593717069655257060992658440192;
parameter    ap_ST_fsm_state115 = 120'd20769187434139310514121985316880384;
parameter    ap_ST_fsm_state116 = 120'd41538374868278621028243970633760768;
parameter    ap_ST_fsm_state117 = 120'd83076749736557242056487941267521536;
parameter    ap_ST_fsm_state118 = 120'd166153499473114484112975882535043072;
parameter    ap_ST_fsm_state119 = 120'd332306998946228968225951765070086144;
parameter    ap_ST_fsm_state120 = 120'd664613997892457936451903530140172288;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [63:0] S_b0;
output   S_b0_ap_vld;
output  [31:0] S_b1;
output   S_b1_ap_vld;
output  [63:0] S_b2;
output   S_b2_ap_vld;
output  [31:0] S_b3;
output   S_b3_ap_vld;
output  [63:0] S_b4;
output   S_b4_ap_vld;
output  [31:0] S_a0;
output   S_a0_ap_vld;
output  [31:0] S_a1;
output   S_a1_ap_vld;
output  [63:0] S_a2;
output   S_a2_ap_vld;
output  [31:0] S_a3;
output   S_a3_ap_vld;
output  [63:0] S_a4;
output   S_a4_ap_vld;
input  [63:0] a;
input  [63:0] c;
input  [63:0] tetta_b;
input  [63:0] g0;
input  [63:0] si;
input  [63:0] b;
input  [63:0] D;
input  [63:0] c0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg S_b0_ap_vld;
reg[31:0] S_b1;
reg S_b1_ap_vld;
reg[63:0] S_b2;
reg S_b2_ap_vld;
reg[31:0] S_b3;
reg S_b3_ap_vld;
reg[63:0] S_b4;
reg S_b4_ap_vld;
reg S_a0_ap_vld;
reg[31:0] S_a1;
reg S_a1_ap_vld;
reg[63:0] S_a2;
reg S_a2_ap_vld;
reg[31:0] S_a3;
reg S_a3_ap_vld;
reg S_a4_ap_vld;

(* fsm_encoding = "none" *) reg   [119:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [63:0] grp_fu_257_p2;
reg   [63:0] reg_333;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state41;
wire    ap_CS_fsm_state67;
wire    ap_CS_fsm_state97;
reg   [63:0] reg_344;
wire    ap_CS_fsm_state11;
wire    ap_CS_fsm_state16;
wire    ap_CS_fsm_state21;
wire    ap_CS_fsm_state31;
wire    ap_CS_fsm_state36;
wire    ap_CS_fsm_state72;
wire    ap_CS_fsm_state77;
wire    ap_CS_fsm_state82;
wire    ap_CS_fsm_state87;
wire    ap_CS_fsm_state92;
wire   [63:0] grp_fu_263_p2;
reg   [63:0] reg_356;
wire    ap_CS_fsm_state26;
wire   [63:0] grp_fu_269_p2;
reg   [63:0] reg_368;
wire   [63:0] grp_fu_273_p2;
reg   [63:0] reg_380;
wire   [63:0] grp_fu_277_p2;
reg   [63:0] reg_390;
wire   [63:0] grp_fu_282_p2;
reg   [63:0] reg_398;
wire   [63:0] grp_fu_232_p2;
reg   [63:0] reg_405;
wire   [63:0] grp_fu_286_p2;
reg   [63:0] reg_415;
wire   [63:0] grp_fu_236_p2;
reg   [63:0] reg_421;
wire   [63:0] grp_fu_241_p2;
reg   [63:0] reg_431;
wire   [63:0] grp_fu_245_p2;
reg   [63:0] reg_439;
wire   [63:0] grp_fu_250_p2;
reg   [63:0] reg_445;
wire   [63:0] grp_fu_298_p2;
reg   [63:0] reg_451;
wire    ap_CS_fsm_state53;
wire    ap_CS_fsm_state119;
wire   [63:0] grp_fu_306_p2;
reg   [63:0] reg_455;
wire    ap_CS_fsm_state2;
wire   [0:0] and_ln23_fu_500_p2;
reg   [0:0] and_ln23_reg_1444;
reg   [63:0] tmp_41_reg_1448;
reg   [63:0] tmp_60_reg_1453;
wire   [63:0] grp_fu_294_p2;
reg   [63:0] x_assign_2_reg_1458;
wire   [63:0] grp_fu_302_p2;
reg   [63:0] x_assign_4_reg_1463;
reg   [63:0] tmp_12_reg_1468;
reg   [63:0] ap_phi_mux_storemerge_phi_fu_224_p4;
reg   [63:0] storemerge_reg_220;
wire    ap_CS_fsm_state63;
wire    ap_CS_fsm_state120;
wire   [31:0] p_Val2_35_fu_641_p3;
wire    ap_CS_fsm_state54;
wire   [31:0] p_Val2_31_fu_1220_p3;
wire   [31:0] p_Val2_37_fu_786_p3;
wire   [31:0] p_Val2_39_fu_930_p3;
wire   [31:0] p_Val2_33_fu_1365_p3;
wire   [31:0] p_Val2_41_fu_1075_p3;
wire    ap_CS_fsm_state58;
wire   [63:0] grp_fu_316_p2;
reg   [63:0] grp_fu_232_p0;
reg   [63:0] grp_fu_232_p1;
wire    ap_CS_fsm_state12;
wire    ap_CS_fsm_state17;
wire    ap_CS_fsm_state22;
wire    ap_CS_fsm_state27;
wire    ap_CS_fsm_state32;
wire    ap_CS_fsm_state37;
wire    ap_CS_fsm_state78;
wire    ap_CS_fsm_state88;
wire    ap_CS_fsm_state93;
reg   [63:0] grp_fu_236_p0;
reg   [63:0] grp_fu_236_p1;
reg   [63:0] grp_fu_241_p0;
reg   [63:0] grp_fu_241_p1;
reg   [63:0] grp_fu_245_p0;
reg   [63:0] grp_fu_245_p1;
reg   [63:0] grp_fu_250_p0;
reg   [63:0] grp_fu_257_p0;
reg   [63:0] grp_fu_257_p1;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state68;
wire    ap_CS_fsm_state73;
wire    ap_CS_fsm_state83;
reg   [63:0] grp_fu_263_p0;
reg   [63:0] grp_fu_263_p1;
reg   [63:0] grp_fu_269_p0;
reg   [63:0] grp_fu_269_p1;
reg   [63:0] grp_fu_273_p0;
reg   [63:0] grp_fu_273_p1;
reg   [63:0] grp_fu_277_p0;
reg   [63:0] grp_fu_277_p1;
reg   [63:0] grp_fu_282_p0;
reg   [63:0] grp_fu_282_p1;
reg   [63:0] grp_fu_286_p0;
reg   [63:0] grp_fu_286_p1;
reg   [63:0] grp_fu_294_p0;
wire    ap_CS_fsm_state42;
wire    ap_CS_fsm_state98;
reg   [63:0] grp_fu_298_p0;
reg   [63:0] grp_fu_302_p0;
reg   [63:0] grp_fu_306_p0;
wire   [63:0] bitcast_ln23_fu_459_p1;
wire   [10:0] tmp_fu_462_p4;
wire   [51:0] trunc_ln23_fu_472_p1;
wire   [0:0] icmp_ln23_1_fu_482_p2;
wire   [0:0] icmp_ln23_fu_476_p2;
wire   [0:0] grp_fu_321_p2;
wire   [0:0] grp_fu_327_p2;
wire   [0:0] or_ln23_fu_488_p2;
wire   [0:0] or_ln23_1_fu_494_p2;
wire   [63:0] p_Val2_10_fu_506_p1;
wire   [51:0] tmp_V_5_fu_527_p1;
wire   [53:0] mantissa_V_2_fu_531_p4;
wire   [10:0] tmp_V_4_fu_517_p4;
wire   [11:0] zext_ln502_2_fu_545_p1;
wire   [11:0] add_ln502_2_fu_549_p2;
wire   [10:0] sub_ln1311_2_fu_563_p2;
wire   [0:0] isNeg_2_fu_555_p3;
wire  signed [11:0] sext_ln1311_4_fu_569_p1;
wire   [11:0] ush_2_fu_573_p3;
wire  signed [31:0] sext_ln1311_5_fu_581_p1;
wire   [53:0] zext_ln1285_2_fu_589_p1;
wire   [136:0] zext_ln682_2_fu_541_p1;
wire   [136:0] zext_ln1287_2_fu_585_p1;
wire   [53:0] r_V_4_fu_593_p2;
wire   [0:0] tmp_101_fu_605_p3;
wire   [136:0] r_V_5_fu_599_p2;
wire   [31:0] zext_ln662_2_fu_613_p1;
wire   [31:0] tmp_89_fu_617_p4;
wire   [31:0] p_Val2_34_fu_627_p3;
wire   [0:0] p_Result_2_fu_509_p3;
wire   [31:0] result_V_5_fu_635_p2;
wire   [63:0] p_Val2_15_fu_650_p1;
wire   [51:0] tmp_V_7_fu_672_p1;
wire   [53:0] mantissa_V_3_fu_676_p4;
wire   [10:0] tmp_V_6_fu_662_p4;
wire   [11:0] zext_ln502_3_fu_690_p1;
wire   [11:0] add_ln502_3_fu_694_p2;
wire   [10:0] sub_ln1311_3_fu_708_p2;
wire   [0:0] isNeg_3_fu_700_p3;
wire  signed [11:0] sext_ln1311_6_fu_714_p1;
wire   [11:0] ush_3_fu_718_p3;
wire  signed [31:0] sext_ln1311_7_fu_726_p1;
wire   [53:0] zext_ln1285_3_fu_734_p1;
wire   [136:0] zext_ln682_3_fu_686_p1;
wire   [136:0] zext_ln1287_3_fu_730_p1;
wire   [53:0] r_V_6_fu_738_p2;
wire   [0:0] tmp_104_fu_750_p3;
wire   [136:0] r_V_7_fu_744_p2;
wire   [31:0] zext_ln662_3_fu_758_p1;
wire   [31:0] tmp_90_fu_762_p4;
wire   [31:0] p_Val2_36_fu_772_p3;
wire   [0:0] p_Result_3_fu_654_p3;
wire   [31:0] result_V_7_fu_780_p2;
wire   [63:0] p_Val2_20_fu_795_p1;
wire   [51:0] tmp_V_9_fu_816_p1;
wire   [53:0] mantissa_V_4_fu_820_p4;
wire   [10:0] tmp_V_8_fu_806_p4;
wire   [11:0] zext_ln502_4_fu_834_p1;
wire   [11:0] add_ln502_4_fu_838_p2;
wire   [10:0] sub_ln1311_4_fu_852_p2;
wire   [0:0] isNeg_4_fu_844_p3;
wire  signed [11:0] sext_ln1311_8_fu_858_p1;
wire   [11:0] ush_4_fu_862_p3;
wire  signed [31:0] sext_ln1311_9_fu_870_p1;
wire   [53:0] zext_ln1285_4_fu_878_p1;
wire   [136:0] zext_ln682_4_fu_830_p1;
wire   [136:0] zext_ln1287_4_fu_874_p1;
wire   [53:0] r_V_8_fu_882_p2;
wire   [0:0] tmp_107_fu_894_p3;
wire   [136:0] r_V_9_fu_888_p2;
wire   [31:0] zext_ln662_4_fu_902_p1;
wire   [31:0] tmp_92_fu_906_p4;
wire   [31:0] p_Val2_38_fu_916_p3;
wire   [0:0] p_Result_4_fu_798_p3;
wire   [31:0] result_V_9_fu_924_p2;
wire   [63:0] p_Val2_25_fu_939_p1;
wire   [51:0] tmp_V_11_fu_961_p1;
wire   [53:0] mantissa_V_5_fu_965_p4;
wire   [10:0] tmp_V_10_fu_951_p4;
wire   [11:0] zext_ln502_5_fu_979_p1;
wire   [11:0] add_ln502_5_fu_983_p2;
wire   [10:0] sub_ln1311_5_fu_997_p2;
wire   [0:0] isNeg_5_fu_989_p3;
wire  signed [11:0] sext_ln1311_10_fu_1003_p1;
wire   [11:0] ush_5_fu_1007_p3;
wire  signed [31:0] sext_ln1311_11_fu_1015_p1;
wire   [53:0] zext_ln1285_5_fu_1023_p1;
wire   [136:0] zext_ln682_5_fu_975_p1;
wire   [136:0] zext_ln1287_5_fu_1019_p1;
wire   [53:0] r_V_10_fu_1027_p2;
wire   [0:0] tmp_110_fu_1039_p3;
wire   [136:0] r_V_11_fu_1033_p2;
wire   [31:0] zext_ln662_5_fu_1047_p1;
wire   [31:0] tmp_93_fu_1051_p4;
wire   [31:0] p_Val2_40_fu_1061_p3;
wire   [0:0] p_Result_5_fu_943_p3;
wire   [31:0] result_V_11_fu_1069_p2;
wire   [63:0] p_Val2_s_fu_1084_p1;
wire   [51:0] tmp_V_1_fu_1106_p1;
wire   [53:0] mantissa_V_fu_1110_p4;
wire   [10:0] tmp_V_fu_1096_p4;
wire   [11:0] zext_ln502_fu_1124_p1;
wire   [11:0] add_ln502_fu_1128_p2;
wire   [10:0] sub_ln1311_fu_1142_p2;
wire   [0:0] isNeg_fu_1134_p3;
wire  signed [11:0] sext_ln1311_fu_1148_p1;
wire   [11:0] ush_fu_1152_p3;
wire  signed [31:0] sext_ln1311_1_fu_1160_p1;
wire   [53:0] zext_ln1285_fu_1168_p1;
wire   [136:0] zext_ln682_fu_1120_p1;
wire   [136:0] zext_ln1287_fu_1164_p1;
wire   [53:0] r_V_fu_1172_p2;
wire   [0:0] tmp_91_fu_1184_p3;
wire   [136:0] r_V_1_fu_1178_p2;
wire   [31:0] zext_ln662_fu_1192_p1;
wire   [31:0] tmp_29_fu_1196_p4;
wire   [31:0] p_Val2_30_fu_1206_p3;
wire   [0:0] p_Result_s_fu_1088_p3;
wire   [31:0] result_V_1_fu_1214_p2;
wire   [63:0] p_Val2_5_fu_1229_p1;
wire   [51:0] tmp_V_3_fu_1251_p1;
wire   [53:0] mantissa_V_1_fu_1255_p4;
wire   [10:0] tmp_V_2_fu_1241_p4;
wire   [11:0] zext_ln502_1_fu_1269_p1;
wire   [11:0] add_ln502_1_fu_1273_p2;
wire   [10:0] sub_ln1311_1_fu_1287_p2;
wire   [0:0] isNeg_1_fu_1279_p3;
wire  signed [11:0] sext_ln1311_2_fu_1293_p1;
wire   [11:0] ush_1_fu_1297_p3;
wire  signed [31:0] sext_ln1311_3_fu_1305_p1;
wire   [53:0] zext_ln1285_1_fu_1313_p1;
wire   [136:0] zext_ln682_1_fu_1265_p1;
wire   [136:0] zext_ln1287_1_fu_1309_p1;
wire   [53:0] r_V_2_fu_1317_p2;
wire   [0:0] tmp_97_fu_1329_p3;
wire   [136:0] r_V_3_fu_1323_p2;
wire   [31:0] zext_ln662_1_fu_1337_p1;
wire   [31:0] tmp_88_fu_1341_p4;
wire   [31:0] p_Val2_32_fu_1351_p3;
wire   [0:0] p_Result_1_fu_1233_p3;
wire   [31:0] result_V_3_fu_1359_p2;
reg   [1:0] grp_fu_232_opcode;
reg   [1:0] grp_fu_236_opcode;
reg   [1:0] grp_fu_241_opcode;
reg   [119:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 120'd1;
end

chebyshev1_fo_section_dadddsub_64ns_64ns_64_5_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
chebyshev1_fo_section_dadddsub_64ns_64ns_64_5_full_dsp_1_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_232_p0),
    .din1(grp_fu_232_p1),
    .opcode(grp_fu_232_opcode),
    .ce(1'b1),
    .dout(grp_fu_232_p2)
);

chebyshev1_fo_section_dadddsub_64ns_64ns_64_5_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
chebyshev1_fo_section_dadddsub_64ns_64ns_64_5_full_dsp_1_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_236_p0),
    .din1(grp_fu_236_p1),
    .opcode(grp_fu_236_opcode),
    .ce(1'b1),
    .dout(grp_fu_236_p2)
);

chebyshev1_fo_section_dadddsub_64ns_64ns_64_5_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
chebyshev1_fo_section_dadddsub_64ns_64ns_64_5_full_dsp_1_U3(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_241_p0),
    .din1(grp_fu_241_p1),
    .opcode(grp_fu_241_opcode),
    .ce(1'b1),
    .dout(grp_fu_241_p2)
);

chebyshev1_fo_section_dadd_64ns_64ns_64_5_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
chebyshev1_fo_section_dadd_64ns_64ns_64_5_full_dsp_1_U4(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_245_p0),
    .din1(grp_fu_245_p1),
    .ce(1'b1),
    .dout(grp_fu_245_p2)
);

chebyshev1_fo_section_dsub_64ns_64ns_64_5_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
chebyshev1_fo_section_dsub_64ns_64ns_64_5_full_dsp_1_U5(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_250_p0),
    .din1(reg_380),
    .ce(1'b1),
    .dout(grp_fu_250_p2)
);

chebyshev1_fo_section_dmul_64ns_64ns_64_5_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
chebyshev1_fo_section_dmul_64ns_64ns_64_5_max_dsp_1_U6(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_257_p0),
    .din1(grp_fu_257_p1),
    .ce(1'b1),
    .dout(grp_fu_257_p2)
);

chebyshev1_fo_section_dmul_64ns_64ns_64_5_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
chebyshev1_fo_section_dmul_64ns_64ns_64_5_max_dsp_1_U7(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_263_p0),
    .din1(grp_fu_263_p1),
    .ce(1'b1),
    .dout(grp_fu_263_p2)
);

chebyshev1_fo_section_dmul_64ns_64ns_64_5_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
chebyshev1_fo_section_dmul_64ns_64ns_64_5_max_dsp_1_U8(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_269_p0),
    .din1(grp_fu_269_p1),
    .ce(1'b1),
    .dout(grp_fu_269_p2)
);

chebyshev1_fo_section_dmul_64ns_64ns_64_5_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
chebyshev1_fo_section_dmul_64ns_64ns_64_5_max_dsp_1_U9(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_273_p0),
    .din1(grp_fu_273_p1),
    .ce(1'b1),
    .dout(grp_fu_273_p2)
);

chebyshev1_fo_section_dmul_64ns_64ns_64_5_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
chebyshev1_fo_section_dmul_64ns_64ns_64_5_max_dsp_1_U10(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_277_p0),
    .din1(grp_fu_277_p1),
    .ce(1'b1),
    .dout(grp_fu_277_p2)
);

chebyshev1_fo_section_dmul_64ns_64ns_64_5_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
chebyshev1_fo_section_dmul_64ns_64ns_64_5_max_dsp_1_U11(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_282_p0),
    .din1(grp_fu_282_p1),
    .ce(1'b1),
    .dout(grp_fu_282_p2)
);

chebyshev1_fo_section_dmul_64ns_64ns_64_5_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
chebyshev1_fo_section_dmul_64ns_64ns_64_5_max_dsp_1_U12(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_286_p0),
    .din1(grp_fu_286_p1),
    .ce(1'b1),
    .dout(grp_fu_286_p2)
);

chebyshev1_fo_section_ddiv_64ns_64ns_64_22_1 #(
    .ID( 1 ),
    .NUM_STAGE( 22 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
chebyshev1_fo_section_ddiv_64ns_64ns_64_22_1_U13(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_294_p0),
    .din1(D),
    .ce(1'b1),
    .dout(grp_fu_294_p2)
);

chebyshev1_fo_section_ddiv_64ns_64ns_64_22_1 #(
    .ID( 1 ),
    .NUM_STAGE( 22 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
chebyshev1_fo_section_ddiv_64ns_64ns_64_22_1_U14(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_298_p0),
    .din1(D),
    .ce(1'b1),
    .dout(grp_fu_298_p2)
);

chebyshev1_fo_section_ddiv_64ns_64ns_64_22_1 #(
    .ID( 1 ),
    .NUM_STAGE( 22 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
chebyshev1_fo_section_ddiv_64ns_64ns_64_22_1_U15(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_302_p0),
    .din1(D),
    .ce(1'b1),
    .dout(grp_fu_302_p2)
);

chebyshev1_fo_section_ddiv_64ns_64ns_64_22_1 #(
    .ID( 1 ),
    .NUM_STAGE( 22 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
chebyshev1_fo_section_ddiv_64ns_64ns_64_22_1_U16(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_306_p0),
    .din1(D),
    .ce(1'b1),
    .dout(grp_fu_306_p2)
);

chebyshev1_fo_section_ddiv_64ns_64ns_64_22_1 #(
    .ID( 1 ),
    .NUM_STAGE( 22 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
chebyshev1_fo_section_ddiv_64ns_64ns_64_22_1_U17(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_431),
    .din1(D),
    .ce(1'b1),
    .dout(grp_fu_316_p2)
);

chebyshev1_fo_section_dcmp_64ns_64ns_1_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 1 ))
chebyshev1_fo_section_dcmp_64ns_64ns_1_2_1_U18(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(c0),
    .din1(64'd4607182418800017408),
    .ce(1'b1),
    .opcode(5'd1),
    .dout(grp_fu_321_p2)
);

chebyshev1_fo_section_dcmp_64ns_64ns_1_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 1 ))
chebyshev1_fo_section_dcmp_64ns_64ns_1_2_1_U19(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(c0),
    .din1(64'd13830554455654793216),
    .ce(1'b1),
    .opcode(5'd1),
    .dout(grp_fu_327_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state120)) begin
        storemerge_reg_220 <= 64'd0;
    end else if (((1'd0 == and_ln23_reg_1444) & (1'b1 == ap_CS_fsm_state63))) begin
        storemerge_reg_220 <= grp_fu_306_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        and_ln23_reg_1444 <= and_ln23_fu_500_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state97) | (1'b1 == ap_CS_fsm_state67) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state6))) begin
        reg_333 <= grp_fu_257_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state92) | (1'b1 == ap_CS_fsm_state87) | (1'b1 == ap_CS_fsm_state82) | (1'b1 == ap_CS_fsm_state77) | (1'b1 == ap_CS_fsm_state72) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state11))) begin
        reg_344 <= grp_fu_257_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state82) | (1'b1 == ap_CS_fsm_state77) | (1'b1 == ap_CS_fsm_state72) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state97) | (1'b1 == ap_CS_fsm_state67))) begin
        reg_356 <= grp_fu_263_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state87) | (1'b1 == ap_CS_fsm_state82) | (1'b1 == ap_CS_fsm_state77) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state11))) begin
        reg_368 <= grp_fu_269_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state87) | (1'b1 == ap_CS_fsm_state77) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state11))) begin
        reg_380 <= grp_fu_273_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state77) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state11))) begin
        reg_390 <= grp_fu_277_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state77) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state16))) begin
        reg_398 <= grp_fu_282_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state92) | (1'b1 == ap_CS_fsm_state82) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state97) | (1'b1 == ap_CS_fsm_state41))) begin
        reg_405 <= grp_fu_232_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state16))) begin
        reg_415 <= grp_fu_286_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state92) | (1'b1 == ap_CS_fsm_state82) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state97) | (1'b1 == ap_CS_fsm_state41))) begin
        reg_421 <= grp_fu_236_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state92) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state97) | (1'b1 == ap_CS_fsm_state41))) begin
        reg_431 <= grp_fu_241_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state92))) begin
        reg_439 <= grp_fu_245_p2;
        reg_445 <= grp_fu_250_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state119) | (1'b1 == ap_CS_fsm_state53))) begin
        reg_451 <= grp_fu_298_p2;
        reg_455 <= grp_fu_306_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state87)) begin
        tmp_12_reg_1468 <= grp_fu_263_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        tmp_41_reg_1448 <= grp_fu_257_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        tmp_60_reg_1453 <= grp_fu_236_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state53)) begin
        x_assign_2_reg_1458 <= grp_fu_294_p2;
        x_assign_4_reg_1463 <= grp_fu_302_p2;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state120) | ((1'd0 == and_ln23_reg_1444) & (1'b1 == ap_CS_fsm_state63)))) begin
        S_a0_ap_vld = 1'b1;
    end else begin
        S_a0_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state120)) begin
        S_a1 = p_Val2_33_fu_1365_p3;
    end else if ((1'b1 == ap_CS_fsm_state54)) begin
        S_a1 = p_Val2_39_fu_930_p3;
    end else begin
        S_a1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state120))) begin
        S_a1_ap_vld = 1'b1;
    end else begin
        S_a1_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state119)) begin
        S_a2 = grp_fu_316_p2;
    end else if ((1'b1 == ap_CS_fsm_state58)) begin
        S_a2 = grp_fu_294_p2;
    end else begin
        S_a2 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state119))) begin
        S_a2_ap_vld = 1'b1;
    end else begin
        S_a2_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state120)) begin
        S_a3 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state54)) begin
        S_a3 = p_Val2_41_fu_1075_p3;
    end else begin
        S_a3 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state120))) begin
        S_a3_ap_vld = 1'b1;
    end else begin
        S_a3_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state63)) begin
        S_a4_ap_vld = 1'b1;
    end else begin
        S_a4_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state119) | ((1'd0 == and_ln23_reg_1444) & (1'b1 == ap_CS_fsm_state63)))) begin
        S_b0_ap_vld = 1'b1;
    end else begin
        S_b0_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state120)) begin
        S_b1 = p_Val2_31_fu_1220_p3;
    end else if ((1'b1 == ap_CS_fsm_state54)) begin
        S_b1 = p_Val2_35_fu_641_p3;
    end else begin
        S_b1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state120))) begin
        S_b1_ap_vld = 1'b1;
    end else begin
        S_b1_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state119)) begin
        S_b2 = grp_fu_302_p2;
    end else if (((1'd0 == and_ln23_reg_1444) & (1'b1 == ap_CS_fsm_state63))) begin
        S_b2 = grp_fu_298_p2;
    end else begin
        S_b2 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state119) | ((1'd0 == and_ln23_reg_1444) & (1'b1 == ap_CS_fsm_state63)))) begin
        S_b2_ap_vld = 1'b1;
    end else begin
        S_b2_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state120)) begin
        S_b3 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state54)) begin
        S_b3 = p_Val2_37_fu_786_p3;
    end else begin
        S_b3 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state120))) begin
        S_b3_ap_vld = 1'b1;
    end else begin
        S_b3_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state120)) begin
        S_b4 = 64'd0;
    end else if (((1'd0 == and_ln23_reg_1444) & (1'b1 == ap_CS_fsm_state63))) begin
        S_b4 = grp_fu_302_p2;
    end else begin
        S_b4 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state120) | ((1'd0 == and_ln23_reg_1444) & (1'b1 == ap_CS_fsm_state63)))) begin
        S_b4_ap_vld = 1'b1;
    end else begin
        S_b4_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state63)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'd0 == and_ln23_reg_1444) & (1'b1 == ap_CS_fsm_state63))) begin
        ap_phi_mux_storemerge_phi_fu_224_p4 = grp_fu_306_p2;
    end else begin
        ap_phi_mux_storemerge_phi_fu_224_p4 = storemerge_reg_220;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state63)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        grp_fu_232_opcode = 2'd1;
    end else if (((1'b1 == ap_CS_fsm_state93) | (1'b1 == ap_CS_fsm_state88) | (1'b1 == ap_CS_fsm_state78) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state12))) begin
        grp_fu_232_opcode = 2'd0;
    end else begin
        grp_fu_232_opcode = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state93) | (1'b1 == ap_CS_fsm_state37))) begin
        grp_fu_232_p0 = reg_405;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        grp_fu_232_p0 = reg_421;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        grp_fu_232_p0 = reg_333;
    end else if (((1'b1 == ap_CS_fsm_state88) | (1'b1 == ap_CS_fsm_state78) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state17))) begin
        grp_fu_232_p0 = reg_344;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        grp_fu_232_p0 = reg_380;
    end else begin
        grp_fu_232_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state88)) begin
        grp_fu_232_p1 = tmp_12_reg_1468;
    end else if (((1'b1 == ap_CS_fsm_state93) | (1'b1 == ap_CS_fsm_state37))) begin
        grp_fu_232_p1 = reg_333;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        grp_fu_232_p1 = reg_368;
    end else if (((1'b1 == ap_CS_fsm_state78) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state17))) begin
        grp_fu_232_p1 = reg_356;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        grp_fu_232_p1 = reg_390;
    end else begin
        grp_fu_232_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state88) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state27))) begin
        grp_fu_236_opcode = 2'd1;
    end else if (((1'b1 == ap_CS_fsm_state93) | (1'b1 == ap_CS_fsm_state78) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state22))) begin
        grp_fu_236_opcode = 2'd0;
    end else begin
        grp_fu_236_opcode = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state88)) begin
        grp_fu_236_p0 = reg_344;
    end else if (((1'b1 == ap_CS_fsm_state93) | (1'b1 == ap_CS_fsm_state37))) begin
        grp_fu_236_p0 = reg_431;
    end else if (((1'b1 == ap_CS_fsm_state78) | (1'b1 == ap_CS_fsm_state32))) begin
        grp_fu_236_p0 = reg_380;
    end else if (((1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state22))) begin
        grp_fu_236_p0 = reg_368;
    end else begin
        grp_fu_236_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state78)) begin
        grp_fu_236_p1 = reg_390;
    end else if (((1'b1 == ap_CS_fsm_state93) | (1'b1 == ap_CS_fsm_state88) | (1'b1 == ap_CS_fsm_state37))) begin
        grp_fu_236_p1 = reg_333;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        grp_fu_236_p1 = reg_344;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        grp_fu_236_p1 = reg_380;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        grp_fu_236_p1 = 64'd4607182418800017408;
    end else begin
        grp_fu_236_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state88) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state22))) begin
        grp_fu_241_opcode = 2'd1;
    end else if (((1'b1 == ap_CS_fsm_state93) | (1'b1 == ap_CS_fsm_state37))) begin
        grp_fu_241_opcode = 2'd0;
    end else begin
        grp_fu_241_opcode = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state93)) begin
        grp_fu_241_p0 = reg_445;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        grp_fu_241_p0 = reg_421;
    end else if (((1'b1 == ap_CS_fsm_state88) | (1'b1 == ap_CS_fsm_state32))) begin
        grp_fu_241_p0 = reg_344;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        grp_fu_241_p0 = reg_333;
    end else begin
        grp_fu_241_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state93) | (1'b1 == ap_CS_fsm_state37))) begin
        grp_fu_241_p1 = 64'd4607182418800017408;
    end else if (((1'b1 == ap_CS_fsm_state88) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state22))) begin
        grp_fu_241_p1 = reg_356;
    end else begin
        grp_fu_241_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state88)) begin
        grp_fu_245_p0 = reg_368;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        grp_fu_245_p0 = reg_380;
    end else begin
        grp_fu_245_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state88)) begin
        grp_fu_245_p1 = 64'd13830554455654793216;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        grp_fu_245_p1 = 64'd4607182418800017408;
    end else begin
        grp_fu_245_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state88)) begin
        grp_fu_250_p0 = reg_368;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        grp_fu_250_p0 = 64'd4607182418800017408;
    end else begin
        grp_fu_250_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state88)) begin
        grp_fu_257_p0 = c0;
    end else if (((1'b1 == ap_CS_fsm_state83) | (1'b1 == ap_CS_fsm_state93))) begin
        grp_fu_257_p0 = reg_344;
    end else if ((1'b1 == ap_CS_fsm_state78)) begin
        grp_fu_257_p0 = tetta_b;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        grp_fu_257_p0 = tmp_60_reg_1453;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        grp_fu_257_p0 = tmp_41_reg_1448;
    end else if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state22))) begin
        grp_fu_257_p0 = reg_405;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        grp_fu_257_p0 = reg_368;
    end else if (((1'b1 == ap_CS_fsm_state73) | (1'b1 == ap_CS_fsm_state12))) begin
        grp_fu_257_p0 = b;
    end else if (((1'b1 == ap_CS_fsm_state68) | (1'b1 == ap_CS_fsm_state7))) begin
        grp_fu_257_p0 = reg_333;
    end else if ((((1'd1 == and_ln23_fu_500_p2) & (1'b1 == ap_CS_fsm_state2)) | ((1'd0 == and_ln23_fu_500_p2) & (1'b1 == ap_CS_fsm_state2)))) begin
        grp_fu_257_p0 = g0;
    end else begin
        grp_fu_257_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state93)) begin
        grp_fu_257_p1 = reg_421;
    end else if ((1'b1 == ap_CS_fsm_state83)) begin
        grp_fu_257_p1 = reg_405;
    end else if (((1'b1 == ap_CS_fsm_state88) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state32))) begin
        grp_fu_257_p1 = 64'd4611686018427387904;
    end else if (((1'b1 == ap_CS_fsm_state78) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state22))) begin
        grp_fu_257_p1 = tetta_b;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        grp_fu_257_p1 = si;
    end else if (((1'b1 == ap_CS_fsm_state73) | (1'b1 == ap_CS_fsm_state12))) begin
        grp_fu_257_p1 = b;
    end else if (((1'b1 == ap_CS_fsm_state68) | (1'b1 == ap_CS_fsm_state7))) begin
        grp_fu_257_p1 = c;
    end else if ((((1'd1 == and_ln23_fu_500_p2) & (1'b1 == ap_CS_fsm_state2)) | ((1'd0 == and_ln23_fu_500_p2) & (1'b1 == ap_CS_fsm_state2)))) begin
        grp_fu_257_p1 = g0;
    end else begin
        grp_fu_257_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state78)) begin
        grp_fu_263_p0 = reg_368;
    end else if (((1'b1 == ap_CS_fsm_state83) | (1'b1 == ap_CS_fsm_state68))) begin
        grp_fu_263_p0 = reg_356;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        grp_fu_263_p0 = c0;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        grp_fu_263_p0 = reg_380;
    end else if (((1'b1 == ap_CS_fsm_state73) | (1'b1 == ap_CS_fsm_state93) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state12))) begin
        grp_fu_263_p0 = reg_344;
    end else if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state2))) begin
        grp_fu_263_p0 = g0;
    end else begin
        grp_fu_263_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state93)) begin
        grp_fu_263_p1 = reg_439;
    end else if ((1'b1 == ap_CS_fsm_state68)) begin
        grp_fu_263_p1 = b;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        grp_fu_263_p1 = 64'd13839561654909534208;
    end else if (((1'b1 == ap_CS_fsm_state83) | (1'b1 == ap_CS_fsm_state78) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state17))) begin
        grp_fu_263_p1 = tetta_b;
    end else if (((1'b1 == ap_CS_fsm_state73) | (1'b1 == ap_CS_fsm_state12))) begin
        grp_fu_263_p1 = c;
    end else if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state2))) begin
        grp_fu_263_p1 = 64'd4611686018427387904;
    end else begin
        grp_fu_263_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state83)) begin
        grp_fu_269_p0 = reg_344;
    end else if ((1'b1 == ap_CS_fsm_state78)) begin
        grp_fu_269_p0 = reg_398;
    end else if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state17))) begin
        grp_fu_269_p0 = reg_390;
    end else if (((1'b1 == ap_CS_fsm_state73) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state12))) begin
        grp_fu_269_p0 = reg_356;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_fu_269_p0 = g0;
    end else begin
        grp_fu_269_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state83)) begin
        grp_fu_269_p1 = reg_421;
    end else if (((1'b1 == ap_CS_fsm_state73) | (1'b1 == ap_CS_fsm_state78))) begin
        grp_fu_269_p1 = si;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        grp_fu_269_p1 = reg_405;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        grp_fu_269_p1 = tetta_b;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        grp_fu_269_p1 = c0;
    end else if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state12))) begin
        grp_fu_269_p1 = b;
    end else begin
        grp_fu_269_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        grp_fu_273_p0 = reg_333;
    end else if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state17))) begin
        grp_fu_273_p0 = reg_398;
    end else if (((1'b1 == ap_CS_fsm_state83) | (1'b1 == ap_CS_fsm_state12))) begin
        grp_fu_273_p0 = reg_368;
    end else if (((1'b1 == ap_CS_fsm_state73) | (1'b1 == ap_CS_fsm_state7))) begin
        grp_fu_273_p0 = a;
    end else begin
        grp_fu_273_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        grp_fu_273_p1 = reg_421;
    end else if (((1'b1 == ap_CS_fsm_state83) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state17))) begin
        grp_fu_273_p1 = tetta_b;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        grp_fu_273_p1 = si;
    end else if (((1'b1 == ap_CS_fsm_state73) | (1'b1 == ap_CS_fsm_state7))) begin
        grp_fu_273_p1 = a;
    end else begin
        grp_fu_273_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        grp_fu_277_p0 = reg_356;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        grp_fu_277_p0 = reg_405;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        grp_fu_277_p0 = c0;
    end else if (((1'b1 == ap_CS_fsm_state73) | (1'b1 == ap_CS_fsm_state7))) begin
        grp_fu_277_p0 = c;
    end else begin
        grp_fu_277_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        grp_fu_277_p1 = reg_431;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        grp_fu_277_p1 = tetta_b;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        grp_fu_277_p1 = 64'd4611686018427387904;
    end else if (((1'b1 == ap_CS_fsm_state73) | (1'b1 == ap_CS_fsm_state7))) begin
        grp_fu_277_p1 = c;
    end else begin
        grp_fu_277_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        grp_fu_282_p0 = reg_356;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        grp_fu_282_p0 = reg_415;
    end else if (((1'b1 == ap_CS_fsm_state73) | (1'b1 == ap_CS_fsm_state12))) begin
        grp_fu_282_p0 = a;
    end else begin
        grp_fu_282_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state73)) begin
        grp_fu_282_p1 = 64'd4611686018427387904;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        grp_fu_282_p1 = reg_439;
    end else if (((1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state12))) begin
        grp_fu_282_p1 = si;
    end else begin
        grp_fu_282_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        grp_fu_286_p0 = reg_356;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        grp_fu_286_p0 = a;
    end else begin
        grp_fu_286_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        grp_fu_286_p1 = reg_445;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        grp_fu_286_p1 = 64'd4611686018427387904;
    end else begin
        grp_fu_286_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state98) | (1'b1 == ap_CS_fsm_state42))) begin
        grp_fu_294_p0 = reg_405;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        grp_fu_294_p0 = reg_344;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        grp_fu_294_p0 = reg_368;
    end else begin
        grp_fu_294_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state98) | (1'b1 == ap_CS_fsm_state42))) begin
        grp_fu_298_p0 = reg_333;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        grp_fu_298_p0 = reg_390;
    end else begin
        grp_fu_298_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state98) | (1'b1 == ap_CS_fsm_state42))) begin
        grp_fu_302_p0 = reg_421;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        grp_fu_302_p0 = reg_398;
    end else begin
        grp_fu_302_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state98)) begin
        grp_fu_306_p0 = reg_356;
    end else if ((1'b1 == ap_CS_fsm_state42)) begin
        grp_fu_306_p0 = reg_431;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        grp_fu_306_p0 = reg_415;
    end else begin
        grp_fu_306_p0 = 'bx;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'd1 == and_ln23_fu_500_p2) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state64;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_state60;
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_state61;
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_state62;
        end
        ap_ST_fsm_state62 : begin
            ap_NS_fsm = ap_ST_fsm_state63;
        end
        ap_ST_fsm_state63 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        ap_ST_fsm_state64 : begin
            ap_NS_fsm = ap_ST_fsm_state65;
        end
        ap_ST_fsm_state65 : begin
            ap_NS_fsm = ap_ST_fsm_state66;
        end
        ap_ST_fsm_state66 : begin
            ap_NS_fsm = ap_ST_fsm_state67;
        end
        ap_ST_fsm_state67 : begin
            ap_NS_fsm = ap_ST_fsm_state68;
        end
        ap_ST_fsm_state68 : begin
            ap_NS_fsm = ap_ST_fsm_state69;
        end
        ap_ST_fsm_state69 : begin
            ap_NS_fsm = ap_ST_fsm_state70;
        end
        ap_ST_fsm_state70 : begin
            ap_NS_fsm = ap_ST_fsm_state71;
        end
        ap_ST_fsm_state71 : begin
            ap_NS_fsm = ap_ST_fsm_state72;
        end
        ap_ST_fsm_state72 : begin
            ap_NS_fsm = ap_ST_fsm_state73;
        end
        ap_ST_fsm_state73 : begin
            ap_NS_fsm = ap_ST_fsm_state74;
        end
        ap_ST_fsm_state74 : begin
            ap_NS_fsm = ap_ST_fsm_state75;
        end
        ap_ST_fsm_state75 : begin
            ap_NS_fsm = ap_ST_fsm_state76;
        end
        ap_ST_fsm_state76 : begin
            ap_NS_fsm = ap_ST_fsm_state77;
        end
        ap_ST_fsm_state77 : begin
            ap_NS_fsm = ap_ST_fsm_state78;
        end
        ap_ST_fsm_state78 : begin
            ap_NS_fsm = ap_ST_fsm_state79;
        end
        ap_ST_fsm_state79 : begin
            ap_NS_fsm = ap_ST_fsm_state80;
        end
        ap_ST_fsm_state80 : begin
            ap_NS_fsm = ap_ST_fsm_state81;
        end
        ap_ST_fsm_state81 : begin
            ap_NS_fsm = ap_ST_fsm_state82;
        end
        ap_ST_fsm_state82 : begin
            ap_NS_fsm = ap_ST_fsm_state83;
        end
        ap_ST_fsm_state83 : begin
            ap_NS_fsm = ap_ST_fsm_state84;
        end
        ap_ST_fsm_state84 : begin
            ap_NS_fsm = ap_ST_fsm_state85;
        end
        ap_ST_fsm_state85 : begin
            ap_NS_fsm = ap_ST_fsm_state86;
        end
        ap_ST_fsm_state86 : begin
            ap_NS_fsm = ap_ST_fsm_state87;
        end
        ap_ST_fsm_state87 : begin
            ap_NS_fsm = ap_ST_fsm_state88;
        end
        ap_ST_fsm_state88 : begin
            ap_NS_fsm = ap_ST_fsm_state89;
        end
        ap_ST_fsm_state89 : begin
            ap_NS_fsm = ap_ST_fsm_state90;
        end
        ap_ST_fsm_state90 : begin
            ap_NS_fsm = ap_ST_fsm_state91;
        end
        ap_ST_fsm_state91 : begin
            ap_NS_fsm = ap_ST_fsm_state92;
        end
        ap_ST_fsm_state92 : begin
            ap_NS_fsm = ap_ST_fsm_state93;
        end
        ap_ST_fsm_state93 : begin
            ap_NS_fsm = ap_ST_fsm_state94;
        end
        ap_ST_fsm_state94 : begin
            ap_NS_fsm = ap_ST_fsm_state95;
        end
        ap_ST_fsm_state95 : begin
            ap_NS_fsm = ap_ST_fsm_state96;
        end
        ap_ST_fsm_state96 : begin
            ap_NS_fsm = ap_ST_fsm_state97;
        end
        ap_ST_fsm_state97 : begin
            ap_NS_fsm = ap_ST_fsm_state98;
        end
        ap_ST_fsm_state98 : begin
            ap_NS_fsm = ap_ST_fsm_state99;
        end
        ap_ST_fsm_state99 : begin
            ap_NS_fsm = ap_ST_fsm_state100;
        end
        ap_ST_fsm_state100 : begin
            ap_NS_fsm = ap_ST_fsm_state101;
        end
        ap_ST_fsm_state101 : begin
            ap_NS_fsm = ap_ST_fsm_state102;
        end
        ap_ST_fsm_state102 : begin
            ap_NS_fsm = ap_ST_fsm_state103;
        end
        ap_ST_fsm_state103 : begin
            ap_NS_fsm = ap_ST_fsm_state104;
        end
        ap_ST_fsm_state104 : begin
            ap_NS_fsm = ap_ST_fsm_state105;
        end
        ap_ST_fsm_state105 : begin
            ap_NS_fsm = ap_ST_fsm_state106;
        end
        ap_ST_fsm_state106 : begin
            ap_NS_fsm = ap_ST_fsm_state107;
        end
        ap_ST_fsm_state107 : begin
            ap_NS_fsm = ap_ST_fsm_state108;
        end
        ap_ST_fsm_state108 : begin
            ap_NS_fsm = ap_ST_fsm_state109;
        end
        ap_ST_fsm_state109 : begin
            ap_NS_fsm = ap_ST_fsm_state110;
        end
        ap_ST_fsm_state110 : begin
            ap_NS_fsm = ap_ST_fsm_state111;
        end
        ap_ST_fsm_state111 : begin
            ap_NS_fsm = ap_ST_fsm_state112;
        end
        ap_ST_fsm_state112 : begin
            ap_NS_fsm = ap_ST_fsm_state113;
        end
        ap_ST_fsm_state113 : begin
            ap_NS_fsm = ap_ST_fsm_state114;
        end
        ap_ST_fsm_state114 : begin
            ap_NS_fsm = ap_ST_fsm_state115;
        end
        ap_ST_fsm_state115 : begin
            ap_NS_fsm = ap_ST_fsm_state116;
        end
        ap_ST_fsm_state116 : begin
            ap_NS_fsm = ap_ST_fsm_state117;
        end
        ap_ST_fsm_state117 : begin
            ap_NS_fsm = ap_ST_fsm_state118;
        end
        ap_ST_fsm_state118 : begin
            ap_NS_fsm = ap_ST_fsm_state119;
        end
        ap_ST_fsm_state119 : begin
            ap_NS_fsm = ap_ST_fsm_state120;
        end
        ap_ST_fsm_state120 : begin
            ap_NS_fsm = ap_ST_fsm_state63;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign S_a0 = 32'd1;

assign S_a4 = ap_phi_mux_storemerge_phi_fu_224_p4;

assign S_b0 = grp_fu_294_p2;

assign add_ln502_1_fu_1273_p2 = ($signed(12'd3073) + $signed(zext_ln502_1_fu_1269_p1));

assign add_ln502_2_fu_549_p2 = ($signed(12'd3073) + $signed(zext_ln502_2_fu_545_p1));

assign add_ln502_3_fu_694_p2 = ($signed(12'd3073) + $signed(zext_ln502_3_fu_690_p1));

assign add_ln502_4_fu_838_p2 = ($signed(12'd3073) + $signed(zext_ln502_4_fu_834_p1));

assign add_ln502_5_fu_983_p2 = ($signed(12'd3073) + $signed(zext_ln502_5_fu_979_p1));

assign add_ln502_fu_1128_p2 = ($signed(12'd3073) + $signed(zext_ln502_fu_1124_p1));

assign and_ln23_fu_500_p2 = (or_ln23_fu_488_p2 & or_ln23_1_fu_494_p2);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state119 = ap_CS_fsm[32'd118];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state120 = ap_CS_fsm[32'd119];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state41 = ap_CS_fsm[32'd40];

assign ap_CS_fsm_state42 = ap_CS_fsm[32'd41];

assign ap_CS_fsm_state53 = ap_CS_fsm[32'd52];

assign ap_CS_fsm_state54 = ap_CS_fsm[32'd53];

assign ap_CS_fsm_state58 = ap_CS_fsm[32'd57];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state63 = ap_CS_fsm[32'd62];

assign ap_CS_fsm_state67 = ap_CS_fsm[32'd66];

assign ap_CS_fsm_state68 = ap_CS_fsm[32'd67];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state72 = ap_CS_fsm[32'd71];

assign ap_CS_fsm_state73 = ap_CS_fsm[32'd72];

assign ap_CS_fsm_state77 = ap_CS_fsm[32'd76];

assign ap_CS_fsm_state78 = ap_CS_fsm[32'd77];

assign ap_CS_fsm_state82 = ap_CS_fsm[32'd81];

assign ap_CS_fsm_state83 = ap_CS_fsm[32'd82];

assign ap_CS_fsm_state87 = ap_CS_fsm[32'd86];

assign ap_CS_fsm_state88 = ap_CS_fsm[32'd87];

assign ap_CS_fsm_state92 = ap_CS_fsm[32'd91];

assign ap_CS_fsm_state93 = ap_CS_fsm[32'd92];

assign ap_CS_fsm_state97 = ap_CS_fsm[32'd96];

assign ap_CS_fsm_state98 = ap_CS_fsm[32'd97];

assign bitcast_ln23_fu_459_p1 = c0;

assign icmp_ln23_1_fu_482_p2 = ((trunc_ln23_fu_472_p1 == 52'd0) ? 1'b1 : 1'b0);

assign icmp_ln23_fu_476_p2 = ((tmp_fu_462_p4 != 11'd2047) ? 1'b1 : 1'b0);

assign isNeg_1_fu_1279_p3 = add_ln502_1_fu_1273_p2[32'd11];

assign isNeg_2_fu_555_p3 = add_ln502_2_fu_549_p2[32'd11];

assign isNeg_3_fu_700_p3 = add_ln502_3_fu_694_p2[32'd11];

assign isNeg_4_fu_844_p3 = add_ln502_4_fu_838_p2[32'd11];

assign isNeg_5_fu_989_p3 = add_ln502_5_fu_983_p2[32'd11];

assign isNeg_fu_1134_p3 = add_ln502_fu_1128_p2[32'd11];

assign mantissa_V_1_fu_1255_p4 = {{{{1'd1}, {tmp_V_3_fu_1251_p1}}}, {1'd0}};

assign mantissa_V_2_fu_531_p4 = {{{{1'd1}, {tmp_V_5_fu_527_p1}}}, {1'd0}};

assign mantissa_V_3_fu_676_p4 = {{{{1'd1}, {tmp_V_7_fu_672_p1}}}, {1'd0}};

assign mantissa_V_4_fu_820_p4 = {{{{1'd1}, {tmp_V_9_fu_816_p1}}}, {1'd0}};

assign mantissa_V_5_fu_965_p4 = {{{{1'd1}, {tmp_V_11_fu_961_p1}}}, {1'd0}};

assign mantissa_V_fu_1110_p4 = {{{{1'd1}, {tmp_V_1_fu_1106_p1}}}, {1'd0}};

assign or_ln23_1_fu_494_p2 = (grp_fu_327_p2 | grp_fu_321_p2);

assign or_ln23_fu_488_p2 = (icmp_ln23_fu_476_p2 | icmp_ln23_1_fu_482_p2);

assign p_Result_1_fu_1233_p3 = p_Val2_5_fu_1229_p1[32'd63];

assign p_Result_2_fu_509_p3 = p_Val2_10_fu_506_p1[32'd63];

assign p_Result_3_fu_654_p3 = p_Val2_15_fu_650_p1[32'd63];

assign p_Result_4_fu_798_p3 = p_Val2_20_fu_795_p1[32'd63];

assign p_Result_5_fu_943_p3 = p_Val2_25_fu_939_p1[32'd63];

assign p_Result_s_fu_1088_p3 = p_Val2_s_fu_1084_p1[32'd63];

assign p_Val2_10_fu_506_p1 = x_assign_2_reg_1458;

assign p_Val2_15_fu_650_p1 = reg_451;

assign p_Val2_20_fu_795_p1 = x_assign_4_reg_1463;

assign p_Val2_25_fu_939_p1 = reg_455;

assign p_Val2_30_fu_1206_p3 = ((isNeg_fu_1134_p3[0:0] === 1'b1) ? zext_ln662_fu_1192_p1 : tmp_29_fu_1196_p4);

assign p_Val2_31_fu_1220_p3 = ((p_Result_s_fu_1088_p3[0:0] === 1'b1) ? result_V_1_fu_1214_p2 : p_Val2_30_fu_1206_p3);

assign p_Val2_32_fu_1351_p3 = ((isNeg_1_fu_1279_p3[0:0] === 1'b1) ? zext_ln662_1_fu_1337_p1 : tmp_88_fu_1341_p4);

assign p_Val2_33_fu_1365_p3 = ((p_Result_1_fu_1233_p3[0:0] === 1'b1) ? result_V_3_fu_1359_p2 : p_Val2_32_fu_1351_p3);

assign p_Val2_34_fu_627_p3 = ((isNeg_2_fu_555_p3[0:0] === 1'b1) ? zext_ln662_2_fu_613_p1 : tmp_89_fu_617_p4);

assign p_Val2_35_fu_641_p3 = ((p_Result_2_fu_509_p3[0:0] === 1'b1) ? result_V_5_fu_635_p2 : p_Val2_34_fu_627_p3);

assign p_Val2_36_fu_772_p3 = ((isNeg_3_fu_700_p3[0:0] === 1'b1) ? zext_ln662_3_fu_758_p1 : tmp_90_fu_762_p4);

assign p_Val2_37_fu_786_p3 = ((p_Result_3_fu_654_p3[0:0] === 1'b1) ? result_V_7_fu_780_p2 : p_Val2_36_fu_772_p3);

assign p_Val2_38_fu_916_p3 = ((isNeg_4_fu_844_p3[0:0] === 1'b1) ? zext_ln662_4_fu_902_p1 : tmp_92_fu_906_p4);

assign p_Val2_39_fu_930_p3 = ((p_Result_4_fu_798_p3[0:0] === 1'b1) ? result_V_9_fu_924_p2 : p_Val2_38_fu_916_p3);

assign p_Val2_40_fu_1061_p3 = ((isNeg_5_fu_989_p3[0:0] === 1'b1) ? zext_ln662_5_fu_1047_p1 : tmp_93_fu_1051_p4);

assign p_Val2_41_fu_1075_p3 = ((p_Result_5_fu_943_p3[0:0] === 1'b1) ? result_V_11_fu_1069_p2 : p_Val2_40_fu_1061_p3);

assign p_Val2_5_fu_1229_p1 = reg_455;

assign p_Val2_s_fu_1084_p1 = reg_451;

assign r_V_10_fu_1027_p2 = mantissa_V_5_fu_965_p4 >> zext_ln1285_5_fu_1023_p1;

assign r_V_11_fu_1033_p2 = zext_ln682_5_fu_975_p1 << zext_ln1287_5_fu_1019_p1;

assign r_V_1_fu_1178_p2 = zext_ln682_fu_1120_p1 << zext_ln1287_fu_1164_p1;

assign r_V_2_fu_1317_p2 = mantissa_V_1_fu_1255_p4 >> zext_ln1285_1_fu_1313_p1;

assign r_V_3_fu_1323_p2 = zext_ln682_1_fu_1265_p1 << zext_ln1287_1_fu_1309_p1;

assign r_V_4_fu_593_p2 = mantissa_V_2_fu_531_p4 >> zext_ln1285_2_fu_589_p1;

assign r_V_5_fu_599_p2 = zext_ln682_2_fu_541_p1 << zext_ln1287_2_fu_585_p1;

assign r_V_6_fu_738_p2 = mantissa_V_3_fu_676_p4 >> zext_ln1285_3_fu_734_p1;

assign r_V_7_fu_744_p2 = zext_ln682_3_fu_686_p1 << zext_ln1287_3_fu_730_p1;

assign r_V_8_fu_882_p2 = mantissa_V_4_fu_820_p4 >> zext_ln1285_4_fu_878_p1;

assign r_V_9_fu_888_p2 = zext_ln682_4_fu_830_p1 << zext_ln1287_4_fu_874_p1;

assign r_V_fu_1172_p2 = mantissa_V_fu_1110_p4 >> zext_ln1285_fu_1168_p1;

assign result_V_11_fu_1069_p2 = (32'd0 - p_Val2_40_fu_1061_p3);

assign result_V_1_fu_1214_p2 = (32'd0 - p_Val2_30_fu_1206_p3);

assign result_V_3_fu_1359_p2 = (32'd0 - p_Val2_32_fu_1351_p3);

assign result_V_5_fu_635_p2 = (32'd0 - p_Val2_34_fu_627_p3);

assign result_V_7_fu_780_p2 = (32'd0 - p_Val2_36_fu_772_p3);

assign result_V_9_fu_924_p2 = (32'd0 - p_Val2_38_fu_916_p3);

assign sext_ln1311_10_fu_1003_p1 = $signed(sub_ln1311_5_fu_997_p2);

assign sext_ln1311_11_fu_1015_p1 = $signed(ush_5_fu_1007_p3);

assign sext_ln1311_1_fu_1160_p1 = $signed(ush_fu_1152_p3);

assign sext_ln1311_2_fu_1293_p1 = $signed(sub_ln1311_1_fu_1287_p2);

assign sext_ln1311_3_fu_1305_p1 = $signed(ush_1_fu_1297_p3);

assign sext_ln1311_4_fu_569_p1 = $signed(sub_ln1311_2_fu_563_p2);

assign sext_ln1311_5_fu_581_p1 = $signed(ush_2_fu_573_p3);

assign sext_ln1311_6_fu_714_p1 = $signed(sub_ln1311_3_fu_708_p2);

assign sext_ln1311_7_fu_726_p1 = $signed(ush_3_fu_718_p3);

assign sext_ln1311_8_fu_858_p1 = $signed(sub_ln1311_4_fu_852_p2);

assign sext_ln1311_9_fu_870_p1 = $signed(ush_4_fu_862_p3);

assign sext_ln1311_fu_1148_p1 = $signed(sub_ln1311_fu_1142_p2);

assign sub_ln1311_1_fu_1287_p2 = (11'd1023 - tmp_V_2_fu_1241_p4);

assign sub_ln1311_2_fu_563_p2 = (11'd1023 - tmp_V_4_fu_517_p4);

assign sub_ln1311_3_fu_708_p2 = (11'd1023 - tmp_V_6_fu_662_p4);

assign sub_ln1311_4_fu_852_p2 = (11'd1023 - tmp_V_8_fu_806_p4);

assign sub_ln1311_5_fu_997_p2 = (11'd1023 - tmp_V_10_fu_951_p4);

assign sub_ln1311_fu_1142_p2 = (11'd1023 - tmp_V_fu_1096_p4);

assign tmp_101_fu_605_p3 = r_V_4_fu_593_p2[32'd53];

assign tmp_104_fu_750_p3 = r_V_6_fu_738_p2[32'd53];

assign tmp_107_fu_894_p3 = r_V_8_fu_882_p2[32'd53];

assign tmp_110_fu_1039_p3 = r_V_10_fu_1027_p2[32'd53];

assign tmp_29_fu_1196_p4 = {{r_V_1_fu_1178_p2[84:53]}};

assign tmp_88_fu_1341_p4 = {{r_V_3_fu_1323_p2[84:53]}};

assign tmp_89_fu_617_p4 = {{r_V_5_fu_599_p2[84:53]}};

assign tmp_90_fu_762_p4 = {{r_V_7_fu_744_p2[84:53]}};

assign tmp_91_fu_1184_p3 = r_V_fu_1172_p2[32'd53];

assign tmp_92_fu_906_p4 = {{r_V_9_fu_888_p2[84:53]}};

assign tmp_93_fu_1051_p4 = {{r_V_11_fu_1033_p2[84:53]}};

assign tmp_97_fu_1329_p3 = r_V_2_fu_1317_p2[32'd53];

assign tmp_V_10_fu_951_p4 = {{p_Val2_25_fu_939_p1[62:52]}};

assign tmp_V_11_fu_961_p1 = p_Val2_25_fu_939_p1[51:0];

assign tmp_V_1_fu_1106_p1 = p_Val2_s_fu_1084_p1[51:0];

assign tmp_V_2_fu_1241_p4 = {{p_Val2_5_fu_1229_p1[62:52]}};

assign tmp_V_3_fu_1251_p1 = p_Val2_5_fu_1229_p1[51:0];

assign tmp_V_4_fu_517_p4 = {{p_Val2_10_fu_506_p1[62:52]}};

assign tmp_V_5_fu_527_p1 = p_Val2_10_fu_506_p1[51:0];

assign tmp_V_6_fu_662_p4 = {{p_Val2_15_fu_650_p1[62:52]}};

assign tmp_V_7_fu_672_p1 = p_Val2_15_fu_650_p1[51:0];

assign tmp_V_8_fu_806_p4 = {{p_Val2_20_fu_795_p1[62:52]}};

assign tmp_V_9_fu_816_p1 = p_Val2_20_fu_795_p1[51:0];

assign tmp_V_fu_1096_p4 = {{p_Val2_s_fu_1084_p1[62:52]}};

assign tmp_fu_462_p4 = {{bitcast_ln23_fu_459_p1[62:52]}};

assign trunc_ln23_fu_472_p1 = bitcast_ln23_fu_459_p1[51:0];

assign ush_1_fu_1297_p3 = ((isNeg_1_fu_1279_p3[0:0] === 1'b1) ? sext_ln1311_2_fu_1293_p1 : add_ln502_1_fu_1273_p2);

assign ush_2_fu_573_p3 = ((isNeg_2_fu_555_p3[0:0] === 1'b1) ? sext_ln1311_4_fu_569_p1 : add_ln502_2_fu_549_p2);

assign ush_3_fu_718_p3 = ((isNeg_3_fu_700_p3[0:0] === 1'b1) ? sext_ln1311_6_fu_714_p1 : add_ln502_3_fu_694_p2);

assign ush_4_fu_862_p3 = ((isNeg_4_fu_844_p3[0:0] === 1'b1) ? sext_ln1311_8_fu_858_p1 : add_ln502_4_fu_838_p2);

assign ush_5_fu_1007_p3 = ((isNeg_5_fu_989_p3[0:0] === 1'b1) ? sext_ln1311_10_fu_1003_p1 : add_ln502_5_fu_983_p2);

assign ush_fu_1152_p3 = ((isNeg_fu_1134_p3[0:0] === 1'b1) ? sext_ln1311_fu_1148_p1 : add_ln502_fu_1128_p2);

assign zext_ln1285_1_fu_1313_p1 = $unsigned(sext_ln1311_3_fu_1305_p1);

assign zext_ln1285_2_fu_589_p1 = $unsigned(sext_ln1311_5_fu_581_p1);

assign zext_ln1285_3_fu_734_p1 = $unsigned(sext_ln1311_7_fu_726_p1);

assign zext_ln1285_4_fu_878_p1 = $unsigned(sext_ln1311_9_fu_870_p1);

assign zext_ln1285_5_fu_1023_p1 = $unsigned(sext_ln1311_11_fu_1015_p1);

assign zext_ln1285_fu_1168_p1 = $unsigned(sext_ln1311_1_fu_1160_p1);

assign zext_ln1287_1_fu_1309_p1 = $unsigned(sext_ln1311_3_fu_1305_p1);

assign zext_ln1287_2_fu_585_p1 = $unsigned(sext_ln1311_5_fu_581_p1);

assign zext_ln1287_3_fu_730_p1 = $unsigned(sext_ln1311_7_fu_726_p1);

assign zext_ln1287_4_fu_874_p1 = $unsigned(sext_ln1311_9_fu_870_p1);

assign zext_ln1287_5_fu_1019_p1 = $unsigned(sext_ln1311_11_fu_1015_p1);

assign zext_ln1287_fu_1164_p1 = $unsigned(sext_ln1311_1_fu_1160_p1);

assign zext_ln502_1_fu_1269_p1 = tmp_V_2_fu_1241_p4;

assign zext_ln502_2_fu_545_p1 = tmp_V_4_fu_517_p4;

assign zext_ln502_3_fu_690_p1 = tmp_V_6_fu_662_p4;

assign zext_ln502_4_fu_834_p1 = tmp_V_8_fu_806_p4;

assign zext_ln502_5_fu_979_p1 = tmp_V_10_fu_951_p4;

assign zext_ln502_fu_1124_p1 = tmp_V_fu_1096_p4;

assign zext_ln662_1_fu_1337_p1 = tmp_97_fu_1329_p3;

assign zext_ln662_2_fu_613_p1 = tmp_101_fu_605_p3;

assign zext_ln662_3_fu_758_p1 = tmp_104_fu_750_p3;

assign zext_ln662_4_fu_902_p1 = tmp_107_fu_894_p3;

assign zext_ln662_5_fu_1047_p1 = tmp_110_fu_1039_p3;

assign zext_ln662_fu_1192_p1 = tmp_91_fu_1184_p3;

assign zext_ln682_1_fu_1265_p1 = mantissa_V_1_fu_1255_p4;

assign zext_ln682_2_fu_541_p1 = mantissa_V_2_fu_531_p4;

assign zext_ln682_3_fu_686_p1 = mantissa_V_3_fu_676_p4;

assign zext_ln682_4_fu_830_p1 = mantissa_V_4_fu_820_p4;

assign zext_ln682_5_fu_975_p1 = mantissa_V_5_fu_965_p4;

assign zext_ln682_fu_1120_p1 = mantissa_V_fu_1110_p4;

endmodule //chebyshev1_fo_section
