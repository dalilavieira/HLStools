// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="tta_filter_process_c,hls_ip_2019_1,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7k160t-fbg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.365000,HLS_SYN_LAT=15,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=18,HLS_SYN_FF=793,HLS_SYN_LUT=1995,HLS_VERSION=2019_1}" *)

module tta_filter_process_c (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        qm_address0,
        qm_ce0,
        qm_we0,
        qm_d0,
        qm_q0,
        qm_address1,
        qm_ce1,
        qm_we1,
        qm_d1,
        qm_q1,
        dx_address0,
        dx_ce0,
        dx_we0,
        dx_d0,
        dx_q0,
        dx_address1,
        dx_ce1,
        dx_we1,
        dx_d1,
        dx_q1,
        dl_address0,
        dl_ce0,
        dl_we0,
        dl_d0,
        dl_q0,
        dl_address1,
        dl_ce1,
        dl_we1,
        dl_d1,
        dl_q1,
        error_address0,
        error_ce0,
        error_we0,
        error_d0,
        error_q0,
        in_r_address0,
        in_r_ce0,
        in_r_we0,
        in_r_d0,
        in_r_q0,
        shift,
        round
);

parameter    ap_ST_fsm_state1 = 23'd1;
parameter    ap_ST_fsm_state2 = 23'd2;
parameter    ap_ST_fsm_state3 = 23'd4;
parameter    ap_ST_fsm_state4 = 23'd8;
parameter    ap_ST_fsm_state5 = 23'd16;
parameter    ap_ST_fsm_state6 = 23'd32;
parameter    ap_ST_fsm_state7 = 23'd64;
parameter    ap_ST_fsm_state8 = 23'd128;
parameter    ap_ST_fsm_state9 = 23'd256;
parameter    ap_ST_fsm_state10 = 23'd512;
parameter    ap_ST_fsm_state11 = 23'd1024;
parameter    ap_ST_fsm_state12 = 23'd2048;
parameter    ap_ST_fsm_state13 = 23'd4096;
parameter    ap_ST_fsm_state14 = 23'd8192;
parameter    ap_ST_fsm_state15 = 23'd16384;
parameter    ap_ST_fsm_state16 = 23'd32768;
parameter    ap_ST_fsm_state17 = 23'd65536;
parameter    ap_ST_fsm_state18 = 23'd131072;
parameter    ap_ST_fsm_state19 = 23'd262144;
parameter    ap_ST_fsm_state20 = 23'd524288;
parameter    ap_ST_fsm_state21 = 23'd1048576;
parameter    ap_ST_fsm_state22 = 23'd2097152;
parameter    ap_ST_fsm_state23 = 23'd4194304;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [3:0] qm_address0;
output   qm_ce0;
output   qm_we0;
output  [31:0] qm_d0;
input  [31:0] qm_q0;
output  [3:0] qm_address1;
output   qm_ce1;
output   qm_we1;
output  [31:0] qm_d1;
input  [31:0] qm_q1;
output  [3:0] dx_address0;
output   dx_ce0;
output   dx_we0;
output  [31:0] dx_d0;
input  [31:0] dx_q0;
output  [3:0] dx_address1;
output   dx_ce1;
output   dx_we1;
output  [31:0] dx_d1;
input  [31:0] dx_q1;
output  [3:0] dl_address0;
output   dl_ce0;
output   dl_we0;
output  [31:0] dl_d0;
input  [31:0] dl_q0;
output  [3:0] dl_address1;
output   dl_ce1;
output   dl_we1;
output  [31:0] dl_d1;
input  [31:0] dl_q1;
output  [3:0] error_address0;
output   error_ce0;
output   error_we0;
output  [31:0] error_d0;
input  [31:0] error_q0;
output  [3:0] in_r_address0;
output   in_r_ce0;
output   in_r_we0;
output  [31:0] in_r_d0;
input  [31:0] in_r_q0;
input  [31:0] shift;
input  [31:0] round;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[3:0] qm_address0;
reg qm_ce0;
reg qm_we0;
reg[31:0] qm_d0;
reg[3:0] qm_address1;
reg qm_ce1;
reg qm_we1;
reg[31:0] qm_d1;
reg[3:0] dx_address0;
reg dx_ce0;
reg dx_we0;
reg[31:0] dx_d0;
reg[3:0] dx_address1;
reg dx_ce1;
reg dx_we1;
reg[31:0] dx_d1;
reg[3:0] dl_address0;
reg dl_ce0;
reg dl_we0;
reg[31:0] dl_d0;
reg[3:0] dl_address1;
reg dl_ce1;
reg dl_we1;
reg[31:0] dl_d1;
reg[3:0] error_address0;
reg error_ce0;
reg error_we0;
reg in_r_ce0;
reg in_r_we0;

(* fsm_encoding = "none" *) reg   [22:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [31:0] reg_609;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state10;
wire    ap_CS_fsm_state17;
wire    ap_CS_fsm_state18;
reg   [31:0] reg_614;
wire    ap_CS_fsm_state19;
reg   [31:0] reg_619;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state11;
reg   [31:0] reg_624;
reg   [31:0] reg_628;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_state12;
reg   [31:0] reg_632;
reg   [31:0] reg_636;
wire    ap_CS_fsm_state16;
reg   [31:0] reg_641;
wire   [31:0] grp_fu_595_p2;
reg   [31:0] reg_646;
wire    ap_CS_fsm_state20;
reg  signed [31:0] reg_650;
reg  signed [31:0] reg_656;
wire   [3:0] error_addr_reg_954;
wire    ap_CS_fsm_state2;
wire   [3:0] qm_addr_reg_984;
wire   [0:0] tmp_fu_676_p3;
reg   [0:0] tmp_reg_989;
wire   [0:0] icmp_ln22_fu_684_p2;
reg   [0:0] icmp_ln22_reg_993;
wire   [3:0] qm_addr_8_reg_997;
wire   [3:0] qm_addr_1_gep_fu_139_p3;
wire   [3:0] qm_addr_1_reg_1002;
wire   [3:0] qm_addr_9_reg_1007;
wire   [3:0] qm_addr_10_reg_1012;
wire   [3:0] qm_addr_11_reg_1017;
wire   [3:0] qm_addr_12_reg_1022;
wire   [3:0] qm_addr_13_reg_1032;
wire   [3:0] qm_addr_14_reg_1037;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state8;
wire   [3:0] dx_addr_15_reg_1072;
wire    ap_CS_fsm_state9;
wire   [3:0] dx_addr_16_reg_1078;
wire   [3:0] qm_addr_2_gep_fu_292_p3;
wire   [3:0] qm_addr_2_reg_1084;
wire   [3:0] qm_addr_3_gep_fu_301_p3;
wire   [3:0] qm_addr_3_reg_1089;
wire   [3:0] qm_addr_4_gep_fu_310_p3;
wire   [3:0] qm_addr_4_reg_1094;
wire   [3:0] qm_addr_5_gep_fu_319_p3;
wire   [3:0] qm_addr_5_reg_1099;
wire   [3:0] dx_addr_1_gep_fu_328_p3;
wire   [3:0] qm_addr_6_gep_fu_337_p3;
wire   [3:0] qm_addr_6_reg_1109;
wire   [3:0] qm_addr_7_gep_fu_346_p3;
wire   [3:0] qm_addr_7_reg_1114;
wire   [3:0] dx_addr_2_gep_fu_355_p3;
wire    ap_CS_fsm_state13;
wire   [3:0] dx_addr_3_gep_fu_364_p3;
reg   [31:0] qm_load_6_reg_1129;
reg   [31:0] qm_load_7_reg_1134;
wire   [3:0] dx_addr_4_gep_fu_373_p3;
wire    ap_CS_fsm_state14;
wire   [3:0] dx_addr_5_gep_fu_382_p3;
wire   [3:0] dx_addr_6_gep_fu_391_p3;
wire    ap_CS_fsm_state15;
wire   [3:0] dx_addr_7_gep_fu_400_p3;
wire   [3:0] dl_addr_1_reg_1159;
wire   [3:0] qm_addr_15_gep_fu_427_p3;
wire   [3:0] dx_addr_17_reg_1169;
wire   [3:0] dx_addr_18_reg_1175;
wire   [3:0] dl_addr_2_reg_1181;
wire   [3:0] qm_addr_16_gep_fu_463_p3;
wire   [3:0] dl_addr_3_reg_1191;
wire   [3:0] qm_addr_17_gep_fu_481_p3;
wire   [31:0] mul_ln27_1_fu_772_p2;
reg   [31:0] mul_ln27_1_reg_1201;
reg  signed [31:0] dl_load_3_reg_1206;
wire   [3:0] qm_addr_18_gep_fu_499_p3;
wire   [3:0] qm_addr_19_gep_fu_517_p3;
wire   [31:0] add_ln27_fu_778_p2;
reg   [31:0] add_ln27_reg_1234;
reg  signed [31:0] dl_load_4_reg_1239;
reg  signed [31:0] dl_load_5_reg_1245;
wire   [3:0] dl_addr_6_reg_1251;
wire   [3:0] qm_addr_20_gep_fu_535_p3;
wire   [3:0] dl_addr_7_reg_1261;
wire   [3:0] qm_addr_21_gep_fu_553_p3;
wire   [31:0] add_ln27_2_fu_788_p2;
reg   [31:0] add_ln27_2_reg_1271;
wire   [31:0] mul_ln27_5_fu_843_p2;
reg   [31:0] mul_ln27_5_reg_1276;
wire   [31:0] mul_ln27_7_fu_848_p2;
reg   [31:0] mul_ln27_7_reg_1281;
wire   [31:0] add_ln27_3_fu_854_p2;
reg   [31:0] add_ln27_3_reg_1286;
wire   [31:0] add_ln39_fu_931_p2;
reg   [31:0] add_ln39_reg_1291;
wire    ap_CS_fsm_state21;
wire   [31:0] sub_ln43_fu_943_p2;
reg   [31:0] sub_ln43_reg_1298;
wire    ap_CS_fsm_state22;
wire   [3:0] dx_addr_19_gep_fu_562_p3;
wire   [3:0] dx_addr_20_gep_fu_571_p3;
wire   [3:0] dx_addr_21_gep_fu_580_p3;
wire   [31:0] grp_fu_662_p2;
wire   [31:0] grp_fu_669_p2;
wire   [31:0] add_ln23_2_fu_690_p2;
wire   [31:0] add_ln23_3_fu_697_p2;
wire   [31:0] add_ln24_fu_704_p2;
wire   [31:0] add_ln24_1_fu_711_p2;
wire   [31:0] sub_ln21_2_fu_718_p2;
wire   [31:0] sub_ln21_3_fu_724_p2;
wire   [31:0] sub_ln20_fu_730_p2;
wire   [31:0] sub_ln20_1_fu_737_p2;
wire   [31:0] sub_ln20_2_fu_744_p2;
wire   [31:0] sub_ln20_3_fu_751_p2;
wire   [31:0] sub_ln21_fu_758_p2;
wire   [31:0] sub_ln21_1_fu_765_p2;
wire   [31:0] or_ln33_fu_807_p2;
wire  signed [31:0] sext_ln34_fu_828_p1;
wire  signed [31:0] sext_ln35_fu_882_p1;
wire  signed [31:0] sext_ln36_fu_901_p1;
wire   [31:0] sub_ln42_fu_937_p2;
wire    ap_CS_fsm_state23;
wire   [31:0] sub_ln43_1_fu_949_p2;
wire  signed [31:0] grp_fu_595_p0;
wire  signed [31:0] grp_fu_595_p1;
wire  signed [31:0] grp_fu_601_p1;
wire  signed [31:0] mul_ln27_1_fu_772_p0;
wire   [31:0] add_ln27_1_fu_783_p2;
wire  signed [31:0] trunc_ln_fu_793_p1;
wire   [1:0] trunc_ln_fu_793_p4;
wire  signed [31:0] sext_ln33_fu_803_p1;
wire   [0:0] grp_fu_601_p3;
wire   [2:0] and_ln_fu_814_p3;
wire   [2:0] or_ln34_fu_822_p2;
wire  signed [31:0] mul_ln27_3_fu_833_p0;
wire  signed [31:0] mul_ln27_4_fu_838_p0;
wire  signed [31:0] mul_ln27_5_fu_843_p0;
wire  signed [31:0] mul_ln27_7_fu_848_p0;
wire  signed [31:0] mul_ln27_7_fu_848_p1;
wire   [31:0] mul_ln27_4_fu_838_p2;
wire   [31:0] mul_ln27_3_fu_833_p2;
wire  signed [31:0] tmp_2_fu_860_p1;
wire   [0:0] tmp_2_fu_860_p3;
wire   [2:0] and_ln1_fu_868_p3;
wire   [2:0] or_ln35_fu_876_p2;
wire   [3:0] and_ln2_fu_887_p3;
wire   [3:0] or_ln36_fu_895_p2;
wire   [31:0] add_ln27_4_fu_906_p2;
wire   [31:0] add_ln27_5_fu_911_p2;
wire   [31:0] add_ln27_6_fu_916_p2;
wire   [31:0] add_ln27_7_fu_921_p2;
wire   [31:0] ashr_ln39_fu_926_p2;
reg   [22:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 23'd1;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17))) begin
        reg_609 <= qm_q1;
    end else if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state3))) begin
        reg_609 <= qm_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        reg_614 <= qm_q0;
    end else if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state3))) begin
        reg_614 <= qm_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        reg_619 <= qm_q1;
    end else if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state4))) begin
        reg_619 <= qm_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        reg_650 <= dl_q0;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        reg_650 <= dl_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        reg_656 <= dl_q1;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        reg_656 <= dl_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        add_ln27_2_reg_1271 <= add_ln27_2_fu_788_p2;
        dl_load_4_reg_1239 <= dl_q0;
        dl_load_5_reg_1245 <= dl_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        add_ln27_3_reg_1286 <= add_ln27_3_fu_854_p2;
        mul_ln27_5_reg_1276 <= mul_ln27_5_fu_843_p2;
        mul_ln27_7_reg_1281 <= mul_ln27_7_fu_848_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        add_ln27_reg_1234 <= add_ln27_fu_778_p2;
        dl_load_3_reg_1206 <= dl_q1;
        mul_ln27_1_reg_1201 <= mul_ln27_1_fu_772_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        add_ln39_reg_1291 <= add_ln39_fu_931_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_fu_676_p3 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        icmp_ln22_reg_993 <= icmp_ln22_fu_684_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        qm_load_6_reg_1129 <= qm_q0;
        qm_load_7_reg_1134 <= qm_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state4))) begin
        reg_624 <= qm_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state5))) begin
        reg_628 <= qm_q0;
        reg_632 <= qm_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state17))) begin
        reg_636 <= dx_q0;
        reg_641 <= dx_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17))) begin
        reg_646 <= grp_fu_595_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        sub_ln43_reg_1298 <= sub_ln43_fu_943_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        tmp_reg_989 <= error_q0[32'd31];
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        dl_address0 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        dl_address0 = dl_addr_6_reg_1251;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        dl_address0 = dl_addr_2_reg_1181;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        dl_address0 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        dl_address0 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        dl_address0 = 64'd2;
    end else if (((1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state16))) begin
        dl_address0 = 64'd0;
    end else begin
        dl_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        dl_address1 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        dl_address1 = dl_addr_7_reg_1261;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        dl_address1 = dl_addr_3_reg_1191;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        dl_address1 = dl_addr_1_reg_1159;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        dl_address1 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        dl_address1 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        dl_address1 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        dl_address1 = 64'd1;
    end else begin
        dl_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17))) begin
        dl_ce0 = 1'b1;
    end else begin
        dl_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17))) begin
        dl_ce1 = 1'b1;
    end else begin
        dl_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        dl_d0 = sub_ln43_reg_1298;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        dl_d0 = sub_ln42_fu_937_p2;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        dl_d0 = dl_load_3_reg_1206;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        dl_d0 = reg_650;
    end else begin
        dl_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        dl_d1 = sub_ln43_1_fu_949_p2;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        dl_d1 = add_ln39_reg_1291;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        dl_d1 = dl_load_4_reg_1239;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        dl_d1 = reg_656;
    end else begin
        dl_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20))) begin
        dl_we0 = 1'b1;
    end else begin
        dl_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20))) begin
        dl_we1 = 1'b1;
    end else begin
        dl_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        dx_address0 = dx_addr_20_gep_fu_571_p3;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        dx_address0 = dx_addr_18_reg_1175;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        dx_address0 = dx_addr_16_reg_1078;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        dx_address0 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        dx_address0 = dx_addr_6_gep_fu_391_p3;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        dx_address0 = dx_addr_4_gep_fu_373_p3;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        dx_address0 = dx_addr_2_gep_fu_355_p3;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        dx_address0 = 64'd1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        dx_address0 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        dx_address0 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        dx_address0 = 64'd2;
    end else if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state17))) begin
        dx_address0 = 64'd0;
    end else begin
        dx_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        dx_address1 = dx_addr_21_gep_fu_580_p3;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        dx_address1 = dx_addr_19_gep_fu_562_p3;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        dx_address1 = dx_addr_17_reg_1169;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        dx_address1 = dx_addr_15_reg_1072;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        dx_address1 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        dx_address1 = dx_addr_7_gep_fu_400_p3;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        dx_address1 = dx_addr_5_gep_fu_382_p3;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        dx_address1 = dx_addr_3_gep_fu_364_p3;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        dx_address1 = dx_addr_1_gep_fu_328_p3;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        dx_address1 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        dx_address1 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        dx_address1 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        dx_address1 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        dx_address1 = 64'd1;
    end else begin
        dx_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state6))) begin
        dx_ce0 = 1'b1;
    end else begin
        dx_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state6))) begin
        dx_ce1 = 1'b1;
    end else begin
        dx_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        dx_d0 = sext_ln35_fu_882_p1;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        dx_d0 = or_ln33_fu_807_p2;
    end else if (((1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17))) begin
        dx_d0 = reg_636;
    end else begin
        dx_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        dx_d1 = sext_ln36_fu_901_p1;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        dx_d1 = sext_ln34_fu_828_p1;
    end else if (((1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17))) begin
        dx_d1 = reg_641;
    end else begin
        dx_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17))) begin
        dx_we0 = 1'b1;
    end else begin
        dx_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17))) begin
        dx_we1 = 1'b1;
    end else begin
        dx_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        error_address0 = error_addr_reg_954;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        error_address0 = 64'd0;
    end else begin
        error_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state21) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        error_ce0 = 1'b1;
    end else begin
        error_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        error_we0 = 1'b1;
    end else begin
        error_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state20))) begin
        in_r_ce0 = 1'b1;
    end else begin
        in_r_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        in_r_we0 = 1'b1;
    end else begin
        in_r_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        qm_address0 = qm_addr_20_gep_fu_535_p3;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        qm_address0 = qm_addr_18_gep_fu_499_p3;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        qm_address0 = qm_addr_16_gep_fu_463_p3;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        qm_address0 = qm_addr_4_reg_1094;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        qm_address0 = qm_addr_2_reg_1084;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        qm_address0 = qm_addr_6_gep_fu_337_p3;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        qm_address0 = qm_addr_4_gep_fu_310_p3;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        qm_address0 = qm_addr_2_gep_fu_292_p3;
    end else if (((tmp_reg_989 == 1'd1) & (1'b1 == ap_CS_fsm_state9))) begin
        qm_address0 = qm_addr_6_reg_1109;
    end else if (((icmp_ln22_reg_993 == 1'd1) & (tmp_reg_989 == 1'd0) & (1'b1 == ap_CS_fsm_state9))) begin
        qm_address0 = qm_addr_13_reg_1032;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        qm_address0 = qm_addr_11_reg_1017;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        qm_address0 = qm_addr_9_reg_1007;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state6))) begin
        qm_address0 = qm_addr_reg_984;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        qm_address0 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        qm_address0 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        qm_address0 = 64'd2;
    end else if ((((tmp_fu_676_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state2)) | ((icmp_ln22_fu_684_p2 == 1'd1) & (tmp_fu_676_p3 == 1'd0) & (1'b1 == ap_CS_fsm_state2)))) begin
        qm_address0 = 64'd0;
    end else begin
        qm_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        qm_address1 = qm_addr_21_gep_fu_553_p3;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        qm_address1 = qm_addr_19_gep_fu_517_p3;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        qm_address1 = qm_addr_17_gep_fu_481_p3;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        qm_address1 = qm_addr_15_gep_fu_427_p3;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        qm_address1 = qm_addr_5_reg_1099;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        qm_address1 = qm_addr_3_reg_1089;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        qm_address1 = qm_addr_1_reg_1002;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        qm_address1 = qm_addr_7_gep_fu_346_p3;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        qm_address1 = qm_addr_5_gep_fu_319_p3;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        qm_address1 = qm_addr_3_gep_fu_301_p3;
    end else if (((tmp_reg_989 == 1'd1) & (1'b1 == ap_CS_fsm_state9))) begin
        qm_address1 = qm_addr_7_reg_1114;
    end else if (((icmp_ln22_reg_993 == 1'd1) & (tmp_reg_989 == 1'd0) & (1'b1 == ap_CS_fsm_state9))) begin
        qm_address1 = qm_addr_14_reg_1037;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        qm_address1 = qm_addr_12_reg_1022;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        qm_address1 = qm_addr_10_reg_1012;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        qm_address1 = qm_addr_8_reg_997;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        qm_address1 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        qm_address1 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        qm_address1 = 64'd3;
    end else if (((tmp_fu_676_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        qm_address1 = qm_addr_1_gep_fu_139_p3;
    end else if (((icmp_ln22_fu_684_p2 == 1'd1) & (tmp_fu_676_p3 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        qm_address1 = 64'd1;
    end else begin
        qm_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state3) | ((tmp_reg_989 == 1'd1) & (1'b1 == ap_CS_fsm_state9)) | ((icmp_ln22_reg_993 == 1'd1) & (tmp_reg_989 == 1'd0) & (1'b1 == ap_CS_fsm_state9)) | ((tmp_fu_676_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state2)) | ((icmp_ln22_fu_684_p2 == 1'd1) & (tmp_fu_676_p3 == 1'd0) & (1'b1 == ap_CS_fsm_state2)))) begin
        qm_ce0 = 1'b1;
    end else begin
        qm_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state3) | ((tmp_reg_989 == 1'd1) & (1'b1 == ap_CS_fsm_state9)) | ((icmp_ln22_reg_993 == 1'd1) & (tmp_reg_989 == 1'd0) & (1'b1 == ap_CS_fsm_state9)) | ((tmp_fu_676_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state2)) | ((icmp_ln22_fu_684_p2 == 1'd1) & (tmp_fu_676_p3 == 1'd0) & (1'b1 == ap_CS_fsm_state2)))) begin
        qm_ce1 = 1'b1;
    end else begin
        qm_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        qm_d0 = sub_ln21_fu_758_p2;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        qm_d0 = sub_ln20_2_fu_744_p2;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        qm_d0 = sub_ln20_fu_730_p2;
    end else if (((tmp_reg_989 == 1'd1) & (1'b1 == ap_CS_fsm_state9))) begin
        qm_d0 = sub_ln21_2_fu_718_p2;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        qm_d0 = add_ln24_fu_704_p2;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        qm_d0 = add_ln23_2_fu_690_p2;
    end else if (((1'b1 == ap_CS_fsm_state6) | ((icmp_ln22_reg_993 == 1'd1) & (tmp_reg_989 == 1'd0) & (1'b1 == ap_CS_fsm_state9)))) begin
        qm_d0 = grp_fu_662_p2;
    end else begin
        qm_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        qm_d1 = sub_ln21_1_fu_765_p2;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        qm_d1 = sub_ln20_3_fu_751_p2;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        qm_d1 = sub_ln20_1_fu_737_p2;
    end else if (((tmp_reg_989 == 1'd1) & (1'b1 == ap_CS_fsm_state9))) begin
        qm_d1 = sub_ln21_3_fu_724_p2;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        qm_d1 = add_ln24_1_fu_711_p2;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        qm_d1 = add_ln23_3_fu_697_p2;
    end else if (((1'b1 == ap_CS_fsm_state6) | ((icmp_ln22_reg_993 == 1'd1) & (tmp_reg_989 == 1'd0) & (1'b1 == ap_CS_fsm_state9)))) begin
        qm_d1 = grp_fu_669_p2;
    end else begin
        qm_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | ((tmp_reg_989 == 1'd1) & (1'b1 == ap_CS_fsm_state9)) | ((icmp_ln22_reg_993 == 1'd1) & (tmp_reg_989 == 1'd0) & (1'b1 == ap_CS_fsm_state9)))) begin
        qm_we0 = 1'b1;
    end else begin
        qm_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | ((tmp_reg_989 == 1'd1) & (1'b1 == ap_CS_fsm_state9)) | ((icmp_ln22_reg_993 == 1'd1) & (tmp_reg_989 == 1'd0) & (1'b1 == ap_CS_fsm_state9)))) begin
        qm_we1 = 1'b1;
    end else begin
        qm_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln22_fu_684_p2 == 1'd0) & (tmp_fu_676_p3 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else if (((icmp_ln22_fu_684_p2 == 1'd1) & (tmp_fu_676_p3 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln23_2_fu_690_p2 = (reg_619 + dx_q0);

assign add_ln23_3_fu_697_p2 = (reg_624 + dx_q1);

assign add_ln24_1_fu_711_p2 = (reg_632 + dx_q1);

assign add_ln24_fu_704_p2 = (reg_628 + dx_q0);

assign add_ln27_1_fu_783_p2 = (reg_646 + mul_ln27_1_reg_1201);

assign add_ln27_2_fu_788_p2 = (add_ln27_reg_1234 + add_ln27_1_fu_783_p2);

assign add_ln27_3_fu_854_p2 = (mul_ln27_4_fu_838_p2 + mul_ln27_3_fu_833_p2);

assign add_ln27_4_fu_906_p2 = (mul_ln27_7_reg_1281 + reg_646);

assign add_ln27_5_fu_911_p2 = (mul_ln27_5_reg_1276 + add_ln27_4_fu_906_p2);

assign add_ln27_6_fu_916_p2 = (add_ln27_3_reg_1286 + add_ln27_5_fu_911_p2);

assign add_ln27_7_fu_921_p2 = (add_ln27_2_reg_1271 + add_ln27_6_fu_916_p2);

assign add_ln27_fu_778_p2 = (reg_646 + round);

assign add_ln39_fu_931_p2 = (ashr_ln39_fu_926_p2 + in_r_q0);

assign and_ln1_fu_868_p3 = {{tmp_2_fu_860_p3}, {2'd0}};

assign and_ln2_fu_887_p3 = {{grp_fu_601_p3}, {3'd0}};

assign and_ln_fu_814_p3 = {{grp_fu_601_p3}, {2'd0}};

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ashr_ln39_fu_926_p2 = $signed(add_ln27_7_fu_921_p2) >>> shift;

assign dl_addr_1_reg_1159 = 64'd1;

assign dl_addr_2_reg_1181 = 64'd2;

assign dl_addr_3_reg_1191 = 64'd3;

assign dl_addr_6_reg_1251 = 64'd6;

assign dl_addr_7_reg_1261 = 64'd7;

assign dx_addr_15_reg_1072 = 64'd1;

assign dx_addr_16_reg_1078 = 64'd2;

assign dx_addr_17_reg_1169 = 64'd3;

assign dx_addr_18_reg_1175 = 64'd4;

assign dx_addr_19_gep_fu_562_p3 = 64'd5;

assign dx_addr_1_gep_fu_328_p3 = 64'd1;

assign dx_addr_20_gep_fu_571_p3 = 64'd6;

assign dx_addr_21_gep_fu_580_p3 = 64'd7;

assign dx_addr_2_gep_fu_355_p3 = 64'd2;

assign dx_addr_3_gep_fu_364_p3 = 64'd3;

assign dx_addr_4_gep_fu_373_p3 = 64'd4;

assign dx_addr_5_gep_fu_382_p3 = 64'd5;

assign dx_addr_6_gep_fu_391_p3 = 64'd6;

assign dx_addr_7_gep_fu_400_p3 = 64'd7;

assign error_addr_reg_954 = 64'd0;

assign error_d0 = in_r_q0;

assign grp_fu_595_p0 = qm_q0;

assign grp_fu_595_p1 = dl_q0;

assign grp_fu_595_p2 = ($signed(grp_fu_595_p0) * $signed(grp_fu_595_p1));

assign grp_fu_601_p1 = dl_q1;

assign grp_fu_601_p3 = grp_fu_601_p1[32'd31];

assign grp_fu_662_p2 = (reg_609 + dx_q0);

assign grp_fu_669_p2 = (reg_614 + dx_q1);

assign icmp_ln22_fu_684_p2 = (($signed(error_q0) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign in_r_address0 = 64'd0;

assign in_r_d0 = add_ln39_reg_1291;

assign mul_ln27_1_fu_772_p0 = reg_609;

assign mul_ln27_1_fu_772_p2 = ($signed(mul_ln27_1_fu_772_p0) * $signed(reg_650));

assign mul_ln27_3_fu_833_p0 = reg_609;

assign mul_ln27_3_fu_833_p2 = ($signed(mul_ln27_3_fu_833_p0) * $signed(dl_load_3_reg_1206));

assign mul_ln27_4_fu_838_p0 = reg_614;

assign mul_ln27_4_fu_838_p2 = ($signed(mul_ln27_4_fu_838_p0) * $signed(dl_load_4_reg_1239));

assign mul_ln27_5_fu_843_p0 = reg_619;

assign mul_ln27_5_fu_843_p2 = ($signed(mul_ln27_5_fu_843_p0) * $signed(dl_load_5_reg_1245));

assign mul_ln27_7_fu_848_p0 = qm_q1;

assign mul_ln27_7_fu_848_p1 = dl_q1;

assign mul_ln27_7_fu_848_p2 = ($signed(mul_ln27_7_fu_848_p0) * $signed(mul_ln27_7_fu_848_p1));

assign or_ln33_fu_807_p2 = (sext_ln33_fu_803_p1 | 32'd1);

assign or_ln34_fu_822_p2 = (3'd2 | and_ln_fu_814_p3);

assign or_ln35_fu_876_p2 = (3'd2 | and_ln1_fu_868_p3);

assign or_ln36_fu_895_p2 = (4'd4 | and_ln2_fu_887_p3);

assign qm_addr_10_reg_1012 = 64'd3;

assign qm_addr_11_reg_1017 = 64'd4;

assign qm_addr_12_reg_1022 = 64'd5;

assign qm_addr_13_reg_1032 = 64'd6;

assign qm_addr_14_reg_1037 = 64'd7;

assign qm_addr_15_gep_fu_427_p3 = 64'd1;

assign qm_addr_16_gep_fu_463_p3 = 64'd2;

assign qm_addr_17_gep_fu_481_p3 = 64'd3;

assign qm_addr_18_gep_fu_499_p3 = 64'd4;

assign qm_addr_19_gep_fu_517_p3 = 64'd5;

assign qm_addr_1_gep_fu_139_p3 = 64'd1;

assign qm_addr_1_reg_1002 = 64'd1;

assign qm_addr_20_gep_fu_535_p3 = 64'd6;

assign qm_addr_21_gep_fu_553_p3 = 64'd7;

assign qm_addr_2_gep_fu_292_p3 = 64'd2;

assign qm_addr_2_reg_1084 = 64'd2;

assign qm_addr_3_gep_fu_301_p3 = 64'd3;

assign qm_addr_3_reg_1089 = 64'd3;

assign qm_addr_4_gep_fu_310_p3 = 64'd4;

assign qm_addr_4_reg_1094 = 64'd4;

assign qm_addr_5_gep_fu_319_p3 = 64'd5;

assign qm_addr_5_reg_1099 = 64'd5;

assign qm_addr_6_gep_fu_337_p3 = 64'd6;

assign qm_addr_6_reg_1109 = 64'd6;

assign qm_addr_7_gep_fu_346_p3 = 64'd7;

assign qm_addr_7_reg_1114 = 64'd7;

assign qm_addr_8_reg_997 = 64'd1;

assign qm_addr_9_reg_1007 = 64'd2;

assign qm_addr_reg_984 = 64'd0;

assign sext_ln33_fu_803_p1 = $signed(trunc_ln_fu_793_p4);

assign sext_ln34_fu_828_p1 = $signed(or_ln34_fu_822_p2);

assign sext_ln35_fu_882_p1 = $signed(or_ln35_fu_876_p2);

assign sext_ln36_fu_901_p1 = $signed(or_ln36_fu_895_p2);

assign sub_ln20_1_fu_737_p2 = (reg_614 - dx_q1);

assign sub_ln20_2_fu_744_p2 = (reg_619 - dx_q0);

assign sub_ln20_3_fu_751_p2 = (reg_624 - dx_q1);

assign sub_ln20_fu_730_p2 = (reg_609 - dx_q0);

assign sub_ln21_1_fu_765_p2 = (reg_632 - dx_q1);

assign sub_ln21_2_fu_718_p2 = (qm_load_6_reg_1129 - dx_q0);

assign sub_ln21_3_fu_724_p2 = (qm_load_7_reg_1134 - dx_q1);

assign sub_ln21_fu_758_p2 = (reg_628 - dx_q0);

assign sub_ln42_fu_937_p2 = ($signed(add_ln39_reg_1291) - $signed(reg_656));

assign sub_ln43_1_fu_949_p2 = ($signed(sub_ln43_reg_1298) - $signed(dl_load_5_reg_1245));

assign sub_ln43_fu_943_p2 = ($signed(sub_ln42_fu_937_p2) - $signed(reg_650));

assign tmp_2_fu_860_p1 = dl_q0;

assign tmp_2_fu_860_p3 = tmp_2_fu_860_p1[32'd31];

assign tmp_fu_676_p3 = error_q0[32'd31];

assign trunc_ln_fu_793_p1 = dl_q0;

assign trunc_ln_fu_793_p4 = {{trunc_ln_fu_793_p1[31:30]}};

endmodule //tta_filter_process_c
