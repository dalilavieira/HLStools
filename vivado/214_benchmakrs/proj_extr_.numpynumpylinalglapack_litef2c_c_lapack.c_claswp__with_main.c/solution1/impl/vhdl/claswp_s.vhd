-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2019.1
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity claswp_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    n : IN STD_LOGIC_VECTOR (31 downto 0);
    a_i_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    a_i_ce0 : OUT STD_LOGIC;
    a_i_we0 : OUT STD_LOGIC;
    a_i_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    a_i_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    a_i_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    a_i_ce1 : OUT STD_LOGIC;
    a_i_we1 : OUT STD_LOGIC;
    a_i_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    a_i_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    a_r_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    a_r_ce0 : OUT STD_LOGIC;
    a_r_we0 : OUT STD_LOGIC;
    a_r_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    a_r_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    a_r_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    a_r_ce1 : OUT STD_LOGIC;
    a_r_we1 : OUT STD_LOGIC;
    a_r_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    a_r_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    lda : IN STD_LOGIC_VECTOR (31 downto 0);
    k1 : IN STD_LOGIC_VECTOR (31 downto 0);
    k2 : IN STD_LOGIC_VECTOR (31 downto 0);
    ipiv_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    ipiv_ce0 : OUT STD_LOGIC;
    ipiv_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    incx : IN STD_LOGIC_VECTOR (31 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of claswp_s is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "claswp_s,hls_ip_2019_1,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7k160t-fbg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.365000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=9,HLS_SYN_FF=1267,HLS_SYN_LUT=1487,HLS_VERSION=2019_1}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (14 downto 0) := "000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (14 downto 0) := "000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (14 downto 0) := "000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (14 downto 0) := "000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (14 downto 0) := "000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (14 downto 0) := "000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (14 downto 0) := "000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (14 downto 0) := "000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (14 downto 0) := "000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (14 downto 0) := "001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (14 downto 0) := "010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (14 downto 0) := "100000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv11_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv27_0 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000000000000";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv11_7FF : STD_LOGIC_VECTOR (10 downto 0) := "11111111111";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal ap_CS_fsm : STD_LOGIC_VECTOR (14 downto 0) := "000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal ix0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal i1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal i2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal j : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal ix : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal i_s : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal ip : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal reg_392 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal select_ln114_fu_619_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal tmp_reg_875 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln136_reg_937 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln141_fu_750_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln93_reg_858 : STD_LOGIC_VECTOR (0 downto 0);
    signal reg_396 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal reg_401 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln93_fu_421_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln93_reg_845 : STD_LOGIC_VECTOR (10 downto 0);
    signal icmp_ln93_fu_427_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_fu_433_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal mul_ln99_fu_447_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln99_reg_879 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal i_1_fu_525_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_1_reg_890 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln108_fu_533_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln108_reg_897 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_3_fu_539_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_3_reg_901 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_363_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln114_reg_906 : STD_LOGIC_VECTOR (0 downto 0);
    signal ix0_load_reg_914 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal icmp_ln110_fu_549_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_2_reg_919 : STD_LOGIC_VECTOR (31 downto 0);
    signal i1_load_reg_926 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln136_fu_572_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln136_reg_932 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln136_fu_576_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln137_fu_580_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln137_reg_941 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln141_reg_946 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln110_fu_641_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln117_fu_647_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln117_reg_964 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal i_4_fu_653_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_4_reg_973 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln121_fu_675_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln121_reg_981 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal icmp_ln119_fu_659_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln124_fu_685_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln124_reg_986 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln119_fu_689_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln119_reg_991 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln114_fu_695_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_r_addr_reg_1001 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal a_i_addr_reg_1006 : STD_LOGIC_VECTOR (9 downto 0);
    signal a_r_addr_1_reg_1011 : STD_LOGIC_VECTOR (9 downto 0);
    signal a_i_addr_1_reg_1016 : STD_LOGIC_VECTOR (9 downto 0);
    signal icmp_ln143_fu_772_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln143_reg_1029 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal trunc_ln147_fu_794_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln147_reg_1036 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal icmp_ln145_fu_778_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln150_fu_804_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln150_reg_1041 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln145_fu_808_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln145_reg_1046 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln141_fu_814_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_r_addr_2_reg_1056 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal a_i_addr_2_reg_1061 : STD_LOGIC_VECTOR (9 downto 0);
    signal a_r_addr_3_reg_1066 : STD_LOGIC_VECTOR (9 downto 0);
    signal a_i_addr_3_reg_1071 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln99_fu_453_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_storemerge49_phi_fu_208_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal storemerge49_reg_205 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_storemerge_phi_fu_218_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal storemerge_reg_215 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_storemerge27_phi_fu_228_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal storemerge27_reg_225 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_i_3_1_phi_fu_239_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal i_3_1_reg_235 : STD_LOGIC_VECTOR (1 downto 0);
    signal i1_load_137_reg_248 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_1_133_reg_258 : STD_LOGIC_VECTOR (31 downto 0);
    signal ix0_load_130_reg_268 : STD_LOGIC_VECTOR (31 downto 0);
    signal storemerge10_reg_278 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_i1_load_1_phi_fu_292_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal i1_load_1_reg_289 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_1_1_reg_301 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_ix0_load_1_phi_fu_316_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ix0_load_1_reg_313 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_reg_324 : STD_LOGIC_VECTOR (31 downto 0);
    signal k_load_1_reg_334 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal empty_4_reg_343 : STD_LOGIC_VECTOR (31 downto 0);
    signal k_load_3_reg_354 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal sext_ln116_fu_636_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln121_fu_704_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln124_fu_714_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln142_fu_767_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln147_fu_823_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln150_fu_833_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_406_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_363_p0 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_406_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln88_fu_417_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln88_fu_417_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal icmp_ln93_fu_427_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_fu_433_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln99_fu_447_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln99_fu_441_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln107_fu_485_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln107_1_fu_491_p4 : STD_LOGIC_VECTOR (26 downto 0);
    signal tmp_1_fu_477_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln107_1_fu_501_p2 : STD_LOGIC_VECTOR (26 downto 0);
    signal trunc_ln107_2_fu_507_p4 : STD_LOGIC_VECTOR (26 downto 0);
    signal select_ln107_fu_517_p3 : STD_LOGIC_VECTOR (26 downto 0);
    signal icmp_ln114_1_fu_597_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln114_2_fu_608_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln114_fu_602_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln114_1_fu_613_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln116_fu_626_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln116_fu_630_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal mul_ln120_fu_664_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln120_fu_664_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_5_fu_669_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_6_fu_679_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln121_fu_700_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal sub_ln124_fu_710_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal icmp_ln141_1_fu_726_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln141_2_fu_738_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln141_fu_732_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln141_1_fu_744_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln142_fu_757_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln142_fu_761_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal mul_ln146_fu_783_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln146_fu_783_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_4_1_fu_788_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_5_3_fu_798_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln147_fu_819_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal sub_ln150_fu_829_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (14 downto 0);


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    empty_4_reg_343_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state12) and ((icmp_ln145_fu_778_p2 = ap_const_lv1_1) or (icmp_ln143_reg_1029 = ap_const_lv1_1)))) then 
                empty_4_reg_343 <= add_ln141_fu_814_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and (((icmp_ln136_fu_576_p2 = ap_const_lv1_0) and (icmp_ln108_reg_897 = ap_const_lv1_1)) or ((icmp_ln136_fu_576_p2 = ap_const_lv1_0) and (icmp_ln110_fu_549_p2 = ap_const_lv1_1))))) then 
                empty_4_reg_343 <= ap_phi_mux_i1_load_1_phi_fu_292_p4;
            end if; 
        end if;
    end process;

    empty_reg_324_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state6) and ((icmp_ln119_fu_659_p2 = ap_const_lv1_1) or (icmp_ln117_reg_964 = ap_const_lv1_1)))) then 
                empty_reg_324 <= add_ln114_fu_695_p2;
            elsif (((icmp_ln110_fu_549_p2 = ap_const_lv1_0) and (icmp_ln108_reg_897 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                empty_reg_324 <= i1;
            end if; 
        end if;
    end process;

    i1_load_137_reg_248_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln108_fu_533_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                i1_load_137_reg_248 <= ap_phi_mux_storemerge_phi_fu_218_p4;
            elsif (((select_ln114_fu_619_p3 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                i1_load_137_reg_248 <= i1_load_reg_926;
            end if; 
        end if;
    end process;

    i1_load_1_reg_289_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln108_reg_897 = ap_const_lv1_0) and (icmp_ln110_fu_549_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                i1_load_1_reg_289 <= i1_load_137_reg_248;
            elsif (((icmp_ln108_fu_533_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                i1_load_1_reg_289 <= ap_phi_mux_storemerge_phi_fu_218_p4;
            end if; 
        end if;
    end process;

    i_1_133_reg_258_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln108_fu_533_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                i_1_133_reg_258 <= ap_phi_mux_storemerge27_phi_fu_228_p4;
            elsif (((select_ln114_fu_619_p3 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                i_1_133_reg_258 <= i_2_reg_919;
            end if; 
        end if;
    end process;

    i_1_1_reg_301_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln108_reg_897 = ap_const_lv1_0) and (icmp_ln110_fu_549_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                i_1_1_reg_301 <= i_1_133_reg_258;
            elsif (((icmp_ln108_fu_533_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                i_1_1_reg_301 <= ap_phi_mux_storemerge27_phi_fu_228_p4;
            end if; 
        end if;
    end process;

    i_3_1_reg_235_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln93_fu_427_p2 = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                i_3_1_reg_235(1) <= '0';
            elsif (((icmp_ln93_reg_858 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                i_3_1_reg_235(1) <= '1';
            end if; 
        end if;
    end process;

    i_s_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state10) and (((icmp_ln136_reg_937 = ap_const_lv1_0) and (tmp_reg_875 = ap_const_lv1_1)) or ((icmp_ln136_reg_937 = ap_const_lv1_0) and (icmp_ln93_reg_858 = ap_const_lv1_1))))) then 
                i_s <= empty_4_reg_343;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                i_s <= empty_reg_324;
            end if; 
        end if;
    end process;

    ix_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_CS_fsm_state12) and ((icmp_ln145_fu_778_p2 = ap_const_lv1_1) or (icmp_ln143_reg_1029 = ap_const_lv1_1))) or ((ap_const_logic_1 = ap_CS_fsm_state6) and ((icmp_ln119_fu_659_p2 = ap_const_lv1_1) or (icmp_ln117_reg_964 = ap_const_lv1_1))))) then 
                ix <= grp_fu_406_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and (((icmp_ln136_fu_576_p2 = ap_const_lv1_0) and (icmp_ln108_reg_897 = ap_const_lv1_1)) or ((icmp_ln136_fu_576_p2 = ap_const_lv1_0) and (icmp_ln110_fu_549_p2 = ap_const_lv1_1))))) then 
                ix <= ap_phi_mux_ix0_load_1_phi_fu_316_p4;
            elsif (((icmp_ln110_fu_549_p2 = ap_const_lv1_0) and (icmp_ln108_reg_897 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                ix <= ix0;
            end if; 
        end if;
    end process;

    ix0_load_130_reg_268_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln108_fu_533_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                ix0_load_130_reg_268 <= ap_phi_mux_storemerge49_phi_fu_208_p4;
            elsif (((select_ln114_fu_619_p3 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                ix0_load_130_reg_268 <= ix0_load_reg_914;
            end if; 
        end if;
    end process;

    ix0_load_1_reg_313_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln108_reg_897 = ap_const_lv1_0) and (icmp_ln110_fu_549_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                ix0_load_1_reg_313 <= ix0_load_130_reg_268;
            elsif (((icmp_ln108_fu_533_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                ix0_load_1_reg_313 <= ap_phi_mux_storemerge49_phi_fu_208_p4;
            end if; 
        end if;
    end process;

    k_load_1_reg_334_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
                k_load_1_reg_334 <= add_ln119_reg_991;
            elsif (((icmp_ln117_fu_647_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                k_load_1_reg_334 <= j;
            end if; 
        end if;
    end process;

    k_load_3_reg_354_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln143_fu_772_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11))) then 
                k_load_3_reg_354 <= or_ln137_reg_941;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
                k_load_3_reg_354 <= add_ln145_reg_1046;
            end if; 
        end if;
    end process;

    storemerge10_reg_278_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln108_fu_533_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                storemerge10_reg_278 <= ap_const_lv32_1;
            elsif (((select_ln114_fu_619_p3 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                storemerge10_reg_278 <= add_ln110_fu_641_p2;
            end if; 
        end if;
    end process;

    storemerge27_reg_225_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln93_fu_427_p2 = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                storemerge27_reg_225 <= k2;
            elsif (((icmp_ln93_reg_858 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                storemerge27_reg_225 <= k1;
            end if; 
        end if;
    end process;

    storemerge49_reg_205_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln93_fu_427_p2 = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                storemerge49_reg_205 <= k1;
            elsif (((icmp_ln93_reg_858 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                storemerge49_reg_205 <= add_ln99_fu_453_p2;
            end if; 
        end if;
    end process;

    storemerge_reg_215_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln93_fu_427_p2 = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                storemerge_reg_215 <= k1;
            elsif (((icmp_ln93_reg_858 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                storemerge_reg_215 <= k2;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then
                a_i_addr_1_reg_1016 <= sext_ln124_fu_714_p1(10 - 1 downto 0);
                a_i_addr_reg_1006 <= sext_ln121_fu_704_p1(10 - 1 downto 0);
                a_r_addr_1_reg_1011 <= sext_ln124_fu_714_p1(10 - 1 downto 0);
                a_r_addr_reg_1001 <= sext_ln121_fu_704_p1(10 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state13)) then
                a_i_addr_2_reg_1061 <= sext_ln147_fu_823_p1(10 - 1 downto 0);
                a_i_addr_3_reg_1071 <= sext_ln150_fu_833_p1(10 - 1 downto 0);
                a_r_addr_2_reg_1056 <= sext_ln147_fu_823_p1(10 - 1 downto 0);
                a_r_addr_3_reg_1066 <= sext_ln150_fu_833_p1(10 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln119_fu_659_p2 = ap_const_lv1_0) and (icmp_ln117_reg_964 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                add_ln119_reg_991 <= add_ln119_fu_689_p2;
                trunc_ln121_reg_981 <= trunc_ln121_fu_675_p1;
                trunc_ln124_reg_986 <= trunc_ln124_fu_685_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln145_fu_778_p2 = ap_const_lv1_0) and (icmp_ln143_reg_1029 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state12))) then
                add_ln145_reg_1046 <= add_ln145_fu_808_p2;
                trunc_ln147_reg_1036 <= trunc_ln147_fu_794_p1;
                trunc_ln150_reg_1041 <= trunc_ln150_fu_804_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                add_ln93_reg_845 <= add_ln93_fu_421_p2;
                icmp_ln93_reg_858 <= icmp_ln93_fu_427_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                i1 <= ap_phi_mux_storemerge_phi_fu_218_p4;
                i2 <= ap_phi_mux_storemerge27_phi_fu_228_p4;
                    i_1_reg_890(31 downto 5) <= i_1_fu_525_p3(31 downto 5);
                icmp_ln108_reg_897 <= icmp_ln108_fu_533_p2;
                ix0 <= ap_phi_mux_storemerge49_phi_fu_208_p4;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln110_fu_549_p2 = ap_const_lv1_0) and (icmp_ln108_reg_897 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                i1_load_reg_926 <= i1;
                i_2_reg_919 <= i2;
                ix0_load_reg_914 <= ix0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln108_fu_533_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    i_3_reg_901(31 downto 1) <= i_3_fu_539_p1(31 downto 1);
                icmp_ln114_reg_906 <= grp_fu_363_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln117_fu_647_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                i_4_reg_973 <= i_4_fu_653_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                icmp_ln117_reg_964 <= icmp_ln117_fu_647_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state3) and ((icmp_ln110_fu_549_p2 = ap_const_lv1_1) or (icmp_ln108_reg_897 = ap_const_lv1_1)))) then
                icmp_ln136_reg_937 <= icmp_ln136_fu_576_p2;
                    sext_ln136_reg_932(31 downto 1) <= sext_ln136_fu_572_p1(31 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state3) and (((icmp_ln136_fu_576_p2 = ap_const_lv1_0) and (icmp_ln108_reg_897 = ap_const_lv1_1)) or ((icmp_ln136_fu_576_p2 = ap_const_lv1_0) and (icmp_ln110_fu_549_p2 = ap_const_lv1_1))))) then
                icmp_ln141_reg_946 <= grp_fu_363_p2;
                    or_ln137_reg_941(31 downto 5) <= or_ln137_fu_580_p2(31 downto 5);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state11)) then
                icmp_ln143_reg_1029 <= icmp_ln143_fu_772_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state5))) then
                ip <= ipiv_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln108_reg_897 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                j <= storemerge10_reg_278;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln93_fu_427_p2 = ap_const_lv1_0) and (tmp_fu_433_p3 = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                mul_ln99_reg_879 <= mul_ln99_fu_447_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_CS_fsm_state10) and (((icmp_ln136_reg_937 = ap_const_lv1_0) and (tmp_reg_875 = ap_const_lv1_1) and (select_ln141_fu_750_p3 = ap_const_lv1_1)) or ((icmp_ln136_reg_937 = ap_const_lv1_0) and (icmp_ln93_reg_858 = ap_const_lv1_1) and (select_ln141_fu_750_p3 = ap_const_lv1_1)))) or ((select_ln114_fu_619_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4)))) then
                reg_392 <= ix;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state8))) then
                reg_396 <= a_r_q0;
                reg_401 <= a_i_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln93_fu_427_p2 = ap_const_lv1_0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                tmp_reg_875 <= tmp_fu_433_p1(31 downto 31);
            end if;
        end if;
    end process;
    i_1_reg_890(4 downto 0) <= "00000";
    i_3_reg_901(0) <= '1';
    sext_ln136_reg_932(0) <= '1';
    or_ln137_reg_941(4 downto 0) <= "00001";
    i_3_1_reg_235(0) <= '1';

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state4, select_ln114_fu_619_p3, ap_CS_fsm_state10, tmp_reg_875, icmp_ln136_reg_937, select_ln141_fu_750_p3, icmp_ln93_reg_858, icmp_ln93_fu_427_p2, tmp_fu_433_p3, icmp_ln108_reg_897, ap_CS_fsm_state3, icmp_ln110_fu_549_p2, icmp_ln117_reg_964, ap_CS_fsm_state6, icmp_ln119_fu_659_p2, icmp_ln143_reg_1029, ap_CS_fsm_state12, icmp_ln145_fu_778_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((tmp_fu_433_p3 = ap_const_lv1_0) and (icmp_ln93_fu_427_p2 = ap_const_lv1_0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state10;
                elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and ((tmp_fu_433_p3 = ap_const_lv1_1) or (icmp_ln93_fu_427_p2 = ap_const_lv1_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state3) and ((icmp_ln110_fu_549_p2 = ap_const_lv1_1) or (icmp_ln108_reg_897 = ap_const_lv1_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state10;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state4 => 
                if (((select_ln114_fu_619_p3 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state6) and ((icmp_ln119_fu_659_p2 = ap_const_lv1_1) or (icmp_ln117_reg_964 = ap_const_lv1_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state10 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state10) and (((select_ln141_fu_750_p3 = ap_const_lv1_0) or (icmp_ln136_reg_937 = ap_const_lv1_1)) or ((icmp_ln93_reg_858 = ap_const_lv1_0) and (tmp_reg_875 = ap_const_lv1_0))))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state11;
                end if;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state12) and ((icmp_ln145_fu_778_p2 = ap_const_lv1_1) or (icmp_ln143_reg_1029 = ap_const_lv1_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state10;
                else
                    ap_NS_fsm <= ap_ST_fsm_state13;
                end if;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXX";
        end case;
    end process;

    a_i_address0_assign_proc : process(ap_CS_fsm_state8, ap_CS_fsm_state14, ap_CS_fsm_state7, a_i_addr_reg_1006, ap_CS_fsm_state13, a_i_addr_2_reg_1061, sext_ln121_fu_704_p1, sext_ln147_fu_823_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            a_i_address0 <= a_i_addr_2_reg_1061;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            a_i_address0 <= sext_ln147_fu_823_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            a_i_address0 <= a_i_addr_reg_1006;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            a_i_address0 <= sext_ln121_fu_704_p1(10 - 1 downto 0);
        else 
            a_i_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    a_i_address1_assign_proc : process(ap_CS_fsm_state7, a_i_addr_1_reg_1016, ap_CS_fsm_state13, a_i_addr_3_reg_1071, ap_CS_fsm_state9, ap_CS_fsm_state15, sext_ln124_fu_714_p1, sext_ln150_fu_833_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            a_i_address1 <= a_i_addr_3_reg_1071;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            a_i_address1 <= sext_ln150_fu_833_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            a_i_address1 <= a_i_addr_1_reg_1016;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            a_i_address1 <= sext_ln124_fu_714_p1(10 - 1 downto 0);
        else 
            a_i_address1 <= "XXXXXXXXXX";
        end if; 
    end process;


    a_i_ce0_assign_proc : process(ap_CS_fsm_state8, ap_CS_fsm_state14, ap_CS_fsm_state7, ap_CS_fsm_state13)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            a_i_ce0 <= ap_const_logic_1;
        else 
            a_i_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    a_i_ce1_assign_proc : process(ap_CS_fsm_state7, ap_CS_fsm_state13, ap_CS_fsm_state9, ap_CS_fsm_state15)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            a_i_ce1 <= ap_const_logic_1;
        else 
            a_i_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    a_i_d0 <= a_i_q1;
    a_i_d1 <= reg_401;

    a_i_we0_assign_proc : process(ap_CS_fsm_state8, ap_CS_fsm_state14)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            a_i_we0 <= ap_const_logic_1;
        else 
            a_i_we0 <= ap_const_logic_0;
        end if; 
    end process;


    a_i_we1_assign_proc : process(ap_CS_fsm_state9, ap_CS_fsm_state15)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            a_i_we1 <= ap_const_logic_1;
        else 
            a_i_we1 <= ap_const_logic_0;
        end if; 
    end process;


    a_r_address0_assign_proc : process(ap_CS_fsm_state8, ap_CS_fsm_state14, a_r_addr_reg_1001, ap_CS_fsm_state7, a_r_addr_2_reg_1056, ap_CS_fsm_state13, sext_ln121_fu_704_p1, sext_ln147_fu_823_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            a_r_address0 <= a_r_addr_2_reg_1056;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            a_r_address0 <= sext_ln147_fu_823_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            a_r_address0 <= a_r_addr_reg_1001;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            a_r_address0 <= sext_ln121_fu_704_p1(10 - 1 downto 0);
        else 
            a_r_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    a_r_address1_assign_proc : process(ap_CS_fsm_state7, a_r_addr_1_reg_1011, ap_CS_fsm_state13, a_r_addr_3_reg_1066, ap_CS_fsm_state9, ap_CS_fsm_state15, sext_ln124_fu_714_p1, sext_ln150_fu_833_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            a_r_address1 <= a_r_addr_3_reg_1066;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            a_r_address1 <= sext_ln150_fu_833_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            a_r_address1 <= a_r_addr_1_reg_1011;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            a_r_address1 <= sext_ln124_fu_714_p1(10 - 1 downto 0);
        else 
            a_r_address1 <= "XXXXXXXXXX";
        end if; 
    end process;


    a_r_ce0_assign_proc : process(ap_CS_fsm_state8, ap_CS_fsm_state14, ap_CS_fsm_state7, ap_CS_fsm_state13)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            a_r_ce0 <= ap_const_logic_1;
        else 
            a_r_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    a_r_ce1_assign_proc : process(ap_CS_fsm_state7, ap_CS_fsm_state13, ap_CS_fsm_state9, ap_CS_fsm_state15)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            a_r_ce1 <= ap_const_logic_1;
        else 
            a_r_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    a_r_d0 <= a_r_q1;
    a_r_d1 <= reg_396;

    a_r_we0_assign_proc : process(ap_CS_fsm_state8, ap_CS_fsm_state14)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            a_r_we0 <= ap_const_logic_1;
        else 
            a_r_we0 <= ap_const_logic_0;
        end if; 
    end process;


    a_r_we1_assign_proc : process(ap_CS_fsm_state9, ap_CS_fsm_state15)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            a_r_we1 <= ap_const_logic_1;
        else 
            a_r_we1 <= ap_const_logic_0;
        end if; 
    end process;

    add_ln110_fu_641_p2 <= std_logic_vector(unsigned(j) + unsigned(ap_const_lv32_20));
    add_ln114_fu_695_p2 <= std_logic_vector(unsigned(i_s) + unsigned(i_3_reg_901));
    add_ln116_fu_630_p2 <= std_logic_vector(signed(ap_const_lv11_7FF) + signed(trunc_ln116_fu_626_p1));
    add_ln119_fu_689_p2 <= std_logic_vector(unsigned(ap_const_lv32_1) + unsigned(k_load_1_reg_334));
    add_ln141_fu_814_p2 <= std_logic_vector(unsigned(i_s) + unsigned(sext_ln136_reg_932));
    add_ln142_fu_761_p2 <= std_logic_vector(signed(ap_const_lv11_7FF) + signed(trunc_ln142_fu_757_p1));
    add_ln145_fu_808_p2 <= std_logic_vector(unsigned(ap_const_lv32_1) + unsigned(k_load_3_reg_354));
    add_ln93_fu_421_p2 <= std_logic_vector(unsigned(ap_const_lv11_1) + unsigned(trunc_ln88_fu_417_p1));
    add_ln99_fu_453_p2 <= std_logic_vector(unsigned(mul_ln99_reg_879) + unsigned(ap_const_lv32_1));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);

    ap_done_assign_proc : process(ap_CS_fsm_state10, tmp_reg_875, icmp_ln136_reg_937, select_ln141_fu_750_p3, icmp_ln93_reg_858)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state10) and (((select_ln141_fu_750_p3 = ap_const_lv1_0) or (icmp_ln136_reg_937 = ap_const_lv1_1)) or ((icmp_ln93_reg_858 = ap_const_lv1_0) and (tmp_reg_875 = ap_const_lv1_0))))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_i1_load_1_phi_fu_292_p4_assign_proc : process(icmp_ln108_reg_897, ap_CS_fsm_state3, icmp_ln110_fu_549_p2, i1_load_137_reg_248, i1_load_1_reg_289)
    begin
        if (((icmp_ln108_reg_897 = ap_const_lv1_0) and (icmp_ln110_fu_549_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            ap_phi_mux_i1_load_1_phi_fu_292_p4 <= i1_load_137_reg_248;
        else 
            ap_phi_mux_i1_load_1_phi_fu_292_p4 <= i1_load_1_reg_289;
        end if; 
    end process;


    ap_phi_mux_i_3_1_phi_fu_239_p4_assign_proc : process(icmp_ln93_reg_858, ap_CS_fsm_state2, i_3_1_reg_235)
    begin
        if (((icmp_ln93_reg_858 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ap_phi_mux_i_3_1_phi_fu_239_p4 <= ap_const_lv2_3;
        else 
            ap_phi_mux_i_3_1_phi_fu_239_p4 <= i_3_1_reg_235;
        end if; 
    end process;


    ap_phi_mux_ix0_load_1_phi_fu_316_p4_assign_proc : process(icmp_ln108_reg_897, ap_CS_fsm_state3, icmp_ln110_fu_549_p2, ix0_load_130_reg_268, ix0_load_1_reg_313)
    begin
        if (((icmp_ln108_reg_897 = ap_const_lv1_0) and (icmp_ln110_fu_549_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            ap_phi_mux_ix0_load_1_phi_fu_316_p4 <= ix0_load_130_reg_268;
        else 
            ap_phi_mux_ix0_load_1_phi_fu_316_p4 <= ix0_load_1_reg_313;
        end if; 
    end process;


    ap_phi_mux_storemerge27_phi_fu_228_p4_assign_proc : process(k1, icmp_ln93_reg_858, ap_CS_fsm_state2, storemerge27_reg_225)
    begin
        if (((icmp_ln93_reg_858 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ap_phi_mux_storemerge27_phi_fu_228_p4 <= k1;
        else 
            ap_phi_mux_storemerge27_phi_fu_228_p4 <= storemerge27_reg_225;
        end if; 
    end process;


    ap_phi_mux_storemerge49_phi_fu_208_p4_assign_proc : process(icmp_ln93_reg_858, ap_CS_fsm_state2, add_ln99_fu_453_p2, storemerge49_reg_205)
    begin
        if (((icmp_ln93_reg_858 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ap_phi_mux_storemerge49_phi_fu_208_p4 <= add_ln99_fu_453_p2;
        else 
            ap_phi_mux_storemerge49_phi_fu_208_p4 <= storemerge49_reg_205;
        end if; 
    end process;


    ap_phi_mux_storemerge_phi_fu_218_p4_assign_proc : process(k2, icmp_ln93_reg_858, ap_CS_fsm_state2, storemerge_reg_215)
    begin
        if (((icmp_ln93_reg_858 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ap_phi_mux_storemerge_phi_fu_218_p4 <= k2;
        else 
            ap_phi_mux_storemerge_phi_fu_218_p4 <= storemerge_reg_215;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state10, tmp_reg_875, icmp_ln136_reg_937, select_ln141_fu_750_p3, icmp_ln93_reg_858)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state10) and (((select_ln141_fu_750_p3 = ap_const_lv1_0) or (icmp_ln136_reg_937 = ap_const_lv1_1)) or ((icmp_ln93_reg_858 = ap_const_lv1_0) and (tmp_reg_875 = ap_const_lv1_0))))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    ap_return <= ap_const_lv32_0;

    grp_fu_363_p0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state3, ap_phi_mux_i_3_1_phi_fu_239_p4, i_3_1_reg_235)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_fu_363_p0 <= i_3_1_reg_235;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_363_p0 <= ap_phi_mux_i_3_1_phi_fu_239_p4;
        else 
            grp_fu_363_p0 <= "XX";
        end if; 
    end process;

    grp_fu_363_p2 <= "1" when (grp_fu_363_p0 = ap_const_lv2_3) else "0";
    grp_fu_406_p1 <= incx;
    grp_fu_406_p2 <= std_logic_vector(unsigned(reg_392) + unsigned(grp_fu_406_p1));
    i_1_fu_525_p3 <= (select_ln107_fu_517_p3 & ap_const_lv5_0);
        i_3_fu_539_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ap_phi_mux_i_3_1_phi_fu_239_p4),32));

    i_4_1_fu_788_p2 <= std_logic_vector(unsigned(i_s) + unsigned(mul_ln146_fu_783_p2));
    i_4_fu_653_p2 <= std_logic_vector(unsigned(j) + unsigned(ap_const_lv32_1F));
    i_5_3_fu_798_p2 <= std_logic_vector(unsigned(ip) + unsigned(mul_ln146_fu_783_p2));
    i_5_fu_669_p2 <= std_logic_vector(unsigned(i_s) + unsigned(mul_ln120_fu_664_p2));
    i_6_fu_679_p2 <= std_logic_vector(unsigned(ip) + unsigned(mul_ln120_fu_664_p2));
    icmp_ln108_fu_533_p2 <= "1" when (select_ln107_fu_517_p3 = ap_const_lv27_0) else "0";
    icmp_ln110_fu_549_p2 <= "1" when (signed(storemerge10_reg_278) > signed(i_1_reg_890)) else "0";
    icmp_ln114_1_fu_597_p2 <= "1" when (signed(empty_reg_324) < signed(i_2_reg_919)) else "0";
    icmp_ln114_2_fu_608_p2 <= "1" when (signed(i_2_reg_919) < signed(empty_reg_324)) else "0";
    icmp_ln117_fu_647_p2 <= "1" when (ipiv_q0 = empty_reg_324) else "0";
    icmp_ln119_fu_659_p2 <= "1" when (signed(k_load_1_reg_334) > signed(i_4_reg_973)) else "0";
    icmp_ln136_fu_576_p2 <= "1" when (i_1_reg_890 = n) else "0";
    icmp_ln141_1_fu_726_p2 <= "1" when (signed(empty_4_reg_343) < signed(i_1_1_reg_301)) else "0";
    icmp_ln141_2_fu_738_p2 <= "1" when (signed(i_1_1_reg_301) < signed(empty_4_reg_343)) else "0";
    icmp_ln143_fu_772_p2 <= "1" when (ipiv_q0 = empty_4_reg_343) else "0";
    icmp_ln145_fu_778_p2 <= "1" when (signed(k_load_3_reg_354) > signed(n)) else "0";
    icmp_ln93_fu_427_p0 <= incx;
    icmp_ln93_fu_427_p2 <= "1" when (signed(icmp_ln93_fu_427_p0) > signed(ap_const_lv32_0)) else "0";

    ipiv_address0_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state10, sext_ln116_fu_636_p1, sext_ln142_fu_767_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            ipiv_address0 <= sext_ln142_fu_767_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            ipiv_address0 <= sext_ln116_fu_636_p1(10 - 1 downto 0);
        else 
            ipiv_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    ipiv_ce0_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state10)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            ipiv_ce0 <= ap_const_logic_1;
        else 
            ipiv_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    mul_ln120_fu_664_p0 <= lda;
    mul_ln120_fu_664_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln120_fu_664_p0) * signed(k_load_1_reg_334))), 32));
    mul_ln146_fu_783_p0 <= lda;
    mul_ln146_fu_783_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln146_fu_783_p0) * signed(k_load_3_reg_354))), 32));
    mul_ln99_fu_447_p0 <= incx;
    mul_ln99_fu_447_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln99_fu_447_p0) * signed(sub_ln99_fu_441_p2))), 32));
    or_ln137_fu_580_p2 <= (i_1_reg_890 or ap_const_lv32_1);
    select_ln107_fu_517_p3 <= 
        sub_ln107_1_fu_501_p2 when (tmp_1_fu_477_p3(0) = '1') else 
        trunc_ln107_2_fu_507_p4;
    select_ln114_fu_619_p3 <= 
        xor_ln114_fu_602_p2 when (icmp_ln114_reg_906(0) = '1') else 
        xor_ln114_1_fu_613_p2;
    select_ln141_fu_750_p3 <= 
        xor_ln141_fu_732_p2 when (icmp_ln141_reg_946(0) = '1') else 
        xor_ln141_1_fu_744_p2;
        sext_ln116_fu_636_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln116_fu_630_p2),64));

        sext_ln121_fu_704_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln121_fu_700_p2),64));

        sext_ln124_fu_714_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln124_fu_710_p2),64));

        sext_ln136_fu_572_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(i_3_1_reg_235),32));

        sext_ln142_fu_767_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln142_fu_761_p2),64));

        sext_ln147_fu_823_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln147_fu_819_p2),64));

        sext_ln150_fu_833_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln150_fu_829_p2),64));

    sub_ln107_1_fu_501_p2 <= std_logic_vector(unsigned(ap_const_lv27_0) - unsigned(trunc_ln107_1_fu_491_p4));
    sub_ln107_fu_485_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(n));
    sub_ln121_fu_700_p2 <= std_logic_vector(unsigned(trunc_ln121_reg_981) - unsigned(add_ln93_reg_845));
    sub_ln124_fu_710_p2 <= std_logic_vector(unsigned(trunc_ln124_reg_986) - unsigned(add_ln93_reg_845));
    sub_ln147_fu_819_p2 <= std_logic_vector(unsigned(trunc_ln147_reg_1036) - unsigned(add_ln93_reg_845));
    sub_ln150_fu_829_p2 <= std_logic_vector(unsigned(trunc_ln150_reg_1041) - unsigned(add_ln93_reg_845));
    sub_ln99_fu_441_p2 <= std_logic_vector(unsigned(ap_const_lv32_1) - unsigned(k2));
    tmp_1_fu_477_p3 <= n(31 downto 31);
    tmp_fu_433_p1 <= incx;
    tmp_fu_433_p3 <= tmp_fu_433_p1(31 downto 31);
    trunc_ln107_1_fu_491_p4 <= sub_ln107_fu_485_p2(31 downto 5);
    trunc_ln107_2_fu_507_p4 <= n(31 downto 5);
    trunc_ln116_fu_626_p1 <= ix(11 - 1 downto 0);
    trunc_ln121_fu_675_p1 <= i_5_fu_669_p2(11 - 1 downto 0);
    trunc_ln124_fu_685_p1 <= i_6_fu_679_p2(11 - 1 downto 0);
    trunc_ln142_fu_757_p1 <= ix(11 - 1 downto 0);
    trunc_ln147_fu_794_p1 <= i_4_1_fu_788_p2(11 - 1 downto 0);
    trunc_ln150_fu_804_p1 <= i_5_3_fu_798_p2(11 - 1 downto 0);
    trunc_ln88_fu_417_p0 <= lda;
    trunc_ln88_fu_417_p1 <= trunc_ln88_fu_417_p0(11 - 1 downto 0);
    xor_ln114_1_fu_613_p2 <= (icmp_ln114_2_fu_608_p2 xor ap_const_lv1_1);
    xor_ln114_fu_602_p2 <= (icmp_ln114_1_fu_597_p2 xor ap_const_lv1_1);
    xor_ln141_1_fu_744_p2 <= (icmp_ln141_2_fu_738_p2 xor ap_const_lv1_1);
    xor_ln141_fu_732_p2 <= (icmp_ln141_1_fu_726_p2 xor ap_const_lv1_1);
end behav;
