

================================================================
== Vivado HLS Report for 'smallfelem_mul'
================================================================
* Date:           Tue May 26 02:53:23 2020

* Version:        2019.1 (Build 2552052 on Fri May 24 15:28:33 MDT 2019)
* Project:        proj_extr_.opensslcryptoececp_nistp256.c_smallfelem_mul_with_main.c
* Solution:       solution1
* Product family: kintex7
* Target device:  xc7k160t-fbg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|     8.748|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |    6|    6|    6|    6|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 7
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 2.66>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%small2_addr = getelementptr [1000 x i32]* %small2, i64 0, i64 0" [extr_.opensslcryptoececp_nistp256.c_smallfelem_mul_with_main.c:21]   --->   Operation 8 'getelementptr' 'small2_addr' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%small1_addr = getelementptr [1000 x i32]* %small1, i64 0, i64 0" [extr_.opensslcryptoececp_nistp256.c_smallfelem_mul_with_main.c:20]   --->   Operation 9 'getelementptr' 'small1_addr' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [2/2] (2.66ns)   --->   "%small1_load = load i32* %small1_addr, align 4" [extr_.opensslcryptoececp_nistp256.c_smallfelem_mul_with_main.c:26]   --->   Operation 10 'load' 'small1_load' <Predicate = true> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 1000> <RAM>
ST_1 : Operation 11 [2/2] (2.66ns)   --->   "%small2_load = load i32* %small2_addr, align 4" [extr_.opensslcryptoececp_nistp256.c_smallfelem_mul_with_main.c:26]   --->   Operation 11 'load' 'small2_load' <Predicate = true> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 1000> <RAM>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%small2_addr_1 = getelementptr [1000 x i32]* %small2, i64 0, i64 1" [extr_.opensslcryptoececp_nistp256.c_smallfelem_mul_with_main.c:32]   --->   Operation 12 'getelementptr' 'small2_addr_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [2/2] (2.66ns)   --->   "%small2_load_1 = load i32* %small2_addr_1, align 4" [extr_.opensslcryptoececp_nistp256.c_smallfelem_mul_with_main.c:32]   --->   Operation 13 'load' 'small2_load_1' <Predicate = true> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 1000> <RAM>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%small1_addr_1 = getelementptr [1000 x i32]* %small1, i64 0, i64 1" [extr_.opensslcryptoececp_nistp256.c_smallfelem_mul_with_main.c:38]   --->   Operation 14 'getelementptr' 'small1_addr_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [2/2] (2.66ns)   --->   "%small1_load_1 = load i32* %small1_addr_1, align 4" [extr_.opensslcryptoececp_nistp256.c_smallfelem_mul_with_main.c:38]   --->   Operation 15 'load' 'small1_load_1' <Predicate = true> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 1000> <RAM>

State 2 <SV = 1> <Delay = 2.66>
ST_2 : Operation 16 [1/2] (2.66ns)   --->   "%small1_load = load i32* %small1_addr, align 4" [extr_.opensslcryptoececp_nistp256.c_smallfelem_mul_with_main.c:26]   --->   Operation 16 'load' 'small1_load' <Predicate = true> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 1000> <RAM>
ST_2 : Operation 17 [1/2] (2.66ns)   --->   "%small2_load = load i32* %small2_addr, align 4" [extr_.opensslcryptoececp_nistp256.c_smallfelem_mul_with_main.c:26]   --->   Operation 17 'load' 'small2_load' <Predicate = true> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 1000> <RAM>
ST_2 : Operation 18 [1/2] (2.66ns)   --->   "%small2_load_1 = load i32* %small2_addr_1, align 4" [extr_.opensslcryptoececp_nistp256.c_smallfelem_mul_with_main.c:32]   --->   Operation 18 'load' 'small2_load_1' <Predicate = true> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 1000> <RAM>
ST_2 : Operation 19 [1/2] (2.66ns)   --->   "%small1_load_1 = load i32* %small1_addr_1, align 4" [extr_.opensslcryptoececp_nistp256.c_smallfelem_mul_with_main.c:38]   --->   Operation 19 'load' 'small1_load_1' <Predicate = true> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 1000> <RAM>
ST_2 : Operation 20 [1/1] (0.00ns)   --->   "%small2_addr_2 = getelementptr [1000 x i32]* %small2, i64 0, i64 2" [extr_.opensslcryptoececp_nistp256.c_smallfelem_mul_with_main.c:44]   --->   Operation 20 'getelementptr' 'small2_addr_2' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 21 [2/2] (2.66ns)   --->   "%small2_load_2 = load i32* %small2_addr_2, align 4" [extr_.opensslcryptoececp_nistp256.c_smallfelem_mul_with_main.c:44]   --->   Operation 21 'load' 'small2_load_2' <Predicate = true> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 1000> <RAM>
ST_2 : Operation 22 [1/1] (0.00ns)   --->   "%small1_addr_2 = getelementptr [1000 x i32]* %small1, i64 0, i64 2" [extr_.opensslcryptoececp_nistp256.c_smallfelem_mul_with_main.c:56]   --->   Operation 22 'getelementptr' 'small1_addr_2' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 23 [2/2] (2.66ns)   --->   "%small1_load_2 = load i32* %small1_addr_2, align 4" [extr_.opensslcryptoececp_nistp256.c_smallfelem_mul_with_main.c:56]   --->   Operation 23 'load' 'small1_load_2' <Predicate = true> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 1000> <RAM>
ST_2 : Operation 24 [1/1] (0.00ns)   --->   "%small2_addr_3 = getelementptr [1000 x i32]* %small2, i64 0, i64 3" [extr_.opensslcryptoececp_nistp256.c_smallfelem_mul_with_main.c:62]   --->   Operation 24 'getelementptr' 'small2_addr_3' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 25 [2/2] (2.66ns)   --->   "%small2_load_3 = load i32* %small2_addr_3, align 4" [extr_.opensslcryptoececp_nistp256.c_smallfelem_mul_with_main.c:62]   --->   Operation 25 'load' 'small2_load_3' <Predicate = true> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 1000> <RAM>
ST_2 : Operation 26 [1/1] (0.00ns)   --->   "%small1_addr_3 = getelementptr [1000 x i32]* %small1, i64 0, i64 3" [extr_.opensslcryptoececp_nistp256.c_smallfelem_mul_with_main.c:80]   --->   Operation 26 'getelementptr' 'small1_addr_3' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 27 [2/2] (2.66ns)   --->   "%small1_load_3 = load i32* %small1_addr_3, align 4" [extr_.opensslcryptoececp_nistp256.c_smallfelem_mul_with_main.c:80]   --->   Operation 27 'load' 'small1_load_3' <Predicate = true> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 1000> <RAM>

State 3 <SV = 2> <Delay = 7.58>
ST_3 : Operation 28 [1/1] (6.58ns)   --->   "%a = mul nsw i32 %small1_load, %small2_load" [extr_.opensslcryptoececp_nistp256.c_smallfelem_mul_with_main.c:26]   --->   Operation 28 'mul' 'a' <Predicate = true> <Delay = 6.58> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 6.58> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 29 [1/1] (0.00ns)   --->   "%tmp = call i1 @_ssdm_op_BitSelect.i1.i32.i32(i32 %a, i32 31)" [extr_.opensslcryptoececp_nistp256.c_smallfelem_mul_with_main.c:28]   --->   Operation 29 'bitselect' 'tmp' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 30 [1/1] (6.58ns)   --->   "%a_1 = mul nsw i32 %small1_load, %small2_load_1" [extr_.opensslcryptoececp_nistp256.c_smallfelem_mul_with_main.c:32]   --->   Operation 30 'mul' 'a_1' <Predicate = true> <Delay = 6.58> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 6.58> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 31 [1/1] (0.00ns) (grouped into LUT with out node add_ln59_2)   --->   "%tmp_1 = call i1 @_ssdm_op_BitSelect.i1.i32.i32(i32 %a_1, i32 31)" [extr_.opensslcryptoececp_nistp256.c_smallfelem_mul_with_main.c:34]   --->   Operation 31 'bitselect' 'tmp_1' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 32 [1/1] (0.00ns) (grouped into LUT with out node add_ln59_2)   --->   "%select_ln34 = select i1 %tmp_1, i2 -1, i2 0" [extr_.opensslcryptoececp_nistp256.c_smallfelem_mul_with_main.c:34]   --->   Operation 32 'select' 'select_ln34' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.62> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 33 [1/1] (6.58ns)   --->   "%a_2 = mul nsw i32 %small1_load_1, %small2_load" [extr_.opensslcryptoececp_nistp256.c_smallfelem_mul_with_main.c:38]   --->   Operation 33 'mul' 'a_2' <Predicate = true> <Delay = 6.58> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 6.58> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 34 [1/1] (0.00ns) (grouped into LUT with out node add_ln59_2)   --->   "%tmp_2 = call i1 @_ssdm_op_BitSelect.i1.i32.i32(i32 %a_2, i32 31)" [extr_.opensslcryptoececp_nistp256.c_smallfelem_mul_with_main.c:40]   --->   Operation 34 'bitselect' 'tmp_2' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 35 [1/1] (0.00ns) (grouped into LUT with out node add_ln59_2)   --->   "%select_ln40 = select i1 %tmp_2, i2 -1, i2 0" [extr_.opensslcryptoececp_nistp256.c_smallfelem_mul_with_main.c:40]   --->   Operation 35 'select' 'select_ln40' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.62> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 36 [1/2] (2.66ns)   --->   "%small2_load_2 = load i32* %small2_addr_2, align 4" [extr_.opensslcryptoececp_nistp256.c_smallfelem_mul_with_main.c:44]   --->   Operation 36 'load' 'small2_load_2' <Predicate = true> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 1000> <RAM>
ST_3 : Operation 37 [1/2] (2.66ns)   --->   "%small1_load_2 = load i32* %small1_addr_2, align 4" [extr_.opensslcryptoececp_nistp256.c_smallfelem_mul_with_main.c:56]   --->   Operation 37 'load' 'small1_load_2' <Predicate = true> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 1000> <RAM>
ST_3 : Operation 38 [1/1] (1.00ns) (out node of the LUT)   --->   "%add_ln59_2 = add i2 %select_ln34, %select_ln40" [extr_.opensslcryptoececp_nistp256.c_smallfelem_mul_with_main.c:59]   --->   Operation 38 'add' 'add_ln59_2' <Predicate = true> <Delay = 1.00> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 39 [1/2] (2.66ns)   --->   "%small2_load_3 = load i32* %small2_addr_3, align 4" [extr_.opensslcryptoececp_nistp256.c_smallfelem_mul_with_main.c:62]   --->   Operation 39 'load' 'small2_load_3' <Predicate = true> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 1000> <RAM>
ST_3 : Operation 40 [1/2] (2.66ns)   --->   "%small1_load_3 = load i32* %small1_addr_3, align 4" [extr_.opensslcryptoececp_nistp256.c_smallfelem_mul_with_main.c:80]   --->   Operation 40 'load' 'small1_load_3' <Predicate = true> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 1000> <RAM>

State 4 <SV = 3> <Delay = 8.74>
ST_4 : Operation 41 [1/1] (0.00ns)   --->   "%out_addr = getelementptr [1000 x i32]* %out_r, i64 0, i64 0" [extr_.opensslcryptoececp_nistp256.c_smallfelem_mul_with_main.c:20]   --->   Operation 41 'getelementptr' 'out_addr' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 42 [1/1] (0.62ns)   --->   "%high = select i1 %tmp, i32 -1, i32 0" [extr_.opensslcryptoececp_nistp256.c_smallfelem_mul_with_main.c:28]   --->   Operation 42 'select' 'high' <Predicate = true> <Delay = 0.62> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.62> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 43 [1/1] (2.66ns)   --->   "store i32 %a, i32* %out_addr, align 4" [extr_.opensslcryptoececp_nistp256.c_smallfelem_mul_with_main.c:29]   --->   Operation 43 'store' <Predicate = true> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 1000> <RAM>
ST_4 : Operation 44 [1/1] (0.00ns)   --->   "%out_addr_1 = getelementptr [1000 x i32]* %out_r, i64 0, i64 1" [extr_.opensslcryptoececp_nistp256.c_smallfelem_mul_with_main.c:30]   --->   Operation 44 'getelementptr' 'out_addr_1' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 45 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln41_1 = add i32 %a_1, %high" [extr_.opensslcryptoececp_nistp256.c_smallfelem_mul_with_main.c:41]   --->   Operation 45 'add' 'add_ln41_1' <Predicate = true> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.38> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 46 [1/1] (2.77ns) (root node of TernaryAdder)   --->   "%add_ln41 = add nsw i32 %add_ln41_1, %a_2" [extr_.opensslcryptoececp_nistp256.c_smallfelem_mul_with_main.c:41]   --->   Operation 46 'add' 'add_ln41' <Predicate = true> <Delay = 2.77> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.38> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 47 [1/1] (2.66ns)   --->   "store i32 %add_ln41, i32* %out_addr_1, align 4" [extr_.opensslcryptoececp_nistp256.c_smallfelem_mul_with_main.c:41]   --->   Operation 47 'store' <Predicate = true> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 1000> <RAM>
ST_4 : Operation 48 [1/1] (6.58ns)   --->   "%a_3 = mul nsw i32 %small1_load, %small2_load_2" [extr_.opensslcryptoececp_nistp256.c_smallfelem_mul_with_main.c:44]   --->   Operation 48 'mul' 'a_3' <Predicate = true> <Delay = 6.58> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 6.58> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 49 [1/1] (0.00ns)   --->   "%tmp_3 = call i1 @_ssdm_op_BitSelect.i1.i32.i32(i32 %a_3, i32 31)" [extr_.opensslcryptoececp_nistp256.c_smallfelem_mul_with_main.c:46]   --->   Operation 49 'bitselect' 'tmp_3' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 50 [1/1] (0.62ns)   --->   "%high_1 = select i1 %tmp_3, i32 -1, i32 0" [extr_.opensslcryptoececp_nistp256.c_smallfelem_mul_with_main.c:46]   --->   Operation 50 'select' 'high_1' <Predicate = true> <Delay = 0.62> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.62> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 51 [1/1] (6.58ns)   --->   "%a_4 = mul nsw i32 %small1_load_1, %small2_load_1" [extr_.opensslcryptoececp_nistp256.c_smallfelem_mul_with_main.c:50]   --->   Operation 51 'mul' 'a_4' <Predicate = true> <Delay = 6.58> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 6.58> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 52 [1/1] (0.00ns) (grouped into LUT with out node add_ln83_4)   --->   "%tmp_4 = call i1 @_ssdm_op_BitSelect.i1.i32.i32(i32 %a_4, i32 31)" [extr_.opensslcryptoececp_nistp256.c_smallfelem_mul_with_main.c:52]   --->   Operation 52 'bitselect' 'tmp_4' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 53 [1/1] (0.00ns) (grouped into LUT with out node add_ln83_4)   --->   "%select_ln52 = select i1 %tmp_4, i2 -1, i2 0" [extr_.opensslcryptoececp_nistp256.c_smallfelem_mul_with_main.c:52]   --->   Operation 53 'select' 'select_ln52' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.62> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 54 [1/1] (6.58ns)   --->   "%a_5 = mul nsw i32 %small1_load_2, %small2_load" [extr_.opensslcryptoececp_nistp256.c_smallfelem_mul_with_main.c:56]   --->   Operation 54 'mul' 'a_5' <Predicate = true> <Delay = 6.58> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 6.58> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 55 [1/1] (0.00ns) (grouped into LUT with out node add_ln83_4)   --->   "%tmp_5 = call i1 @_ssdm_op_BitSelect.i1.i32.i32(i32 %a_5, i32 31)" [extr_.opensslcryptoececp_nistp256.c_smallfelem_mul_with_main.c:58]   --->   Operation 55 'bitselect' 'tmp_5' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 56 [1/1] (0.00ns) (grouped into LUT with out node add_ln83_4)   --->   "%select_ln58 = select i1 %tmp_5, i2 -1, i2 0" [extr_.opensslcryptoececp_nistp256.c_smallfelem_mul_with_main.c:58]   --->   Operation 56 'select' 'select_ln58' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.62> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 57 [1/1] (0.00ns)   --->   "%sext_ln59 = sext i2 %add_ln59_2 to i32" [extr_.opensslcryptoececp_nistp256.c_smallfelem_mul_with_main.c:59]   --->   Operation 57 'sext' 'sext_ln59' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 58 [1/1] (1.78ns)   --->   "%add_ln59_3 = add i32 %sext_ln59, %a_5" [extr_.opensslcryptoececp_nistp256.c_smallfelem_mul_with_main.c:59]   --->   Operation 58 'add' 'add_ln59_3' <Predicate = true> <Delay = 1.78> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 59 [1/1] (6.58ns)   --->   "%a_6 = mul nsw i32 %small1_load, %small2_load_3" [extr_.opensslcryptoececp_nistp256.c_smallfelem_mul_with_main.c:62]   --->   Operation 59 'mul' 'a_6' <Predicate = true> <Delay = 6.58> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 6.58> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 60 [1/1] (0.00ns) (grouped into LUT with out node add_ln101_3)   --->   "%tmp_6 = call i1 @_ssdm_op_BitSelect.i1.i32.i32(i32 %a_6, i32 31)" [extr_.opensslcryptoececp_nistp256.c_smallfelem_mul_with_main.c:64]   --->   Operation 60 'bitselect' 'tmp_6' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 61 [1/1] (0.00ns) (grouped into LUT with out node add_ln101_3)   --->   "%select_ln64 = select i1 %tmp_6, i2 -1, i2 0" [extr_.opensslcryptoececp_nistp256.c_smallfelem_mul_with_main.c:64]   --->   Operation 61 'select' 'select_ln64' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.62> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 62 [1/1] (6.58ns)   --->   "%a_7 = mul nsw i32 %small1_load_1, %small2_load_2" [extr_.opensslcryptoececp_nistp256.c_smallfelem_mul_with_main.c:68]   --->   Operation 62 'mul' 'a_7' <Predicate = true> <Delay = 6.58> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 6.58> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 63 [1/1] (0.00ns) (grouped into LUT with out node add_ln101_3)   --->   "%tmp_7 = call i1 @_ssdm_op_BitSelect.i1.i32.i32(i32 %a_7, i32 31)" [extr_.opensslcryptoececp_nistp256.c_smallfelem_mul_with_main.c:70]   --->   Operation 63 'bitselect' 'tmp_7' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 64 [1/1] (0.00ns) (grouped into LUT with out node add_ln101_3)   --->   "%select_ln70 = select i1 %tmp_7, i2 -1, i2 0" [extr_.opensslcryptoececp_nistp256.c_smallfelem_mul_with_main.c:70]   --->   Operation 64 'select' 'select_ln70' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.62> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 65 [1/1] (6.58ns)   --->   "%a_8 = mul nsw i32 %small1_load_2, %small2_load_1" [extr_.opensslcryptoececp_nistp256.c_smallfelem_mul_with_main.c:74]   --->   Operation 65 'mul' 'a_8' <Predicate = true> <Delay = 6.58> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 6.58> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 66 [1/1] (0.00ns) (grouped into LUT with out node add_ln101_4)   --->   "%tmp_8 = call i1 @_ssdm_op_BitSelect.i1.i32.i32(i32 %a_8, i32 31)" [extr_.opensslcryptoececp_nistp256.c_smallfelem_mul_with_main.c:76]   --->   Operation 66 'bitselect' 'tmp_8' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 67 [1/1] (0.00ns) (grouped into LUT with out node add_ln101_4)   --->   "%select_ln76 = select i1 %tmp_8, i2 -1, i2 0" [extr_.opensslcryptoececp_nistp256.c_smallfelem_mul_with_main.c:76]   --->   Operation 67 'select' 'select_ln76' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.62> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 68 [1/1] (6.58ns)   --->   "%a_9 = mul nsw i32 %small1_load_3, %small2_load" [extr_.opensslcryptoececp_nistp256.c_smallfelem_mul_with_main.c:80]   --->   Operation 68 'mul' 'a_9' <Predicate = true> <Delay = 6.58> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 6.58> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 69 [1/1] (0.00ns) (grouped into LUT with out node add_ln101_4)   --->   "%tmp_9 = call i1 @_ssdm_op_BitSelect.i1.i32.i32(i32 %a_9, i32 31)" [extr_.opensslcryptoececp_nistp256.c_smallfelem_mul_with_main.c:82]   --->   Operation 69 'bitselect' 'tmp_9' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 70 [1/1] (0.00ns) (grouped into LUT with out node add_ln101_4)   --->   "%select_ln82 = select i1 %tmp_9, i2 -1, i2 0" [extr_.opensslcryptoececp_nistp256.c_smallfelem_mul_with_main.c:82]   --->   Operation 70 'select' 'select_ln82' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.62> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 71 [1/1] (1.78ns)   --->   "%add_ln83_1 = add i32 %a_7, %a_8" [extr_.opensslcryptoececp_nistp256.c_smallfelem_mul_with_main.c:83]   --->   Operation 71 'add' 'add_ln83_1' <Predicate = true> <Delay = 1.78> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 72 [1/1] (1.00ns) (out node of the LUT)   --->   "%add_ln83_4 = add i2 %select_ln52, %select_ln58" [extr_.opensslcryptoececp_nistp256.c_smallfelem_mul_with_main.c:83]   --->   Operation 72 'add' 'add_ln83_4' <Predicate = true> <Delay = 1.00> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 73 [1/1] (6.58ns)   --->   "%a_10 = mul nsw i32 %small1_load_1, %small2_load_3" [extr_.opensslcryptoececp_nistp256.c_smallfelem_mul_with_main.c:86]   --->   Operation 73 'mul' 'a_10' <Predicate = true> <Delay = 6.58> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 6.58> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 74 [1/1] (0.00ns) (grouped into LUT with out node add_ln113_3)   --->   "%tmp_10 = call i1 @_ssdm_op_BitSelect.i1.i32.i32(i32 %a_10, i32 31)" [extr_.opensslcryptoececp_nistp256.c_smallfelem_mul_with_main.c:88]   --->   Operation 74 'bitselect' 'tmp_10' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 75 [1/1] (0.00ns) (grouped into LUT with out node add_ln113_3)   --->   "%select_ln88 = select i1 %tmp_10, i3 -1, i3 0" [extr_.opensslcryptoececp_nistp256.c_smallfelem_mul_with_main.c:88]   --->   Operation 75 'select' 'select_ln88' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.62> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 76 [1/1] (6.58ns)   --->   "%a_11 = mul nsw i32 %small1_load_2, %small2_load_2" [extr_.opensslcryptoececp_nistp256.c_smallfelem_mul_with_main.c:92]   --->   Operation 76 'mul' 'a_11' <Predicate = true> <Delay = 6.58> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 6.58> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 77 [1/1] (0.00ns) (grouped into LUT with out node add_ln113_2)   --->   "%tmp_11 = call i1 @_ssdm_op_BitSelect.i1.i32.i32(i32 %a_11, i32 31)" [extr_.opensslcryptoececp_nistp256.c_smallfelem_mul_with_main.c:94]   --->   Operation 77 'bitselect' 'tmp_11' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 78 [1/1] (0.00ns) (grouped into LUT with out node add_ln113_2)   --->   "%select_ln94 = select i1 %tmp_11, i2 -1, i2 0" [extr_.opensslcryptoececp_nistp256.c_smallfelem_mul_with_main.c:94]   --->   Operation 78 'select' 'select_ln94' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.62> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 79 [1/1] (6.58ns)   --->   "%a_12 = mul nsw i32 %small1_load_3, %small2_load_1" [extr_.opensslcryptoececp_nistp256.c_smallfelem_mul_with_main.c:98]   --->   Operation 79 'mul' 'a_12' <Predicate = true> <Delay = 6.58> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 6.58> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 80 [1/1] (0.00ns) (grouped into LUT with out node add_ln113_2)   --->   "%tmp_12 = call i1 @_ssdm_op_BitSelect.i1.i32.i32(i32 %a_12, i32 31)" [extr_.opensslcryptoececp_nistp256.c_smallfelem_mul_with_main.c:100]   --->   Operation 80 'bitselect' 'tmp_12' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 81 [1/1] (0.00ns) (grouped into LUT with out node add_ln113_2)   --->   "%select_ln100 = select i1 %tmp_12, i2 -1, i2 0" [extr_.opensslcryptoececp_nistp256.c_smallfelem_mul_with_main.c:100]   --->   Operation 81 'select' 'select_ln100' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.62> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 82 [1/1] (1.78ns)   --->   "%add_ln101_1 = add i32 %a_11, %a_12" [extr_.opensslcryptoececp_nistp256.c_smallfelem_mul_with_main.c:101]   --->   Operation 82 'add' 'add_ln101_1' <Predicate = true> <Delay = 1.78> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 83 [1/1] (1.00ns) (out node of the LUT)   --->   "%add_ln101_3 = add i2 %select_ln64, %select_ln70" [extr_.opensslcryptoececp_nistp256.c_smallfelem_mul_with_main.c:101]   --->   Operation 83 'add' 'add_ln101_3' <Predicate = true> <Delay = 1.00> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 84 [1/1] (0.00ns)   --->   "%sext_ln101 = sext i2 %add_ln101_3 to i3" [extr_.opensslcryptoececp_nistp256.c_smallfelem_mul_with_main.c:101]   --->   Operation 84 'sext' 'sext_ln101' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 85 [1/1] (1.00ns) (out node of the LUT)   --->   "%add_ln101_4 = add i2 %select_ln76, %select_ln82" [extr_.opensslcryptoececp_nistp256.c_smallfelem_mul_with_main.c:101]   --->   Operation 85 'add' 'add_ln101_4' <Predicate = true> <Delay = 1.00> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 86 [1/1] (0.00ns)   --->   "%sext_ln101_1 = sext i2 %add_ln101_4 to i3" [extr_.opensslcryptoececp_nistp256.c_smallfelem_mul_with_main.c:101]   --->   Operation 86 'sext' 'sext_ln101_1' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 87 [1/1] (1.00ns)   --->   "%add_ln101_5 = add i3 %sext_ln101_1, %sext_ln101" [extr_.opensslcryptoececp_nistp256.c_smallfelem_mul_with_main.c:101]   --->   Operation 87 'add' 'add_ln101_5' <Predicate = true> <Delay = 1.00> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 88 [1/1] (6.58ns)   --->   "%a_13 = mul nsw i32 %small1_load_2, %small2_load_3" [extr_.opensslcryptoececp_nistp256.c_smallfelem_mul_with_main.c:104]   --->   Operation 88 'mul' 'a_13' <Predicate = true> <Delay = 6.58> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 6.58> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 89 [1/1] (0.00ns) (grouped into LUT with out node add_ln119_1)   --->   "%tmp_13 = call i1 @_ssdm_op_BitSelect.i1.i32.i32(i32 %a_13, i32 31)" [extr_.opensslcryptoececp_nistp256.c_smallfelem_mul_with_main.c:106]   --->   Operation 89 'bitselect' 'tmp_13' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 90 [1/1] (0.00ns) (grouped into LUT with out node add_ln119_1)   --->   "%select_ln106 = select i1 %tmp_13, i2 -1, i2 0" [extr_.opensslcryptoececp_nistp256.c_smallfelem_mul_with_main.c:106]   --->   Operation 90 'select' 'select_ln106' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.62> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 91 [1/1] (6.58ns)   --->   "%a_14 = mul nsw i32 %small1_load_3, %small2_load_2" [extr_.opensslcryptoececp_nistp256.c_smallfelem_mul_with_main.c:110]   --->   Operation 91 'mul' 'a_14' <Predicate = true> <Delay = 6.58> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 6.58> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 92 [1/1] (0.00ns) (grouped into LUT with out node add_ln119_1)   --->   "%tmp_14 = call i1 @_ssdm_op_BitSelect.i1.i32.i32(i32 %a_14, i32 31)" [extr_.opensslcryptoececp_nistp256.c_smallfelem_mul_with_main.c:112]   --->   Operation 92 'bitselect' 'tmp_14' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 93 [1/1] (0.00ns) (grouped into LUT with out node add_ln119_1)   --->   "%select_ln112 = select i1 %tmp_14, i2 -1, i2 0" [extr_.opensslcryptoececp_nistp256.c_smallfelem_mul_with_main.c:112]   --->   Operation 93 'select' 'select_ln112' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.62> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 94 [1/1] (1.00ns) (out node of the LUT)   --->   "%add_ln113_2 = add i2 %select_ln94, %select_ln100" [extr_.opensslcryptoececp_nistp256.c_smallfelem_mul_with_main.c:113]   --->   Operation 94 'add' 'add_ln113_2' <Predicate = true> <Delay = 1.00> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 95 [1/1] (0.00ns) (grouped into LUT with out node add_ln113_3)   --->   "%sext_ln113 = sext i2 %add_ln113_2 to i3" [extr_.opensslcryptoececp_nistp256.c_smallfelem_mul_with_main.c:113]   --->   Operation 95 'sext' 'sext_ln113' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 96 [1/1] (1.16ns) (out node of the LUT)   --->   "%add_ln113_3 = add i3 %sext_ln113, %select_ln88" [extr_.opensslcryptoececp_nistp256.c_smallfelem_mul_with_main.c:113]   --->   Operation 96 'add' 'add_ln113_3' <Predicate = true> <Delay = 1.16> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 97 [1/1] (6.58ns)   --->   "%a_15 = mul nsw i32 %small1_load_3, %small2_load_3" [extr_.opensslcryptoececp_nistp256.c_smallfelem_mul_with_main.c:116]   --->   Operation 97 'mul' 'a_15' <Predicate = true> <Delay = 6.58> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 6.58> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 98 [1/1] (0.00ns)   --->   "%tmp_15 = call i1 @_ssdm_op_BitSelect.i1.i32.i32(i32 %a_15, i32 31)" [extr_.opensslcryptoececp_nistp256.c_smallfelem_mul_with_main.c:118]   --->   Operation 98 'bitselect' 'tmp_15' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 99 [1/1] (1.00ns) (out node of the LUT)   --->   "%add_ln119_1 = add i2 %select_ln106, %select_ln112" [extr_.opensslcryptoececp_nistp256.c_smallfelem_mul_with_main.c:119]   --->   Operation 99 'add' 'add_ln119_1' <Predicate = true> <Delay = 1.00> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 5 <SV = 4> <Delay = 8.21>
ST_5 : Operation 100 [1/1] (0.00ns)   --->   "%out_addr_2 = getelementptr [1000 x i32]* %out_r, i64 0, i64 2" [extr_.opensslcryptoececp_nistp256.c_smallfelem_mul_with_main.c:36]   --->   Operation 100 'getelementptr' 'out_addr_2' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 101 [1/1] (0.00ns)   --->   "%out_addr_3 = getelementptr [1000 x i32]* %out_r, i64 0, i64 3" [extr_.opensslcryptoececp_nistp256.c_smallfelem_mul_with_main.c:48]   --->   Operation 101 'getelementptr' 'out_addr_3' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 102 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln59_1 = add i32 %a_3, %a_4" [extr_.opensslcryptoececp_nistp256.c_smallfelem_mul_with_main.c:59]   --->   Operation 102 'add' 'add_ln59_1' <Predicate = true> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.38> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_5 : Operation 103 [1/1] (2.77ns) (root node of TernaryAdder)   --->   "%add_ln59 = add nsw i32 %add_ln59_3, %add_ln59_1" [extr_.opensslcryptoececp_nistp256.c_smallfelem_mul_with_main.c:59]   --->   Operation 103 'add' 'add_ln59' <Predicate = true> <Delay = 2.77> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.38> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_5 : Operation 104 [1/1] (2.66ns)   --->   "store i32 %add_ln59, i32* %out_addr_2, align 4" [extr_.opensslcryptoececp_nistp256.c_smallfelem_mul_with_main.c:59]   --->   Operation 104 'store' <Predicate = true> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 1000> <RAM>
ST_5 : Operation 105 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln83_2 = add i32 %add_ln83_1, %a_6" [extr_.opensslcryptoececp_nistp256.c_smallfelem_mul_with_main.c:83]   --->   Operation 105 'add' 'add_ln83_2' <Predicate = true> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.38> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_5 : Operation 106 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln83_3 = add i32 %a_9, %high_1" [extr_.opensslcryptoececp_nistp256.c_smallfelem_mul_with_main.c:83]   --->   Operation 106 'add' 'add_ln83_3' <Predicate = true> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.38> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_5 : Operation 107 [1/1] (0.00ns)   --->   "%sext_ln83 = sext i2 %add_ln83_4 to i32" [extr_.opensslcryptoececp_nistp256.c_smallfelem_mul_with_main.c:83]   --->   Operation 107 'sext' 'sext_ln83' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 108 [1/1] (2.77ns) (root node of TernaryAdder)   --->   "%add_ln83_5 = add i32 %sext_ln83, %add_ln83_3" [extr_.opensslcryptoececp_nistp256.c_smallfelem_mul_with_main.c:83]   --->   Operation 108 'add' 'add_ln83_5' <Predicate = true> <Delay = 2.77> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.38> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_5 : Operation 109 [1/1] (2.77ns) (root node of TernaryAdder)   --->   "%add_ln83 = add nsw i32 %add_ln83_5, %add_ln83_2" [extr_.opensslcryptoececp_nistp256.c_smallfelem_mul_with_main.c:83]   --->   Operation 109 'add' 'add_ln83' <Predicate = true> <Delay = 2.77> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.38> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_5 : Operation 110 [1/1] (2.66ns)   --->   "store i32 %add_ln83, i32* %out_addr_3, align 4" [extr_.opensslcryptoececp_nistp256.c_smallfelem_mul_with_main.c:83]   --->   Operation 110 'store' <Predicate = true> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 1000> <RAM>
ST_5 : Operation 111 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln101_2 = add i32 %add_ln101_1, %a_10" [extr_.opensslcryptoececp_nistp256.c_smallfelem_mul_with_main.c:101]   --->   Operation 111 'add' 'add_ln101_2' <Predicate = true> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.38> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_5 : Operation 112 [1/1] (0.00ns)   --->   "%sext_ln101_2 = sext i3 %add_ln101_5 to i32" [extr_.opensslcryptoececp_nistp256.c_smallfelem_mul_with_main.c:101]   --->   Operation 112 'sext' 'sext_ln101_2' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 113 [1/1] (2.77ns) (root node of TernaryAdder)   --->   "%add_ln101 = add nsw i32 %sext_ln101_2, %add_ln101_2" [extr_.opensslcryptoececp_nistp256.c_smallfelem_mul_with_main.c:101]   --->   Operation 113 'add' 'add_ln101' <Predicate = true> <Delay = 2.77> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.38> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_5 : Operation 114 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln113_1 = add i32 %a_13, %a_14" [extr_.opensslcryptoececp_nistp256.c_smallfelem_mul_with_main.c:113]   --->   Operation 114 'add' 'add_ln113_1' <Predicate = true> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.38> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_5 : Operation 115 [1/1] (0.00ns)   --->   "%sext_ln113_1 = sext i3 %add_ln113_3 to i32" [extr_.opensslcryptoececp_nistp256.c_smallfelem_mul_with_main.c:113]   --->   Operation 115 'sext' 'sext_ln113_1' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 116 [1/1] (2.77ns) (root node of TernaryAdder)   --->   "%add_ln113 = add nsw i32 %sext_ln113_1, %add_ln113_1" [extr_.opensslcryptoececp_nistp256.c_smallfelem_mul_with_main.c:113]   --->   Operation 116 'add' 'add_ln113' <Predicate = true> <Delay = 2.77> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.38> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_5 : Operation 117 [1/1] (0.00ns)   --->   "%sext_ln119 = sext i2 %add_ln119_1 to i32" [extr_.opensslcryptoececp_nistp256.c_smallfelem_mul_with_main.c:119]   --->   Operation 117 'sext' 'sext_ln119' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 118 [1/1] (1.78ns)   --->   "%add_ln119 = add nsw i32 %sext_ln119, %a_15" [extr_.opensslcryptoececp_nistp256.c_smallfelem_mul_with_main.c:119]   --->   Operation 118 'add' 'add_ln119' <Predicate = true> <Delay = 1.78> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 6 <SV = 5> <Delay = 2.66>
ST_6 : Operation 119 [1/1] (0.00ns)   --->   "%out_addr_4 = getelementptr [1000 x i32]* %out_r, i64 0, i64 4" [extr_.opensslcryptoececp_nistp256.c_smallfelem_mul_with_main.c:66]   --->   Operation 119 'getelementptr' 'out_addr_4' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 120 [1/1] (0.00ns)   --->   "%out_addr_5 = getelementptr [1000 x i32]* %out_r, i64 0, i64 5" [extr_.opensslcryptoececp_nistp256.c_smallfelem_mul_with_main.c:90]   --->   Operation 120 'getelementptr' 'out_addr_5' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 121 [1/1] (2.66ns)   --->   "store i32 %add_ln101, i32* %out_addr_4, align 4" [extr_.opensslcryptoececp_nistp256.c_smallfelem_mul_with_main.c:101]   --->   Operation 121 'store' <Predicate = true> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 1000> <RAM>
ST_6 : Operation 122 [1/1] (2.66ns)   --->   "store i32 %add_ln113, i32* %out_addr_5, align 4" [extr_.opensslcryptoececp_nistp256.c_smallfelem_mul_with_main.c:113]   --->   Operation 122 'store' <Predicate = true> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 1000> <RAM>

State 7 <SV = 6> <Delay = 3.28>
ST_7 : Operation 123 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([1000 x i32]* %out_r) nounwind, !map !13"   --->   Operation 123 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 124 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([1000 x i32]* %small1) nounwind, !map !19"   --->   Operation 124 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 125 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([1000 x i32]* %small2) nounwind, !map !23"   --->   Operation 125 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 126 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecTopModule([15 x i8]* @smallfelem_mul_str) nounwind"   --->   Operation 126 'spectopmodule' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 127 [1/1] (0.00ns)   --->   "%out_addr_6 = getelementptr [1000 x i32]* %out_r, i64 0, i64 6" [extr_.opensslcryptoececp_nistp256.c_smallfelem_mul_with_main.c:108]   --->   Operation 127 'getelementptr' 'out_addr_6' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 128 [1/1] (0.62ns)   --->   "%high_2 = select i1 %tmp_15, i32 -1, i32 0" [extr_.opensslcryptoececp_nistp256.c_smallfelem_mul_with_main.c:118]   --->   Operation 128 'select' 'high_2' <Predicate = true> <Delay = 0.62> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.62> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_7 : Operation 129 [1/1] (2.66ns)   --->   "store i32 %add_ln119, i32* %out_addr_6, align 4" [extr_.opensslcryptoececp_nistp256.c_smallfelem_mul_with_main.c:119]   --->   Operation 129 'store' <Predicate = true> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 1000> <RAM>
ST_7 : Operation 130 [1/1] (0.00ns)   --->   "%out_addr_7 = getelementptr [1000 x i32]* %out_r, i64 0, i64 7" [extr_.opensslcryptoececp_nistp256.c_smallfelem_mul_with_main.c:120]   --->   Operation 130 'getelementptr' 'out_addr_7' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 131 [1/1] (2.66ns)   --->   "store i32 %high_2, i32* %out_addr_7, align 4" [extr_.opensslcryptoececp_nistp256.c_smallfelem_mul_with_main.c:120]   --->   Operation 131 'store' <Predicate = true> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 1000> <RAM>
ST_7 : Operation 132 [1/1] (0.00ns)   --->   "ret void" [extr_.opensslcryptoececp_nistp256.c_smallfelem_mul_with_main.c:121]   --->   Operation 132 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 2.66ns
The critical path consists of the following:
	'getelementptr' operation ('small2_addr', extr_.opensslcryptoececp_nistp256.c_smallfelem_mul_with_main.c:21) [7]  (0 ns)
	'load' operation ('small2_load', extr_.opensslcryptoececp_nistp256.c_smallfelem_mul_with_main.c:26) on array 'small2' [12]  (2.66 ns)

 <State 2>: 2.66ns
The critical path consists of the following:
	'load' operation ('small1_load', extr_.opensslcryptoececp_nistp256.c_smallfelem_mul_with_main.c:26) on array 'small1' [11]  (2.66 ns)

 <State 3>: 7.58ns
The critical path consists of the following:
	'mul' operation ('a', extr_.opensslcryptoececp_nistp256.c_smallfelem_mul_with_main.c:32) [20]  (6.58 ns)
	'select' operation ('select_ln34', extr_.opensslcryptoececp_nistp256.c_smallfelem_mul_with_main.c:34) [22]  (0 ns)
	'add' operation ('add_ln59_2', extr_.opensslcryptoececp_nistp256.c_smallfelem_mul_with_main.c:59) [47]  (1 ns)

 <State 4>: 8.75ns
The critical path consists of the following:
	'mul' operation ('a', extr_.opensslcryptoececp_nistp256.c_smallfelem_mul_with_main.c:92) [81]  (6.58 ns)
	'select' operation ('select_ln94', extr_.opensslcryptoececp_nistp256.c_smallfelem_mul_with_main.c:94) [83]  (0 ns)
	'add' operation ('add_ln113_2', extr_.opensslcryptoececp_nistp256.c_smallfelem_mul_with_main.c:113) [105]  (1 ns)
	'add' operation ('add_ln113_3', extr_.opensslcryptoececp_nistp256.c_smallfelem_mul_with_main.c:113) [107]  (1.16 ns)

 <State 5>: 8.22ns
The critical path consists of the following:
	'add' operation ('add_ln83_3', extr_.opensslcryptoececp_nistp256.c_smallfelem_mul_with_main.c:83) [71]  (0 ns)
	'add' operation ('add_ln83_5', extr_.opensslcryptoececp_nistp256.c_smallfelem_mul_with_main.c:83) [74]  (2.78 ns)
	'add' operation ('add_ln83', extr_.opensslcryptoececp_nistp256.c_smallfelem_mul_with_main.c:83) [75]  (2.78 ns)
	'store' operation ('store_ln83', extr_.opensslcryptoececp_nistp256.c_smallfelem_mul_with_main.c:83) of variable 'add_ln83', extr_.opensslcryptoececp_nistp256.c_smallfelem_mul_with_main.c:83 on array 'out_r' [76]  (2.66 ns)

 <State 6>: 2.66ns
The critical path consists of the following:
	'getelementptr' operation ('out_addr_4', extr_.opensslcryptoececp_nistp256.c_smallfelem_mul_with_main.c:66) [57]  (0 ns)
	'store' operation ('store_ln101', extr_.opensslcryptoececp_nistp256.c_smallfelem_mul_with_main.c:101) of variable 'add_ln101', extr_.opensslcryptoececp_nistp256.c_smallfelem_mul_with_main.c:101 on array 'out_r' [96]  (2.66 ns)

 <State 7>: 3.28ns
The critical path consists of the following:
	'select' operation ('high', extr_.opensslcryptoececp_nistp256.c_smallfelem_mul_with_main.c:118) [113]  (0.62 ns)
	'store' operation ('store_ln120', extr_.opensslcryptoececp_nistp256.c_smallfelem_mul_with_main.c:120) of variable 'high', extr_.opensslcryptoececp_nistp256.c_smallfelem_mul_with_main.c:118 on array 'out_r' [119]  (2.66 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
