#include "hls_design_meta.h"
const Port_Property HLS_Design_Meta::port_props[]={
	Port_Property("ap_clk", 1, hls_in, -1, "", "", 1),
	Port_Property("ap_rst", 1, hls_in, -1, "", "", 1),
	Port_Property("ap_start", 1, hls_in, -1, "", "", 1),
	Port_Property("ap_done", 1, hls_out, -1, "", "", 1),
	Port_Property("ap_idle", 1, hls_out, -1, "", "", 1),
	Port_Property("ap_ready", 1, hls_out, -1, "", "", 1),
	Port_Property("s_depth", 32, hls_in, 0, "ap_none", "in_data", 1),
	Port_Property("fft_hdata_re_address0", 4, hls_out, 1, "ap_memory", "mem_address", 1),
	Port_Property("fft_hdata_re_ce0", 1, hls_out, 1, "ap_memory", "mem_ce", 1),
	Port_Property("fft_hdata_re_we0", 1, hls_out, 1, "ap_memory", "mem_we", 1),
	Port_Property("fft_hdata_re_d0", 32, hls_out, 1, "ap_memory", "mem_din", 1),
	Port_Property("fft_hdata_re_q0", 32, hls_in, 1, "ap_memory", "mem_dout", 1),
	Port_Property("fft_hdata_im_address0", 4, hls_out, 2, "ap_memory", "mem_address", 1),
	Port_Property("fft_hdata_im_ce0", 1, hls_out, 2, "ap_memory", "mem_ce", 1),
	Port_Property("fft_hdata_im_we0", 1, hls_out, 2, "ap_memory", "mem_we", 1),
	Port_Property("fft_hdata_im_d0", 32, hls_out, 2, "ap_memory", "mem_din", 1),
	Port_Property("in_data_address0", 10, hls_out, 3, "ap_memory", "mem_address", 1),
	Port_Property("in_data_ce0", 1, hls_out, 3, "ap_memory", "mem_ce", 1),
	Port_Property("in_data_q0", 32, hls_in, 3, "ap_memory", "mem_dout", 1),
	Port_Property("in_linesize_address0", 7, hls_out, 4, "ap_memory", "mem_address", 1),
	Port_Property("in_linesize_ce0", 1, hls_out, 4, "ap_memory", "mem_ce", 1),
	Port_Property("in_linesize_q0", 32, hls_in, 4, "ap_memory", "mem_dout", 1),
	Port_Property("w", 32, hls_in, 5, "ap_none", "in_data", 1),
	Port_Property("h", 32, hls_in, 6, "ap_none", "in_data", 1),
	Port_Property("n", 32, hls_in, 7, "ap_none", "in_data", 1),
	Port_Property("plane", 32, hls_in, 8, "ap_none", "in_data", 1),
	Port_Property("scale", 32, hls_in, 9, "ap_none", "in_data", 1),
};
const char* HLS_Design_Meta::dut_name = "get_input";
