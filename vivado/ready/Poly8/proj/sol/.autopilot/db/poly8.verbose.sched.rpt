

================================================================
== Vivado HLS Report for 'poly8'
================================================================
* Date:           Mon Apr 27 12:40:53 2020

* Version:        2019.1 (Build 2552052 on Fri May 24 15:28:33 MDT 2019)
* Project:        proj
* Solution:       sol
* Product family: virtexuplus
* Target device:  xcvu9p-flgb2104-2-i


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|     7.550|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-------+-------+-------+-------+---------+
    |    Latency    |    Interval   | Pipeline|
    |  min  |  max  |  min  |  max  |   Type  |
    +-------+-------+-------+-------+---------+
    |  30202|  30202|  30202|  30202|   none  |
    +-------+-------+-------+-------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------+-------+-------+----------+-----------+-----------+------+----------+
        |             |    Latency    | Iteration|  Initiation Interval  | Trip |          |
        |  Loop Name  |  min  |  max  |  Latency |  achieved |   target  | Count| Pipelined|
        +-------------+-------+-------+----------+-----------+-----------+------+----------+
        |- Loop 1     |  30200|  30200|       302|          -|          -|   100|    no    |
        | + Loop 1.1  |    300|    300|         3|          -|          -|   100|    no    |
        +-------------+-------+-------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 6
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 6 3 
3 --> 4 2 
4 --> 5 
5 --> 3 
6 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 0.60>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([100 x i16]* %a) nounwind, !map !7"   --->   Operation 7 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([100 x i16]* %b) nounwind, !map !13"   --->   Operation 8 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([100 x i16]* %c) nounwind, !map !17"   --->   Operation 9 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([100 x i32]* %out_r) nounwind, !map !21"   --->   Operation 10 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%out_addr = getelementptr [100 x i32]* %out_r, i64 0, i64 0" [poly8.cpp:3]   --->   Operation 11 'getelementptr' 'out_addr' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32 0) nounwind, !map !25"   --->   Operation 12 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecTopModule([6 x i8]* @poly8_str) nounwind"   --->   Operation 13 'spectopmodule' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.60ns)   --->   "br label %.loopexit" [poly8.cpp:10]   --->   Operation 14 'br' <Predicate = true> <Delay = 0.60>

State 2 <SV = 1> <Delay = 1.15>
ST_2 : Operation 15 [1/1] (0.00ns)   --->   "%i_0 = phi i7 [ 0, %0 ], [ %i, %.loopexit.loopexit ]"   --->   Operation 15 'phi' 'i_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 16 [1/1] (0.59ns)   --->   "%icmp_ln10 = icmp eq i7 %i_0, -28" [poly8.cpp:10]   --->   Operation 16 'icmp' 'icmp_ln10' <Predicate = true> <Delay = 0.59> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.59> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 17 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 100, i64 100, i64 100) nounwind"   --->   Operation 17 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 18 [1/1] (0.40ns)   --->   "%i = add i7 %i_0, 1" [poly8.cpp:10]   --->   Operation 18 'add' 'i' <Predicate = true> <Delay = 0.40> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.66> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 19 [1/1] (0.00ns)   --->   "br i1 %icmp_ln10, label %2, label %.preheader.preheader" [poly8.cpp:10]   --->   Operation 19 'br' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 20 [1/1] (0.60ns)   --->   "br label %.preheader" [poly8.cpp:12]   --->   Operation 20 'br' <Predicate = (!icmp_ln10)> <Delay = 0.60>
ST_2 : Operation 21 [2/2] (1.15ns)   --->   "%v = load i32* %out_addr, align 4" [poly8.cpp:22]   --->   Operation 21 'load' 'v' <Predicate = (icmp_ln10)> <Delay = 1.15> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 100> <RAM>

State 3 <SV = 2> <Delay = 1.15>
ST_3 : Operation 22 [1/1] (0.00ns)   --->   "%k_0 = phi i7 [ %k, %1 ], [ 0, %.preheader.preheader ]"   --->   Operation 22 'phi' 'k_0' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 23 [1/1] (0.59ns)   --->   "%icmp_ln12 = icmp eq i7 %k_0, -28" [poly8.cpp:12]   --->   Operation 23 'icmp' 'icmp_ln12' <Predicate = true> <Delay = 0.59> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.59> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 24 [1/1] (0.00ns)   --->   "%empty_2 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 100, i64 100, i64 100) nounwind"   --->   Operation 24 'speclooptripcount' 'empty_2' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 25 [1/1] (0.40ns)   --->   "%k = add i7 %k_0, 1" [poly8.cpp:12]   --->   Operation 25 'add' 'k' <Predicate = true> <Delay = 0.40> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.66> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 26 [1/1] (0.00ns)   --->   "br i1 %icmp_ln12, label %.loopexit.loopexit, label %1" [poly8.cpp:12]   --->   Operation 26 'br' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 27 [1/1] (0.00ns)   --->   "%zext_ln13 = zext i7 %k_0 to i64" [poly8.cpp:13]   --->   Operation 27 'zext' 'zext_ln13' <Predicate = (!icmp_ln12)> <Delay = 0.00>
ST_3 : Operation 28 [1/1] (0.00ns)   --->   "%a_addr = getelementptr [100 x i16]* %a, i64 0, i64 %zext_ln13" [poly8.cpp:13]   --->   Operation 28 'getelementptr' 'a_addr' <Predicate = (!icmp_ln12)> <Delay = 0.00>
ST_3 : Operation 29 [2/2] (1.15ns)   --->   "%a_load = load i16* %a_addr, align 2" [poly8.cpp:13]   --->   Operation 29 'load' 'a_load' <Predicate = (!icmp_ln12)> <Delay = 1.15> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 100> <RAM>
ST_3 : Operation 30 [1/1] (0.00ns)   --->   "%c_addr = getelementptr [100 x i16]* %c, i64 0, i64 %zext_ln13" [poly8.cpp:13]   --->   Operation 30 'getelementptr' 'c_addr' <Predicate = (!icmp_ln12)> <Delay = 0.00>
ST_3 : Operation 31 [2/2] (1.15ns)   --->   "%c_load = load i16* %c_addr, align 2" [poly8.cpp:13]   --->   Operation 31 'load' 'c_load' <Predicate = (!icmp_ln12)> <Delay = 1.15> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 100> <RAM>
ST_3 : Operation 32 [1/1] (0.00ns)   --->   "%b_addr = getelementptr [100 x i16]* %b, i64 0, i64 %zext_ln13" [poly8.cpp:13]   --->   Operation 32 'getelementptr' 'b_addr' <Predicate = (!icmp_ln12)> <Delay = 0.00>
ST_3 : Operation 33 [2/2] (1.15ns)   --->   "%b_load = load i16* %b_addr, align 2" [poly8.cpp:13]   --->   Operation 33 'load' 'b_load' <Predicate = (!icmp_ln12)> <Delay = 1.15> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 100> <RAM>
ST_3 : Operation 34 [1/1] (0.00ns)   --->   "br label %.loopexit"   --->   Operation 34 'br' <Predicate = (icmp_ln12)> <Delay = 0.00>

State 4 <SV = 3> <Delay = 7.55>
ST_4 : Operation 35 [1/2] (1.15ns)   --->   "%a_load = load i16* %a_addr, align 2" [poly8.cpp:13]   --->   Operation 35 'load' 'a_load' <Predicate = true> <Delay = 1.15> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 100> <RAM>
ST_4 : Operation 36 [1/1] (0.00ns)   --->   "%sext_ln13 = sext i16 %a_load to i32" [poly8.cpp:13]   --->   Operation 36 'sext' 'sext_ln13' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 37 [1/2] (1.15ns)   --->   "%c_load = load i16* %c_addr, align 2" [poly8.cpp:13]   --->   Operation 37 'load' 'c_load' <Predicate = true> <Delay = 1.15> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 100> <RAM>
ST_4 : Operation 38 [1/1] (0.00ns)   --->   "%sext_ln13_1 = sext i16 %c_load to i32" [poly8.cpp:13]   --->   Operation 38 'sext' 'sext_ln13_1' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 39 [1/2] (1.15ns)   --->   "%b_load = load i16* %b_addr, align 2" [poly8.cpp:13]   --->   Operation 39 'load' 'b_load' <Predicate = true> <Delay = 1.15> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 100> <RAM>
ST_4 : Operation 40 [1/1] (0.00ns)   --->   "%sext_ln13_2 = sext i16 %b_load to i25" [poly8.cpp:13]   --->   Operation 40 'sext' 'sext_ln13_2' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 41 [1/1] (0.49ns) (grouped into DSP with root node add_ln13)   --->   "%mul_ln13 = mul i25 %sext_ln13_2, 432" [poly8.cpp:13]   --->   Operation 41 'mul' 'mul_ln13' <Predicate = true> <Delay = 0.49> <Core = "DSP48">   --->   Core 88 'DSP48' <Latency = 0> <II = 1> <Delay = 2.53> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 2> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 42 [1/1] (2.03ns) (root node of the DSP)   --->   "%add_ln13 = add i25 %mul_ln13, -13824" [poly8.cpp:13]   --->   Operation 42 'add' 'add_ln13' <Predicate = true> <Delay = 2.03> <Core = "DSP48">   --->   Core 88 'DSP48' <Latency = 0> <II = 1> <Delay = 2.53> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 2> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 43 [1/1] (0.00ns)   --->   "%shl_ln = call i19 @_ssdm_op_BitConcatenate.i19.i16.i3(i16 %c_load, i3 0)" [poly8.cpp:13]   --->   Operation 43 'bitconcatenate' 'shl_ln' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 44 [1/1] (0.00ns)   --->   "%sext_ln13_4 = sext i19 %shl_ln to i20" [poly8.cpp:13]   --->   Operation 44 'sext' 'sext_ln13_4' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 45 [1/1] (0.00ns)   --->   "%shl_ln13_1 = call i17 @_ssdm_op_BitConcatenate.i17.i16.i1(i16 %c_load, i1 false)" [poly8.cpp:13]   --->   Operation 45 'bitconcatenate' 'shl_ln13_1' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 46 [1/1] (0.00ns)   --->   "%sext_ln13_5 = sext i17 %shl_ln13_1 to i20" [poly8.cpp:13]   --->   Operation 46 'sext' 'sext_ln13_5' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 47 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%sub_ln13 = sub i20 %sext_ln13_4, %sext_ln13_5" [poly8.cpp:13]   --->   Operation 47 'sub' 'sub_ln13' <Predicate = true> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.34> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 48 [1/1] (0.68ns) (root node of TernaryAdder)   --->   "%tmp = add i20 %sub_ln13, -4776" [poly8.cpp:13]   --->   Operation 48 'add' 'tmp' <Predicate = true> <Delay = 0.68> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.34> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 49 [1/1] (0.00ns)   --->   "%tmp_cast = sext i20 %tmp to i32" [poly8.cpp:13]   --->   Operation 49 'sext' 'tmp_cast' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 50 [1/1] (0.49ns) (grouped into DSP with root node add_ln13_1)   --->   "%tmp2 = mul i32 %sext_ln13_1, %tmp_cast" [poly8.cpp:13]   --->   Operation 50 'mul' 'tmp2' <Predicate = true> <Delay = 0.49> <Core = "DSP48">   --->   Core 88 'DSP48' <Latency = 0> <II = 1> <Delay = 2.53> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 2> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 51 [1/1] (2.03ns) (root node of the DSP)   --->   "%add_ln13_1 = add i32 %tmp2, 69120" [poly8.cpp:13]   --->   Operation 51 'add' 'add_ln13_1' <Predicate = true> <Delay = 2.03> <Core = "DSP48">   --->   Core 88 'DSP48' <Latency = 0> <II = 1> <Delay = 2.53> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 2> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 52 [1/1] (2.53ns) (root node of the DSP)   --->   "%mul_ln13_2 = mul i32 %sext_ln13, %sext_ln13" [poly8.cpp:13]   --->   Operation 52 'mul' 'mul_ln13_2' <Predicate = true> <Delay = 2.53> <Core = "DSP48">   --->   Core 88 'DSP48' <Latency = 0> <II = 1> <Delay = 2.53> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 2> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 53 [1/1] (3.17ns)   --->   "%mul_ln13_3 = mul i32 %add_ln13_1, %mul_ln13_2" [poly8.cpp:13]   --->   Operation 53 'mul' 'mul_ln13_3' <Predicate = true> <Delay = 3.17> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 3.17> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>

State 5 <SV = 4> <Delay = 7.53>
ST_5 : Operation 54 [1/1] (0.00ns)   --->   "%sext_ln13_3 = sext i25 %add_ln13 to i32" [poly8.cpp:13]   --->   Operation 54 'sext' 'sext_ln13_3' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 55 [1/1] (0.49ns) (grouped into DSP with root node add_ln13_2)   --->   "%mul_ln13_1 = mul nsw i32 %sext_ln13_1, %sext_ln13_3" [poly8.cpp:13]   --->   Operation 55 'mul' 'mul_ln13_1' <Predicate = true> <Delay = 0.49> <Core = "DSP48">   --->   Core 88 'DSP48' <Latency = 0> <II = 1> <Delay = 2.53> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 2> <OutPorts = 1> <Sync> <CReg>
ST_5 : Operation 56 [1/1] (2.03ns) (root node of the DSP)   --->   "%add_ln13_2 = add nsw i32 %mul_ln13_3, %mul_ln13_1" [poly8.cpp:13]   --->   Operation 56 'add' 'add_ln13_2' <Predicate = true> <Delay = 2.03> <Core = "DSP48">   --->   Core 88 'DSP48' <Latency = 0> <II = 1> <Delay = 2.53> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 2> <OutPorts = 1> <Sync> <CReg>
ST_5 : Operation 57 [1/1] (3.17ns)   --->   "%mul_ln13_4 = mul nsw i32 %sext_ln13, %add_ln13_2" [poly8.cpp:13]   --->   Operation 57 'mul' 'mul_ln13_4' <Predicate = true> <Delay = 3.17> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 3.17> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 58 [1/1] (0.66ns)   --->   "%add_ln13_3 = add nsw i32 %sext_ln13, %mul_ln13_4" [poly8.cpp:13]   --->   Operation 58 'add' 'add_ln13_3' <Predicate = true> <Delay = 0.66> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.66> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 59 [1/1] (0.00ns)   --->   "%out_addr_1 = getelementptr [100 x i32]* %out_r, i64 0, i64 %zext_ln13" [poly8.cpp:13]   --->   Operation 59 'getelementptr' 'out_addr_1' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 60 [1/1] (1.15ns)   --->   "store i32 %add_ln13_3, i32* %out_addr_1, align 4" [poly8.cpp:13]   --->   Operation 60 'store' <Predicate = true> <Delay = 1.15> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 100> <RAM>
ST_5 : Operation 61 [1/1] (0.00ns)   --->   "br label %.preheader" [poly8.cpp:12]   --->   Operation 61 'br' <Predicate = true> <Delay = 0.00>

State 6 <SV = 2> <Delay = 1.15>
ST_6 : Operation 62 [1/2] (1.15ns)   --->   "%v = load i32* %out_addr, align 4" [poly8.cpp:22]   --->   Operation 62 'load' 'v' <Predicate = true> <Delay = 1.15> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 100> <RAM>
ST_6 : Operation 63 [1/1] (0.00ns)   --->   "ret i32 %v" [poly8.cpp:29]   --->   Operation 63 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 0.603ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('i') with incoming values : ('i', poly8.cpp:10) [14]  (0.603 ns)

 <State 2>: 1.16ns
The critical path consists of the following:
	'load' operation ('v', poly8.cpp:22) on array 'out_r' [62]  (1.16 ns)

 <State 3>: 1.16ns
The critical path consists of the following:
	'phi' operation ('k') with incoming values : ('k', poly8.cpp:12) [22]  (0 ns)
	'getelementptr' operation ('a_addr', poly8.cpp:13) [29]  (0 ns)
	'load' operation ('a_load', poly8.cpp:13) on array 'a' [30]  (1.16 ns)

 <State 4>: 7.55ns
The critical path consists of the following:
	'load' operation ('c_load', poly8.cpp:13) on array 'c' [33]  (1.16 ns)
	'sub' operation ('sub_ln13', poly8.cpp:13) [46]  (0 ns)
	'add' operation ('tmp', poly8.cpp:13) [47]  (0.689 ns)
	'mul' operation of DSP[50] ('tmp2', poly8.cpp:13) [49]  (0.494 ns)
	'add' operation of DSP[50] ('add_ln13_1', poly8.cpp:13) [50]  (2.04 ns)
	'mul' operation ('mul_ln13_3', poly8.cpp:13) [52]  (3.17 ns)

 <State 5>: 7.53ns
The critical path consists of the following:
	'mul' operation of DSP[53] ('mul_ln13_1', poly8.cpp:13) [41]  (0.494 ns)
	'add' operation of DSP[53] ('add_ln13_2', poly8.cpp:13) [53]  (2.04 ns)
	'mul' operation ('mul_ln13_4', poly8.cpp:13) [54]  (3.17 ns)
	'add' operation ('add_ln13_3', poly8.cpp:13) [55]  (0.669 ns)
	'store' operation ('store_ln13', poly8.cpp:13) of variable 'add_ln13_3', poly8.cpp:13 on array 'out_r' [57]  (1.16 ns)

 <State 6>: 1.16ns
The critical path consists of the following:
	'load' operation ('v', poly8.cpp:22) on array 'out_r' [62]  (1.16 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
