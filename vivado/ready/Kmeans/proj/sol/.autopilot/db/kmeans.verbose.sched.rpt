

================================================================
== Vivado HLS Report for 'kmeans'
================================================================
* Date:           Mon Apr 27 14:40:35 2020

* Version:        2019.1 (Build 2552052 on Fri May 24 15:28:33 MDT 2019)
* Project:        proj
* Solution:       sol
* Product family: virtexuplus
* Target device:  xcvu9p-flgb2104-2-i


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|     1.833|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |    ?|    ?|    ?|    ?|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +---------------------+-----+-----+----------+-----------+-----------+------+----------+
        |                     |  Latency  | Iteration|  Initiation Interval  | Trip |          |
        |      Loop Name      | min | max |  Latency |  achieved |   target  | Count| Pipelined|
        +---------------------+-----+-----+----------+-----------+-----------+------+----------+
        |- Loop 1             |    ?|    ?|         ?|          -|          -|   100|    no    |
        | + Loop 1.1          |    ?|    ?|         ?|          -|          -|   100|    no    |
        |  ++ Loop 1.1.1      |    ?|    ?|         ?|          -|          -|     ?|    no    |
        |   +++ Loop 1.1.1.1  |    ?|    ?|         2|          -|          -|     ?|    no    |
        +---------------------+-----+-----+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 7
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 7 3 
3 --> 4 2 
4 --> 5 3 
5 --> 6 4 
6 --> 5 
7 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 0.60>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([10000 x i16]* %data_in) nounwind, !map !7"   --->   Operation 8 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([100 x i32]* %data_out) nounwind, !map !13"   --->   Operation 9 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([999900 x i16]* %centroids) nounwind, !map !19"   --->   Operation 10 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32 %num_clusters) nounwind, !map !25"   --->   Operation 11 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32 %num_dim) nounwind, !map !31"   --->   Operation 12 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%num_dim_read = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %num_dim) nounwind" [kmeans.cpp:3]   --->   Operation 13 'read' 'num_dim_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%num_clusters_read = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %num_clusters) nounwind" [kmeans.cpp:3]   --->   Operation 14 'read' 'num_clusters_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%data_out_addr = getelementptr [100 x i32]* %data_out, i64 0, i64 0" [kmeans.cpp:3]   --->   Operation 15 'getelementptr' 'data_out_addr' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32 0) nounwind, !map !35"   --->   Operation 16 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecTopModule([7 x i8]* @kmeans_str) nounwind"   --->   Operation 17 'spectopmodule' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.60ns)   --->   "br label %.loopexit" [kmeans.cpp:10]   --->   Operation 18 'br' <Predicate = true> <Delay = 0.60>

State 2 <SV = 1> <Delay = 1.15>
ST_2 : Operation 19 [1/1] (0.00ns)   --->   "%sp_0 = phi i7 [ 0, %0 ], [ %sp, %.loopexit.loopexit ]"   --->   Operation 19 'phi' 'sp_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 20 [1/1] (0.59ns)   --->   "%icmp_ln10 = icmp eq i7 %sp_0, -28" [kmeans.cpp:10]   --->   Operation 20 'icmp' 'icmp_ln10' <Predicate = true> <Delay = 0.59> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 21 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 100, i64 100, i64 100) nounwind"   --->   Operation 21 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 22 [1/1] (0.40ns)   --->   "%sp = add i7 %sp_0, 1" [kmeans.cpp:10]   --->   Operation 22 'add' 'sp' <Predicate = true> <Delay = 0.40> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.66> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 23 [1/1] (0.00ns)   --->   "br i1 %icmp_ln10, label %4, label %.preheader3.preheader" [kmeans.cpp:10]   --->   Operation 23 'br' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 24 [1/1] (0.60ns)   --->   "br label %.preheader3" [kmeans.cpp:12]   --->   Operation 24 'br' <Predicate = (!icmp_ln10)> <Delay = 0.60>
ST_2 : Operation 25 [2/2] (1.15ns)   --->   "%v = load i32* %data_out_addr, align 4" [kmeans.cpp:33]   --->   Operation 25 'load' 'v' <Predicate = (icmp_ln10)> <Delay = 1.15> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 100> <RAM>

State 3 <SV = 2> <Delay = 0.60>
ST_3 : Operation 26 [1/1] (0.00ns)   --->   "%i_0 = phi i7 [ %i, %3 ], [ 0, %.preheader3.preheader ]"   --->   Operation 26 'phi' 'i_0' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 27 [1/1] (0.00ns)   --->   "%zext_ln12 = zext i7 %i_0 to i32" [kmeans.cpp:12]   --->   Operation 27 'zext' 'zext_ln12' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 28 [1/1] (0.59ns)   --->   "%icmp_ln12 = icmp eq i7 %i_0, -28" [kmeans.cpp:12]   --->   Operation 28 'icmp' 'icmp_ln12' <Predicate = true> <Delay = 0.59> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 29 [1/1] (0.00ns)   --->   "%empty_2 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 100, i64 100, i64 100) nounwind"   --->   Operation 29 'speclooptripcount' 'empty_2' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 30 [1/1] (0.40ns)   --->   "%i = add i7 %i_0, 1" [kmeans.cpp:12]   --->   Operation 30 'add' 'i' <Predicate = true> <Delay = 0.40> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.66> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 31 [1/1] (0.00ns)   --->   "br i1 %icmp_ln12, label %.loopexit.loopexit, label %.preheader2.preheader" [kmeans.cpp:12]   --->   Operation 31 'br' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 32 [1/1] (0.60ns)   --->   "br label %.preheader2" [kmeans.cpp:21]   --->   Operation 32 'br' <Predicate = (!icmp_ln12)> <Delay = 0.60>
ST_3 : Operation 33 [1/1] (0.00ns)   --->   "br label %.loopexit"   --->   Operation 33 'br' <Predicate = (icmp_ln12)> <Delay = 0.00>

State 4 <SV = 3> <Delay = 1.15>
ST_4 : Operation 34 [1/1] (0.00ns)   --->   "%min_0 = phi i16 [ %select_ln19, %2 ], [ -32203, %.preheader2.preheader ]" [kmeans.cpp:19]   --->   Operation 34 'phi' 'min_0' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 35 [1/1] (0.00ns)   --->   "%min_id_0 = phi i16 [ %select_ln19_1, %2 ], [ 0, %.preheader2.preheader ]" [kmeans.cpp:19]   --->   Operation 35 'phi' 'min_id_0' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 36 [1/1] (0.00ns)   --->   "%min_id = phi i16 [ %c, %2 ], [ 0, %.preheader2.preheader ]"   --->   Operation 36 'phi' 'min_id' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 37 [1/1] (0.00ns)   --->   "%phi_mul1 = phi i32 [ %add_ln21, %2 ], [ 0, %.preheader2.preheader ]" [kmeans.cpp:21]   --->   Operation 37 'phi' 'phi_mul1' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 38 [1/1] (0.66ns)   --->   "%add_ln21 = add i32 %phi_mul1, %num_dim_read" [kmeans.cpp:21]   --->   Operation 38 'add' 'add_ln21' <Predicate = true> <Delay = 0.66> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.66> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 39 [1/1] (0.00ns)   --->   "%zext_ln14 = zext i16 %min_id to i32" [kmeans.cpp:14]   --->   Operation 39 'zext' 'zext_ln14' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 40 [1/1] (0.85ns)   --->   "%icmp_ln14 = icmp slt i32 %zext_ln14, %num_clusters_read" [kmeans.cpp:14]   --->   Operation 40 'icmp' 'icmp_ln14' <Predicate = true> <Delay = 0.85> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 41 [1/1] (0.60ns)   --->   "%c = add i16 %min_id, 1" [kmeans.cpp:14]   --->   Operation 41 'add' 'c' <Predicate = true> <Delay = 0.60> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.66> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 42 [1/1] (0.00ns)   --->   "br i1 %icmp_ln14, label %.preheader.preheader, label %3" [kmeans.cpp:14]   --->   Operation 42 'br' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 43 [1/1] (0.60ns)   --->   "br label %.preheader" [kmeans.cpp:20]   --->   Operation 43 'br' <Predicate = (icmp_ln14)> <Delay = 0.60>
ST_4 : Operation 44 [1/1] (0.00ns)   --->   "%zext_ln24 = zext i16 %min_id_0 to i32" [kmeans.cpp:24]   --->   Operation 44 'zext' 'zext_ln24' <Predicate = (!icmp_ln14)> <Delay = 0.00>
ST_4 : Operation 45 [1/1] (0.00ns)   --->   "%zext_ln24_1 = zext i7 %i_0 to i64" [kmeans.cpp:24]   --->   Operation 45 'zext' 'zext_ln24_1' <Predicate = (!icmp_ln14)> <Delay = 0.00>
ST_4 : Operation 46 [1/1] (0.00ns)   --->   "%data_out_addr_1 = getelementptr [100 x i32]* %data_out, i64 0, i64 %zext_ln24_1" [kmeans.cpp:24]   --->   Operation 46 'getelementptr' 'data_out_addr_1' <Predicate = (!icmp_ln14)> <Delay = 0.00>
ST_4 : Operation 47 [1/1] (1.15ns)   --->   "store i32 %zext_ln24, i32* %data_out_addr_1, align 4" [kmeans.cpp:24]   --->   Operation 47 'store' <Predicate = (!icmp_ln14)> <Delay = 1.15> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 100> <RAM>
ST_4 : Operation 48 [1/1] (0.00ns)   --->   "br label %.preheader3" [kmeans.cpp:12]   --->   Operation 48 'br' <Predicate = (!icmp_ln14)> <Delay = 0.00>

State 5 <SV = 4> <Delay = 1.82>
ST_5 : Operation 49 [1/1] (0.00ns)   --->   "%min = phi i16 [ %sum, %1 ], [ 0, %.preheader.preheader ]"   --->   Operation 49 'phi' 'min' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 50 [1/1] (0.00ns)   --->   "%j_0 = phi i31 [ %j, %1 ], [ 0, %.preheader.preheader ]"   --->   Operation 50 'phi' 'j_0' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 51 [1/1] (0.00ns)   --->   "%phi_mul = phi i32 [ %add_ln17_3, %1 ], [ 0, %.preheader.preheader ]" [kmeans.cpp:17]   --->   Operation 51 'phi' 'phi_mul' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 52 [1/1] (0.00ns)   --->   "%zext_ln20 = zext i31 %j_0 to i32" [kmeans.cpp:20]   --->   Operation 52 'zext' 'zext_ln20' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 53 [1/1] (0.85ns)   --->   "%icmp_ln16 = icmp slt i32 %zext_ln20, %num_dim_read" [kmeans.cpp:16]   --->   Operation 53 'icmp' 'icmp_ln16' <Predicate = true> <Delay = 0.85> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 54 [1/1] (0.66ns)   --->   "%j = add i31 %j_0, 1" [kmeans.cpp:16]   --->   Operation 54 'add' 'j' <Predicate = true> <Delay = 0.66> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.66> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 55 [1/1] (0.00ns)   --->   "br i1 %icmp_ln16, label %1, label %2" [kmeans.cpp:16]   --->   Operation 55 'br' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 56 [1/1] (0.66ns)   --->   "%add_ln17_3 = add i32 %phi_mul, %num_dim_read" [kmeans.cpp:17]   --->   Operation 56 'add' 'add_ln17_3' <Predicate = (icmp_ln16)> <Delay = 0.66> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.66> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 57 [1/1] (0.66ns)   --->   "%add_ln17 = add nsw i32 %phi_mul, %zext_ln12" [kmeans.cpp:17]   --->   Operation 57 'add' 'add_ln17' <Predicate = (icmp_ln16)> <Delay = 0.66> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.66> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 58 [1/1] (0.00ns)   --->   "%sext_ln17 = sext i32 %add_ln17 to i64" [kmeans.cpp:17]   --->   Operation 58 'sext' 'sext_ln17' <Predicate = (icmp_ln16)> <Delay = 0.00>
ST_5 : Operation 59 [1/1] (0.00ns)   --->   "%data_in_addr = getelementptr [10000 x i16]* %data_in, i64 0, i64 %sext_ln17" [kmeans.cpp:17]   --->   Operation 59 'getelementptr' 'data_in_addr' <Predicate = (icmp_ln16)> <Delay = 0.00>
ST_5 : Operation 60 [2/2] (1.15ns)   --->   "%data_in_load = load i16* %data_in_addr, align 2" [kmeans.cpp:17]   --->   Operation 60 'load' 'data_in_load' <Predicate = (icmp_ln16)> <Delay = 1.15> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 100> <RAM>
ST_5 : Operation 61 [1/1] (0.66ns)   --->   "%add_ln17_1 = add nsw i32 %zext_ln20, %phi_mul1" [kmeans.cpp:17]   --->   Operation 61 'add' 'add_ln17_1' <Predicate = (icmp_ln16)> <Delay = 0.66> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.66> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 62 [1/1] (0.00ns)   --->   "%sext_ln17_1 = sext i32 %add_ln17_1 to i64" [kmeans.cpp:17]   --->   Operation 62 'sext' 'sext_ln17_1' <Predicate = (icmp_ln16)> <Delay = 0.00>
ST_5 : Operation 63 [1/1] (0.00ns)   --->   "%centroids_addr = getelementptr [999900 x i16]* %centroids, i64 0, i64 %sext_ln17_1" [kmeans.cpp:17]   --->   Operation 63 'getelementptr' 'centroids_addr' <Predicate = (icmp_ln16)> <Delay = 0.00>
ST_5 : Operation 64 [2/2] (1.15ns)   --->   "%centroids_load = load i16* %centroids_addr, align 2" [kmeans.cpp:17]   --->   Operation 64 'load' 'centroids_load' <Predicate = (icmp_ln16)> <Delay = 1.15> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 100> <RAM>
ST_5 : Operation 65 [1/1] (0.67ns)   --->   "%icmp_ln19 = icmp ugt i16 %min, %min_0" [kmeans.cpp:19]   --->   Operation 65 'icmp' 'icmp_ln19' <Predicate = (!icmp_ln16)> <Delay = 0.67> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 66 [1/1] (0.24ns)   --->   "%select_ln19 = select i1 %icmp_ln19, i16 %min_0, i16 %min" [kmeans.cpp:19]   --->   Operation 66 'select' 'select_ln19' <Predicate = (!icmp_ln16)> <Delay = 0.24> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_5 : Operation 67 [1/1] (0.24ns)   --->   "%select_ln19_1 = select i1 %icmp_ln19, i16 %min_id_0, i16 %min_id" [kmeans.cpp:19]   --->   Operation 67 'select' 'select_ln19_1' <Predicate = (!icmp_ln16)> <Delay = 0.24> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_5 : Operation 68 [1/1] (0.00ns)   --->   "br label %.preheader2" [kmeans.cpp:14]   --->   Operation 68 'br' <Predicate = (!icmp_ln16)> <Delay = 0.00>

State 6 <SV = 5> <Delay = 1.83>
ST_6 : Operation 69 [1/2] (1.15ns)   --->   "%data_in_load = load i16* %data_in_addr, align 2" [kmeans.cpp:17]   --->   Operation 69 'load' 'data_in_load' <Predicate = true> <Delay = 1.15> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 100> <RAM>
ST_6 : Operation 70 [1/2] (1.15ns)   --->   "%centroids_load = load i16* %centroids_addr, align 2" [kmeans.cpp:17]   --->   Operation 70 'load' 'centroids_load' <Predicate = true> <Delay = 1.15> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 100> <RAM>
ST_6 : Operation 71 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln17_2 = add i16 %data_in_load, %min" [kmeans.cpp:17]   --->   Operation 71 'add' 'add_ln17_2' <Predicate = true> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.33> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_6 : Operation 72 [1/1] (0.67ns) (root node of TernaryAdder)   --->   "%sum = sub i16 %add_ln17_2, %centroids_load" [kmeans.cpp:17]   --->   Operation 72 'sub' 'sum' <Predicate = true> <Delay = 0.67> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.33> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_6 : Operation 73 [1/1] (0.00ns)   --->   "br label %.preheader" [kmeans.cpp:16]   --->   Operation 73 'br' <Predicate = true> <Delay = 0.00>

State 7 <SV = 2> <Delay = 1.15>
ST_7 : Operation 74 [1/2] (1.15ns)   --->   "%v = load i32* %data_out_addr, align 4" [kmeans.cpp:33]   --->   Operation 74 'load' 'v' <Predicate = true> <Delay = 1.15> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 100> <RAM>
ST_7 : Operation 75 [1/1] (0.00ns)   --->   "ret i32 %v" [kmeans.cpp:39]   --->   Operation 75 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 0.603ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('sp') with incoming values : ('sp', kmeans.cpp:10) [18]  (0.603 ns)

 <State 2>: 1.16ns
The critical path consists of the following:
	'load' operation ('v', kmeans.cpp:33) on array 'data_out' [81]  (1.16 ns)

 <State 3>: 0.603ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('min_0', kmeans.cpp:19) with incoming values : ('select_ln19', kmeans.cpp:19) [35]  (0.603 ns)

 <State 4>: 1.16ns
The critical path consists of the following:
	'phi' operation ('min_id_0', kmeans.cpp:19) with incoming values : ('select_ln19_1', kmeans.cpp:19) [36]  (0 ns)
	'store' operation ('store_ln24', kmeans.cpp:24) of variable 'zext_ln24', kmeans.cpp:24 on array 'data_out' [76]  (1.16 ns)

 <State 5>: 1.83ns
The critical path consists of the following:
	'phi' operation ('j') with incoming values : ('j', kmeans.cpp:16) [48]  (0 ns)
	'add' operation ('add_ln17_1', kmeans.cpp:17) [60]  (0.669 ns)
	'getelementptr' operation ('centroids_addr', kmeans.cpp:17) [62]  (0 ns)
	'load' operation ('centroids_load', kmeans.cpp:17) on array 'centroids' [63]  (1.16 ns)

 <State 6>: 1.83ns
The critical path consists of the following:
	'load' operation ('data_in_load', kmeans.cpp:17) on array 'data_in' [59]  (1.16 ns)
	'add' operation ('add_ln17_2', kmeans.cpp:17) [64]  (0 ns)
	'sub' operation ('sum', kmeans.cpp:17) [65]  (0.675 ns)

 <State 7>: 1.16ns
The critical path consists of the following:
	'load' operation ('v', kmeans.cpp:33) on array 'data_out' [81]  (1.16 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
