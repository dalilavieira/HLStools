// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _kmeans_HH_
#define _kmeans_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct kmeans : public sc_module {
    // Port declarations 20
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<14> > data_in_address0;
    sc_out< sc_logic > data_in_ce0;
    sc_in< sc_lv<16> > data_in_q0;
    sc_out< sc_lv<7> > data_out_address0;
    sc_out< sc_logic > data_out_ce0;
    sc_out< sc_logic > data_out_we0;
    sc_out< sc_lv<32> > data_out_d0;
    sc_in< sc_lv<32> > data_out_q0;
    sc_out< sc_lv<20> > centroids_address0;
    sc_out< sc_logic > centroids_ce0;
    sc_in< sc_lv<16> > centroids_q0;
    sc_in< sc_lv<32> > num_clusters;
    sc_in< sc_lv<32> > num_dim;
    sc_out< sc_lv<32> > ap_return;


    // Module declarations
    kmeans(sc_module_name name);
    SC_HAS_PROCESS(kmeans);

    ~kmeans();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    sc_signal< sc_lv<7> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<7> > sp_fu_212_p2;
    sc_signal< sc_lv<7> > sp_reg_359;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<32> > zext_ln12_fu_218_p1;
    sc_signal< sc_lv<32> > zext_ln12_reg_364;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<7> > i_fu_228_p2;
    sc_signal< sc_lv<7> > i_reg_372;
    sc_signal< sc_lv<32> > add_ln21_fu_234_p2;
    sc_signal< sc_lv<32> > add_ln21_reg_377;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<16> > c_fu_248_p2;
    sc_signal< sc_lv<16> > c_reg_385;
    sc_signal< sc_lv<31> > j_fu_273_p2;
    sc_signal< sc_lv<31> > j_reg_393;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<32> > add_ln17_3_fu_279_p2;
    sc_signal< sc_lv<32> > add_ln17_3_reg_398;
    sc_signal< sc_lv<1> > icmp_ln16_fu_268_p2;
    sc_signal< sc_lv<16> > select_ln19_fu_311_p3;
    sc_signal< sc_lv<16> > select_ln19_1_fu_319_p3;
    sc_signal< sc_lv<16> > sum_fu_333_p2;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<7> > sp_0_reg_101;
    sc_signal< sc_lv<1> > icmp_ln12_fu_222_p2;
    sc_signal< sc_lv<7> > i_0_reg_112;
    sc_signal< sc_lv<1> > icmp_ln14_fu_243_p2;
    sc_signal< sc_lv<1> > icmp_ln10_fu_206_p2;
    sc_signal< sc_lv<16> > min_0_reg_124;
    sc_signal< sc_lv<16> > min_id_0_reg_136;
    sc_signal< sc_lv<16> > min_id_reg_148;
    sc_signal< sc_lv<32> > phi_mul1_reg_160;
    sc_signal< sc_lv<16> > min_reg_172;
    sc_signal< sc_lv<31> > j_0_reg_184;
    sc_signal< sc_lv<32> > phi_mul_reg_195;
    sc_signal< sc_lv<64> > zext_ln24_1_fu_259_p1;
    sc_signal< sc_lv<64> > sext_ln17_fu_289_p1;
    sc_signal< sc_lv<64> > sext_ln17_1_fu_300_p1;
    sc_signal< sc_lv<32> > zext_ln14_fu_239_p1;
    sc_signal< sc_lv<32> > zext_ln20_fu_264_p1;
    sc_signal< sc_lv<32> > add_ln17_fu_284_p2;
    sc_signal< sc_lv<32> > add_ln17_1_fu_294_p2;
    sc_signal< sc_lv<1> > icmp_ln19_fu_305_p2;
    sc_signal< sc_lv<16> > add_ln17_2_fu_327_p2;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<7> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<7> ap_ST_fsm_state1;
    static const sc_lv<7> ap_ST_fsm_state2;
    static const sc_lv<7> ap_ST_fsm_state3;
    static const sc_lv<7> ap_ST_fsm_state4;
    static const sc_lv<7> ap_ST_fsm_state5;
    static const sc_lv<7> ap_ST_fsm_state6;
    static const sc_lv<7> ap_ST_fsm_state7;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<7> ap_const_lv7_0;
    static const sc_lv<16> ap_const_lv16_8235;
    static const sc_lv<16> ap_const_lv16_0;
    static const sc_lv<31> ap_const_lv31_0;
    static const sc_lv<64> ap_const_lv64_0;
    static const sc_lv<7> ap_const_lv7_64;
    static const sc_lv<7> ap_const_lv7_1;
    static const sc_lv<16> ap_const_lv16_1;
    static const sc_lv<31> ap_const_lv31_1;
    static const sc_lv<32> ap_const_lv32_6;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_add_ln17_1_fu_294_p2();
    void thread_add_ln17_2_fu_327_p2();
    void thread_add_ln17_3_fu_279_p2();
    void thread_add_ln17_fu_284_p2();
    void thread_add_ln21_fu_234_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_return();
    void thread_c_fu_248_p2();
    void thread_centroids_address0();
    void thread_centroids_ce0();
    void thread_data_in_address0();
    void thread_data_in_ce0();
    void thread_data_out_address0();
    void thread_data_out_ce0();
    void thread_data_out_d0();
    void thread_data_out_we0();
    void thread_i_fu_228_p2();
    void thread_icmp_ln10_fu_206_p2();
    void thread_icmp_ln12_fu_222_p2();
    void thread_icmp_ln14_fu_243_p2();
    void thread_icmp_ln16_fu_268_p2();
    void thread_icmp_ln19_fu_305_p2();
    void thread_j_fu_273_p2();
    void thread_select_ln19_1_fu_319_p3();
    void thread_select_ln19_fu_311_p3();
    void thread_sext_ln17_1_fu_300_p1();
    void thread_sext_ln17_fu_289_p1();
    void thread_sp_fu_212_p2();
    void thread_sum_fu_333_p2();
    void thread_zext_ln12_fu_218_p1();
    void thread_zext_ln14_fu_239_p1();
    void thread_zext_ln20_fu_264_p1();
    void thread_zext_ln24_1_fu_259_p1();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
