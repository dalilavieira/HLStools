

================================================================
== Vivado HLS Report for 'poly5'
================================================================
* Date:           Mon Apr 27 12:25:17 2020

* Version:        2019.1 (Build 2552052 on Fri May 24 15:28:33 MDT 2019)
* Project:        proj
* Solution:       sol
* Product family: virtexuplus
* Target device:  xcvu9p-flgb2104-2-i


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|     8.167|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-------+-------+-------+-------+---------+
    |    Latency    |    Interval   | Pipeline|
    |  min  |  max  |  min  |  max  |   Type  |
    +-------+-------+-------+-------+---------+
    |  30202|  30202|  30202|  30202|   none  |
    +-------+-------+-------+-------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------+-------+-------+----------+-----------+-----------+------+----------+
        |             |    Latency    | Iteration|  Initiation Interval  | Trip |          |
        |  Loop Name  |  min  |  max  |  Latency |  achieved |   target  | Count| Pipelined|
        +-------------+-------+-------+----------+-----------+-----------+------+----------+
        |- Loop 1     |  30200|  30200|       302|          -|          -|   100|    no    |
        | + Loop 1.1  |    300|    300|         3|          -|          -|   100|    no    |
        +-------------+-------+-------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 6
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 6 3 
3 --> 4 2 
4 --> 5 
5 --> 3 
6 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 0.60>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([100 x i16]* %a) nounwind, !map !7"   --->   Operation 7 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([100 x i16]* %b) nounwind, !map !13"   --->   Operation 8 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([100 x i16]* %c) nounwind, !map !17"   --->   Operation 9 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([100 x i32]* %out_r) nounwind, !map !21"   --->   Operation 10 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%out_addr = getelementptr [100 x i32]* %out_r, i64 0, i64 0" [poly5.cpp:3]   --->   Operation 11 'getelementptr' 'out_addr' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32 0) nounwind, !map !25"   --->   Operation 12 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecTopModule([6 x i8]* @poly5_str) nounwind"   --->   Operation 13 'spectopmodule' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.60ns)   --->   "br label %.loopexit" [poly5.cpp:10]   --->   Operation 14 'br' <Predicate = true> <Delay = 0.60>

State 2 <SV = 1> <Delay = 1.15>
ST_2 : Operation 15 [1/1] (0.00ns)   --->   "%i_0 = phi i7 [ 0, %0 ], [ %i, %.loopexit.loopexit ]"   --->   Operation 15 'phi' 'i_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 16 [1/1] (0.59ns)   --->   "%icmp_ln10 = icmp eq i7 %i_0, -28" [poly5.cpp:10]   --->   Operation 16 'icmp' 'icmp_ln10' <Predicate = true> <Delay = 0.59> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.59> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 17 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 100, i64 100, i64 100) nounwind"   --->   Operation 17 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 18 [1/1] (0.40ns)   --->   "%i = add i7 %i_0, 1" [poly5.cpp:10]   --->   Operation 18 'add' 'i' <Predicate = true> <Delay = 0.40> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.66> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 19 [1/1] (0.00ns)   --->   "br i1 %icmp_ln10, label %2, label %.preheader.preheader" [poly5.cpp:10]   --->   Operation 19 'br' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 20 [1/1] (0.60ns)   --->   "br label %.preheader" [poly5.cpp:12]   --->   Operation 20 'br' <Predicate = (!icmp_ln10)> <Delay = 0.60>
ST_2 : Operation 21 [2/2] (1.15ns)   --->   "%v = load i32* %out_addr, align 4" [poly5.cpp:23]   --->   Operation 21 'load' 'v' <Predicate = (icmp_ln10)> <Delay = 1.15> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 100> <RAM>

State 3 <SV = 2> <Delay = 1.70>
ST_3 : Operation 22 [1/1] (0.00ns)   --->   "%k_0 = phi i7 [ %k, %1 ], [ 0, %.preheader.preheader ]"   --->   Operation 22 'phi' 'k_0' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 23 [1/1] (0.00ns)   --->   "%zext_ln12 = zext i7 %k_0 to i10" [poly5.cpp:12]   --->   Operation 23 'zext' 'zext_ln12' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 24 [1/1] (0.59ns)   --->   "%icmp_ln12 = icmp eq i7 %k_0, -28" [poly5.cpp:12]   --->   Operation 24 'icmp' 'icmp_ln12' <Predicate = true> <Delay = 0.59> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.59> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 25 [1/1] (0.00ns)   --->   "%empty_2 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 100, i64 100, i64 100) nounwind"   --->   Operation 25 'speclooptripcount' 'empty_2' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 26 [1/1] (0.40ns)   --->   "%k = add i7 %k_0, 1" [poly5.cpp:12]   --->   Operation 26 'add' 'k' <Predicate = true> <Delay = 0.40> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.66> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 27 [1/1] (0.00ns)   --->   "br i1 %icmp_ln12, label %.loopexit.loopexit, label %1" [poly5.cpp:12]   --->   Operation 27 'br' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 28 [1/1] (0.00ns)   --->   "%zext_ln13 = zext i7 %k_0 to i64" [poly5.cpp:13]   --->   Operation 28 'zext' 'zext_ln13' <Predicate = (!icmp_ln12)> <Delay = 0.00>
ST_3 : Operation 29 [1/1] (0.00ns)   --->   "%a_addr = getelementptr [100 x i16]* %a, i64 0, i64 %zext_ln13" [poly5.cpp:13]   --->   Operation 29 'getelementptr' 'a_addr' <Predicate = (!icmp_ln12)> <Delay = 0.00>
ST_3 : Operation 30 [2/2] (1.15ns)   --->   "%a_load = load i16* %a_addr, align 2" [poly5.cpp:13]   --->   Operation 30 'load' 'a_load' <Predicate = (!icmp_ln12)> <Delay = 1.15> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 100> <RAM>
ST_3 : Operation 31 [1/1] (0.54ns)   --->   "%add_ln13 = add i10 %zext_ln12, -432" [poly5.cpp:13]   --->   Operation 31 'add' 'add_ln13' <Predicate = (!icmp_ln12)> <Delay = 0.54> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.66> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 32 [1/1] (0.00ns)   --->   "%sext_ln13_1 = sext i10 %add_ln13 to i64" [poly5.cpp:13]   --->   Operation 32 'sext' 'sext_ln13_1' <Predicate = (!icmp_ln12)> <Delay = 0.00>
ST_3 : Operation 33 [1/1] (0.00ns)   --->   "%a_addr_1 = getelementptr [100 x i16]* %a, i64 0, i64 %sext_ln13_1" [poly5.cpp:13]   --->   Operation 33 'getelementptr' 'a_addr_1' <Predicate = (!icmp_ln12)> <Delay = 0.00>
ST_3 : Operation 34 [2/2] (1.15ns)   --->   "%a_load_1 = load i16* %a_addr_1, align 2" [poly5.cpp:13]   --->   Operation 34 'load' 'a_load_1' <Predicate = (!icmp_ln12)> <Delay = 1.15> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 100> <RAM>
ST_3 : Operation 35 [1/1] (0.00ns)   --->   "%b_addr = getelementptr [100 x i16]* %b, i64 0, i64 %zext_ln13" [poly5.cpp:13]   --->   Operation 35 'getelementptr' 'b_addr' <Predicate = (!icmp_ln12)> <Delay = 0.00>
ST_3 : Operation 36 [2/2] (1.15ns)   --->   "%b_load = load i16* %b_addr, align 2" [poly5.cpp:13]   --->   Operation 36 'load' 'b_load' <Predicate = (!icmp_ln12)> <Delay = 1.15> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 100> <RAM>
ST_3 : Operation 37 [1/1] (0.00ns)   --->   "%c_addr = getelementptr [100 x i16]* %c, i64 0, i64 %zext_ln13" [poly5.cpp:13]   --->   Operation 37 'getelementptr' 'c_addr' <Predicate = (!icmp_ln12)> <Delay = 0.00>
ST_3 : Operation 38 [2/2] (1.15ns)   --->   "%c_load = load i16* %c_addr, align 2" [poly5.cpp:13]   --->   Operation 38 'load' 'c_load' <Predicate = (!icmp_ln12)> <Delay = 1.15> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 100> <RAM>
ST_3 : Operation 39 [1/1] (0.00ns)   --->   "br label %.loopexit"   --->   Operation 39 'br' <Predicate = (icmp_ln12)> <Delay = 0.00>

State 4 <SV = 3> <Delay = 7.53>
ST_4 : Operation 40 [1/2] (1.15ns)   --->   "%a_load = load i16* %a_addr, align 2" [poly5.cpp:13]   --->   Operation 40 'load' 'a_load' <Predicate = true> <Delay = 1.15> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 100> <RAM>
ST_4 : Operation 41 [1/1] (0.00ns)   --->   "%sext_ln13 = sext i16 %a_load to i32" [poly5.cpp:13]   --->   Operation 41 'sext' 'sext_ln13' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 42 [1/1] (0.00ns)   --->   "%sext_ln13_5 = sext i16 %a_load to i17" [poly5.cpp:13]   --->   Operation 42 'sext' 'sext_ln13_5' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 43 [1/2] (1.15ns)   --->   "%a_load_1 = load i16* %a_addr_1, align 2" [poly5.cpp:13]   --->   Operation 43 'load' 'a_load_1' <Predicate = true> <Delay = 1.15> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 100> <RAM>
ST_4 : Operation 44 [1/1] (0.00ns)   --->   "%sext_ln13_2 = sext i16 %a_load_1 to i32" [poly5.cpp:13]   --->   Operation 44 'sext' 'sext_ln13_2' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 45 [1/1] (0.49ns) (grouped into DSP with root node add_ln13_1)   --->   "%mul_ln13 = mul nsw i32 %sext_ln13_2, %sext_ln13" [poly5.cpp:13]   --->   Operation 45 'mul' 'mul_ln13' <Predicate = true> <Delay = 0.49> <Core = "DSP48">   --->   Core 88 'DSP48' <Latency = 0> <II = 1> <Delay = 2.53> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 2> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 46 [1/1] (2.03ns) (root node of the DSP)   --->   "%add_ln13_1 = add nsw i32 %mul_ln13, 62208" [poly5.cpp:13]   --->   Operation 46 'add' 'add_ln13_1' <Predicate = true> <Delay = 2.03> <Core = "DSP48">   --->   Core 88 'DSP48' <Latency = 0> <II = 1> <Delay = 2.53> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 2> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 47 [1/1] (3.17ns)   --->   "%mul_ln13_1 = mul nsw i32 %sext_ln13, %add_ln13_1" [poly5.cpp:13]   --->   Operation 47 'mul' 'mul_ln13_1' <Predicate = true> <Delay = 3.17> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 3.17> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 48 [1/1] (0.66ns)   --->   "%add_ln13_2 = add nsw i32 %mul_ln13_1, -2985984" [poly5.cpp:13]   --->   Operation 48 'add' 'add_ln13_2' <Predicate = true> <Delay = 0.66> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.66> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 49 [1/2] (1.15ns)   --->   "%b_load = load i16* %b_addr, align 2" [poly5.cpp:13]   --->   Operation 49 'load' 'b_load' <Predicate = true> <Delay = 1.15> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 100> <RAM>
ST_4 : Operation 50 [1/1] (0.00ns)   --->   "%sext_ln13_3 = sext i16 %b_load to i32" [poly5.cpp:13]   --->   Operation 50 'sext' 'sext_ln13_3' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 51 [1/1] (0.00ns)   --->   "%sext_ln13_6 = sext i16 %a_load to i23" [poly5.cpp:13]   --->   Operation 51 'sext' 'sext_ln13_6' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 52 [1/1] (0.49ns) (grouped into DSP with root node add_ln13_3)   --->   "%mul_ln13_2 = mul i23 %sext_ln13_6, 78" [poly5.cpp:13]   --->   Operation 52 'mul' 'mul_ln13_2' <Predicate = true> <Delay = 0.49> <Core = "DSP48">   --->   Core 88 'DSP48' <Latency = 0> <II = 1> <Delay = 2.53> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 2> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 53 [1/1] (2.03ns) (root node of the DSP)   --->   "%add_ln13_3 = add i23 %mul_ln13_2, -9504" [poly5.cpp:13]   --->   Operation 53 'add' 'add_ln13_3' <Predicate = true> <Delay = 2.03> <Core = "DSP48">   --->   Core 88 'DSP48' <Latency = 0> <II = 1> <Delay = 2.53> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 2> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 54 [1/1] (0.00ns)   --->   "%sext_ln13_7 = sext i23 %add_ln13_3 to i32" [poly5.cpp:13]   --->   Operation 54 'sext' 'sext_ln13_7' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 55 [1/1] (0.49ns) (grouped into DSP with root node add_ln13_5)   --->   "%mul_ln13_3 = mul nsw i32 %sext_ln13, %sext_ln13_7" [poly5.cpp:13]   --->   Operation 55 'mul' 'mul_ln13_3' <Predicate = true> <Delay = 0.49> <Core = "DSP48">   --->   Core 88 'DSP48' <Latency = 0> <II = 1> <Delay = 2.53> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 2> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 56 [1/1] (0.00ns)   --->   "%shl_ln = call i24 @_ssdm_op_BitConcatenate.i24.i16.i8(i16 %a_load, i8 0)" [poly5.cpp:13]   --->   Operation 56 'bitconcatenate' 'shl_ln' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 57 [1/1] (0.00ns)   --->   "%sext_ln13_8 = sext i24 %shl_ln to i25" [poly5.cpp:13]   --->   Operation 57 'sext' 'sext_ln13_8' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 58 [1/1] (0.00ns)   --->   "%shl_ln13_1 = call i21 @_ssdm_op_BitConcatenate.i21.i16.i5(i16 %a_load, i5 0)" [poly5.cpp:13]   --->   Operation 58 'bitconcatenate' 'shl_ln13_1' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 59 [1/1] (0.00ns)   --->   "%sext_ln13_9 = sext i21 %shl_ln13_1 to i22" [poly5.cpp:13]   --->   Operation 59 'sext' 'sext_ln13_9' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 60 [1/1] (0.57ns)   --->   "%add_ln13_8 = add i22 %sext_ln13_9, -5184" [poly5.cpp:13]   --->   Operation 60 'add' 'add_ln13_8' <Predicate = true> <Delay = 0.57> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.66> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 61 [1/1] (0.00ns)   --->   "%sext_ln13_10 = sext i22 %add_ln13_8 to i25" [poly5.cpp:13]   --->   Operation 61 'sext' 'sext_ln13_10' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 62 [1/1] (0.00ns) (grouped into DSP with root node mul_ln13_4)   --->   "%add_ln13_4 = add i25 %sext_ln13_8, %sext_ln13_10" [poly5.cpp:13]   --->   Operation 62 'add' 'add_ln13_4' <Predicate = true> <Delay = 0.00> <Core = "DSP48">   --->   Core 88 'DSP48' <Latency = 0> <II = 1> <Delay = 2.53> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 2> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 63 [1/1] (0.00ns) (grouped into DSP with root node mul_ln13_4)   --->   "%sext_ln13_11 = sext i25 %add_ln13_4 to i32" [poly5.cpp:13]   --->   Operation 63 'sext' 'sext_ln13_11' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 64 [1/1] (2.53ns) (root node of the DSP)   --->   "%mul_ln13_4 = mul nsw i32 %sext_ln13_3, %sext_ln13_11" [poly5.cpp:13]   --->   Operation 64 'mul' 'mul_ln13_4' <Predicate = true> <Delay = 2.53> <Core = "DSP48">   --->   Core 88 'DSP48' <Latency = 0> <II = 1> <Delay = 2.53> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 2> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 65 [1/1] (2.03ns) (root node of the DSP)   --->   "%add_ln13_5 = add nsw i32 %mul_ln13_4, %mul_ln13_3" [poly5.cpp:13]   --->   Operation 65 'add' 'add_ln13_5' <Predicate = true> <Delay = 2.03> <Core = "DSP48">   --->   Core 88 'DSP48' <Latency = 0> <II = 1> <Delay = 2.53> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 2> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 66 [1/2] (1.15ns)   --->   "%c_load = load i16* %c_addr, align 2" [poly5.cpp:13]   --->   Operation 66 'load' 'c_load' <Predicate = true> <Delay = 1.15> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 100> <RAM>
ST_4 : Operation 67 [1/1] (0.00ns)   --->   "%sext_ln13_12 = sext i16 %c_load to i18" [poly5.cpp:13]   --->   Operation 67 'sext' 'sext_ln13_12' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 68 [1/1] (0.00ns) (grouped into DSP with root node add_ln13_9)   --->   "%add_ln13_6 = add i17 %sext_ln13_5, -207" [poly5.cpp:13]   --->   Operation 68 'add' 'add_ln13_6' <Predicate = true> <Delay = 0.00> <Core = "DSP48">   --->   Core 88 'DSP48' <Latency = 0> <II = 1> <Delay = 2.53> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 2> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 69 [1/1] (0.00ns) (grouped into DSP with root node add_ln13_9)   --->   "%sext_ln13_13 = sext i17 %add_ln13_6 to i32" [poly5.cpp:13]   --->   Operation 69 'sext' 'sext_ln13_13' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 70 [1/1] (0.49ns) (grouped into DSP with root node add_ln13_9)   --->   "%mul_ln13_6 = mul nsw i32 %sext_ln13, %sext_ln13_13" [poly5.cpp:13]   --->   Operation 70 'mul' 'mul_ln13_6' <Predicate = true> <Delay = 0.49> <Core = "DSP48">   --->   Core 88 'DSP48' <Latency = 0> <II = 1> <Delay = 2.53> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 2> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 71 [1/1] (0.00ns)   --->   "%shl_ln13_2 = call i17 @_ssdm_op_BitConcatenate.i17.i16.i1(i16 %a_load, i1 false)" [poly5.cpp:13]   --->   Operation 71 'bitconcatenate' 'shl_ln13_2' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 72 [1/1] (0.00ns)   --->   "%sext_ln13_14 = sext i17 %shl_ln13_2 to i18" [poly5.cpp:13]   --->   Operation 72 'sext' 'sext_ln13_14' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 73 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln13_7 = add i18 %sext_ln13_14, 144" [poly5.cpp:13]   --->   Operation 73 'add' 'add_ln13_7' <Predicate = true> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.34> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 74 [1/1] (0.68ns) (root node of TernaryAdder)   --->   "%sub_ln13 = sub i18 %add_ln13_7, %sext_ln13_12" [poly5.cpp:13]   --->   Operation 74 'sub' 'sub_ln13' <Predicate = true> <Delay = 0.68> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.34> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 75 [1/1] (0.00ns)   --->   "%sext_ln13_15 = sext i18 %sub_ln13 to i32" [poly5.cpp:13]   --->   Operation 75 'sext' 'sext_ln13_15' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 76 [1/1] (0.49ns) (grouped into DSP with root node sub_ln13_1)   --->   "%mul_ln13_7 = mul nsw i32 %sext_ln13_3, %sext_ln13_15" [poly5.cpp:13]   --->   Operation 76 'mul' 'mul_ln13_7' <Predicate = true> <Delay = 0.49> <Core = "DSP48">   --->   Core 88 'DSP48' <Latency = 0> <II = 1> <Delay = 2.53> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 2> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 77 [1/1] (2.03ns) (root node of the DSP)   --->   "%add_ln13_9 = add i32 %mul_ln13_6, 3456" [poly5.cpp:13]   --->   Operation 77 'add' 'add_ln13_9' <Predicate = true> <Delay = 2.03> <Core = "DSP48">   --->   Core 88 'DSP48' <Latency = 0> <II = 1> <Delay = 2.53> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 2> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 78 [1/1] (2.03ns) (root node of the DSP)   --->   "%sub_ln13_1 = sub i32 %add_ln13_9, %mul_ln13_7" [poly5.cpp:13]   --->   Operation 78 'sub' 'sub_ln13_1' <Predicate = true> <Delay = 2.03> <Core = "DSP48">   --->   Core 88 'DSP48' <Latency = 0> <II = 1> <Delay = 2.53> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 2> <OutPorts = 1> <Sync> <CReg>

State 5 <SV = 4> <Delay = 8.16>
ST_5 : Operation 79 [1/1] (3.17ns)   --->   "%mul_ln13_5 = mul i32 %add_ln13_5, %add_ln13_2" [poly5.cpp:13]   --->   Operation 79 'mul' 'mul_ln13_5' <Predicate = true> <Delay = 3.17> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 3.17> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 80 [1/1] (0.00ns)   --->   "%sext_ln13_4 = sext i16 %c_load to i32" [poly5.cpp:13]   --->   Operation 80 'sext' 'sext_ln13_4' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 81 [1/1] (3.17ns)   --->   "%mul_ln13_8 = mul i32 %sext_ln13_4, %sub_ln13_1" [poly5.cpp:13]   --->   Operation 81 'mul' 'mul_ln13_8' <Predicate = true> <Delay = 3.17> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 3.17> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 82 [1/1] (0.66ns)   --->   "%tmp = add i32 %mul_ln13_8, %mul_ln13_5" [poly5.cpp:13]   --->   Operation 82 'add' 'tmp' <Predicate = true> <Delay = 0.66> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.66> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 83 [1/1] (2.53ns) (root node of the DSP)   --->   "%mul_ln13_9 = mul i32 %sext_ln13_4, %sext_ln13_3" [poly5.cpp:13]   --->   Operation 83 'mul' 'mul_ln13_9' <Predicate = true> <Delay = 2.53> <Core = "DSP48">   --->   Core 88 'DSP48' <Latency = 0> <II = 1> <Delay = 2.53> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 2> <OutPorts = 1> <Sync> <CReg>
ST_5 : Operation 84 [1/1] (3.17ns)   --->   "%mul_ln13_10 = mul i32 %tmp, %mul_ln13_9" [poly5.cpp:13]   --->   Operation 84 'mul' 'mul_ln13_10' <Predicate = true> <Delay = 3.17> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 3.17> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 85 [1/1] (0.00ns)   --->   "%out_addr_1 = getelementptr [100 x i32]* %out_r, i64 0, i64 %zext_ln13" [poly5.cpp:13]   --->   Operation 85 'getelementptr' 'out_addr_1' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 86 [1/1] (1.15ns)   --->   "store i32 %mul_ln13_10, i32* %out_addr_1, align 4" [poly5.cpp:13]   --->   Operation 86 'store' <Predicate = true> <Delay = 1.15> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 100> <RAM>
ST_5 : Operation 87 [1/1] (0.00ns)   --->   "br label %.preheader" [poly5.cpp:12]   --->   Operation 87 'br' <Predicate = true> <Delay = 0.00>

State 6 <SV = 2> <Delay = 1.15>
ST_6 : Operation 88 [1/2] (1.15ns)   --->   "%v = load i32* %out_addr, align 4" [poly5.cpp:23]   --->   Operation 88 'load' 'v' <Predicate = true> <Delay = 1.15> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 100> <RAM>
ST_6 : Operation 89 [1/1] (0.00ns)   --->   "ret i32 %v" [poly5.cpp:30]   --->   Operation 89 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 0.603ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('i') with incoming values : ('i', poly5.cpp:10) [14]  (0.603 ns)

 <State 2>: 1.16ns
The critical path consists of the following:
	'load' operation ('v', poly5.cpp:23) on array 'out_r' [87]  (1.16 ns)

 <State 3>: 1.7ns
The critical path consists of the following:
	'phi' operation ('k') with incoming values : ('k', poly5.cpp:12) [22]  (0 ns)
	'add' operation ('add_ln13', poly5.cpp:13) [34]  (0.543 ns)
	'getelementptr' operation ('a_addr_1', poly5.cpp:13) [36]  (0 ns)
	'load' operation ('a_load_1', poly5.cpp:13) on array 'a' [37]  (1.16 ns)

 <State 4>: 7.53ns
The critical path consists of the following:
	'load' operation ('a_load', poly5.cpp:13) on array 'a' [31]  (1.16 ns)
	'mul' operation of DSP[40] ('mul_ln13', poly5.cpp:13) [39]  (0.494 ns)
	'add' operation of DSP[40] ('add_ln13_1', poly5.cpp:13) [40]  (2.04 ns)
	'mul' operation ('mul_ln13_1', poly5.cpp:13) [41]  (3.17 ns)
	'add' operation ('add_ln13_2', poly5.cpp:13) [42]  (0.669 ns)

 <State 5>: 8.17ns
The critical path consists of the following:
	'mul' operation ('mul_ln13_5', poly5.cpp:13) [61]  (3.17 ns)
	'add' operation ('tmp', poly5.cpp:13) [78]  (0.669 ns)
	'mul' operation ('mul_ln13_10', poly5.cpp:13) [80]  (3.17 ns)
	'store' operation ('store_ln13', poly5.cpp:13) of variable 'mul_ln13_10', poly5.cpp:13 on array 'out_r' [82]  (1.16 ns)

 <State 6>: 1.16ns
The critical path consists of the following:
	'load' operation ('v', poly5.cpp:23) on array 'out_r' [87]  (1.16 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
