

================================================================
== Vivado HLS Report for 'qspline'
================================================================
* Date:           Mon Apr 27 13:57:49 2020

* Version:        2019.1 (Build 2552052 on Fri May 24 15:28:33 MDT 2019)
* Project:        proj
* Solution:       sol
* Product family: virtexuplus
* Target device:  xcvu9p-flgb2104-2-i


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|     8.261|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-------+-------+-------+-------+---------+
    |    Latency    |    Interval   | Pipeline|
    |  min  |  max  |  min  |  max  |   Type  |
    +-------+-------+-------+-------+---------+
    |  30202|  30202|  30202|  30202|   none  |
    +-------+-------+-------+-------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------+-------+-------+----------+-----------+-----------+------+----------+
        |             |    Latency    | Iteration|  Initiation Interval  | Trip |          |
        |  Loop Name  |  min  |  max  |  Latency |  achieved |   target  | Count| Pipelined|
        +-------------+-------+-------+----------+-----------+-----------+------+----------+
        |- Loop 1     |  30200|  30200|       302|          -|          -|   100|    no    |
        | + Loop 1.1  |    300|    300|         3|          -|          -|   100|    no    |
        +-------------+-------+-------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 6
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 6 3 
3 --> 4 2 
4 --> 5 
5 --> 3 
6 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 0.60>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([100 x i16]* %a) nounwind, !map !7"   --->   Operation 7 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([100 x i16]* %b) nounwind, !map !13"   --->   Operation 8 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([100 x i16]* %c) nounwind, !map !17"   --->   Operation 9 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([100 x i16]* %d) nounwind, !map !21"   --->   Operation 10 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([100 x i16]* %e) nounwind, !map !25"   --->   Operation 11 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([100 x i16]* %f) nounwind, !map !29"   --->   Operation 12 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([100 x i16]* %g) nounwind, !map !33"   --->   Operation 13 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([100 x i32]* %out_r) nounwind, !map !37"   --->   Operation 14 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%out_addr = getelementptr [100 x i32]* %out_r, i64 0, i64 0" [qspline.cpp:3]   --->   Operation 15 'getelementptr' 'out_addr' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32 0) nounwind, !map !41"   --->   Operation 16 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecTopModule([8 x i8]* @qspline_str) nounwind"   --->   Operation 17 'spectopmodule' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.60ns)   --->   "br label %.loopexit" [qspline.cpp:9]   --->   Operation 18 'br' <Predicate = true> <Delay = 0.60>

State 2 <SV = 1> <Delay = 1.15>
ST_2 : Operation 19 [1/1] (0.00ns)   --->   "%i_0 = phi i7 [ 0, %0 ], [ %i, %.loopexit.loopexit ]"   --->   Operation 19 'phi' 'i_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 20 [1/1] (0.59ns)   --->   "%icmp_ln9 = icmp eq i7 %i_0, -28" [qspline.cpp:9]   --->   Operation 20 'icmp' 'icmp_ln9' <Predicate = true> <Delay = 0.59> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.59> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 21 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 100, i64 100, i64 100) nounwind"   --->   Operation 21 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 22 [1/1] (0.40ns)   --->   "%i = add i7 %i_0, 1" [qspline.cpp:9]   --->   Operation 22 'add' 'i' <Predicate = true> <Delay = 0.40> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.66> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 23 [1/1] (0.00ns)   --->   "br i1 %icmp_ln9, label %2, label %.preheader.preheader" [qspline.cpp:9]   --->   Operation 23 'br' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 24 [1/1] (0.60ns)   --->   "br label %.preheader" [qspline.cpp:11]   --->   Operation 24 'br' <Predicate = (!icmp_ln9)> <Delay = 0.60>
ST_2 : Operation 25 [2/2] (1.15ns)   --->   "%v = load i32* %out_addr, align 4" [qspline.cpp:21]   --->   Operation 25 'load' 'v' <Predicate = (icmp_ln9)> <Delay = 1.15> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 100> <RAM>

State 3 <SV = 2> <Delay = 1.15>
ST_3 : Operation 26 [1/1] (0.00ns)   --->   "%k_0 = phi i7 [ %k, %1 ], [ 0, %.preheader.preheader ]"   --->   Operation 26 'phi' 'k_0' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 27 [1/1] (0.59ns)   --->   "%icmp_ln11 = icmp eq i7 %k_0, -28" [qspline.cpp:11]   --->   Operation 27 'icmp' 'icmp_ln11' <Predicate = true> <Delay = 0.59> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.59> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 28 [1/1] (0.00ns)   --->   "%empty_2 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 100, i64 100, i64 100) nounwind"   --->   Operation 28 'speclooptripcount' 'empty_2' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 29 [1/1] (0.40ns)   --->   "%k = add i7 %k_0, 1" [qspline.cpp:11]   --->   Operation 29 'add' 'k' <Predicate = true> <Delay = 0.40> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.66> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 30 [1/1] (0.00ns)   --->   "br i1 %icmp_ln11, label %.loopexit.loopexit, label %1" [qspline.cpp:11]   --->   Operation 30 'br' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 31 [1/1] (0.00ns)   --->   "%zext_ln12 = zext i7 %k_0 to i64" [qspline.cpp:12]   --->   Operation 31 'zext' 'zext_ln12' <Predicate = (!icmp_ln11)> <Delay = 0.00>
ST_3 : Operation 32 [1/1] (0.00ns)   --->   "%b_addr = getelementptr [100 x i16]* %b, i64 0, i64 %zext_ln12" [qspline.cpp:12]   --->   Operation 32 'getelementptr' 'b_addr' <Predicate = (!icmp_ln11)> <Delay = 0.00>
ST_3 : Operation 33 [2/2] (1.15ns)   --->   "%b_load = load i16* %b_addr, align 2" [qspline.cpp:12]   --->   Operation 33 'load' 'b_load' <Predicate = (!icmp_ln11)> <Delay = 1.15> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 100> <RAM>
ST_3 : Operation 34 [1/1] (0.00ns)   --->   "%a_addr = getelementptr [100 x i16]* %a, i64 0, i64 %zext_ln12" [qspline.cpp:12]   --->   Operation 34 'getelementptr' 'a_addr' <Predicate = (!icmp_ln11)> <Delay = 0.00>
ST_3 : Operation 35 [2/2] (1.15ns)   --->   "%a_load = load i16* %a_addr, align 2" [qspline.cpp:12]   --->   Operation 35 'load' 'a_load' <Predicate = (!icmp_ln11)> <Delay = 1.15> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 100> <RAM>
ST_3 : Operation 36 [1/1] (0.00ns)   --->   "%f_addr = getelementptr [100 x i16]* %f, i64 0, i64 %zext_ln12" [qspline.cpp:12]   --->   Operation 36 'getelementptr' 'f_addr' <Predicate = (!icmp_ln11)> <Delay = 0.00>
ST_3 : Operation 37 [2/2] (1.15ns)   --->   "%f_load = load i16* %f_addr, align 2" [qspline.cpp:12]   --->   Operation 37 'load' 'f_load' <Predicate = (!icmp_ln11)> <Delay = 1.15> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 100> <RAM>
ST_3 : Operation 38 [1/1] (0.00ns)   --->   "%c_addr = getelementptr [100 x i16]* %c, i64 0, i64 %zext_ln12" [qspline.cpp:12]   --->   Operation 38 'getelementptr' 'c_addr' <Predicate = (!icmp_ln11)> <Delay = 0.00>
ST_3 : Operation 39 [2/2] (1.15ns)   --->   "%c_load = load i16* %c_addr, align 2" [qspline.cpp:12]   --->   Operation 39 'load' 'c_load' <Predicate = (!icmp_ln11)> <Delay = 1.15> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 100> <RAM>
ST_3 : Operation 40 [1/1] (0.00ns)   --->   "%e_addr = getelementptr [100 x i16]* %e, i64 0, i64 %zext_ln12" [qspline.cpp:12]   --->   Operation 40 'getelementptr' 'e_addr' <Predicate = (!icmp_ln11)> <Delay = 0.00>
ST_3 : Operation 41 [2/2] (1.15ns)   --->   "%e_load = load i16* %e_addr, align 2" [qspline.cpp:12]   --->   Operation 41 'load' 'e_load' <Predicate = (!icmp_ln11)> <Delay = 1.15> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 100> <RAM>
ST_3 : Operation 42 [1/1] (0.00ns)   --->   "%g_addr = getelementptr [100 x i16]* %g, i64 0, i64 %zext_ln12" [qspline.cpp:12]   --->   Operation 42 'getelementptr' 'g_addr' <Predicate = (!icmp_ln11)> <Delay = 0.00>
ST_3 : Operation 43 [2/2] (1.15ns)   --->   "%g_load = load i16* %g_addr, align 2" [qspline.cpp:12]   --->   Operation 43 'load' 'g_load' <Predicate = (!icmp_ln11)> <Delay = 1.15> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 100> <RAM>
ST_3 : Operation 44 [1/1] (0.00ns)   --->   "br label %.loopexit"   --->   Operation 44 'br' <Predicate = (icmp_ln11)> <Delay = 0.00>

State 4 <SV = 3> <Delay = 8.26>
ST_4 : Operation 45 [1/2] (1.15ns)   --->   "%b_load = load i16* %b_addr, align 2" [qspline.cpp:12]   --->   Operation 45 'load' 'b_load' <Predicate = true> <Delay = 1.15> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 100> <RAM>
ST_4 : Operation 46 [1/1] (0.00ns)   --->   "%sext_ln12 = sext i16 %b_load to i32" [qspline.cpp:12]   --->   Operation 46 'sext' 'sext_ln12' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 47 [1/2] (1.15ns)   --->   "%a_load = load i16* %a_addr, align 2" [qspline.cpp:12]   --->   Operation 47 'load' 'a_load' <Predicate = true> <Delay = 1.15> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 100> <RAM>
ST_4 : Operation 48 [1/1] (0.00ns)   --->   "%sext_ln12_1 = sext i16 %a_load to i32" [qspline.cpp:12]   --->   Operation 48 'sext' 'sext_ln12_1' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 49 [1/1] (2.53ns) (root node of the DSP)   --->   "%mul_ln12 = mul i32 %sext_ln12, %sext_ln12" [qspline.cpp:12]   --->   Operation 49 'mul' 'mul_ln12' <Predicate = true> <Delay = 2.53> <Core = "DSP48">   --->   Core 88 'DSP48' <Latency = 0> <II = 1> <Delay = 2.53> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 2> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 50 [1/1] (2.53ns) (root node of the DSP)   --->   "%mul_ln12_1 = mul i32 %sext_ln12, %sext_ln12_1" [qspline.cpp:12]   --->   Operation 50 'mul' 'mul_ln12_1' <Predicate = true> <Delay = 2.53> <Core = "DSP48">   --->   Core 88 'DSP48' <Latency = 0> <II = 1> <Delay = 2.53> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 2> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 51 [1/1] (3.17ns)   --->   "%mul_ln12_2 = mul i32 %mul_ln12_1, %mul_ln12" [qspline.cpp:12]   --->   Operation 51 'mul' 'mul_ln12_2' <Predicate = true> <Delay = 3.17> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 3.17> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 52 [1/2] (1.15ns)   --->   "%f_load = load i16* %f_addr, align 2" [qspline.cpp:12]   --->   Operation 52 'load' 'f_load' <Predicate = true> <Delay = 1.15> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 100> <RAM>
ST_4 : Operation 53 [1/1] (0.00ns)   --->   "%sext_ln12_2 = sext i16 %f_load to i32" [qspline.cpp:12]   --->   Operation 53 'sext' 'sext_ln12_2' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 54 [1/2] (1.15ns)   --->   "%c_load = load i16* %c_addr, align 2" [qspline.cpp:12]   --->   Operation 54 'load' 'c_load' <Predicate = true> <Delay = 1.15> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 100> <RAM>
ST_4 : Operation 55 [1/1] (0.00ns)   --->   "%sext_ln12_3 = sext i16 %c_load to i32" [qspline.cpp:12]   --->   Operation 55 'sext' 'sext_ln12_3' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 56 [1/1] (3.17ns)   --->   "%mul_ln12_3 = mul i32 %mul_ln12, %sext_ln12_3" [qspline.cpp:12]   --->   Operation 56 'mul' 'mul_ln12_3' <Predicate = true> <Delay = 3.17> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 3.17> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 57 [1/1] (0.00ns)   --->   "%shl_ln12 = shl i32 %mul_ln12_3, 3" [qspline.cpp:12]   --->   Operation 57 'shl' 'shl_ln12' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 58 [1/1] (0.00ns)   --->   "%shl_ln12_1 = shl i32 %mul_ln12_3, 1" [qspline.cpp:12]   --->   Operation 58 'shl' 'shl_ln12_1' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 59 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%sub_ln12 = sub i32 %shl_ln12, %shl_ln12_1" [qspline.cpp:12]   --->   Operation 59 'sub' 'sub_ln12' <Predicate = true> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 60 [1/2] (1.15ns)   --->   "%e_load = load i16* %e_addr, align 2" [qspline.cpp:12]   --->   Operation 60 'load' 'e_load' <Predicate = true> <Delay = 1.15> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 100> <RAM>
ST_4 : Operation 61 [1/1] (0.00ns)   --->   "%sext_ln12_4 = sext i16 %e_load to i32" [qspline.cpp:12]   --->   Operation 61 'sext' 'sext_ln12_4' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 62 [1/2] (1.15ns)   --->   "%g_load = load i16* %g_addr, align 2" [qspline.cpp:12]   --->   Operation 62 'load' 'g_load' <Predicate = true> <Delay = 1.15> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 100> <RAM>
ST_4 : Operation 63 [1/1] (0.00ns)   --->   "%sext_ln12_5 = sext i16 %b_load to i30" [qspline.cpp:12]   --->   Operation 63 'sext' 'sext_ln12_5' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 64 [1/1] (0.00ns)   --->   "%sext_ln12_6 = sext i16 %g_load to i30" [qspline.cpp:12]   --->   Operation 64 'sext' 'sext_ln12_6' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 65 [1/1] (2.53ns) (root node of the DSP)   --->   "%mul_ln12_4 = mul i30 %sext_ln12_6, %sext_ln12_5" [qspline.cpp:12]   --->   Operation 65 'mul' 'mul_ln12_4' <Predicate = true> <Delay = 2.53> <Core = "DSP48">   --->   Core 88 'DSP48' <Latency = 0> <II = 1> <Delay = 2.53> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 2> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 66 [1/1] (0.00ns)   --->   "%shl_ln12_2 = call i32 @_ssdm_op_BitConcatenate.i32.i30.i2(i30 %mul_ln12_4, i2 0)" [qspline.cpp:12]   --->   Operation 66 'bitconcatenate' 'shl_ln12_2' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 67 [1/1] (0.66ns)   --->   "%tmp4 = add i32 %shl_ln12_2, %sext_ln12_4" [qspline.cpp:12]   --->   Operation 67 'add' 'tmp4' <Predicate = true> <Delay = 0.66> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.66> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 68 [1/1] (3.17ns)   --->   "%tmp5 = mul i32 %tmp4, %sext_ln12_2" [qspline.cpp:12]   --->   Operation 68 'mul' 'tmp5' <Predicate = true> <Delay = 3.17> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 3.17> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 69 [1/1] (0.73ns) (root node of TernaryAdder)   --->   "%tmp3 = add i32 %sub_ln12, %tmp5" [qspline.cpp:12]   --->   Operation 69 'add' 'tmp3' <Predicate = true> <Delay = 0.73> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>

State 5 <SV = 4> <Delay = 7.53>
ST_5 : Operation 70 [1/1] (0.66ns)   --->   "%add_ln12 = add i32 %mul_ln12_2, %sext_ln12" [qspline.cpp:12]   --->   Operation 70 'add' 'add_ln12' <Predicate = true> <Delay = 0.66> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.66> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 71 [1/1] (3.17ns)   --->   "%mul_ln12_5 = mul i32 %add_ln12, %sext_ln12" [qspline.cpp:12]   --->   Operation 71 'mul' 'mul_ln12_5' <Predicate = true> <Delay = 3.17> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 3.17> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 72 [1/1] (2.53ns) (root node of the DSP)   --->   "%tmp8 = mul i32 %sext_ln12_2, %sext_ln12_2" [qspline.cpp:12]   --->   Operation 72 'mul' 'tmp8' <Predicate = true> <Delay = 2.53> <Core = "DSP48">   --->   Core 88 'DSP48' <Latency = 0> <II = 1> <Delay = 2.53> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 2> <OutPorts = 1> <Sync> <CReg>
ST_5 : Operation 73 [1/1] (3.17ns)   --->   "%tmp7 = mul i32 %tmp8, %tmp3" [qspline.cpp:12]   --->   Operation 73 'mul' 'tmp7' <Predicate = true> <Delay = 3.17> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 3.17> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 74 [1/1] (0.66ns)   --->   "%add_ln12_1 = add i32 %mul_ln12_5, %tmp7" [qspline.cpp:12]   --->   Operation 74 'add' 'add_ln12_1' <Predicate = true> <Delay = 0.66> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.66> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 75 [1/1] (0.00ns)   --->   "%out_addr_1 = getelementptr [100 x i32]* %out_r, i64 0, i64 %zext_ln12" [qspline.cpp:12]   --->   Operation 75 'getelementptr' 'out_addr_1' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 76 [1/1] (1.15ns)   --->   "store i32 %add_ln12_1, i32* %out_addr_1, align 4" [qspline.cpp:12]   --->   Operation 76 'store' <Predicate = true> <Delay = 1.15> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 100> <RAM>
ST_5 : Operation 77 [1/1] (0.00ns)   --->   "br label %.preheader" [qspline.cpp:11]   --->   Operation 77 'br' <Predicate = true> <Delay = 0.00>

State 6 <SV = 2> <Delay = 1.15>
ST_6 : Operation 78 [1/2] (1.15ns)   --->   "%v = load i32* %out_addr, align 4" [qspline.cpp:21]   --->   Operation 78 'load' 'v' <Predicate = true> <Delay = 1.15> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 100> <RAM>
ST_6 : Operation 79 [1/1] (0.00ns)   --->   "ret i32 %v" [qspline.cpp:32]   --->   Operation 79 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 0.603ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('i') with incoming values : ('i', qspline.cpp:9) [22]  (0.603 ns)

 <State 2>: 1.16ns
The critical path consists of the following:
	'load' operation ('v', qspline.cpp:21) on array 'out_r' [79]  (1.16 ns)

 <State 3>: 1.16ns
The critical path consists of the following:
	'phi' operation ('k') with incoming values : ('k', qspline.cpp:11) [30]  (0 ns)
	'getelementptr' operation ('b_addr', qspline.cpp:12) [37]  (0 ns)
	'load' operation ('b_load', qspline.cpp:12) on array 'b' [38]  (1.16 ns)

 <State 4>: 8.26ns
The critical path consists of the following:
	'load' operation ('b_load', qspline.cpp:12) on array 'b' [38]  (1.16 ns)
	'mul' operation of DSP[63] ('mul_ln12_4', qspline.cpp:12) [63]  (2.53 ns)
	'add' operation ('tmp4', qspline.cpp:12) [67]  (0.669 ns)
	'mul' operation ('tmp5', qspline.cpp:12) [68]  (3.17 ns)
	'add' operation ('tmp3', qspline.cpp:12) [69]  (0.731 ns)

 <State 5>: 7.53ns
The critical path consists of the following:
	'mul' operation of DSP[70] ('tmp8', qspline.cpp:12) [70]  (2.53 ns)
	'mul' operation ('tmp7', qspline.cpp:12) [71]  (3.17 ns)
	'add' operation ('add_ln12_1', qspline.cpp:12) [72]  (0.669 ns)
	'store' operation ('store_ln12', qspline.cpp:12) of variable 'add_ln12_1', qspline.cpp:12 on array 'out_r' [74]  (1.16 ns)

 <State 6>: 1.16ns
The critical path consists of the following:
	'load' operation ('v', qspline.cpp:21) on array 'out_r' [79]  (1.16 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
