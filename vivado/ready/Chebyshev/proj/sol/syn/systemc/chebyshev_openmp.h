// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _chebyshev_openmp_HH_
#define _chebyshev_openmp_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "chebyshev_openmp_data_in.h"
#include "chebyshev_openmp_data_out.h"

namespace ap_rtl {

struct chebyshev_openmp : public sc_module {
    // Port declarations 8
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<32> > idx;
    sc_out< sc_lv<32> > ap_return;


    // Module declarations
    chebyshev_openmp(sc_module_name name);
    SC_HAS_PROCESS(chebyshev_openmp);

    ~chebyshev_openmp();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    chebyshev_openmp_data_in* data_in_U;
    chebyshev_openmp_data_out* data_out_U;
    sc_signal< sc_lv<15> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<27> > k_fu_142_p2;
    sc_signal< sc_lv<27> > k_reg_231;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<1> > icmp_ln66_fu_136_p2;
    sc_signal< sc_lv<7> > i_fu_160_p2;
    sc_signal< sc_lv<7> > i_reg_249;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<1> > icmp_ln73_fu_154_p2;
    sc_signal< sc_lv<27> > k_1_fu_176_p2;
    sc_signal< sc_lv<27> > k_1_reg_262;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<64> > zext_ln78_fu_182_p1;
    sc_signal< sc_lv<64> > zext_ln78_reg_267;
    sc_signal< sc_lv<1> > icmp_ln77_fu_170_p2;
    sc_signal< sc_lv<32> > A_fu_187_p1;
    sc_signal< sc_lv<32> > A_reg_277;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<32> > mul_ln79_fu_191_p2;
    sc_signal< sc_lv<32> > mul_ln79_reg_282;
    sc_signal< sc_lv<32> > mul_ln79_1_fu_208_p2;
    sc_signal< sc_lv<32> > mul_ln79_1_reg_288;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_lv<32> > mul_ln79_2_fu_218_p2;
    sc_signal< sc_lv<32> > mul_ln79_2_reg_293;
    sc_signal< sc_logic > ap_CS_fsm_state10;
    sc_signal< sc_logic > ap_CS_fsm_state11;
    sc_signal< sc_lv<27> > data_in_address0;
    sc_signal< sc_logic > data_in_ce0;
    sc_signal< sc_logic > data_in_we0;
    sc_signal< sc_lv<27> > data_in_q0;
    sc_signal< sc_lv<27> > data_out_address0;
    sc_signal< sc_logic > data_out_ce0;
    sc_signal< sc_logic > data_out_we0;
    sc_signal< sc_lv<32> > data_out_d0;
    sc_signal< sc_lv<32> > data_out_q0;
    sc_signal< sc_lv<27> > k_0_reg_100;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<7> > i_0_reg_114;
    sc_signal< sc_lv<27> > k1_0_reg_125;
    sc_signal< sc_logic > ap_CS_fsm_state12;
    sc_signal< sc_lv<64> > zext_ln67_fu_148_p1;
    sc_signal< sc_lv<64> > sext_ln87_fu_166_p1;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_logic > ap_CS_fsm_state13;
    sc_signal< sc_logic > ap_CS_fsm_state14;
    sc_signal< sc_logic > ap_CS_fsm_state15;
    sc_signal< sc_lv<27> > mul_ln79_fu_191_p0;
    sc_signal< sc_lv<27> > mul_ln79_fu_191_p1;
    sc_signal< sc_lv<32> > shl_ln79_fu_197_p2;
    sc_signal< sc_lv<32> > add_ln79_fu_202_p2;
    sc_signal< sc_lv<32> > add_ln79_1_fu_213_p2;
    sc_signal< sc_lv<27> > mul_ln79_2_fu_218_p1;
    sc_signal< sc_lv<15> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<15> ap_ST_fsm_state1;
    static const sc_lv<15> ap_ST_fsm_state2;
    static const sc_lv<15> ap_ST_fsm_state3;
    static const sc_lv<15> ap_ST_fsm_state4;
    static const sc_lv<15> ap_ST_fsm_state5;
    static const sc_lv<15> ap_ST_fsm_state6;
    static const sc_lv<15> ap_ST_fsm_state7;
    static const sc_lv<15> ap_ST_fsm_state8;
    static const sc_lv<15> ap_ST_fsm_state9;
    static const sc_lv<15> ap_ST_fsm_state10;
    static const sc_lv<15> ap_ST_fsm_state11;
    static const sc_lv<15> ap_ST_fsm_state12;
    static const sc_lv<15> ap_ST_fsm_state13;
    static const sc_lv<15> ap_ST_fsm_state14;
    static const sc_lv<15> ap_ST_fsm_state15;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<27> ap_const_lv27_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<7> ap_const_lv7_0;
    static const sc_lv<32> ap_const_lv32_B;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_C;
    static const sc_lv<32> ap_const_lv32_D;
    static const sc_lv<32> ap_const_lv32_E;
    static const sc_lv<27> ap_const_lv27_4000000;
    static const sc_lv<27> ap_const_lv27_1;
    static const sc_lv<7> ap_const_lv7_64;
    static const sc_lv<7> ap_const_lv7_1;
    static const sc_lv<32> ap_const_lv32_FFFFFFEC;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_A_fu_187_p1();
    void thread_add_ln79_1_fu_213_p2();
    void thread_add_ln79_fu_202_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state11();
    void thread_ap_CS_fsm_state12();
    void thread_ap_CS_fsm_state13();
    void thread_ap_CS_fsm_state14();
    void thread_ap_CS_fsm_state15();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state9();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_return();
    void thread_data_in_address0();
    void thread_data_in_ce0();
    void thread_data_in_we0();
    void thread_data_out_address0();
    void thread_data_out_ce0();
    void thread_data_out_d0();
    void thread_data_out_we0();
    void thread_i_fu_160_p2();
    void thread_icmp_ln66_fu_136_p2();
    void thread_icmp_ln73_fu_154_p2();
    void thread_icmp_ln77_fu_170_p2();
    void thread_k_1_fu_176_p2();
    void thread_k_fu_142_p2();
    void thread_mul_ln79_1_fu_208_p2();
    void thread_mul_ln79_2_fu_218_p1();
    void thread_mul_ln79_2_fu_218_p2();
    void thread_mul_ln79_fu_191_p0();
    void thread_mul_ln79_fu_191_p1();
    void thread_mul_ln79_fu_191_p2();
    void thread_sext_ln87_fu_166_p1();
    void thread_shl_ln79_fu_197_p2();
    void thread_zext_ln67_fu_148_p1();
    void thread_zext_ln78_fu_182_p1();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
