// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _chebyshev_openmp_HH_
#define _chebyshev_openmp_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "chebyshev_openmp_mul_mul_16s_16s_28_1_1.h"
#include "chebyshev_openmp_mul_mul_16s_16s_32_1_1.h"

namespace ap_rtl {

struct chebyshev_openmp : public sc_module {
    // Port declarations 15
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<7> > data_in_address0;
    sc_out< sc_logic > data_in_ce0;
    sc_in< sc_lv<16> > data_in_q0;
    sc_out< sc_lv<7> > data_out_address0;
    sc_out< sc_logic > data_out_ce0;
    sc_out< sc_logic > data_out_we0;
    sc_out< sc_lv<32> > data_out_d0;
    sc_in< sc_lv<32> > data_out_q0;
    sc_out< sc_lv<32> > ap_return;


    // Module declarations
    chebyshev_openmp(sc_module_name name);
    SC_HAS_PROCESS(chebyshev_openmp);

    ~chebyshev_openmp();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    chebyshev_openmp_mul_mul_16s_16s_28_1_1<1,1,16,16,28>* chebyshev_openmp_mul_mul_16s_16s_28_1_1_U1;
    chebyshev_openmp_mul_mul_16s_16s_32_1_1<1,1,16,16,32>* chebyshev_openmp_mul_mul_16s_16s_32_1_1_U2;
    sc_signal< sc_lv<6> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<7> > i_fu_94_p2;
    sc_signal< sc_lv<7> > i_reg_176;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<7> > k_fu_106_p2;
    sc_signal< sc_lv<7> > k_reg_184;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<64> > zext_ln53_fu_112_p1;
    sc_signal< sc_lv<64> > zext_ln53_reg_189;
    sc_signal< sc_lv<1> > icmp_ln52_fu_100_p2;
    sc_signal< sc_lv<32> > A_fu_117_p1;
    sc_signal< sc_lv<32> > A_reg_199;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<32> > mul_ln54_2_fu_138_p2;
    sc_signal< sc_lv<32> > mul_ln54_2_reg_204;
    sc_signal< sc_lv<7> > i_0_reg_66;
    sc_signal< sc_lv<7> > k_0_reg_77;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<1> > icmp_ln48_fu_88_p2;
    sc_signal< sc_lv<16> > A_fu_117_p0;
    sc_signal< sc_lv<16> > sext_ln54_fu_121_p0;
    sc_signal< sc_lv<28> > mul_ln54_fu_154_p2;
    sc_signal< sc_lv<32> > shl_ln_fu_125_p3;
    sc_signal< sc_lv<32> > add_ln54_fu_132_p2;
    sc_signal< sc_lv<32> > mul_ln54_1_fu_161_p2;
    sc_signal< sc_lv<16> > mul_ln54_3_fu_148_p0;
    sc_signal< sc_lv<32> > add_ln54_1_fu_143_p2;
    sc_signal< sc_lv<16> > mul_ln54_fu_154_p0;
    sc_signal< sc_lv<28> > sext_ln54_fu_121_p1;
    sc_signal< sc_lv<16> > mul_ln54_fu_154_p1;
    sc_signal< sc_lv<16> > mul_ln54_1_fu_161_p0;
    sc_signal< sc_lv<16> > mul_ln54_1_fu_161_p1;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<6> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<6> ap_ST_fsm_state1;
    static const sc_lv<6> ap_ST_fsm_state2;
    static const sc_lv<6> ap_ST_fsm_state3;
    static const sc_lv<6> ap_ST_fsm_state4;
    static const sc_lv<6> ap_ST_fsm_state5;
    static const sc_lv<6> ap_ST_fsm_state6;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<7> ap_const_lv7_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<64> ap_const_lv64_0;
    static const sc_lv<7> ap_const_lv7_64;
    static const sc_lv<7> ap_const_lv7_1;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<32> ap_const_lv32_FFFFFFEC;
    static const sc_lv<32> ap_const_lv32_5;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_A_fu_117_p0();
    void thread_A_fu_117_p1();
    void thread_add_ln54_1_fu_143_p2();
    void thread_add_ln54_fu_132_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_return();
    void thread_data_in_address0();
    void thread_data_in_ce0();
    void thread_data_out_address0();
    void thread_data_out_ce0();
    void thread_data_out_d0();
    void thread_data_out_we0();
    void thread_i_fu_94_p2();
    void thread_icmp_ln48_fu_88_p2();
    void thread_icmp_ln52_fu_100_p2();
    void thread_k_fu_106_p2();
    void thread_mul_ln54_1_fu_161_p0();
    void thread_mul_ln54_1_fu_161_p1();
    void thread_mul_ln54_2_fu_138_p2();
    void thread_mul_ln54_3_fu_148_p0();
    void thread_mul_ln54_fu_154_p0();
    void thread_mul_ln54_fu_154_p1();
    void thread_sext_ln54_fu_121_p0();
    void thread_sext_ln54_fu_121_p1();
    void thread_shl_ln_fu_125_p3();
    void thread_zext_ln53_fu_112_p1();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
