// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _paeth_HH_
#define _paeth_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct paeth : public sc_module {
    // Port declarations 21
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<7> > a_address0;
    sc_out< sc_logic > a_ce0;
    sc_in< sc_lv<16> > a_q0;
    sc_out< sc_lv<7> > b_address0;
    sc_out< sc_logic > b_ce0;
    sc_in< sc_lv<16> > b_q0;
    sc_out< sc_lv<7> > c_address0;
    sc_out< sc_logic > c_ce0;
    sc_in< sc_lv<16> > c_q0;
    sc_out< sc_lv<7> > out_r_address0;
    sc_out< sc_logic > out_r_ce0;
    sc_out< sc_logic > out_r_we0;
    sc_out< sc_lv<32> > out_r_d0;
    sc_in< sc_lv<32> > out_r_q0;
    sc_out< sc_lv<32> > ap_return;


    // Module declarations
    paeth(sc_module_name name);
    SC_HAS_PROCESS(paeth);

    ~paeth();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    sc_signal< sc_lv<5> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<7> > i_fu_137_p2;
    sc_signal< sc_lv<7> > i_reg_349;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<7> > k_fu_149_p2;
    sc_signal< sc_lv<7> > k_reg_357;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<1> > icmp_ln10_fu_143_p2;
    sc_signal< sc_lv<7> > out_addr_1_reg_377;
    sc_signal< sc_lv<7> > i_0_reg_99;
    sc_signal< sc_lv<7> > k_0_reg_110;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<1> > icmp_ln8_fu_131_p2;
    sc_signal< sc_lv<16> > c_load_b_load_fu_327_p3;
    sc_signal< sc_lv<16> > ap_phi_mux_storemerge1_in_phi_fu_124_p4;
    sc_signal< sc_lv<1> > test_3_fu_321_p2;
    sc_signal< sc_lv<64> > zext_ln13_fu_155_p1;
    sc_signal< sc_lv<16> > sext_ln13_fu_163_p0;
    sc_signal< sc_lv<16> > sext_ln13_1_fu_167_p0;
    sc_signal< sc_lv<16> > sext_ln13_2_fu_171_p0;
    sc_signal< sc_lv<17> > sext_ln13_1_fu_167_p1;
    sc_signal< sc_lv<17> > sext_ln13_2_fu_171_p1;
    sc_signal< sc_lv<16> > sext_ln14_fu_181_p0;
    sc_signal< sc_lv<16> > sext_ln14_1_fu_185_p0;
    sc_signal< sc_lv<17> > sext_ln14_1_fu_185_p1;
    sc_signal< sc_lv<16> > shl_ln_fu_195_p1;
    sc_signal< sc_lv<17> > shl_ln_fu_195_p3;
    sc_signal< sc_lv<18> > sext_ln13_fu_163_p1;
    sc_signal< sc_lv<18> > sext_ln15_fu_203_p1;
    sc_signal< sc_lv<18> > sub_ln15_fu_207_p2;
    sc_signal< sc_lv<18> > sext_ln14_fu_181_p1;
    sc_signal< sc_lv<18> > pcs_fu_213_p2;
    sc_signal< sc_lv<17> > pas_fu_175_p2;
    sc_signal< sc_lv<1> > abscond_fu_229_p2;
    sc_signal< sc_lv<17> > neg_fu_223_p2;
    sc_signal< sc_lv<17> > abs_fu_235_p3;
    sc_signal< sc_lv<17> > pbs_fu_189_p2;
    sc_signal< sc_lv<1> > abscond2_fu_253_p2;
    sc_signal< sc_lv<17> > neg1_fu_247_p2;
    sc_signal< sc_lv<17> > abs3_fu_259_p3;
    sc_signal< sc_lv<19> > sext_ln15_1_fu_219_p1;
    sc_signal< sc_lv<1> > abscond8_fu_277_p2;
    sc_signal< sc_lv<19> > neg7_fu_271_p2;
    sc_signal< sc_lv<19> > abs9_fu_283_p3;
    sc_signal< sc_lv<19> > abs_cast_cast_fu_243_p1;
    sc_signal< sc_lv<1> > icmp_ln17_fu_291_p2;
    sc_signal< sc_lv<19> > abs3_cast_cast_fu_267_p1;
    sc_signal< sc_lv<1> > icmp_ln19_fu_309_p2;
    sc_signal< sc_lv<1> > test_2_fu_297_p2;
    sc_signal< sc_lv<1> > xor_ln19_fu_315_p2;
    sc_signal< sc_lv<1> > test_4_fu_303_p2;
    sc_signal< sc_lv<16> > c_load_b_load_fu_327_p1;
    sc_signal< sc_lv<16> > c_load_b_load_fu_327_p2;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<5> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<5> ap_ST_fsm_state1;
    static const sc_lv<5> ap_ST_fsm_state2;
    static const sc_lv<5> ap_ST_fsm_state3;
    static const sc_lv<5> ap_ST_fsm_state4;
    static const sc_lv<5> ap_ST_fsm_state5;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<7> ap_const_lv7_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<64> ap_const_lv64_0;
    static const sc_lv<7> ap_const_lv7_64;
    static const sc_lv<7> ap_const_lv7_1;
    static const sc_lv<17> ap_const_lv17_0;
    static const sc_lv<19> ap_const_lv19_0;
    static const sc_lv<18> ap_const_lv18_0;
    static const sc_lv<32> ap_const_lv32_4;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_a_address0();
    void thread_a_ce0();
    void thread_abs3_cast_cast_fu_267_p1();
    void thread_abs3_fu_259_p3();
    void thread_abs9_fu_283_p3();
    void thread_abs_cast_cast_fu_243_p1();
    void thread_abs_fu_235_p3();
    void thread_abscond2_fu_253_p2();
    void thread_abscond8_fu_277_p2();
    void thread_abscond_fu_229_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_phi_mux_storemerge1_in_phi_fu_124_p4();
    void thread_ap_ready();
    void thread_ap_return();
    void thread_b_address0();
    void thread_b_ce0();
    void thread_c_address0();
    void thread_c_ce0();
    void thread_c_load_b_load_fu_327_p1();
    void thread_c_load_b_load_fu_327_p2();
    void thread_c_load_b_load_fu_327_p3();
    void thread_i_fu_137_p2();
    void thread_icmp_ln10_fu_143_p2();
    void thread_icmp_ln17_fu_291_p2();
    void thread_icmp_ln19_fu_309_p2();
    void thread_icmp_ln8_fu_131_p2();
    void thread_k_fu_149_p2();
    void thread_neg1_fu_247_p2();
    void thread_neg7_fu_271_p2();
    void thread_neg_fu_223_p2();
    void thread_out_r_address0();
    void thread_out_r_ce0();
    void thread_out_r_d0();
    void thread_out_r_we0();
    void thread_pas_fu_175_p2();
    void thread_pbs_fu_189_p2();
    void thread_pcs_fu_213_p2();
    void thread_sext_ln13_1_fu_167_p0();
    void thread_sext_ln13_1_fu_167_p1();
    void thread_sext_ln13_2_fu_171_p0();
    void thread_sext_ln13_2_fu_171_p1();
    void thread_sext_ln13_fu_163_p0();
    void thread_sext_ln13_fu_163_p1();
    void thread_sext_ln14_1_fu_185_p0();
    void thread_sext_ln14_1_fu_185_p1();
    void thread_sext_ln14_fu_181_p0();
    void thread_sext_ln14_fu_181_p1();
    void thread_sext_ln15_1_fu_219_p1();
    void thread_sext_ln15_fu_203_p1();
    void thread_shl_ln_fu_195_p1();
    void thread_shl_ln_fu_195_p3();
    void thread_sub_ln15_fu_207_p2();
    void thread_test_2_fu_297_p2();
    void thread_test_3_fu_321_p2();
    void thread_test_4_fu_303_p2();
    void thread_xor_ln19_fu_315_p2();
    void thread_zext_ln13_fu_155_p1();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
