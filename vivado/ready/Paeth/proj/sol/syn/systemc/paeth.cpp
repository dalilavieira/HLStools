// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "paeth.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic paeth::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic paeth::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<5> paeth::ap_ST_fsm_state1 = "1";
const sc_lv<5> paeth::ap_ST_fsm_state2 = "10";
const sc_lv<5> paeth::ap_ST_fsm_state3 = "100";
const sc_lv<5> paeth::ap_ST_fsm_state4 = "1000";
const sc_lv<5> paeth::ap_ST_fsm_state5 = "10000";
const sc_lv<32> paeth::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> paeth::ap_const_lv32_1 = "1";
const sc_lv<32> paeth::ap_const_lv32_2 = "10";
const sc_lv<1> paeth::ap_const_lv1_0 = "0";
const sc_lv<7> paeth::ap_const_lv7_0 = "0000000";
const sc_lv<1> paeth::ap_const_lv1_1 = "1";
const sc_lv<32> paeth::ap_const_lv32_3 = "11";
const sc_lv<64> paeth::ap_const_lv64_0 = "0000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<7> paeth::ap_const_lv7_64 = "1100100";
const sc_lv<7> paeth::ap_const_lv7_1 = "1";
const sc_lv<17> paeth::ap_const_lv17_0 = "00000000000000000";
const sc_lv<19> paeth::ap_const_lv19_0 = "0000000000000000000";
const sc_lv<18> paeth::ap_const_lv18_0 = "000000000000000000";
const sc_lv<32> paeth::ap_const_lv32_4 = "100";
const bool paeth::ap_const_boolean_1 = true;

paeth::paeth(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_a_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( zext_ln13_fu_155_p1 );

    SC_METHOD(thread_a_ce0);
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_abs3_cast_cast_fu_267_p1);
    sensitive << ( abs3_fu_259_p3 );

    SC_METHOD(thread_abs3_fu_259_p3);
    sensitive << ( pbs_fu_189_p2 );
    sensitive << ( abscond2_fu_253_p2 );
    sensitive << ( neg1_fu_247_p2 );

    SC_METHOD(thread_abs9_fu_283_p3);
    sensitive << ( sext_ln15_1_fu_219_p1 );
    sensitive << ( abscond8_fu_277_p2 );
    sensitive << ( neg7_fu_271_p2 );

    SC_METHOD(thread_abs_cast_cast_fu_243_p1);
    sensitive << ( abs_fu_235_p3 );

    SC_METHOD(thread_abs_fu_235_p3);
    sensitive << ( pas_fu_175_p2 );
    sensitive << ( abscond_fu_229_p2 );
    sensitive << ( neg_fu_223_p2 );

    SC_METHOD(thread_abscond2_fu_253_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( pbs_fu_189_p2 );

    SC_METHOD(thread_abscond8_fu_277_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( pcs_fu_213_p2 );

    SC_METHOD(thread_abscond_fu_229_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( pas_fu_175_p2 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_phi_mux_storemerge1_in_phi_fu_124_p4);
    sensitive << ( a_q0 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( c_load_b_load_fu_327_p3 );
    sensitive << ( test_3_fu_321_p2 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_ap_return);
    sensitive << ( out_r_q0 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_b_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( zext_ln13_fu_155_p1 );

    SC_METHOD(thread_b_ce0);
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_c_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( zext_ln13_fu_155_p1 );

    SC_METHOD(thread_c_ce0);
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_c_load_b_load_fu_327_p1);
    sensitive << ( c_q0 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_c_load_b_load_fu_327_p2);
    sensitive << ( b_q0 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_c_load_b_load_fu_327_p3);
    sensitive << ( test_4_fu_303_p2 );
    sensitive << ( c_load_b_load_fu_327_p1 );
    sensitive << ( c_load_b_load_fu_327_p2 );

    SC_METHOD(thread_i_fu_137_p2);
    sensitive << ( i_0_reg_99 );

    SC_METHOD(thread_icmp_ln10_fu_143_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( k_0_reg_110 );

    SC_METHOD(thread_icmp_ln17_fu_291_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( abs9_fu_283_p3 );
    sensitive << ( abs_cast_cast_fu_243_p1 );

    SC_METHOD(thread_icmp_ln19_fu_309_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( abs_fu_235_p3 );
    sensitive << ( abs3_fu_259_p3 );

    SC_METHOD(thread_icmp_ln8_fu_131_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( i_0_reg_99 );

    SC_METHOD(thread_k_fu_149_p2);
    sensitive << ( k_0_reg_110 );

    SC_METHOD(thread_neg1_fu_247_p2);
    sensitive << ( pbs_fu_189_p2 );

    SC_METHOD(thread_neg7_fu_271_p2);
    sensitive << ( sext_ln15_1_fu_219_p1 );

    SC_METHOD(thread_neg_fu_223_p2);
    sensitive << ( pas_fu_175_p2 );

    SC_METHOD(thread_out_r_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( out_addr_1_reg_377 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_out_r_ce0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_out_r_d0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_phi_mux_storemerge1_in_phi_fu_124_p4 );

    SC_METHOD(thread_out_r_we0);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_pas_fu_175_p2);
    sensitive << ( sext_ln13_1_fu_167_p1 );
    sensitive << ( sext_ln13_2_fu_171_p1 );

    SC_METHOD(thread_pbs_fu_189_p2);
    sensitive << ( sext_ln13_2_fu_171_p1 );
    sensitive << ( sext_ln14_1_fu_185_p1 );

    SC_METHOD(thread_pcs_fu_213_p2);
    sensitive << ( sub_ln15_fu_207_p2 );
    sensitive << ( sext_ln14_fu_181_p1 );

    SC_METHOD(thread_sext_ln13_1_fu_167_p0);
    sensitive << ( b_q0 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_sext_ln13_1_fu_167_p1);
    sensitive << ( sext_ln13_1_fu_167_p0 );

    SC_METHOD(thread_sext_ln13_2_fu_171_p0);
    sensitive << ( c_q0 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_sext_ln13_2_fu_171_p1);
    sensitive << ( sext_ln13_2_fu_171_p0 );

    SC_METHOD(thread_sext_ln13_fu_163_p0);
    sensitive << ( b_q0 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_sext_ln13_fu_163_p1);
    sensitive << ( sext_ln13_fu_163_p0 );

    SC_METHOD(thread_sext_ln14_1_fu_185_p0);
    sensitive << ( a_q0 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_sext_ln14_1_fu_185_p1);
    sensitive << ( sext_ln14_1_fu_185_p0 );

    SC_METHOD(thread_sext_ln14_fu_181_p0);
    sensitive << ( a_q0 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_sext_ln14_fu_181_p1);
    sensitive << ( sext_ln14_fu_181_p0 );

    SC_METHOD(thread_sext_ln15_1_fu_219_p1);
    sensitive << ( pcs_fu_213_p2 );

    SC_METHOD(thread_sext_ln15_fu_203_p1);
    sensitive << ( shl_ln_fu_195_p3 );

    SC_METHOD(thread_shl_ln_fu_195_p1);
    sensitive << ( c_q0 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_shl_ln_fu_195_p3);
    sensitive << ( shl_ln_fu_195_p1 );

    SC_METHOD(thread_sub_ln15_fu_207_p2);
    sensitive << ( sext_ln13_fu_163_p1 );
    sensitive << ( sext_ln15_fu_203_p1 );

    SC_METHOD(thread_test_2_fu_297_p2);
    sensitive << ( icmp_ln17_fu_291_p2 );

    SC_METHOD(thread_test_3_fu_321_p2);
    sensitive << ( test_2_fu_297_p2 );
    sensitive << ( xor_ln19_fu_315_p2 );

    SC_METHOD(thread_test_4_fu_303_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( abs9_fu_283_p3 );
    sensitive << ( abs3_cast_cast_fu_267_p1 );

    SC_METHOD(thread_xor_ln19_fu_315_p2);
    sensitive << ( icmp_ln19_fu_309_p2 );

    SC_METHOD(thread_zext_ln13_fu_155_p1);
    sensitive << ( k_0_reg_110 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( icmp_ln10_fu_143_p2 );
    sensitive << ( icmp_ln8_fu_131_p2 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    ap_CS_fsm = "00001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "paeth_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, a_address0, "(port)a_address0");
    sc_trace(mVcdFile, a_ce0, "(port)a_ce0");
    sc_trace(mVcdFile, a_q0, "(port)a_q0");
    sc_trace(mVcdFile, b_address0, "(port)b_address0");
    sc_trace(mVcdFile, b_ce0, "(port)b_ce0");
    sc_trace(mVcdFile, b_q0, "(port)b_q0");
    sc_trace(mVcdFile, c_address0, "(port)c_address0");
    sc_trace(mVcdFile, c_ce0, "(port)c_ce0");
    sc_trace(mVcdFile, c_q0, "(port)c_q0");
    sc_trace(mVcdFile, out_r_address0, "(port)out_r_address0");
    sc_trace(mVcdFile, out_r_ce0, "(port)out_r_ce0");
    sc_trace(mVcdFile, out_r_we0, "(port)out_r_we0");
    sc_trace(mVcdFile, out_r_d0, "(port)out_r_d0");
    sc_trace(mVcdFile, out_r_q0, "(port)out_r_q0");
    sc_trace(mVcdFile, ap_return, "(port)ap_return");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, i_fu_137_p2, "i_fu_137_p2");
    sc_trace(mVcdFile, i_reg_349, "i_reg_349");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, k_fu_149_p2, "k_fu_149_p2");
    sc_trace(mVcdFile, k_reg_357, "k_reg_357");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, icmp_ln10_fu_143_p2, "icmp_ln10_fu_143_p2");
    sc_trace(mVcdFile, out_addr_1_reg_377, "out_addr_1_reg_377");
    sc_trace(mVcdFile, i_0_reg_99, "i_0_reg_99");
    sc_trace(mVcdFile, k_0_reg_110, "k_0_reg_110");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, icmp_ln8_fu_131_p2, "icmp_ln8_fu_131_p2");
    sc_trace(mVcdFile, c_load_b_load_fu_327_p3, "c_load_b_load_fu_327_p3");
    sc_trace(mVcdFile, ap_phi_mux_storemerge1_in_phi_fu_124_p4, "ap_phi_mux_storemerge1_in_phi_fu_124_p4");
    sc_trace(mVcdFile, test_3_fu_321_p2, "test_3_fu_321_p2");
    sc_trace(mVcdFile, zext_ln13_fu_155_p1, "zext_ln13_fu_155_p1");
    sc_trace(mVcdFile, sext_ln13_fu_163_p0, "sext_ln13_fu_163_p0");
    sc_trace(mVcdFile, sext_ln13_1_fu_167_p0, "sext_ln13_1_fu_167_p0");
    sc_trace(mVcdFile, sext_ln13_2_fu_171_p0, "sext_ln13_2_fu_171_p0");
    sc_trace(mVcdFile, sext_ln13_1_fu_167_p1, "sext_ln13_1_fu_167_p1");
    sc_trace(mVcdFile, sext_ln13_2_fu_171_p1, "sext_ln13_2_fu_171_p1");
    sc_trace(mVcdFile, sext_ln14_fu_181_p0, "sext_ln14_fu_181_p0");
    sc_trace(mVcdFile, sext_ln14_1_fu_185_p0, "sext_ln14_1_fu_185_p0");
    sc_trace(mVcdFile, sext_ln14_1_fu_185_p1, "sext_ln14_1_fu_185_p1");
    sc_trace(mVcdFile, shl_ln_fu_195_p1, "shl_ln_fu_195_p1");
    sc_trace(mVcdFile, shl_ln_fu_195_p3, "shl_ln_fu_195_p3");
    sc_trace(mVcdFile, sext_ln13_fu_163_p1, "sext_ln13_fu_163_p1");
    sc_trace(mVcdFile, sext_ln15_fu_203_p1, "sext_ln15_fu_203_p1");
    sc_trace(mVcdFile, sub_ln15_fu_207_p2, "sub_ln15_fu_207_p2");
    sc_trace(mVcdFile, sext_ln14_fu_181_p1, "sext_ln14_fu_181_p1");
    sc_trace(mVcdFile, pcs_fu_213_p2, "pcs_fu_213_p2");
    sc_trace(mVcdFile, pas_fu_175_p2, "pas_fu_175_p2");
    sc_trace(mVcdFile, abscond_fu_229_p2, "abscond_fu_229_p2");
    sc_trace(mVcdFile, neg_fu_223_p2, "neg_fu_223_p2");
    sc_trace(mVcdFile, abs_fu_235_p3, "abs_fu_235_p3");
    sc_trace(mVcdFile, pbs_fu_189_p2, "pbs_fu_189_p2");
    sc_trace(mVcdFile, abscond2_fu_253_p2, "abscond2_fu_253_p2");
    sc_trace(mVcdFile, neg1_fu_247_p2, "neg1_fu_247_p2");
    sc_trace(mVcdFile, abs3_fu_259_p3, "abs3_fu_259_p3");
    sc_trace(mVcdFile, sext_ln15_1_fu_219_p1, "sext_ln15_1_fu_219_p1");
    sc_trace(mVcdFile, abscond8_fu_277_p2, "abscond8_fu_277_p2");
    sc_trace(mVcdFile, neg7_fu_271_p2, "neg7_fu_271_p2");
    sc_trace(mVcdFile, abs9_fu_283_p3, "abs9_fu_283_p3");
    sc_trace(mVcdFile, abs_cast_cast_fu_243_p1, "abs_cast_cast_fu_243_p1");
    sc_trace(mVcdFile, icmp_ln17_fu_291_p2, "icmp_ln17_fu_291_p2");
    sc_trace(mVcdFile, abs3_cast_cast_fu_267_p1, "abs3_cast_cast_fu_267_p1");
    sc_trace(mVcdFile, icmp_ln19_fu_309_p2, "icmp_ln19_fu_309_p2");
    sc_trace(mVcdFile, test_2_fu_297_p2, "test_2_fu_297_p2");
    sc_trace(mVcdFile, xor_ln19_fu_315_p2, "xor_ln19_fu_315_p2");
    sc_trace(mVcdFile, test_4_fu_303_p2, "test_4_fu_303_p2");
    sc_trace(mVcdFile, c_load_b_load_fu_327_p1, "c_load_b_load_fu_327_p1");
    sc_trace(mVcdFile, c_load_b_load_fu_327_p2, "c_load_b_load_fu_327_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
    mHdltvinHandle.open("paeth.hdltvin.dat");
    mHdltvoutHandle.open("paeth.hdltvout.dat");
}

paeth::~paeth() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
}

void paeth::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(icmp_ln10_fu_143_p2.read(), ap_const_lv1_1))) {
        i_0_reg_99 = i_reg_349.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i_0_reg_99 = ap_const_lv7_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln8_fu_131_p2.read()))) {
        k_0_reg_110 = ap_const_lv7_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        k_0_reg_110 = k_reg_357.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        i_reg_349 = i_fu_137_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        k_reg_357 = k_fu_149_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(icmp_ln10_fu_143_p2.read(), ap_const_lv1_0))) {
        out_addr_1_reg_377 =  (sc_lv<7>) (zext_ln13_fu_155_p1.read());
    }
}

void paeth::thread_a_address0() {
    a_address0 =  (sc_lv<7>) (zext_ln13_fu_155_p1.read());
}

void paeth::thread_a_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        a_ce0 = ap_const_logic_1;
    } else {
        a_ce0 = ap_const_logic_0;
    }
}

void paeth::thread_abs3_cast_cast_fu_267_p1() {
    abs3_cast_cast_fu_267_p1 = esl_sext<19,17>(abs3_fu_259_p3.read());
}

void paeth::thread_abs3_fu_259_p3() {
    abs3_fu_259_p3 = (!abscond2_fu_253_p2.read()[0].is_01())? sc_lv<17>(): ((abscond2_fu_253_p2.read()[0].to_bool())? pbs_fu_189_p2.read(): neg1_fu_247_p2.read());
}

void paeth::thread_abs9_fu_283_p3() {
    abs9_fu_283_p3 = (!abscond8_fu_277_p2.read()[0].is_01())? sc_lv<19>(): ((abscond8_fu_277_p2.read()[0].to_bool())? sext_ln15_1_fu_219_p1.read(): neg7_fu_271_p2.read());
}

void paeth::thread_abs_cast_cast_fu_243_p1() {
    abs_cast_cast_fu_243_p1 = esl_sext<19,17>(abs_fu_235_p3.read());
}

void paeth::thread_abs_fu_235_p3() {
    abs_fu_235_p3 = (!abscond_fu_229_p2.read()[0].is_01())? sc_lv<17>(): ((abscond_fu_229_p2.read()[0].to_bool())? pas_fu_175_p2.read(): neg_fu_223_p2.read());
}

void paeth::thread_abscond2_fu_253_p2() {
    abscond2_fu_253_p2 = (!pbs_fu_189_p2.read().is_01() || !ap_const_lv17_0.is_01())? sc_lv<1>(): (sc_bigint<17>(pbs_fu_189_p2.read()) > sc_bigint<17>(ap_const_lv17_0));
}

void paeth::thread_abscond8_fu_277_p2() {
    abscond8_fu_277_p2 = (!pcs_fu_213_p2.read().is_01() || !ap_const_lv18_0.is_01())? sc_lv<1>(): (sc_bigint<18>(pcs_fu_213_p2.read()) > sc_bigint<18>(ap_const_lv18_0));
}

void paeth::thread_abscond_fu_229_p2() {
    abscond_fu_229_p2 = (!pas_fu_175_p2.read().is_01() || !ap_const_lv17_0.is_01())? sc_lv<1>(): (sc_bigint<17>(pas_fu_175_p2.read()) > sc_bigint<17>(ap_const_lv17_0));
}

void paeth::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void paeth::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void paeth::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void paeth::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void paeth::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void paeth::thread_ap_done() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void paeth::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void paeth::thread_ap_phi_mux_storemerge1_in_phi_fu_124_p4() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        if (esl_seteq<1,1,1>(ap_const_lv1_1, test_3_fu_321_p2.read())) {
            ap_phi_mux_storemerge1_in_phi_fu_124_p4 = a_q0.read();
        } else if (esl_seteq<1,1,1>(ap_const_lv1_0, test_3_fu_321_p2.read())) {
            ap_phi_mux_storemerge1_in_phi_fu_124_p4 = c_load_b_load_fu_327_p3.read();
        } else {
            ap_phi_mux_storemerge1_in_phi_fu_124_p4 = "XXXXXXXXXXXXXXXX";
        }
    } else {
        ap_phi_mux_storemerge1_in_phi_fu_124_p4 = "XXXXXXXXXXXXXXXX";
    }
}

void paeth::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void paeth::thread_ap_return() {
    ap_return = out_r_q0.read();
}

void paeth::thread_b_address0() {
    b_address0 =  (sc_lv<7>) (zext_ln13_fu_155_p1.read());
}

void paeth::thread_b_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        b_ce0 = ap_const_logic_1;
    } else {
        b_ce0 = ap_const_logic_0;
    }
}

void paeth::thread_c_address0() {
    c_address0 =  (sc_lv<7>) (zext_ln13_fu_155_p1.read());
}

void paeth::thread_c_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        c_ce0 = ap_const_logic_1;
    } else {
        c_ce0 = ap_const_logic_0;
    }
}

void paeth::thread_c_load_b_load_fu_327_p1() {
    c_load_b_load_fu_327_p1 = c_q0.read();
}

void paeth::thread_c_load_b_load_fu_327_p2() {
    c_load_b_load_fu_327_p2 = b_q0.read();
}

void paeth::thread_c_load_b_load_fu_327_p3() {
    c_load_b_load_fu_327_p3 = (!test_4_fu_303_p2.read()[0].is_01())? sc_lv<16>(): ((test_4_fu_303_p2.read()[0].to_bool())? c_load_b_load_fu_327_p1.read(): c_load_b_load_fu_327_p2.read());
}

void paeth::thread_i_fu_137_p2() {
    i_fu_137_p2 = (!i_0_reg_99.read().is_01() || !ap_const_lv7_1.is_01())? sc_lv<7>(): (sc_biguint<7>(i_0_reg_99.read()) + sc_biguint<7>(ap_const_lv7_1));
}

void paeth::thread_icmp_ln10_fu_143_p2() {
    icmp_ln10_fu_143_p2 = (!k_0_reg_110.read().is_01() || !ap_const_lv7_64.is_01())? sc_lv<1>(): sc_lv<1>(k_0_reg_110.read() == ap_const_lv7_64);
}

void paeth::thread_icmp_ln17_fu_291_p2() {
    icmp_ln17_fu_291_p2 = (!abs9_fu_283_p3.read().is_01() || !abs_cast_cast_fu_243_p1.read().is_01())? sc_lv<1>(): (sc_bigint<19>(abs9_fu_283_p3.read()) < sc_bigint<19>(abs_cast_cast_fu_243_p1.read()));
}

void paeth::thread_icmp_ln19_fu_309_p2() {
    icmp_ln19_fu_309_p2 = (!abs3_fu_259_p3.read().is_01() || !abs_fu_235_p3.read().is_01())? sc_lv<1>(): (sc_bigint<17>(abs3_fu_259_p3.read()) < sc_bigint<17>(abs_fu_235_p3.read()));
}

void paeth::thread_icmp_ln8_fu_131_p2() {
    icmp_ln8_fu_131_p2 = (!i_0_reg_99.read().is_01() || !ap_const_lv7_64.is_01())? sc_lv<1>(): sc_lv<1>(i_0_reg_99.read() == ap_const_lv7_64);
}

void paeth::thread_k_fu_149_p2() {
    k_fu_149_p2 = (!k_0_reg_110.read().is_01() || !ap_const_lv7_1.is_01())? sc_lv<7>(): (sc_biguint<7>(k_0_reg_110.read()) + sc_biguint<7>(ap_const_lv7_1));
}

void paeth::thread_neg1_fu_247_p2() {
    neg1_fu_247_p2 = (!ap_const_lv17_0.is_01() || !pbs_fu_189_p2.read().is_01())? sc_lv<17>(): (sc_biguint<17>(ap_const_lv17_0) - sc_biguint<17>(pbs_fu_189_p2.read()));
}

void paeth::thread_neg7_fu_271_p2() {
    neg7_fu_271_p2 = (!ap_const_lv19_0.is_01() || !sext_ln15_1_fu_219_p1.read().is_01())? sc_lv<19>(): (sc_biguint<19>(ap_const_lv19_0) - sc_bigint<19>(sext_ln15_1_fu_219_p1.read()));
}

void paeth::thread_neg_fu_223_p2() {
    neg_fu_223_p2 = (!ap_const_lv17_0.is_01() || !pas_fu_175_p2.read().is_01())? sc_lv<17>(): (sc_biguint<17>(ap_const_lv17_0) - sc_biguint<17>(pas_fu_175_p2.read()));
}

void paeth::thread_out_r_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        out_r_address0 = out_addr_1_reg_377.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        out_r_address0 =  (sc_lv<7>) (ap_const_lv64_0);
    } else {
        out_r_address0 =  (sc_lv<7>) ("XXXXXXX");
    }
}

void paeth::thread_out_r_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()))) {
        out_r_ce0 = ap_const_logic_1;
    } else {
        out_r_ce0 = ap_const_logic_0;
    }
}

void paeth::thread_out_r_d0() {
    out_r_d0 = esl_sext<32,16>(ap_phi_mux_storemerge1_in_phi_fu_124_p4.read());
}

void paeth::thread_out_r_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        out_r_we0 = ap_const_logic_1;
    } else {
        out_r_we0 = ap_const_logic_0;
    }
}

void paeth::thread_pas_fu_175_p2() {
    pas_fu_175_p2 = (!sext_ln13_1_fu_167_p1.read().is_01() || !sext_ln13_2_fu_171_p1.read().is_01())? sc_lv<17>(): (sc_bigint<17>(sext_ln13_1_fu_167_p1.read()) - sc_bigint<17>(sext_ln13_2_fu_171_p1.read()));
}

void paeth::thread_pbs_fu_189_p2() {
    pbs_fu_189_p2 = (!sext_ln14_1_fu_185_p1.read().is_01() || !sext_ln13_2_fu_171_p1.read().is_01())? sc_lv<17>(): (sc_bigint<17>(sext_ln14_1_fu_185_p1.read()) - sc_bigint<17>(sext_ln13_2_fu_171_p1.read()));
}

void paeth::thread_pcs_fu_213_p2() {
    pcs_fu_213_p2 = (sub_ln15_fu_207_p2.read() | sext_ln14_fu_181_p1.read());
}

void paeth::thread_sext_ln13_1_fu_167_p0() {
    sext_ln13_1_fu_167_p0 = b_q0.read();
}

void paeth::thread_sext_ln13_1_fu_167_p1() {
    sext_ln13_1_fu_167_p1 = esl_sext<17,16>(sext_ln13_1_fu_167_p0.read());
}

void paeth::thread_sext_ln13_2_fu_171_p0() {
    sext_ln13_2_fu_171_p0 = c_q0.read();
}

void paeth::thread_sext_ln13_2_fu_171_p1() {
    sext_ln13_2_fu_171_p1 = esl_sext<17,16>(sext_ln13_2_fu_171_p0.read());
}

void paeth::thread_sext_ln13_fu_163_p0() {
    sext_ln13_fu_163_p0 = b_q0.read();
}

void paeth::thread_sext_ln13_fu_163_p1() {
    sext_ln13_fu_163_p1 = esl_sext<18,16>(sext_ln13_fu_163_p0.read());
}

void paeth::thread_sext_ln14_1_fu_185_p0() {
    sext_ln14_1_fu_185_p0 = a_q0.read();
}

void paeth::thread_sext_ln14_1_fu_185_p1() {
    sext_ln14_1_fu_185_p1 = esl_sext<17,16>(sext_ln14_1_fu_185_p0.read());
}

void paeth::thread_sext_ln14_fu_181_p0() {
    sext_ln14_fu_181_p0 = a_q0.read();
}

void paeth::thread_sext_ln14_fu_181_p1() {
    sext_ln14_fu_181_p1 = esl_sext<18,16>(sext_ln14_fu_181_p0.read());
}

void paeth::thread_sext_ln15_1_fu_219_p1() {
    sext_ln15_1_fu_219_p1 = esl_sext<19,18>(pcs_fu_213_p2.read());
}

void paeth::thread_sext_ln15_fu_203_p1() {
    sext_ln15_fu_203_p1 = esl_sext<18,17>(shl_ln_fu_195_p3.read());
}

void paeth::thread_shl_ln_fu_195_p1() {
    shl_ln_fu_195_p1 = c_q0.read();
}

void paeth::thread_shl_ln_fu_195_p3() {
    shl_ln_fu_195_p3 = esl_concat<16,1>(shl_ln_fu_195_p1.read(), ap_const_lv1_0);
}

void paeth::thread_sub_ln15_fu_207_p2() {
    sub_ln15_fu_207_p2 = (!sext_ln13_fu_163_p1.read().is_01() || !sext_ln15_fu_203_p1.read().is_01())? sc_lv<18>(): (sc_bigint<18>(sext_ln13_fu_163_p1.read()) - sc_bigint<18>(sext_ln15_fu_203_p1.read()));
}

void paeth::thread_test_2_fu_297_p2() {
    test_2_fu_297_p2 = (icmp_ln17_fu_291_p2.read() ^ ap_const_lv1_1);
}

void paeth::thread_test_3_fu_321_p2() {
    test_3_fu_321_p2 = (test_2_fu_297_p2.read() & xor_ln19_fu_315_p2.read());
}

void paeth::thread_test_4_fu_303_p2() {
    test_4_fu_303_p2 = (!abs3_cast_cast_fu_267_p1.read().is_01() || !abs9_fu_283_p3.read().is_01())? sc_lv<1>(): (sc_bigint<19>(abs3_cast_cast_fu_267_p1.read()) > sc_bigint<19>(abs9_fu_283_p3.read()));
}

void paeth::thread_xor_ln19_fu_315_p2() {
    xor_ln19_fu_315_p2 = (icmp_ln19_fu_309_p2.read() ^ ap_const_lv1_1);
}

void paeth::thread_zext_ln13_fu_155_p1() {
    zext_ln13_fu_155_p1 = esl_zext<64,7>(k_0_reg_110.read());
}

void paeth::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln8_fu_131_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(icmp_ln10_fu_143_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state3;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<5>) ("XXXXX");
            break;
    }
}

void paeth::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"a_address0\" :  \"" << a_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"a_ce0\" :  \"" << a_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"a_q0\" :  \"" << a_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"b_address0\" :  \"" << b_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"b_ce0\" :  \"" << b_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"b_q0\" :  \"" << b_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"c_address0\" :  \"" << c_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"c_ce0\" :  \"" << c_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"c_q0\" :  \"" << c_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_r_address0\" :  \"" << out_r_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_r_ce0\" :  \"" << out_r_ce0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_r_we0\" :  \"" << out_r_we0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_r_d0\" :  \"" << out_r_d0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"out_r_q0\" :  \"" << out_r_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_return\" :  \"" << ap_return.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

