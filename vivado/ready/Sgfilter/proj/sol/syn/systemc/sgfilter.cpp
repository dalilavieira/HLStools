// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "sgfilter.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic sgfilter::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic sgfilter::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<6> sgfilter::ap_ST_fsm_state1 = "1";
const sc_lv<6> sgfilter::ap_ST_fsm_state2 = "10";
const sc_lv<6> sgfilter::ap_ST_fsm_state3 = "100";
const sc_lv<6> sgfilter::ap_ST_fsm_state4 = "1000";
const sc_lv<6> sgfilter::ap_ST_fsm_state5 = "10000";
const sc_lv<6> sgfilter::ap_ST_fsm_state6 = "100000";
const sc_lv<32> sgfilter::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> sgfilter::ap_const_lv32_1 = "1";
const sc_lv<32> sgfilter::ap_const_lv32_2 = "10";
const sc_lv<1> sgfilter::ap_const_lv1_0 = "0";
const sc_lv<32> sgfilter::ap_const_lv32_3 = "11";
const sc_lv<7> sgfilter::ap_const_lv7_0 = "0000000";
const sc_lv<1> sgfilter::ap_const_lv1_1 = "1";
const sc_lv<32> sgfilter::ap_const_lv32_4 = "100";
const sc_lv<64> sgfilter::ap_const_lv64_0 = "0000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<7> sgfilter::ap_const_lv7_64 = "1100100";
const sc_lv<7> sgfilter::ap_const_lv7_1 = "1";
const sc_lv<3> sgfilter::ap_const_lv3_0 = "000";
const sc_lv<20> sgfilter::ap_const_lv20_7 = "111";
const sc_lv<32> sgfilter::ap_const_lv32_FFFFFFB5 = "11111111111111111111111110110101";
const sc_lv<26> sgfilter::ap_const_lv26_3FFFC28 = "11111111111111110000101000";
const sc_lv<26> sgfilter::ap_const_lv26_3FFFFD2 = "11111111111111111111010010";
const sc_lv<23> sgfilter::ap_const_lv23_5C = "1011100";
const sc_lv<23> sgfilter::ap_const_lv23_7FFFD9 = "11111111111111111011001";
const sc_lv<23> sgfilter::ap_const_lv23_7FFFB4 = "11111111111111110110100";
const sc_lv<32> sgfilter::ap_const_lv32_7 = "111";
const sc_lv<32> sgfilter::ap_const_lv32_FFFFFFD2 = "11111111111111111111111111010010";
const sc_lv<32> sgfilter::ap_const_lv32_5 = "101";
const bool sgfilter::ap_const_boolean_1 = true;

sgfilter::sgfilter(sc_module_name name) : sc_module(name), mVcdFile(0) {
    sgfilter_mac_muladd_16s_11s_7s_26_1_1_U1 = new sgfilter_mac_muladd_16s_11s_7s_26_1_1<1,1,16,11,7,26>("sgfilter_mac_muladd_16s_11s_7s_26_1_1_U1");
    sgfilter_mac_muladd_16s_11s_7s_26_1_1_U1->din0(a_q0);
    sgfilter_mac_muladd_16s_11s_7s_26_1_1_U1->din1(grp_fu_225_p1);
    sgfilter_mac_muladd_16s_11s_7s_26_1_1_U1->din2(grp_fu_225_p2);
    sgfilter_mac_muladd_16s_11s_7s_26_1_1_U1->dout(grp_fu_225_p3);
    sgfilter_mac_muladd_16s_8ns_7s_23_1_1_U2 = new sgfilter_mac_muladd_16s_8ns_7s_23_1_1<1,1,16,8,7,23>("sgfilter_mac_muladd_16s_8ns_7s_23_1_1_U2");
    sgfilter_mac_muladd_16s_8ns_7s_23_1_1_U2->din0(grp_fu_233_p0);
    sgfilter_mac_muladd_16s_8ns_7s_23_1_1_U2->din1(grp_fu_233_p1);
    sgfilter_mac_muladd_16s_8ns_7s_23_1_1_U2->din2(grp_fu_233_p2);
    sgfilter_mac_muladd_16s_8ns_7s_23_1_1_U2->dout(grp_fu_233_p3);
    sgfilter_mac_muladd_16s_23s_32s_32_1_1_U3 = new sgfilter_mac_muladd_16s_23s_32s_32_1_1<1,1,16,23,32,32>("sgfilter_mac_muladd_16s_23s_32s_32_1_1_U3");
    sgfilter_mac_muladd_16s_23s_32s_32_1_1_U3->din0(a_q0);
    sgfilter_mac_muladd_16s_23s_32s_32_1_1_U3->din1(grp_fu_233_p3);
    sgfilter_mac_muladd_16s_23s_32s_32_1_1_U3->din2(grp_fu_258_p3);
    sgfilter_mac_muladd_16s_23s_32s_32_1_1_U3->dout(grp_fu_242_p3);
    sgfilter_mac_muladd_16s_8s_20s_23_1_1_U4 = new sgfilter_mac_muladd_16s_8s_20s_23_1_1<1,1,16,8,20,23>("sgfilter_mac_muladd_16s_8s_20s_23_1_1_U4");
    sgfilter_mac_muladd_16s_8s_20s_23_1_1_U4->din0(grp_fu_249_p0);
    sgfilter_mac_muladd_16s_8s_20s_23_1_1_U4->din1(grp_fu_249_p1);
    sgfilter_mac_muladd_16s_8s_20s_23_1_1_U4->din2(add_ln10_3_fu_188_p2);
    sgfilter_mac_muladd_16s_8s_20s_23_1_1_U4->dout(grp_fu_249_p3);
    sgfilter_mac_muladd_16s_23s_4ns_32_1_1_U5 = new sgfilter_mac_muladd_16s_23s_4ns_32_1_1<1,1,16,23,4,32>("sgfilter_mac_muladd_16s_23s_4ns_32_1_1_U5");
    sgfilter_mac_muladd_16s_23s_4ns_32_1_1_U5->din0(b_q0);
    sgfilter_mac_muladd_16s_23s_4ns_32_1_1_U5->din1(grp_fu_249_p3);
    sgfilter_mac_muladd_16s_23s_4ns_32_1_1_U5->din2(grp_fu_258_p2);
    sgfilter_mac_muladd_16s_23s_4ns_32_1_1_U5->dout(grp_fu_258_p3);
    sgfilter_mac_muladd_16s_26s_7s_32_1_1_U6 = new sgfilter_mac_muladd_16s_26s_7s_32_1_1<1,1,16,26,7,32>("sgfilter_mac_muladd_16s_26s_7s_32_1_1_U6");
    sgfilter_mac_muladd_16s_26s_7s_32_1_1_U6->din0(grp_fu_267_p0);
    sgfilter_mac_muladd_16s_26s_7s_32_1_1_U6->din1(add_ln10_reg_317);
    sgfilter_mac_muladd_16s_26s_7s_32_1_1_U6->din2(grp_fu_267_p2);
    sgfilter_mac_muladd_16s_26s_7s_32_1_1_U6->dout(grp_fu_267_p3);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_OUT_r_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( zext_ln10_reg_296 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_OUT_r_ce0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_OUT_r_d0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( mul_ln10_2_fu_204_p2 );
    sensitive << ( add_ln10_7_fu_212_p2 );

    SC_METHOD(thread_OUT_r_we0);
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_a_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( zext_ln10_fu_141_p1 );

    SC_METHOD(thread_a_ce0);
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_add_ln10_3_fu_188_p2);
    sensitive << ( sub_ln10_fu_182_p2 );

    SC_METHOD(thread_add_ln10_7_fu_212_p2);
    sensitive << ( mul_ln10_7_fu_208_p2 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_ap_return);
    sensitive << ( OUT_r_q0 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_b_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( zext_ln10_fu_141_p1 );

    SC_METHOD(thread_b_ce0);
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_grp_fu_225_p1);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_grp_fu_225_p2);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_grp_fu_233_p0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( sext_ln10_4_fu_155_p1 );

    SC_METHOD(thread_grp_fu_233_p1);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_grp_fu_233_p2);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_grp_fu_249_p0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( sext_ln10_4_fu_155_p1 );

    SC_METHOD(thread_grp_fu_249_p1);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_grp_fu_258_p2);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_grp_fu_267_p0);
    sensitive << ( sext_ln10_reg_311 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_grp_fu_267_p2);
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_i_fu_123_p2);
    sensitive << ( i_0_reg_95 );

    SC_METHOD(thread_icmp_ln7_fu_117_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( i_0_reg_95 );

    SC_METHOD(thread_icmp_ln9_fu_129_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( k_0_reg_106 );

    SC_METHOD(thread_k_fu_135_p2);
    sensitive << ( k_0_reg_106 );

    SC_METHOD(thread_mul_ln10_2_fu_204_p0);
    sensitive << ( sext_ln10_reg_311 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_mul_ln10_2_fu_204_p2);
    sensitive << ( mul_ln10_2_fu_204_p0 );
    sensitive << ( grp_fu_267_p3 );

    SC_METHOD(thread_mul_ln10_7_fu_208_p0);
    sensitive << ( sext_ln10_1_reg_322 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_mul_ln10_7_fu_208_p2);
    sensitive << ( add_ln10_6_reg_327 );
    sensitive << ( mul_ln10_7_fu_208_p0 );

    SC_METHOD(thread_sext_ln10_1_fu_162_p0);
    sensitive << ( b_q0 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_sext_ln10_1_fu_162_p1);
    sensitive << ( sext_ln10_1_fu_162_p0 );

    SC_METHOD(thread_sext_ln10_4_fu_155_p0);
    sensitive << ( a_q0 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_sext_ln10_4_fu_155_p1);
    sensitive << ( sext_ln10_4_fu_155_p0 );

    SC_METHOD(thread_sext_ln10_6_fu_166_p0);
    sensitive << ( b_q0 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_sext_ln10_6_fu_166_p1);
    sensitive << ( sext_ln10_6_fu_166_p0 );

    SC_METHOD(thread_sext_ln10_7_fu_178_p1);
    sensitive << ( shl_ln_fu_170_p3 );

    SC_METHOD(thread_sext_ln10_fu_147_p0);
    sensitive << ( a_q0 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_sext_ln10_fu_147_p1);
    sensitive << ( sext_ln10_fu_147_p0 );

    SC_METHOD(thread_shl_ln_fu_170_p1);
    sensitive << ( b_q0 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_shl_ln_fu_170_p3);
    sensitive << ( shl_ln_fu_170_p1 );

    SC_METHOD(thread_sub_ln10_fu_182_p2);
    sensitive << ( sext_ln10_7_fu_178_p1 );
    sensitive << ( sext_ln10_6_fu_166_p1 );

    SC_METHOD(thread_zext_ln10_fu_141_p1);
    sensitive << ( k_0_reg_106 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( icmp_ln9_fu_129_p2 );
    sensitive << ( icmp_ln7_fu_117_p2 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    ap_CS_fsm = "000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "sgfilter_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, a_address0, "(port)a_address0");
    sc_trace(mVcdFile, a_ce0, "(port)a_ce0");
    sc_trace(mVcdFile, a_q0, "(port)a_q0");
    sc_trace(mVcdFile, b_address0, "(port)b_address0");
    sc_trace(mVcdFile, b_ce0, "(port)b_ce0");
    sc_trace(mVcdFile, b_q0, "(port)b_q0");
    sc_trace(mVcdFile, OUT_r_address0, "(port)OUT_r_address0");
    sc_trace(mVcdFile, OUT_r_ce0, "(port)OUT_r_ce0");
    sc_trace(mVcdFile, OUT_r_we0, "(port)OUT_r_we0");
    sc_trace(mVcdFile, OUT_r_d0, "(port)OUT_r_d0");
    sc_trace(mVcdFile, OUT_r_q0, "(port)OUT_r_q0");
    sc_trace(mVcdFile, ap_return, "(port)ap_return");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, i_fu_123_p2, "i_fu_123_p2");
    sc_trace(mVcdFile, i_reg_283, "i_reg_283");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, k_fu_135_p2, "k_fu_135_p2");
    sc_trace(mVcdFile, k_reg_291, "k_reg_291");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, zext_ln10_fu_141_p1, "zext_ln10_fu_141_p1");
    sc_trace(mVcdFile, zext_ln10_reg_296, "zext_ln10_reg_296");
    sc_trace(mVcdFile, icmp_ln9_fu_129_p2, "icmp_ln9_fu_129_p2");
    sc_trace(mVcdFile, sext_ln10_fu_147_p1, "sext_ln10_fu_147_p1");
    sc_trace(mVcdFile, sext_ln10_reg_311, "sext_ln10_reg_311");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, grp_fu_225_p3, "grp_fu_225_p3");
    sc_trace(mVcdFile, add_ln10_reg_317, "add_ln10_reg_317");
    sc_trace(mVcdFile, sext_ln10_1_fu_162_p1, "sext_ln10_1_fu_162_p1");
    sc_trace(mVcdFile, sext_ln10_1_reg_322, "sext_ln10_1_reg_322");
    sc_trace(mVcdFile, grp_fu_242_p3, "grp_fu_242_p3");
    sc_trace(mVcdFile, add_ln10_6_reg_327, "add_ln10_6_reg_327");
    sc_trace(mVcdFile, i_0_reg_95, "i_0_reg_95");
    sc_trace(mVcdFile, k_0_reg_106, "k_0_reg_106");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, icmp_ln7_fu_117_p2, "icmp_ln7_fu_117_p2");
    sc_trace(mVcdFile, sext_ln10_fu_147_p0, "sext_ln10_fu_147_p0");
    sc_trace(mVcdFile, sext_ln10_4_fu_155_p0, "sext_ln10_4_fu_155_p0");
    sc_trace(mVcdFile, grp_fu_233_p3, "grp_fu_233_p3");
    sc_trace(mVcdFile, sext_ln10_1_fu_162_p0, "sext_ln10_1_fu_162_p0");
    sc_trace(mVcdFile, sext_ln10_6_fu_166_p0, "sext_ln10_6_fu_166_p0");
    sc_trace(mVcdFile, shl_ln_fu_170_p1, "shl_ln_fu_170_p1");
    sc_trace(mVcdFile, shl_ln_fu_170_p3, "shl_ln_fu_170_p3");
    sc_trace(mVcdFile, sext_ln10_7_fu_178_p1, "sext_ln10_7_fu_178_p1");
    sc_trace(mVcdFile, sext_ln10_6_fu_166_p1, "sext_ln10_6_fu_166_p1");
    sc_trace(mVcdFile, sub_ln10_fu_182_p2, "sub_ln10_fu_182_p2");
    sc_trace(mVcdFile, add_ln10_3_fu_188_p2, "add_ln10_3_fu_188_p2");
    sc_trace(mVcdFile, grp_fu_249_p3, "grp_fu_249_p3");
    sc_trace(mVcdFile, mul_ln10_2_fu_204_p0, "mul_ln10_2_fu_204_p0");
    sc_trace(mVcdFile, grp_fu_267_p3, "grp_fu_267_p3");
    sc_trace(mVcdFile, mul_ln10_7_fu_208_p0, "mul_ln10_7_fu_208_p0");
    sc_trace(mVcdFile, mul_ln10_7_fu_208_p2, "mul_ln10_7_fu_208_p2");
    sc_trace(mVcdFile, mul_ln10_2_fu_204_p2, "mul_ln10_2_fu_204_p2");
    sc_trace(mVcdFile, add_ln10_7_fu_212_p2, "add_ln10_7_fu_212_p2");
    sc_trace(mVcdFile, grp_fu_225_p1, "grp_fu_225_p1");
    sc_trace(mVcdFile, grp_fu_225_p2, "grp_fu_225_p2");
    sc_trace(mVcdFile, grp_fu_233_p0, "grp_fu_233_p0");
    sc_trace(mVcdFile, sext_ln10_4_fu_155_p1, "sext_ln10_4_fu_155_p1");
    sc_trace(mVcdFile, grp_fu_233_p1, "grp_fu_233_p1");
    sc_trace(mVcdFile, grp_fu_233_p2, "grp_fu_233_p2");
    sc_trace(mVcdFile, grp_fu_258_p3, "grp_fu_258_p3");
    sc_trace(mVcdFile, grp_fu_249_p0, "grp_fu_249_p0");
    sc_trace(mVcdFile, grp_fu_249_p1, "grp_fu_249_p1");
    sc_trace(mVcdFile, grp_fu_258_p2, "grp_fu_258_p2");
    sc_trace(mVcdFile, grp_fu_267_p0, "grp_fu_267_p0");
    sc_trace(mVcdFile, grp_fu_267_p2, "grp_fu_267_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
    mHdltvinHandle.open("sgfilter.hdltvin.dat");
    mHdltvoutHandle.open("sgfilter.hdltvout.dat");
}

sgfilter::~sgfilter() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete sgfilter_mac_muladd_16s_11s_7s_26_1_1_U1;
    delete sgfilter_mac_muladd_16s_8ns_7s_23_1_1_U2;
    delete sgfilter_mac_muladd_16s_23s_32s_32_1_1_U3;
    delete sgfilter_mac_muladd_16s_8s_20s_23_1_1_U4;
    delete sgfilter_mac_muladd_16s_23s_4ns_32_1_1_U5;
    delete sgfilter_mac_muladd_16s_26s_7s_32_1_1_U6;
}

void sgfilter::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(icmp_ln9_fu_129_p2.read(), ap_const_lv1_1))) {
        i_0_reg_95 = i_reg_283.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i_0_reg_95 = ap_const_lv7_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln7_fu_117_p2.read()))) {
        k_0_reg_106 = ap_const_lv7_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        k_0_reg_106 = k_reg_291.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        add_ln10_6_reg_327 = grp_fu_242_p3.read();
        add_ln10_reg_317 = grp_fu_225_p3.read();
        sext_ln10_1_reg_322 = sext_ln10_1_fu_162_p1.read();
        sext_ln10_reg_311 = sext_ln10_fu_147_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        i_reg_283 = i_fu_123_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        k_reg_291 = k_fu_135_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(icmp_ln9_fu_129_p2.read(), ap_const_lv1_0))) {
        zext_ln10_reg_296 = zext_ln10_fu_141_p1.read();
    }
}

void sgfilter::thread_OUT_r_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        OUT_r_address0 =  (sc_lv<7>) (zext_ln10_reg_296.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        OUT_r_address0 =  (sc_lv<7>) (ap_const_lv64_0);
    } else {
        OUT_r_address0 = "XXXXXXX";
    }
}

void sgfilter::thread_OUT_r_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()))) {
        OUT_r_ce0 = ap_const_logic_1;
    } else {
        OUT_r_ce0 = ap_const_logic_0;
    }
}

void sgfilter::thread_OUT_r_d0() {
    OUT_r_d0 = (!mul_ln10_2_fu_204_p2.read().is_01() || !add_ln10_7_fu_212_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(mul_ln10_2_fu_204_p2.read()) + sc_biguint<32>(add_ln10_7_fu_212_p2.read()));
}

void sgfilter::thread_OUT_r_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        OUT_r_we0 = ap_const_logic_1;
    } else {
        OUT_r_we0 = ap_const_logic_0;
    }
}

void sgfilter::thread_a_address0() {
    a_address0 =  (sc_lv<7>) (zext_ln10_fu_141_p1.read());
}

void sgfilter::thread_a_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        a_ce0 = ap_const_logic_1;
    } else {
        a_ce0 = ap_const_logic_0;
    }
}

void sgfilter::thread_add_ln10_3_fu_188_p2() {
    add_ln10_3_fu_188_p2 = (!sub_ln10_fu_182_p2.read().is_01() || !ap_const_lv20_7.is_01())? sc_lv<20>(): (sc_biguint<20>(sub_ln10_fu_182_p2.read()) + sc_biguint<20>(ap_const_lv20_7));
}

void sgfilter::thread_add_ln10_7_fu_212_p2() {
    add_ln10_7_fu_212_p2 = (!mul_ln10_7_fu_208_p2.read().is_01() || !ap_const_lv32_FFFFFFB5.is_01())? sc_lv<32>(): (sc_biguint<32>(mul_ln10_7_fu_208_p2.read()) + sc_bigint<32>(ap_const_lv32_FFFFFFB5));
}

void sgfilter::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void sgfilter::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void sgfilter::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void sgfilter::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void sgfilter::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void sgfilter::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void sgfilter::thread_ap_done() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void sgfilter::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void sgfilter::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void sgfilter::thread_ap_return() {
    ap_return = OUT_r_q0.read();
}

void sgfilter::thread_b_address0() {
    b_address0 =  (sc_lv<7>) (zext_ln10_fu_141_p1.read());
}

void sgfilter::thread_b_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        b_ce0 = ap_const_logic_1;
    } else {
        b_ce0 = ap_const_logic_0;
    }
}

void sgfilter::thread_grp_fu_225_p1() {
    grp_fu_225_p1 =  (sc_lv<11>) (ap_const_lv26_3FFFC28);
}

void sgfilter::thread_grp_fu_225_p2() {
    grp_fu_225_p2 =  (sc_lv<7>) (ap_const_lv26_3FFFFD2);
}

void sgfilter::thread_grp_fu_233_p0() {
    grp_fu_233_p0 =  (sc_lv<16>) (sext_ln10_4_fu_155_p1.read());
}

void sgfilter::thread_grp_fu_233_p1() {
    grp_fu_233_p1 =  (sc_lv<8>) (ap_const_lv23_5C);
}

void sgfilter::thread_grp_fu_233_p2() {
    grp_fu_233_p2 =  (sc_lv<7>) (ap_const_lv23_7FFFD9);
}

void sgfilter::thread_grp_fu_249_p0() {
    grp_fu_249_p0 =  (sc_lv<16>) (sext_ln10_4_fu_155_p1.read());
}

void sgfilter::thread_grp_fu_249_p1() {
    grp_fu_249_p1 =  (sc_lv<8>) (ap_const_lv23_7FFFB4);
}

void sgfilter::thread_grp_fu_258_p2() {
    grp_fu_258_p2 =  (sc_lv<4>) (ap_const_lv32_7);
}

void sgfilter::thread_grp_fu_267_p0() {
    grp_fu_267_p0 =  (sc_lv<16>) (sext_ln10_reg_311.read());
}

void sgfilter::thread_grp_fu_267_p2() {
    grp_fu_267_p2 =  (sc_lv<7>) (ap_const_lv32_FFFFFFD2);
}

void sgfilter::thread_i_fu_123_p2() {
    i_fu_123_p2 = (!i_0_reg_95.read().is_01() || !ap_const_lv7_1.is_01())? sc_lv<7>(): (sc_biguint<7>(i_0_reg_95.read()) + sc_biguint<7>(ap_const_lv7_1));
}

void sgfilter::thread_icmp_ln7_fu_117_p2() {
    icmp_ln7_fu_117_p2 = (!i_0_reg_95.read().is_01() || !ap_const_lv7_64.is_01())? sc_lv<1>(): sc_lv<1>(i_0_reg_95.read() == ap_const_lv7_64);
}

void sgfilter::thread_icmp_ln9_fu_129_p2() {
    icmp_ln9_fu_129_p2 = (!k_0_reg_106.read().is_01() || !ap_const_lv7_64.is_01())? sc_lv<1>(): sc_lv<1>(k_0_reg_106.read() == ap_const_lv7_64);
}

void sgfilter::thread_k_fu_135_p2() {
    k_fu_135_p2 = (!k_0_reg_106.read().is_01() || !ap_const_lv7_1.is_01())? sc_lv<7>(): (sc_biguint<7>(k_0_reg_106.read()) + sc_biguint<7>(ap_const_lv7_1));
}

void sgfilter::thread_mul_ln10_2_fu_204_p0() {
    mul_ln10_2_fu_204_p0 =  (sc_lv<16>) (sext_ln10_reg_311.read());
}

void sgfilter::thread_mul_ln10_2_fu_204_p2() {
    mul_ln10_2_fu_204_p2 = (!mul_ln10_2_fu_204_p0.read().is_01() || !grp_fu_267_p3.read().is_01())? sc_lv<32>(): sc_bigint<16>(mul_ln10_2_fu_204_p0.read()) * sc_bigint<32>(grp_fu_267_p3.read());
}

void sgfilter::thread_mul_ln10_7_fu_208_p0() {
    mul_ln10_7_fu_208_p0 =  (sc_lv<16>) (sext_ln10_1_reg_322.read());
}

void sgfilter::thread_mul_ln10_7_fu_208_p2() {
    mul_ln10_7_fu_208_p2 = (!mul_ln10_7_fu_208_p0.read().is_01() || !add_ln10_6_reg_327.read().is_01())? sc_lv<32>(): sc_bigint<16>(mul_ln10_7_fu_208_p0.read()) * sc_bigint<32>(add_ln10_6_reg_327.read());
}

void sgfilter::thread_sext_ln10_1_fu_162_p0() {
    sext_ln10_1_fu_162_p0 = b_q0.read();
}

void sgfilter::thread_sext_ln10_1_fu_162_p1() {
    sext_ln10_1_fu_162_p1 = esl_sext<32,16>(sext_ln10_1_fu_162_p0.read());
}

void sgfilter::thread_sext_ln10_4_fu_155_p0() {
    sext_ln10_4_fu_155_p0 = a_q0.read();
}

void sgfilter::thread_sext_ln10_4_fu_155_p1() {
    sext_ln10_4_fu_155_p1 = esl_sext<23,16>(sext_ln10_4_fu_155_p0.read());
}

void sgfilter::thread_sext_ln10_6_fu_166_p0() {
    sext_ln10_6_fu_166_p0 = b_q0.read();
}

void sgfilter::thread_sext_ln10_6_fu_166_p1() {
    sext_ln10_6_fu_166_p1 = esl_sext<20,16>(sext_ln10_6_fu_166_p0.read());
}

void sgfilter::thread_sext_ln10_7_fu_178_p1() {
    sext_ln10_7_fu_178_p1 = esl_sext<20,19>(shl_ln_fu_170_p3.read());
}

void sgfilter::thread_sext_ln10_fu_147_p0() {
    sext_ln10_fu_147_p0 = a_q0.read();
}

void sgfilter::thread_sext_ln10_fu_147_p1() {
    sext_ln10_fu_147_p1 = esl_sext<32,16>(sext_ln10_fu_147_p0.read());
}

void sgfilter::thread_shl_ln_fu_170_p1() {
    shl_ln_fu_170_p1 = b_q0.read();
}

void sgfilter::thread_shl_ln_fu_170_p3() {
    shl_ln_fu_170_p3 = esl_concat<16,3>(shl_ln_fu_170_p1.read(), ap_const_lv3_0);
}

void sgfilter::thread_sub_ln10_fu_182_p2() {
    sub_ln10_fu_182_p2 = (!sext_ln10_7_fu_178_p1.read().is_01() || !sext_ln10_6_fu_166_p1.read().is_01())? sc_lv<20>(): (sc_bigint<20>(sext_ln10_7_fu_178_p1.read()) - sc_bigint<20>(sext_ln10_6_fu_166_p1.read()));
}

void sgfilter::thread_zext_ln10_fu_141_p1() {
    zext_ln10_fu_141_p1 = esl_zext<64,7>(k_0_reg_106.read());
}

void sgfilter::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln7_fu_117_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state6;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(icmp_ln9_fu_129_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state3;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<6>) ("XXXXXX");
            break;
    }
}

void sgfilter::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"a_address0\" :  \"" << a_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"a_ce0\" :  \"" << a_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"a_q0\" :  \"" << a_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"b_address0\" :  \"" << b_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"b_ce0\" :  \"" << b_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"b_q0\" :  \"" << b_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"OUT_r_address0\" :  \"" << OUT_r_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"OUT_r_ce0\" :  \"" << OUT_r_ce0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"OUT_r_we0\" :  \"" << OUT_r_we0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"OUT_r_d0\" :  \"" << OUT_r_d0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"OUT_r_q0\" :  \"" << OUT_r_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_return\" :  \"" << ap_return.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

