// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "sgfilter.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic sgfilter::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic sgfilter::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<25> sgfilter::ap_ST_fsm_state1 = "1";
const sc_lv<25> sgfilter::ap_ST_fsm_state2 = "10";
const sc_lv<25> sgfilter::ap_ST_fsm_state3 = "100";
const sc_lv<25> sgfilter::ap_ST_fsm_state4 = "1000";
const sc_lv<25> sgfilter::ap_ST_fsm_state5 = "10000";
const sc_lv<25> sgfilter::ap_ST_fsm_state6 = "100000";
const sc_lv<25> sgfilter::ap_ST_fsm_state7 = "1000000";
const sc_lv<25> sgfilter::ap_ST_fsm_state8 = "10000000";
const sc_lv<25> sgfilter::ap_ST_fsm_state9 = "100000000";
const sc_lv<25> sgfilter::ap_ST_fsm_state10 = "1000000000";
const sc_lv<25> sgfilter::ap_ST_fsm_state11 = "10000000000";
const sc_lv<25> sgfilter::ap_ST_fsm_state12 = "100000000000";
const sc_lv<25> sgfilter::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<25> sgfilter::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<25> sgfilter::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<25> sgfilter::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<25> sgfilter::ap_ST_fsm_state17 = "10000000000000000";
const sc_lv<25> sgfilter::ap_ST_fsm_state18 = "100000000000000000";
const sc_lv<25> sgfilter::ap_ST_fsm_state19 = "1000000000000000000";
const sc_lv<25> sgfilter::ap_ST_fsm_state20 = "10000000000000000000";
const sc_lv<25> sgfilter::ap_ST_fsm_state21 = "100000000000000000000";
const sc_lv<25> sgfilter::ap_ST_fsm_state22 = "1000000000000000000000";
const sc_lv<25> sgfilter::ap_ST_fsm_state23 = "10000000000000000000000";
const sc_lv<25> sgfilter::ap_ST_fsm_state24 = "100000000000000000000000";
const sc_lv<25> sgfilter::ap_ST_fsm_state25 = "1000000000000000000000000";
const sc_lv<32> sgfilter::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> sgfilter::ap_const_lv32_1 = "1";
const sc_lv<1> sgfilter::ap_const_lv1_0 = "0";
const sc_lv<32> sgfilter::ap_const_lv32_3 = "11";
const sc_lv<1> sgfilter::ap_const_lv1_1 = "1";
const sc_lv<32> sgfilter::ap_const_lv32_4 = "100";
const sc_lv<32> sgfilter::ap_const_lv32_7 = "111";
const sc_lv<32> sgfilter::ap_const_lv32_8 = "1000";
const sc_lv<32> sgfilter::ap_const_lv32_9 = "1001";
const sc_lv<32> sgfilter::ap_const_lv32_A = "1010";
const sc_lv<32> sgfilter::ap_const_lv32_B = "1011";
const sc_lv<32> sgfilter::ap_const_lv32_C = "1100";
const sc_lv<32> sgfilter::ap_const_lv32_D = "1101";
const sc_lv<32> sgfilter::ap_const_lv32_E = "1110";
const sc_lv<32> sgfilter::ap_const_lv32_12 = "10010";
const sc_lv<32> sgfilter::ap_const_lv32_13 = "10011";
const sc_lv<32> sgfilter::ap_const_lv32_14 = "10100";
const sc_lv<25> sgfilter::ap_const_lv25_0 = "0000000000000000000000000";
const sc_lv<32> sgfilter::ap_const_lv32_2 = "10";
const sc_lv<7> sgfilter::ap_const_lv7_0 = "0000000";
const sc_lv<32> sgfilter::ap_const_lv32_15 = "10101";
const sc_lv<32> sgfilter::ap_const_lv32_5 = "101";
const sc_lv<32> sgfilter::ap_const_lv32_6 = "110";
const sc_lv<32> sgfilter::ap_const_lv32_16 = "10110";
const sc_lv<32> sgfilter::ap_const_lv32_17 = "10111";
const sc_lv<32> sgfilter::ap_const_lv32_18 = "11000";
const sc_lv<25> sgfilter::ap_const_lv25_18C0000 = "1100011000000000000000000";
const sc_lv<25> sgfilter::ap_const_lv25_1 = "1";
const sc_lv<7> sgfilter::ap_const_lv7_64 = "1100100";
const sc_lv<7> sgfilter::ap_const_lv7_1 = "1";
const sc_lv<3> sgfilter::ap_const_lv3_0 = "000";
const sc_lv<29> sgfilter::ap_const_lv29_7 = "111";
const sc_lv<32> sgfilter::ap_const_lv32_FFFFFFB5 = "11111111111111111111111110110101";
const sc_lv<18> sgfilter::ap_const_lv18_3FFB4 = "111111111110110100";
const sc_lv<21> sgfilter::ap_const_lv21_1FFC28 = "111111111110000101000";
const sc_lv<21> sgfilter::ap_const_lv21_1FFFD2 = "111111111111111010010";
const sc_lv<18> sgfilter::ap_const_lv18_5C = "1011100";
const sc_lv<18> sgfilter::ap_const_lv18_3FFD9 = "111111111111011001";
const sc_lv<31> sgfilter::ap_const_lv31_7FFFFFD2 = "1111111111111111111111111010010";
const bool sgfilter::ap_const_boolean_1 = true;

sgfilter::sgfilter(sc_module_name name) : sc_module(name), mVcdFile(0) {
    a_U = new sgfilter_a("a_U");
    a_U->clk(ap_clk);
    a_U->reset(ap_rst);
    a_U->address0(a_address0);
    a_U->ce0(a_ce0);
    a_U->we0(a_we0);
    a_U->d0(trunc_ln30_fu_172_p1);
    a_U->q0(a_q0);
    b_U = new sgfilter_a("b_U");
    b_U->clk(ap_clk);
    b_U->reset(ap_rst);
    b_U->address0(b_address0);
    b_U->ce0(b_ce0);
    b_U->we0(b_we0);
    b_U->d0(trunc_ln30_fu_172_p1);
    b_U->q0(b_q0);
    OUT_U = new sgfilter_OUT("OUT_U");
    OUT_U->clk(ap_clk);
    OUT_U->reset(ap_rst);
    OUT_U->address0(OUT_address0);
    OUT_U->ce0(OUT_ce0);
    OUT_U->we0(OUT_we0);
    OUT_U->d0(OUT_d0);
    OUT_U->q0(OUT_q0);
    sgfilter_mul_10ns_19s_32_2_1_U1 = new sgfilter_mul_10ns_19s_32_2_1<1,2,10,19,32>("sgfilter_mul_10ns_19s_32_2_1_U1");
    sgfilter_mul_10ns_19s_32_2_1_U1->clk(ap_clk);
    sgfilter_mul_10ns_19s_32_2_1_U1->reset(ap_rst);
    sgfilter_mul_10ns_19s_32_2_1_U1->din0(grp_fu_273_p0);
    sgfilter_mul_10ns_19s_32_2_1_U1->din1(grp_fu_273_p1);
    sgfilter_mul_10ns_19s_32_2_1_U1->ce(ap_var_for_const0);
    sgfilter_mul_10ns_19s_32_2_1_U1->dout(grp_fu_273_p2);
    sgfilter_mul_10ns_31s_32_5_1_U2 = new sgfilter_mul_10ns_31s_32_5_1<1,5,10,31,32>("sgfilter_mul_10ns_31s_32_5_1_U2");
    sgfilter_mul_10ns_31s_32_5_1_U2->clk(ap_clk);
    sgfilter_mul_10ns_31s_32_5_1_U2->reset(ap_rst);
    sgfilter_mul_10ns_31s_32_5_1_U2->din0(grp_fu_302_p0);
    sgfilter_mul_10ns_31s_32_5_1_U2->din1(add_ln40_1_reg_517);
    sgfilter_mul_10ns_31s_32_5_1_U2->ce(ap_var_for_const0);
    sgfilter_mul_10ns_31s_32_5_1_U2->dout(grp_fu_302_p2);
    sgfilter_mul_10ns_31s_32_5_1_U3 = new sgfilter_mul_10ns_31s_32_5_1<1,5,10,31,32>("sgfilter_mul_10ns_31s_32_5_1_U3");
    sgfilter_mul_10ns_31s_32_5_1_U3->clk(ap_clk);
    sgfilter_mul_10ns_31s_32_5_1_U3->reset(ap_rst);
    sgfilter_mul_10ns_31s_32_5_1_U3->din0(grp_fu_308_p0);
    sgfilter_mul_10ns_31s_32_5_1_U3->din1(grp_fu_308_p1);
    sgfilter_mul_10ns_31s_32_5_1_U3->ce(ap_var_for_const0);
    sgfilter_mul_10ns_31s_32_5_1_U3->dout(grp_fu_308_p2);
    sgfilter_mac_muladd_10ns_8s_15s_30_3_1_U4 = new sgfilter_mac_muladd_10ns_8s_15s_30_3_1<1,3,10,8,15,30>("sgfilter_mac_muladd_10ns_8s_15s_30_3_1_U4");
    sgfilter_mac_muladd_10ns_8s_15s_30_3_1_U4->clk(ap_clk);
    sgfilter_mac_muladd_10ns_8s_15s_30_3_1_U4->reset(ap_rst);
    sgfilter_mac_muladd_10ns_8s_15s_30_3_1_U4->din0(grp_fu_322_p0);
    sgfilter_mac_muladd_10ns_8s_15s_30_3_1_U4->din1(grp_fu_322_p1);
    sgfilter_mac_muladd_10ns_8s_15s_30_3_1_U4->din2(grp_fu_322_p2);
    sgfilter_mac_muladd_10ns_8s_15s_30_3_1_U4->ce(ap_var_for_const0);
    sgfilter_mac_muladd_10ns_8s_15s_30_3_1_U4->dout(grp_fu_322_p3);
    sgfilter_mac_muladd_10ns_11s_7s_21_3_1_U5 = new sgfilter_mac_muladd_10ns_11s_7s_21_3_1<1,3,10,11,7,21>("sgfilter_mac_muladd_10ns_11s_7s_21_3_1_U5");
    sgfilter_mac_muladd_10ns_11s_7s_21_3_1_U5->clk(ap_clk);
    sgfilter_mac_muladd_10ns_11s_7s_21_3_1_U5->reset(ap_rst);
    sgfilter_mac_muladd_10ns_11s_7s_21_3_1_U5->din0(grp_fu_330_p0);
    sgfilter_mac_muladd_10ns_11s_7s_21_3_1_U5->din1(grp_fu_330_p1);
    sgfilter_mac_muladd_10ns_11s_7s_21_3_1_U5->din2(grp_fu_330_p2);
    sgfilter_mac_muladd_10ns_11s_7s_21_3_1_U5->ce(ap_var_for_const0);
    sgfilter_mac_muladd_10ns_11s_7s_21_3_1_U5->dout(grp_fu_330_p3);
    sgfilter_mac_muladd_10ns_8ns_7s_18_3_1_U6 = new sgfilter_mac_muladd_10ns_8ns_7s_18_3_1<1,3,10,8,7,18>("sgfilter_mac_muladd_10ns_8ns_7s_18_3_1_U6");
    sgfilter_mac_muladd_10ns_8ns_7s_18_3_1_U6->clk(ap_clk);
    sgfilter_mac_muladd_10ns_8ns_7s_18_3_1_U6->reset(ap_rst);
    sgfilter_mac_muladd_10ns_8ns_7s_18_3_1_U6->din0(grp_fu_338_p0);
    sgfilter_mac_muladd_10ns_8ns_7s_18_3_1_U6->din1(grp_fu_338_p1);
    sgfilter_mac_muladd_10ns_8ns_7s_18_3_1_U6->din2(grp_fu_338_p2);
    sgfilter_mac_muladd_10ns_8ns_7s_18_3_1_U6->ce(ap_var_for_const0);
    sgfilter_mac_muladd_10ns_8ns_7s_18_3_1_U6->dout(grp_fu_338_p3);
    sgfilter_mac_muladd_10ns_21s_7s_31_3_1_U7 = new sgfilter_mac_muladd_10ns_21s_7s_31_3_1<1,3,10,21,7,31>("sgfilter_mac_muladd_10ns_21s_7s_31_3_1_U7");
    sgfilter_mac_muladd_10ns_21s_7s_31_3_1_U7->clk(ap_clk);
    sgfilter_mac_muladd_10ns_21s_7s_31_3_1_U7->reset(ap_rst);
    sgfilter_mac_muladd_10ns_21s_7s_31_3_1_U7->din0(grp_fu_345_p0);
    sgfilter_mac_muladd_10ns_21s_7s_31_3_1_U7->din1(add_ln40_reg_466);
    sgfilter_mac_muladd_10ns_21s_7s_31_3_1_U7->din2(grp_fu_345_p2);
    sgfilter_mac_muladd_10ns_21s_7s_31_3_1_U7->ce(ap_var_for_const0);
    sgfilter_mac_muladd_10ns_21s_7s_31_3_1_U7->dout(grp_fu_345_p3);
    sgfilter_mac_muladd_10ns_18s_30s_32_3_1_U8 = new sgfilter_mac_muladd_10ns_18s_30s_32_3_1<1,3,10,18,30,32>("sgfilter_mac_muladd_10ns_18s_30s_32_3_1_U8");
    sgfilter_mac_muladd_10ns_18s_30s_32_3_1_U8->clk(ap_clk);
    sgfilter_mac_muladd_10ns_18s_30s_32_3_1_U8->reset(ap_rst);
    sgfilter_mac_muladd_10ns_18s_30s_32_3_1_U8->din0(grp_fu_353_p0);
    sgfilter_mac_muladd_10ns_18s_30s_32_3_1_U8->din1(add_ln40_2_reg_471);
    sgfilter_mac_muladd_10ns_18s_30s_32_3_1_U8->din2(grp_fu_353_p2);
    sgfilter_mac_muladd_10ns_18s_30s_32_3_1_U8->ce(ap_var_for_const0);
    sgfilter_mac_muladd_10ns_18s_30s_32_3_1_U8->dout(grp_fu_353_p3);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_OUT_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( zext_ln40_reg_415 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( zext_ln31_fu_190_p1 );
    sensitive << ( sext_ln48_fu_209_p1 );

    SC_METHOD(thread_OUT_ce0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( ap_CS_fsm_state25 );

    SC_METHOD(thread_OUT_d0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( add_ln40_8_reg_547 );
    sensitive << ( ap_CS_fsm_state21 );

    SC_METHOD(thread_OUT_we0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln30_fu_178_p2 );
    sensitive << ( ap_CS_fsm_state21 );

    SC_METHOD(thread_a_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( zext_ln40_fu_225_p1 );
    sensitive << ( zext_ln31_fu_190_p1 );

    SC_METHOD(thread_a_ce0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_a_we0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln30_fu_178_p2 );

    SC_METHOD(thread_add_ln40_3_fu_258_p2);
    sensitive << ( sub_ln40_fu_252_p2 );

    SC_METHOD(thread_add_ln40_5_fu_291_p2);
    sensitive << ( mul_ln40_6_reg_507 );

    SC_METHOD(thread_add_ln40_7_fu_312_p2);
    sensitive << ( mul_ln40_7_reg_542 );

    SC_METHOD(thread_add_ln40_8_fu_317_p2);
    sensitive << ( mul_ln40_2_reg_537 );
    sensitive << ( add_ln40_7_fu_312_p2 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state13);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state14);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state15);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state19);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state20);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state21);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state22);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state23);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state24);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state25);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state25 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state25 );

    SC_METHOD(thread_ap_return);
    sensitive << ( OUT_q0 );
    sensitive << ( ap_CS_fsm_state25 );

    SC_METHOD(thread_b_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( zext_ln40_fu_225_p1 );
    sensitive << ( zext_ln31_fu_190_p1 );

    SC_METHOD(thread_b_ce0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_b_we0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln30_fu_178_p2 );

    SC_METHOD(thread_grp_fu_273_p0);
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( grp_fu_273_p00 );

    SC_METHOD(thread_grp_fu_273_p00);
    sensitive << ( b_load_reg_444 );

    SC_METHOD(thread_grp_fu_273_p1);
    sensitive << ( add_ln40_4_reg_461 );
    sensitive << ( ap_CS_fsm_state11 );

    SC_METHOD(thread_grp_fu_302_p0);
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( grp_fu_302_p00 );

    SC_METHOD(thread_grp_fu_302_p00);
    sensitive << ( a_load_reg_430 );

    SC_METHOD(thread_grp_fu_308_p0);
    sensitive << ( zext_ln40_2_reg_476 );
    sensitive << ( ap_CS_fsm_state15 );

    SC_METHOD(thread_grp_fu_308_p1);
    sensitive << ( add_ln40_6_reg_522 );
    sensitive << ( ap_CS_fsm_state15 );

    SC_METHOD(thread_grp_fu_322_p0);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( grp_fu_322_p00 );

    SC_METHOD(thread_grp_fu_322_p00);
    sensitive << ( a_q0 );

    SC_METHOD(thread_grp_fu_322_p1);
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_grp_fu_322_p2);
    sensitive << ( add_ln40_3_reg_456 );
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_grp_fu_330_p0);
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( grp_fu_330_p00 );

    SC_METHOD(thread_grp_fu_330_p00);
    sensitive << ( a_load_reg_430 );

    SC_METHOD(thread_grp_fu_330_p1);
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_grp_fu_330_p2);
    sensitive << ( ap_CS_fsm_state11 );

    SC_METHOD(thread_grp_fu_338_p0);
    sensitive << ( zext_ln40_6_reg_438 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_grp_fu_338_p1);
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_grp_fu_338_p2);
    sensitive << ( ap_CS_fsm_state11 );

    SC_METHOD(thread_grp_fu_345_p0);
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( grp_fu_345_p00 );

    SC_METHOD(thread_grp_fu_345_p00);
    sensitive << ( a_load_reg_430 );

    SC_METHOD(thread_grp_fu_345_p2);
    sensitive << ( ap_CS_fsm_state14 );

    SC_METHOD(thread_grp_fu_353_p0);
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( grp_fu_353_p00 );

    SC_METHOD(thread_grp_fu_353_p00);
    sensitive << ( a_load_reg_430 );

    SC_METHOD(thread_grp_fu_353_p2);
    sensitive << ( add_ln40_5_reg_512 );
    sensitive << ( ap_CS_fsm_state14 );

    SC_METHOD(thread_i_fu_203_p2);
    sensitive << ( i_0_reg_150 );

    SC_METHOD(thread_icmp_ln30_fu_178_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( k_0_reg_139 );

    SC_METHOD(thread_icmp_ln37_fu_197_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( i_0_reg_150 );

    SC_METHOD(thread_icmp_ln39_fu_213_p2);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( k1_0_reg_161 );

    SC_METHOD(thread_k_1_fu_219_p2);
    sensitive << ( k1_0_reg_161 );

    SC_METHOD(thread_k_fu_184_p2);
    sensitive << ( k_0_reg_139 );

    SC_METHOD(thread_sext_ln48_fu_209_p1);
    sensitive << ( idx );

    SC_METHOD(thread_sub_ln40_fu_252_p2);
    sensitive << ( zext_ln40_4_fu_248_p1 );
    sensitive << ( zext_ln40_3_fu_238_p1 );

    SC_METHOD(thread_tmp_fu_241_p3);
    sensitive << ( b_load_reg_444 );

    SC_METHOD(thread_trunc_ln30_fu_172_p1);
    sensitive << ( k_0_reg_139 );

    SC_METHOD(thread_zext_ln31_fu_190_p1);
    sensitive << ( k_0_reg_139 );

    SC_METHOD(thread_zext_ln40_2_fu_267_p1);
    sensitive << ( b_load_reg_444 );

    SC_METHOD(thread_zext_ln40_3_fu_238_p1);
    sensitive << ( b_load_reg_444 );

    SC_METHOD(thread_zext_ln40_4_fu_248_p1);
    sensitive << ( tmp_fu_241_p3 );

    SC_METHOD(thread_zext_ln40_6_fu_231_p1);
    sensitive << ( a_q0 );

    SC_METHOD(thread_zext_ln40_fu_225_p1);
    sensitive << ( k1_0_reg_161 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln30_fu_178_p2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( icmp_ln37_fu_197_p2 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( icmp_ln39_fu_213_p2 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    ap_CS_fsm = "0000000000000000000000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "sgfilter_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, idx, "(port)idx");
    sc_trace(mVcdFile, ap_return, "(port)ap_return");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, trunc_ln30_fu_172_p1, "trunc_ln30_fu_172_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, k_fu_184_p2, "k_fu_184_p2");
    sc_trace(mVcdFile, k_reg_374, "k_reg_374");
    sc_trace(mVcdFile, icmp_ln30_fu_178_p2, "icmp_ln30_fu_178_p2");
    sc_trace(mVcdFile, i_fu_203_p2, "i_fu_203_p2");
    sc_trace(mVcdFile, i_reg_397, "i_reg_397");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, icmp_ln37_fu_197_p2, "icmp_ln37_fu_197_p2");
    sc_trace(mVcdFile, k_1_fu_219_p2, "k_1_fu_219_p2");
    sc_trace(mVcdFile, k_1_reg_410, "k_1_reg_410");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, zext_ln40_fu_225_p1, "zext_ln40_fu_225_p1");
    sc_trace(mVcdFile, zext_ln40_reg_415, "zext_ln40_reg_415");
    sc_trace(mVcdFile, icmp_ln39_fu_213_p2, "icmp_ln39_fu_213_p2");
    sc_trace(mVcdFile, a_q0, "a_q0");
    sc_trace(mVcdFile, a_load_reg_430, "a_load_reg_430");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, zext_ln40_6_fu_231_p1, "zext_ln40_6_fu_231_p1");
    sc_trace(mVcdFile, zext_ln40_6_reg_438, "zext_ln40_6_reg_438");
    sc_trace(mVcdFile, b_q0, "b_q0");
    sc_trace(mVcdFile, b_load_reg_444, "b_load_reg_444");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, add_ln40_3_fu_258_p2, "add_ln40_3_fu_258_p2");
    sc_trace(mVcdFile, add_ln40_3_reg_456, "add_ln40_3_reg_456");
    sc_trace(mVcdFile, grp_fu_322_p3, "grp_fu_322_p3");
    sc_trace(mVcdFile, add_ln40_4_reg_461, "add_ln40_4_reg_461");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, grp_fu_330_p3, "grp_fu_330_p3");
    sc_trace(mVcdFile, add_ln40_reg_466, "add_ln40_reg_466");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, grp_fu_338_p3, "grp_fu_338_p3");
    sc_trace(mVcdFile, add_ln40_2_reg_471, "add_ln40_2_reg_471");
    sc_trace(mVcdFile, zext_ln40_2_fu_267_p1, "zext_ln40_2_fu_267_p1");
    sc_trace(mVcdFile, zext_ln40_2_reg_476, "zext_ln40_2_reg_476");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, grp_fu_273_p2, "grp_fu_273_p2");
    sc_trace(mVcdFile, mul_ln40_6_reg_507, "mul_ln40_6_reg_507");
    sc_trace(mVcdFile, add_ln40_5_fu_291_p2, "add_ln40_5_fu_291_p2");
    sc_trace(mVcdFile, add_ln40_5_reg_512, "add_ln40_5_reg_512");
    sc_trace(mVcdFile, ap_CS_fsm_state13, "ap_CS_fsm_state13");
    sc_trace(mVcdFile, grp_fu_345_p3, "grp_fu_345_p3");
    sc_trace(mVcdFile, add_ln40_1_reg_517, "add_ln40_1_reg_517");
    sc_trace(mVcdFile, ap_CS_fsm_state14, "ap_CS_fsm_state14");
    sc_trace(mVcdFile, grp_fu_353_p3, "grp_fu_353_p3");
    sc_trace(mVcdFile, add_ln40_6_reg_522, "add_ln40_6_reg_522");
    sc_trace(mVcdFile, ap_CS_fsm_state15, "ap_CS_fsm_state15");
    sc_trace(mVcdFile, grp_fu_302_p2, "grp_fu_302_p2");
    sc_trace(mVcdFile, mul_ln40_2_reg_537, "mul_ln40_2_reg_537");
    sc_trace(mVcdFile, ap_CS_fsm_state19, "ap_CS_fsm_state19");
    sc_trace(mVcdFile, grp_fu_308_p2, "grp_fu_308_p2");
    sc_trace(mVcdFile, mul_ln40_7_reg_542, "mul_ln40_7_reg_542");
    sc_trace(mVcdFile, add_ln40_8_fu_317_p2, "add_ln40_8_fu_317_p2");
    sc_trace(mVcdFile, add_ln40_8_reg_547, "add_ln40_8_reg_547");
    sc_trace(mVcdFile, ap_CS_fsm_state20, "ap_CS_fsm_state20");
    sc_trace(mVcdFile, ap_CS_fsm_state21, "ap_CS_fsm_state21");
    sc_trace(mVcdFile, a_address0, "a_address0");
    sc_trace(mVcdFile, a_ce0, "a_ce0");
    sc_trace(mVcdFile, a_we0, "a_we0");
    sc_trace(mVcdFile, b_address0, "b_address0");
    sc_trace(mVcdFile, b_ce0, "b_ce0");
    sc_trace(mVcdFile, b_we0, "b_we0");
    sc_trace(mVcdFile, OUT_address0, "OUT_address0");
    sc_trace(mVcdFile, OUT_ce0, "OUT_ce0");
    sc_trace(mVcdFile, OUT_we0, "OUT_we0");
    sc_trace(mVcdFile, OUT_d0, "OUT_d0");
    sc_trace(mVcdFile, OUT_q0, "OUT_q0");
    sc_trace(mVcdFile, k_0_reg_139, "k_0_reg_139");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, i_0_reg_150, "i_0_reg_150");
    sc_trace(mVcdFile, k1_0_reg_161, "k1_0_reg_161");
    sc_trace(mVcdFile, ap_CS_fsm_state22, "ap_CS_fsm_state22");
    sc_trace(mVcdFile, zext_ln31_fu_190_p1, "zext_ln31_fu_190_p1");
    sc_trace(mVcdFile, sext_ln48_fu_209_p1, "sext_ln48_fu_209_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, ap_CS_fsm_state23, "ap_CS_fsm_state23");
    sc_trace(mVcdFile, ap_CS_fsm_state24, "ap_CS_fsm_state24");
    sc_trace(mVcdFile, ap_CS_fsm_state25, "ap_CS_fsm_state25");
    sc_trace(mVcdFile, tmp_fu_241_p3, "tmp_fu_241_p3");
    sc_trace(mVcdFile, zext_ln40_4_fu_248_p1, "zext_ln40_4_fu_248_p1");
    sc_trace(mVcdFile, zext_ln40_3_fu_238_p1, "zext_ln40_3_fu_238_p1");
    sc_trace(mVcdFile, sub_ln40_fu_252_p2, "sub_ln40_fu_252_p2");
    sc_trace(mVcdFile, grp_fu_273_p0, "grp_fu_273_p0");
    sc_trace(mVcdFile, grp_fu_273_p1, "grp_fu_273_p1");
    sc_trace(mVcdFile, grp_fu_302_p0, "grp_fu_302_p0");
    sc_trace(mVcdFile, grp_fu_308_p0, "grp_fu_308_p0");
    sc_trace(mVcdFile, grp_fu_308_p1, "grp_fu_308_p1");
    sc_trace(mVcdFile, add_ln40_7_fu_312_p2, "add_ln40_7_fu_312_p2");
    sc_trace(mVcdFile, grp_fu_322_p0, "grp_fu_322_p0");
    sc_trace(mVcdFile, grp_fu_322_p1, "grp_fu_322_p1");
    sc_trace(mVcdFile, grp_fu_322_p2, "grp_fu_322_p2");
    sc_trace(mVcdFile, grp_fu_330_p0, "grp_fu_330_p0");
    sc_trace(mVcdFile, grp_fu_330_p1, "grp_fu_330_p1");
    sc_trace(mVcdFile, grp_fu_330_p2, "grp_fu_330_p2");
    sc_trace(mVcdFile, grp_fu_338_p0, "grp_fu_338_p0");
    sc_trace(mVcdFile, grp_fu_338_p1, "grp_fu_338_p1");
    sc_trace(mVcdFile, grp_fu_338_p2, "grp_fu_338_p2");
    sc_trace(mVcdFile, grp_fu_345_p0, "grp_fu_345_p0");
    sc_trace(mVcdFile, grp_fu_345_p2, "grp_fu_345_p2");
    sc_trace(mVcdFile, grp_fu_353_p0, "grp_fu_353_p0");
    sc_trace(mVcdFile, grp_fu_353_p2, "grp_fu_353_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, grp_fu_273_p00, "grp_fu_273_p00");
    sc_trace(mVcdFile, grp_fu_302_p00, "grp_fu_302_p00");
    sc_trace(mVcdFile, grp_fu_322_p00, "grp_fu_322_p00");
    sc_trace(mVcdFile, grp_fu_330_p00, "grp_fu_330_p00");
    sc_trace(mVcdFile, grp_fu_345_p00, "grp_fu_345_p00");
    sc_trace(mVcdFile, grp_fu_353_p00, "grp_fu_353_p00");
#endif

    }
    mHdltvinHandle.open("sgfilter.hdltvin.dat");
    mHdltvoutHandle.open("sgfilter.hdltvout.dat");
}

sgfilter::~sgfilter() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete a_U;
    delete b_U;
    delete OUT_U;
    delete sgfilter_mul_10ns_19s_32_2_1_U1;
    delete sgfilter_mul_10ns_31s_32_5_1_U2;
    delete sgfilter_mul_10ns_31s_32_5_1_U3;
    delete sgfilter_mac_muladd_10ns_8s_15s_30_3_1_U4;
    delete sgfilter_mac_muladd_10ns_11s_7s_21_3_1_U5;
    delete sgfilter_mac_muladd_10ns_8ns_7s_18_3_1_U6;
    delete sgfilter_mac_muladd_10ns_21s_7s_31_3_1_U7;
    delete sgfilter_mac_muladd_10ns_18s_30s_32_3_1_U8;
}

void sgfilter::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void sgfilter::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln30_fu_178_p2.read(), ap_const_lv1_1))) {
        i_0_reg_150 = ap_const_lv7_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln39_fu_213_p2.read()))) {
        i_0_reg_150 = i_reg_397.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln37_fu_197_p2.read()))) {
        k1_0_reg_161 = ap_const_lv25_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())) {
        k1_0_reg_161 = k_1_reg_410.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        k_0_reg_139 = k_reg_374.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        k_0_reg_139 = ap_const_lv25_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        a_load_reg_430 = a_q0.read();
        b_load_reg_444 = b_q0.read();
        zext_ln40_6_reg_438 = zext_ln40_6_fu_231_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        add_ln40_1_reg_517 = grp_fu_345_p3.read();
        add_ln40_6_reg_522 = grp_fu_353_p3.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        add_ln40_2_reg_471 = grp_fu_338_p3.read();
        add_ln40_reg_466 = grp_fu_330_p3.read();
        zext_ln40_2_reg_476 = zext_ln40_2_fu_267_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        add_ln40_3_reg_456 = add_ln40_3_fu_258_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        add_ln40_4_reg_461 = grp_fu_322_p3.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        add_ln40_5_reg_512 = add_ln40_5_fu_291_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) {
        add_ln40_8_reg_547 = add_ln40_8_fu_317_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        i_reg_397 = i_fu_203_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        k_1_reg_410 = k_1_fu_219_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        k_reg_374 = k_fu_184_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read())) {
        mul_ln40_2_reg_537 = grp_fu_302_p2.read();
        mul_ln40_7_reg_542 = grp_fu_308_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        mul_ln40_6_reg_507 = grp_fu_273_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln39_fu_213_p2.read()))) {
        zext_ln40_reg_415 = zext_ln40_fu_225_p1.read();
    }
}

void sgfilter::thread_OUT_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read())) {
        OUT_address0 =  (sc_lv<25>) (zext_ln40_reg_415.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        OUT_address0 =  (sc_lv<25>) (sext_ln48_fu_209_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        OUT_address0 =  (sc_lv<25>) (zext_ln31_fu_190_p1.read());
    } else {
        OUT_address0 = "XXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void sgfilter::thread_OUT_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read()))) {
        OUT_ce0 = ap_const_logic_1;
    } else {
        OUT_ce0 = ap_const_logic_0;
    }
}

void sgfilter::thread_OUT_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read())) {
        OUT_d0 = add_ln40_8_reg_547.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        OUT_d0 = ap_const_lv32_0;
    } else {
        OUT_d0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void sgfilter::thread_OUT_we0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(icmp_ln30_fu_178_p2.read(), ap_const_lv1_0)) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()))) {
        OUT_we0 = ap_const_logic_1;
    } else {
        OUT_we0 = ap_const_logic_0;
    }
}

void sgfilter::thread_a_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        a_address0 =  (sc_lv<25>) (zext_ln40_fu_225_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        a_address0 =  (sc_lv<25>) (zext_ln31_fu_190_p1.read());
    } else {
        a_address0 = "XXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void sgfilter::thread_a_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()))) {
        a_ce0 = ap_const_logic_1;
    } else {
        a_ce0 = ap_const_logic_0;
    }
}

void sgfilter::thread_a_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln30_fu_178_p2.read(), ap_const_lv1_0))) {
        a_we0 = ap_const_logic_1;
    } else {
        a_we0 = ap_const_logic_0;
    }
}

void sgfilter::thread_add_ln40_3_fu_258_p2() {
    add_ln40_3_fu_258_p2 = (!sub_ln40_fu_252_p2.read().is_01() || !ap_const_lv29_7.is_01())? sc_lv<29>(): (sc_biguint<29>(sub_ln40_fu_252_p2.read()) + sc_biguint<29>(ap_const_lv29_7));
}

void sgfilter::thread_add_ln40_5_fu_291_p2() {
    add_ln40_5_fu_291_p2 = (!mul_ln40_6_reg_507.read().is_01() || !ap_const_lv32_7.is_01())? sc_lv<32>(): (sc_biguint<32>(mul_ln40_6_reg_507.read()) + sc_biguint<32>(ap_const_lv32_7));
}

void sgfilter::thread_add_ln40_7_fu_312_p2() {
    add_ln40_7_fu_312_p2 = (!mul_ln40_7_reg_542.read().is_01() || !ap_const_lv32_FFFFFFB5.is_01())? sc_lv<32>(): (sc_biguint<32>(mul_ln40_7_reg_542.read()) + sc_bigint<32>(ap_const_lv32_FFFFFFB5));
}

void sgfilter::thread_add_ln40_8_fu_317_p2() {
    add_ln40_8_fu_317_p2 = (!add_ln40_7_fu_312_p2.read().is_01() || !mul_ln40_2_reg_537.read().is_01())? sc_lv<32>(): (sc_biguint<32>(add_ln40_7_fu_312_p2.read()) + sc_biguint<32>(mul_ln40_2_reg_537.read()));
}

void sgfilter::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void sgfilter::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void sgfilter::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void sgfilter::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[11];
}

void sgfilter::thread_ap_CS_fsm_state13() {
    ap_CS_fsm_state13 = ap_CS_fsm.read()[12];
}

void sgfilter::thread_ap_CS_fsm_state14() {
    ap_CS_fsm_state14 = ap_CS_fsm.read()[13];
}

void sgfilter::thread_ap_CS_fsm_state15() {
    ap_CS_fsm_state15 = ap_CS_fsm.read()[14];
}

void sgfilter::thread_ap_CS_fsm_state19() {
    ap_CS_fsm_state19 = ap_CS_fsm.read()[18];
}

void sgfilter::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void sgfilter::thread_ap_CS_fsm_state20() {
    ap_CS_fsm_state20 = ap_CS_fsm.read()[19];
}

void sgfilter::thread_ap_CS_fsm_state21() {
    ap_CS_fsm_state21 = ap_CS_fsm.read()[20];
}

void sgfilter::thread_ap_CS_fsm_state22() {
    ap_CS_fsm_state22 = ap_CS_fsm.read()[21];
}

void sgfilter::thread_ap_CS_fsm_state23() {
    ap_CS_fsm_state23 = ap_CS_fsm.read()[22];
}

void sgfilter::thread_ap_CS_fsm_state24() {
    ap_CS_fsm_state24 = ap_CS_fsm.read()[23];
}

void sgfilter::thread_ap_CS_fsm_state25() {
    ap_CS_fsm_state25 = ap_CS_fsm.read()[24];
}

void sgfilter::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void sgfilter::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void sgfilter::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void sgfilter::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void sgfilter::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void sgfilter::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void sgfilter::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void sgfilter::thread_ap_done() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read())) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void sgfilter::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void sgfilter::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void sgfilter::thread_ap_return() {
    ap_return = OUT_q0.read();
}

void sgfilter::thread_b_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        b_address0 =  (sc_lv<25>) (zext_ln40_fu_225_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        b_address0 =  (sc_lv<25>) (zext_ln31_fu_190_p1.read());
    } else {
        b_address0 = "XXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void sgfilter::thread_b_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()))) {
        b_ce0 = ap_const_logic_1;
    } else {
        b_ce0 = ap_const_logic_0;
    }
}

void sgfilter::thread_b_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln30_fu_178_p2.read(), ap_const_lv1_0))) {
        b_we0 = ap_const_logic_1;
    } else {
        b_we0 = ap_const_logic_0;
    }
}

void sgfilter::thread_grp_fu_273_p0() {
    grp_fu_273_p0 =  (sc_lv<10>) (grp_fu_273_p00.read());
}

void sgfilter::thread_grp_fu_273_p00() {
    grp_fu_273_p00 = esl_zext<32,10>(b_load_reg_444.read());
}

void sgfilter::thread_grp_fu_273_p1() {
    grp_fu_273_p1 =  (sc_lv<19>) (add_ln40_4_reg_461.read());
}

void sgfilter::thread_grp_fu_302_p0() {
    grp_fu_302_p0 =  (sc_lv<10>) (grp_fu_302_p00.read());
}

void sgfilter::thread_grp_fu_302_p00() {
    grp_fu_302_p00 = esl_zext<32,10>(a_load_reg_430.read());
}

void sgfilter::thread_grp_fu_308_p0() {
    grp_fu_308_p0 =  (sc_lv<10>) (zext_ln40_2_reg_476.read());
}

void sgfilter::thread_grp_fu_308_p1() {
    grp_fu_308_p1 =  (sc_lv<31>) (add_ln40_6_reg_522.read());
}

void sgfilter::thread_grp_fu_322_p0() {
    grp_fu_322_p0 =  (sc_lv<10>) (grp_fu_322_p00.read());
}

void sgfilter::thread_grp_fu_322_p00() {
    grp_fu_322_p00 = esl_zext<18,10>(a_q0.read());
}

void sgfilter::thread_grp_fu_322_p1() {
    grp_fu_322_p1 =  (sc_lv<8>) (ap_const_lv18_3FFB4);
}

void sgfilter::thread_grp_fu_322_p2() {
    grp_fu_322_p2 =  (sc_lv<15>) (add_ln40_3_reg_456.read());
}

void sgfilter::thread_grp_fu_330_p0() {
    grp_fu_330_p0 =  (sc_lv<10>) (grp_fu_330_p00.read());
}

void sgfilter::thread_grp_fu_330_p00() {
    grp_fu_330_p00 = esl_zext<21,10>(a_load_reg_430.read());
}

void sgfilter::thread_grp_fu_330_p1() {
    grp_fu_330_p1 =  (sc_lv<11>) (ap_const_lv21_1FFC28);
}

void sgfilter::thread_grp_fu_330_p2() {
    grp_fu_330_p2 =  (sc_lv<7>) (ap_const_lv21_1FFFD2);
}

void sgfilter::thread_grp_fu_338_p0() {
    grp_fu_338_p0 =  (sc_lv<10>) (zext_ln40_6_reg_438.read());
}

void sgfilter::thread_grp_fu_338_p1() {
    grp_fu_338_p1 =  (sc_lv<8>) (ap_const_lv18_5C);
}

void sgfilter::thread_grp_fu_338_p2() {
    grp_fu_338_p2 =  (sc_lv<7>) (ap_const_lv18_3FFD9);
}

void sgfilter::thread_grp_fu_345_p0() {
    grp_fu_345_p0 =  (sc_lv<10>) (grp_fu_345_p00.read());
}

void sgfilter::thread_grp_fu_345_p00() {
    grp_fu_345_p00 = esl_zext<31,10>(a_load_reg_430.read());
}

void sgfilter::thread_grp_fu_345_p2() {
    grp_fu_345_p2 =  (sc_lv<7>) (ap_const_lv31_7FFFFFD2);
}

void sgfilter::thread_grp_fu_353_p0() {
    grp_fu_353_p0 =  (sc_lv<10>) (grp_fu_353_p00.read());
}

void sgfilter::thread_grp_fu_353_p00() {
    grp_fu_353_p00 = esl_zext<29,10>(a_load_reg_430.read());
}

void sgfilter::thread_grp_fu_353_p2() {
    grp_fu_353_p2 =  (sc_lv<30>) (add_ln40_5_reg_512.read());
}

void sgfilter::thread_i_fu_203_p2() {
    i_fu_203_p2 = (!i_0_reg_150.read().is_01() || !ap_const_lv7_1.is_01())? sc_lv<7>(): (sc_biguint<7>(i_0_reg_150.read()) + sc_biguint<7>(ap_const_lv7_1));
}

void sgfilter::thread_icmp_ln30_fu_178_p2() {
    icmp_ln30_fu_178_p2 = (!k_0_reg_139.read().is_01() || !ap_const_lv25_18C0000.is_01())? sc_lv<1>(): sc_lv<1>(k_0_reg_139.read() == ap_const_lv25_18C0000);
}

void sgfilter::thread_icmp_ln37_fu_197_p2() {
    icmp_ln37_fu_197_p2 = (!i_0_reg_150.read().is_01() || !ap_const_lv7_64.is_01())? sc_lv<1>(): sc_lv<1>(i_0_reg_150.read() == ap_const_lv7_64);
}

void sgfilter::thread_icmp_ln39_fu_213_p2() {
    icmp_ln39_fu_213_p2 = (!k1_0_reg_161.read().is_01() || !ap_const_lv25_18C0000.is_01())? sc_lv<1>(): sc_lv<1>(k1_0_reg_161.read() == ap_const_lv25_18C0000);
}

void sgfilter::thread_k_1_fu_219_p2() {
    k_1_fu_219_p2 = (!k1_0_reg_161.read().is_01() || !ap_const_lv25_1.is_01())? sc_lv<25>(): (sc_biguint<25>(k1_0_reg_161.read()) + sc_biguint<25>(ap_const_lv25_1));
}

void sgfilter::thread_k_fu_184_p2() {
    k_fu_184_p2 = (!ap_const_lv25_1.is_01() || !k_0_reg_139.read().is_01())? sc_lv<25>(): (sc_biguint<25>(ap_const_lv25_1) + sc_biguint<25>(k_0_reg_139.read()));
}

void sgfilter::thread_sext_ln48_fu_209_p1() {
    sext_ln48_fu_209_p1 = esl_sext<64,32>(idx.read());
}

void sgfilter::thread_sub_ln40_fu_252_p2() {
    sub_ln40_fu_252_p2 = (!zext_ln40_4_fu_248_p1.read().is_01() || !zext_ln40_3_fu_238_p1.read().is_01())? sc_lv<29>(): (sc_biguint<29>(zext_ln40_4_fu_248_p1.read()) - sc_biguint<29>(zext_ln40_3_fu_238_p1.read()));
}

void sgfilter::thread_tmp_fu_241_p3() {
    tmp_fu_241_p3 = esl_concat<10,3>(b_load_reg_444.read(), ap_const_lv3_0);
}

void sgfilter::thread_trunc_ln30_fu_172_p1() {
    trunc_ln30_fu_172_p1 = k_0_reg_139.read().range(10-1, 0);
}

void sgfilter::thread_zext_ln31_fu_190_p1() {
    zext_ln31_fu_190_p1 = esl_zext<64,25>(k_0_reg_139.read());
}

void sgfilter::thread_zext_ln40_2_fu_267_p1() {
    zext_ln40_2_fu_267_p1 = esl_zext<32,10>(b_load_reg_444.read());
}

void sgfilter::thread_zext_ln40_3_fu_238_p1() {
    zext_ln40_3_fu_238_p1 = esl_zext<29,10>(b_load_reg_444.read());
}

void sgfilter::thread_zext_ln40_4_fu_248_p1() {
    zext_ln40_4_fu_248_p1 = esl_zext<29,13>(tmp_fu_241_p3.read());
}

void sgfilter::thread_zext_ln40_6_fu_231_p1() {
    zext_ln40_6_fu_231_p1 = esl_zext<18,10>(a_q0.read());
}

void sgfilter::thread_zext_ln40_fu_225_p1() {
    zext_ln40_fu_225_p1 = esl_zext<64,25>(k1_0_reg_161.read());
}

void sgfilter::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln30_fu_178_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state2;
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln37_fu_197_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else {
                ap_NS_fsm = ap_ST_fsm_state23;
            }
            break;
        case 16 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln39_fu_213_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_state6;
            }
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state12;
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state13;
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_fsm_state14;
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_fsm_state15;
            break;
        case 16384 : 
            ap_NS_fsm = ap_ST_fsm_state16;
            break;
        case 32768 : 
            ap_NS_fsm = ap_ST_fsm_state17;
            break;
        case 65536 : 
            ap_NS_fsm = ap_ST_fsm_state18;
            break;
        case 131072 : 
            ap_NS_fsm = ap_ST_fsm_state19;
            break;
        case 262144 : 
            ap_NS_fsm = ap_ST_fsm_state20;
            break;
        case 524288 : 
            ap_NS_fsm = ap_ST_fsm_state21;
            break;
        case 1048576 : 
            ap_NS_fsm = ap_ST_fsm_state22;
            break;
        case 2097152 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 4194304 : 
            ap_NS_fsm = ap_ST_fsm_state24;
            break;
        case 8388608 : 
            ap_NS_fsm = ap_ST_fsm_state25;
            break;
        case 16777216 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm = "XXXXXXXXXXXXXXXXXXXXXXXXX";
            break;
    }
}

void sgfilter::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"idx\" :  \"" << idx.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_return\" :  \"" << ap_return.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

