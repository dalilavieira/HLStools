

================================================================
== Vivado HLS Report for 'mibench'
================================================================
* Date:           Mon Apr 27 14:07:31 2020

* Version:        2019.1 (Build 2552052 on Fri May 24 15:28:33 MDT 2019)
* Project:        proj
* Solution:       sol
* Product family: virtexuplus
* Target device:  xcvu9p-flgb2104-2-i


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|     7.621|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-------+-------+-------+-------+---------+
    |    Latency    |    Interval   | Pipeline|
    |  min  |  max  |  min  |  max  |   Type  |
    +-------+-------+-------+-------+---------+
    |  30202|  30202|  30202|  30202|   none  |
    +-------+-------+-------+-------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------+-------+-------+----------+-----------+-----------+------+----------+
        |             |    Latency    | Iteration|  Initiation Interval  | Trip |          |
        |  Loop Name  |  min  |  max  |  Latency |  achieved |   target  | Count| Pipelined|
        +-------------+-------+-------+----------+-----------+-----------+------+----------+
        |- Loop 1     |  30200|  30200|       302|          -|          -|   100|    no    |
        | + Loop 1.1  |    300|    300|         3|          -|          -|   100|    no    |
        +-------------+-------+-------+----------+-----------+-----------+------+----------+



================================================================
== Utilization Estimates
================================================================
* Summary: 
+---------------------+---------+-------+---------+---------+-----+
|         Name        | BRAM_18K| DSP48E|    FF   |   LUT   | URAM|
+---------------------+---------+-------+---------+---------+-----+
|DSP                  |        -|      2|        -|        -|    -|
|Expression           |        -|      -|        0|      148|    -|
|FIFO                 |        -|      -|        -|        -|    -|
|Instance             |        -|      -|        -|        -|    -|
|Memory               |        -|      -|        -|        -|    -|
|Multiplexer          |        -|      -|        -|       71|    -|
|Register             |        -|      -|       57|        -|    -|
+---------------------+---------+-------+---------+---------+-----+
|Total                |        0|      2|       57|      219|    0|
+---------------------+---------+-------+---------+---------+-----+
|Available SLR        |     1440|   2280|   788160|   394080|  320|
+---------------------+---------+-------+---------+---------+-----+
|Utilization SLR (%)  |        0|   ~0  |    ~0   |    ~0   |    0|
+---------------------+---------+-------+---------+---------+-----+
|Available            |     4320|   6840|  2364480|  1182240|  960|
+---------------------+---------+-------+---------+---------+-----+
|Utilization (%)      |        0|   ~0  |    ~0   |    ~0   |    0|
+---------------------+---------+-------+---------+---------+-----+

+ Detail: 
    * Instance: 
    N/A

    * DSP48E: 
    +---------------------------------------------------+------------------------------------------------+---------------------+
    |                      Instance                     |                     Module                     |      Expression     |
    +---------------------------------------------------+------------------------------------------------+---------------------+
    |mibench_ama_addmuladd_16ns_16ns_16s_16s_16_1_1_U2  |mibench_ama_addmuladd_16ns_16ns_16s_16s_16_1_1  | i0 + i1 * (i2 + i3) |
    |mibench_mul_mul_16s_16s_16_1_1_U1                  |mibench_mul_mul_16s_16s_16_1_1                  |       i0 * i1       |
    +---------------------------------------------------+------------------------------------------------+---------------------+

    * Memory: 
    N/A

    * FIFO: 
    N/A

    * Expression: 
    +----------------------+----------+-------+---+----+------------+------------+
    |     Variable Name    | Operation| DSP48E| FF| LUT| Bitwidth P0| Bitwidth P1|
    +----------------------+----------+-------+---+----+------------+------------+
    |add_ln10_1_fu_175_p2  |     +    |      0|  0|  16|          16|          16|
    |add_ln10_fu_163_p2    |     +    |      0|  0|  16|           6|          16|
    |grp_fu_214_p0         |     +    |      0|  0|  16|          16|          16|
    |grp_fu_214_p1         |     +    |      0|  0|  16|          16|          16|
    |i_fu_124_p2           |     +    |      0|  0|   7|           7|           1|
    |k_fu_136_p2           |     +    |      0|  0|   7|           7|           1|
    |mul_ln10_fu_208_p1    |     +    |      0|  0|  16|          16|          16|
    |tmp5_fu_192_p2        |     +    |      0|  0|  16|           6|          16|
    |sub_ln10_fu_157_p2    |     -    |      0|  0|  16|          16|          16|
    |icmp_ln7_fu_118_p2    |   icmp   |      0|  0|  11|           7|           6|
    |icmp_ln9_fu_130_p2    |   icmp   |      0|  0|  11|           7|           6|
    +----------------------+----------+-------+---+----+------------+------------+
    |Total                 |          |      0|  0| 148|         120|         126|
    +----------------------+----------+-------+---+----+------------+------------+

    * Multiplexer: 
    +----------------+----+-----------+-----+-----------+
    |      Name      | LUT| Input Size| Bits| Total Bits|
    +----------------+----+-----------+-----+-----------+
    |OUT_r_address0  |  15|          3|    7|         21|
    |ap_NS_fsm       |  38|          7|    1|          7|
    |i_0_reg_96      |   9|          2|    7|         14|
    |k_0_reg_107     |   9|          2|    7|         14|
    +----------------+----+-----------+-----+-----------+
    |Total           |  71|         14|   22|         56|
    +----------------+----+-----------+-----+-----------+

    * Register: 
    +---------------------+----+----+-----+-----------+
    |         Name        | FF | LUT| Bits| Const Bits|
    +---------------------+----+----+-----+-----------+
    |A_load_reg_257       |  16|   0|   16|          0|
    |ap_CS_fsm            |   6|   0|    6|          0|
    |i_0_reg_96           |   7|   0|    7|          0|
    |i_reg_232            |   7|   0|    7|          0|
    |k_0_reg_107          |   7|   0|    7|          0|
    |k_reg_240            |   7|   0|    7|          0|
    |zext_ln10_1_reg_245  |   7|   0|   64|         57|
    +---------------------+----+----+-----+-----------+
    |Total                |  57|   0|  114|         57|
    +---------------------+----+----+-----+-----------+



================================================================
== Interface
================================================================
* Summary: 
+----------------+-----+-----+------------+--------------+--------------+
|    RTL Ports   | Dir | Bits|  Protocol  | Source Object|    C Type    |
+----------------+-----+-----+------------+--------------+--------------+
|ap_clk          |  in |    1| ap_ctrl_hs |    mibench   | return value |
|ap_rst          |  in |    1| ap_ctrl_hs |    mibench   | return value |
|ap_start        |  in |    1| ap_ctrl_hs |    mibench   | return value |
|ap_done         | out |    1| ap_ctrl_hs |    mibench   | return value |
|ap_idle         | out |    1| ap_ctrl_hs |    mibench   | return value |
|ap_ready        | out |    1| ap_ctrl_hs |    mibench   | return value |
|ap_return       | out |   32| ap_ctrl_hs |    mibench   | return value |
|A_address0      | out |    7|  ap_memory |       A      |     array    |
|A_ce0           | out |    1|  ap_memory |       A      |     array    |
|A_q0            |  in |   16|  ap_memory |       A      |     array    |
|B_address0      | out |    7|  ap_memory |       B      |     array    |
|B_ce0           | out |    1|  ap_memory |       B      |     array    |
|B_q0            |  in |   16|  ap_memory |       B      |     array    |
|C_address0      | out |    7|  ap_memory |       C      |     array    |
|C_ce0           | out |    1|  ap_memory |       C      |     array    |
|C_q0            |  in |   16|  ap_memory |       C      |     array    |
|OUT_r_address0  | out |    7|  ap_memory |     OUT_r    |     array    |
|OUT_r_ce0       | out |    1|  ap_memory |     OUT_r    |     array    |
|OUT_r_we0       | out |    1|  ap_memory |     OUT_r    |     array    |
|OUT_r_d0        | out |   32|  ap_memory |     OUT_r    |     array    |
|OUT_r_q0        |  in |   32|  ap_memory |     OUT_r    |     array    |
+----------------+-----+-----+------------+--------------+--------------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 2
IsDatapathOnly: 2
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 6
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 6 3 
3 --> 4 2 
4 --> 5 
5 --> 3 
6 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 0.60>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([100 x i16]* %A) nounwind, !map !7"   --->   Operation 7 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([100 x i16]* %B) nounwind, !map !13"   --->   Operation 8 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([100 x i16]* %C) nounwind, !map !17"   --->   Operation 9 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([100 x i32]* %OUT_r) nounwind, !map !21"   --->   Operation 10 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%OUT_addr = getelementptr [100 x i32]* %OUT_r, i64 0, i64 0" [mibench.cpp:3]   --->   Operation 11 'getelementptr' 'OUT_addr' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32 0) nounwind, !map !25"   --->   Operation 12 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecTopModule([8 x i8]* @mibench_str) nounwind"   --->   Operation 13 'spectopmodule' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.60ns)   --->   "br label %.loopexit" [mibench.cpp:7]   --->   Operation 14 'br' <Predicate = true> <Delay = 0.60>

State 2 <SV = 1> <Delay = 1.15>
ST_2 : Operation 15 [1/1] (0.00ns)   --->   "%i_0 = phi i7 [ 0, %0 ], [ %i, %.loopexit.loopexit ]"   --->   Operation 15 'phi' 'i_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 16 [1/1] (0.59ns)   --->   "%icmp_ln7 = icmp eq i7 %i_0, -28" [mibench.cpp:7]   --->   Operation 16 'icmp' 'icmp_ln7' <Predicate = true> <Delay = 0.59> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.59> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 17 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 100, i64 100, i64 100) nounwind"   --->   Operation 17 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 18 [1/1] (0.40ns)   --->   "%i = add i7 %i_0, 1" [mibench.cpp:7]   --->   Operation 18 'add' 'i' <Predicate = true> <Delay = 0.40> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.60> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 19 [1/1] (0.00ns)   --->   "br i1 %icmp_ln7, label %2, label %.preheader.preheader" [mibench.cpp:7]   --->   Operation 19 'br' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 20 [1/1] (0.60ns)   --->   "br label %.preheader" [mibench.cpp:9]   --->   Operation 20 'br' <Predicate = (!icmp_ln7)> <Delay = 0.60>
ST_2 : Operation 21 [2/2] (1.15ns)   --->   "%v = load i32* %OUT_addr, align 4" [mibench.cpp:18]   --->   Operation 21 'load' 'v' <Predicate = (icmp_ln7)> <Delay = 1.15> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 100> <RAM>

State 3 <SV = 2> <Delay = 1.15>
ST_3 : Operation 22 [1/1] (0.00ns)   --->   "%k_0 = phi i7 [ %k, %1 ], [ 0, %.preheader.preheader ]"   --->   Operation 22 'phi' 'k_0' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 23 [1/1] (0.59ns)   --->   "%icmp_ln9 = icmp eq i7 %k_0, -28" [mibench.cpp:9]   --->   Operation 23 'icmp' 'icmp_ln9' <Predicate = true> <Delay = 0.59> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.59> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 24 [1/1] (0.00ns)   --->   "%empty_2 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 100, i64 100, i64 100) nounwind"   --->   Operation 24 'speclooptripcount' 'empty_2' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 25 [1/1] (0.40ns)   --->   "%k = add i7 %k_0, 1" [mibench.cpp:9]   --->   Operation 25 'add' 'k' <Predicate = true> <Delay = 0.40> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.60> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 26 [1/1] (0.00ns)   --->   "br i1 %icmp_ln9, label %.loopexit.loopexit, label %1" [mibench.cpp:9]   --->   Operation 26 'br' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 27 [1/1] (0.00ns)   --->   "%zext_ln10_1 = zext i7 %k_0 to i64" [mibench.cpp:10]   --->   Operation 27 'zext' 'zext_ln10_1' <Predicate = (!icmp_ln9)> <Delay = 0.00>
ST_3 : Operation 28 [1/1] (0.00ns)   --->   "%A_addr = getelementptr [100 x i16]* %A, i64 0, i64 %zext_ln10_1" [mibench.cpp:10]   --->   Operation 28 'getelementptr' 'A_addr' <Predicate = (!icmp_ln9)> <Delay = 0.00>
ST_3 : Operation 29 [2/2] (1.15ns)   --->   "%A_load = load i16* %A_addr, align 2" [mibench.cpp:10]   --->   Operation 29 'load' 'A_load' <Predicate = (!icmp_ln9)> <Delay = 1.15> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 100> <RAM>
ST_3 : Operation 30 [1/1] (0.00ns)   --->   "br label %.loopexit"   --->   Operation 30 'br' <Predicate = (icmp_ln9)> <Delay = 0.00>

State 4 <SV = 3> <Delay = 1.15>
ST_4 : Operation 31 [1/2] (1.15ns)   --->   "%A_load = load i16* %A_addr, align 2" [mibench.cpp:10]   --->   Operation 31 'load' 'A_load' <Predicate = true> <Delay = 1.15> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 100> <RAM>
ST_4 : Operation 32 [1/1] (0.00ns)   --->   "%B_addr = getelementptr [100 x i16]* %B, i64 0, i64 %zext_ln10_1" [mibench.cpp:10]   --->   Operation 32 'getelementptr' 'B_addr' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 33 [2/2] (1.15ns)   --->   "%B_load = load i16* %B_addr, align 2" [mibench.cpp:10]   --->   Operation 33 'load' 'B_load' <Predicate = true> <Delay = 1.15> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 100> <RAM>
ST_4 : Operation 34 [1/1] (0.00ns)   --->   "%C_addr = getelementptr [100 x i16]* %C, i64 0, i64 %zext_ln10_1" [mibench.cpp:10]   --->   Operation 34 'getelementptr' 'C_addr' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 35 [2/2] (1.15ns)   --->   "%C_load = load i16* %C_addr, align 2" [mibench.cpp:10]   --->   Operation 35 'load' 'C_load' <Predicate = true> <Delay = 1.15> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 100> <RAM>

State 5 <SV = 4> <Delay = 7.62>
ST_5 : Operation 36 [1/1] (0.00ns)   --->   "%shl_ln10 = shl i16 %A_load, 3" [mibench.cpp:10]   --->   Operation 36 'shl' 'shl_ln10' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 37 [1/1] (0.00ns) (grouped into LUT with out node sub_ln10)   --->   "%shl_ln10_1 = shl i16 %A_load, 1" [mibench.cpp:10]   --->   Operation 37 'shl' 'shl_ln10_1' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 38 [1/1] (0.60ns) (out node of the LUT)   --->   "%sub_ln10 = sub i16 %shl_ln10, %shl_ln10_1" [mibench.cpp:10]   --->   Operation 38 'sub' 'sub_ln10' <Predicate = true> <Delay = 0.60> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.60> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 39 [1/2] (1.15ns)   --->   "%B_load = load i16* %B_addr, align 2" [mibench.cpp:10]   --->   Operation 39 'load' 'B_load' <Predicate = true> <Delay = 1.15> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 100> <RAM>
ST_5 : Operation 40 [1/1] (0.60ns)   --->   "%add_ln10 = add i16 43, %sub_ln10" [mibench.cpp:10]   --->   Operation 40 'add' 'add_ln10' <Predicate = true> <Delay = 0.60> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.60> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 41 [1/2] (1.15ns)   --->   "%C_load = load i16* %C_addr, align 2" [mibench.cpp:10]   --->   Operation 41 'load' 'C_load' <Predicate = true> <Delay = 1.15> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 100> <RAM>
ST_5 : Operation 42 [1/1] (0.00ns)   --->   "%shl_ln10_2 = shl i16 %B_load, 1" [mibench.cpp:10]   --->   Operation 42 'shl' 'shl_ln10_2' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 43 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln10_1 = add i16 %add_ln10, %shl_ln10_2" [mibench.cpp:10]   --->   Operation 43 'add' 'add_ln10_1' <Predicate = true> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.33> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_5 : Operation 44 [1/1] (0.67ns) (root node of TernaryAdder)   --->   "%add_ln10_2 = add i16 %add_ln10_1, %C_load" [mibench.cpp:10]   --->   Operation 44 'add' 'add_ln10_2' <Predicate = true> <Delay = 0.67> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.33> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_5 : Operation 45 [1/1] (2.53ns) (root node of the DSP)   --->   "%mul_ln10 = mul i16 %C_load, %add_ln10_2" [mibench.cpp:10]   --->   Operation 45 'mul' 'mul_ln10' <Predicate = true> <Delay = 2.53> <Core = "DSP48">   --->   Core 88 'DSP48' <Latency = 0> <II = 1> <Delay = 2.53> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 2> <OutPorts = 1> <Sync> <CReg>
ST_5 : Operation 46 [1/1] (0.60ns)   --->   "%tmp3 = add i16 %A_load, %B_load" [mibench.cpp:10]   --->   Operation 46 'add' 'tmp3' <Predicate = true> <Delay = 0.60> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.60> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 47 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%tmp5 = add i16 44, %sub_ln10" [mibench.cpp:10]   --->   Operation 47 'add' 'tmp5' <Predicate = true> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.33> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_5 : Operation 48 [1/1] (0.67ns) (root node of TernaryAdder)   --->   "%tmp4 = add i16 %tmp5, %shl_ln10" [mibench.cpp:10]   --->   Operation 48 'add' 'tmp4' <Predicate = true> <Delay = 0.67> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.33> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_5 : Operation 49 [1/1] (0.00ns) (grouped into DSP with root node add_ln10_3)   --->   "%tmp = add i16 %tmp4, %tmp3" [mibench.cpp:10]   --->   Operation 49 'add' 'tmp' <Predicate = true> <Delay = 0.00> <Core = "DSP48">   --->   Core 88 'DSP48' <Latency = 0> <II = 1> <Delay = 2.53> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 2> <OutPorts = 1> <Sync> <CReg>
ST_5 : Operation 50 [1/1] (0.49ns) (grouped into DSP with root node add_ln10_3)   --->   "%tmp1 = mul i16 %A_load, %tmp" [mibench.cpp:10]   --->   Operation 50 'mul' 'tmp1' <Predicate = true> <Delay = 0.49> <Core = "DSP48">   --->   Core 88 'DSP48' <Latency = 0> <II = 1> <Delay = 2.53> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 2> <OutPorts = 1> <Sync> <CReg>
ST_5 : Operation 51 [1/1] (2.03ns) (root node of the DSP)   --->   "%add_ln10_3 = add i16 %mul_ln10, %tmp1" [mibench.cpp:10]   --->   Operation 51 'add' 'add_ln10_3' <Predicate = true> <Delay = 2.03> <Core = "DSP48">   --->   Core 88 'DSP48' <Latency = 0> <II = 1> <Delay = 2.53> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 2> <OutPorts = 1> <Sync> <CReg>
ST_5 : Operation 52 [1/1] (0.00ns)   --->   "%zext_ln10 = zext i16 %add_ln10_3 to i32" [mibench.cpp:10]   --->   Operation 52 'zext' 'zext_ln10' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 53 [1/1] (0.00ns)   --->   "%OUT_addr_1 = getelementptr [100 x i32]* %OUT_r, i64 0, i64 %zext_ln10_1" [mibench.cpp:10]   --->   Operation 53 'getelementptr' 'OUT_addr_1' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 54 [1/1] (1.15ns)   --->   "store i32 %zext_ln10, i32* %OUT_addr_1, align 4" [mibench.cpp:10]   --->   Operation 54 'store' <Predicate = true> <Delay = 1.15> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 100> <RAM>
ST_5 : Operation 55 [1/1] (0.00ns)   --->   "br label %.preheader" [mibench.cpp:9]   --->   Operation 55 'br' <Predicate = true> <Delay = 0.00>

State 6 <SV = 2> <Delay = 1.15>
ST_6 : Operation 56 [1/2] (1.15ns)   --->   "%v = load i32* %OUT_addr, align 4" [mibench.cpp:18]   --->   Operation 56 'load' 'v' <Predicate = true> <Delay = 1.15> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 100> <RAM>
ST_6 : Operation 57 [1/1] (0.00ns)   --->   "ret i32 %v" [mibench.cpp:25]   --->   Operation 57 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Binding
============================================================
STG Binding: 
---------------- STG Properties BEGIN ----------------
- Is combinational: 0
- Is one-state seq: 0
- Is datapath-only: 0
- Is pipelined: 0
- Is top level: 1
Port [ Return ] is wired: 1; IO mode=ap_ctrl_hs:ce=0
Port [ A]:  wired=1; compound=1; hidden=0; nouse=0; global=0; static=0; extern=0; dir=0; type=1; pingpong=0; private_global=0; MemPort=[13]; IO mode=ap_memory:ce=0
Port [ B]:  wired=1; compound=1; hidden=0; nouse=0; global=0; static=0; extern=0; dir=0; type=1; pingpong=0; private_global=0; MemPort=[13]; IO mode=ap_memory:ce=0
Port [ C]:  wired=1; compound=1; hidden=0; nouse=0; global=0; static=0; extern=0; dir=0; type=1; pingpong=0; private_global=0; MemPort=[13]; IO mode=ap_memory:ce=0
Port [ OUT_r]:  wired=1; compound=1; hidden=0; nouse=0; global=0; static=0; extern=0; dir=2; type=1; pingpong=0; private_global=0; MemPort=[23]; IO mode=ap_memory:ce=0
---------------- STG Properties END ------------------

---------------- Datapath Model BEGIN ----------------

<LifeTime>
<method=bitvector/>
specbitsmap_ln0   (specbitsmap      ) [ 0000000]
specbitsmap_ln0   (specbitsmap      ) [ 0000000]
specbitsmap_ln0   (specbitsmap      ) [ 0000000]
specbitsmap_ln0   (specbitsmap      ) [ 0000000]
OUT_addr          (getelementptr    ) [ 0011111]
specbitsmap_ln0   (specbitsmap      ) [ 0000000]
spectopmodule_ln0 (spectopmodule    ) [ 0000000]
br_ln7            (br               ) [ 0111110]
i_0               (phi              ) [ 0010000]
icmp_ln7          (icmp             ) [ 0011110]
empty             (speclooptripcount) [ 0000000]
i                 (add              ) [ 0111110]
br_ln7            (br               ) [ 0000000]
br_ln9            (br               ) [ 0011110]
k_0               (phi              ) [ 0001000]
icmp_ln9          (icmp             ) [ 0011110]
empty_2           (speclooptripcount) [ 0000000]
k                 (add              ) [ 0011110]
br_ln9            (br               ) [ 0000000]
zext_ln10_1       (zext             ) [ 0000110]
A_addr            (getelementptr    ) [ 0000100]
br_ln0            (br               ) [ 0111110]
A_load            (load             ) [ 0000010]
B_addr            (getelementptr    ) [ 0000010]
C_addr            (getelementptr    ) [ 0000010]
shl_ln10          (shl              ) [ 0000000]
shl_ln10_1        (shl              ) [ 0000000]
sub_ln10          (sub              ) [ 0000000]
B_load            (load             ) [ 0000000]
add_ln10          (add              ) [ 0000000]
C_load            (load             ) [ 0000000]
shl_ln10_2        (shl              ) [ 0000000]
add_ln10_1        (add              ) [ 0000000]
add_ln10_2        (add              ) [ 0000000]
mul_ln10          (mul              ) [ 0000000]
tmp3              (add              ) [ 0000000]
tmp5              (add              ) [ 0000000]
tmp4              (add              ) [ 0000000]
tmp               (add              ) [ 0000000]
tmp1              (mul              ) [ 0000000]
add_ln10_3        (add              ) [ 0000000]
zext_ln10         (zext             ) [ 0000000]
OUT_addr_1        (getelementptr    ) [ 0000000]
store_ln10        (store            ) [ 0000000]
br_ln9            (br               ) [ 0011110]
v                 (load             ) [ 0000000]
ret_ln25          (ret              ) [ 0000000]
</LifeTime>

<model>

<comp_list>
<comp id="0" class="1000" name="A">
<pin_list>
<pin id="1" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="A"/><MemPortTyVec>1 3 </MemPortTyVec>
</StgValue>
</bind>
</comp>

<comp id="2" class="1000" name="B">
<pin_list>
<pin id="3" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="B"/><MemPortTyVec>1 3 </MemPortTyVec>
</StgValue>
</bind>
</comp>

<comp id="4" class="1000" name="C">
<pin_list>
<pin id="5" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="C"/><MemPortTyVec>1 3 </MemPortTyVec>
</StgValue>
</bind>
</comp>

<comp id="6" class="1000" name="OUT_r">
<pin_list>
<pin id="7" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="OUT_r"/><MemPortTyVec>2 3 </MemPortTyVec>
</StgValue>
</bind>
</comp>

<comp id="8" class="1001" name="const_8">
<pin_list>
<pin id="9" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_SpecBitsMap"/></StgValue>
</bind>
</comp>

<comp id="10" class="1001" name="const_10">
<pin_list>
<pin id="11" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="12" class="1001" name="const_12">
<pin_list>
<pin id="13" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="14" class="1001" name="const_14">
<pin_list>
<pin id="15" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_SpecTopModule"/></StgValue>
</bind>
</comp>

<comp id="16" class="1001" name="const_16">
<pin_list>
<pin id="17" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="mibench_str"/></StgValue>
</bind>
</comp>

<comp id="18" class="1001" name="const_18">
<pin_list>
<pin id="19" dir="1" index="0" bw="1" slack="1"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="20" class="1001" name="const_20">
<pin_list>
<pin id="21" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="22" class="1001" name="const_22">
<pin_list>
<pin id="23" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_SpecLoopTripCount"/></StgValue>
</bind>
</comp>

<comp id="24" class="1001" name="const_24">
<pin_list>
<pin id="25" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="26" class="1001" name="const_26">
<pin_list>
<pin id="27" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="28" class="1001" name="const_28">
<pin_list>
<pin id="29" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="30" class="1001" name="const_30">
<pin_list>
<pin id="31" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="32" class="1001" name="const_32">
<pin_list>
<pin id="33" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="34" class="1001" name="const_34">
<pin_list>
<pin id="35" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="36" class="1004" name="OUT_addr_gep_fu_36">
<pin_list>
<pin id="37" dir="0" index="0" bw="32" slack="0"/>
<pin id="38" dir="0" index="1" bw="1" slack="0"/>
<pin id="39" dir="0" index="2" bw="1" slack="0"/>
<pin id="40" dir="1" index="3" bw="7" slack="1"/>
</pin_list>
<bind>
<opcode="getelementptr(29) " fcode="getelementptr"/>
<opset="OUT_addr/1 "/>
</bind>
</comp>

<comp id="44" class="1004" name="grp_access_fu_44">
<pin_list>
<pin id="45" dir="0" index="0" bw="7" slack="0"/>
<pin id="46" dir="0" index="1" bw="32" slack="0"/>
<pin id="47" dir="0" index="2" bw="0" slack="2147483647"/>
<pin id="48" dir="1" index="3" bw="32" slack="2147483647"/>
</pin_list>
<bind>
<opcode="load(27) store(28) " fcode="store"/>
<opset="v/2 store_ln10/5 "/>
</bind>
</comp>

<comp id="49" class="1004" name="A_addr_gep_fu_49">
<pin_list>
<pin id="50" dir="0" index="0" bw="16" slack="0"/>
<pin id="51" dir="0" index="1" bw="1" slack="0"/>
<pin id="52" dir="0" index="2" bw="7" slack="0"/>
<pin id="53" dir="1" index="3" bw="7" slack="0"/>
</pin_list>
<bind>
<opcode="getelementptr(29) " fcode="getelementptr"/>
<opset="A_addr/3 "/>
</bind>
</comp>

<comp id="56" class="1004" name="grp_access_fu_56">
<pin_list>
<pin id="57" dir="0" index="0" bw="7" slack="0"/>
<pin id="58" dir="0" index="1" bw="16" slack="2147483647"/>
<pin id="59" dir="0" index="2" bw="0" slack="2147483647"/>
<pin id="60" dir="1" index="3" bw="16" slack="1"/>
</pin_list>
<bind>
<opcode="load(27) " fcode="load"/>
<opset="A_load/3 "/>
</bind>
</comp>

<comp id="62" class="1004" name="B_addr_gep_fu_62">
<pin_list>
<pin id="63" dir="0" index="0" bw="16" slack="0"/>
<pin id="64" dir="0" index="1" bw="1" slack="0"/>
<pin id="65" dir="0" index="2" bw="7" slack="1"/>
<pin id="66" dir="1" index="3" bw="7" slack="0"/>
</pin_list>
<bind>
<opcode="getelementptr(29) " fcode="getelementptr"/>
<opset="B_addr/4 "/>
</bind>
</comp>

<comp id="69" class="1004" name="grp_access_fu_69">
<pin_list>
<pin id="70" dir="0" index="0" bw="7" slack="0"/>
<pin id="71" dir="0" index="1" bw="16" slack="2147483647"/>
<pin id="72" dir="0" index="2" bw="0" slack="2147483647"/>
<pin id="73" dir="1" index="3" bw="16" slack="0"/>
</pin_list>
<bind>
<opcode="load(27) " fcode="load"/>
<opset="B_load/4 "/>
</bind>
</comp>

<comp id="75" class="1004" name="C_addr_gep_fu_75">
<pin_list>
<pin id="76" dir="0" index="0" bw="16" slack="0"/>
<pin id="77" dir="0" index="1" bw="1" slack="0"/>
<pin id="78" dir="0" index="2" bw="7" slack="1"/>
<pin id="79" dir="1" index="3" bw="7" slack="0"/>
</pin_list>
<bind>
<opcode="getelementptr(29) " fcode="getelementptr"/>
<opset="C_addr/4 "/>
</bind>
</comp>

<comp id="82" class="1004" name="grp_access_fu_82">
<pin_list>
<pin id="83" dir="0" index="0" bw="7" slack="0"/>
<pin id="84" dir="0" index="1" bw="16" slack="2147483647"/>
<pin id="85" dir="0" index="2" bw="0" slack="2147483647"/>
<pin id="86" dir="1" index="3" bw="16" slack="0"/>
</pin_list>
<bind>
<opcode="load(27) " fcode="load"/>
<opset="C_load/4 "/>
</bind>
</comp>

<comp id="88" class="1004" name="OUT_addr_1_gep_fu_88">
<pin_list>
<pin id="89" dir="0" index="0" bw="32" slack="0"/>
<pin id="90" dir="0" index="1" bw="1" slack="0"/>
<pin id="91" dir="0" index="2" bw="7" slack="2"/>
<pin id="92" dir="1" index="3" bw="7" slack="0"/>
</pin_list>
<bind>
<opcode="getelementptr(29) " fcode="getelementptr"/>
<opset="OUT_addr_1/5 "/>
</bind>
</comp>

<comp id="96" class="1005" name="i_0_reg_96">
<pin_list>
<pin id="97" dir="0" index="0" bw="7" slack="1"/>
<pin id="98" dir="1" index="1" bw="7" slack="1"/>
</pin_list>
<bind>
<opset="i_0 (phireg) "/>
</bind>
</comp>

<comp id="100" class="1004" name="i_0_phi_fu_100">
<pin_list>
<pin id="101" dir="0" index="0" bw="1" slack="1"/>
<pin id="102" dir="0" index="1" bw="0" slack="2147483647"/>
<pin id="103" dir="0" index="2" bw="7" slack="0"/>
<pin id="104" dir="0" index="3" bw="0" slack="2147483647"/>
<pin id="105" dir="1" index="4" bw="7" slack="0"/>
</pin_list>
<bind>
<opcode="phi(47) " fcode="phi"/>
<opset="i_0/2 "/>
</bind>
</comp>

<comp id="107" class="1005" name="k_0_reg_107">
<pin_list>
<pin id="108" dir="0" index="0" bw="7" slack="1"/>
<pin id="109" dir="1" index="1" bw="7" slack="1"/>
</pin_list>
<bind>
<opset="k_0 (phireg) "/>
</bind>
</comp>

<comp id="111" class="1004" name="k_0_phi_fu_111">
<pin_list>
<pin id="112" dir="0" index="0" bw="7" slack="0"/>
<pin id="113" dir="0" index="1" bw="0" slack="2147483647"/>
<pin id="114" dir="0" index="2" bw="1" slack="1"/>
<pin id="115" dir="0" index="3" bw="0" slack="2147483647"/>
<pin id="116" dir="1" index="4" bw="7" slack="0"/>
</pin_list>
<bind>
<opcode="phi(47) " fcode="phi"/>
<opset="k_0/3 "/>
</bind>
</comp>

<comp id="118" class="1004" name="icmp_ln7_fu_118">
<pin_list>
<pin id="119" dir="0" index="0" bw="7" slack="0"/>
<pin id="120" dir="0" index="1" bw="7" slack="0"/>
<pin id="121" dir="1" index="2" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<opcode="icmp(45) " fcode="icmp"/>
<opset="icmp_ln7/2 "/>
</bind>
</comp>

<comp id="124" class="1004" name="i_fu_124">
<pin_list>
<pin id="125" dir="0" index="0" bw="7" slack="0"/>
<pin id="126" dir="0" index="1" bw="1" slack="0"/>
<pin id="127" dir="1" index="2" bw="7" slack="0"/>
</pin_list>
<bind>
<opcode="add(8) " fcode="add"/>
<opset="i/2 "/>
</bind>
</comp>

<comp id="130" class="1004" name="icmp_ln9_fu_130">
<pin_list>
<pin id="131" dir="0" index="0" bw="7" slack="0"/>
<pin id="132" dir="0" index="1" bw="7" slack="0"/>
<pin id="133" dir="1" index="2" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<opcode="icmp(45) " fcode="icmp"/>
<opset="icmp_ln9/3 "/>
</bind>
</comp>

<comp id="136" class="1004" name="k_fu_136">
<pin_list>
<pin id="137" dir="0" index="0" bw="7" slack="0"/>
<pin id="138" dir="0" index="1" bw="1" slack="0"/>
<pin id="139" dir="1" index="2" bw="7" slack="0"/>
</pin_list>
<bind>
<opcode="add(8) " fcode="add"/>
<opset="k/3 "/>
</bind>
</comp>

<comp id="142" class="1004" name="zext_ln10_1_fu_142">
<pin_list>
<pin id="143" dir="0" index="0" bw="7" slack="0"/>
<pin id="144" dir="1" index="1" bw="64" slack="0"/>
</pin_list>
<bind>
<opcode="zext(34) " fcode="zext"/>
<opset="zext_ln10_1/3 "/>
</bind>
</comp>

<comp id="147" class="1004" name="shl_ln10_fu_147">
<pin_list>
<pin id="148" dir="0" index="0" bw="16" slack="1"/>
<pin id="149" dir="0" index="1" bw="3" slack="0"/>
<pin id="150" dir="1" index="2" bw="16" slack="0"/>
</pin_list>
<bind>
<opcode="shl(20) " fcode="shl"/>
<opset="shl_ln10/5 "/>
</bind>
</comp>

<comp id="152" class="1004" name="shl_ln10_1_fu_152">
<pin_list>
<pin id="153" dir="0" index="0" bw="16" slack="1"/>
<pin id="154" dir="0" index="1" bw="1" slack="0"/>
<pin id="155" dir="1" index="2" bw="16" slack="0"/>
</pin_list>
<bind>
<opcode="shl(20) " fcode="shl"/>
<opset="shl_ln10_1/5 "/>
</bind>
</comp>

<comp id="157" class="1004" name="sub_ln10_fu_157">
<pin_list>
<pin id="158" dir="0" index="0" bw="16" slack="0"/>
<pin id="159" dir="0" index="1" bw="16" slack="0"/>
<pin id="160" dir="1" index="2" bw="16" slack="0"/>
</pin_list>
<bind>
<opcode="sub(10) " fcode="sub"/>
<opset="sub_ln10/5 "/>
</bind>
</comp>

<comp id="163" class="1004" name="add_ln10_fu_163">
<pin_list>
<pin id="164" dir="0" index="0" bw="7" slack="0"/>
<pin id="165" dir="0" index="1" bw="16" slack="0"/>
<pin id="166" dir="1" index="2" bw="16" slack="0"/>
</pin_list>
<bind>
<opcode="add(8) " fcode="add"/>
<opset="add_ln10/5 "/>
</bind>
</comp>

<comp id="169" class="1004" name="shl_ln10_2_fu_169">
<pin_list>
<pin id="170" dir="0" index="0" bw="16" slack="0"/>
<pin id="171" dir="0" index="1" bw="1" slack="0"/>
<pin id="172" dir="1" index="2" bw="16" slack="0"/>
</pin_list>
<bind>
<opcode="shl(20) " fcode="shl"/>
<opset="shl_ln10_2/5 "/>
</bind>
</comp>

<comp id="175" class="1004" name="add_ln10_1_fu_175">
<pin_list>
<pin id="176" dir="0" index="0" bw="16" slack="0"/>
<pin id="177" dir="0" index="1" bw="16" slack="0"/>
<pin id="178" dir="1" index="2" bw="16" slack="0"/>
</pin_list>
<bind>
<opcode="add(8) " fcode="add"/>
<opset="add_ln10_1/5 "/>
</bind>
</comp>

<comp id="181" class="1004" name="add_ln10_2_fu_181">
<pin_list>
<pin id="182" dir="0" index="0" bw="16" slack="0"/>
<pin id="183" dir="0" index="1" bw="16" slack="0"/>
<pin id="184" dir="1" index="2" bw="16" slack="0"/>
</pin_list>
<bind>
<opcode="add(8) " fcode="add"/>
<opset="add_ln10_2/5 "/>
</bind>
</comp>

<comp id="187" class="1004" name="tmp3_fu_187">
<pin_list>
<pin id="188" dir="0" index="0" bw="16" slack="1"/>
<pin id="189" dir="0" index="1" bw="16" slack="0"/>
<pin id="190" dir="1" index="2" bw="16" slack="0"/>
</pin_list>
<bind>
<opcode="add(8) " fcode="add"/>
<opset="tmp3/5 "/>
</bind>
</comp>

<comp id="192" class="1004" name="tmp5_fu_192">
<pin_list>
<pin id="193" dir="0" index="0" bw="7" slack="0"/>
<pin id="194" dir="0" index="1" bw="16" slack="0"/>
<pin id="195" dir="1" index="2" bw="16" slack="0"/>
</pin_list>
<bind>
<opcode="add(8) " fcode="add"/>
<opset="tmp5/5 "/>
</bind>
</comp>

<comp id="198" class="1004" name="tmp4_fu_198">
<pin_list>
<pin id="199" dir="0" index="0" bw="16" slack="0"/>
<pin id="200" dir="0" index="1" bw="16" slack="0"/>
<pin id="201" dir="1" index="2" bw="16" slack="0"/>
</pin_list>
<bind>
<opcode="add(8) " fcode="add"/>
<opset="tmp4/5 "/>
</bind>
</comp>

<comp id="204" class="1004" name="zext_ln10_fu_204">
<pin_list>
<pin id="205" dir="0" index="0" bw="16" slack="0"/>
<pin id="206" dir="1" index="1" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="zext(34) " fcode="zext"/>
<opset="zext_ln10/5 "/>
</bind>
</comp>

<comp id="208" class="1007" name="mul_ln10_fu_208">
<pin_list>
<pin id="209" dir="0" index="0" bw="16" slack="0"/>
<pin id="210" dir="0" index="1" bw="16" slack="0"/>
<pin id="211" dir="1" index="2" bw="16" slack="0"/>
</pin_list>
<bind>
<opcode="mul(12) " fcode="mul"/>
<opset="mul_ln10/5 "/>
</bind>
</comp>

<comp id="214" class="1007" name="grp_fu_214">
<pin_list>
<pin id="215" dir="0" index="0" bw="16" slack="0"/>
<pin id="216" dir="0" index="1" bw="16" slack="0"/>
<pin id="217" dir="0" index="2" bw="16" slack="2147483647"/>
<pin id="218" dir="0" index="3" bw="16" slack="0"/>
<pin id="219" dir="1" index="4" bw="16" slack="0"/>
</pin_list>
<bind>
<opcode="addmuladd(1175) " fcode="addmuladd"/>
<opset="tmp/5 tmp1/5 add_ln10_3/5 "/>
</bind>
</comp>

<comp id="224" class="1005" name="OUT_addr_reg_224">
<pin_list>
<pin id="225" dir="0" index="0" bw="7" slack="1"/>
<pin id="226" dir="1" index="1" bw="7" slack="1"/>
</pin_list>
<bind>
<opset="OUT_addr "/>
</bind>
</comp>

<comp id="232" class="1005" name="i_reg_232">
<pin_list>
<pin id="233" dir="0" index="0" bw="7" slack="0"/>
<pin id="234" dir="1" index="1" bw="7" slack="0"/>
</pin_list>
<bind>
<opset="i "/>
</bind>
</comp>

<comp id="240" class="1005" name="k_reg_240">
<pin_list>
<pin id="241" dir="0" index="0" bw="7" slack="0"/>
<pin id="242" dir="1" index="1" bw="7" slack="0"/>
</pin_list>
<bind>
<opset="k "/>
</bind>
</comp>

<comp id="245" class="1005" name="zext_ln10_1_reg_245">
<pin_list>
<pin id="246" dir="0" index="0" bw="64" slack="1"/>
<pin id="247" dir="1" index="1" bw="64" slack="1"/>
</pin_list>
<bind>
<opset="zext_ln10_1 "/>
</bind>
</comp>

<comp id="252" class="1005" name="A_addr_reg_252">
<pin_list>
<pin id="253" dir="0" index="0" bw="7" slack="1"/>
<pin id="254" dir="1" index="1" bw="7" slack="1"/>
</pin_list>
<bind>
<opset="A_addr "/>
</bind>
</comp>

<comp id="257" class="1005" name="A_load_reg_257">
<pin_list>
<pin id="258" dir="0" index="0" bw="16" slack="1"/>
<pin id="259" dir="1" index="1" bw="16" slack="1"/>
</pin_list>
<bind>
<opset="A_load "/>
</bind>
</comp>

<comp id="265" class="1005" name="B_addr_reg_265">
<pin_list>
<pin id="266" dir="0" index="0" bw="7" slack="1"/>
<pin id="267" dir="1" index="1" bw="7" slack="1"/>
</pin_list>
<bind>
<opset="B_addr "/>
</bind>
</comp>

<comp id="270" class="1005" name="C_addr_reg_270">
<pin_list>
<pin id="271" dir="0" index="0" bw="7" slack="1"/>
<pin id="272" dir="1" index="1" bw="7" slack="1"/>
</pin_list>
<bind>
<opset="C_addr "/>
</bind>
</comp>

</comp_list>

<net_list>
<net id="41"><net_src comp="6" pin="0"/><net_sink comp="36" pin=0"/></net>

<net id="42"><net_src comp="10" pin="0"/><net_sink comp="36" pin=1"/></net>

<net id="43"><net_src comp="10" pin="0"/><net_sink comp="36" pin=2"/></net>

<net id="54"><net_src comp="0" pin="0"/><net_sink comp="49" pin=0"/></net>

<net id="55"><net_src comp="10" pin="0"/><net_sink comp="49" pin=1"/></net>

<net id="61"><net_src comp="49" pin="3"/><net_sink comp="56" pin=0"/></net>

<net id="67"><net_src comp="2" pin="0"/><net_sink comp="62" pin=0"/></net>

<net id="68"><net_src comp="10" pin="0"/><net_sink comp="62" pin=1"/></net>

<net id="74"><net_src comp="62" pin="3"/><net_sink comp="69" pin=0"/></net>

<net id="80"><net_src comp="4" pin="0"/><net_sink comp="75" pin=0"/></net>

<net id="81"><net_src comp="10" pin="0"/><net_sink comp="75" pin=1"/></net>

<net id="87"><net_src comp="75" pin="3"/><net_sink comp="82" pin=0"/></net>

<net id="93"><net_src comp="6" pin="0"/><net_sink comp="88" pin=0"/></net>

<net id="94"><net_src comp="10" pin="0"/><net_sink comp="88" pin=1"/></net>

<net id="95"><net_src comp="88" pin="3"/><net_sink comp="44" pin=0"/></net>

<net id="99"><net_src comp="18" pin="0"/><net_sink comp="96" pin=0"/></net>

<net id="106"><net_src comp="96" pin="1"/><net_sink comp="100" pin=0"/></net>

<net id="110"><net_src comp="18" pin="0"/><net_sink comp="107" pin=0"/></net>

<net id="117"><net_src comp="107" pin="1"/><net_sink comp="111" pin=2"/></net>

<net id="122"><net_src comp="100" pin="4"/><net_sink comp="118" pin=0"/></net>

<net id="123"><net_src comp="20" pin="0"/><net_sink comp="118" pin=1"/></net>

<net id="128"><net_src comp="100" pin="4"/><net_sink comp="124" pin=0"/></net>

<net id="129"><net_src comp="26" pin="0"/><net_sink comp="124" pin=1"/></net>

<net id="134"><net_src comp="111" pin="4"/><net_sink comp="130" pin=0"/></net>

<net id="135"><net_src comp="20" pin="0"/><net_sink comp="130" pin=1"/></net>

<net id="140"><net_src comp="111" pin="4"/><net_sink comp="136" pin=0"/></net>

<net id="141"><net_src comp="26" pin="0"/><net_sink comp="136" pin=1"/></net>

<net id="145"><net_src comp="111" pin="4"/><net_sink comp="142" pin=0"/></net>

<net id="146"><net_src comp="142" pin="1"/><net_sink comp="49" pin=2"/></net>

<net id="151"><net_src comp="28" pin="0"/><net_sink comp="147" pin=1"/></net>

<net id="156"><net_src comp="30" pin="0"/><net_sink comp="152" pin=1"/></net>

<net id="161"><net_src comp="147" pin="2"/><net_sink comp="157" pin=0"/></net>

<net id="162"><net_src comp="152" pin="2"/><net_sink comp="157" pin=1"/></net>

<net id="167"><net_src comp="32" pin="0"/><net_sink comp="163" pin=0"/></net>

<net id="168"><net_src comp="157" pin="2"/><net_sink comp="163" pin=1"/></net>

<net id="173"><net_src comp="69" pin="3"/><net_sink comp="169" pin=0"/></net>

<net id="174"><net_src comp="30" pin="0"/><net_sink comp="169" pin=1"/></net>

<net id="179"><net_src comp="163" pin="2"/><net_sink comp="175" pin=0"/></net>

<net id="180"><net_src comp="169" pin="2"/><net_sink comp="175" pin=1"/></net>

<net id="185"><net_src comp="175" pin="2"/><net_sink comp="181" pin=0"/></net>

<net id="186"><net_src comp="82" pin="3"/><net_sink comp="181" pin=1"/></net>

<net id="191"><net_src comp="69" pin="3"/><net_sink comp="187" pin=1"/></net>

<net id="196"><net_src comp="34" pin="0"/><net_sink comp="192" pin=0"/></net>

<net id="197"><net_src comp="157" pin="2"/><net_sink comp="192" pin=1"/></net>

<net id="202"><net_src comp="192" pin="2"/><net_sink comp="198" pin=0"/></net>

<net id="203"><net_src comp="147" pin="2"/><net_sink comp="198" pin=1"/></net>

<net id="207"><net_src comp="204" pin="1"/><net_sink comp="44" pin=1"/></net>

<net id="212"><net_src comp="82" pin="3"/><net_sink comp="208" pin=0"/></net>

<net id="213"><net_src comp="181" pin="2"/><net_sink comp="208" pin=1"/></net>

<net id="220"><net_src comp="198" pin="2"/><net_sink comp="214" pin=0"/></net>

<net id="221"><net_src comp="187" pin="2"/><net_sink comp="214" pin=1"/></net>

<net id="222"><net_src comp="208" pin="2"/><net_sink comp="214" pin=3"/></net>

<net id="223"><net_src comp="214" pin="4"/><net_sink comp="204" pin=0"/></net>

<net id="227"><net_src comp="36" pin="3"/><net_sink comp="224" pin=0"/></net>

<net id="228"><net_src comp="224" pin="1"/><net_sink comp="44" pin=0"/></net>

<net id="235"><net_src comp="124" pin="2"/><net_sink comp="232" pin=0"/></net>

<net id="236"><net_src comp="232" pin="1"/><net_sink comp="100" pin=2"/></net>

<net id="243"><net_src comp="136" pin="2"/><net_sink comp="240" pin=0"/></net>

<net id="244"><net_src comp="240" pin="1"/><net_sink comp="111" pin=0"/></net>

<net id="248"><net_src comp="142" pin="1"/><net_sink comp="245" pin=0"/></net>

<net id="249"><net_src comp="245" pin="1"/><net_sink comp="62" pin=2"/></net>

<net id="250"><net_src comp="245" pin="1"/><net_sink comp="75" pin=2"/></net>

<net id="251"><net_src comp="245" pin="1"/><net_sink comp="88" pin=2"/></net>

<net id="255"><net_src comp="49" pin="3"/><net_sink comp="252" pin=0"/></net>

<net id="256"><net_src comp="252" pin="1"/><net_sink comp="56" pin=0"/></net>

<net id="260"><net_src comp="56" pin="3"/><net_sink comp="257" pin=0"/></net>

<net id="261"><net_src comp="257" pin="1"/><net_sink comp="147" pin=0"/></net>

<net id="262"><net_src comp="257" pin="1"/><net_sink comp="152" pin=0"/></net>

<net id="263"><net_src comp="257" pin="1"/><net_sink comp="187" pin=0"/></net>

<net id="264"><net_src comp="257" pin="1"/><net_sink comp="214" pin=0"/></net>

<net id="268"><net_src comp="62" pin="3"/><net_sink comp="265" pin=0"/></net>

<net id="269"><net_src comp="265" pin="1"/><net_sink comp="69" pin=0"/></net>

<net id="273"><net_src comp="75" pin="3"/><net_sink comp="270" pin=0"/></net>

<net id="274"><net_src comp="270" pin="1"/><net_sink comp="82" pin=0"/></net>

</net_list>

</model> 
---------------- Datapath Model END ------------------

* FSMD analyzer results:
  - Output states:
	Port: OUT_r | {5 }
 - Input state : 
	Port: mibench : A | {3 4 }
	Port: mibench : B | {4 5 }
	Port: mibench : C | {4 5 }
	Port: mibench : OUT_r | {2 6 }
  - Chain level:
	State 1
	State 2
		icmp_ln7 : 1
		i : 1
		br_ln7 : 2
	State 3
		icmp_ln9 : 1
		k : 1
		br_ln9 : 2
		zext_ln10_1 : 1
		A_addr : 2
		A_load : 3
	State 4
		B_load : 1
		C_load : 1
	State 5
		add_ln10 : 1
		shl_ln10_2 : 1
		add_ln10_1 : 2
		add_ln10_2 : 3
		mul_ln10 : 4
		tmp3 : 1
		tmp5 : 1
		tmp4 : 2
		tmp : 3
		tmp1 : 4
		add_ln10_3 : 5
		zext_ln10 : 6
		store_ln10 : 7
	State 6
		ret_ln25 : 1


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================

* Functional unit list:
|----------|--------------------|---------|---------|---------|
| Operation|   Functional Unit  |  DSP48E |    FF   |   LUT   |
|----------|--------------------|---------|---------|---------|
|          |      i_fu_124      |    0    |    0    |    7    |
|          |      k_fu_136      |    0    |    0    |    7    |
|          |   add_ln10_fu_163  |    0    |    0    |    16   |
|    add   |  add_ln10_1_fu_175 |    0    |    0    |    16   |
|          |  add_ln10_2_fu_181 |    0    |    0    |    16   |
|          |     tmp3_fu_187    |    0    |    0    |    16   |
|          |     tmp5_fu_192    |    0    |    0    |    16   |
|          |     tmp4_fu_198    |    0    |    0    |    16   |
|----------|--------------------|---------|---------|---------|
|   icmp   |   icmp_ln7_fu_118  |    0    |    0    |    11   |
|          |   icmp_ln9_fu_130  |    0    |    0    |    11   |
|----------|--------------------|---------|---------|---------|
|    sub   |   sub_ln10_fu_157  |    0    |    0    |    16   |
|----------|--------------------|---------|---------|---------|
|    mul   |   mul_ln10_fu_208  |    1    |    0    |    0    |
|----------|--------------------|---------|---------|---------|
| addmuladd|     grp_fu_214     |    1    |    0    |    0    |
|----------|--------------------|---------|---------|---------|
|   zext   | zext_ln10_1_fu_142 |    0    |    0    |    0    |
|          |  zext_ln10_fu_204  |    0    |    0    |    0    |
|----------|--------------------|---------|---------|---------|
|          |   shl_ln10_fu_147  |    0    |    0    |    0    |
|    shl   |  shl_ln10_1_fu_152 |    0    |    0    |    0    |
|          |  shl_ln10_2_fu_169 |    0    |    0    |    0    |
|----------|--------------------|---------|---------|---------|
|   Total  |                    |    2    |    0    |   148   |
|----------|--------------------|---------|---------|---------|

Memories:
N/A

* Register list:
+-------------------+--------+
|                   |   FF   |
+-------------------+--------+
|   A_addr_reg_252  |    7   |
|   A_load_reg_257  |   16   |
|   B_addr_reg_265  |    7   |
|   C_addr_reg_270  |    7   |
|  OUT_addr_reg_224 |    7   |
|     i_0_reg_96    |    7   |
|     i_reg_232     |    7   |
|    k_0_reg_107    |    7   |
|     k_reg_240     |    7   |
|zext_ln10_1_reg_245|   64   |
+-------------------+--------+
|       Total       |   136  |
+-------------------+--------+

* Multiplexer (MUX) list: 
|------------------|------|------|------|--------||---------||---------|
|       Comp       |  Pin | Size |  BW  | S x BW ||  Delay  ||   LUT   |
|------------------|------|------|------|--------||---------||---------|
| grp_access_fu_44 |  p0  |   2  |   7  |   14   ||    9    |
| grp_access_fu_56 |  p0  |   2  |   7  |   14   ||    9    |
| grp_access_fu_69 |  p0  |   2  |   7  |   14   ||    9    |
| grp_access_fu_82 |  p0  |   2  |   7  |   14   ||    9    |
|    grp_fu_214    |  p0  |   2  |  16  |   32   ||    9    |
|------------------|------|------|------|--------||---------||---------|
|       Total      |      |      |      |   88   ||  3.015  ||    45   |
|------------------|------|------|------|--------||---------||---------|



* Summary:
+-----------+--------+--------+--------+--------+
|           | DSP48E |  Delay |   FF   |   LUT  |
+-----------+--------+--------+--------+--------+
|  Function |    2   |    -   |    0   |   148  |
|   Memory  |    -   |    -   |    -   |    -   |
|Multiplexer|    -   |    3   |    -   |   45   |
|  Register |    -   |    -   |   136  |    -   |
+-----------+--------+--------+--------+--------+
|   Total   |    2   |    3   |   136  |   193  |
+-----------+--------+--------+--------+--------+
