// ----------------------------------------------------------------------------
// LegUp High-Level Synthesis Tool Version 7.5 (http://legupcomputing.com)
// Copyright (c) 2015-2019 LegUp Computing Inc. All Rights Reserved.
// For technical issues, please contact: support@legupcomputing.com
// For general inquiries, please contact: info@legupcomputing.com
// Date: Wed Apr 29 09:48:23 2020
// ----------------------------------------------------------------------------
Target FPGA: XILINX VirtexU9P
Clock period constraint: 5.000000e+00ns
Start Function: main
state: LEGUP_0, basic block: LEGUP_0
   Transition: if (start): LEGUP_F_main_BB_entry_1 default: LEGUP_0
state: LEGUP_F_main_BB_entry_1, basic block: BB_entry
   %a.i = alloca [1024 x i16], align 2, !dbg !30, !MSB !31, !LSB !32, !extendFrom !31 (endState: LEGUP_F_main_BB_entry_1)
   %b.i = alloca [1024 x i16], align 2, !dbg !30, !MSB !31, !LSB !32, !extendFrom !31 (endState: LEGUP_F_main_BB_entry_1)
   %OUT.i = alloca [1024 x i16], align 2, !dbg !30, !MSB !31, !LSB !32, !extendFrom !31 (endState: LEGUP_F_main_BB_entry_1)
   br label %for.body.i, !dbg !33, !MSB !31, !LSB !32, !extendFrom !31
   Transition: default: LEGUP_F_main_BB_for_body_i_2
state: LEGUP_F_main_BB_for_body_i_2, basic block: BB_for_body_i
   %k.077.i = phi i32 [ 0, %entry ], [ %0, %for.body.i ], !dbg !30, !MSB !37, !LSB !32, !extendFrom !37 (endState: LEGUP_F_main_BB_for_body_i_2)
   %bit_select19 = call i16 @legup_bit_select_16_32(i32 %k.077.i, i64 15, i64 0), !MSB !38, !LSB !32, !extendFrom !38 (endState: LEGUP_F_main_BB_for_body_i_2)
   %arrayidx.i = getelementptr [1024 x i16]* %a.i, i32 0, i32 %k.077.i, !dbg !39, !MSB !31, !LSB !32, !extendFrom !31 (endState: LEGUP_F_main_BB_for_body_i_2)
   %arrayidx3.i = getelementptr [1024 x i16]* %b.i, i32 0, i32 %k.077.i, !dbg !41, !MSB !31, !LSB !32, !extendFrom !31 (endState: LEGUP_F_main_BB_for_body_i_2)
   %arrayidx4.i = getelementptr [1024 x i16]* %OUT.i, i32 0, i32 %k.077.i, !dbg !42, !MSB !31, !LSB !32, !extendFrom !31 (endState: LEGUP_F_main_BB_for_body_i_2)
   store i16 %bit_select19, i16* %arrayidx.i, align 2, !dbg !39, !tbaa !43, !MSB !31, !LSB !32, !extendFrom !31 (endState: LEGUP_F_main_BB_for_body_i_3)
   store i16 %bit_select19, i16* %arrayidx3.i, align 2, !dbg !41, !tbaa !43, !MSB !31, !LSB !32, !extendFrom !31 (endState: LEGUP_F_main_BB_for_body_i_3)
   store i16 0, i16* %arrayidx4.i, align 2, !dbg !42, !tbaa !43, !MSB !31, !LSB !32, !extendFrom !31 (endState: LEGUP_F_main_BB_for_body_i_3)
   %0 = add nsw i32 %k.077.i, 1, !dbg !47, !MSB !48, !LSB !32, !extendFrom !48 (endState: LEGUP_F_main_BB_for_body_i_2)
   %exitcond5 = icmp eq i32 %0, 1024, !dbg !33, !MSB !32, !LSB !32, !extendFrom !32 (endState: LEGUP_F_main_BB_for_body_i_2)
   Transition: default: LEGUP_F_main_BB_for_body_i_3
state: LEGUP_F_main_BB_for_body_i_3, basic block: BB_for_body_i
   br i1 %exitcond5, label %for.cond9.preheader.i.preheader, label %for.body.i, !dbg !33, !MSB !31, !LSB !32, !extendFrom !31
   Transition: if (%exitcond5): LEGUP_F_main_BB_for_cond9_preheader_i_preheader_4 default: LEGUP_F_main_BB_for_body_i_2
state: LEGUP_F_main_BB_for_cond9_preheader_i_preheader_4, basic block: BB_for_cond9_preheader_i_preheader
   br label %for.cond9.preheader.i, !dbg !49, !MSB !31, !LSB !32, !extendFrom !31
   Transition: default: LEGUP_F_main_BB_for_cond9_preheader_i_5
state: LEGUP_F_main_BB_for_cond9_preheader_i_5, basic block: BB_for_cond9_preheader_i
   %i.076.i = phi i32 [ %4, %for.inc51.i ], [ 0, %for.cond9.preheader.i.preheader ], !dbg !30, !MSB !55, !LSB !32, !extendFrom !55 (endState: LEGUP_F_main_BB_for_cond9_preheader_i_5)
   br label %for.body12.i, !dbg !49, !MSB !31, !LSB !32, !extendFrom !31
   Transition: default: LEGUP_F_main_BB_for_body12_i_6
state: LEGUP_F_main_BB_for_body12_i_6, basic block: BB_for_body12_i
   %k.175.i = phi i32 [ 0, %for.cond9.preheader.i ], [ %3, %for.body12.i ], !dbg !30, !MSB !56, !LSB !32, !extendFrom !56 (endState: LEGUP_F_main_BB_for_body12_i_6)
   %arrayidx13.i = getelementptr [1024 x i16]* %a.i, i32 0, i32 %k.175.i, !dbg !57, !MSB !31, !LSB !32, !extendFrom !31 (endState: LEGUP_F_main_BB_for_body12_i_6)
   %arrayidx32.i = getelementptr [1024 x i16]* %b.i, i32 0, i32 %k.175.i, !dbg !57, !MSB !31, !LSB !32, !extendFrom !31 (endState: LEGUP_F_main_BB_for_body12_i_6)
   %arrayidx47.i = getelementptr [1024 x i16]* %OUT.i, i32 0, i32 %k.175.i, !dbg !57, !MSB !31, !LSB !32, !extendFrom !31 (endState: LEGUP_F_main_BB_for_body12_i_6)
   %1 = load i16* %arrayidx13.i, align 2, !dbg !57, !tbaa !43, !MSB !38, !LSB !32, !extendFrom !38 (endState: LEGUP_F_main_BB_for_body12_i_7)
   %2 = load i16* %arrayidx32.i, align 2, !dbg !57, !tbaa !43, !MSB !38, !LSB !32, !extendFrom !38 (endState: LEGUP_F_main_BB_for_body12_i_7)
   %3 = add nsw i32 %k.175.i, 1, !dbg !64, !MSB !56, !LSB !32, !extendFrom !56 (endState: LEGUP_F_main_BB_for_body12_i_6)
   %exitcond3 = icmp eq i32 %3, 1024, !dbg !49, !MSB !32, !LSB !32, !extendFrom !32 (endState: LEGUP_F_main_BB_for_body12_i_6)
   Transition: default: LEGUP_F_main_BB_for_body12_i_7
state: LEGUP_F_main_BB_for_body12_i_7, basic block: BB_for_body12_i
   %bit_select15 = call i13 @legup_bit_select_13_16(i16 %1, i64 12, i64 0), !MSB !59, !LSB !32, !extendFrom !59 (endState: LEGUP_F_main_BB_for_body12_i_7)
   %bit_select10 = call i11 @legup_bit_select_11_16(i16 %1, i64 10, i64 0), !MSB !37, !LSB !32, !extendFrom !37 (endState: LEGUP_F_main_BB_for_body12_i_7)
   %bit_select8 = call i10 @legup_bit_select_10_16(i16 %1, i64 9, i64 0), !MSB !60, !LSB !32, !extendFrom !60 (endState: LEGUP_F_main_BB_for_body12_i_7)
   %bit_select4 = call i14 @legup_bit_select_14_16(i16 %1, i64 13, i64 0), !MSB !61, !LSB !32, !extendFrom !61 (endState: LEGUP_F_main_BB_for_body12_i_7)
   %bit_select2 = call i12 @legup_bit_select_12_16(i16 %1, i64 11, i64 0), !MSB !48, !LSB !32, !extendFrom !48 (endState: LEGUP_F_main_BB_for_body12_i_7)
   %sr_negate = sub i16 0, %1, !MSB !38, !LSB !32, !extendFrom !38 (endState: LEGUP_F_main_BB_for_body12_i_7)
   %bit_select17 = call i6 @legup_bit_select_6_16(i16 %sr_negate, i64 5, i64 0), !MSB !62, !LSB !32, !extendFrom !62 (endState: LEGUP_F_main_BB_for_body12_i_7)
   %bit_select12 = call i14 @legup_bit_select_14_16(i16 %sr_negate, i64 13, i64 0), !MSB !61, !LSB !32, !extendFrom !61 (endState: LEGUP_F_main_BB_for_body12_i_7)
   %bit_select6 = call i9 @legup_bit_select_9_16(i16 %sr_negate, i64 8, i64 0), !MSB !63, !LSB !32, !extendFrom !63 (endState: LEGUP_F_main_BB_for_body12_i_7)
   %bit_concat18 = call i16 @legup_bit_concat_6_10(i6 %bit_select17, i64 6, i10 0, i64 10), !MSB !38, !LSB !32, !extendFrom !38 (endState: LEGUP_F_main_BB_for_body12_i_7)
   %bit_concat16 = call i16 @legup_bit_concat_13_3(i13 %bit_select15, i64 13, i3 0, i64 3), !MSB !38, !LSB !32, !extendFrom !38 (endState: LEGUP_F_main_BB_for_body12_i_7)
   %bit_concat14 = call i16 @legup_bit_concat_11_5(i11 %bit_select10, i64 11, i5 0, i64 5), !MSB !38, !LSB !32, !extendFrom !38 (endState: LEGUP_F_main_BB_for_body12_i_7)
   %sr_add7 = add i16 %bit_concat16, %bit_concat14, !MSB !38, !LSB !32, !extendFrom !38 (endState: LEGUP_F_main_BB_for_body12_i_7)
   %newEarly.sub_i = add i16 %bit_concat18, -46, !MSB !38, !LSB !32, !extendFrom !38 (endState: LEGUP_F_main_BB_for_body12_i_7)
   %newCurOp.sub_i = add i16 %newEarly.sub_i, %sr_add7, !MSB !38, !LSB !32, !extendFrom !38 (endState: LEGUP_F_main_BB_for_body12_i_7)
   %mul17.i = mul i16 %newCurOp.sub_i, %1, !dbg !57, !MSB !38, !LSB !32, !extendFrom !38 (endState: LEGUP_F_main_BB_for_body12_i_9)
   %bit_concat13 = call i16 @legup_bit_concat_14_2(i14 %bit_select12, i64 14, i2 0, i64 2), !MSB !38, !LSB !32, !extendFrom !38 (endState: LEGUP_F_main_BB_for_body12_i_7)
   %bit_concat11 = call i16 @legup_bit_concat_11_5(i11 %bit_select10, i64 11, i5 0, i64 5), !MSB !38, !LSB !32, !extendFrom !38 (endState: LEGUP_F_main_BB_for_body12_i_7)
   %bit_concat9 = call i16 @legup_bit_concat_10_6(i10 %bit_select8, i64 10, i6 0, i64 6), !MSB !38, !LSB !32, !extendFrom !38 (endState: LEGUP_F_main_BB_for_body12_i_7)
   %sr_add10 = add i16 %bit_concat13, %bit_concat11, !MSB !38, !LSB !32, !extendFrom !38 (endState: LEGUP_F_main_BB_for_body12_i_7)
   %newEarly.sub25_i = add i16 %bit_concat9, -39, !MSB !38, !LSB !32, !extendFrom !38 (endState: LEGUP_F_main_BB_for_body12_i_7)
   %newCurOp.sub25_i = add i16 %newEarly.sub25_i, %sr_add10, !MSB !38, !LSB !32, !extendFrom !38 (endState: LEGUP_F_main_BB_for_body12_i_7)
   %mul28.i = mul i16 %newCurOp.sub25_i, %1, !dbg !57, !MSB !38, !LSB !32, !extendFrom !38 (endState: LEGUP_F_main_BB_for_body12_i_9)
   %bit_concat7 = call i16 @legup_bit_concat_9_7(i9 %bit_select6, i64 9, i7 0, i64 7), !MSB !38, !LSB !32, !extendFrom !38 (endState: LEGUP_F_main_BB_for_body12_i_7)
   %bit_concat5 = call i16 @legup_bit_concat_14_2(i14 %bit_select4, i64 14, i2 0, i64 2), !MSB !38, !LSB !32, !extendFrom !38 (endState: LEGUP_F_main_BB_for_body12_i_7)
   %bit_concat3 = call i16 @legup_bit_concat_12_4(i12 %bit_select2, i64 12, i4 0, i64 4), !MSB !38, !LSB !32, !extendFrom !38 (endState: LEGUP_F_main_BB_for_body12_i_7)
   %sr_add12 = add i16 %bit_concat5, %bit_concat3, !MSB !38, !LSB !32, !extendFrom !38 (endState: LEGUP_F_main_BB_for_body12_i_7)
   %sr_add18 = add i16 %bit_concat11, %bit_concat7, !MSB !38, !LSB !32, !extendFrom !38 (endState: LEGUP_F_main_BB_for_body12_i_7)
   %bit_select = call i13 @legup_bit_select_13_16(i16 %2, i64 12, i64 0), !MSB !59, !LSB !32, !extendFrom !59 (endState: LEGUP_F_main_BB_for_body12_i_7)
   %sr_negate13 = sub i16 0, %2, !MSB !38, !LSB !32, !extendFrom !38 (endState: LEGUP_F_main_BB_for_body12_i_7)
   %bit_concat1 = call i16 @legup_bit_concat_13_3(i13 %bit_select, i64 13, i3 0, i64 3), !MSB !38, !LSB !32, !extendFrom !38 (endState: LEGUP_F_main_BB_for_body12_i_7)
   %sr_add15 = add i16 %sr_negate13, %bit_concat1, !MSB !38, !LSB !32, !extendFrom !38 (endState: LEGUP_F_main_BB_for_body12_i_7)
   %newEarly.add_i = add i16 %sr_add12, 7, !MSB !38, !LSB !32, !extendFrom !38 (endState: LEGUP_F_main_BB_for_body12_i_7)
   %newEarly.add35_i = add i16 %sr_add18, %sr_add15, !MSB !38, !LSB !32, !extendFrom !38 (endState: LEGUP_F_main_BB_for_body12_i_7)
   %newCurOp.add35_i = add i16 %newEarly.add_i, %newEarly.add35_i, !MSB !38, !LSB !32, !extendFrom !38 (endState: LEGUP_F_main_BB_for_body12_i_7)
   %mul38.i = mul i16 %newCurOp.add35_i, %2, !dbg !57, !MSB !38, !LSB !32, !extendFrom !38 (endState: LEGUP_F_main_BB_for_body12_i_9)
   Transition: default: LEGUP_F_main_BB_for_body12_i_8
state: LEGUP_F_main_BB_for_body12_i_8, basic block: BB_for_body12_i
   Transition: default: LEGUP_F_main_BB_for_body12_i_9
state: LEGUP_F_main_BB_for_body12_i_9, basic block: BB_for_body12_i
   %sub18.i = add i16 %mul17.i, -46, !dbg !57, !MSB !38, !LSB !32, !extendFrom !38 (endState: LEGUP_F_main_BB_for_body12_i_9)
   %mul21.i = mul i16 %sub18.i, %1, !dbg !57, !MSB !38, !LSB !32, !extendFrom !38 (endState: LEGUP_F_main_BB_for_body12_i_11)
   %add39.i = add i16 %mul28.i, 7, !dbg !57, !MSB !38, !LSB !32, !extendFrom !38 (endState: LEGUP_F_main_BB_for_body12_i_9)
   %add40.i = add i16 %add39.i, %mul38.i, !dbg !57, !MSB !38, !LSB !32, !extendFrom !38 (endState: LEGUP_F_main_BB_for_body12_i_9)
   %mul43.i = mul i16 %add40.i, %2, !dbg !57, !MSB !38, !LSB !32, !extendFrom !38 (endState: LEGUP_F_main_BB_for_body12_i_11)
   Transition: default: LEGUP_F_main_BB_for_body12_i_10
state: LEGUP_F_main_BB_for_body12_i_10, basic block: BB_for_body12_i
   Transition: default: LEGUP_F_main_BB_for_body12_i_11
state: LEGUP_F_main_BB_for_body12_i_11, basic block: BB_for_body12_i
   %add44.i = add i16 %mul21.i, -75, !dbg !57, !MSB !38, !LSB !32, !extendFrom !38 (endState: LEGUP_F_main_BB_for_body12_i_11)
   %sub45.i = add i16 %add44.i, %mul43.i, !dbg !57, !MSB !38, !LSB !32, !extendFrom !38 (endState: LEGUP_F_main_BB_for_body12_i_11)
   store i16 %sub45.i, i16* %arrayidx47.i, align 2, !dbg !57, !tbaa !43, !MSB !31, !LSB !32, !extendFrom !31 (endState: LEGUP_F_main_BB_for_body12_i_12)
   Transition: default: LEGUP_F_main_BB_for_body12_i_12
state: LEGUP_F_main_BB_for_body12_i_12, basic block: BB_for_body12_i
   br i1 %exitcond3, label %for.inc51.i, label %for.body12.i, !dbg !49, !MSB !31, !LSB !32, !extendFrom !31
   Transition: if (%exitcond3): LEGUP_F_main_BB_for_inc51_i_13 default: LEGUP_F_main_BB_for_body12_i_6
state: LEGUP_F_main_BB_for_inc51_i_13, basic block: BB_for_inc51_i
   %4 = add nsw i32 %i.076.i, 1, !dbg !65, !MSB !66, !LSB !32, !extendFrom !66 (endState: LEGUP_F_main_BB_for_inc51_i_13)
   %exitcond4 = icmp eq i32 %4, 100, !dbg !67, !MSB !32, !LSB !32, !extendFrom !32 (endState: LEGUP_F_main_BB_for_inc51_i_13)
   br i1 %exitcond4, label %sgfilter.exit, label %for.cond9.preheader.i, !dbg !67, !MSB !31, !LSB !32, !extendFrom !31
   Transition: if (%exitcond4): LEGUP_F_main_BB_sgfilter_exit_14 default: LEGUP_F_main_BB_for_cond9_preheader_i_5
state: LEGUP_F_main_BB_sgfilter_exit_14, basic block: BB_sgfilter_exit
   %arrayidx54.i = getelementptr inbounds [1024 x i16]* %OUT.i, i32 0, i32 50, !dbg !70, !MSB !31, !LSB !32, !extendFrom !31 (endState: LEGUP_F_main_BB_sgfilter_exit_14)
   %5 = load i16* %arrayidx54.i, align 2, !dbg !70, !tbaa !43, !MSB !38, !LSB !32, !extendFrom !38 (endState: LEGUP_F_main_BB_sgfilter_exit_15)
   Transition: default: LEGUP_F_main_BB_sgfilter_exit_15
state: LEGUP_F_main_BB_sgfilter_exit_15, basic block: BB_sgfilter_exit
   %bit_concat = call i32 @legup_bit_concat_16_16(i16 0, i64 16, i16 %5, i64 16), !MSB !56, !LSB !32, !extendFrom !56 (endState: LEGUP_F_main_BB_sgfilter_exit_15)
   %call1 = tail call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([4 x i8]* @.str, i32 0, i32 0), i32 %bit_concat) #1, !dbg !71, !MSB !56, !LSB !32, !extendFrom !56 (endState: LEGUP_F_main_BB_sgfilter_exit_15)
   ret i32 0, !dbg !72, !MSB !31, !LSB !32, !extendFrom !31
   Transition: default: LEGUP_0

Basic Block: %entry Num States: 1
Basic Block: %for.body.i Num States: 2
Basic Block: %for.cond9.preheader.i.preheader Num States: 1
Basic Block: %for.cond9.preheader.i Num States: 1
Basic Block: %for.body12.i Num States: 7
Basic Block: %for.inc51.i Num States: 1
Basic Block: %sgfilter.exit Num States: 2
End Function: main
--------------------------------------------------------------------------------

