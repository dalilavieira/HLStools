// ----------------------------------------------------------------------------
// LegUp High-Level Synthesis Tool Version 7.5 (http://legupcomputing.com)
// Copyright (c) 2015-2019 LegUp Computing Inc. All Rights Reserved.
// For technical issues, please contact: support@legupcomputing.com
// For general inquiries, please contact: info@legupcomputing.com
// Date: Mon Apr 20 10:48:02 2020
// ----------------------------------------------------------------------------
Target FPGA: INTEL CycloneIV
Clock period constraint: 1.500000e+01ns
Start Function: main
state: LEGUP_0, basic block: LEGUP_0
   Transition: if (start): LEGUP_F_main_BB_entry_1 default: LEGUP_0
state: LEGUP_F_main_BB_entry_1, basic block: BB_entry
   %a.i = alloca [1024 x i16], align 2, !dbg !42, !MSB !43, !LSB !44, !extendFrom !43 (endState: LEGUP_F_main_BB_entry_1)
   %b.i = alloca [1024 x i16], align 2, !dbg !42, !MSB !43, !LSB !44, !extendFrom !43 (endState: LEGUP_F_main_BB_entry_1)
   %c.i = alloca [1024 x i16], align 2, !dbg !42, !MSB !43, !LSB !44, !extendFrom !43 (endState: LEGUP_F_main_BB_entry_1)
   %out.i = alloca [1024 x i16], align 2, !dbg !42, !MSB !43, !LSB !44, !extendFrom !43 (endState: LEGUP_F_main_BB_entry_1)
   br label %for.body.i, !dbg !45, !MSB !43, !LSB !44, !extendFrom !43
   Transition: default: LEGUP_F_main_BB_for_body_i_2
state: LEGUP_F_main_BB_for_body_i_2, basic block: BB_for_body_i
   %k.091.i = phi i32 [ 0, %entry ], [ %0, %for.body.i ], !dbg !42, !MSB !49, !LSB !44, !extendFrom !49 (endState: LEGUP_F_main_BB_for_body_i_2)
   %bit_select = call i16 @legup_bit_select_16_32(i32 %k.091.i, i64 15, i64 0), !MSB !50, !LSB !44, !extendFrom !50 (endState: LEGUP_F_main_BB_for_body_i_2)
   %arrayidx.i = getelementptr [1024 x i16]* %a.i, i32 0, i32 %k.091.i, !dbg !51, !MSB !43, !LSB !44, !extendFrom !43 (endState: LEGUP_F_main_BB_for_body_i_2)
   %arrayidx3.i = getelementptr [1024 x i16]* %b.i, i32 0, i32 %k.091.i, !dbg !53, !MSB !43, !LSB !44, !extendFrom !43 (endState: LEGUP_F_main_BB_for_body_i_2)
   %arrayidx6.i = getelementptr [1024 x i16]* %c.i, i32 0, i32 %k.091.i, !dbg !54, !MSB !43, !LSB !44, !extendFrom !43 (endState: LEGUP_F_main_BB_for_body_i_2)
   %arrayidx7.i = getelementptr [1024 x i16]* %out.i, i32 0, i32 %k.091.i, !dbg !55, !MSB !43, !LSB !44, !extendFrom !43 (endState: LEGUP_F_main_BB_for_body_i_2)
   store i16 %bit_select, i16* %arrayidx.i, align 2, !dbg !51, !tbaa !56, !MSB !43, !LSB !44, !extendFrom !43 (endState: LEGUP_F_main_BB_for_body_i_3)
   store i16 %bit_select, i16* %arrayidx3.i, align 2, !dbg !53, !tbaa !56, !MSB !43, !LSB !44, !extendFrom !43 (endState: LEGUP_F_main_BB_for_body_i_3)
   store i16 %bit_select, i16* %arrayidx6.i, align 2, !dbg !54, !tbaa !56, !MSB !43, !LSB !44, !extendFrom !43 (endState: LEGUP_F_main_BB_for_body_i_3)
   store i16 0, i16* %arrayidx7.i, align 2, !dbg !55, !tbaa !56, !MSB !43, !LSB !44, !extendFrom !43 (endState: LEGUP_F_main_BB_for_body_i_3)
   %0 = add nsw i32 %k.091.i, 1, !dbg !60, !MSB !61, !LSB !44, !extendFrom !61 (endState: LEGUP_F_main_BB_for_body_i_2)
   %exitcond5 = icmp eq i32 %0, 1024, !dbg !45, !MSB !44, !LSB !44, !extendFrom !44 (endState: LEGUP_F_main_BB_for_body_i_2)
   Transition: default: LEGUP_F_main_BB_for_body_i_3
state: LEGUP_F_main_BB_for_body_i_3, basic block: BB_for_body_i
   br i1 %exitcond5, label %for.cond12.preheader.i.preheader, label %for.body.i, !dbg !45, !MSB !43, !LSB !44, !extendFrom !43
   Transition: if (%exitcond5): LEGUP_F_main_BB_for_cond12_preheader_i_preheader_4 default: LEGUP_F_main_BB_for_body_i_2
state: LEGUP_F_main_BB_for_cond12_preheader_i_preheader_4, basic block: BB_for_cond12_preheader_i_preheader
   br label %for.cond12.preheader.i, !dbg !62, !MSB !43, !LSB !44, !extendFrom !43
   Transition: default: LEGUP_F_main_BB_for_cond12_preheader_i_5
state: LEGUP_F_main_BB_for_cond12_preheader_i_5, basic block: BB_for_cond12_preheader_i
   %i.090.i = phi i32 [ %5, %for.inc58.i ], [ 0, %for.cond12.preheader.i.preheader ], !dbg !42, !MSB !65, !LSB !44, !extendFrom !65 (endState: LEGUP_F_main_BB_for_cond12_preheader_i_5)
   br label %for.body15.i, !dbg !62, !MSB !43, !LSB !44, !extendFrom !43
   Transition: default: LEGUP_F_main_BB_for_body15_i_6
state: LEGUP_F_main_BB_for_body15_i_6, basic block: BB_for_body15_i
   %k.189.i = phi i32 [ 0, %for.cond12.preheader.i ], [ %4, %for.inc55.i ], !dbg !42, !MSB !66, !LSB !44, !extendFrom !66 (endState: LEGUP_F_main_BB_for_body15_i_6)
   %arrayidx16.i = getelementptr [1024 x i16]* %b.i, i32 0, i32 %k.189.i, !dbg !67, !MSB !43, !LSB !44, !extendFrom !43 (endState: LEGUP_F_main_BB_for_body15_i_6)
   %arrayidx18.i = getelementptr [1024 x i16]* %c.i, i32 0, i32 %k.189.i, !dbg !67, !MSB !43, !LSB !44, !extendFrom !43 (endState: LEGUP_F_main_BB_for_body15_i_6)
   %arrayidx20.i = getelementptr [1024 x i16]* %a.i, i32 0, i32 %k.189.i, !dbg !68, !MSB !43, !LSB !44, !extendFrom !43 (endState: LEGUP_F_main_BB_for_body15_i_6)
   %arrayidx46.i = getelementptr [1024 x i16]* %out.i, i32 0, i32 %k.189.i, !dbg !69, !MSB !43, !LSB !44, !extendFrom !43 (endState: LEGUP_F_main_BB_for_body15_i_6)
   %1 = load i16* %arrayidx16.i, align 2, !dbg !67, !tbaa !56, !MSB !50, !LSB !44, !extendFrom !50 (endState: LEGUP_F_main_BB_for_body15_i_7)
   %2 = load i16* %arrayidx18.i, align 2, !dbg !67, !tbaa !56, !MSB !50, !LSB !44, !extendFrom !50 (endState: LEGUP_F_main_BB_for_body15_i_7)
   %3 = load i16* %arrayidx20.i, align 2, !dbg !68, !tbaa !56, !MSB !50, !LSB !44, !extendFrom !50 (endState: LEGUP_F_main_BB_for_body15_i_7)
   Transition: default: LEGUP_F_main_BB_for_body15_i_7
state: LEGUP_F_main_BB_for_body15_i_7, basic block: BB_for_body15_i
   %bit_concat4 = call i32 @legup_bit_concat_16_16(i16 0, i64 16, i16 %1, i64 16), !MSB !66, !LSB !44, !extendFrom !66 (endState: LEGUP_F_main_BB_for_body15_i_7)
   %bit_concat3 = call i32 @legup_bit_concat_16_16(i16 0, i64 16, i16 %2, i64 16), !MSB !66, !LSB !44, !extendFrom !66 (endState: LEGUP_F_main_BB_for_body15_i_7)
   %sub.i = sub nsw i32 %bit_concat4, %bit_concat3, !dbg !67, !MSB !66, !LSB !44, !extendFrom !66 (endState: LEGUP_F_main_BB_for_body15_i_7)
   %bit_concat2 = call i32 @legup_bit_concat_16_16(i16 0, i64 16, i16 %3, i64 16), !MSB !66, !LSB !44, !extendFrom !66 (endState: LEGUP_F_main_BB_for_body15_i_7)
   %sub24.i = sub nsw i32 %bit_concat2, %bit_concat3, !dbg !68, !MSB !66, !LSB !44, !extendFrom !66 (endState: LEGUP_F_main_BB_for_body15_i_7)
   %bit_concat1 = call i32 @legup_bit_concat_15_16_1(i15 0, i64 15, i16 %2, i64 16, i1 false, i64 1), !MSB !66, !LSB !44, !extendFrom !66 (endState: LEGUP_F_main_BB_for_body15_i_7)
   %sub31.i = sub nsw i32 %bit_concat4, %bit_concat1, !dbg !72, !MSB !66, !LSB !44, !extendFrom !66 (endState: LEGUP_F_main_BB_for_body15_i_7)
   %or.i = or i32 %sub31.i, %bit_concat2, !dbg !72, !MSB !66, !LSB !44, !extendFrom !66 (endState: LEGUP_F_main_BB_for_body15_i_7)
   Transition: default: LEGUP_function_call_8
state: LEGUP_function_call_8, basic block: BB_for_body15_i
   %call.i = tail call i32 @abs(i32 %sub.i) #2, !dbg !73, !parents1 !74, !parents_inline !75, !MSB !66, !LSB !44, !extendFrom !66 (endState: LEGUP_function_call_8)
   Transition: if (abs_finish): LEGUP_F_main_BB_for_body15_i_9 default: LEGUP_function_call_8
state: LEGUP_F_main_BB_for_body15_i_9, basic block: BB_for_body15_i
   Transition: default: LEGUP_function_call_10
state: LEGUP_function_call_10, basic block: BB_for_body15_i
   %call32.i = tail call i32 @abs(i32 %sub24.i) #2, !dbg !76, !parents1 !74, !parents_inline !75, !MSB !66, !LSB !44, !extendFrom !66 (endState: LEGUP_function_call_10)
   Transition: if (abs_finish): LEGUP_F_main_BB_for_body15_i_11 default: LEGUP_function_call_10
state: LEGUP_F_main_BB_for_body15_i_11, basic block: BB_for_body15_i
   %not.cmp33.i = icmp sle i32 %call.i, %call32.i, !dbg !81, !MSB !44, !LSB !44, !extendFrom !44 (endState: LEGUP_F_main_BB_for_body15_i_11)
   Transition: default: LEGUP_function_call_12
state: LEGUP_function_call_12, basic block: BB_for_body15_i
   %call35.i = tail call i32 @abs(i32 %sub.i) #2, !dbg !77, !parents1 !74, !parents_inline !75, !MSB !66, !LSB !44, !extendFrom !66 (endState: LEGUP_function_call_12)
   Transition: if (abs_finish): LEGUP_F_main_BB_for_body15_i_13 default: LEGUP_function_call_12
state: LEGUP_F_main_BB_for_body15_i_13, basic block: BB_for_body15_i
   Transition: default: LEGUP_function_call_14
state: LEGUP_function_call_14, basic block: BB_for_body15_i
   %call36.i = tail call i32 @abs(i32 %or.i) #2, !dbg !78, !parents1 !74, !parents_inline !75, !MSB !66, !LSB !44, !extendFrom !66 (endState: LEGUP_function_call_14)
   Transition: if (abs_finish): LEGUP_F_main_BB_for_body15_i_15 default: LEGUP_function_call_14
state: LEGUP_F_main_BB_for_body15_i_15, basic block: BB_for_body15_i
   %cmp37.i = icmp sle i32 %call35.i, %call36.i, !dbg !78, !MSB !44, !LSB !44, !extendFrom !44 (endState: LEGUP_F_main_BB_for_body15_i_15)
   %.cmp37.i = and i1 %cmp37.i, %not.cmp33.i, !dbg !81, !MSB !44, !LSB !44, !extendFrom !44 (endState: LEGUP_F_main_BB_for_body15_i_15)
   Transition: default: LEGUP_function_call_16
state: LEGUP_function_call_16, basic block: BB_for_body15_i
   %call39.i = tail call i32 @abs(i32 %sub24.i) #2, !dbg !79, !parents1 !74, !parents_inline !75, !MSB !66, !LSB !44, !extendFrom !66 (endState: LEGUP_function_call_16)
   Transition: if (abs_finish): LEGUP_F_main_BB_for_body15_i_17 default: LEGUP_function_call_16
state: LEGUP_F_main_BB_for_body15_i_17, basic block: BB_for_body15_i
   Transition: default: LEGUP_function_call_18
state: LEGUP_function_call_18, basic block: BB_for_body15_i
   %call40.i = tail call i32 @abs(i32 %or.i) #2, !dbg !80, !parents1 !74, !parents_inline !75, !MSB !66, !LSB !44, !extendFrom !66 (endState: LEGUP_function_call_18)
   Transition: if (abs_finish): LEGUP_F_main_BB_for_body15_i_19 default: LEGUP_function_call_18
state: LEGUP_F_main_BB_for_body15_i_19, basic block: BB_for_body15_i
   br i1 %.cmp37.i, label %for.inc55.i, label %if.else.i, !dbg !82, !MSB !43, !LSB !44, !extendFrom !43
   Transition: if (%.cmp37.i): LEGUP_F_main_BB_for_inc55_i_21 default: LEGUP_F_main_BB_if_else_i_20
state: LEGUP_F_main_BB_if_else_i_20, basic block: BB_if_else_i
   %cmp41.i = icmp sgt i32 %call39.i, %call40.i, !dbg !80, !MSB !44, !LSB !44, !extendFrom !44 (endState: LEGUP_F_main_BB_if_else_i_20)
   %. = select i1 %cmp41.i, i16 %2, i16 %1, !dbg !42, !MSB !50, !LSB !44, !extendFrom !50 (endState: LEGUP_F_main_BB_if_else_i_20)
   br label %for.inc55.i, !dbg !42, !MSB !43, !LSB !44, !extendFrom !43
   Transition: default: LEGUP_F_main_BB_for_inc55_i_21
state: LEGUP_F_main_BB_for_inc55_i_21, basic block: BB_for_inc55_i
   %storemerge = phi i16 [ %3, %for.body15.i ], [ %., %if.else.i ], !MSB !50, !LSB !44, !extendFrom !50 (endState: LEGUP_F_main_BB_for_inc55_i_21)
   store i16 %storemerge, i16* %arrayidx46.i, align 2, !dbg !69, !MSB !43, !LSB !44, !extendFrom !43 (endState: LEGUP_F_main_BB_for_inc55_i_22)
   %4 = add nsw i32 %k.189.i, 1, !dbg !83, !MSB !66, !LSB !44, !extendFrom !66 (endState: LEGUP_F_main_BB_for_inc55_i_21)
   %exitcond3 = icmp eq i32 %4, 1024, !dbg !62, !MSB !44, !LSB !44, !extendFrom !44 (endState: LEGUP_F_main_BB_for_inc55_i_21)
   Transition: default: LEGUP_F_main_BB_for_inc55_i_22
state: LEGUP_F_main_BB_for_inc55_i_22, basic block: BB_for_inc55_i
   br i1 %exitcond3, label %for.inc58.i, label %for.body15.i, !dbg !62, !MSB !43, !LSB !44, !extendFrom !43
   Transition: if (%exitcond3): LEGUP_F_main_BB_for_inc58_i_23 default: LEGUP_F_main_BB_for_body15_i_6
state: LEGUP_F_main_BB_for_inc58_i_23, basic block: BB_for_inc58_i
   %5 = add nsw i32 %i.090.i, 1, !dbg !84, !MSB !85, !LSB !44, !extendFrom !85 (endState: LEGUP_F_main_BB_for_inc58_i_23)
   %exitcond4 = icmp eq i32 %5, 100, !dbg !86, !MSB !44, !LSB !44, !extendFrom !44 (endState: LEGUP_F_main_BB_for_inc58_i_23)
   br i1 %exitcond4, label %paeth.exit, label %for.cond12.preheader.i, !dbg !86, !MSB !43, !LSB !44, !extendFrom !43
   Transition: if (%exitcond4): LEGUP_F_main_BB_paeth_exit_24 default: LEGUP_F_main_BB_for_cond12_preheader_i_5
state: LEGUP_F_main_BB_paeth_exit_24, basic block: BB_paeth_exit
   %arrayidx61.i = getelementptr inbounds [1024 x i16]* %out.i, i32 0, i32 50, !dbg !89, !MSB !43, !LSB !44, !extendFrom !43 (endState: LEGUP_F_main_BB_paeth_exit_24)
   %6 = load i16* %arrayidx61.i, align 2, !dbg !89, !tbaa !56, !MSB !50, !LSB !44, !extendFrom !50 (endState: LEGUP_F_main_BB_paeth_exit_25)
   Transition: default: LEGUP_F_main_BB_paeth_exit_25
state: LEGUP_F_main_BB_paeth_exit_25, basic block: BB_paeth_exit
   %bit_concat = call i32 @legup_bit_concat_16_16(i16 0, i64 16, i16 %6, i64 16), !MSB !66, !LSB !44, !extendFrom !66 (endState: LEGUP_F_main_BB_paeth_exit_25)
   %call1 = tail call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([4 x i8]* @.str, i32 0, i32 0), i32 %bit_concat) #2, !dbg !90, !MSB !66, !LSB !44, !extendFrom !66 (endState: LEGUP_F_main_BB_paeth_exit_25)
   ret i32 0, !dbg !91, !MSB !43, !LSB !44, !extendFrom !43
   Transition: default: LEGUP_0

Basic Block: %for.body15.i Num States: 14
Basic Block: %if.else.i Num States: 1
Basic Block: %for.inc55.i Num States: 2
Basic Block: %for.inc58.i Num States: 1
Basic Block: %paeth.exit Num States: 2
Basic Block: %entry Num States: 1
Basic Block: %for.body.i Num States: 2
Basic Block: %for.cond12.preheader.i.preheader Num States: 1
Basic Block: %for.cond12.preheader.i Num States: 1
End Function: main
--------------------------------------------------------------------------------

