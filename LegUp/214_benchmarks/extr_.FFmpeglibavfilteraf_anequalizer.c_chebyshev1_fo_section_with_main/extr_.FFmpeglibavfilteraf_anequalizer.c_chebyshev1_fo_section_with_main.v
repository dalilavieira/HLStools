//----------------------------------------------------------------------------//
// Generated by LegUp High-Level Synthesis Tool Version 3.0 (http://legup.org)
// Compiled: Tue Jul 15 15:43:09 2014
// University of Toronto
// For research and academic purposes only. Commercial use is prohibited.
// Please send bugs to: legup@eecg.toronto.edu
// Date: Tue Mar 10 07:53:07 2020
//----------------------------------------------------------------------------//

`define MEMORY_CONTROLLER_ADDR_SIZE 32
`define MEMORY_CONTROLLER_DATA_SIZE 64
// Number of RAM elements: 0
`define MEMORY_CONTROLLER_TAG_SIZE 9
`define TAG_NULL `MEMORY_CONTROLLER_TAG_SIZE'd0
`define TAG_PROCESSOR `MEMORY_CONTROLLER_TAG_SIZE'd1

// Turn off warning 'ignoring unsupported system task'
// altera message_off 10175

module top
	(
		clk,
		reset,
		start,
		finish,
		return_val
	);
input clk;
input reset;
input start;
output wire finish;
output wire [31:0] return_val;
wire memory_controller_waitrequest;
wire memory_controller_enable_a;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] memory_controller_address_a;
wire memory_controller_write_enable_a;
wire [`MEMORY_CONTROLLER_DATA_SIZE-1:0] memory_controller_in_a;
wire [1:0] memory_controller_size_a;
wire [`MEMORY_CONTROLLER_DATA_SIZE-1:0] memory_controller_out_a;

wire memory_controller_enable_b;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] memory_controller_address_b;
wire memory_controller_write_enable_b;
wire [`MEMORY_CONTROLLER_DATA_SIZE-1:0] memory_controller_in_b;
wire [1:0] memory_controller_size_b;
wire [`MEMORY_CONTROLLER_DATA_SIZE-1:0] memory_controller_out_b;

assign memory_controller_waitrequest = 0;

memory_controller memory_controller_inst (
	.clk( clk ),
	.memory_controller_enable_a( memory_controller_enable_a ),
	.memory_controller_enable_b( memory_controller_enable_b ),
	.memory_controller_address_a( memory_controller_address_a ),
	.memory_controller_address_b( memory_controller_address_b ),
	.memory_controller_write_enable_a( memory_controller_write_enable_a ),
	.memory_controller_write_enable_b( memory_controller_write_enable_b ),
	.memory_controller_in_a( memory_controller_in_a ),
	.memory_controller_in_b( memory_controller_in_b ),
	.memory_controller_size_a( memory_controller_size_a ),
	.memory_controller_size_b( memory_controller_size_b ),
	.memory_controller_waitrequest( memory_controller_waitrequest ),
	.memory_controller_out_reg_a( memory_controller_out_a ),
	.memory_controller_out_reg_b( memory_controller_out_b )
);

main main_inst(
	.clk( clk ),
	.clk2x( clk2x ),
	.clk1x_follower( clk1x_follower ),
	.reset( reset ),
	.start( start ),
	.finish( finish ),
	.return_val( return_val ),
	.memory_controller_enable_a(memory_controller_enable_a),
	.memory_controller_address_a(memory_controller_address_a),
	.memory_controller_write_enable_a(memory_controller_write_enable_a),
	.memory_controller_in_a(memory_controller_in_a),
	.memory_controller_size_a(memory_controller_size_a),
	.memory_controller_out_a(memory_controller_out_a),
	.memory_controller_enable_b(memory_controller_enable_b),
	.memory_controller_address_b(memory_controller_address_b),
	.memory_controller_write_enable_b(memory_controller_write_enable_b),
	.memory_controller_in_b(memory_controller_in_b),
	.memory_controller_size_b(memory_controller_size_b),
	.memory_controller_out_b(memory_controller_out_b),
	.memory_controller_waitrequest(memory_controller_waitrequest)
);

endmodule
`timescale 1 ns / 1 ns
module memory_controller
(
	clk,
	memory_controller_address_a,
	memory_controller_address_b,
	memory_controller_enable_a,
	memory_controller_enable_b,
	memory_controller_write_enable_a,
	memory_controller_write_enable_b,
	memory_controller_in_a,
	memory_controller_in_b,
	memory_controller_size_a,
	memory_controller_size_b,
	memory_controller_waitrequest,
	memory_controller_out_reg_a,
	memory_controller_out_reg_b
);


input clk;
input memory_controller_waitrequest;
input [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] memory_controller_address_a;
input memory_controller_enable_a;
input memory_controller_write_enable_a;
input [64-1:0] memory_controller_in_a;
input [1:0] memory_controller_size_a;
output reg [64-1:0] memory_controller_out_reg_a;
reg [64-1:0] memory_controller_out_prev_a;
reg [64-1:0] memory_controller_out_a;

reg memory_controller_enable_reg_a;
input [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] memory_controller_address_b;
input memory_controller_enable_b;
input memory_controller_write_enable_b;
input [64-1:0] memory_controller_in_b;
input [1:0] memory_controller_size_b;
output reg [64-1:0] memory_controller_out_reg_b;
reg [64-1:0] memory_controller_out_prev_b;
reg [64-1:0] memory_controller_out_b;

reg memory_controller_enable_reg_b;
endmodule 
`timescale 1 ns / 1 ns
module chebyshev1_fo_section
(
	clk,
	clk2x,
	clk1x_follower,
	reset,
	start,
	finish,
	memory_controller_enable_a,
	memory_controller_address_a,
	memory_controller_write_enable_a,
	memory_controller_in_a,
	memory_controller_size_a,
	memory_controller_out_a,
	memory_controller_enable_b,
	memory_controller_address_b,
	memory_controller_write_enable_b,
	memory_controller_in_b,
	memory_controller_size_b,
	memory_controller_out_b,
	memory_controller_waitrequest,
	arg_S,
	arg_a,
	arg_c,
	arg_tetta_b,
	arg_g0,
	arg_si,
	arg_b,
	arg_D,
	arg_c0
);

parameter [8:0] LEGUP_0 = 9'd0;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_0_1 = 9'd1;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_0_2 = 9'd2;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_3_3 = 9'd3;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_3_4 = 9'd4;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_3_5 = 9'd5;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_3_6 = 9'd6;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_3_7 = 9'd7;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_3_8 = 9'd8;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_3_9 = 9'd9;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_3_10 = 9'd10;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_3_11 = 9'd11;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_3_12 = 9'd12;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_3_13 = 9'd13;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_3_14 = 9'd14;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_3_15 = 9'd15;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_3_16 = 9'd16;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_3_17 = 9'd17;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_3_18 = 9'd18;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_3_19 = 9'd19;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_3_20 = 9'd20;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_3_21 = 9'd21;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_3_22 = 9'd22;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_3_23 = 9'd23;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_3_24 = 9'd24;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_3_25 = 9'd25;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_3_26 = 9'd26;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_3_27 = 9'd27;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_3_28 = 9'd28;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_3_29 = 9'd29;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_3_30 = 9'd30;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_3_31 = 9'd31;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_3_32 = 9'd32;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_3_33 = 9'd33;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_3_34 = 9'd34;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_3_35 = 9'd35;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_3_36 = 9'd36;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_3_37 = 9'd37;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_3_38 = 9'd38;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_3_39 = 9'd39;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_3_40 = 9'd40;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_3_41 = 9'd41;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_3_42 = 9'd42;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_3_43 = 9'd43;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_3_44 = 9'd44;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_3_45 = 9'd45;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_3_46 = 9'd46;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_3_47 = 9'd47;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_3_48 = 9'd48;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_3_49 = 9'd49;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_3_50 = 9'd50;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_3_51 = 9'd51;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_3_52 = 9'd52;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_3_53 = 9'd53;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_3_54 = 9'd54;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_3_55 = 9'd55;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_3_56 = 9'd56;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_3_57 = 9'd57;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_3_58 = 9'd58;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_3_59 = 9'd59;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_3_60 = 9'd60;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_3_61 = 9'd61;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_3_62 = 9'd62;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_3_63 = 9'd63;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_3_64 = 9'd64;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_3_65 = 9'd65;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_3_66 = 9'd66;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_3_67 = 9'd67;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_3_68 = 9'd68;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_3_69 = 9'd69;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_3_70 = 9'd70;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_3_71 = 9'd71;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_3_72 = 9'd72;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_3_73 = 9'd73;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_3_74 = 9'd74;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_3_75 = 9'd75;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_3_76 = 9'd76;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_3_77 = 9'd77;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_3_78 = 9'd78;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_3_79 = 9'd79;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_3_80 = 9'd80;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_3_81 = 9'd81;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_3_82 = 9'd82;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_3_83 = 9'd83;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_3_84 = 9'd84;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_3_85 = 9'd85;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_3_86 = 9'd86;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_3_87 = 9'd87;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_3_88 = 9'd88;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_3_89 = 9'd89;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_3_90 = 9'd90;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_3_91 = 9'd91;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_3_92 = 9'd92;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_3_93 = 9'd93;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_3_94 = 9'd94;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_3_95 = 9'd95;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_3_96 = 9'd96;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_3_97 = 9'd97;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_3_98 = 9'd98;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_3_99 = 9'd99;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_3_100 = 9'd100;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_3_101 = 9'd101;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_3_102 = 9'd102;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_3_103 = 9'd103;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_3_104 = 9'd104;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_3_105 = 9'd105;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_3_106 = 9'd106;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_3_107 = 9'd107;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_3_108 = 9'd108;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_3_109 = 9'd109;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_3_110 = 9'd110;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_3_111 = 9'd111;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_3_112 = 9'd112;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_3_113 = 9'd113;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_3_114 = 9'd114;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_3_115 = 9'd115;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_3_116 = 9'd116;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_3_117 = 9'd117;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_3_118 = 9'd118;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_3_119 = 9'd119;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_3_120 = 9'd120;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_3_121 = 9'd121;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_3_122 = 9'd122;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_3_123 = 9'd123;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_3_124 = 9'd124;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_3_125 = 9'd125;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_3_126 = 9'd126;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_3_127 = 9'd127;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_3_128 = 9'd128;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_3_129 = 9'd129;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_3_130 = 9'd130;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_3_131 = 9'd131;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_3_132 = 9'd132;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_3_133 = 9'd133;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_3_134 = 9'd134;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_3_135 = 9'd135;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_3_136 = 9'd136;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_3_137 = 9'd137;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_3_138 = 9'd138;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_3_139 = 9'd139;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_3_140 = 9'd140;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_3_141 = 9'd141;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_3_142 = 9'd142;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_3_143 = 9'd143;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_3_144 = 9'd144;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_3_145 = 9'd145;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_3_146 = 9'd146;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_3_147 = 9'd147;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_3_148 = 9'd148;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_3_149 = 9'd149;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_3_150 = 9'd150;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_3_151 = 9'd151;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_3_152 = 9'd152;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_3_153 = 9'd153;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_3_154 = 9'd154;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_3_155 = 9'd155;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_3_156 = 9'd156;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_3_157 = 9'd157;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_3_158 = 9'd158;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_3_159 = 9'd159;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_3_160 = 9'd160;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_51_161 = 9'd161;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_51_162 = 9'd162;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_51_163 = 9'd163;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_51_164 = 9'd164;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_51_165 = 9'd165;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_51_166 = 9'd166;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_51_167 = 9'd167;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_51_168 = 9'd168;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_51_169 = 9'd169;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_51_170 = 9'd170;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_51_171 = 9'd171;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_51_172 = 9'd172;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_51_173 = 9'd173;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_51_174 = 9'd174;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_51_175 = 9'd175;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_51_176 = 9'd176;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_51_177 = 9'd177;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_51_178 = 9'd178;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_51_179 = 9'd179;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_51_180 = 9'd180;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_51_181 = 9'd181;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_51_182 = 9'd182;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_51_183 = 9'd183;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_51_184 = 9'd184;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_51_185 = 9'd185;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_51_186 = 9'd186;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_51_187 = 9'd187;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_51_188 = 9'd188;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_51_189 = 9'd189;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_51_190 = 9'd190;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_51_191 = 9'd191;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_51_192 = 9'd192;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_51_193 = 9'd193;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_51_194 = 9'd194;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_51_195 = 9'd195;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_51_196 = 9'd196;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_51_197 = 9'd197;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_51_198 = 9'd198;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_51_199 = 9'd199;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_51_200 = 9'd200;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_51_201 = 9'd201;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_51_202 = 9'd202;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_51_203 = 9'd203;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_51_204 = 9'd204;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_51_205 = 9'd205;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_51_206 = 9'd206;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_51_207 = 9'd207;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_51_208 = 9'd208;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_51_209 = 9'd209;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_51_210 = 9'd210;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_51_211 = 9'd211;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_51_212 = 9'd212;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_51_213 = 9'd213;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_51_214 = 9'd214;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_51_215 = 9'd215;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_51_216 = 9'd216;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_51_217 = 9'd217;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_51_218 = 9'd218;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_51_219 = 9'd219;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_51_220 = 9'd220;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_51_221 = 9'd221;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_51_222 = 9'd222;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_51_223 = 9'd223;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_51_224 = 9'd224;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_51_225 = 9'd225;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_51_226 = 9'd226;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_51_227 = 9'd227;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_51_228 = 9'd228;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_51_229 = 9'd229;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_51_230 = 9'd230;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_51_231 = 9'd231;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_51_232 = 9'd232;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_51_233 = 9'd233;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_51_234 = 9'd234;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_51_235 = 9'd235;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_51_236 = 9'd236;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_51_237 = 9'd237;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_51_238 = 9'd238;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_51_239 = 9'd239;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_51_240 = 9'd240;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_51_241 = 9'd241;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_51_242 = 9'd242;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_51_243 = 9'd243;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_51_244 = 9'd244;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_51_245 = 9'd245;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_51_246 = 9'd246;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_51_247 = 9'd247;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_51_248 = 9'd248;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_51_249 = 9'd249;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_51_250 = 9'd250;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_51_251 = 9'd251;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_51_252 = 9'd252;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_51_253 = 9'd253;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_51_254 = 9'd254;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_51_255 = 9'd255;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_51_256 = 9'd256;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_51_257 = 9'd257;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_51_258 = 9'd258;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_51_259 = 9'd259;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_51_260 = 9'd260;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_51_261 = 9'd261;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_51_262 = 9'd262;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_51_263 = 9'd263;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_51_264 = 9'd264;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_51_265 = 9'd265;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_51_266 = 9'd266;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_51_267 = 9'd267;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_51_268 = 9'd268;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_51_269 = 9'd269;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_51_270 = 9'd270;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_51_271 = 9'd271;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_51_272 = 9'd272;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_51_273 = 9'd273;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_51_274 = 9'd274;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_51_275 = 9'd275;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_51_276 = 9'd276;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_51_277 = 9'd277;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_51_278 = 9'd278;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_51_279 = 9'd279;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_51_280 = 9'd280;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_51_281 = 9'd281;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_51_282 = 9'd282;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_51_283 = 9'd283;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_51_284 = 9'd284;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_51_285 = 9'd285;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_51_286 = 9'd286;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_51_287 = 9'd287;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_51_288 = 9'd288;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_51_289 = 9'd289;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_51_290 = 9'd290;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_51_291 = 9'd291;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_51_292 = 9'd292;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_51_293 = 9'd293;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_51_294 = 9'd294;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_51_295 = 9'd295;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_51_296 = 9'd296;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_51_297 = 9'd297;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_51_298 = 9'd298;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_51_299 = 9'd299;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_51_300 = 9'd300;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_51_301 = 9'd301;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_51_302 = 9'd302;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_51_303 = 9'd303;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_51_304 = 9'd304;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_51_305 = 9'd305;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_51_306 = 9'd306;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_51_307 = 9'd307;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_51_308 = 9'd308;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_51_309 = 9'd309;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_51_310 = 9'd310;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_51_311 = 9'd311;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_51_312 = 9'd312;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_51_313 = 9'd313;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_51_314 = 9'd314;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_51_315 = 9'd315;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_51_316 = 9'd316;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_51_317 = 9'd317;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_51_318 = 9'd318;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_51_319 = 9'd319;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_51_320 = 9'd320;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_51_321 = 9'd321;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_51_322 = 9'd322;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_51_323 = 9'd323;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_51_324 = 9'd324;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_51_325 = 9'd325;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_51_326 = 9'd326;
parameter [8:0] LEGUP_F_chebyshev1_fo_section_BB_122_327 = 9'd327;

input  clk;
input  clk2x;
input  clk1x_follower;
input  reset;
input  start;
output reg  finish;
output reg  memory_controller_enable_a;
output reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] memory_controller_address_a;
output reg  memory_controller_write_enable_a;
output reg [`MEMORY_CONTROLLER_DATA_SIZE-1:0] memory_controller_in_a;
output reg [1:0] memory_controller_size_a;
input [`MEMORY_CONTROLLER_DATA_SIZE-1:0] memory_controller_out_a;
output reg  memory_controller_enable_b;
output reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] memory_controller_address_b;
output reg  memory_controller_write_enable_b;
output reg [`MEMORY_CONTROLLER_DATA_SIZE-1:0] memory_controller_in_b;
output reg [1:0] memory_controller_size_b;
input [`MEMORY_CONTROLLER_DATA_SIZE-1:0] memory_controller_out_b;
input  memory_controller_waitrequest;
input [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] arg_S;
input [63:0] arg_a;
input [63:0] arg_c;
input [63:0] arg_tetta_b;
input [63:0] arg_g0;
input [63:0] arg_si;
input [63:0] arg_b;
input [63:0] arg_D;
input [63:0] arg_c0;
reg [8:0] cur_state;
reg  chebyshev1_fo_section_0_1;
reg  chebyshev1_fo_section_0_1_reg;
reg  chebyshev1_fo_section_0_2;
reg  chebyshev1_fo_section_0_2_reg;
reg  chebyshev1_fo_section_0_or_cond;
reg  chebyshev1_fo_section_0_or_cond_reg;
reg [63:0] chebyshev1_fo_section_3_4;
reg [63:0] chebyshev1_fo_section_3_4_reg;
reg [63:0] chebyshev1_fo_section_3_5;
reg [63:0] chebyshev1_fo_section_3_5_reg;
reg [63:0] chebyshev1_fo_section_3_6;
reg [63:0] chebyshev1_fo_section_3_6_reg;
reg [63:0] chebyshev1_fo_section_3_7;
reg [63:0] chebyshev1_fo_section_3_7_reg;
reg [63:0] chebyshev1_fo_section_3_8;
reg [63:0] chebyshev1_fo_section_3_8_reg;
reg [63:0] chebyshev1_fo_section_3_9;
reg [63:0] chebyshev1_fo_section_3_9_reg;
reg [63:0] chebyshev1_fo_section_3_10;
reg [63:0] chebyshev1_fo_section_3_10_reg;
reg [63:0] chebyshev1_fo_section_3_11;
reg [63:0] chebyshev1_fo_section_3_11_reg;
reg [63:0] chebyshev1_fo_section_3_12;
reg [63:0] chebyshev1_fo_section_3_12_reg;
reg [63:0] chebyshev1_fo_section_3_13;
reg [63:0] chebyshev1_fo_section_3_13_reg;
reg [63:0] chebyshev1_fo_section_3_14;
reg [63:0] chebyshev1_fo_section_3_14_reg;
reg [63:0] chebyshev1_fo_section_3_15;
reg [63:0] chebyshev1_fo_section_3_15_reg;
reg [63:0] chebyshev1_fo_section_3_16;
reg [63:0] chebyshev1_fo_section_3_16_reg;
reg [63:0] chebyshev1_fo_section_3_17;
reg [63:0] chebyshev1_fo_section_3_17_reg;
reg [63:0] chebyshev1_fo_section_3_18;
reg [63:0] chebyshev1_fo_section_3_18_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] chebyshev1_fo_section_3_19;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] chebyshev1_fo_section_3_19_reg;
reg [63:0] chebyshev1_fo_section_3_20;
reg [63:0] chebyshev1_fo_section_3_20_reg;
reg [63:0] chebyshev1_fo_section_3_21;
reg [63:0] chebyshev1_fo_section_3_21_reg;
reg [63:0] chebyshev1_fo_section_3_22;
reg [63:0] chebyshev1_fo_section_3_22_reg;
reg [63:0] chebyshev1_fo_section_3_23;
reg [63:0] chebyshev1_fo_section_3_23_reg;
reg [31:0] chebyshev1_fo_section_3_24;
reg [31:0] chebyshev1_fo_section_3_24_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] chebyshev1_fo_section_3_25;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] chebyshev1_fo_section_3_25_reg;
reg [63:0] chebyshev1_fo_section_3_26;
reg [63:0] chebyshev1_fo_section_3_26_reg;
reg [63:0] chebyshev1_fo_section_3_27;
reg [63:0] chebyshev1_fo_section_3_27_reg;
reg [63:0] chebyshev1_fo_section_3_28;
reg [63:0] chebyshev1_fo_section_3_28_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] chebyshev1_fo_section_3_29;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] chebyshev1_fo_section_3_29_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] chebyshev1_fo_section_3_30;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] chebyshev1_fo_section_3_30_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] chebyshev1_fo_section_3_31;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] chebyshev1_fo_section_3_31_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] chebyshev1_fo_section_3_32;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] chebyshev1_fo_section_3_32_reg;
reg [63:0] chebyshev1_fo_section_3_33;
reg [63:0] chebyshev1_fo_section_3_33_reg;
reg [63:0] chebyshev1_fo_section_3_34;
reg [63:0] chebyshev1_fo_section_3_34_reg;
reg [63:0] chebyshev1_fo_section_3_35;
reg [63:0] chebyshev1_fo_section_3_35_reg;
reg [63:0] chebyshev1_fo_section_3_36;
reg [63:0] chebyshev1_fo_section_3_36_reg;
reg [63:0] chebyshev1_fo_section_3_37;
reg [63:0] chebyshev1_fo_section_3_37_reg;
reg [63:0] chebyshev1_fo_section_3_38;
reg [63:0] chebyshev1_fo_section_3_38_reg;
reg [63:0] chebyshev1_fo_section_3_39;
reg [63:0] chebyshev1_fo_section_3_39_reg;
reg [31:0] chebyshev1_fo_section_3_40;
reg [31:0] chebyshev1_fo_section_3_40_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] chebyshev1_fo_section_3_41;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] chebyshev1_fo_section_3_41_reg;
reg [63:0] chebyshev1_fo_section_3_42;
reg [63:0] chebyshev1_fo_section_3_42_reg;
reg [63:0] chebyshev1_fo_section_3_43;
reg [63:0] chebyshev1_fo_section_3_43_reg;
reg [63:0] chebyshev1_fo_section_3_44;
reg [63:0] chebyshev1_fo_section_3_44_reg;
reg [63:0] chebyshev1_fo_section_3_45;
reg [63:0] chebyshev1_fo_section_3_45_reg;
reg [63:0] chebyshev1_fo_section_3_46;
reg [63:0] chebyshev1_fo_section_3_46_reg;
reg [63:0] chebyshev1_fo_section_3_47;
reg [63:0] chebyshev1_fo_section_3_47_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] chebyshev1_fo_section_3_48;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] chebyshev1_fo_section_3_48_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] chebyshev1_fo_section_3_49;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] chebyshev1_fo_section_3_49_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] chebyshev1_fo_section_3_50;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] chebyshev1_fo_section_3_50_reg;
reg [63:0] chebyshev1_fo_section_51_52;
reg [63:0] chebyshev1_fo_section_51_52_reg;
reg [63:0] chebyshev1_fo_section_51_53;
reg [63:0] chebyshev1_fo_section_51_53_reg;
reg [63:0] chebyshev1_fo_section_51_54;
reg [63:0] chebyshev1_fo_section_51_54_reg;
reg [63:0] chebyshev1_fo_section_51_55;
reg [63:0] chebyshev1_fo_section_51_55_reg;
reg [63:0] chebyshev1_fo_section_51_56;
reg [63:0] chebyshev1_fo_section_51_56_reg;
reg [63:0] chebyshev1_fo_section_51_57;
reg [63:0] chebyshev1_fo_section_51_57_reg;
reg [63:0] chebyshev1_fo_section_51_58;
reg [63:0] chebyshev1_fo_section_51_58_reg;
reg [63:0] chebyshev1_fo_section_51_59;
reg [63:0] chebyshev1_fo_section_51_59_reg;
reg [63:0] chebyshev1_fo_section_51_60;
reg [63:0] chebyshev1_fo_section_51_60_reg;
reg [63:0] chebyshev1_fo_section_51_61;
reg [63:0] chebyshev1_fo_section_51_61_reg;
reg [63:0] chebyshev1_fo_section_51_62;
reg [63:0] chebyshev1_fo_section_51_62_reg;
reg [63:0] chebyshev1_fo_section_51_63;
reg [63:0] chebyshev1_fo_section_51_63_reg;
reg [63:0] chebyshev1_fo_section_51_64;
reg [63:0] chebyshev1_fo_section_51_64_reg;
reg [63:0] chebyshev1_fo_section_51_65;
reg [63:0] chebyshev1_fo_section_51_65_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] chebyshev1_fo_section_51_66;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] chebyshev1_fo_section_51_66_reg;
reg [63:0] chebyshev1_fo_section_51_67;
reg [63:0] chebyshev1_fo_section_51_67_reg;
reg [63:0] chebyshev1_fo_section_51_68;
reg [63:0] chebyshev1_fo_section_51_68_reg;
reg [63:0] chebyshev1_fo_section_51_69;
reg [63:0] chebyshev1_fo_section_51_69_reg;
reg [63:0] chebyshev1_fo_section_51_70;
reg [63:0] chebyshev1_fo_section_51_70_reg;
reg [63:0] chebyshev1_fo_section_51_71;
reg [63:0] chebyshev1_fo_section_51_71_reg;
reg [63:0] chebyshev1_fo_section_51_72;
reg [63:0] chebyshev1_fo_section_51_72_reg;
reg [63:0] chebyshev1_fo_section_51_73;
reg [63:0] chebyshev1_fo_section_51_73_reg;
reg [31:0] chebyshev1_fo_section_51_74;
reg [31:0] chebyshev1_fo_section_51_74_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] chebyshev1_fo_section_51_75;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] chebyshev1_fo_section_51_75_reg;
reg [63:0] chebyshev1_fo_section_51_76;
reg [63:0] chebyshev1_fo_section_51_76_reg;
reg [63:0] chebyshev1_fo_section_51_77;
reg [63:0] chebyshev1_fo_section_51_77_reg;
reg [63:0] chebyshev1_fo_section_51_78;
reg [63:0] chebyshev1_fo_section_51_78_reg;
reg [63:0] chebyshev1_fo_section_51_79;
reg [63:0] chebyshev1_fo_section_51_79_reg;
reg [63:0] chebyshev1_fo_section_51_80;
reg [63:0] chebyshev1_fo_section_51_80_reg;
reg [63:0] chebyshev1_fo_section_51_81;
reg [63:0] chebyshev1_fo_section_51_81_reg;
reg [63:0] chebyshev1_fo_section_51_82;
reg [63:0] chebyshev1_fo_section_51_82_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] chebyshev1_fo_section_51_83;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] chebyshev1_fo_section_51_83_reg;
reg [63:0] chebyshev1_fo_section_51_84;
reg [63:0] chebyshev1_fo_section_51_84_reg;
reg [63:0] chebyshev1_fo_section_51_85;
reg [63:0] chebyshev1_fo_section_51_85_reg;
reg [63:0] chebyshev1_fo_section_51_86;
reg [63:0] chebyshev1_fo_section_51_86_reg;
reg [31:0] chebyshev1_fo_section_51_87;
reg [31:0] chebyshev1_fo_section_51_87_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] chebyshev1_fo_section_51_88;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] chebyshev1_fo_section_51_88_reg;
reg [63:0] chebyshev1_fo_section_51_89;
reg [63:0] chebyshev1_fo_section_51_89_reg;
reg [63:0] chebyshev1_fo_section_51_90;
reg [63:0] chebyshev1_fo_section_51_90_reg;
reg [63:0] chebyshev1_fo_section_51_91;
reg [63:0] chebyshev1_fo_section_51_91_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] chebyshev1_fo_section_51_92;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] chebyshev1_fo_section_51_92_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] chebyshev1_fo_section_51_93;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] chebyshev1_fo_section_51_93_reg;
reg [63:0] chebyshev1_fo_section_51_94;
reg [63:0] chebyshev1_fo_section_51_94_reg;
reg [63:0] chebyshev1_fo_section_51_95;
reg [63:0] chebyshev1_fo_section_51_95_reg;
reg [63:0] chebyshev1_fo_section_51_96;
reg [63:0] chebyshev1_fo_section_51_96_reg;
reg [63:0] chebyshev1_fo_section_51_97;
reg [63:0] chebyshev1_fo_section_51_97_reg;
reg [63:0] chebyshev1_fo_section_51_98;
reg [63:0] chebyshev1_fo_section_51_98_reg;
reg [31:0] chebyshev1_fo_section_51_99;
reg [31:0] chebyshev1_fo_section_51_99_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] chebyshev1_fo_section_51_100;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] chebyshev1_fo_section_51_100_reg;
reg [63:0] chebyshev1_fo_section_51_101;
reg [63:0] chebyshev1_fo_section_51_101_reg;
reg [63:0] chebyshev1_fo_section_51_102;
reg [63:0] chebyshev1_fo_section_51_102_reg;
reg [63:0] chebyshev1_fo_section_51_103;
reg [63:0] chebyshev1_fo_section_51_103_reg;
reg [63:0] chebyshev1_fo_section_51_104;
reg [63:0] chebyshev1_fo_section_51_104_reg;
reg [63:0] chebyshev1_fo_section_51_105;
reg [63:0] chebyshev1_fo_section_51_105_reg;
reg [63:0] chebyshev1_fo_section_51_106;
reg [63:0] chebyshev1_fo_section_51_106_reg;
reg [63:0] chebyshev1_fo_section_51_107;
reg [63:0] chebyshev1_fo_section_51_107_reg;
reg [63:0] chebyshev1_fo_section_51_108;
reg [63:0] chebyshev1_fo_section_51_108_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] chebyshev1_fo_section_51_109;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] chebyshev1_fo_section_51_109_reg;
reg [63:0] chebyshev1_fo_section_51_110;
reg [63:0] chebyshev1_fo_section_51_110_reg;
reg [63:0] chebyshev1_fo_section_51_111;
reg [63:0] chebyshev1_fo_section_51_111_reg;
reg [63:0] chebyshev1_fo_section_51_112;
reg [63:0] chebyshev1_fo_section_51_112_reg;
reg [31:0] chebyshev1_fo_section_51_113;
reg [31:0] chebyshev1_fo_section_51_113_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] chebyshev1_fo_section_51_114;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] chebyshev1_fo_section_51_114_reg;
reg [63:0] chebyshev1_fo_section_51_115;
reg [63:0] chebyshev1_fo_section_51_115_reg;
reg [63:0] chebyshev1_fo_section_51_116;
reg [63:0] chebyshev1_fo_section_51_116_reg;
reg [63:0] chebyshev1_fo_section_51_117;
reg [63:0] chebyshev1_fo_section_51_117_reg;
reg [63:0] chebyshev1_fo_section_51_118;
reg [63:0] chebyshev1_fo_section_51_118_reg;
reg [63:0] chebyshev1_fo_section_51_119;
reg [63:0] chebyshev1_fo_section_51_119_reg;
reg [63:0] chebyshev1_fo_section_51_120;
reg [63:0] chebyshev1_fo_section_51_120_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] chebyshev1_fo_section_51_121;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] chebyshev1_fo_section_51_121_reg;
wire [15:0] legup_pthreadpoll_threadID;
reg [63:0] chebyshev1_fo_section_altfp_multiply_64_0_op0;
reg [63:0] chebyshev1_fo_section_altfp_multiply_64_0_op1;
wire [63:0] altfp_multiplier64_chebyshev1_fo_section_3_12_out;
reg  altfp_chebyshev1_fo_section_3_12_en;
reg [63:0] chebyshev1_fo_section_altfp_multiply_64_0;
reg [63:0] chebyshev1_fo_section_altfp_add_64_0_op0;
reg [63:0] chebyshev1_fo_section_altfp_add_64_0_op1;
wire [63:0] altfp_adder64_chebyshev1_fo_section_3_16_out;
reg  altfp_chebyshev1_fo_section_3_16_en;
reg [63:0] chebyshev1_fo_section_altfp_add_64_0;
reg [63:0] chebyshev1_fo_section_altfp_divide_64_0_op0;
reg [63:0] chebyshev1_fo_section_altfp_divide_64_0_op1;
wire [63:0] altfp_divider64_chebyshev1_fo_section_3_18_out;
reg  altfp_chebyshev1_fo_section_3_18_en;
reg [63:0] chebyshev1_fo_section_altfp_divide_64_0;
reg [63:0] chebyshev1_fo_section_altfp_fptosi_64_0_op0;
wire [31:0] altfp_fptosi64_chebyshev1_fo_section_3_24_out;
reg  altfp_chebyshev1_fo_section_3_24_en;
reg [31:0] chebyshev1_fo_section_altfp_fptosi_64_0;
reg [63:0] chebyshev1_fo_section_altfp_subtract_64_0_op0;
reg [63:0] chebyshev1_fo_section_altfp_subtract_64_0_op1;
wire [63:0] altfp_subtractor64_chebyshev1_fo_section_3_21_out;
reg  altfp_chebyshev1_fo_section_3_21_en;
reg [63:0] chebyshev1_fo_section_altfp_subtract_64_0;
wire  altfp_compare64_1_chebyshev1_fo_section_0_1_out;
reg  altfp_chebyshev1_fo_section_0_1_en;
wire  chebyshev1_fo_section_0_1_unused;
wire  altfp_compare64_1_chebyshev1_fo_section_0_2_out;
reg  altfp_chebyshev1_fo_section_0_2_en;
wire  chebyshev1_fo_section_0_2_unused;
reg  altfp_chebyshev1_fo_section_3_4_en;
reg  altfp_chebyshev1_fo_section_3_5_en;
reg  altfp_chebyshev1_fo_section_3_6_en;
reg  altfp_chebyshev1_fo_section_3_11_en;
reg  altfp_chebyshev1_fo_section_3_20_en;
reg  altfp_chebyshev1_fo_section_3_33_en;
reg  altfp_chebyshev1_fo_section_3_34_en;
reg  altfp_chebyshev1_fo_section_3_42_en;
reg  altfp_chebyshev1_fo_section_3_7_en;
reg  altfp_chebyshev1_fo_section_3_8_en;
reg  altfp_chebyshev1_fo_section_3_13_en;
reg  altfp_chebyshev1_fo_section_3_9_en;
reg  altfp_chebyshev1_fo_section_3_14_en;
reg  altfp_chebyshev1_fo_section_3_35_en;
reg  altfp_chebyshev1_fo_section_3_43_en;
reg  altfp_chebyshev1_fo_section_3_10_en;
reg  altfp_chebyshev1_fo_section_3_36_en;
reg  altfp_chebyshev1_fo_section_3_15_en;
reg  altfp_chebyshev1_fo_section_3_44_en;
reg  altfp_chebyshev1_fo_section_3_26_en;
reg  altfp_chebyshev1_fo_section_3_37_en;
reg  altfp_chebyshev1_fo_section_3_45_en;
reg  altfp_chebyshev1_fo_section_3_22_en;
reg  altfp_chebyshev1_fo_section_3_38_en;
reg  altfp_chebyshev1_fo_section_3_17_en;
reg  altfp_chebyshev1_fo_section_3_27_en;
reg  altfp_chebyshev1_fo_section_3_46_en;
reg  altfp_chebyshev1_fo_section_3_23_en;
reg  altfp_chebyshev1_fo_section_3_39_en;
reg  altfp_chebyshev1_fo_section_3_28_en;
reg  altfp_chebyshev1_fo_section_3_47_en;
reg  altfp_chebyshev1_fo_section_3_40_en;
reg  altfp_chebyshev1_fo_section_51_52_en;
reg  altfp_chebyshev1_fo_section_51_53_en;
reg  altfp_chebyshev1_fo_section_51_59_en;
reg  altfp_chebyshev1_fo_section_51_67_en;
reg  altfp_chebyshev1_fo_section_51_68_en;
reg  altfp_chebyshev1_fo_section_51_76_en;
reg  altfp_chebyshev1_fo_section_51_94_en;
reg  altfp_chebyshev1_fo_section_51_101_en;
reg  altfp_chebyshev1_fo_section_51_102_en;
reg  altfp_chebyshev1_fo_section_51_115_en;
reg  altfp_chebyshev1_fo_section_51_54_en;
reg  altfp_chebyshev1_fo_section_51_55_en;
reg  altfp_chebyshev1_fo_section_51_60_en;
reg  altfp_chebyshev1_fo_section_51_77_en;
reg  altfp_chebyshev1_fo_section_51_69_en;
reg  altfp_chebyshev1_fo_section_51_56_en;
reg  altfp_chebyshev1_fo_section_51_103_en;
reg  altfp_chebyshev1_fo_section_51_78_en;
reg  altfp_chebyshev1_fo_section_51_57_en;
reg  altfp_chebyshev1_fo_section_51_61_en;
reg  altfp_chebyshev1_fo_section_51_104_en;
reg  altfp_chebyshev1_fo_section_51_116_en;
reg  altfp_chebyshev1_fo_section_51_70_en;
reg  altfp_chebyshev1_fo_section_51_95_en;
reg  altfp_chebyshev1_fo_section_51_58_en;
reg  altfp_chebyshev1_fo_section_51_62_en;
reg  altfp_chebyshev1_fo_section_51_105_en;
reg  altfp_chebyshev1_fo_section_51_117_en;
reg  altfp_chebyshev1_fo_section_51_71_en;
reg  altfp_chebyshev1_fo_section_51_79_en;
reg  altfp_chebyshev1_fo_section_51_84_en;
reg  altfp_chebyshev1_fo_section_51_96_en;
reg  altfp_chebyshev1_fo_section_51_110_en;
reg  altfp_chebyshev1_fo_section_51_63_en;
reg  altfp_chebyshev1_fo_section_51_89_en;
reg  altfp_chebyshev1_fo_section_51_118_en;
reg  altfp_chebyshev1_fo_section_51_80_en;
reg  altfp_chebyshev1_fo_section_51_106_en;
reg  altfp_chebyshev1_fo_section_51_72_en;
reg  altfp_chebyshev1_fo_section_51_85_en;
reg  altfp_chebyshev1_fo_section_51_97_en;
reg  altfp_chebyshev1_fo_section_51_111_en;
reg  altfp_chebyshev1_fo_section_51_64_en;
reg  altfp_chebyshev1_fo_section_51_90_en;
reg  altfp_chebyshev1_fo_section_51_119_en;
reg  altfp_chebyshev1_fo_section_51_73_en;
reg  altfp_chebyshev1_fo_section_51_81_en;
reg  altfp_chebyshev1_fo_section_51_86_en;
reg  altfp_chebyshev1_fo_section_51_107_en;
reg  altfp_chebyshev1_fo_section_51_98_en;
reg  altfp_chebyshev1_fo_section_51_112_en;
reg  altfp_chebyshev1_fo_section_51_65_en;
reg  altfp_chebyshev1_fo_section_51_82_en;
reg  altfp_chebyshev1_fo_section_51_91_en;
reg  altfp_chebyshev1_fo_section_51_108_en;
reg  altfp_chebyshev1_fo_section_51_120_en;
reg  altfp_chebyshev1_fo_section_51_74_en;
reg  altfp_chebyshev1_fo_section_51_87_en;
reg  altfp_chebyshev1_fo_section_51_99_en;
reg  altfp_chebyshev1_fo_section_51_113_en;

/*   %12 = fmul double %11, %b*/
altfp_multiplier64_11 altfp_multiplier64_11_chebyshev1_fo_section_3_12 (
	.result (altfp_multiplier64_chebyshev1_fo_section_3_12_out),
	.dataa (chebyshev1_fo_section_altfp_multiply_64_0_op0),
	.datab (chebyshev1_fo_section_altfp_multiply_64_0_op1),
	.clock (clk),
	.clk_en (altfp_chebyshev1_fo_section_3_12_en)
);


/*   %16 = fadd double %10, %15*/
altfp_adder64_14 altfp_adder64_14_chebyshev1_fo_section_3_16 (
	.result (altfp_adder64_chebyshev1_fo_section_3_16_out),
	.dataa (chebyshev1_fo_section_altfp_add_64_0_op0),
	.datab (chebyshev1_fo_section_altfp_add_64_0_op1),
	.clock (clk),
	.clk_en (altfp_chebyshev1_fo_section_3_16_en)
);


/*   %18 = fdiv double %17, %D*/
altfp_divider64_61 altfp_divider64_61_chebyshev1_fo_section_3_18 (
	.result (altfp_divider64_chebyshev1_fo_section_3_18_out),
	.dataa (chebyshev1_fo_section_altfp_divide_64_0_op0),
	.datab (chebyshev1_fo_section_altfp_divide_64_0_op1),
	.clock (clk),
	.clk_en (altfp_chebyshev1_fo_section_3_18_en)
);


/*   %24 = fptosi double %23 to i32*/
altfp_fptosi64_6 altfp_fptosi64_6_chebyshev1_fo_section_3_24 (
	.result (altfp_fptosi64_chebyshev1_fo_section_3_24_out),
	.dataa (chebyshev1_fo_section_altfp_fptosi_64_0_op0),
	.clock (clk),
	.clk_en (altfp_chebyshev1_fo_section_3_24_en)
);


/*   %21 = fsub double %10, %6*/
altfp_subtractor64_14 altfp_subtractor64_14_chebyshev1_fo_section_3_21 (
	.result (altfp_subtractor64_chebyshev1_fo_section_3_21_out),
	.dataa (chebyshev1_fo_section_altfp_subtract_64_0_op0),
	.datab (chebyshev1_fo_section_altfp_subtract_64_0_op1),
	.clock (clk),
	.clk_en (altfp_chebyshev1_fo_section_3_21_en)
);


/*   %1 = fcmp oeq double %c0, 1.000000e+00*/
altfp_compare64_1 altfp_compare64_1_chebyshev1_fo_section_0_1 (
	.dataa (arg_c0),
	.datab (64'h3FF0000000000000),
	.clock (clk),
	.clk_en (altfp_chebyshev1_fo_section_0_1_en),
	.aeb (altfp_compare64_1_chebyshev1_fo_section_0_1_out),
	.aneb (chebyshev1_fo_section_0_1_unused),
	.alb (chebyshev1_fo_section_0_1_unused),
	.aleb (chebyshev1_fo_section_0_1_unused),
	.agb (chebyshev1_fo_section_0_1_unused),
	.ageb (chebyshev1_fo_section_0_1_unused),
	.unordered (chebyshev1_fo_section_0_1_unused)
);


/*   %2 = fcmp oeq double %c0, -1.000000e+00*/
altfp_compare64_1 altfp_compare64_1_chebyshev1_fo_section_0_2 (
	.dataa (arg_c0),
	.datab (64'hBFF0000000000000),
	.clock (clk),
	.clk_en (altfp_chebyshev1_fo_section_0_2_en),
	.aeb (altfp_compare64_1_chebyshev1_fo_section_0_2_out),
	.aneb (chebyshev1_fo_section_0_2_unused),
	.alb (chebyshev1_fo_section_0_2_unused),
	.aleb (chebyshev1_fo_section_0_2_unused),
	.agb (chebyshev1_fo_section_0_2_unused),
	.ageb (chebyshev1_fo_section_0_2_unused),
	.unordered (chebyshev1_fo_section_0_2_unused)
);


// Local Rams


always @(posedge clk) begin
if (((cur_state == LEGUP_0) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_0;
if (reset == 1'b0 && ^(LEGUP_0) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_0) & (memory_controller_waitrequest == 1'd0)) & (start == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_0_1;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_0_1) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_0) & (memory_controller_waitrequest == 1'd0)) & (start == 1'd0)))
begin
cur_state <= LEGUP_0;
if (reset == 1'b0 && ^(LEGUP_0) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_0_1) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_0_1;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_0_1) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_0_1) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_0_2;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_0_2) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_0_2) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_0_2;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_0_2) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_chebyshev1_fo_section_BB_0_2) & (memory_controller_waitrequest == 1'd0)) & (chebyshev1_fo_section_0_or_cond == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_3;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_3) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_chebyshev1_fo_section_BB_0_2) & (memory_controller_waitrequest == 1'd0)) & (chebyshev1_fo_section_0_or_cond == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_161;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_161) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_3) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_3;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_3) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_3) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_4;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_4) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_4) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_4;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_4) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_4) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_5;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_5) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_5) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_5;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_5) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_5) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_6;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_6) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_6) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_6;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_6) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_6) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_7;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_7) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_7) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_7;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_7) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_7) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_8;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_8) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_8) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_8;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_8) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_8) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_9;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_9) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_9) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_9;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_9) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_9) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_10;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_10) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_10) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_10;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_10) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_10) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_11;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_11) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_11) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_11;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_11) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_11) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_12;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_12) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_12) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_12;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_12) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_12) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_13;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_13) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_13) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_13;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_13) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_13) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_14;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_14) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_14) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_14;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_14) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_14) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_15;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_15) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_15) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_15;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_15) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_15) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_16;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_16) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_16) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_16;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_16) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_16) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_17;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_17) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_17) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_17;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_17) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_17) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_18;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_18) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_18) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_18;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_18) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_18) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_19;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_19) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_19) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_19;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_19) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_19) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_20;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_20) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_20) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_20;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_20) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_20) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_21;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_21) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_21) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_21;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_21) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_21) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_22;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_22) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_22) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_22;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_22) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_22) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_23;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_23) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_23) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_23;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_23) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_23) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_24;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_24) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_24) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_24;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_24) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_24) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_25;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_25) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_25) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_25;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_25) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_25) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_26;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_26) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_26) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_26;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_26) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_26) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_27;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_27) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_27) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_27;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_27) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_27) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_28;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_28) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_28) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_28;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_28) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_28) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_29;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_29) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_29) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_29;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_29) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_29) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_30;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_30) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_30) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_30;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_30) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_30) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_31;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_31) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_31) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_31;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_31) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_31) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_32;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_32) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_32) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_32;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_32) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_32) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_33;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_33) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_33) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_33;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_33) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_33) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_34;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_34) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_34) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_34;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_34) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_34) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_35;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_35) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_35) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_35;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_35) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_35) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_36;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_36) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_36) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_36;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_36) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_36) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_37;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_37) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_37) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_37;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_37) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_37) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_38;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_38) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_38) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_38;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_38) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_38) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_39;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_39) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_39) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_39;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_39) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_39) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_40;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_40) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_40) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_40;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_40) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_40) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_41;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_41) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_41) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_41;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_41) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_41) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_42;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_42) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_42) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_42;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_42) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_42) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_43;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_43) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_43) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_43;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_43) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_43) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_44;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_44) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_44) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_44;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_44) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_44) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_45;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_45) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_45) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_45;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_45) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_45) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_46;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_46) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_46) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_46;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_46) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_46) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_47;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_47) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_47) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_47;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_47) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_47) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_48;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_48) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_48) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_48;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_48) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_48) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_49;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_49) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_49) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_49;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_49) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_49) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_50;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_50) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_50) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_50;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_50) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_50) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_51;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_51) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_51) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_51;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_51) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_51) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_52;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_52) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_52) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_52;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_52) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_52) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_53;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_53) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_53) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_53;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_53) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_53) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_54;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_54) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_54) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_54;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_54) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_54) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_55;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_55) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_55) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_55;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_55) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_55) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_56;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_56) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_56) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_56;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_56) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_56) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_57;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_57) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_57) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_57;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_57) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_57) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_58;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_58) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_58) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_58;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_58) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_58) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_59;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_59) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_59) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_59;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_59) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_59) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_60;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_60) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_60) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_60;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_60) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_60) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_61;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_61) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_61) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_61;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_61) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_61) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_62;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_62) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_62) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_62;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_62) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_62) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_63;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_63) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_63) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_63;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_63) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_63) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_64;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_64) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_64) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_64;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_64) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_64) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_65;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_65) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_65) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_65;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_65) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_65) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_66;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_66) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_66) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_66;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_66) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_66) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_67;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_67) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_67) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_67;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_67) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_67) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_68;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_68) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_68) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_68;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_68) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_68) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_69;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_69) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_69) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_69;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_69) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_69) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_70;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_70) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_70) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_70;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_70) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_70) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_71;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_71) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_71) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_71;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_71) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_71) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_72;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_72) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_72) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_72;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_72) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_72) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_73;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_73) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_73) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_73;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_73) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_73) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_74;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_74) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_74) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_74;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_74) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_74) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_75;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_75) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_75) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_75;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_75) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_75) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_76;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_76) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_76) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_76;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_76) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_76) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_77;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_77) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_77) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_77;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_77) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_77) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_78;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_78) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_78) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_78;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_78) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_78) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_79;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_79) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_79) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_79;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_79) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_79) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_80;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_80) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_80) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_80;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_80) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_80) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_81;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_81) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_81) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_81;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_81) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_81) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_82;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_82) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_82) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_82;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_82) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_82) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_83;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_83) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_83) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_83;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_83) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_83) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_84;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_84) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_84) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_84;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_84) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_84) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_85;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_85) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_85) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_85;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_85) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_85) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_86;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_86) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_86) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_86;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_86) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_86) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_87;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_87) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_87) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_87;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_87) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_87) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_88;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_88) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_88) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_88;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_88) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_88) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_89;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_89) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_89) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_89;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_89) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_89) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_90;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_90) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_90) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_90;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_90) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_90) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_91;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_91) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_91) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_91;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_91) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_91) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_92;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_92) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_92) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_92;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_92) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_92) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_93;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_93) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_93) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_93;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_93) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_93) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_94;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_94) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_94) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_94;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_94) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_94) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_95;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_95) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_95) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_95;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_95) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_95) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_96;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_96) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_96) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_96;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_96) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_96) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_97;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_97) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_97) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_97;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_97) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_97) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_98;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_98) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_98) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_98;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_98) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_98) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_99;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_99) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_99) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_99;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_99) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_99) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_100;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_100) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_100) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_100;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_100) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_100) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_101;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_101) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_101) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_101;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_101) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_101) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_102;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_102) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_102) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_102;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_102) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_102) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_103;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_103) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_103) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_103;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_103) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_103) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_104;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_104) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_104) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_104;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_104) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_104) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_105;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_105) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_105) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_105;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_105) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_105) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_106;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_106) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_106) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_106;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_106) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_106) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_107;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_107) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_107) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_107;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_107) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_107) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_108;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_108) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_108) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_108;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_108) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_108) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_109;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_109) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_109) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_109;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_109) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_109) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_110;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_110) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_110) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_110;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_110) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_110) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_111;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_111) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_111) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_111;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_111) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_111) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_112;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_112) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_112) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_112;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_112) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_112) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_113;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_113) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_113) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_113;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_113) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_113) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_114;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_114) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_114) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_114;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_114) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_114) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_115;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_115) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_115) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_115;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_115) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_115) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_116;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_116) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_116) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_116;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_116) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_116) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_117;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_117) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_117) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_117;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_117) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_117) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_118;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_118) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_118) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_118;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_118) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_118) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_119;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_119) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_119) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_119;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_119) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_119) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_120;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_120) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_120) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_120;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_120) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_120) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_121;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_121) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_121) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_121;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_121) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_121) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_122;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_122) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_122) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_122;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_122) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_122) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_123;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_123) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_123) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_123;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_123) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_123) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_124;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_124) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_124) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_124;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_124) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_124) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_125;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_125) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_125) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_125;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_125) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_125) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_126;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_126) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_126) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_126;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_126) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_126) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_127;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_127) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_127) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_127;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_127) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_127) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_128;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_128) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_128) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_128;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_128) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_128) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_129;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_129) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_129) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_129;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_129) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_129) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_130;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_130) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_130) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_130;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_130) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_130) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_131;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_131) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_131) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_131;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_131) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_131) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_132;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_132) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_132) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_132;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_132) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_132) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_133;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_133) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_133) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_133;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_133) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_133) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_134;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_134) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_134) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_134;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_134) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_134) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_135;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_135) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_135) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_135;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_135) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_135) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_136;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_136) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_136) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_136;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_136) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_136) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_137;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_137) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_137) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_137;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_137) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_137) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_138;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_138) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_138) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_138;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_138) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_138) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_139;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_139) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_139) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_139;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_139) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_139) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_140;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_140) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_140) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_140;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_140) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_140) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_141;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_141) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_141) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_141;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_141) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_141) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_142;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_142) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_142) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_142;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_142) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_142) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_143;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_143) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_143) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_143;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_143) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_143) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_144;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_144) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_144) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_144;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_144) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_144) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_145;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_145) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_145) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_145;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_145) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_145) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_146;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_146) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_146) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_146;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_146) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_146) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_147;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_147) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_147) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_147;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_147) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_147) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_148;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_148) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_148) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_148;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_148) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_148) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_149;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_149) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_149) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_149;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_149) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_149) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_150;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_150) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_150) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_150;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_150) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_150) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_151;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_151) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_151) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_151;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_151) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_151) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_152;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_152) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_152) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_152;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_152) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_152) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_153;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_153) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_153) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_153;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_153) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_153) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_154;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_154) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_154) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_154;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_154) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_154) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_155;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_155) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_155) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_155;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_155) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_155) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_156;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_156) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_156) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_156;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_156) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_156) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_157;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_157) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_157) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_157;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_157) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_157) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_158;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_158) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_158) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_158;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_158) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_158) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_159;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_159) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_159) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_159;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_159) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_159) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_160;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_160) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_160) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_3_160;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_3_160) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_160) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_122_327;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_122_327) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_161) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_161;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_161) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_161) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_162;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_162) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_162) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_162;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_162) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_162) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_163;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_163) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_163) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_163;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_163) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_163) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_164;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_164) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_164) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_164;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_164) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_164) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_165;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_165) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_165) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_165;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_165) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_165) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_166;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_166) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_166) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_166;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_166) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_166) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_167;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_167) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_167) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_167;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_167) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_167) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_168;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_168) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_168) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_168;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_168) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_168) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_169;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_169) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_169) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_169;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_169) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_169) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_170;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_170) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_170) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_170;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_170) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_170) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_171;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_171) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_171) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_171;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_171) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_171) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_172;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_172) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_172) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_172;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_172) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_172) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_173;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_173) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_173) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_173;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_173) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_173) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_174;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_174) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_174) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_174;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_174) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_174) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_175;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_175) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_175) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_175;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_175) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_175) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_176;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_176) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_176) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_176;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_176) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_176) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_177;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_177) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_177) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_177;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_177) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_177) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_178;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_178) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_178) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_178;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_178) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_178) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_179;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_179) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_179) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_179;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_179) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_179) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_180;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_180) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_180) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_180;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_180) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_180) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_181;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_181) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_181) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_181;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_181) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_181) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_182;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_182) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_182) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_182;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_182) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_182) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_183;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_183) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_183) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_183;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_183) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_183) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_184;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_184) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_184) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_184;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_184) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_184) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_185;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_185) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_185) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_185;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_185) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_185) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_186;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_186) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_186) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_186;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_186) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_186) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_187;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_187) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_187) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_187;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_187) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_187) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_188;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_188) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_188) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_188;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_188) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_188) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_189;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_189) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_189) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_189;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_189) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_189) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_190;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_190) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_190) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_190;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_190) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_190) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_191;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_191) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_191) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_191;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_191) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_191) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_192;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_192) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_192) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_192;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_192) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_192) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_193;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_193) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_193) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_193;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_193) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_193) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_194;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_194) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_194) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_194;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_194) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_194) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_195;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_195) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_195) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_195;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_195) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_195) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_196;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_196) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_196) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_196;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_196) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_196) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_197;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_197) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_197) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_197;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_197) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_197) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_198;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_198) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_198) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_198;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_198) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_198) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_199;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_199) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_199) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_199;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_199) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_199) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_200;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_200) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_200) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_200;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_200) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_200) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_201;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_201) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_201) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_201;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_201) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_201) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_202;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_202) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_202) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_202;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_202) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_202) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_203;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_203) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_203) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_203;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_203) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_203) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_204;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_204) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_204) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_204;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_204) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_204) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_205;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_205) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_205) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_205;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_205) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_205) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_206;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_206) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_206) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_206;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_206) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_206) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_207;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_207) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_207) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_207;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_207) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_207) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_208;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_208) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_208) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_208;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_208) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_208) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_209;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_209) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_209) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_209;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_209) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_209) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_210;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_210) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_210) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_210;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_210) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_210) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_211;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_211) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_211) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_211;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_211) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_211) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_212;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_212) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_212) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_212;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_212) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_212) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_213;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_213) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_213) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_213;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_213) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_213) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_214;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_214) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_214) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_214;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_214) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_214) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_215;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_215) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_215) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_215;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_215) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_215) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_216;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_216) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_216) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_216;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_216) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_216) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_217;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_217) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_217) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_217;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_217) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_217) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_218;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_218) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_218) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_218;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_218) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_218) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_219;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_219) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_219) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_219;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_219) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_219) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_220;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_220) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_220) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_220;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_220) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_220) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_221;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_221) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_221) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_221;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_221) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_221) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_222;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_222) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_222) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_222;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_222) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_222) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_223;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_223) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_223) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_223;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_223) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_223) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_224;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_224) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_224) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_224;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_224) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_224) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_225;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_225) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_225) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_225;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_225) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_225) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_226;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_226) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_226) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_226;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_226) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_226) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_227;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_227) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_227) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_227;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_227) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_227) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_228;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_228) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_228) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_228;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_228) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_228) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_229;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_229) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_229) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_229;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_229) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_229) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_230;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_230) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_230) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_230;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_230) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_230) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_231;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_231) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_231) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_231;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_231) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_231) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_232;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_232) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_232) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_232;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_232) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_232) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_233;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_233) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_233) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_233;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_233) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_233) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_234;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_234) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_234) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_234;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_234) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_234) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_235;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_235) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_235) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_235;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_235) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_235) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_236;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_236) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_236) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_236;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_236) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_236) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_237;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_237) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_237) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_237;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_237) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_237) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_238;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_238) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_238) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_238;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_238) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_238) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_239;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_239) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_239) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_239;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_239) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_239) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_240;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_240) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_240) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_240;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_240) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_240) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_241;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_241) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_241) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_241;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_241) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_241) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_242;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_242) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_242) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_242;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_242) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_242) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_243;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_243) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_243) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_243;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_243) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_243) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_244;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_244) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_244) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_244;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_244) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_244) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_245;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_245) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_245) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_245;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_245) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_245) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_246;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_246) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_246) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_246;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_246) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_246) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_247;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_247) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_247) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_247;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_247) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_247) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_248;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_248) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_248) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_248;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_248) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_248) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_249;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_249) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_249) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_249;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_249) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_249) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_250;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_250) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_250) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_250;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_250) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_250) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_251;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_251) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_251) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_251;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_251) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_251) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_252;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_252) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_252) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_252;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_252) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_252) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_253;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_253) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_253) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_253;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_253) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_253) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_254;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_254) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_254) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_254;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_254) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_254) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_255;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_255) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_255) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_255;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_255) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_255) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_256;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_256) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_256) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_256;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_256) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_256) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_257;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_257) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_257) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_257;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_257) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_257) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_258;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_258) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_258) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_258;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_258) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_258) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_259;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_259) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_259) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_259;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_259) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_259) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_260;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_260) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_260) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_260;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_260) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_260) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_261;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_261) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_261) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_261;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_261) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_261) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_262;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_262) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_262) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_262;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_262) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_262) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_263;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_263) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_263) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_263;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_263) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_263) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_264;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_264) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_264) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_264;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_264) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_264) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_265;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_265) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_265) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_265;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_265) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_265) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_266;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_266) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_266) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_266;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_266) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_266) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_267;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_267) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_267) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_267;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_267) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_267) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_268;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_268) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_268) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_268;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_268) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_268) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_269;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_269) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_269) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_269;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_269) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_269) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_270;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_270) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_270) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_270;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_270) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_270) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_271;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_271) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_271) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_271;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_271) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_271) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_272;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_272) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_272) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_272;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_272) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_272) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_273;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_273) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_273) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_273;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_273) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_273) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_274;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_274) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_274) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_274;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_274) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_274) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_275;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_275) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_275) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_275;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_275) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_275) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_276;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_276) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_276) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_276;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_276) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_276) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_277;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_277) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_277) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_277;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_277) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_277) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_278;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_278) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_278) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_278;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_278) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_278) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_279;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_279) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_279) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_279;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_279) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_279) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_280;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_280) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_280) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_280;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_280) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_280) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_281;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_281) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_281) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_281;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_281) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_281) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_282;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_282) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_282) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_282;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_282) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_282) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_283;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_283) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_283) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_283;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_283) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_283) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_284;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_284) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_284) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_284;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_284) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_284) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_285;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_285) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_285) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_285;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_285) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_285) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_286;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_286) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_286) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_286;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_286) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_286) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_287;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_287) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_287) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_287;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_287) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_287) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_288;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_288) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_288) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_288;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_288) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_288) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_289;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_289) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_289) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_289;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_289) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_289) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_290;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_290) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_290) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_290;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_290) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_290) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_291;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_291) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_291) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_291;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_291) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_291) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_292;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_292) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_292) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_292;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_292) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_292) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_293;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_293) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_293) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_293;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_293) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_293) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_294;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_294) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_294) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_294;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_294) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_294) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_295;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_295) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_295) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_295;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_295) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_295) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_296;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_296) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_296) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_296;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_296) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_296) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_297;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_297) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_297) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_297;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_297) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_297) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_298;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_298) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_298) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_298;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_298) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_298) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_299;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_299) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_299) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_299;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_299) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_299) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_300;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_300) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_300) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_300;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_300) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_300) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_301;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_301) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_301) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_301;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_301) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_301) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_302;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_302) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_302) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_302;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_302) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_302) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_303;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_303) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_303) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_303;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_303) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_303) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_304;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_304) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_304) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_304;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_304) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_304) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_305;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_305) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_305) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_305;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_305) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_305) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_306;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_306) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_306) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_306;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_306) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_306) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_307;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_307) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_307) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_307;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_307) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_307) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_308;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_308) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_308) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_308;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_308) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_308) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_309;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_309) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_309) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_309;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_309) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_309) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_310;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_310) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_310) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_310;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_310) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_310) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_311;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_311) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_311) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_311;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_311) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_311) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_312;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_312) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_312) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_312;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_312) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_312) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_313;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_313) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_313) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_313;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_313) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_313) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_314;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_314) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_314) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_314;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_314) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_314) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_315;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_315) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_315) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_315;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_315) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_315) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_316;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_316) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_316) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_316;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_316) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_316) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_317;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_317) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_317) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_317;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_317) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_317) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_318;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_318) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_318) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_318;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_318) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_318) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_319;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_319) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_319) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_319;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_319) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_319) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_320;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_320) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_320) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_320;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_320) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_320) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_321;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_321) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_321) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_321;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_321) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_321) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_322;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_322) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_322) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_322;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_322) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_322) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_323;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_323) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_323) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_323;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_323) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_323) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_324;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_324) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_324) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_324;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_324) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_324) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_325;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_325) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_325) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_325;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_325) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_325) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_326;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_326) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_326) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_51_326;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_51_326) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_326) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_122_327;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_122_327) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_122_327) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev1_fo_section_BB_122_327;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev1_fo_section_BB_122_327) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev1_fo_section_BB_122_327) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_0;
if (reset == 1'b0 && ^(LEGUP_0) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((reset == 1'd1))
begin
cur_state <= 9'd0;
if (reset == 1'b0 && ^(9'd0) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
end
always @(*) begin
chebyshev1_fo_section_0_1 = altfp_compare64_1_chebyshev1_fo_section_0_1_out;
end
always @(posedge clk) begin
/* chebyshev1_fo_section: %0*/
/*   %1 = fcmp oeq double %c0, 1.000000e+00*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_0_2))
begin
chebyshev1_fo_section_0_1_reg <= chebyshev1_fo_section_0_1;
if (reset == 1'b0 && ^(chebyshev1_fo_section_0_1) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev1_fo_section_0_1_reg"); $finish; end
end
/* chebyshev1_fo_section: %0*/
/*   %1 = fcmp oeq double %c0, 1.000000e+00*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_0_2))
begin
chebyshev1_fo_section_0_1_reg <= chebyshev1_fo_section_0_1;
if (reset == 1'b0 && ^(chebyshev1_fo_section_0_1) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev1_fo_section_0_1_reg"); $finish; end
end
end
always @(*) begin
chebyshev1_fo_section_0_2 = altfp_compare64_1_chebyshev1_fo_section_0_2_out;
end
always @(posedge clk) begin
/* chebyshev1_fo_section: %0*/
/*   %2 = fcmp oeq double %c0, -1.000000e+00*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_0_2))
begin
chebyshev1_fo_section_0_2_reg <= chebyshev1_fo_section_0_2;
if (reset == 1'b0 && ^(chebyshev1_fo_section_0_2) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev1_fo_section_0_2_reg"); $finish; end
end
/* chebyshev1_fo_section: %0*/
/*   %2 = fcmp oeq double %c0, -1.000000e+00*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_0_2))
begin
chebyshev1_fo_section_0_2_reg <= chebyshev1_fo_section_0_2;
if (reset == 1'b0 && ^(chebyshev1_fo_section_0_2) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev1_fo_section_0_2_reg"); $finish; end
end
end
always @(*) begin
/* chebyshev1_fo_section: %0*/
/*   %or.cond = or i1 %1, %2*/
begin
chebyshev1_fo_section_0_or_cond = (chebyshev1_fo_section_0_1 | chebyshev1_fo_section_0_2);
end
end
always @(posedge clk) begin
/* chebyshev1_fo_section: %0*/
/*   %or.cond = or i1 %1, %2*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_0_2))
begin
chebyshev1_fo_section_0_or_cond_reg <= chebyshev1_fo_section_0_or_cond;
if (reset == 1'b0 && ^(chebyshev1_fo_section_0_or_cond) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev1_fo_section_0_or_cond_reg"); $finish; end
end
end
always @(*) begin
chebyshev1_fo_section_3_4 = chebyshev1_fo_section_altfp_multiply_64_0;
end
always @(posedge clk) begin
/* chebyshev1_fo_section: %3*/
/*   %4 = fmul double %tetta_b, %tetta_b*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_14))
begin
chebyshev1_fo_section_3_4_reg <= chebyshev1_fo_section_3_4;
if (reset == 1'b0 && ^(chebyshev1_fo_section_3_4) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev1_fo_section_3_4_reg"); $finish; end
end
/* chebyshev1_fo_section: %3*/
/*   %4 = fmul double %tetta_b, %tetta_b*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_14))
begin
chebyshev1_fo_section_3_4_reg <= chebyshev1_fo_section_3_4;
if (reset == 1'b0 && ^(chebyshev1_fo_section_3_4) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev1_fo_section_3_4_reg"); $finish; end
end
/* chebyshev1_fo_section: %51*/
/*   %115 = fmul double %a, 2.000000e+00*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_181))
begin
chebyshev1_fo_section_3_4_reg <= chebyshev1_fo_section_51_115;
if (reset == 1'b0 && ^(chebyshev1_fo_section_51_115) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev1_fo_section_3_4_reg"); $finish; end
end
/* chebyshev1_fo_section: %51*/
/*   %58 = fmul double %57, %tetta_b*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_231))
begin
chebyshev1_fo_section_3_4_reg <= chebyshev1_fo_section_51_58;
if (reset == 1'b0 && ^(chebyshev1_fo_section_51_58) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev1_fo_section_3_4_reg"); $finish; end
end
/* chebyshev1_fo_section: %51*/
/*   %97 = fmul double %67, %96*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_251))
begin
chebyshev1_fo_section_3_4_reg <= chebyshev1_fo_section_51_97;
if (reset == 1'b0 && ^(chebyshev1_fo_section_51_97) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev1_fo_section_3_4_reg"); $finish; end
end
end
always @(*) begin
chebyshev1_fo_section_3_5 = chebyshev1_fo_section_altfp_multiply_64_0;
end
always @(posedge clk) begin
/* chebyshev1_fo_section: %3*/
/*   %5 = fmul double %b, %b*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_15))
begin
chebyshev1_fo_section_3_5_reg <= chebyshev1_fo_section_3_5;
if (reset == 1'b0 && ^(chebyshev1_fo_section_3_5) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev1_fo_section_3_5_reg"); $finish; end
end
/* chebyshev1_fo_section: %3*/
/*   %5 = fmul double %b, %b*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_15))
begin
chebyshev1_fo_section_3_5_reg <= chebyshev1_fo_section_3_5;
if (reset == 1'b0 && ^(chebyshev1_fo_section_3_5) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev1_fo_section_3_5_reg"); $finish; end
end
/* chebyshev1_fo_section: %3*/
/*   %44 = fmul double %43, %tetta_b*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_66))
begin
chebyshev1_fo_section_3_5_reg <= chebyshev1_fo_section_3_44;
if (reset == 1'b0 && ^(chebyshev1_fo_section_3_44) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev1_fo_section_3_5_reg"); $finish; end
end
/* chebyshev1_fo_section: %51*/
/*   %67 = fmul double %c0, -4.000000e+00*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_175))
begin
chebyshev1_fo_section_3_5_reg <= chebyshev1_fo_section_51_67;
if (reset == 1'b0 && ^(chebyshev1_fo_section_51_67) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev1_fo_section_3_5_reg"); $finish; end
end
/* chebyshev1_fo_section: %51*/
/*   %81 = fmul double %80, 2.000000e+00*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_260))
begin
chebyshev1_fo_section_3_5_reg <= chebyshev1_fo_section_51_81;
if (reset == 1'b0 && ^(chebyshev1_fo_section_51_81) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev1_fo_section_3_5_reg"); $finish; end
end
end
always @(*) begin
chebyshev1_fo_section_3_6 = chebyshev1_fo_section_altfp_multiply_64_0;
end
always @(posedge clk) begin
/* chebyshev1_fo_section: %3*/
/*   %6 = fmul double %g0, %g0*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_16))
begin
chebyshev1_fo_section_3_6_reg <= chebyshev1_fo_section_3_6;
if (reset == 1'b0 && ^(chebyshev1_fo_section_3_6) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev1_fo_section_3_6_reg"); $finish; end
end
/* chebyshev1_fo_section: %3*/
/*   %6 = fmul double %g0, %g0*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_16))
begin
chebyshev1_fo_section_3_6_reg <= chebyshev1_fo_section_3_6;
if (reset == 1'b0 && ^(chebyshev1_fo_section_3_6) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev1_fo_section_3_6_reg"); $finish; end
end
/* chebyshev1_fo_section: %51*/
/*   %70 = fmul double %69, %tetta_b*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_224))
begin
chebyshev1_fo_section_3_6_reg <= chebyshev1_fo_section_51_70;
if (reset == 1'b0 && ^(chebyshev1_fo_section_51_70) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev1_fo_section_3_6_reg"); $finish; end
end
/* chebyshev1_fo_section: %51*/
/*   %102 = fmul double %c, %c*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_180))
begin
chebyshev1_fo_section_3_6_reg <= chebyshev1_fo_section_51_102;
if (reset == 1'b0 && ^(chebyshev1_fo_section_51_102) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev1_fo_section_3_6_reg"); $finish; end
end
/* chebyshev1_fo_section: %51*/
/*   %72 = fmul double %67, %71*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_249))
begin
chebyshev1_fo_section_3_6_reg <= chebyshev1_fo_section_51_72;
if (reset == 1'b0 && ^(chebyshev1_fo_section_51_72) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev1_fo_section_3_6_reg"); $finish; end
end
end
always @(*) begin
chebyshev1_fo_section_3_7 = chebyshev1_fo_section_altfp_multiply_64_0;
end
always @(*) begin
/* chebyshev1_fo_section: %3*/
/*   %7 = fmul double %6, %c*/
chebyshev1_fo_section_3_7_reg = chebyshev1_fo_section_3_13_reg;
end
always @(*) begin
chebyshev1_fo_section_3_8 = chebyshev1_fo_section_altfp_multiply_64_0;
end
always @(posedge clk) begin
/* chebyshev1_fo_section: %3*/
/*   %8 = fmul double %7, %c*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_38))
begin
chebyshev1_fo_section_3_8_reg <= chebyshev1_fo_section_3_8;
if (reset == 1'b0 && ^(chebyshev1_fo_section_3_8) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev1_fo_section_3_8_reg"); $finish; end
end
/* chebyshev1_fo_section: %3*/
/*   %8 = fmul double %7, %c*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_38))
begin
chebyshev1_fo_section_3_8_reg <= chebyshev1_fo_section_3_8;
if (reset == 1'b0 && ^(chebyshev1_fo_section_3_8) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev1_fo_section_3_8_reg"); $finish; end
end
/* chebyshev1_fo_section: %3*/
/*   %10 = fmul double %4, %9*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_63))
begin
chebyshev1_fo_section_3_8_reg <= chebyshev1_fo_section_3_10;
if (reset == 1'b0 && ^(chebyshev1_fo_section_3_10) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev1_fo_section_3_8_reg"); $finish; end
end
/* chebyshev1_fo_section: %3*/
/*   %11 = fmul double %g0, 2.000000e+00*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_17))
begin
chebyshev1_fo_section_3_8_reg <= chebyshev1_fo_section_3_11;
if (reset == 1'b0 && ^(chebyshev1_fo_section_3_11) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev1_fo_section_3_8_reg"); $finish; end
end
/* chebyshev1_fo_section: %51*/
/*   %104 = fmul double %103, %tetta_b*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_222))
begin
chebyshev1_fo_section_3_8_reg <= chebyshev1_fo_section_51_104;
if (reset == 1'b0 && ^(chebyshev1_fo_section_51_104) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev1_fo_section_3_8_reg"); $finish; end
end
/* chebyshev1_fo_section: %51*/
/*   %117 = fmul double %116, %tetta_b*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_234))
begin
chebyshev1_fo_section_3_8_reg <= chebyshev1_fo_section_51_117;
if (reset == 1'b0 && ^(chebyshev1_fo_section_51_117) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev1_fo_section_3_8_reg"); $finish; end
end
/* chebyshev1_fo_section: %51*/
/*   %52 = fmul double %b, %b*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_172))
begin
chebyshev1_fo_section_3_8_reg <= chebyshev1_fo_section_51_52;
if (reset == 1'b0 && ^(chebyshev1_fo_section_51_52) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev1_fo_section_3_8_reg"); $finish; end
end
/* chebyshev1_fo_section: %51*/
/*   %85 = fmul double %67, %84*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_250))
begin
chebyshev1_fo_section_3_8_reg <= chebyshev1_fo_section_51_85;
if (reset == 1'b0 && ^(chebyshev1_fo_section_51_85) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev1_fo_section_3_8_reg"); $finish; end
end
end
always @(*) begin
chebyshev1_fo_section_3_9 = chebyshev1_fo_section_altfp_add_64_0;
end
always @(*) begin
/* chebyshev1_fo_section: %3*/
/*   %9 = fadd double %5, %8*/
chebyshev1_fo_section_3_9_reg = chebyshev1_fo_section_3_16_reg;
end
always @(*) begin
chebyshev1_fo_section_3_10 = chebyshev1_fo_section_altfp_multiply_64_0;
end
always @(*) begin
/* chebyshev1_fo_section: %3*/
/*   %10 = fmul double %4, %9*/
chebyshev1_fo_section_3_10_reg = chebyshev1_fo_section_3_8_reg;
end
always @(*) begin
chebyshev1_fo_section_3_11 = chebyshev1_fo_section_altfp_multiply_64_0;
end
always @(*) begin
/* chebyshev1_fo_section: %3*/
/*   %11 = fmul double %g0, 2.000000e+00*/
chebyshev1_fo_section_3_11_reg = chebyshev1_fo_section_3_8_reg;
end
always @(*) begin
chebyshev1_fo_section_3_12 = chebyshev1_fo_section_altfp_multiply_64_0;
end
always @(posedge clk) begin
/* chebyshev1_fo_section: %3*/
/*   %12 = fmul double %11, %b*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_28))
begin
chebyshev1_fo_section_3_12_reg <= chebyshev1_fo_section_3_12;
if (reset == 1'b0 && ^(chebyshev1_fo_section_3_12) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev1_fo_section_3_12_reg"); $finish; end
end
/* chebyshev1_fo_section: %3*/
/*   %12 = fmul double %11, %b*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_28))
begin
chebyshev1_fo_section_3_12_reg <= chebyshev1_fo_section_3_12;
if (reset == 1'b0 && ^(chebyshev1_fo_section_3_12) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev1_fo_section_3_12_reg"); $finish; end
end
/* chebyshev1_fo_section: %3*/
/*   %14 = fmul double %13, %tetta_b*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_50))
begin
chebyshev1_fo_section_3_12_reg <= chebyshev1_fo_section_3_14;
if (reset == 1'b0 && ^(chebyshev1_fo_section_3_14) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev1_fo_section_3_12_reg"); $finish; end
end
/* chebyshev1_fo_section: %3*/
/*   %38 = fmul double %20, %37*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_89))
begin
chebyshev1_fo_section_3_12_reg <= chebyshev1_fo_section_3_38;
if (reset == 1'b0 && ^(chebyshev1_fo_section_3_38) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev1_fo_section_3_12_reg"); $finish; end
end
/* chebyshev1_fo_section: %51*/
/*   %61 = fmul double %60, %si*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_221))
begin
chebyshev1_fo_section_3_12_reg <= chebyshev1_fo_section_51_61;
if (reset == 1'b0 && ^(chebyshev1_fo_section_51_61) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev1_fo_section_3_12_reg"); $finish; end
end
/* chebyshev1_fo_section: %51*/
/*   %68 = fmul double %g0, %b*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_176))
begin
chebyshev1_fo_section_3_12_reg <= chebyshev1_fo_section_51_68;
if (reset == 1'b0 && ^(chebyshev1_fo_section_51_68) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev1_fo_section_3_12_reg"); $finish; end
end
/* chebyshev1_fo_section: %51*/
/*   %105 = fmul double %104, %tetta_b*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_233))
begin
chebyshev1_fo_section_3_12_reg <= chebyshev1_fo_section_51_105;
if (reset == 1'b0 && ^(chebyshev1_fo_section_51_105) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev1_fo_section_3_12_reg"); $finish; end
end
/* chebyshev1_fo_section: %51*/
/*   %107 = fmul double %106, 2.000000e+00*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_261))
begin
chebyshev1_fo_section_3_12_reg <= chebyshev1_fo_section_51_107;
if (reset == 1'b0 && ^(chebyshev1_fo_section_51_107) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev1_fo_section_3_12_reg"); $finish; end
end
end
always @(*) begin
chebyshev1_fo_section_3_13 = chebyshev1_fo_section_altfp_multiply_64_0;
end
always @(posedge clk) begin
/* chebyshev1_fo_section: %3*/
/*   %13 = fmul double %12, %si*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_39))
begin
chebyshev1_fo_section_3_13_reg <= chebyshev1_fo_section_3_13;
if (reset == 1'b0 && ^(chebyshev1_fo_section_3_13) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev1_fo_section_3_13_reg"); $finish; end
end
/* chebyshev1_fo_section: %3*/
/*   %13 = fmul double %12, %si*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_39))
begin
chebyshev1_fo_section_3_13_reg <= chebyshev1_fo_section_3_13;
if (reset == 1'b0 && ^(chebyshev1_fo_section_3_13) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev1_fo_section_3_13_reg"); $finish; end
end
/* chebyshev1_fo_section: %3*/
/*   %15 = fmul double %14, %tetta_b*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_65))
begin
chebyshev1_fo_section_3_13_reg <= chebyshev1_fo_section_3_15;
if (reset == 1'b0 && ^(chebyshev1_fo_section_3_15) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev1_fo_section_3_13_reg"); $finish; end
end
/* chebyshev1_fo_section: %3*/
/*   %7 = fmul double %6, %c*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_27))
begin
chebyshev1_fo_section_3_13_reg <= chebyshev1_fo_section_3_7;
if (reset == 1'b0 && ^(chebyshev1_fo_section_3_7) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev1_fo_section_3_13_reg"); $finish; end
end
/* chebyshev1_fo_section: %51*/
/*   %62 = fmul double %61, %tetta_b*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_232))
begin
chebyshev1_fo_section_3_13_reg <= chebyshev1_fo_section_51_62;
if (reset == 1'b0 && ^(chebyshev1_fo_section_51_62) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev1_fo_section_3_13_reg"); $finish; end
end
/* chebyshev1_fo_section: %51*/
/*   %69 = fmul double %68, %si*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_198))
begin
chebyshev1_fo_section_3_13_reg <= chebyshev1_fo_section_51_69;
if (reset == 1'b0 && ^(chebyshev1_fo_section_51_69) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev1_fo_section_3_13_reg"); $finish; end
end
/* chebyshev1_fo_section: %3*/
/*   %22 = fmul double %20, %21*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_88))
begin
chebyshev1_fo_section_3_13_reg <= chebyshev1_fo_section_3_22;
if (reset == 1'b0 && ^(chebyshev1_fo_section_3_22) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev1_fo_section_3_13_reg"); $finish; end
end
/* chebyshev1_fo_section: %51*/
/*   %111 = fmul double %67, %110*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_252))
begin
chebyshev1_fo_section_3_13_reg <= chebyshev1_fo_section_51_111;
if (reset == 1'b0 && ^(chebyshev1_fo_section_51_111) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev1_fo_section_3_13_reg"); $finish; end
end
/* chebyshev1_fo_section: %51*/
/*   %54 = fmul double %53, %c*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_184))
begin
chebyshev1_fo_section_3_13_reg <= chebyshev1_fo_section_51_54;
if (reset == 1'b0 && ^(chebyshev1_fo_section_51_54) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev1_fo_section_3_13_reg"); $finish; end
end
end
always @(*) begin
chebyshev1_fo_section_3_14 = chebyshev1_fo_section_altfp_multiply_64_0;
end
always @(*) begin
/* chebyshev1_fo_section: %3*/
/*   %14 = fmul double %13, %tetta_b*/
chebyshev1_fo_section_3_14_reg = chebyshev1_fo_section_3_12_reg;
end
always @(*) begin
chebyshev1_fo_section_3_15 = chebyshev1_fo_section_altfp_multiply_64_0;
end
always @(*) begin
/* chebyshev1_fo_section: %3*/
/*   %15 = fmul double %14, %tetta_b*/
chebyshev1_fo_section_3_15_reg = chebyshev1_fo_section_3_13_reg;
end
always @(*) begin
chebyshev1_fo_section_3_16 = chebyshev1_fo_section_altfp_add_64_0;
end
always @(posedge clk) begin
/* chebyshev1_fo_section: %3*/
/*   %16 = fadd double %10, %15*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_79))
begin
chebyshev1_fo_section_3_16_reg <= chebyshev1_fo_section_3_16;
if (reset == 1'b0 && ^(chebyshev1_fo_section_3_16) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev1_fo_section_3_16_reg"); $finish; end
end
/* chebyshev1_fo_section: %3*/
/*   %16 = fadd double %10, %15*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_79))
begin
chebyshev1_fo_section_3_16_reg <= chebyshev1_fo_section_3_16;
if (reset == 1'b0 && ^(chebyshev1_fo_section_3_16) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev1_fo_section_3_16_reg"); $finish; end
end
/* chebyshev1_fo_section: %3*/
/*   %9 = fadd double %5, %8*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_52))
begin
chebyshev1_fo_section_3_16_reg <= chebyshev1_fo_section_3_9;
if (reset == 1'b0 && ^(chebyshev1_fo_section_3_9) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev1_fo_section_3_16_reg"); $finish; end
end
/* chebyshev1_fo_section: %51*/
/*   %63 = fadd double %58, %62*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_246))
begin
chebyshev1_fo_section_3_16_reg <= chebyshev1_fo_section_51_63;
if (reset == 1'b0 && ^(chebyshev1_fo_section_51_63) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev1_fo_section_3_16_reg"); $finish; end
end
/* chebyshev1_fo_section: %3*/
/*   %27 = fadd double %26, %6*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_94))
begin
chebyshev1_fo_section_3_16_reg <= chebyshev1_fo_section_3_27;
if (reset == 1'b0 && ^(chebyshev1_fo_section_3_27) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev1_fo_section_3_16_reg"); $finish; end
end
/* chebyshev1_fo_section: %51*/
/*   %103 = fadd double %101, %102*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_210))
begin
chebyshev1_fo_section_3_16_reg <= chebyshev1_fo_section_51_103;
if (reset == 1'b0 && ^(chebyshev1_fo_section_51_103) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev1_fo_section_3_16_reg"); $finish; end
end
/* chebyshev1_fo_section: %51*/
/*   %119 = fadd double %118, 1.000000e+00*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_262))
begin
chebyshev1_fo_section_3_16_reg <= chebyshev1_fo_section_51_119;
if (reset == 1'b0 && ^(chebyshev1_fo_section_51_119) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev1_fo_section_3_16_reg"); $finish; end
end
end
always @(*) begin
chebyshev1_fo_section_3_17 = chebyshev1_fo_section_altfp_add_64_0;
end
always @(posedge clk) begin
/* chebyshev1_fo_section: %3*/
/*   %17 = fadd double %16, %6*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_93))
begin
chebyshev1_fo_section_3_17_reg <= chebyshev1_fo_section_3_17;
if (reset == 1'b0 && ^(chebyshev1_fo_section_3_17) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev1_fo_section_3_17_reg"); $finish; end
end
/* chebyshev1_fo_section: %3*/
/*   %17 = fadd double %16, %6*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_93))
begin
chebyshev1_fo_section_3_17_reg <= chebyshev1_fo_section_3_17;
if (reset == 1'b0 && ^(chebyshev1_fo_section_3_17) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev1_fo_section_3_17_reg"); $finish; end
end
/* chebyshev1_fo_section: %3*/
/*   %37 = fadd double %36, -1.000000e+00*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_78))
begin
chebyshev1_fo_section_3_17_reg <= chebyshev1_fo_section_3_37;
if (reset == 1'b0 && ^(chebyshev1_fo_section_3_37) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev1_fo_section_3_17_reg"); $finish; end
end
/* chebyshev1_fo_section: %51*/
/*   %64 = fadd double %63, %53*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_260))
begin
chebyshev1_fo_section_3_17_reg <= chebyshev1_fo_section_51_64;
if (reset == 1'b0 && ^(chebyshev1_fo_section_51_64) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev1_fo_section_3_17_reg"); $finish; end
end
/* chebyshev1_fo_section: %51*/
/*   %71 = fadd double %53, %70*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_238))
begin
chebyshev1_fo_section_3_17_reg <= chebyshev1_fo_section_51_71;
if (reset == 1'b0 && ^(chebyshev1_fo_section_51_71) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev1_fo_section_3_17_reg"); $finish; end
end
/* chebyshev1_fo_section: %3*/
/*   %35 = fadd double %33, %34*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_53))
begin
chebyshev1_fo_section_3_17_reg <= chebyshev1_fo_section_3_35;
if (reset == 1'b0 && ^(chebyshev1_fo_section_3_35) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev1_fo_section_3_17_reg"); $finish; end
end
/* chebyshev1_fo_section: %51*/
/*   %56 = fadd double %52, %55*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_209))
begin
chebyshev1_fo_section_3_17_reg <= chebyshev1_fo_section_51_56;
if (reset == 1'b0 && ^(chebyshev1_fo_section_51_56) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev1_fo_section_3_17_reg"); $finish; end
end
end
always @(*) begin
chebyshev1_fo_section_3_18 = chebyshev1_fo_section_altfp_divide_64_0;
end
always @(posedge clk) begin
/* chebyshev1_fo_section: %3*/
/*   %18 = fdiv double %17, %D*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_154))
begin
chebyshev1_fo_section_3_18_reg <= chebyshev1_fo_section_3_18;
if (reset == 1'b0 && ^(chebyshev1_fo_section_3_18) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev1_fo_section_3_18_reg"); $finish; end
end
/* chebyshev1_fo_section: %3*/
/*   %18 = fdiv double %17, %D*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_154))
begin
chebyshev1_fo_section_3_18_reg <= chebyshev1_fo_section_3_18;
if (reset == 1'b0 && ^(chebyshev1_fo_section_3_18) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev1_fo_section_3_18_reg"); $finish; end
end
/* chebyshev1_fo_section: %51*/
/*   %65 = fdiv double %64, %D*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_321))
begin
chebyshev1_fo_section_3_18_reg <= chebyshev1_fo_section_51_65;
if (reset == 1'b0 && ^(chebyshev1_fo_section_51_65) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev1_fo_section_3_18_reg"); $finish; end
end
/* chebyshev1_fo_section: %51*/
/*   %108 = fdiv double %107, %D*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_324))
begin
chebyshev1_fo_section_3_18_reg <= chebyshev1_fo_section_51_108;
if (reset == 1'b0 && ^(chebyshev1_fo_section_51_108) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev1_fo_section_3_18_reg"); $finish; end
end
/* chebyshev1_fo_section: %51*/
/*   %112 = fdiv double %111, %D*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_313))
begin
chebyshev1_fo_section_3_18_reg <= chebyshev1_fo_section_51_112;
if (reset == 1'b0 && ^(chebyshev1_fo_section_51_112) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev1_fo_section_3_18_reg"); $finish; end
end
/* chebyshev1_fo_section: %3*/
/*   %47 = fdiv double %46, %D*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_156))
begin
chebyshev1_fo_section_3_18_reg <= chebyshev1_fo_section_3_47;
if (reset == 1'b0 && ^(chebyshev1_fo_section_3_47) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev1_fo_section_3_18_reg"); $finish; end
end
end
always @(*) begin
/* chebyshev1_fo_section: %3*/
/*   %19 = getelementptr inbounds %struct.TYPE_3__* %S, i32 0, i32 0*/
begin
chebyshev1_fo_section_3_19 = arg_S;
end
end
always @(posedge clk) begin
/* chebyshev1_fo_section: %3*/
/*   %19 = getelementptr inbounds %struct.TYPE_3__* %S, i32 0, i32 0*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_3))
begin
chebyshev1_fo_section_3_19_reg <= chebyshev1_fo_section_3_19;
if (reset == 1'b0 && ^(chebyshev1_fo_section_3_19) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev1_fo_section_3_19_reg"); $finish; end
end
end
always @(*) begin
chebyshev1_fo_section_3_20 = chebyshev1_fo_section_altfp_multiply_64_0;
end
always @(posedge clk) begin
/* chebyshev1_fo_section: %3*/
/*   %20 = fmul double %c0, 2.000000e+00*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_18))
begin
chebyshev1_fo_section_3_20_reg <= chebyshev1_fo_section_3_20;
if (reset == 1'b0 && ^(chebyshev1_fo_section_3_20) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev1_fo_section_3_20_reg"); $finish; end
end
/* chebyshev1_fo_section: %3*/
/*   %20 = fmul double %c0, 2.000000e+00*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_18))
begin
chebyshev1_fo_section_3_20_reg <= chebyshev1_fo_section_3_20;
if (reset == 1'b0 && ^(chebyshev1_fo_section_3_20) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev1_fo_section_3_20_reg"); $finish; end
end
/* chebyshev1_fo_section: %51*/
/*   %57 = fmul double %56, %tetta_b*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_220))
begin
chebyshev1_fo_section_3_20_reg <= chebyshev1_fo_section_51_57;
if (reset == 1'b0 && ^(chebyshev1_fo_section_51_57) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev1_fo_section_3_20_reg"); $finish; end
end
/* chebyshev1_fo_section: %51*/
/*   %59 = fmul double %g0, 2.000000e+00*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_174))
begin
chebyshev1_fo_section_3_20_reg <= chebyshev1_fo_section_51_59;
if (reset == 1'b0 && ^(chebyshev1_fo_section_51_59) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev1_fo_section_3_20_reg"); $finish; end
end
/* chebyshev1_fo_section: %51*/
/*   %77 = fmul double %76, %c0*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_197))
begin
chebyshev1_fo_section_3_20_reg <= chebyshev1_fo_section_51_77;
if (reset == 1'b0 && ^(chebyshev1_fo_section_51_77) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev1_fo_section_3_20_reg"); $finish; end
end
end
always @(*) begin
chebyshev1_fo_section_3_21 = chebyshev1_fo_section_altfp_subtract_64_0;
end
always @(posedge clk) begin
/* chebyshev1_fo_section: %3*/
/*   %21 = fsub double %10, %6*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_77))
begin
chebyshev1_fo_section_3_21_reg <= chebyshev1_fo_section_3_21;
if (reset == 1'b0 && ^(chebyshev1_fo_section_3_21) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev1_fo_section_3_21_reg"); $finish; end
end
/* chebyshev1_fo_section: %3*/
/*   %21 = fsub double %10, %6*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_77))
begin
chebyshev1_fo_section_3_21_reg <= chebyshev1_fo_section_3_21;
if (reset == 1'b0 && ^(chebyshev1_fo_section_3_21) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev1_fo_section_3_21_reg"); $finish; end
end
/* chebyshev1_fo_section: %51*/
/*   %106 = fsub double %78, %105*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_250))
begin
chebyshev1_fo_section_3_21_reg <= chebyshev1_fo_section_51_106;
if (reset == 1'b0 && ^(chebyshev1_fo_section_51_106) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev1_fo_section_3_21_reg"); $finish; end
end
end
always @(*) begin
chebyshev1_fo_section_3_22 = chebyshev1_fo_section_altfp_multiply_64_0;
end
always @(*) begin
/* chebyshev1_fo_section: %3*/
/*   %22 = fmul double %20, %21*/
chebyshev1_fo_section_3_22_reg = chebyshev1_fo_section_3_13_reg;
end
always @(*) begin
chebyshev1_fo_section_3_23 = chebyshev1_fo_section_altfp_divide_64_0;
end
always @(posedge clk) begin
/* chebyshev1_fo_section: %3*/
/*   %23 = fdiv double %22, %D*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_149))
begin
chebyshev1_fo_section_3_23_reg <= chebyshev1_fo_section_3_23;
if (reset == 1'b0 && ^(chebyshev1_fo_section_3_23) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev1_fo_section_3_23_reg"); $finish; end
end
/* chebyshev1_fo_section: %3*/
/*   %23 = fdiv double %22, %D*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_149))
begin
chebyshev1_fo_section_3_23_reg <= chebyshev1_fo_section_3_23;
if (reset == 1'b0 && ^(chebyshev1_fo_section_3_23) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev1_fo_section_3_23_reg"); $finish; end
end
/* chebyshev1_fo_section: %51*/
/*   %86 = fdiv double %85, %D*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_311))
begin
chebyshev1_fo_section_3_23_reg <= chebyshev1_fo_section_51_86;
if (reset == 1'b0 && ^(chebyshev1_fo_section_51_86) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev1_fo_section_3_23_reg"); $finish; end
end
/* chebyshev1_fo_section: %51*/
/*   %91 = fdiv double %90, %D*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_323))
begin
chebyshev1_fo_section_3_23_reg <= chebyshev1_fo_section_51_91;
if (reset == 1'b0 && ^(chebyshev1_fo_section_51_91) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev1_fo_section_3_23_reg"); $finish; end
end
end
always @(*) begin
chebyshev1_fo_section_3_24 = chebyshev1_fo_section_altfp_fptosi_64_0;
end
always @(posedge clk) begin
/* chebyshev1_fo_section: %3*/
/*   %24 = fptosi double %23 to i32*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_155))
begin
chebyshev1_fo_section_3_24_reg <= chebyshev1_fo_section_3_24;
if (reset == 1'b0 && ^(chebyshev1_fo_section_3_24) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev1_fo_section_3_24_reg"); $finish; end
end
/* chebyshev1_fo_section: %3*/
/*   %24 = fptosi double %23 to i32*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_155))
begin
chebyshev1_fo_section_3_24_reg <= chebyshev1_fo_section_3_24;
if (reset == 1'b0 && ^(chebyshev1_fo_section_3_24) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev1_fo_section_3_24_reg"); $finish; end
end
/* chebyshev1_fo_section: %51*/
/*   %74 = fptosi double %73 to i32*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_316))
begin
chebyshev1_fo_section_3_24_reg <= chebyshev1_fo_section_51_74;
if (reset == 1'b0 && ^(chebyshev1_fo_section_51_74) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev1_fo_section_3_24_reg"); $finish; end
end
/* chebyshev1_fo_section: %51*/
/*   %113 = fptosi double %112 to i32*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_319))
begin
chebyshev1_fo_section_3_24_reg <= chebyshev1_fo_section_51_113;
if (reset == 1'b0 && ^(chebyshev1_fo_section_51_113) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev1_fo_section_3_24_reg"); $finish; end
end
end
always @(*) begin
/* chebyshev1_fo_section: %3*/
/*   %25 = getelementptr inbounds %struct.TYPE_3__* %S, i32 0, i32 1*/
begin
chebyshev1_fo_section_3_25 = (arg_S + 8);
end
end
always @(posedge clk) begin
/* chebyshev1_fo_section: %3*/
/*   %25 = getelementptr inbounds %struct.TYPE_3__* %S, i32 0, i32 1*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_3))
begin
chebyshev1_fo_section_3_25_reg <= chebyshev1_fo_section_3_25;
if (reset == 1'b0 && ^(chebyshev1_fo_section_3_25) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev1_fo_section_3_25_reg"); $finish; end
end
end
always @(*) begin
chebyshev1_fo_section_3_26 = chebyshev1_fo_section_altfp_subtract_64_0;
end
always @(posedge clk) begin
/* chebyshev1_fo_section: %3*/
/*   %26 = fsub double %10, %14*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_78))
begin
chebyshev1_fo_section_3_26_reg <= chebyshev1_fo_section_3_26;
if (reset == 1'b0 && ^(chebyshev1_fo_section_3_26) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev1_fo_section_3_26_reg"); $finish; end
end
/* chebyshev1_fo_section: %3*/
/*   %26 = fsub double %10, %14*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_78))
begin
chebyshev1_fo_section_3_26_reg <= chebyshev1_fo_section_3_26;
if (reset == 1'b0 && ^(chebyshev1_fo_section_3_26) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev1_fo_section_3_26_reg"); $finish; end
end
/* chebyshev1_fo_section: %51*/
/*   %110 = fsub double 1.000000e+00, %95*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_239))
begin
chebyshev1_fo_section_3_26_reg <= chebyshev1_fo_section_51_110;
if (reset == 1'b0 && ^(chebyshev1_fo_section_51_110) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev1_fo_section_3_26_reg"); $finish; end
end
end
always @(*) begin
chebyshev1_fo_section_3_27 = chebyshev1_fo_section_altfp_add_64_0;
end
always @(*) begin
/* chebyshev1_fo_section: %3*/
/*   %27 = fadd double %26, %6*/
chebyshev1_fo_section_3_27_reg = chebyshev1_fo_section_3_16_reg;
end
always @(*) begin
chebyshev1_fo_section_3_28 = chebyshev1_fo_section_altfp_divide_64_0;
end
always @(posedge clk) begin
/* chebyshev1_fo_section: %3*/
/*   %28 = fdiv double %27, %D*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_155))
begin
chebyshev1_fo_section_3_28_reg <= chebyshev1_fo_section_3_28;
if (reset == 1'b0 && ^(chebyshev1_fo_section_3_28) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev1_fo_section_3_28_reg"); $finish; end
end
/* chebyshev1_fo_section: %3*/
/*   %28 = fdiv double %27, %D*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_155))
begin
chebyshev1_fo_section_3_28_reg <= chebyshev1_fo_section_3_28;
if (reset == 1'b0 && ^(chebyshev1_fo_section_3_28) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev1_fo_section_3_28_reg"); $finish; end
end
/* chebyshev1_fo_section: %51*/
/*   %98 = fdiv double %97, %D*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_312))
begin
chebyshev1_fo_section_3_28_reg <= chebyshev1_fo_section_51_98;
if (reset == 1'b0 && ^(chebyshev1_fo_section_51_98) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev1_fo_section_3_28_reg"); $finish; end
end
end
always @(*) begin
/* chebyshev1_fo_section: %3*/
/*   %29 = getelementptr inbounds %struct.TYPE_3__* %S, i32 0, i32 2*/
begin
chebyshev1_fo_section_3_29 = (arg_S + 12);
end
end
always @(posedge clk) begin
/* chebyshev1_fo_section: %3*/
/*   %29 = getelementptr inbounds %struct.TYPE_3__* %S, i32 0, i32 2*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_3))
begin
chebyshev1_fo_section_3_29_reg <= chebyshev1_fo_section_3_29;
if (reset == 1'b0 && ^(chebyshev1_fo_section_3_29) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev1_fo_section_3_29_reg"); $finish; end
end
end
always @(*) begin
/* chebyshev1_fo_section: %3*/
/*   %30 = getelementptr inbounds %struct.TYPE_3__* %S, i32 0, i32 3*/
begin
chebyshev1_fo_section_3_30 = (arg_S + 20);
end
end
always @(posedge clk) begin
/* chebyshev1_fo_section: %3*/
/*   %30 = getelementptr inbounds %struct.TYPE_3__* %S, i32 0, i32 3*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_3))
begin
chebyshev1_fo_section_3_30_reg <= chebyshev1_fo_section_3_30;
if (reset == 1'b0 && ^(chebyshev1_fo_section_3_30) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev1_fo_section_3_30_reg"); $finish; end
end
end
always @(*) begin
/* chebyshev1_fo_section: %3*/
/*   %31 = getelementptr inbounds %struct.TYPE_3__* %S, i32 0, i32 4*/
begin
chebyshev1_fo_section_3_31 = (arg_S + 24);
end
end
always @(posedge clk) begin
/* chebyshev1_fo_section: %3*/
/*   %31 = getelementptr inbounds %struct.TYPE_3__* %S, i32 0, i32 4*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_3))
begin
chebyshev1_fo_section_3_31_reg <= chebyshev1_fo_section_3_31;
if (reset == 1'b0 && ^(chebyshev1_fo_section_3_31) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev1_fo_section_3_31_reg"); $finish; end
end
end
always @(*) begin
/* chebyshev1_fo_section: %3*/
/*   %32 = getelementptr inbounds %struct.TYPE_3__* %S, i32 0, i32 5*/
begin
chebyshev1_fo_section_3_32 = (arg_S + 32);
end
end
always @(posedge clk) begin
/* chebyshev1_fo_section: %3*/
/*   %32 = getelementptr inbounds %struct.TYPE_3__* %S, i32 0, i32 5*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_3))
begin
chebyshev1_fo_section_3_32_reg <= chebyshev1_fo_section_3_32;
if (reset == 1'b0 && ^(chebyshev1_fo_section_3_32) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev1_fo_section_3_32_reg"); $finish; end
end
end
always @(*) begin
chebyshev1_fo_section_3_33 = chebyshev1_fo_section_altfp_multiply_64_0;
end
always @(posedge clk) begin
/* chebyshev1_fo_section: %3*/
/*   %33 = fmul double %a, %a*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_19))
begin
chebyshev1_fo_section_3_33_reg <= chebyshev1_fo_section_3_33;
if (reset == 1'b0 && ^(chebyshev1_fo_section_3_33) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev1_fo_section_3_33_reg"); $finish; end
end
/* chebyshev1_fo_section: %3*/
/*   %33 = fmul double %a, %a*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_19))
begin
chebyshev1_fo_section_3_33_reg <= chebyshev1_fo_section_3_33;
if (reset == 1'b0 && ^(chebyshev1_fo_section_3_33) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev1_fo_section_3_33_reg"); $finish; end
end
/* chebyshev1_fo_section: %51*/
/*   %60 = fmul double %59, %b*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_196))
begin
chebyshev1_fo_section_3_33_reg <= chebyshev1_fo_section_51_60;
if (reset == 1'b0 && ^(chebyshev1_fo_section_51_60) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev1_fo_section_3_33_reg"); $finish; end
end
/* chebyshev1_fo_section: %51*/
/*   %95 = fmul double %94, %tetta_b*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_225))
begin
chebyshev1_fo_section_3_33_reg <= chebyshev1_fo_section_51_95;
if (reset == 1'b0 && ^(chebyshev1_fo_section_51_95) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev1_fo_section_3_33_reg"); $finish; end
end
end
always @(*) begin
chebyshev1_fo_section_3_34 = chebyshev1_fo_section_altfp_multiply_64_0;
end
always @(posedge clk) begin
/* chebyshev1_fo_section: %3*/
/*   %34 = fmul double %c, %c*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_20))
begin
chebyshev1_fo_section_3_34_reg <= chebyshev1_fo_section_3_34;
if (reset == 1'b0 && ^(chebyshev1_fo_section_3_34) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev1_fo_section_3_34_reg"); $finish; end
end
/* chebyshev1_fo_section: %3*/
/*   %34 = fmul double %c, %c*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_20))
begin
chebyshev1_fo_section_3_34_reg <= chebyshev1_fo_section_3_34;
if (reset == 1'b0 && ^(chebyshev1_fo_section_3_34) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev1_fo_section_3_34_reg"); $finish; end
end
/* chebyshev1_fo_section: %51*/
/*   %76 = fmul double %c0, 2.000000e+00*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_177))
begin
chebyshev1_fo_section_3_34_reg <= chebyshev1_fo_section_51_76;
if (reset == 1'b0 && ^(chebyshev1_fo_section_51_76) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev1_fo_section_3_34_reg"); $finish; end
end
end
always @(*) begin
chebyshev1_fo_section_3_35 = chebyshev1_fo_section_altfp_add_64_0;
end
always @(*) begin
/* chebyshev1_fo_section: %3*/
/*   %35 = fadd double %33, %34*/
chebyshev1_fo_section_3_35_reg = chebyshev1_fo_section_3_17_reg;
end
always @(*) begin
chebyshev1_fo_section_3_36 = chebyshev1_fo_section_altfp_multiply_64_0;
end
always @(*) begin
/* chebyshev1_fo_section: %3*/
/*   %36 = fmul double %4, %35*/
chebyshev1_fo_section_3_36_reg = chebyshev1_fo_section_3_42_reg;
end
always @(*) begin
chebyshev1_fo_section_3_37 = chebyshev1_fo_section_altfp_add_64_0;
end
always @(*) begin
/* chebyshev1_fo_section: %3*/
/*   %37 = fadd double %36, -1.000000e+00*/
chebyshev1_fo_section_3_37_reg = chebyshev1_fo_section_3_17_reg;
end
always @(*) begin
chebyshev1_fo_section_3_38 = chebyshev1_fo_section_altfp_multiply_64_0;
end
always @(*) begin
/* chebyshev1_fo_section: %3*/
/*   %38 = fmul double %20, %37*/
chebyshev1_fo_section_3_38_reg = chebyshev1_fo_section_3_12_reg;
end
always @(*) begin
chebyshev1_fo_section_3_39 = chebyshev1_fo_section_altfp_divide_64_0;
end
always @(posedge clk) begin
/* chebyshev1_fo_section: %3*/
/*   %39 = fdiv double %38, %D*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_150))
begin
chebyshev1_fo_section_3_39_reg <= chebyshev1_fo_section_3_39;
if (reset == 1'b0 && ^(chebyshev1_fo_section_3_39) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev1_fo_section_3_39_reg"); $finish; end
end
/* chebyshev1_fo_section: %3*/
/*   %39 = fdiv double %38, %D*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_150))
begin
chebyshev1_fo_section_3_39_reg <= chebyshev1_fo_section_3_39;
if (reset == 1'b0 && ^(chebyshev1_fo_section_3_39) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev1_fo_section_3_39_reg"); $finish; end
end
/* chebyshev1_fo_section: %51*/
/*   %120 = fdiv double %119, %D*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_325))
begin
chebyshev1_fo_section_3_39_reg <= chebyshev1_fo_section_51_120;
if (reset == 1'b0 && ^(chebyshev1_fo_section_51_120) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev1_fo_section_3_39_reg"); $finish; end
end
/* chebyshev1_fo_section: %51*/
/*   %73 = fdiv double %72, %D*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_310))
begin
chebyshev1_fo_section_3_39_reg <= chebyshev1_fo_section_51_73;
if (reset == 1'b0 && ^(chebyshev1_fo_section_51_73) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev1_fo_section_3_39_reg"); $finish; end
end
/* chebyshev1_fo_section: %51*/
/*   %82 = fdiv double %81, %D*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_322))
begin
chebyshev1_fo_section_3_39_reg <= chebyshev1_fo_section_51_82;
if (reset == 1'b0 && ^(chebyshev1_fo_section_51_82) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev1_fo_section_3_39_reg"); $finish; end
end
end
always @(*) begin
chebyshev1_fo_section_3_40 = chebyshev1_fo_section_altfp_fptosi_64_0;
end
always @(posedge clk) begin
/* chebyshev1_fo_section: %3*/
/*   %40 = fptosi double %39 to i32*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_156))
begin
chebyshev1_fo_section_3_40_reg <= chebyshev1_fo_section_3_40;
if (reset == 1'b0 && ^(chebyshev1_fo_section_3_40) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev1_fo_section_3_40_reg"); $finish; end
end
/* chebyshev1_fo_section: %3*/
/*   %40 = fptosi double %39 to i32*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_156))
begin
chebyshev1_fo_section_3_40_reg <= chebyshev1_fo_section_3_40;
if (reset == 1'b0 && ^(chebyshev1_fo_section_3_40) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev1_fo_section_3_40_reg"); $finish; end
end
/* chebyshev1_fo_section: %51*/
/*   %87 = fptosi double %86 to i32*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_317))
begin
chebyshev1_fo_section_3_40_reg <= chebyshev1_fo_section_51_87;
if (reset == 1'b0 && ^(chebyshev1_fo_section_51_87) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev1_fo_section_3_40_reg"); $finish; end
end
end
always @(*) begin
/* chebyshev1_fo_section: %3*/
/*   %41 = getelementptr inbounds %struct.TYPE_3__* %S, i32 0, i32 6*/
begin
chebyshev1_fo_section_3_41 = (arg_S + 36);
end
end
always @(posedge clk) begin
/* chebyshev1_fo_section: %3*/
/*   %41 = getelementptr inbounds %struct.TYPE_3__* %S, i32 0, i32 6*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_3))
begin
chebyshev1_fo_section_3_41_reg <= chebyshev1_fo_section_3_41;
if (reset == 1'b0 && ^(chebyshev1_fo_section_3_41) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev1_fo_section_3_41_reg"); $finish; end
end
end
always @(*) begin
chebyshev1_fo_section_3_42 = chebyshev1_fo_section_altfp_multiply_64_0;
end
always @(posedge clk) begin
/* chebyshev1_fo_section: %3*/
/*   %42 = fmul double %a, 2.000000e+00*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_21))
begin
chebyshev1_fo_section_3_42_reg <= chebyshev1_fo_section_3_42;
if (reset == 1'b0 && ^(chebyshev1_fo_section_3_42) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev1_fo_section_3_42_reg"); $finish; end
end
/* chebyshev1_fo_section: %3*/
/*   %42 = fmul double %a, 2.000000e+00*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_21))
begin
chebyshev1_fo_section_3_42_reg <= chebyshev1_fo_section_3_42;
if (reset == 1'b0 && ^(chebyshev1_fo_section_3_42) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev1_fo_section_3_42_reg"); $finish; end
end
/* chebyshev1_fo_section: %3*/
/*   %36 = fmul double %4, %35*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_64))
begin
chebyshev1_fo_section_3_42_reg <= chebyshev1_fo_section_3_36;
if (reset == 1'b0 && ^(chebyshev1_fo_section_3_36) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev1_fo_section_3_42_reg"); $finish; end
end
/* chebyshev1_fo_section: %51*/
/*   %116 = fmul double %115, %si*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_223))
begin
chebyshev1_fo_section_3_42_reg <= chebyshev1_fo_section_51_116;
if (reset == 1'b0 && ^(chebyshev1_fo_section_51_116) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev1_fo_section_3_42_reg"); $finish; end
end
/* chebyshev1_fo_section: %51*/
/*   %55 = fmul double %54, %c*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_195))
begin
chebyshev1_fo_section_3_42_reg <= chebyshev1_fo_section_51_55;
if (reset == 1'b0 && ^(chebyshev1_fo_section_51_55) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev1_fo_section_3_42_reg"); $finish; end
end
/* chebyshev1_fo_section: %51*/
/*   %79 = fmul double %53, %78*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_235))
begin
chebyshev1_fo_section_3_42_reg <= chebyshev1_fo_section_51_79;
if (reset == 1'b0 && ^(chebyshev1_fo_section_51_79) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev1_fo_section_3_42_reg"); $finish; end
end
end
always @(*) begin
chebyshev1_fo_section_3_43 = chebyshev1_fo_section_altfp_multiply_64_0;
end
always @(posedge clk) begin
/* chebyshev1_fo_section: %3*/
/*   %43 = fmul double %42, %si*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_51))
begin
chebyshev1_fo_section_3_43_reg <= chebyshev1_fo_section_3_43;
if (reset == 1'b0 && ^(chebyshev1_fo_section_3_43) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev1_fo_section_3_43_reg"); $finish; end
end
/* chebyshev1_fo_section: %3*/
/*   %43 = fmul double %42, %si*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_51))
begin
chebyshev1_fo_section_3_43_reg <= chebyshev1_fo_section_3_43;
if (reset == 1'b0 && ^(chebyshev1_fo_section_3_43) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev1_fo_section_3_43_reg"); $finish; end
end
/* chebyshev1_fo_section: %51*/
/*   %53 = fmul double %g0, %g0*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_173))
begin
chebyshev1_fo_section_3_43_reg <= chebyshev1_fo_section_51_53;
if (reset == 1'b0 && ^(chebyshev1_fo_section_51_53) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev1_fo_section_3_43_reg"); $finish; end
end
end
always @(*) begin
chebyshev1_fo_section_3_44 = chebyshev1_fo_section_altfp_multiply_64_0;
end
always @(*) begin
/* chebyshev1_fo_section: %3*/
/*   %44 = fmul double %43, %tetta_b*/
chebyshev1_fo_section_3_44_reg = chebyshev1_fo_section_3_5_reg;
end
always @(*) begin
chebyshev1_fo_section_3_45 = chebyshev1_fo_section_altfp_subtract_64_0;
end
always @(*) begin
/* chebyshev1_fo_section: %3*/
/*   %45 = fsub double %36, %44*/
chebyshev1_fo_section_3_45_reg = chebyshev1_fo_section_51_118_reg;
end
always @(*) begin
chebyshev1_fo_section_3_46 = chebyshev1_fo_section_altfp_add_64_0;
end
always @(posedge clk) begin
/* chebyshev1_fo_section: %3*/
/*   %46 = fadd double %45, 1.000000e+00*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_95))
begin
chebyshev1_fo_section_3_46_reg <= chebyshev1_fo_section_3_46;
if (reset == 1'b0 && ^(chebyshev1_fo_section_3_46) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev1_fo_section_3_46_reg"); $finish; end
end
/* chebyshev1_fo_section: %3*/
/*   %46 = fadd double %45, 1.000000e+00*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_95))
begin
chebyshev1_fo_section_3_46_reg <= chebyshev1_fo_section_3_46;
if (reset == 1'b0 && ^(chebyshev1_fo_section_3_46) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev1_fo_section_3_46_reg"); $finish; end
end
/* chebyshev1_fo_section: %51*/
/*   %78 = fadd double %77, 1.000000e+00*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_211))
begin
chebyshev1_fo_section_3_46_reg <= chebyshev1_fo_section_51_78;
if (reset == 1'b0 && ^(chebyshev1_fo_section_51_78) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev1_fo_section_3_46_reg"); $finish; end
end
/* chebyshev1_fo_section: %51*/
/*   %90 = fadd double %89, %53*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_261))
begin
chebyshev1_fo_section_3_46_reg <= chebyshev1_fo_section_51_90;
if (reset == 1'b0 && ^(chebyshev1_fo_section_51_90) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev1_fo_section_3_46_reg"); $finish; end
end
end
always @(*) begin
chebyshev1_fo_section_3_47 = chebyshev1_fo_section_altfp_divide_64_0;
end
always @(*) begin
/* chebyshev1_fo_section: %3*/
/*   %47 = fdiv double %46, %D*/
chebyshev1_fo_section_3_47_reg = chebyshev1_fo_section_3_18_reg;
end
always @(*) begin
/* chebyshev1_fo_section: %3*/
/*   %48 = getelementptr inbounds %struct.TYPE_3__* %S, i32 0, i32 7*/
begin
chebyshev1_fo_section_3_48 = (arg_S + 40);
end
end
always @(posedge clk) begin
/* chebyshev1_fo_section: %3*/
/*   %48 = getelementptr inbounds %struct.TYPE_3__* %S, i32 0, i32 7*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_3))
begin
chebyshev1_fo_section_3_48_reg <= chebyshev1_fo_section_3_48;
if (reset == 1'b0 && ^(chebyshev1_fo_section_3_48) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev1_fo_section_3_48_reg"); $finish; end
end
end
always @(*) begin
/* chebyshev1_fo_section: %3*/
/*   %49 = getelementptr inbounds %struct.TYPE_3__* %S, i32 0, i32 8*/
begin
chebyshev1_fo_section_3_49 = (arg_S + 48);
end
end
always @(posedge clk) begin
/* chebyshev1_fo_section: %3*/
/*   %49 = getelementptr inbounds %struct.TYPE_3__* %S, i32 0, i32 8*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_3))
begin
chebyshev1_fo_section_3_49_reg <= chebyshev1_fo_section_3_49;
if (reset == 1'b0 && ^(chebyshev1_fo_section_3_49) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev1_fo_section_3_49_reg"); $finish; end
end
end
always @(*) begin
/* chebyshev1_fo_section: %3*/
/*   %50 = getelementptr inbounds %struct.TYPE_3__* %S, i32 0, i32 9*/
begin
chebyshev1_fo_section_3_50 = (arg_S + 52);
end
end
always @(posedge clk) begin
/* chebyshev1_fo_section: %3*/
/*   %50 = getelementptr inbounds %struct.TYPE_3__* %S, i32 0, i32 9*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_3))
begin
chebyshev1_fo_section_3_50_reg <= chebyshev1_fo_section_3_50;
if (reset == 1'b0 && ^(chebyshev1_fo_section_3_50) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev1_fo_section_3_50_reg"); $finish; end
end
end
always @(*) begin
chebyshev1_fo_section_51_52 = chebyshev1_fo_section_altfp_multiply_64_0;
end
always @(*) begin
/* chebyshev1_fo_section: %51*/
/*   %52 = fmul double %b, %b*/
chebyshev1_fo_section_51_52_reg = chebyshev1_fo_section_3_8_reg;
end
always @(*) begin
chebyshev1_fo_section_51_53 = chebyshev1_fo_section_altfp_multiply_64_0;
end
always @(*) begin
/* chebyshev1_fo_section: %51*/
/*   %53 = fmul double %g0, %g0*/
chebyshev1_fo_section_51_53_reg = chebyshev1_fo_section_3_43_reg;
end
always @(*) begin
chebyshev1_fo_section_51_54 = chebyshev1_fo_section_altfp_multiply_64_0;
end
always @(*) begin
/* chebyshev1_fo_section: %51*/
/*   %54 = fmul double %53, %c*/
chebyshev1_fo_section_51_54_reg = chebyshev1_fo_section_3_13_reg;
end
always @(*) begin
chebyshev1_fo_section_51_55 = chebyshev1_fo_section_altfp_multiply_64_0;
end
always @(*) begin
/* chebyshev1_fo_section: %51*/
/*   %55 = fmul double %54, %c*/
chebyshev1_fo_section_51_55_reg = chebyshev1_fo_section_3_42_reg;
end
always @(*) begin
chebyshev1_fo_section_51_56 = chebyshev1_fo_section_altfp_add_64_0;
end
always @(*) begin
/* chebyshev1_fo_section: %51*/
/*   %56 = fadd double %52, %55*/
chebyshev1_fo_section_51_56_reg = chebyshev1_fo_section_3_17_reg;
end
always @(*) begin
chebyshev1_fo_section_51_57 = chebyshev1_fo_section_altfp_multiply_64_0;
end
always @(*) begin
/* chebyshev1_fo_section: %51*/
/*   %57 = fmul double %56, %tetta_b*/
chebyshev1_fo_section_51_57_reg = chebyshev1_fo_section_3_20_reg;
end
always @(*) begin
chebyshev1_fo_section_51_58 = chebyshev1_fo_section_altfp_multiply_64_0;
end
always @(*) begin
/* chebyshev1_fo_section: %51*/
/*   %58 = fmul double %57, %tetta_b*/
chebyshev1_fo_section_51_58_reg = chebyshev1_fo_section_3_4_reg;
end
always @(*) begin
chebyshev1_fo_section_51_59 = chebyshev1_fo_section_altfp_multiply_64_0;
end
always @(*) begin
/* chebyshev1_fo_section: %51*/
/*   %59 = fmul double %g0, 2.000000e+00*/
chebyshev1_fo_section_51_59_reg = chebyshev1_fo_section_3_20_reg;
end
always @(*) begin
chebyshev1_fo_section_51_60 = chebyshev1_fo_section_altfp_multiply_64_0;
end
always @(*) begin
/* chebyshev1_fo_section: %51*/
/*   %60 = fmul double %59, %b*/
chebyshev1_fo_section_51_60_reg = chebyshev1_fo_section_3_33_reg;
end
always @(*) begin
chebyshev1_fo_section_51_61 = chebyshev1_fo_section_altfp_multiply_64_0;
end
always @(*) begin
/* chebyshev1_fo_section: %51*/
/*   %61 = fmul double %60, %si*/
chebyshev1_fo_section_51_61_reg = chebyshev1_fo_section_3_12_reg;
end
always @(*) begin
chebyshev1_fo_section_51_62 = chebyshev1_fo_section_altfp_multiply_64_0;
end
always @(*) begin
/* chebyshev1_fo_section: %51*/
/*   %62 = fmul double %61, %tetta_b*/
chebyshev1_fo_section_51_62_reg = chebyshev1_fo_section_3_13_reg;
end
always @(*) begin
chebyshev1_fo_section_51_63 = chebyshev1_fo_section_altfp_add_64_0;
end
always @(*) begin
/* chebyshev1_fo_section: %51*/
/*   %63 = fadd double %58, %62*/
chebyshev1_fo_section_51_63_reg = chebyshev1_fo_section_3_16_reg;
end
always @(*) begin
chebyshev1_fo_section_51_64 = chebyshev1_fo_section_altfp_add_64_0;
end
always @(*) begin
/* chebyshev1_fo_section: %51*/
/*   %64 = fadd double %63, %53*/
chebyshev1_fo_section_51_64_reg = chebyshev1_fo_section_3_17_reg;
end
always @(*) begin
chebyshev1_fo_section_51_65 = chebyshev1_fo_section_altfp_divide_64_0;
end
always @(*) begin
/* chebyshev1_fo_section: %51*/
/*   %65 = fdiv double %64, %D*/
chebyshev1_fo_section_51_65_reg = chebyshev1_fo_section_3_18_reg;
end
always @(*) begin
/* chebyshev1_fo_section: %51*/
/*   %66 = getelementptr inbounds %struct.TYPE_3__* %S, i32 0, i32 0*/
begin
chebyshev1_fo_section_51_66 = arg_S;
end
end
always @(posedge clk) begin
/* chebyshev1_fo_section: %51*/
/*   %66 = getelementptr inbounds %struct.TYPE_3__* %S, i32 0, i32 0*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_161))
begin
chebyshev1_fo_section_51_66_reg <= chebyshev1_fo_section_51_66;
if (reset == 1'b0 && ^(chebyshev1_fo_section_51_66) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev1_fo_section_51_66_reg"); $finish; end
end
end
always @(*) begin
chebyshev1_fo_section_51_67 = chebyshev1_fo_section_altfp_multiply_64_0;
end
always @(*) begin
/* chebyshev1_fo_section: %51*/
/*   %67 = fmul double %c0, -4.000000e+00*/
chebyshev1_fo_section_51_67_reg = chebyshev1_fo_section_3_5_reg;
end
always @(*) begin
chebyshev1_fo_section_51_68 = chebyshev1_fo_section_altfp_multiply_64_0;
end
always @(*) begin
/* chebyshev1_fo_section: %51*/
/*   %68 = fmul double %g0, %b*/
chebyshev1_fo_section_51_68_reg = chebyshev1_fo_section_3_12_reg;
end
always @(*) begin
chebyshev1_fo_section_51_69 = chebyshev1_fo_section_altfp_multiply_64_0;
end
always @(*) begin
/* chebyshev1_fo_section: %51*/
/*   %69 = fmul double %68, %si*/
chebyshev1_fo_section_51_69_reg = chebyshev1_fo_section_3_13_reg;
end
always @(*) begin
chebyshev1_fo_section_51_70 = chebyshev1_fo_section_altfp_multiply_64_0;
end
always @(*) begin
/* chebyshev1_fo_section: %51*/
/*   %70 = fmul double %69, %tetta_b*/
chebyshev1_fo_section_51_70_reg = chebyshev1_fo_section_3_6_reg;
end
always @(*) begin
chebyshev1_fo_section_51_71 = chebyshev1_fo_section_altfp_add_64_0;
end
always @(*) begin
/* chebyshev1_fo_section: %51*/
/*   %71 = fadd double %53, %70*/
chebyshev1_fo_section_51_71_reg = chebyshev1_fo_section_3_17_reg;
end
always @(*) begin
chebyshev1_fo_section_51_72 = chebyshev1_fo_section_altfp_multiply_64_0;
end
always @(*) begin
/* chebyshev1_fo_section: %51*/
/*   %72 = fmul double %67, %71*/
chebyshev1_fo_section_51_72_reg = chebyshev1_fo_section_3_6_reg;
end
always @(*) begin
chebyshev1_fo_section_51_73 = chebyshev1_fo_section_altfp_divide_64_0;
end
always @(*) begin
/* chebyshev1_fo_section: %51*/
/*   %73 = fdiv double %72, %D*/
chebyshev1_fo_section_51_73_reg = chebyshev1_fo_section_3_39_reg;
end
always @(*) begin
chebyshev1_fo_section_51_74 = chebyshev1_fo_section_altfp_fptosi_64_0;
end
always @(*) begin
/* chebyshev1_fo_section: %51*/
/*   %74 = fptosi double %73 to i32*/
chebyshev1_fo_section_51_74_reg = chebyshev1_fo_section_3_24_reg;
end
always @(*) begin
/* chebyshev1_fo_section: %51*/
/*   %75 = getelementptr inbounds %struct.TYPE_3__* %S, i32 0, i32 1*/
begin
chebyshev1_fo_section_51_75 = (arg_S + 8);
end
end
always @(posedge clk) begin
/* chebyshev1_fo_section: %51*/
/*   %75 = getelementptr inbounds %struct.TYPE_3__* %S, i32 0, i32 1*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_161))
begin
chebyshev1_fo_section_51_75_reg <= chebyshev1_fo_section_51_75;
if (reset == 1'b0 && ^(chebyshev1_fo_section_51_75) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev1_fo_section_51_75_reg"); $finish; end
end
end
always @(*) begin
chebyshev1_fo_section_51_76 = chebyshev1_fo_section_altfp_multiply_64_0;
end
always @(*) begin
/* chebyshev1_fo_section: %51*/
/*   %76 = fmul double %c0, 2.000000e+00*/
chebyshev1_fo_section_51_76_reg = chebyshev1_fo_section_3_34_reg;
end
always @(*) begin
chebyshev1_fo_section_51_77 = chebyshev1_fo_section_altfp_multiply_64_0;
end
always @(*) begin
/* chebyshev1_fo_section: %51*/
/*   %77 = fmul double %76, %c0*/
chebyshev1_fo_section_51_77_reg = chebyshev1_fo_section_3_20_reg;
end
always @(*) begin
chebyshev1_fo_section_51_78 = chebyshev1_fo_section_altfp_add_64_0;
end
always @(*) begin
/* chebyshev1_fo_section: %51*/
/*   %78 = fadd double %77, 1.000000e+00*/
chebyshev1_fo_section_51_78_reg = chebyshev1_fo_section_3_46_reg;
end
always @(*) begin
chebyshev1_fo_section_51_79 = chebyshev1_fo_section_altfp_multiply_64_0;
end
always @(*) begin
/* chebyshev1_fo_section: %51*/
/*   %79 = fmul double %53, %78*/
chebyshev1_fo_section_51_79_reg = chebyshev1_fo_section_3_42_reg;
end
always @(*) begin
chebyshev1_fo_section_51_80 = chebyshev1_fo_section_altfp_subtract_64_0;
end
always @(posedge clk) begin
/* chebyshev1_fo_section: %51*/
/*   %80 = fsub double %79, %58*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_249))
begin
chebyshev1_fo_section_51_80_reg <= chebyshev1_fo_section_51_80;
if (reset == 1'b0 && ^(chebyshev1_fo_section_51_80) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev1_fo_section_51_80_reg"); $finish; end
end
/* chebyshev1_fo_section: %51*/
/*   %80 = fsub double %79, %58*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_249))
begin
chebyshev1_fo_section_51_80_reg <= chebyshev1_fo_section_51_80;
if (reset == 1'b0 && ^(chebyshev1_fo_section_51_80) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev1_fo_section_51_80_reg"); $finish; end
end
end
always @(*) begin
chebyshev1_fo_section_51_81 = chebyshev1_fo_section_altfp_multiply_64_0;
end
always @(*) begin
/* chebyshev1_fo_section: %51*/
/*   %81 = fmul double %80, 2.000000e+00*/
chebyshev1_fo_section_51_81_reg = chebyshev1_fo_section_3_5_reg;
end
always @(*) begin
chebyshev1_fo_section_51_82 = chebyshev1_fo_section_altfp_divide_64_0;
end
always @(*) begin
/* chebyshev1_fo_section: %51*/
/*   %82 = fdiv double %81, %D*/
chebyshev1_fo_section_51_82_reg = chebyshev1_fo_section_3_39_reg;
end
always @(*) begin
/* chebyshev1_fo_section: %51*/
/*   %83 = getelementptr inbounds %struct.TYPE_3__* %S, i32 0, i32 2*/
begin
chebyshev1_fo_section_51_83 = (arg_S + 12);
end
end
always @(posedge clk) begin
/* chebyshev1_fo_section: %51*/
/*   %83 = getelementptr inbounds %struct.TYPE_3__* %S, i32 0, i32 2*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_161))
begin
chebyshev1_fo_section_51_83_reg <= chebyshev1_fo_section_51_83;
if (reset == 1'b0 && ^(chebyshev1_fo_section_51_83) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev1_fo_section_51_83_reg"); $finish; end
end
end
always @(*) begin
chebyshev1_fo_section_51_84 = chebyshev1_fo_section_altfp_subtract_64_0;
end
always @(posedge clk) begin
/* chebyshev1_fo_section: %51*/
/*   %84 = fsub double %53, %70*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_238))
begin
chebyshev1_fo_section_51_84_reg <= chebyshev1_fo_section_51_84;
if (reset == 1'b0 && ^(chebyshev1_fo_section_51_84) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev1_fo_section_51_84_reg"); $finish; end
end
/* chebyshev1_fo_section: %51*/
/*   %84 = fsub double %53, %70*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_238))
begin
chebyshev1_fo_section_51_84_reg <= chebyshev1_fo_section_51_84;
if (reset == 1'b0 && ^(chebyshev1_fo_section_51_84) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev1_fo_section_51_84_reg"); $finish; end
end
end
always @(*) begin
chebyshev1_fo_section_51_85 = chebyshev1_fo_section_altfp_multiply_64_0;
end
always @(*) begin
/* chebyshev1_fo_section: %51*/
/*   %85 = fmul double %67, %84*/
chebyshev1_fo_section_51_85_reg = chebyshev1_fo_section_3_8_reg;
end
always @(*) begin
chebyshev1_fo_section_51_86 = chebyshev1_fo_section_altfp_divide_64_0;
end
always @(*) begin
/* chebyshev1_fo_section: %51*/
/*   %86 = fdiv double %85, %D*/
chebyshev1_fo_section_51_86_reg = chebyshev1_fo_section_3_23_reg;
end
always @(*) begin
chebyshev1_fo_section_51_87 = chebyshev1_fo_section_altfp_fptosi_64_0;
end
always @(*) begin
/* chebyshev1_fo_section: %51*/
/*   %87 = fptosi double %86 to i32*/
chebyshev1_fo_section_51_87_reg = chebyshev1_fo_section_3_40_reg;
end
always @(*) begin
/* chebyshev1_fo_section: %51*/
/*   %88 = getelementptr inbounds %struct.TYPE_3__* %S, i32 0, i32 3*/
begin
chebyshev1_fo_section_51_88 = (arg_S + 20);
end
end
always @(posedge clk) begin
/* chebyshev1_fo_section: %51*/
/*   %88 = getelementptr inbounds %struct.TYPE_3__* %S, i32 0, i32 3*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_161))
begin
chebyshev1_fo_section_51_88_reg <= chebyshev1_fo_section_51_88;
if (reset == 1'b0 && ^(chebyshev1_fo_section_51_88) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev1_fo_section_51_88_reg"); $finish; end
end
end
always @(*) begin
chebyshev1_fo_section_51_89 = chebyshev1_fo_section_altfp_subtract_64_0;
end
always @(posedge clk) begin
/* chebyshev1_fo_section: %51*/
/*   %89 = fsub double %58, %62*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_246))
begin
chebyshev1_fo_section_51_89_reg <= chebyshev1_fo_section_51_89;
if (reset == 1'b0 && ^(chebyshev1_fo_section_51_89) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev1_fo_section_51_89_reg"); $finish; end
end
/* chebyshev1_fo_section: %51*/
/*   %89 = fsub double %58, %62*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_246))
begin
chebyshev1_fo_section_51_89_reg <= chebyshev1_fo_section_51_89;
if (reset == 1'b0 && ^(chebyshev1_fo_section_51_89) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev1_fo_section_51_89_reg"); $finish; end
end
end
always @(*) begin
chebyshev1_fo_section_51_90 = chebyshev1_fo_section_altfp_add_64_0;
end
always @(*) begin
/* chebyshev1_fo_section: %51*/
/*   %90 = fadd double %89, %53*/
chebyshev1_fo_section_51_90_reg = chebyshev1_fo_section_3_46_reg;
end
always @(*) begin
chebyshev1_fo_section_51_91 = chebyshev1_fo_section_altfp_divide_64_0;
end
always @(*) begin
/* chebyshev1_fo_section: %51*/
/*   %91 = fdiv double %90, %D*/
chebyshev1_fo_section_51_91_reg = chebyshev1_fo_section_3_23_reg;
end
always @(*) begin
/* chebyshev1_fo_section: %51*/
/*   %92 = getelementptr inbounds %struct.TYPE_3__* %S, i32 0, i32 4*/
begin
chebyshev1_fo_section_51_92 = (arg_S + 24);
end
end
always @(posedge clk) begin
/* chebyshev1_fo_section: %51*/
/*   %92 = getelementptr inbounds %struct.TYPE_3__* %S, i32 0, i32 4*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_161))
begin
chebyshev1_fo_section_51_92_reg <= chebyshev1_fo_section_51_92;
if (reset == 1'b0 && ^(chebyshev1_fo_section_51_92) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev1_fo_section_51_92_reg"); $finish; end
end
end
always @(*) begin
/* chebyshev1_fo_section: %51*/
/*   %93 = getelementptr inbounds %struct.TYPE_3__* %S, i32 0, i32 5*/
begin
chebyshev1_fo_section_51_93 = (arg_S + 32);
end
end
always @(posedge clk) begin
/* chebyshev1_fo_section: %51*/
/*   %93 = getelementptr inbounds %struct.TYPE_3__* %S, i32 0, i32 5*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_161))
begin
chebyshev1_fo_section_51_93_reg <= chebyshev1_fo_section_51_93;
if (reset == 1'b0 && ^(chebyshev1_fo_section_51_93) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev1_fo_section_51_93_reg"); $finish; end
end
end
always @(*) begin
chebyshev1_fo_section_51_94 = chebyshev1_fo_section_altfp_multiply_64_0;
end
always @(posedge clk) begin
/* chebyshev1_fo_section: %51*/
/*   %94 = fmul double %a, %si*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_178))
begin
chebyshev1_fo_section_51_94_reg <= chebyshev1_fo_section_51_94;
if (reset == 1'b0 && ^(chebyshev1_fo_section_51_94) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev1_fo_section_51_94_reg"); $finish; end
end
/* chebyshev1_fo_section: %51*/
/*   %94 = fmul double %a, %si*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_178))
begin
chebyshev1_fo_section_51_94_reg <= chebyshev1_fo_section_51_94;
if (reset == 1'b0 && ^(chebyshev1_fo_section_51_94) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev1_fo_section_51_94_reg"); $finish; end
end
end
always @(*) begin
chebyshev1_fo_section_51_95 = chebyshev1_fo_section_altfp_multiply_64_0;
end
always @(*) begin
/* chebyshev1_fo_section: %51*/
/*   %95 = fmul double %94, %tetta_b*/
chebyshev1_fo_section_51_95_reg = chebyshev1_fo_section_3_33_reg;
end
always @(*) begin
chebyshev1_fo_section_51_96 = chebyshev1_fo_section_altfp_add_64_0;
end
always @(posedge clk) begin
/* chebyshev1_fo_section: %51*/
/*   %96 = fadd double %95, 1.000000e+00*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_239))
begin
chebyshev1_fo_section_51_96_reg <= chebyshev1_fo_section_51_96;
if (reset == 1'b0 && ^(chebyshev1_fo_section_51_96) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev1_fo_section_51_96_reg"); $finish; end
end
/* chebyshev1_fo_section: %51*/
/*   %96 = fadd double %95, 1.000000e+00*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_239))
begin
chebyshev1_fo_section_51_96_reg <= chebyshev1_fo_section_51_96;
if (reset == 1'b0 && ^(chebyshev1_fo_section_51_96) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev1_fo_section_51_96_reg"); $finish; end
end
end
always @(*) begin
chebyshev1_fo_section_51_97 = chebyshev1_fo_section_altfp_multiply_64_0;
end
always @(*) begin
/* chebyshev1_fo_section: %51*/
/*   %97 = fmul double %67, %96*/
chebyshev1_fo_section_51_97_reg = chebyshev1_fo_section_3_4_reg;
end
always @(*) begin
chebyshev1_fo_section_51_98 = chebyshev1_fo_section_altfp_divide_64_0;
end
always @(*) begin
/* chebyshev1_fo_section: %51*/
/*   %98 = fdiv double %97, %D*/
chebyshev1_fo_section_51_98_reg = chebyshev1_fo_section_3_28_reg;
end
always @(*) begin
chebyshev1_fo_section_51_99 = chebyshev1_fo_section_altfp_fptosi_64_0;
end
always @(posedge clk) begin
/* chebyshev1_fo_section: %51*/
/*   %99 = fptosi double %98 to i32*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_318))
begin
chebyshev1_fo_section_51_99_reg <= chebyshev1_fo_section_51_99;
if (reset == 1'b0 && ^(chebyshev1_fo_section_51_99) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev1_fo_section_51_99_reg"); $finish; end
end
/* chebyshev1_fo_section: %51*/
/*   %99 = fptosi double %98 to i32*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_318))
begin
chebyshev1_fo_section_51_99_reg <= chebyshev1_fo_section_51_99;
if (reset == 1'b0 && ^(chebyshev1_fo_section_51_99) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev1_fo_section_51_99_reg"); $finish; end
end
end
always @(*) begin
/* chebyshev1_fo_section: %51*/
/*   %100 = getelementptr inbounds %struct.TYPE_3__* %S, i32 0, i32 6*/
begin
chebyshev1_fo_section_51_100 = (arg_S + 36);
end
end
always @(posedge clk) begin
/* chebyshev1_fo_section: %51*/
/*   %100 = getelementptr inbounds %struct.TYPE_3__* %S, i32 0, i32 6*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_161))
begin
chebyshev1_fo_section_51_100_reg <= chebyshev1_fo_section_51_100;
if (reset == 1'b0 && ^(chebyshev1_fo_section_51_100) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev1_fo_section_51_100_reg"); $finish; end
end
end
always @(*) begin
chebyshev1_fo_section_51_101 = chebyshev1_fo_section_altfp_multiply_64_0;
end
always @(posedge clk) begin
/* chebyshev1_fo_section: %51*/
/*   %101 = fmul double %a, %a*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_179))
begin
chebyshev1_fo_section_51_101_reg <= chebyshev1_fo_section_51_101;
if (reset == 1'b0 && ^(chebyshev1_fo_section_51_101) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev1_fo_section_51_101_reg"); $finish; end
end
/* chebyshev1_fo_section: %51*/
/*   %101 = fmul double %a, %a*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_179))
begin
chebyshev1_fo_section_51_101_reg <= chebyshev1_fo_section_51_101;
if (reset == 1'b0 && ^(chebyshev1_fo_section_51_101) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev1_fo_section_51_101_reg"); $finish; end
end
end
always @(*) begin
chebyshev1_fo_section_51_102 = chebyshev1_fo_section_altfp_multiply_64_0;
end
always @(*) begin
/* chebyshev1_fo_section: %51*/
/*   %102 = fmul double %c, %c*/
chebyshev1_fo_section_51_102_reg = chebyshev1_fo_section_3_6_reg;
end
always @(*) begin
chebyshev1_fo_section_51_103 = chebyshev1_fo_section_altfp_add_64_0;
end
always @(*) begin
/* chebyshev1_fo_section: %51*/
/*   %103 = fadd double %101, %102*/
chebyshev1_fo_section_51_103_reg = chebyshev1_fo_section_3_16_reg;
end
always @(*) begin
chebyshev1_fo_section_51_104 = chebyshev1_fo_section_altfp_multiply_64_0;
end
always @(*) begin
/* chebyshev1_fo_section: %51*/
/*   %104 = fmul double %103, %tetta_b*/
chebyshev1_fo_section_51_104_reg = chebyshev1_fo_section_3_8_reg;
end
always @(*) begin
chebyshev1_fo_section_51_105 = chebyshev1_fo_section_altfp_multiply_64_0;
end
always @(*) begin
/* chebyshev1_fo_section: %51*/
/*   %105 = fmul double %104, %tetta_b*/
chebyshev1_fo_section_51_105_reg = chebyshev1_fo_section_3_12_reg;
end
always @(*) begin
chebyshev1_fo_section_51_106 = chebyshev1_fo_section_altfp_subtract_64_0;
end
always @(*) begin
/* chebyshev1_fo_section: %51*/
/*   %106 = fsub double %78, %105*/
chebyshev1_fo_section_51_106_reg = chebyshev1_fo_section_3_21_reg;
end
always @(*) begin
chebyshev1_fo_section_51_107 = chebyshev1_fo_section_altfp_multiply_64_0;
end
always @(*) begin
/* chebyshev1_fo_section: %51*/
/*   %107 = fmul double %106, 2.000000e+00*/
chebyshev1_fo_section_51_107_reg = chebyshev1_fo_section_3_12_reg;
end
always @(*) begin
chebyshev1_fo_section_51_108 = chebyshev1_fo_section_altfp_divide_64_0;
end
always @(*) begin
/* chebyshev1_fo_section: %51*/
/*   %108 = fdiv double %107, %D*/
chebyshev1_fo_section_51_108_reg = chebyshev1_fo_section_3_18_reg;
end
always @(*) begin
/* chebyshev1_fo_section: %51*/
/*   %109 = getelementptr inbounds %struct.TYPE_3__* %S, i32 0, i32 7*/
begin
chebyshev1_fo_section_51_109 = (arg_S + 40);
end
end
always @(posedge clk) begin
/* chebyshev1_fo_section: %51*/
/*   %109 = getelementptr inbounds %struct.TYPE_3__* %S, i32 0, i32 7*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_161))
begin
chebyshev1_fo_section_51_109_reg <= chebyshev1_fo_section_51_109;
if (reset == 1'b0 && ^(chebyshev1_fo_section_51_109) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev1_fo_section_51_109_reg"); $finish; end
end
end
always @(*) begin
chebyshev1_fo_section_51_110 = chebyshev1_fo_section_altfp_subtract_64_0;
end
always @(*) begin
/* chebyshev1_fo_section: %51*/
/*   %110 = fsub double 1.000000e+00, %95*/
chebyshev1_fo_section_51_110_reg = chebyshev1_fo_section_3_26_reg;
end
always @(*) begin
chebyshev1_fo_section_51_111 = chebyshev1_fo_section_altfp_multiply_64_0;
end
always @(*) begin
/* chebyshev1_fo_section: %51*/
/*   %111 = fmul double %67, %110*/
chebyshev1_fo_section_51_111_reg = chebyshev1_fo_section_3_13_reg;
end
always @(*) begin
chebyshev1_fo_section_51_112 = chebyshev1_fo_section_altfp_divide_64_0;
end
always @(*) begin
/* chebyshev1_fo_section: %51*/
/*   %112 = fdiv double %111, %D*/
chebyshev1_fo_section_51_112_reg = chebyshev1_fo_section_3_18_reg;
end
always @(*) begin
chebyshev1_fo_section_51_113 = chebyshev1_fo_section_altfp_fptosi_64_0;
end
always @(*) begin
/* chebyshev1_fo_section: %51*/
/*   %113 = fptosi double %112 to i32*/
chebyshev1_fo_section_51_113_reg = chebyshev1_fo_section_3_24_reg;
end
always @(*) begin
/* chebyshev1_fo_section: %51*/
/*   %114 = getelementptr inbounds %struct.TYPE_3__* %S, i32 0, i32 8*/
begin
chebyshev1_fo_section_51_114 = (arg_S + 48);
end
end
always @(posedge clk) begin
/* chebyshev1_fo_section: %51*/
/*   %114 = getelementptr inbounds %struct.TYPE_3__* %S, i32 0, i32 8*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_161))
begin
chebyshev1_fo_section_51_114_reg <= chebyshev1_fo_section_51_114;
if (reset == 1'b0 && ^(chebyshev1_fo_section_51_114) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev1_fo_section_51_114_reg"); $finish; end
end
end
always @(*) begin
chebyshev1_fo_section_51_115 = chebyshev1_fo_section_altfp_multiply_64_0;
end
always @(*) begin
/* chebyshev1_fo_section: %51*/
/*   %115 = fmul double %a, 2.000000e+00*/
chebyshev1_fo_section_51_115_reg = chebyshev1_fo_section_3_4_reg;
end
always @(*) begin
chebyshev1_fo_section_51_116 = chebyshev1_fo_section_altfp_multiply_64_0;
end
always @(*) begin
/* chebyshev1_fo_section: %51*/
/*   %116 = fmul double %115, %si*/
chebyshev1_fo_section_51_116_reg = chebyshev1_fo_section_3_42_reg;
end
always @(*) begin
chebyshev1_fo_section_51_117 = chebyshev1_fo_section_altfp_multiply_64_0;
end
always @(*) begin
/* chebyshev1_fo_section: %51*/
/*   %117 = fmul double %116, %tetta_b*/
chebyshev1_fo_section_51_117_reg = chebyshev1_fo_section_3_8_reg;
end
always @(*) begin
chebyshev1_fo_section_51_118 = chebyshev1_fo_section_altfp_subtract_64_0;
end
always @(posedge clk) begin
/* chebyshev1_fo_section: %51*/
/*   %118 = fsub double %105, %117*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_248))
begin
chebyshev1_fo_section_51_118_reg <= chebyshev1_fo_section_51_118;
if (reset == 1'b0 && ^(chebyshev1_fo_section_51_118) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev1_fo_section_51_118_reg"); $finish; end
end
/* chebyshev1_fo_section: %51*/
/*   %118 = fsub double %105, %117*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_248))
begin
chebyshev1_fo_section_51_118_reg <= chebyshev1_fo_section_51_118;
if (reset == 1'b0 && ^(chebyshev1_fo_section_51_118) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev1_fo_section_51_118_reg"); $finish; end
end
/* chebyshev1_fo_section: %3*/
/*   %45 = fsub double %36, %44*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_80))
begin
chebyshev1_fo_section_51_118_reg <= chebyshev1_fo_section_3_45;
if (reset == 1'b0 && ^(chebyshev1_fo_section_3_45) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev1_fo_section_51_118_reg"); $finish; end
end
end
always @(*) begin
chebyshev1_fo_section_51_119 = chebyshev1_fo_section_altfp_add_64_0;
end
always @(*) begin
/* chebyshev1_fo_section: %51*/
/*   %119 = fadd double %118, 1.000000e+00*/
chebyshev1_fo_section_51_119_reg = chebyshev1_fo_section_3_16_reg;
end
always @(*) begin
chebyshev1_fo_section_51_120 = chebyshev1_fo_section_altfp_divide_64_0;
end
always @(*) begin
/* chebyshev1_fo_section: %51*/
/*   %120 = fdiv double %119, %D*/
chebyshev1_fo_section_51_120_reg = chebyshev1_fo_section_3_39_reg;
end
always @(*) begin
/* chebyshev1_fo_section: %51*/
/*   %121 = getelementptr inbounds %struct.TYPE_3__* %S, i32 0, i32 9*/
begin
chebyshev1_fo_section_51_121 = (arg_S + 52);
end
end
always @(posedge clk) begin
/* chebyshev1_fo_section: %51*/
/*   %121 = getelementptr inbounds %struct.TYPE_3__* %S, i32 0, i32 9*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_161))
begin
chebyshev1_fo_section_51_121_reg <= chebyshev1_fo_section_51_121;
if (reset == 1'b0 && ^(chebyshev1_fo_section_51_121) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev1_fo_section_51_121_reg"); $finish; end
end
end
always @(*) begin
/* chebyshev1_fo_section: %3*/
/*   %4 = fmul double %tetta_b, %tetta_b*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_3))
begin
chebyshev1_fo_section_altfp_multiply_64_0_op0 = arg_tetta_b;
end
/* chebyshev1_fo_section: %3*/
/*   %5 = fmul double %b, %b*/
else if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_4))
begin
chebyshev1_fo_section_altfp_multiply_64_0_op0 = arg_b;
end
/* chebyshev1_fo_section: %3*/
/*   %6 = fmul double %g0, %g0*/
else if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_5))
begin
chebyshev1_fo_section_altfp_multiply_64_0_op0 = arg_g0;
end
/* chebyshev1_fo_section: %3*/
/*   %11 = fmul double %g0, 2.000000e+00*/
else if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_6))
begin
chebyshev1_fo_section_altfp_multiply_64_0_op0 = arg_g0;
end
/* chebyshev1_fo_section: %3*/
/*   %20 = fmul double %c0, 2.000000e+00*/
else if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_7))
begin
chebyshev1_fo_section_altfp_multiply_64_0_op0 = arg_c0;
end
/* chebyshev1_fo_section: %3*/
/*   %33 = fmul double %a, %a*/
else if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_8))
begin
chebyshev1_fo_section_altfp_multiply_64_0_op0 = arg_a;
end
/* chebyshev1_fo_section: %3*/
/*   %34 = fmul double %c, %c*/
else if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_9))
begin
chebyshev1_fo_section_altfp_multiply_64_0_op0 = arg_c;
end
/* chebyshev1_fo_section: %3*/
/*   %42 = fmul double %a, 2.000000e+00*/
else if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_10))
begin
chebyshev1_fo_section_altfp_multiply_64_0_op0 = arg_a;
end
/* chebyshev1_fo_section: %3*/
/*   %7 = fmul double %6, %c*/
else if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_16))
begin
chebyshev1_fo_section_altfp_multiply_64_0_op0 = chebyshev1_fo_section_3_6;
end
/* chebyshev1_fo_section: %3*/
/*   %12 = fmul double %11, %b*/
else if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_17))
begin
chebyshev1_fo_section_altfp_multiply_64_0_op0 = chebyshev1_fo_section_3_11;
end
/* chebyshev1_fo_section: %3*/
/*   %8 = fmul double %7, %c*/
else if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_27))
begin
chebyshev1_fo_section_altfp_multiply_64_0_op0 = chebyshev1_fo_section_3_7;
end
/* chebyshev1_fo_section: %3*/
/*   %13 = fmul double %12, %si*/
else if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_28))
begin
chebyshev1_fo_section_altfp_multiply_64_0_op0 = chebyshev1_fo_section_3_12;
end
/* chebyshev1_fo_section: %3*/
/*   %14 = fmul double %13, %tetta_b*/
else if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_39))
begin
chebyshev1_fo_section_altfp_multiply_64_0_op0 = chebyshev1_fo_section_3_13;
end
/* chebyshev1_fo_section: %3*/
/*   %43 = fmul double %42, %si*/
else if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_40))
begin
chebyshev1_fo_section_altfp_multiply_64_0_op0 = chebyshev1_fo_section_3_42_reg;
end
/* chebyshev1_fo_section: %3*/
/*   %10 = fmul double %4, %9*/
else if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_52))
begin
chebyshev1_fo_section_altfp_multiply_64_0_op0 = chebyshev1_fo_section_3_4_reg;
end
/* chebyshev1_fo_section: %3*/
/*   %36 = fmul double %4, %35*/
else if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_53))
begin
chebyshev1_fo_section_altfp_multiply_64_0_op0 = chebyshev1_fo_section_3_4_reg;
end
/* chebyshev1_fo_section: %3*/
/*   %15 = fmul double %14, %tetta_b*/
else if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_54))
begin
chebyshev1_fo_section_altfp_multiply_64_0_op0 = chebyshev1_fo_section_3_14_reg;
end
/* chebyshev1_fo_section: %3*/
/*   %44 = fmul double %43, %tetta_b*/
else if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_55))
begin
chebyshev1_fo_section_altfp_multiply_64_0_op0 = chebyshev1_fo_section_3_43_reg;
end
/* chebyshev1_fo_section: %3*/
/*   %22 = fmul double %20, %21*/
else if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_77))
begin
chebyshev1_fo_section_altfp_multiply_64_0_op0 = chebyshev1_fo_section_3_20_reg;
end
/* chebyshev1_fo_section: %3*/
/*   %38 = fmul double %20, %37*/
else if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_78))
begin
chebyshev1_fo_section_altfp_multiply_64_0_op0 = chebyshev1_fo_section_3_20_reg;
end
/* chebyshev1_fo_section: %51*/
/*   %52 = fmul double %b, %b*/
else if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_161))
begin
chebyshev1_fo_section_altfp_multiply_64_0_op0 = arg_b;
end
/* chebyshev1_fo_section: %51*/
/*   %53 = fmul double %g0, %g0*/
else if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_162))
begin
chebyshev1_fo_section_altfp_multiply_64_0_op0 = arg_g0;
end
/* chebyshev1_fo_section: %51*/
/*   %59 = fmul double %g0, 2.000000e+00*/
else if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_163))
begin
chebyshev1_fo_section_altfp_multiply_64_0_op0 = arg_g0;
end
/* chebyshev1_fo_section: %51*/
/*   %67 = fmul double %c0, -4.000000e+00*/
else if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_164))
begin
chebyshev1_fo_section_altfp_multiply_64_0_op0 = arg_c0;
end
/* chebyshev1_fo_section: %51*/
/*   %68 = fmul double %g0, %b*/
else if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_165))
begin
chebyshev1_fo_section_altfp_multiply_64_0_op0 = arg_g0;
end
/* chebyshev1_fo_section: %51*/
/*   %76 = fmul double %c0, 2.000000e+00*/
else if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_166))
begin
chebyshev1_fo_section_altfp_multiply_64_0_op0 = arg_c0;
end
/* chebyshev1_fo_section: %51*/
/*   %94 = fmul double %a, %si*/
else if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_167))
begin
chebyshev1_fo_section_altfp_multiply_64_0_op0 = arg_a;
end
/* chebyshev1_fo_section: %51*/
/*   %101 = fmul double %a, %a*/
else if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_168))
begin
chebyshev1_fo_section_altfp_multiply_64_0_op0 = arg_a;
end
/* chebyshev1_fo_section: %51*/
/*   %102 = fmul double %c, %c*/
else if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_169))
begin
chebyshev1_fo_section_altfp_multiply_64_0_op0 = arg_c;
end
/* chebyshev1_fo_section: %51*/
/*   %115 = fmul double %a, 2.000000e+00*/
else if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_170))
begin
chebyshev1_fo_section_altfp_multiply_64_0_op0 = arg_a;
end
/* chebyshev1_fo_section: %51*/
/*   %54 = fmul double %53, %c*/
else if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_173))
begin
chebyshev1_fo_section_altfp_multiply_64_0_op0 = chebyshev1_fo_section_51_53;
end
/* chebyshev1_fo_section: %51*/
/*   %55 = fmul double %54, %c*/
else if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_184))
begin
chebyshev1_fo_section_altfp_multiply_64_0_op0 = chebyshev1_fo_section_51_54;
end
/* chebyshev1_fo_section: %51*/
/*   %60 = fmul double %59, %b*/
else if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_185))
begin
chebyshev1_fo_section_altfp_multiply_64_0_op0 = chebyshev1_fo_section_51_59_reg;
end
/* chebyshev1_fo_section: %51*/
/*   %77 = fmul double %76, %c0*/
else if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_186))
begin
chebyshev1_fo_section_altfp_multiply_64_0_op0 = chebyshev1_fo_section_51_76_reg;
end
/* chebyshev1_fo_section: %51*/
/*   %69 = fmul double %68, %si*/
else if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_187))
begin
chebyshev1_fo_section_altfp_multiply_64_0_op0 = chebyshev1_fo_section_51_68_reg;
end
/* chebyshev1_fo_section: %51*/
/*   %57 = fmul double %56, %tetta_b*/
else if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_209))
begin
chebyshev1_fo_section_altfp_multiply_64_0_op0 = chebyshev1_fo_section_51_56;
end
/* chebyshev1_fo_section: %51*/
/*   %61 = fmul double %60, %si*/
else if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_210))
begin
chebyshev1_fo_section_altfp_multiply_64_0_op0 = chebyshev1_fo_section_51_60_reg;
end
/* chebyshev1_fo_section: %51*/
/*   %104 = fmul double %103, %tetta_b*/
else if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_211))
begin
chebyshev1_fo_section_altfp_multiply_64_0_op0 = chebyshev1_fo_section_51_103_reg;
end
/* chebyshev1_fo_section: %51*/
/*   %116 = fmul double %115, %si*/
else if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_212))
begin
chebyshev1_fo_section_altfp_multiply_64_0_op0 = chebyshev1_fo_section_51_115_reg;
end
/* chebyshev1_fo_section: %51*/
/*   %70 = fmul double %69, %tetta_b*/
else if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_213))
begin
chebyshev1_fo_section_altfp_multiply_64_0_op0 = chebyshev1_fo_section_51_69_reg;
end
/* chebyshev1_fo_section: %51*/
/*   %95 = fmul double %94, %tetta_b*/
else if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_214))
begin
chebyshev1_fo_section_altfp_multiply_64_0_op0 = chebyshev1_fo_section_51_94_reg;
end
/* chebyshev1_fo_section: %51*/
/*   %58 = fmul double %57, %tetta_b*/
else if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_220))
begin
chebyshev1_fo_section_altfp_multiply_64_0_op0 = chebyshev1_fo_section_51_57;
end
/* chebyshev1_fo_section: %51*/
/*   %62 = fmul double %61, %tetta_b*/
else if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_221))
begin
chebyshev1_fo_section_altfp_multiply_64_0_op0 = chebyshev1_fo_section_51_61;
end
/* chebyshev1_fo_section: %51*/
/*   %105 = fmul double %104, %tetta_b*/
else if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_222))
begin
chebyshev1_fo_section_altfp_multiply_64_0_op0 = chebyshev1_fo_section_51_104;
end
/* chebyshev1_fo_section: %51*/
/*   %117 = fmul double %116, %tetta_b*/
else if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_223))
begin
chebyshev1_fo_section_altfp_multiply_64_0_op0 = chebyshev1_fo_section_51_116;
end
/* chebyshev1_fo_section: %51*/
/*   %79 = fmul double %53, %78*/
else if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_224))
begin
chebyshev1_fo_section_altfp_multiply_64_0_op0 = chebyshev1_fo_section_51_53_reg;
end
/* chebyshev1_fo_section: %51*/
/*   %72 = fmul double %67, %71*/
else if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_238))
begin
chebyshev1_fo_section_altfp_multiply_64_0_op0 = chebyshev1_fo_section_51_67_reg;
end
/* chebyshev1_fo_section: %51*/
/*   %85 = fmul double %67, %84*/
else if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_239))
begin
chebyshev1_fo_section_altfp_multiply_64_0_op0 = chebyshev1_fo_section_51_67_reg;
end
/* chebyshev1_fo_section: %51*/
/*   %97 = fmul double %67, %96*/
else if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_240))
begin
chebyshev1_fo_section_altfp_multiply_64_0_op0 = chebyshev1_fo_section_51_67_reg;
end
/* chebyshev1_fo_section: %51*/
/*   %111 = fmul double %67, %110*/
else if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_241))
begin
chebyshev1_fo_section_altfp_multiply_64_0_op0 = chebyshev1_fo_section_51_67_reg;
end
/* chebyshev1_fo_section: %51*/
/*   %81 = fmul double %80, 2.000000e+00*/
else if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_249))
begin
chebyshev1_fo_section_altfp_multiply_64_0_op0 = chebyshev1_fo_section_51_80;
end
/* chebyshev1_fo_section: %51*/
/*   %107 = fmul double %106, 2.000000e+00*/
else /* if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_250)) */
begin
chebyshev1_fo_section_altfp_multiply_64_0_op0 = chebyshev1_fo_section_51_106;
end
end
always @(*) begin
/* chebyshev1_fo_section: %3*/
/*   %4 = fmul double %tetta_b, %tetta_b*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_3))
begin
chebyshev1_fo_section_altfp_multiply_64_0_op1 = arg_tetta_b;
end
/* chebyshev1_fo_section: %3*/
/*   %5 = fmul double %b, %b*/
else if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_4))
begin
chebyshev1_fo_section_altfp_multiply_64_0_op1 = arg_b;
end
/* chebyshev1_fo_section: %3*/
/*   %6 = fmul double %g0, %g0*/
else if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_5))
begin
chebyshev1_fo_section_altfp_multiply_64_0_op1 = arg_g0;
end
/* chebyshev1_fo_section: %3*/
/*   %11 = fmul double %g0, 2.000000e+00*/
else if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_6))
begin
chebyshev1_fo_section_altfp_multiply_64_0_op1 = 64'h4000000000000000;
end
/* chebyshev1_fo_section: %3*/
/*   %20 = fmul double %c0, 2.000000e+00*/
else if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_7))
begin
chebyshev1_fo_section_altfp_multiply_64_0_op1 = 64'h4000000000000000;
end
/* chebyshev1_fo_section: %3*/
/*   %33 = fmul double %a, %a*/
else if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_8))
begin
chebyshev1_fo_section_altfp_multiply_64_0_op1 = arg_a;
end
/* chebyshev1_fo_section: %3*/
/*   %34 = fmul double %c, %c*/
else if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_9))
begin
chebyshev1_fo_section_altfp_multiply_64_0_op1 = arg_c;
end
/* chebyshev1_fo_section: %3*/
/*   %42 = fmul double %a, 2.000000e+00*/
else if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_10))
begin
chebyshev1_fo_section_altfp_multiply_64_0_op1 = 64'h4000000000000000;
end
/* chebyshev1_fo_section: %3*/
/*   %7 = fmul double %6, %c*/
else if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_16))
begin
chebyshev1_fo_section_altfp_multiply_64_0_op1 = arg_c;
end
/* chebyshev1_fo_section: %3*/
/*   %12 = fmul double %11, %b*/
else if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_17))
begin
chebyshev1_fo_section_altfp_multiply_64_0_op1 = arg_b;
end
/* chebyshev1_fo_section: %3*/
/*   %8 = fmul double %7, %c*/
else if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_27))
begin
chebyshev1_fo_section_altfp_multiply_64_0_op1 = arg_c;
end
/* chebyshev1_fo_section: %3*/
/*   %13 = fmul double %12, %si*/
else if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_28))
begin
chebyshev1_fo_section_altfp_multiply_64_0_op1 = arg_si;
end
/* chebyshev1_fo_section: %3*/
/*   %14 = fmul double %13, %tetta_b*/
else if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_39))
begin
chebyshev1_fo_section_altfp_multiply_64_0_op1 = arg_tetta_b;
end
/* chebyshev1_fo_section: %3*/
/*   %43 = fmul double %42, %si*/
else if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_40))
begin
chebyshev1_fo_section_altfp_multiply_64_0_op1 = arg_si;
end
/* chebyshev1_fo_section: %3*/
/*   %10 = fmul double %4, %9*/
else if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_52))
begin
chebyshev1_fo_section_altfp_multiply_64_0_op1 = chebyshev1_fo_section_3_9;
end
/* chebyshev1_fo_section: %3*/
/*   %36 = fmul double %4, %35*/
else if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_53))
begin
chebyshev1_fo_section_altfp_multiply_64_0_op1 = chebyshev1_fo_section_3_35;
end
/* chebyshev1_fo_section: %3*/
/*   %15 = fmul double %14, %tetta_b*/
else if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_54))
begin
chebyshev1_fo_section_altfp_multiply_64_0_op1 = arg_tetta_b;
end
/* chebyshev1_fo_section: %3*/
/*   %44 = fmul double %43, %tetta_b*/
else if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_55))
begin
chebyshev1_fo_section_altfp_multiply_64_0_op1 = arg_tetta_b;
end
/* chebyshev1_fo_section: %3*/
/*   %22 = fmul double %20, %21*/
else if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_77))
begin
chebyshev1_fo_section_altfp_multiply_64_0_op1 = chebyshev1_fo_section_3_21;
end
/* chebyshev1_fo_section: %3*/
/*   %38 = fmul double %20, %37*/
else if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_78))
begin
chebyshev1_fo_section_altfp_multiply_64_0_op1 = chebyshev1_fo_section_3_37;
end
/* chebyshev1_fo_section: %51*/
/*   %52 = fmul double %b, %b*/
else if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_161))
begin
chebyshev1_fo_section_altfp_multiply_64_0_op1 = arg_b;
end
/* chebyshev1_fo_section: %51*/
/*   %53 = fmul double %g0, %g0*/
else if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_162))
begin
chebyshev1_fo_section_altfp_multiply_64_0_op1 = arg_g0;
end
/* chebyshev1_fo_section: %51*/
/*   %59 = fmul double %g0, 2.000000e+00*/
else if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_163))
begin
chebyshev1_fo_section_altfp_multiply_64_0_op1 = 64'h4000000000000000;
end
/* chebyshev1_fo_section: %51*/
/*   %67 = fmul double %c0, -4.000000e+00*/
else if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_164))
begin
chebyshev1_fo_section_altfp_multiply_64_0_op1 = 64'hC010000000000000;
end
/* chebyshev1_fo_section: %51*/
/*   %68 = fmul double %g0, %b*/
else if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_165))
begin
chebyshev1_fo_section_altfp_multiply_64_0_op1 = arg_b;
end
/* chebyshev1_fo_section: %51*/
/*   %76 = fmul double %c0, 2.000000e+00*/
else if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_166))
begin
chebyshev1_fo_section_altfp_multiply_64_0_op1 = 64'h4000000000000000;
end
/* chebyshev1_fo_section: %51*/
/*   %94 = fmul double %a, %si*/
else if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_167))
begin
chebyshev1_fo_section_altfp_multiply_64_0_op1 = arg_si;
end
/* chebyshev1_fo_section: %51*/
/*   %101 = fmul double %a, %a*/
else if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_168))
begin
chebyshev1_fo_section_altfp_multiply_64_0_op1 = arg_a;
end
/* chebyshev1_fo_section: %51*/
/*   %102 = fmul double %c, %c*/
else if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_169))
begin
chebyshev1_fo_section_altfp_multiply_64_0_op1 = arg_c;
end
/* chebyshev1_fo_section: %51*/
/*   %115 = fmul double %a, 2.000000e+00*/
else if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_170))
begin
chebyshev1_fo_section_altfp_multiply_64_0_op1 = 64'h4000000000000000;
end
/* chebyshev1_fo_section: %51*/
/*   %54 = fmul double %53, %c*/
else if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_173))
begin
chebyshev1_fo_section_altfp_multiply_64_0_op1 = arg_c;
end
/* chebyshev1_fo_section: %51*/
/*   %55 = fmul double %54, %c*/
else if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_184))
begin
chebyshev1_fo_section_altfp_multiply_64_0_op1 = arg_c;
end
/* chebyshev1_fo_section: %51*/
/*   %60 = fmul double %59, %b*/
else if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_185))
begin
chebyshev1_fo_section_altfp_multiply_64_0_op1 = arg_b;
end
/* chebyshev1_fo_section: %51*/
/*   %77 = fmul double %76, %c0*/
else if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_186))
begin
chebyshev1_fo_section_altfp_multiply_64_0_op1 = arg_c0;
end
/* chebyshev1_fo_section: %51*/
/*   %69 = fmul double %68, %si*/
else if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_187))
begin
chebyshev1_fo_section_altfp_multiply_64_0_op1 = arg_si;
end
/* chebyshev1_fo_section: %51*/
/*   %57 = fmul double %56, %tetta_b*/
else if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_209))
begin
chebyshev1_fo_section_altfp_multiply_64_0_op1 = arg_tetta_b;
end
/* chebyshev1_fo_section: %51*/
/*   %61 = fmul double %60, %si*/
else if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_210))
begin
chebyshev1_fo_section_altfp_multiply_64_0_op1 = arg_si;
end
/* chebyshev1_fo_section: %51*/
/*   %104 = fmul double %103, %tetta_b*/
else if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_211))
begin
chebyshev1_fo_section_altfp_multiply_64_0_op1 = arg_tetta_b;
end
/* chebyshev1_fo_section: %51*/
/*   %116 = fmul double %115, %si*/
else if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_212))
begin
chebyshev1_fo_section_altfp_multiply_64_0_op1 = arg_si;
end
/* chebyshev1_fo_section: %51*/
/*   %70 = fmul double %69, %tetta_b*/
else if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_213))
begin
chebyshev1_fo_section_altfp_multiply_64_0_op1 = arg_tetta_b;
end
/* chebyshev1_fo_section: %51*/
/*   %95 = fmul double %94, %tetta_b*/
else if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_214))
begin
chebyshev1_fo_section_altfp_multiply_64_0_op1 = arg_tetta_b;
end
/* chebyshev1_fo_section: %51*/
/*   %58 = fmul double %57, %tetta_b*/
else if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_220))
begin
chebyshev1_fo_section_altfp_multiply_64_0_op1 = arg_tetta_b;
end
/* chebyshev1_fo_section: %51*/
/*   %62 = fmul double %61, %tetta_b*/
else if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_221))
begin
chebyshev1_fo_section_altfp_multiply_64_0_op1 = arg_tetta_b;
end
/* chebyshev1_fo_section: %51*/
/*   %105 = fmul double %104, %tetta_b*/
else if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_222))
begin
chebyshev1_fo_section_altfp_multiply_64_0_op1 = arg_tetta_b;
end
/* chebyshev1_fo_section: %51*/
/*   %117 = fmul double %116, %tetta_b*/
else if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_223))
begin
chebyshev1_fo_section_altfp_multiply_64_0_op1 = arg_tetta_b;
end
/* chebyshev1_fo_section: %51*/
/*   %79 = fmul double %53, %78*/
else if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_224))
begin
chebyshev1_fo_section_altfp_multiply_64_0_op1 = chebyshev1_fo_section_51_78_reg;
end
/* chebyshev1_fo_section: %51*/
/*   %72 = fmul double %67, %71*/
else if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_238))
begin
chebyshev1_fo_section_altfp_multiply_64_0_op1 = chebyshev1_fo_section_51_71;
end
/* chebyshev1_fo_section: %51*/
/*   %85 = fmul double %67, %84*/
else if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_239))
begin
chebyshev1_fo_section_altfp_multiply_64_0_op1 = chebyshev1_fo_section_51_84_reg;
end
/* chebyshev1_fo_section: %51*/
/*   %97 = fmul double %67, %96*/
else if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_240))
begin
chebyshev1_fo_section_altfp_multiply_64_0_op1 = chebyshev1_fo_section_51_96_reg;
end
/* chebyshev1_fo_section: %51*/
/*   %111 = fmul double %67, %110*/
else if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_241))
begin
chebyshev1_fo_section_altfp_multiply_64_0_op1 = chebyshev1_fo_section_51_110_reg;
end
/* chebyshev1_fo_section: %51*/
/*   %81 = fmul double %80, 2.000000e+00*/
else if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_249))
begin
chebyshev1_fo_section_altfp_multiply_64_0_op1 = 64'h4000000000000000;
end
/* chebyshev1_fo_section: %51*/
/*   %107 = fmul double %106, 2.000000e+00*/
else /* if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_250)) */
begin
chebyshev1_fo_section_altfp_multiply_64_0_op1 = 64'h4000000000000000;
end
end
always @(*) begin
altfp_chebyshev1_fo_section_3_12_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
chebyshev1_fo_section_altfp_multiply_64_0 = altfp_multiplier64_chebyshev1_fo_section_3_12_out;
end
always @(*) begin
/* chebyshev1_fo_section: %3*/
/*   %9 = fadd double %5, %8*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_38))
begin
chebyshev1_fo_section_altfp_add_64_0_op0 = chebyshev1_fo_section_3_5_reg;
end
/* chebyshev1_fo_section: %3*/
/*   %35 = fadd double %33, %34*/
else if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_39))
begin
chebyshev1_fo_section_altfp_add_64_0_op0 = chebyshev1_fo_section_3_33_reg;
end
/* chebyshev1_fo_section: %3*/
/*   %37 = fadd double %36, -1.000000e+00*/
else if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_64))
begin
chebyshev1_fo_section_altfp_add_64_0_op0 = chebyshev1_fo_section_3_36;
end
/* chebyshev1_fo_section: %3*/
/*   %16 = fadd double %10, %15*/
else if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_65))
begin
chebyshev1_fo_section_altfp_add_64_0_op0 = chebyshev1_fo_section_3_10_reg;
end
/* chebyshev1_fo_section: %3*/
/*   %17 = fadd double %16, %6*/
else if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_79))
begin
chebyshev1_fo_section_altfp_add_64_0_op0 = chebyshev1_fo_section_3_16;
end
/* chebyshev1_fo_section: %3*/
/*   %27 = fadd double %26, %6*/
else if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_80))
begin
chebyshev1_fo_section_altfp_add_64_0_op0 = chebyshev1_fo_section_3_26_reg;
end
/* chebyshev1_fo_section: %3*/
/*   %46 = fadd double %45, 1.000000e+00*/
else if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_81))
begin
chebyshev1_fo_section_altfp_add_64_0_op0 = chebyshev1_fo_section_3_45_reg;
end
/* chebyshev1_fo_section: %51*/
/*   %56 = fadd double %52, %55*/
else if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_195))
begin
chebyshev1_fo_section_altfp_add_64_0_op0 = chebyshev1_fo_section_51_52_reg;
end
/* chebyshev1_fo_section: %51*/
/*   %103 = fadd double %101, %102*/
else if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_196))
begin
chebyshev1_fo_section_altfp_add_64_0_op0 = chebyshev1_fo_section_51_101_reg;
end
/* chebyshev1_fo_section: %51*/
/*   %78 = fadd double %77, 1.000000e+00*/
else if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_197))
begin
chebyshev1_fo_section_altfp_add_64_0_op0 = chebyshev1_fo_section_51_77;
end
/* chebyshev1_fo_section: %51*/
/*   %71 = fadd double %53, %70*/
else if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_224))
begin
chebyshev1_fo_section_altfp_add_64_0_op0 = chebyshev1_fo_section_51_53_reg;
end
/* chebyshev1_fo_section: %51*/
/*   %96 = fadd double %95, 1.000000e+00*/
else if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_225))
begin
chebyshev1_fo_section_altfp_add_64_0_op0 = chebyshev1_fo_section_51_95;
end
/* chebyshev1_fo_section: %51*/
/*   %63 = fadd double %58, %62*/
else if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_232))
begin
chebyshev1_fo_section_altfp_add_64_0_op0 = chebyshev1_fo_section_51_58_reg;
end
/* chebyshev1_fo_section: %51*/
/*   %64 = fadd double %63, %53*/
else if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_246))
begin
chebyshev1_fo_section_altfp_add_64_0_op0 = chebyshev1_fo_section_51_63;
end
/* chebyshev1_fo_section: %51*/
/*   %90 = fadd double %89, %53*/
else if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_247))
begin
chebyshev1_fo_section_altfp_add_64_0_op0 = chebyshev1_fo_section_51_89_reg;
end
/* chebyshev1_fo_section: %51*/
/*   %119 = fadd double %118, 1.000000e+00*/
else /* if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_248)) */
begin
chebyshev1_fo_section_altfp_add_64_0_op0 = chebyshev1_fo_section_51_118;
end
end
always @(*) begin
/* chebyshev1_fo_section: %3*/
/*   %9 = fadd double %5, %8*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_38))
begin
chebyshev1_fo_section_altfp_add_64_0_op1 = chebyshev1_fo_section_3_8;
end
/* chebyshev1_fo_section: %3*/
/*   %35 = fadd double %33, %34*/
else if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_39))
begin
chebyshev1_fo_section_altfp_add_64_0_op1 = chebyshev1_fo_section_3_34_reg;
end
/* chebyshev1_fo_section: %3*/
/*   %37 = fadd double %36, -1.000000e+00*/
else if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_64))
begin
chebyshev1_fo_section_altfp_add_64_0_op1 = 64'hBFF0000000000000;
end
/* chebyshev1_fo_section: %3*/
/*   %16 = fadd double %10, %15*/
else if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_65))
begin
chebyshev1_fo_section_altfp_add_64_0_op1 = chebyshev1_fo_section_3_15;
end
/* chebyshev1_fo_section: %3*/
/*   %17 = fadd double %16, %6*/
else if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_79))
begin
chebyshev1_fo_section_altfp_add_64_0_op1 = chebyshev1_fo_section_3_6_reg;
end
/* chebyshev1_fo_section: %3*/
/*   %27 = fadd double %26, %6*/
else if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_80))
begin
chebyshev1_fo_section_altfp_add_64_0_op1 = chebyshev1_fo_section_3_6_reg;
end
/* chebyshev1_fo_section: %3*/
/*   %46 = fadd double %45, 1.000000e+00*/
else if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_81))
begin
chebyshev1_fo_section_altfp_add_64_0_op1 = 64'h3FF0000000000000;
end
/* chebyshev1_fo_section: %51*/
/*   %56 = fadd double %52, %55*/
else if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_195))
begin
chebyshev1_fo_section_altfp_add_64_0_op1 = chebyshev1_fo_section_51_55;
end
/* chebyshev1_fo_section: %51*/
/*   %103 = fadd double %101, %102*/
else if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_196))
begin
chebyshev1_fo_section_altfp_add_64_0_op1 = chebyshev1_fo_section_51_102_reg;
end
/* chebyshev1_fo_section: %51*/
/*   %78 = fadd double %77, 1.000000e+00*/
else if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_197))
begin
chebyshev1_fo_section_altfp_add_64_0_op1 = 64'h3FF0000000000000;
end
/* chebyshev1_fo_section: %51*/
/*   %71 = fadd double %53, %70*/
else if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_224))
begin
chebyshev1_fo_section_altfp_add_64_0_op1 = chebyshev1_fo_section_51_70;
end
/* chebyshev1_fo_section: %51*/
/*   %96 = fadd double %95, 1.000000e+00*/
else if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_225))
begin
chebyshev1_fo_section_altfp_add_64_0_op1 = 64'h3FF0000000000000;
end
/* chebyshev1_fo_section: %51*/
/*   %63 = fadd double %58, %62*/
else if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_232))
begin
chebyshev1_fo_section_altfp_add_64_0_op1 = chebyshev1_fo_section_51_62;
end
/* chebyshev1_fo_section: %51*/
/*   %64 = fadd double %63, %53*/
else if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_246))
begin
chebyshev1_fo_section_altfp_add_64_0_op1 = chebyshev1_fo_section_51_53_reg;
end
/* chebyshev1_fo_section: %51*/
/*   %90 = fadd double %89, %53*/
else if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_247))
begin
chebyshev1_fo_section_altfp_add_64_0_op1 = chebyshev1_fo_section_51_53_reg;
end
/* chebyshev1_fo_section: %51*/
/*   %119 = fadd double %118, 1.000000e+00*/
else /* if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_248)) */
begin
chebyshev1_fo_section_altfp_add_64_0_op1 = 64'h3FF0000000000000;
end
end
always @(*) begin
altfp_chebyshev1_fo_section_3_16_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
chebyshev1_fo_section_altfp_add_64_0 = altfp_adder64_chebyshev1_fo_section_3_16_out;
end
always @(*) begin
/* chebyshev1_fo_section: %3*/
/*   %23 = fdiv double %22, %D*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_88))
begin
chebyshev1_fo_section_altfp_divide_64_0_op0 = chebyshev1_fo_section_3_22;
end
/* chebyshev1_fo_section: %3*/
/*   %39 = fdiv double %38, %D*/
else if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_89))
begin
chebyshev1_fo_section_altfp_divide_64_0_op0 = chebyshev1_fo_section_3_38;
end
/* chebyshev1_fo_section: %3*/
/*   %18 = fdiv double %17, %D*/
else if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_93))
begin
chebyshev1_fo_section_altfp_divide_64_0_op0 = chebyshev1_fo_section_3_17;
end
/* chebyshev1_fo_section: %3*/
/*   %28 = fdiv double %27, %D*/
else if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_94))
begin
chebyshev1_fo_section_altfp_divide_64_0_op0 = chebyshev1_fo_section_3_27;
end
/* chebyshev1_fo_section: %3*/
/*   %47 = fdiv double %46, %D*/
else if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_95))
begin
chebyshev1_fo_section_altfp_divide_64_0_op0 = chebyshev1_fo_section_3_46;
end
/* chebyshev1_fo_section: %51*/
/*   %73 = fdiv double %72, %D*/
else if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_249))
begin
chebyshev1_fo_section_altfp_divide_64_0_op0 = chebyshev1_fo_section_51_72;
end
/* chebyshev1_fo_section: %51*/
/*   %86 = fdiv double %85, %D*/
else if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_250))
begin
chebyshev1_fo_section_altfp_divide_64_0_op0 = chebyshev1_fo_section_51_85;
end
/* chebyshev1_fo_section: %51*/
/*   %98 = fdiv double %97, %D*/
else if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_251))
begin
chebyshev1_fo_section_altfp_divide_64_0_op0 = chebyshev1_fo_section_51_97;
end
/* chebyshev1_fo_section: %51*/
/*   %112 = fdiv double %111, %D*/
else if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_252))
begin
chebyshev1_fo_section_altfp_divide_64_0_op0 = chebyshev1_fo_section_51_111;
end
/* chebyshev1_fo_section: %51*/
/*   %65 = fdiv double %64, %D*/
else if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_260))
begin
chebyshev1_fo_section_altfp_divide_64_0_op0 = chebyshev1_fo_section_51_64;
end
/* chebyshev1_fo_section: %51*/
/*   %82 = fdiv double %81, %D*/
else if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_261))
begin
chebyshev1_fo_section_altfp_divide_64_0_op0 = chebyshev1_fo_section_51_81_reg;
end
/* chebyshev1_fo_section: %51*/
/*   %91 = fdiv double %90, %D*/
else if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_262))
begin
chebyshev1_fo_section_altfp_divide_64_0_op0 = chebyshev1_fo_section_51_90_reg;
end
/* chebyshev1_fo_section: %51*/
/*   %108 = fdiv double %107, %D*/
else if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_263))
begin
chebyshev1_fo_section_altfp_divide_64_0_op0 = chebyshev1_fo_section_51_107_reg;
end
/* chebyshev1_fo_section: %51*/
/*   %120 = fdiv double %119, %D*/
else /* if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_264)) */
begin
chebyshev1_fo_section_altfp_divide_64_0_op0 = chebyshev1_fo_section_51_119_reg;
end
end
always @(*) begin
/* chebyshev1_fo_section: %3*/
/*   %23 = fdiv double %22, %D*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_88))
begin
chebyshev1_fo_section_altfp_divide_64_0_op1 = arg_D;
end
/* chebyshev1_fo_section: %3*/
/*   %39 = fdiv double %38, %D*/
else if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_89))
begin
chebyshev1_fo_section_altfp_divide_64_0_op1 = arg_D;
end
/* chebyshev1_fo_section: %3*/
/*   %18 = fdiv double %17, %D*/
else if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_93))
begin
chebyshev1_fo_section_altfp_divide_64_0_op1 = arg_D;
end
/* chebyshev1_fo_section: %3*/
/*   %28 = fdiv double %27, %D*/
else if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_94))
begin
chebyshev1_fo_section_altfp_divide_64_0_op1 = arg_D;
end
/* chebyshev1_fo_section: %3*/
/*   %47 = fdiv double %46, %D*/
else if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_95))
begin
chebyshev1_fo_section_altfp_divide_64_0_op1 = arg_D;
end
/* chebyshev1_fo_section: %51*/
/*   %73 = fdiv double %72, %D*/
else if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_249))
begin
chebyshev1_fo_section_altfp_divide_64_0_op1 = arg_D;
end
/* chebyshev1_fo_section: %51*/
/*   %86 = fdiv double %85, %D*/
else if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_250))
begin
chebyshev1_fo_section_altfp_divide_64_0_op1 = arg_D;
end
/* chebyshev1_fo_section: %51*/
/*   %98 = fdiv double %97, %D*/
else if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_251))
begin
chebyshev1_fo_section_altfp_divide_64_0_op1 = arg_D;
end
/* chebyshev1_fo_section: %51*/
/*   %112 = fdiv double %111, %D*/
else if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_252))
begin
chebyshev1_fo_section_altfp_divide_64_0_op1 = arg_D;
end
/* chebyshev1_fo_section: %51*/
/*   %65 = fdiv double %64, %D*/
else if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_260))
begin
chebyshev1_fo_section_altfp_divide_64_0_op1 = arg_D;
end
/* chebyshev1_fo_section: %51*/
/*   %82 = fdiv double %81, %D*/
else if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_261))
begin
chebyshev1_fo_section_altfp_divide_64_0_op1 = arg_D;
end
/* chebyshev1_fo_section: %51*/
/*   %91 = fdiv double %90, %D*/
else if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_262))
begin
chebyshev1_fo_section_altfp_divide_64_0_op1 = arg_D;
end
/* chebyshev1_fo_section: %51*/
/*   %108 = fdiv double %107, %D*/
else if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_263))
begin
chebyshev1_fo_section_altfp_divide_64_0_op1 = arg_D;
end
/* chebyshev1_fo_section: %51*/
/*   %120 = fdiv double %119, %D*/
else /* if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_264)) */
begin
chebyshev1_fo_section_altfp_divide_64_0_op1 = arg_D;
end
end
always @(*) begin
altfp_chebyshev1_fo_section_3_18_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
chebyshev1_fo_section_altfp_divide_64_0 = altfp_divider64_chebyshev1_fo_section_3_18_out;
end
always @(*) begin
/* chebyshev1_fo_section: %3*/
/*   %24 = fptosi double %23 to i32*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_149))
begin
chebyshev1_fo_section_altfp_fptosi_64_0_op0 = chebyshev1_fo_section_3_23;
end
/* chebyshev1_fo_section: %3*/
/*   %40 = fptosi double %39 to i32*/
else if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_150))
begin
chebyshev1_fo_section_altfp_fptosi_64_0_op0 = chebyshev1_fo_section_3_39;
end
/* chebyshev1_fo_section: %51*/
/*   %74 = fptosi double %73 to i32*/
else if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_310))
begin
chebyshev1_fo_section_altfp_fptosi_64_0_op0 = chebyshev1_fo_section_51_73;
end
/* chebyshev1_fo_section: %51*/
/*   %87 = fptosi double %86 to i32*/
else if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_311))
begin
chebyshev1_fo_section_altfp_fptosi_64_0_op0 = chebyshev1_fo_section_51_86;
end
/* chebyshev1_fo_section: %51*/
/*   %99 = fptosi double %98 to i32*/
else if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_312))
begin
chebyshev1_fo_section_altfp_fptosi_64_0_op0 = chebyshev1_fo_section_51_98;
end
/* chebyshev1_fo_section: %51*/
/*   %113 = fptosi double %112 to i32*/
else /* if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_313)) */
begin
chebyshev1_fo_section_altfp_fptosi_64_0_op0 = chebyshev1_fo_section_51_112;
end
end
always @(*) begin
altfp_chebyshev1_fo_section_3_24_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
chebyshev1_fo_section_altfp_fptosi_64_0 = altfp_fptosi64_chebyshev1_fo_section_3_24_out;
end
always @(*) begin
/* chebyshev1_fo_section: %3*/
/*   %21 = fsub double %10, %6*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_63))
begin
chebyshev1_fo_section_altfp_subtract_64_0_op0 = chebyshev1_fo_section_3_10;
end
/* chebyshev1_fo_section: %3*/
/*   %26 = fsub double %10, %14*/
else if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_64))
begin
chebyshev1_fo_section_altfp_subtract_64_0_op0 = chebyshev1_fo_section_3_10_reg;
end
/* chebyshev1_fo_section: %3*/
/*   %45 = fsub double %36, %44*/
else if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_66))
begin
chebyshev1_fo_section_altfp_subtract_64_0_op0 = chebyshev1_fo_section_3_36_reg;
end
/* chebyshev1_fo_section: %51*/
/*   %84 = fsub double %53, %70*/
else if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_224))
begin
chebyshev1_fo_section_altfp_subtract_64_0_op0 = chebyshev1_fo_section_51_53_reg;
end
/* chebyshev1_fo_section: %51*/
/*   %110 = fsub double 1.000000e+00, %95*/
else if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_225))
begin
chebyshev1_fo_section_altfp_subtract_64_0_op0 = 64'h3FF0000000000000;
end
/* chebyshev1_fo_section: %51*/
/*   %89 = fsub double %58, %62*/
else if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_232))
begin
chebyshev1_fo_section_altfp_subtract_64_0_op0 = chebyshev1_fo_section_51_58_reg;
end
/* chebyshev1_fo_section: %51*/
/*   %118 = fsub double %105, %117*/
else if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_234))
begin
chebyshev1_fo_section_altfp_subtract_64_0_op0 = chebyshev1_fo_section_51_105_reg;
end
/* chebyshev1_fo_section: %51*/
/*   %80 = fsub double %79, %58*/
else if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_235))
begin
chebyshev1_fo_section_altfp_subtract_64_0_op0 = chebyshev1_fo_section_51_79;
end
/* chebyshev1_fo_section: %51*/
/*   %106 = fsub double %78, %105*/
else /* if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_236)) */
begin
chebyshev1_fo_section_altfp_subtract_64_0_op0 = chebyshev1_fo_section_51_78_reg;
end
end
always @(*) begin
/* chebyshev1_fo_section: %3*/
/*   %21 = fsub double %10, %6*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_63))
begin
chebyshev1_fo_section_altfp_subtract_64_0_op1 = chebyshev1_fo_section_3_6_reg;
end
/* chebyshev1_fo_section: %3*/
/*   %26 = fsub double %10, %14*/
else if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_64))
begin
chebyshev1_fo_section_altfp_subtract_64_0_op1 = chebyshev1_fo_section_3_14_reg;
end
/* chebyshev1_fo_section: %3*/
/*   %45 = fsub double %36, %44*/
else if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_66))
begin
chebyshev1_fo_section_altfp_subtract_64_0_op1 = chebyshev1_fo_section_3_44;
end
/* chebyshev1_fo_section: %51*/
/*   %84 = fsub double %53, %70*/
else if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_224))
begin
chebyshev1_fo_section_altfp_subtract_64_0_op1 = chebyshev1_fo_section_51_70;
end
/* chebyshev1_fo_section: %51*/
/*   %110 = fsub double 1.000000e+00, %95*/
else if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_225))
begin
chebyshev1_fo_section_altfp_subtract_64_0_op1 = chebyshev1_fo_section_51_95;
end
/* chebyshev1_fo_section: %51*/
/*   %89 = fsub double %58, %62*/
else if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_232))
begin
chebyshev1_fo_section_altfp_subtract_64_0_op1 = chebyshev1_fo_section_51_62;
end
/* chebyshev1_fo_section: %51*/
/*   %118 = fsub double %105, %117*/
else if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_234))
begin
chebyshev1_fo_section_altfp_subtract_64_0_op1 = chebyshev1_fo_section_51_117;
end
/* chebyshev1_fo_section: %51*/
/*   %80 = fsub double %79, %58*/
else if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_235))
begin
chebyshev1_fo_section_altfp_subtract_64_0_op1 = chebyshev1_fo_section_51_58_reg;
end
/* chebyshev1_fo_section: %51*/
/*   %106 = fsub double %78, %105*/
else /* if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_236)) */
begin
chebyshev1_fo_section_altfp_subtract_64_0_op1 = chebyshev1_fo_section_51_105_reg;
end
end
always @(*) begin
altfp_chebyshev1_fo_section_3_21_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
chebyshev1_fo_section_altfp_subtract_64_0 = altfp_subtractor64_chebyshev1_fo_section_3_21_out;
end
always @(*) begin
altfp_chebyshev1_fo_section_0_1_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
altfp_chebyshev1_fo_section_0_2_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
altfp_chebyshev1_fo_section_3_4_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
altfp_chebyshev1_fo_section_3_5_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
altfp_chebyshev1_fo_section_3_6_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
altfp_chebyshev1_fo_section_3_11_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
altfp_chebyshev1_fo_section_3_20_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
altfp_chebyshev1_fo_section_3_33_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
altfp_chebyshev1_fo_section_3_34_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
altfp_chebyshev1_fo_section_3_42_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
altfp_chebyshev1_fo_section_3_7_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
altfp_chebyshev1_fo_section_3_8_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
altfp_chebyshev1_fo_section_3_13_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
altfp_chebyshev1_fo_section_3_9_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
altfp_chebyshev1_fo_section_3_14_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
altfp_chebyshev1_fo_section_3_35_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
altfp_chebyshev1_fo_section_3_43_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
altfp_chebyshev1_fo_section_3_10_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
altfp_chebyshev1_fo_section_3_36_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
altfp_chebyshev1_fo_section_3_15_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
altfp_chebyshev1_fo_section_3_44_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
altfp_chebyshev1_fo_section_3_26_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
altfp_chebyshev1_fo_section_3_37_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
altfp_chebyshev1_fo_section_3_45_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
altfp_chebyshev1_fo_section_3_22_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
altfp_chebyshev1_fo_section_3_38_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
altfp_chebyshev1_fo_section_3_17_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
altfp_chebyshev1_fo_section_3_27_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
altfp_chebyshev1_fo_section_3_46_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
altfp_chebyshev1_fo_section_3_23_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
altfp_chebyshev1_fo_section_3_39_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
altfp_chebyshev1_fo_section_3_28_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
altfp_chebyshev1_fo_section_3_47_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
altfp_chebyshev1_fo_section_3_40_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
altfp_chebyshev1_fo_section_51_52_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
altfp_chebyshev1_fo_section_51_53_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
altfp_chebyshev1_fo_section_51_59_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
altfp_chebyshev1_fo_section_51_67_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
altfp_chebyshev1_fo_section_51_68_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
altfp_chebyshev1_fo_section_51_76_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
altfp_chebyshev1_fo_section_51_94_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
altfp_chebyshev1_fo_section_51_101_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
altfp_chebyshev1_fo_section_51_102_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
altfp_chebyshev1_fo_section_51_115_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
altfp_chebyshev1_fo_section_51_54_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
altfp_chebyshev1_fo_section_51_55_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
altfp_chebyshev1_fo_section_51_60_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
altfp_chebyshev1_fo_section_51_77_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
altfp_chebyshev1_fo_section_51_69_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
altfp_chebyshev1_fo_section_51_56_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
altfp_chebyshev1_fo_section_51_103_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
altfp_chebyshev1_fo_section_51_78_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
altfp_chebyshev1_fo_section_51_57_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
altfp_chebyshev1_fo_section_51_61_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
altfp_chebyshev1_fo_section_51_104_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
altfp_chebyshev1_fo_section_51_116_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
altfp_chebyshev1_fo_section_51_70_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
altfp_chebyshev1_fo_section_51_95_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
altfp_chebyshev1_fo_section_51_58_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
altfp_chebyshev1_fo_section_51_62_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
altfp_chebyshev1_fo_section_51_105_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
altfp_chebyshev1_fo_section_51_117_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
altfp_chebyshev1_fo_section_51_71_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
altfp_chebyshev1_fo_section_51_79_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
altfp_chebyshev1_fo_section_51_84_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
altfp_chebyshev1_fo_section_51_96_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
altfp_chebyshev1_fo_section_51_110_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
altfp_chebyshev1_fo_section_51_63_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
altfp_chebyshev1_fo_section_51_89_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
altfp_chebyshev1_fo_section_51_118_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
altfp_chebyshev1_fo_section_51_80_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
altfp_chebyshev1_fo_section_51_106_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
altfp_chebyshev1_fo_section_51_72_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
altfp_chebyshev1_fo_section_51_85_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
altfp_chebyshev1_fo_section_51_97_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
altfp_chebyshev1_fo_section_51_111_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
altfp_chebyshev1_fo_section_51_64_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
altfp_chebyshev1_fo_section_51_90_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
altfp_chebyshev1_fo_section_51_119_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
altfp_chebyshev1_fo_section_51_73_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
altfp_chebyshev1_fo_section_51_81_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
altfp_chebyshev1_fo_section_51_86_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
altfp_chebyshev1_fo_section_51_107_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
altfp_chebyshev1_fo_section_51_98_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
altfp_chebyshev1_fo_section_51_112_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
altfp_chebyshev1_fo_section_51_65_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
altfp_chebyshev1_fo_section_51_82_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
altfp_chebyshev1_fo_section_51_91_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
altfp_chebyshev1_fo_section_51_108_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
altfp_chebyshev1_fo_section_51_120_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
altfp_chebyshev1_fo_section_51_74_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
altfp_chebyshev1_fo_section_51_87_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
altfp_chebyshev1_fo_section_51_99_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
altfp_chebyshev1_fo_section_51_113_en = (memory_controller_waitrequest == 1'd0);
end
always @(posedge clk) begin
if ((cur_state == LEGUP_0))
begin
finish <= 1'd0;
if (reset == 1'b0 && ^(1'd0) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to finish"); $finish; end
end
/* chebyshev1_fo_section: %122*/
/*   ret void*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_122_327))
begin
finish <= (memory_controller_waitrequest == 1'd0);
if (reset == 1'b0 && ^((memory_controller_waitrequest == 1'd0)) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to finish"); $finish; end
end
end
always @(*) begin
memory_controller_enable_a = 1'd0;
if ((cur_state == LEGUP_0))
begin
memory_controller_enable_a = 1'd0;
end
/* chebyshev1_fo_section: %3*/
/*   store double %18, double* %19, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_154))
begin
memory_controller_enable_a = 1'd1;
end
/* chebyshev1_fo_section: %3*/
/*   store i32 %24, i32* %25, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_155))
begin
memory_controller_enable_a = 1'd1;
end
/* chebyshev1_fo_section: %3*/
/*   store i32 0, i32* %30, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_156))
begin
memory_controller_enable_a = 1'd1;
end
/* chebyshev1_fo_section: %3*/
/*   store i32 1, i32* %32, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_157))
begin
memory_controller_enable_a = 1'd1;
end
/* chebyshev1_fo_section: %3*/
/*   store double %47, double* %48, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_158))
begin
memory_controller_enable_a = 1'd1;
end
/* chebyshev1_fo_section: %51*/
/*   store i32 %87, i32* %88, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_317))
begin
memory_controller_enable_a = 1'd1;
end
/* chebyshev1_fo_section: %51*/
/*   store double %65, double* %66, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_321))
begin
memory_controller_enable_a = 1'd1;
end
/* chebyshev1_fo_section: %51*/
/*   store double %91, double* %92, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_323))
begin
memory_controller_enable_a = 1'd1;
end
/* chebyshev1_fo_section: %51*/
/*   store i32 %99, i32* %100, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_324))
begin
memory_controller_enable_a = 1'd1;
end
/* chebyshev1_fo_section: %51*/
/*   store i32 %113, i32* %114, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_325))
begin
memory_controller_enable_a = 1'd1;
end
end
always @(*) begin
memory_controller_address_a = 1'd0;
if ((cur_state == LEGUP_0))
begin
memory_controller_address_a = 1'd0;
end
/* chebyshev1_fo_section: %3*/
/*   store double %18, double* %19, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_154))
begin
memory_controller_address_a = chebyshev1_fo_section_3_19_reg;
end
/* chebyshev1_fo_section: %3*/
/*   store i32 %24, i32* %25, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_155))
begin
memory_controller_address_a = chebyshev1_fo_section_3_25_reg;
end
/* chebyshev1_fo_section: %3*/
/*   store i32 0, i32* %30, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_156))
begin
memory_controller_address_a = chebyshev1_fo_section_3_30_reg;
end
/* chebyshev1_fo_section: %3*/
/*   store i32 1, i32* %32, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_157))
begin
memory_controller_address_a = chebyshev1_fo_section_3_32_reg;
end
/* chebyshev1_fo_section: %3*/
/*   store double %47, double* %48, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_158))
begin
memory_controller_address_a = chebyshev1_fo_section_3_48_reg;
end
/* chebyshev1_fo_section: %51*/
/*   store i32 %87, i32* %88, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_317))
begin
memory_controller_address_a = chebyshev1_fo_section_51_88_reg;
end
/* chebyshev1_fo_section: %51*/
/*   store double %65, double* %66, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_321))
begin
memory_controller_address_a = chebyshev1_fo_section_51_66_reg;
end
/* chebyshev1_fo_section: %51*/
/*   store double %91, double* %92, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_323))
begin
memory_controller_address_a = chebyshev1_fo_section_51_92_reg;
end
/* chebyshev1_fo_section: %51*/
/*   store i32 %99, i32* %100, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_324))
begin
memory_controller_address_a = chebyshev1_fo_section_51_100_reg;
end
/* chebyshev1_fo_section: %51*/
/*   store i32 %113, i32* %114, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_325))
begin
memory_controller_address_a = chebyshev1_fo_section_51_114_reg;
end
end
always @(*) begin
memory_controller_write_enable_a = 1'd0;
if ((cur_state == LEGUP_0))
begin
memory_controller_write_enable_a = 1'd0;
end
/* chebyshev1_fo_section: %3*/
/*   store double %18, double* %19, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_154))
begin
memory_controller_write_enable_a = 1'd1;
end
/* chebyshev1_fo_section: %3*/
/*   store i32 %24, i32* %25, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_155))
begin
memory_controller_write_enable_a = 1'd1;
end
/* chebyshev1_fo_section: %3*/
/*   store i32 0, i32* %30, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_156))
begin
memory_controller_write_enable_a = 1'd1;
end
/* chebyshev1_fo_section: %3*/
/*   store i32 1, i32* %32, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_157))
begin
memory_controller_write_enable_a = 1'd1;
end
/* chebyshev1_fo_section: %3*/
/*   store double %47, double* %48, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_158))
begin
memory_controller_write_enable_a = 1'd1;
end
/* chebyshev1_fo_section: %51*/
/*   store i32 %87, i32* %88, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_317))
begin
memory_controller_write_enable_a = 1'd1;
end
/* chebyshev1_fo_section: %51*/
/*   store double %65, double* %66, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_321))
begin
memory_controller_write_enable_a = 1'd1;
end
/* chebyshev1_fo_section: %51*/
/*   store double %91, double* %92, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_323))
begin
memory_controller_write_enable_a = 1'd1;
end
/* chebyshev1_fo_section: %51*/
/*   store i32 %99, i32* %100, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_324))
begin
memory_controller_write_enable_a = 1'd1;
end
/* chebyshev1_fo_section: %51*/
/*   store i32 %113, i32* %114, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_325))
begin
memory_controller_write_enable_a = 1'd1;
end
end
always @(*) begin
memory_controller_in_a = 1'd0;
if ((cur_state == LEGUP_0))
begin
memory_controller_in_a = 1'd0;
end
/* chebyshev1_fo_section: %3*/
/*   store double %18, double* %19, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_154))
begin
memory_controller_in_a = chebyshev1_fo_section_3_18;
end
/* chebyshev1_fo_section: %3*/
/*   store i32 %24, i32* %25, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_155))
begin
memory_controller_in_a = chebyshev1_fo_section_3_24;
end
/* chebyshev1_fo_section: %3*/
/*   store i32 0, i32* %30, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_156))
begin
memory_controller_in_a = 32'd0;
end
/* chebyshev1_fo_section: %3*/
/*   store i32 1, i32* %32, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_157))
begin
memory_controller_in_a = 32'd1;
end
/* chebyshev1_fo_section: %3*/
/*   store double %47, double* %48, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_158))
begin
memory_controller_in_a = chebyshev1_fo_section_3_47_reg;
end
/* chebyshev1_fo_section: %51*/
/*   store i32 %87, i32* %88, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_317))
begin
memory_controller_in_a = chebyshev1_fo_section_51_87;
end
/* chebyshev1_fo_section: %51*/
/*   store double %65, double* %66, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_321))
begin
memory_controller_in_a = chebyshev1_fo_section_51_65;
end
/* chebyshev1_fo_section: %51*/
/*   store double %91, double* %92, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_323))
begin
memory_controller_in_a = chebyshev1_fo_section_51_91;
end
/* chebyshev1_fo_section: %51*/
/*   store i32 %99, i32* %100, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_324))
begin
memory_controller_in_a = chebyshev1_fo_section_51_99_reg;
end
/* chebyshev1_fo_section: %51*/
/*   store i32 %113, i32* %114, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_325))
begin
memory_controller_in_a = chebyshev1_fo_section_51_113_reg;
end
end
always @(*) begin
memory_controller_size_a = 1'd0;
if ((cur_state == LEGUP_0))
begin
memory_controller_size_a = 1'd0;
end
/* chebyshev1_fo_section: %3*/
/*   store double %18, double* %19, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_154))
begin
memory_controller_size_a = 2'd3;
end
/* chebyshev1_fo_section: %3*/
/*   store i32 %24, i32* %25, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_155))
begin
memory_controller_size_a = 2'd2;
end
/* chebyshev1_fo_section: %3*/
/*   store i32 0, i32* %30, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_156))
begin
memory_controller_size_a = 2'd2;
end
/* chebyshev1_fo_section: %3*/
/*   store i32 1, i32* %32, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_157))
begin
memory_controller_size_a = 2'd2;
end
/* chebyshev1_fo_section: %3*/
/*   store double %47, double* %48, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_158))
begin
memory_controller_size_a = 2'd3;
end
/* chebyshev1_fo_section: %51*/
/*   store i32 %87, i32* %88, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_317))
begin
memory_controller_size_a = 2'd2;
end
/* chebyshev1_fo_section: %51*/
/*   store double %65, double* %66, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_321))
begin
memory_controller_size_a = 2'd3;
end
/* chebyshev1_fo_section: %51*/
/*   store double %91, double* %92, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_323))
begin
memory_controller_size_a = 2'd3;
end
/* chebyshev1_fo_section: %51*/
/*   store i32 %99, i32* %100, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_324))
begin
memory_controller_size_a = 2'd2;
end
/* chebyshev1_fo_section: %51*/
/*   store i32 %113, i32* %114, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_325))
begin
memory_controller_size_a = 2'd2;
end
end
always @(*) begin
memory_controller_enable_b = 1'd0;
if ((cur_state == LEGUP_0))
begin
memory_controller_enable_b = 1'd0;
end
/* chebyshev1_fo_section: %3*/
/*   store double %28, double* %29, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_155))
begin
memory_controller_enable_b = 1'd1;
end
/* chebyshev1_fo_section: %3*/
/*   store double 0.000000e+00, double* %31, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_156))
begin
memory_controller_enable_b = 1'd1;
end
/* chebyshev1_fo_section: %3*/
/*   store i32 %40, i32* %41, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_157))
begin
memory_controller_enable_b = 1'd1;
end
/* chebyshev1_fo_section: %3*/
/*   store i32 0, i32* %49, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_158))
begin
memory_controller_enable_b = 1'd1;
end
/* chebyshev1_fo_section: %3*/
/*   store double 0.000000e+00, double* %50, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_159))
begin
memory_controller_enable_b = 1'd1;
end
/* chebyshev1_fo_section: %51*/
/*   store i32 %74, i32* %75, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_316))
begin
memory_controller_enable_b = 1'd1;
end
/* chebyshev1_fo_section: %51*/
/*   store i32 1, i32* %93, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_318))
begin
memory_controller_enable_b = 1'd1;
end
/* chebyshev1_fo_section: %51*/
/*   store double %82, double* %83, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_322))
begin
memory_controller_enable_b = 1'd1;
end
/* chebyshev1_fo_section: %51*/
/*   store double %108, double* %109, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_324))
begin
memory_controller_enable_b = 1'd1;
end
/* chebyshev1_fo_section: %51*/
/*   store double %120, double* %121, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_325))
begin
memory_controller_enable_b = 1'd1;
end
end
always @(*) begin
memory_controller_address_b = 1'd0;
if ((cur_state == LEGUP_0))
begin
memory_controller_address_b = 1'd0;
end
/* chebyshev1_fo_section: %3*/
/*   store double %28, double* %29, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_155))
begin
memory_controller_address_b = chebyshev1_fo_section_3_29_reg;
end
/* chebyshev1_fo_section: %3*/
/*   store double 0.000000e+00, double* %31, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_156))
begin
memory_controller_address_b = chebyshev1_fo_section_3_31_reg;
end
/* chebyshev1_fo_section: %3*/
/*   store i32 %40, i32* %41, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_157))
begin
memory_controller_address_b = chebyshev1_fo_section_3_41_reg;
end
/* chebyshev1_fo_section: %3*/
/*   store i32 0, i32* %49, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_158))
begin
memory_controller_address_b = chebyshev1_fo_section_3_49_reg;
end
/* chebyshev1_fo_section: %3*/
/*   store double 0.000000e+00, double* %50, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_159))
begin
memory_controller_address_b = chebyshev1_fo_section_3_50_reg;
end
/* chebyshev1_fo_section: %51*/
/*   store i32 %74, i32* %75, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_316))
begin
memory_controller_address_b = chebyshev1_fo_section_51_75_reg;
end
/* chebyshev1_fo_section: %51*/
/*   store i32 1, i32* %93, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_318))
begin
memory_controller_address_b = chebyshev1_fo_section_51_93_reg;
end
/* chebyshev1_fo_section: %51*/
/*   store double %82, double* %83, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_322))
begin
memory_controller_address_b = chebyshev1_fo_section_51_83_reg;
end
/* chebyshev1_fo_section: %51*/
/*   store double %108, double* %109, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_324))
begin
memory_controller_address_b = chebyshev1_fo_section_51_109_reg;
end
/* chebyshev1_fo_section: %51*/
/*   store double %120, double* %121, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_325))
begin
memory_controller_address_b = chebyshev1_fo_section_51_121_reg;
end
end
always @(*) begin
memory_controller_write_enable_b = 1'd0;
if ((cur_state == LEGUP_0))
begin
memory_controller_write_enable_b = 1'd0;
end
/* chebyshev1_fo_section: %3*/
/*   store double %28, double* %29, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_155))
begin
memory_controller_write_enable_b = 1'd1;
end
/* chebyshev1_fo_section: %3*/
/*   store double 0.000000e+00, double* %31, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_156))
begin
memory_controller_write_enable_b = 1'd1;
end
/* chebyshev1_fo_section: %3*/
/*   store i32 %40, i32* %41, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_157))
begin
memory_controller_write_enable_b = 1'd1;
end
/* chebyshev1_fo_section: %3*/
/*   store i32 0, i32* %49, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_158))
begin
memory_controller_write_enable_b = 1'd1;
end
/* chebyshev1_fo_section: %3*/
/*   store double 0.000000e+00, double* %50, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_159))
begin
memory_controller_write_enable_b = 1'd1;
end
/* chebyshev1_fo_section: %51*/
/*   store i32 %74, i32* %75, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_316))
begin
memory_controller_write_enable_b = 1'd1;
end
/* chebyshev1_fo_section: %51*/
/*   store i32 1, i32* %93, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_318))
begin
memory_controller_write_enable_b = 1'd1;
end
/* chebyshev1_fo_section: %51*/
/*   store double %82, double* %83, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_322))
begin
memory_controller_write_enable_b = 1'd1;
end
/* chebyshev1_fo_section: %51*/
/*   store double %108, double* %109, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_324))
begin
memory_controller_write_enable_b = 1'd1;
end
/* chebyshev1_fo_section: %51*/
/*   store double %120, double* %121, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_325))
begin
memory_controller_write_enable_b = 1'd1;
end
end
always @(*) begin
memory_controller_in_b = 1'd0;
if ((cur_state == LEGUP_0))
begin
memory_controller_in_b = 1'd0;
end
/* chebyshev1_fo_section: %3*/
/*   store double %28, double* %29, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_155))
begin
memory_controller_in_b = chebyshev1_fo_section_3_28;
end
/* chebyshev1_fo_section: %3*/
/*   store double 0.000000e+00, double* %31, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_156))
begin
memory_controller_in_b = 64'h0;
end
/* chebyshev1_fo_section: %3*/
/*   store i32 %40, i32* %41, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_157))
begin
memory_controller_in_b = chebyshev1_fo_section_3_40_reg;
end
/* chebyshev1_fo_section: %3*/
/*   store i32 0, i32* %49, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_158))
begin
memory_controller_in_b = 32'd0;
end
/* chebyshev1_fo_section: %3*/
/*   store double 0.000000e+00, double* %50, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_159))
begin
memory_controller_in_b = 64'h0;
end
/* chebyshev1_fo_section: %51*/
/*   store i32 %74, i32* %75, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_316))
begin
memory_controller_in_b = chebyshev1_fo_section_51_74;
end
/* chebyshev1_fo_section: %51*/
/*   store i32 1, i32* %93, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_318))
begin
memory_controller_in_b = 32'd1;
end
/* chebyshev1_fo_section: %51*/
/*   store double %82, double* %83, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_322))
begin
memory_controller_in_b = chebyshev1_fo_section_51_82;
end
/* chebyshev1_fo_section: %51*/
/*   store double %108, double* %109, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_324))
begin
memory_controller_in_b = chebyshev1_fo_section_51_108;
end
/* chebyshev1_fo_section: %51*/
/*   store double %120, double* %121, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_325))
begin
memory_controller_in_b = chebyshev1_fo_section_51_120;
end
end
always @(*) begin
memory_controller_size_b = 1'd0;
if ((cur_state == LEGUP_0))
begin
memory_controller_size_b = 1'd0;
end
/* chebyshev1_fo_section: %3*/
/*   store double %28, double* %29, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_155))
begin
memory_controller_size_b = 2'd3;
end
/* chebyshev1_fo_section: %3*/
/*   store double 0.000000e+00, double* %31, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_156))
begin
memory_controller_size_b = 2'd3;
end
/* chebyshev1_fo_section: %3*/
/*   store i32 %40, i32* %41, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_157))
begin
memory_controller_size_b = 2'd2;
end
/* chebyshev1_fo_section: %3*/
/*   store i32 0, i32* %49, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_158))
begin
memory_controller_size_b = 2'd2;
end
/* chebyshev1_fo_section: %3*/
/*   store double 0.000000e+00, double* %50, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_3_159))
begin
memory_controller_size_b = 2'd3;
end
/* chebyshev1_fo_section: %51*/
/*   store i32 %74, i32* %75, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_316))
begin
memory_controller_size_b = 2'd2;
end
/* chebyshev1_fo_section: %51*/
/*   store i32 1, i32* %93, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_318))
begin
memory_controller_size_b = 2'd2;
end
/* chebyshev1_fo_section: %51*/
/*   store double %82, double* %83, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_322))
begin
memory_controller_size_b = 2'd3;
end
/* chebyshev1_fo_section: %51*/
/*   store double %108, double* %109, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_324))
begin
memory_controller_size_b = 2'd3;
end
/* chebyshev1_fo_section: %51*/
/*   store double %120, double* %121, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_chebyshev1_fo_section_BB_51_325))
begin
memory_controller_size_b = 2'd3;
end
end

endmodule 
`timescale 1 ns / 1 ns
module main
(
	clk,
	clk2x,
	clk1x_follower,
	reset,
	start,
	finish,
	memory_controller_enable_a,
	memory_controller_address_a,
	memory_controller_write_enable_a,
	memory_controller_in_a,
	memory_controller_size_a,
	memory_controller_out_a,
	memory_controller_enable_b,
	memory_controller_address_b,
	memory_controller_write_enable_b,
	memory_controller_in_b,
	memory_controller_size_b,
	memory_controller_out_b,
	memory_controller_waitrequest,
	return_val
);

parameter [1:0] LEGUP_0 = 2'd0;
parameter [1:0] LEGUP_F_main_BB_0_1 = 2'd1;
parameter [1:0] LEGUP_F_main_BB_0_3 = 2'd3;
parameter [1:0] LEGUP_function_call_2 = 2'd2;

input  clk;
input  clk2x;
input  clk1x_follower;
input  reset;
input  start;
output reg  finish;
output reg  memory_controller_enable_a;
output reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] memory_controller_address_a;
output reg  memory_controller_write_enable_a;
output reg [`MEMORY_CONTROLLER_DATA_SIZE-1:0] memory_controller_in_a;
output reg [1:0] memory_controller_size_a;
input [`MEMORY_CONTROLLER_DATA_SIZE-1:0] memory_controller_out_a;
output reg  memory_controller_enable_b;
output reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] memory_controller_address_b;
output reg  memory_controller_write_enable_b;
output reg [`MEMORY_CONTROLLER_DATA_SIZE-1:0] memory_controller_in_b;
output reg [1:0] memory_controller_size_b;
input [`MEMORY_CONTROLLER_DATA_SIZE-1:0] memory_controller_out_b;
input  memory_controller_waitrequest;
output reg [31:0] return_val;
reg [1:0] cur_state;
reg  chebyshev1_fo_section_start;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] chebyshev1_fo_section_arg_S;
reg [63:0] chebyshev1_fo_section_arg_a;
reg [63:0] chebyshev1_fo_section_arg_c;
reg [63:0] chebyshev1_fo_section_arg_tetta_b;
reg [63:0] chebyshev1_fo_section_arg_g0;
reg [63:0] chebyshev1_fo_section_arg_si;
reg [63:0] chebyshev1_fo_section_arg_b;
reg [63:0] chebyshev1_fo_section_arg_D;
reg [63:0] chebyshev1_fo_section_arg_c0;
wire  chebyshev1_fo_section_memory_controller_enable_a;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] chebyshev1_fo_section_memory_controller_address_a;
wire  chebyshev1_fo_section_memory_controller_write_enable_a;
wire [`MEMORY_CONTROLLER_DATA_SIZE-1:0] chebyshev1_fo_section_memory_controller_in_a;
reg [`MEMORY_CONTROLLER_DATA_SIZE-1:0] chebyshev1_fo_section_memory_controller_out_a;
wire [1:0] chebyshev1_fo_section_memory_controller_size_a;
wire  chebyshev1_fo_section_memory_controller_enable_b;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] chebyshev1_fo_section_memory_controller_address_b;
wire  chebyshev1_fo_section_memory_controller_write_enable_b;
wire [`MEMORY_CONTROLLER_DATA_SIZE-1:0] chebyshev1_fo_section_memory_controller_in_b;
reg [`MEMORY_CONTROLLER_DATA_SIZE-1:0] chebyshev1_fo_section_memory_controller_out_b;
wire [1:0] chebyshev1_fo_section_memory_controller_size_b;
reg  chebyshev1_fo_section_memory_controller_waitrequest;
wire  chebyshev1_fo_section_finish;
reg  chebyshev1_fo_section_finish_final;
reg  legup_function_call;
wire [15:0] legup_pthreadpoll_threadID;


chebyshev1_fo_section chebyshev1_fo_section_inst (
	.memory_controller_enable_a (chebyshev1_fo_section_memory_controller_enable_a),
	.memory_controller_address_a (chebyshev1_fo_section_memory_controller_address_a),
	.memory_controller_write_enable_a (chebyshev1_fo_section_memory_controller_write_enable_a),
	.memory_controller_in_a (chebyshev1_fo_section_memory_controller_in_a),
	.memory_controller_size_a (chebyshev1_fo_section_memory_controller_size_a),
	.memory_controller_out_a (memory_controller_out_a[`MEMORY_CONTROLLER_DATA_SIZE-1:0]),
	.memory_controller_enable_b (chebyshev1_fo_section_memory_controller_enable_b),
	.memory_controller_address_b (chebyshev1_fo_section_memory_controller_address_b),
	.memory_controller_write_enable_b (chebyshev1_fo_section_memory_controller_write_enable_b),
	.memory_controller_in_b (chebyshev1_fo_section_memory_controller_in_b),
	.memory_controller_size_b (chebyshev1_fo_section_memory_controller_size_b),
	.memory_controller_out_b (memory_controller_out_b[`MEMORY_CONTROLLER_DATA_SIZE-1:0]),
	.memory_controller_waitrequest (memory_controller_waitrequest),
	.clk (clk),
	.clk2x (clk2x),
	.clk1x_follower (clk1x_follower),
	.reset (reset),
	.start (chebyshev1_fo_section_start),
	.finish (chebyshev1_fo_section_finish),
	.arg_S (chebyshev1_fo_section_arg_S),
	.arg_a (chebyshev1_fo_section_arg_a),
	.arg_c (chebyshev1_fo_section_arg_c),
	.arg_tetta_b (chebyshev1_fo_section_arg_tetta_b),
	.arg_g0 (chebyshev1_fo_section_arg_g0),
	.arg_si (chebyshev1_fo_section_arg_si),
	.arg_b (chebyshev1_fo_section_arg_b),
	.arg_D (chebyshev1_fo_section_arg_D),
	.arg_c0 (chebyshev1_fo_section_arg_c0)
);


// Local Rams


always @(posedge clk) begin
if (((cur_state == LEGUP_0) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_0;
if (reset == 1'b0 && ^(LEGUP_0) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_0) & (memory_controller_waitrequest == 1'd0)) & (start == 1'd1)))
begin
cur_state <= LEGUP_F_main_BB_0_1;
if (reset == 1'b0 && ^(LEGUP_F_main_BB_0_1) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_0) & (memory_controller_waitrequest == 1'd0)) & (start == 1'd0)))
begin
cur_state <= LEGUP_0;
if (reset == 1'b0 && ^(LEGUP_0) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_main_BB_0_1) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_main_BB_0_1;
if (reset == 1'b0 && ^(LEGUP_F_main_BB_0_1) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_main_BB_0_1) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_function_call_2;
if (reset == 1'b0 && ^(LEGUP_function_call_2) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_function_call_2) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_function_call_2;
if (reset == 1'b0 && ^(LEGUP_function_call_2) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_function_call_2) & (memory_controller_waitrequest == 1'd0)) & (chebyshev1_fo_section_finish_final == 1'd1)))
begin
cur_state <= LEGUP_F_main_BB_0_3;
if (reset == 1'b0 && ^(LEGUP_F_main_BB_0_3) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_function_call_2) & (memory_controller_waitrequest == 1'd0)) & (chebyshev1_fo_section_finish_final == 1'd0)))
begin
cur_state <= LEGUP_function_call_2;
if (reset == 1'b0 && ^(LEGUP_function_call_2) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_main_BB_0_3) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_main_BB_0_3;
if (reset == 1'b0 && ^(LEGUP_F_main_BB_0_3) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_main_BB_0_3) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_0;
if (reset == 1'b0 && ^(LEGUP_0) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((reset == 1'd1))
begin
cur_state <= 2'd0;
if (reset == 1'b0 && ^(2'd0) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
end
always @(posedge clk) begin
/* main: %0*/
/*   tail call void @chebyshev1_fo_section(%struct.TYPE_3__* undef, double undef, double undef, double undef, double undef, double undef, double undef, double undef, double undef)*/
if ((cur_state == LEGUP_F_main_BB_0_1))
begin
chebyshev1_fo_section_start <= 1'd1;
if (reset == 1'b0 && ^(1'd1) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev1_fo_section_start"); $finish; end
end
/* main: %0*/
/*   tail call void @chebyshev1_fo_section(%struct.TYPE_3__* undef, double undef, double undef, double undef, double undef, double undef, double undef, double undef, double undef)*/
if ((cur_state == LEGUP_function_call_2))
begin
chebyshev1_fo_section_start <= 1'd0;
if (reset == 1'b0 && ^(1'd0) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev1_fo_section_start"); $finish; end
end
end
always @(posedge clk) begin
/* main: %0*/
/*   tail call void @chebyshev1_fo_section(%struct.TYPE_3__* undef, double undef, double undef, double undef, double undef, double undef, double undef, double undef, double undef)*/
if ((cur_state == LEGUP_F_main_BB_0_1))
begin
chebyshev1_fo_section_arg_S <= 0;
if (reset == 1'b0 && ^(0) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev1_fo_section_arg_S"); $finish; end
end
end
always @(posedge clk) begin
/* main: %0*/
/*   tail call void @chebyshev1_fo_section(%struct.TYPE_3__* undef, double undef, double undef, double undef, double undef, double undef, double undef, double undef, double undef)*/
if ((cur_state == LEGUP_F_main_BB_0_1))
begin
chebyshev1_fo_section_arg_a <= 64'd0;
if (reset == 1'b0 && ^(64'd0) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev1_fo_section_arg_a"); $finish; end
end
end
always @(posedge clk) begin
/* main: %0*/
/*   tail call void @chebyshev1_fo_section(%struct.TYPE_3__* undef, double undef, double undef, double undef, double undef, double undef, double undef, double undef, double undef)*/
if ((cur_state == LEGUP_F_main_BB_0_1))
begin
chebyshev1_fo_section_arg_c <= 64'd0;
if (reset == 1'b0 && ^(64'd0) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev1_fo_section_arg_c"); $finish; end
end
end
always @(posedge clk) begin
/* main: %0*/
/*   tail call void @chebyshev1_fo_section(%struct.TYPE_3__* undef, double undef, double undef, double undef, double undef, double undef, double undef, double undef, double undef)*/
if ((cur_state == LEGUP_F_main_BB_0_1))
begin
chebyshev1_fo_section_arg_tetta_b <= 64'd0;
if (reset == 1'b0 && ^(64'd0) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev1_fo_section_arg_tetta_b"); $finish; end
end
end
always @(posedge clk) begin
/* main: %0*/
/*   tail call void @chebyshev1_fo_section(%struct.TYPE_3__* undef, double undef, double undef, double undef, double undef, double undef, double undef, double undef, double undef)*/
if ((cur_state == LEGUP_F_main_BB_0_1))
begin
chebyshev1_fo_section_arg_g0 <= 64'd0;
if (reset == 1'b0 && ^(64'd0) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev1_fo_section_arg_g0"); $finish; end
end
end
always @(posedge clk) begin
/* main: %0*/
/*   tail call void @chebyshev1_fo_section(%struct.TYPE_3__* undef, double undef, double undef, double undef, double undef, double undef, double undef, double undef, double undef)*/
if ((cur_state == LEGUP_F_main_BB_0_1))
begin
chebyshev1_fo_section_arg_si <= 64'd0;
if (reset == 1'b0 && ^(64'd0) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev1_fo_section_arg_si"); $finish; end
end
end
always @(posedge clk) begin
/* main: %0*/
/*   tail call void @chebyshev1_fo_section(%struct.TYPE_3__* undef, double undef, double undef, double undef, double undef, double undef, double undef, double undef, double undef)*/
if ((cur_state == LEGUP_F_main_BB_0_1))
begin
chebyshev1_fo_section_arg_b <= 64'd0;
if (reset == 1'b0 && ^(64'd0) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev1_fo_section_arg_b"); $finish; end
end
end
always @(posedge clk) begin
/* main: %0*/
/*   tail call void @chebyshev1_fo_section(%struct.TYPE_3__* undef, double undef, double undef, double undef, double undef, double undef, double undef, double undef, double undef)*/
if ((cur_state == LEGUP_F_main_BB_0_1))
begin
chebyshev1_fo_section_arg_D <= 64'd0;
if (reset == 1'b0 && ^(64'd0) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev1_fo_section_arg_D"); $finish; end
end
end
always @(posedge clk) begin
/* main: %0*/
/*   tail call void @chebyshev1_fo_section(%struct.TYPE_3__* undef, double undef, double undef, double undef, double undef, double undef, double undef, double undef, double undef)*/
if ((cur_state == LEGUP_F_main_BB_0_1))
begin
chebyshev1_fo_section_arg_c0 <= 64'd0;
if (reset == 1'b0 && ^(64'd0) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev1_fo_section_arg_c0"); $finish; end
end
end
always @(*) begin
/* main: %0*/
/*   tail call void @chebyshev1_fo_section(%struct.TYPE_3__* undef, double undef, double undef, double undef, double undef, double undef, double undef, double undef, double undef)*/
begin
chebyshev1_fo_section_memory_controller_out_a = memory_controller_out_a;
end
end
always @(*) begin
/* main: %0*/
/*   tail call void @chebyshev1_fo_section(%struct.TYPE_3__* undef, double undef, double undef, double undef, double undef, double undef, double undef, double undef, double undef)*/
begin
chebyshev1_fo_section_memory_controller_out_b = memory_controller_out_b;
end
end
always @(*) begin
chebyshev1_fo_section_memory_controller_waitrequest = memory_controller_waitrequest;
end
always @(*) begin
chebyshev1_fo_section_finish_final = chebyshev1_fo_section_finish;
end
always @(*) begin
legup_function_call = 1'd0;
/* main: %0*/
/*   tail call void @chebyshev1_fo_section(%struct.TYPE_3__* undef, double undef, double undef, double undef, double undef, double undef, double undef, double undef, double undef)*/
if ((cur_state == LEGUP_function_call_2))
begin
legup_function_call = 1'd1;
end
end
always @(posedge clk) begin
if ((cur_state == LEGUP_0))
begin
finish <= 1'd0;
if (reset == 1'b0 && ^(1'd0) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to finish"); $finish; end
end
/* main: %0*/
/*   ret i32 0*/
if ((cur_state == LEGUP_F_main_BB_0_3))
begin
finish <= (memory_controller_waitrequest == 1'd0);
if (reset == 1'b0 && ^((memory_controller_waitrequest == 1'd0)) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to finish"); $finish; end
end
end
always @(*) begin
memory_controller_enable_a = 1'd0;
/* main: %0*/
/*   tail call void @chebyshev1_fo_section(%struct.TYPE_3__* undef, double undef, double undef, double undef, double undef, double undef, double undef, double undef, double undef)*/
if ((cur_state == LEGUP_function_call_2))
begin
memory_controller_enable_a = chebyshev1_fo_section_memory_controller_enable_a;
end
/* main: %0*/
/*   tail call void @chebyshev1_fo_section(%struct.TYPE_3__* undef, double undef, double undef, double undef, double undef, double undef, double undef, double undef, double undef)*/
if ((cur_state == LEGUP_function_call_2))
begin
memory_controller_enable_a = chebyshev1_fo_section_memory_controller_enable_a;
end
end
always @(*) begin
memory_controller_address_a = 1'd0;
/* main: %0*/
/*   tail call void @chebyshev1_fo_section(%struct.TYPE_3__* undef, double undef, double undef, double undef, double undef, double undef, double undef, double undef, double undef)*/
if ((cur_state == LEGUP_function_call_2))
begin
memory_controller_address_a[`MEMORY_CONTROLLER_ADDR_SIZE-1:0] = chebyshev1_fo_section_memory_controller_address_a;
end
/* main: %0*/
/*   tail call void @chebyshev1_fo_section(%struct.TYPE_3__* undef, double undef, double undef, double undef, double undef, double undef, double undef, double undef, double undef)*/
if ((cur_state == LEGUP_function_call_2))
begin
memory_controller_address_a[`MEMORY_CONTROLLER_ADDR_SIZE-1:0] = chebyshev1_fo_section_memory_controller_address_a;
end
end
always @(*) begin
memory_controller_write_enable_a = 1'd0;
/* main: %0*/
/*   tail call void @chebyshev1_fo_section(%struct.TYPE_3__* undef, double undef, double undef, double undef, double undef, double undef, double undef, double undef, double undef)*/
if ((cur_state == LEGUP_function_call_2))
begin
memory_controller_write_enable_a = chebyshev1_fo_section_memory_controller_write_enable_a;
end
/* main: %0*/
/*   tail call void @chebyshev1_fo_section(%struct.TYPE_3__* undef, double undef, double undef, double undef, double undef, double undef, double undef, double undef, double undef)*/
if ((cur_state == LEGUP_function_call_2))
begin
memory_controller_write_enable_a = chebyshev1_fo_section_memory_controller_write_enable_a;
end
end
always @(*) begin
memory_controller_in_a = 1'd0;
/* main: %0*/
/*   tail call void @chebyshev1_fo_section(%struct.TYPE_3__* undef, double undef, double undef, double undef, double undef, double undef, double undef, double undef, double undef)*/
if ((cur_state == LEGUP_function_call_2))
begin
memory_controller_in_a[`MEMORY_CONTROLLER_DATA_SIZE-1:0] = chebyshev1_fo_section_memory_controller_in_a;
end
/* main: %0*/
/*   tail call void @chebyshev1_fo_section(%struct.TYPE_3__* undef, double undef, double undef, double undef, double undef, double undef, double undef, double undef, double undef)*/
if ((cur_state == LEGUP_function_call_2))
begin
memory_controller_in_a[`MEMORY_CONTROLLER_DATA_SIZE-1:0] = chebyshev1_fo_section_memory_controller_in_a;
end
end
always @(*) begin
memory_controller_size_a = 1'd0;
/* main: %0*/
/*   tail call void @chebyshev1_fo_section(%struct.TYPE_3__* undef, double undef, double undef, double undef, double undef, double undef, double undef, double undef, double undef)*/
if ((cur_state == LEGUP_function_call_2))
begin
memory_controller_size_a[1:0] = chebyshev1_fo_section_memory_controller_size_a;
end
/* main: %0*/
/*   tail call void @chebyshev1_fo_section(%struct.TYPE_3__* undef, double undef, double undef, double undef, double undef, double undef, double undef, double undef, double undef)*/
if ((cur_state == LEGUP_function_call_2))
begin
memory_controller_size_a[1:0] = chebyshev1_fo_section_memory_controller_size_a;
end
end
always @(*) begin
memory_controller_enable_b = 1'd0;
/* main: %0*/
/*   tail call void @chebyshev1_fo_section(%struct.TYPE_3__* undef, double undef, double undef, double undef, double undef, double undef, double undef, double undef, double undef)*/
if ((cur_state == LEGUP_function_call_2))
begin
memory_controller_enable_b = chebyshev1_fo_section_memory_controller_enable_b;
end
/* main: %0*/
/*   tail call void @chebyshev1_fo_section(%struct.TYPE_3__* undef, double undef, double undef, double undef, double undef, double undef, double undef, double undef, double undef)*/
if ((cur_state == LEGUP_function_call_2))
begin
memory_controller_enable_b = chebyshev1_fo_section_memory_controller_enable_b;
end
end
always @(*) begin
memory_controller_address_b = 1'd0;
/* main: %0*/
/*   tail call void @chebyshev1_fo_section(%struct.TYPE_3__* undef, double undef, double undef, double undef, double undef, double undef, double undef, double undef, double undef)*/
if ((cur_state == LEGUP_function_call_2))
begin
memory_controller_address_b[`MEMORY_CONTROLLER_ADDR_SIZE-1:0] = chebyshev1_fo_section_memory_controller_address_b;
end
/* main: %0*/
/*   tail call void @chebyshev1_fo_section(%struct.TYPE_3__* undef, double undef, double undef, double undef, double undef, double undef, double undef, double undef, double undef)*/
if ((cur_state == LEGUP_function_call_2))
begin
memory_controller_address_b[`MEMORY_CONTROLLER_ADDR_SIZE-1:0] = chebyshev1_fo_section_memory_controller_address_b;
end
end
always @(*) begin
memory_controller_write_enable_b = 1'd0;
/* main: %0*/
/*   tail call void @chebyshev1_fo_section(%struct.TYPE_3__* undef, double undef, double undef, double undef, double undef, double undef, double undef, double undef, double undef)*/
if ((cur_state == LEGUP_function_call_2))
begin
memory_controller_write_enable_b = chebyshev1_fo_section_memory_controller_write_enable_b;
end
/* main: %0*/
/*   tail call void @chebyshev1_fo_section(%struct.TYPE_3__* undef, double undef, double undef, double undef, double undef, double undef, double undef, double undef, double undef)*/
if ((cur_state == LEGUP_function_call_2))
begin
memory_controller_write_enable_b = chebyshev1_fo_section_memory_controller_write_enable_b;
end
end
always @(*) begin
memory_controller_in_b = 1'd0;
/* main: %0*/
/*   tail call void @chebyshev1_fo_section(%struct.TYPE_3__* undef, double undef, double undef, double undef, double undef, double undef, double undef, double undef, double undef)*/
if ((cur_state == LEGUP_function_call_2))
begin
memory_controller_in_b[`MEMORY_CONTROLLER_DATA_SIZE-1:0] = chebyshev1_fo_section_memory_controller_in_b;
end
/* main: %0*/
/*   tail call void @chebyshev1_fo_section(%struct.TYPE_3__* undef, double undef, double undef, double undef, double undef, double undef, double undef, double undef, double undef)*/
if ((cur_state == LEGUP_function_call_2))
begin
memory_controller_in_b[`MEMORY_CONTROLLER_DATA_SIZE-1:0] = chebyshev1_fo_section_memory_controller_in_b;
end
end
always @(*) begin
memory_controller_size_b = 1'd0;
/* main: %0*/
/*   tail call void @chebyshev1_fo_section(%struct.TYPE_3__* undef, double undef, double undef, double undef, double undef, double undef, double undef, double undef, double undef)*/
if ((cur_state == LEGUP_function_call_2))
begin
memory_controller_size_b[1:0] = chebyshev1_fo_section_memory_controller_size_b;
end
/* main: %0*/
/*   tail call void @chebyshev1_fo_section(%struct.TYPE_3__* undef, double undef, double undef, double undef, double undef, double undef, double undef, double undef, double undef)*/
if ((cur_state == LEGUP_function_call_2))
begin
memory_controller_size_b[1:0] = chebyshev1_fo_section_memory_controller_size_b;
end
end
always @(posedge clk) begin
if ((cur_state == LEGUP_0))
begin
return_val <= 0;
if (reset == 1'b0 && ^(0) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to return_val"); $finish; end
end
/* main: %0*/
/*   ret i32 0*/
if ((cur_state == LEGUP_F_main_BB_0_3))
begin
return_val <= 32'd0;
if (reset == 1'b0 && ^(32'd0) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to return_val"); $finish; end
end
end

endmodule 
module ram_dual_port
(
	clk,
	address_a,
	address_b,
	wren_a,
	wren_b,
	data_a,
	data_b,
	byteena_a,
	byteena_b,
	q_a,
	q_b
);

parameter  width_a = 1'd0;
parameter  width_b = 1'd0;
parameter  widthad_a = 1'd0;
parameter  widthad_b = 1'd0;
parameter  numwords_a = 1'd0;
parameter  numwords_b = 1'd0;
parameter  init_file = "UNUSED.mif";
parameter  width_be_a = 1'd0;
parameter  width_be_b = 1'd0;
parameter  latency = 1;

input  clk;
input [(widthad_a-1):0] address_a;
input [(widthad_b-1):0] address_b;
output wire [(width_a-1):0] q_a;
output wire [(width_b-1):0] q_b;
reg [(width_a-1):0] q_a_wire;
reg [(width_b-1):0] q_b_wire;
input  wren_a;
input  wren_b;
input [(width_a-1):0] data_a;
input [(width_b-1):0] data_b;
// byte enable is unsupported by inferred RAMs
input [width_be_a-1:0] byteena_a;
input [width_be_b-1:0] byteena_b;

(* ramstyle = "no_rw_check", ram_init_file = init_file *) reg [width_a-1:0] ram[numwords_a-1:0];

/* synthesis translate_off */
integer i;
ALTERA_MF_MEMORY_INITIALIZATION mem ();
reg [8*256:1] ram_ver_file;
initial begin
	if (init_file == "UNUSED.mif")
    begin
		for (i = 0; i < numwords_a; i = i + 1)
			ram[i] = 0;
    end
	else
    begin
        // modelsim can't read .mif files directly. So use Altera function to
        // convert them to .ver files
        mem.convert_to_ver_file(init_file, width_a, ram_ver_file);
        $readmemh(ram_ver_file, ram);
    end
end
/* synthesis translate_on */

always @ (posedge clk)
begin // Port A
if (wren_a)
begin
    ram[address_a] <= data_a;
    q_a_wire <= {width_a{1'bX}};
end
else
    q_a_wire <= ram[address_a];
end
always @ (posedge clk)
begin // Port b
if (wren_b)
begin
    ram[address_b] <= data_b;
    q_b_wire <= {width_b{1'bX}};
end
else
    q_b_wire <= ram[address_b];
end



integer j;
reg [(width_a-1):0] q_a_reg[latency:1], q_b_reg[latency:1];

always @(*)
begin
   q_a_reg[1] <= q_a_wire;
   q_b_reg[1] <= q_b_wire;
end

always @(posedge clk)
begin
   for (j = 1; j < latency; j=j+1)
   begin
       q_a_reg[j+1] <= q_a_reg[j];
       q_b_reg[j+1] <= q_b_reg[j];
   end
end

assign q_a = q_a_reg[latency];
assign q_b = q_b_reg[latency];


endmodule
module rom_dual_port
(
	clk,
	address_a,
	address_b,
	q_a,
	q_b
);

parameter  width_a = 1'd0;
parameter  width_b = 1'd0;
parameter  widthad_a = 1'd0;
parameter  widthad_b = 1'd0;
parameter  numwords_a = 1'd0;
parameter  numwords_b = 1'd0;
parameter  init_file = "UNUSED.mif";
parameter  latency = 1;

input  clk;
input [(widthad_a-1):0] address_a;
input [(widthad_b-1):0] address_b;
output wire [(width_a-1):0] q_a;
output wire [(width_b-1):0] q_b;
reg [(width_a-1):0] q_a_wire;
reg [(width_b-1):0] q_b_wire;

(* ramstyle = "no_rw_check", ram_init_file = init_file *) reg [width_a-1:0] ram[numwords_a-1:0];

/* synthesis translate_off */
integer i;
ALTERA_MF_MEMORY_INITIALIZATION mem ();
reg [8*256:1] ram_ver_file;
initial begin
	if (init_file == "UNUSED.mif")
    begin
		for (i = 0; i < numwords_a; i = i + 1)
			ram[i] = 0;
    end
	else
    begin
        // modelsim can't read .mif files directly. So use Altera function to
        // convert them to .ver files
        mem.convert_to_ver_file(init_file, width_a, ram_ver_file);
        $readmemh(ram_ver_file, ram);
    end
end
/* synthesis translate_on */

always @ (posedge clk)
begin
    q_a_wire <= ram[address_a];
    q_b_wire <= ram[address_b];
end



integer j;
reg [(width_a-1):0] q_a_reg[latency:1], q_b_reg[latency:1];

always @(*)
begin
   q_a_reg[1] <= q_a_wire;
   q_b_reg[1] <= q_b_wire;
end

always @(posedge clk)
begin
   for (j = 1; j < latency; j=j+1)
   begin
       q_a_reg[j+1] <= q_a_reg[j];
       q_b_reg[j+1] <= q_b_reg[j];
   end
end

assign q_a = q_a_reg[latency];
assign q_b = q_b_reg[latency];


endmodule
module de2 (CLOCK_50, KEY, SW, HEX0, HEX1, HEX2, HEX3, HEX4, HEX5, HEX6, HEX7, LEDG);
    input CLOCK_50;
    output [7:0] LEDG;
    input [3:0] KEY;
    input [17:0] SW;
    output [6:0] HEX0, HEX1, HEX2, HEX3, HEX4, HEX5, HEX6, HEX7;

    wire clk = CLOCK_50;
    wire reset = ~KEY[0];
    wire go = ~KEY[1];

    wire  start;
    wire [31:0] return_val;
    wire  finish;

    reg [31:0] return_val_reg;
    
	reg [3:0] hex0, hex1, hex2, hex3, hex4, hex5, hex6, hex7;
	always @ (*) begin
		hex7 <= return_val_reg[31:28];
		hex6 <= return_val_reg[27:24];
		hex5 <= return_val_reg[23:20];
		hex4 <= return_val_reg[19:16];
		hex3 <= return_val_reg[15:12];
		hex2 <= return_val_reg[11:8];
		hex1 <= return_val_reg[7:4];
		hex0 <= return_val_reg[3:0];
	end

    hex_digits h7( .x(hex7), .hex_LEDs(HEX7));
    hex_digits h6( .x(hex6), .hex_LEDs(HEX6));
    hex_digits h5( .x(hex5), .hex_LEDs(HEX5));
    hex_digits h4( .x(hex4), .hex_LEDs(HEX4));
    hex_digits h3( .x(hex3), .hex_LEDs(HEX3));
    hex_digits h2( .x(hex2), .hex_LEDs(HEX2));
    hex_digits h1( .x(hex1), .hex_LEDs(HEX1));
    hex_digits h0( .x(hex0), .hex_LEDs(HEX0));


    top top_inst (
        .clk (clk),
        .reset (reset),
        .start (start),
        .finish (finish),
        .return_val (return_val)
    );

    parameter s_WAIT = 3'b001, s_START = 3'b010, s_EXE = 3'b011,
                s_DONE = 3'b100;

    // state registers
    reg [3:0] y_Q, Y_D;

    assign LEDG[3:0] = y_Q;

    // next state
    always @(*)
    begin
        case (y_Q)
            s_WAIT: if (go) Y_D = s_START; else Y_D = y_Q;

            s_START: Y_D = s_EXE;

            s_EXE: if (!finish) Y_D = s_EXE; else Y_D = s_DONE;

            s_DONE: Y_D = s_DONE;

            default: Y_D = 3'bxxx;
        endcase
    end

    // current state
    always @(posedge clk)
    begin
        if (reset) // synchronous clear
            y_Q <= s_WAIT;
        else
            y_Q <= Y_D;
    end

    always @(posedge clk)
        if (y_Q == s_EXE && finish)
            return_val_reg <= return_val;
        else if (y_Q == s_DONE)
            return_val_reg <= return_val_reg;
        else
            return_val_reg <= 0;


    assign start = (y_Q == s_START);
endmodule

module de4 (
	OSC_50_BANK2,
    BUTTON,
    LED,
	SEG0_D,
	SEG1_D
);
    input OSC_50_BANK2;
    input [1:0] BUTTON;
    output [6:0] SEG0_D;
    output [6:0] SEG1_D;
    output [7:0] LED;

    de2 de2_inst (
        .CLOCK_50 (OSC_50_BANK2),
        .LEDG (LED),
        .KEY (BUTTON),
        .SW (),
        .HEX0 (SEG0_D),
        .HEX1 (SEG1_D),
        .HEX2 (),
        .HEX3 (),
        .HEX4 (),
        .HEX5 (),
        .HEX6 (),
        .HEX7 ()
    );

endmodule
module hex_digits(x, hex_LEDs);
    input [3:0] x;
    output [6:0] hex_LEDs;
    
    assign hex_LEDs[0] = (~x[3] & ~x[2] & ~x[1] & x[0]) |
                            (~x[3] & x[2] & ~x[1] & ~x[0]) |
                            (x[3] & x[2] & ~x[1] & x[0]) |
                            (x[3] & ~x[2] & x[1] & x[0]);
    assign hex_LEDs[1] = (~x[3] & x[2] & ~x[1] & x[0]) |
                            (x[3] & x[1] & x[0]) |
                            (x[3] & x[2] & ~x[0]) |
                            (x[2] & x[1] & ~x[0]);
    assign hex_LEDs[2] = (x[3] & x[2] & ~x[0]) |
                            (x[3] & x[2] & x[1]) |
                            (~x[3] & ~x[2] & x[1] & ~x[0]);
    assign hex_LEDs[3] = (~x[3] & ~x[2] & ~x[1] & x[0]) | 
                            (~x[3] & x[2] & ~x[1] & ~x[0]) | 
                            (x[2] & x[1] & x[0]) | 
                            (x[3] & ~x[2] & x[1] & ~x[0]);
    assign hex_LEDs[4] = (~x[3] & x[0]) |
                            (~x[3] & x[2] & ~x[1]) |
                            (~x[2] & ~x[1] & x[0]);
    assign hex_LEDs[5] = (~x[3] & ~x[2] & x[0]) | 
                            (~x[3] & ~x[2] & x[1]) | 
                            (~x[3] & x[1] & x[0]) | 
                            (x[3] & x[2] & ~x[1] & x[0]);
    assign hex_LEDs[6] = (~x[3] & ~x[2] & ~x[1]) | 
                            (x[3] & x[2] & ~x[1] & ~x[0]) | 
                            (~x[3] & x[2] & x[1] & x[0]);
    
endmodule
`timescale 1 ns / 1 ns
module main_tb
(
);

reg  clk;
reg  reset;
reg  start;
wire [31:0] return_val;
wire  finish;


top top_inst (
	.clk (clk),
	.reset (reset),
	.start (start),
	.finish (finish),
	.return_val (return_val)
);


// Local Rams



initial 
    clk = 0;
always @(clk)
    clk <= #10 ~clk;

initial begin
//$monitor("At t=%t clk=%b %b %b %b %d", $time, clk, reset, start, finish, return_val);
@(negedge clk);
reset <= 1;
@(negedge clk);
reset <= 0;
start <= 1;

end

always@(finish) begin
    if (finish == 1) begin
        $display("At t=%t clk=%b finish=%b return_val=%d", $time, clk, finish, return_val);
        $display("Cycles: %d", ($time-50)/20);
        $finish;
    end
end

endmodule 
