//----------------------------------------------------------------------------//
// Generated by LegUp High-Level Synthesis Tool Version 3.0 (http://legup.org)
// Compiled: Tue Jul 15 15:43:09 2014
// University of Toronto
// For research and academic purposes only. Commercial use is prohibited.
// Please send bugs to: legup@eecg.toronto.edu
// Date: Tue Mar 10 07:53:12 2020
//----------------------------------------------------------------------------//

`define MEMORY_CONTROLLER_ADDR_SIZE 32
`define MEMORY_CONTROLLER_DATA_SIZE 64
// Number of RAM elements: 0
`define MEMORY_CONTROLLER_TAG_SIZE 9
`define TAG_NULL `MEMORY_CONTROLLER_TAG_SIZE'd0
`define TAG_PROCESSOR `MEMORY_CONTROLLER_TAG_SIZE'd1

// Turn off warning 'ignoring unsupported system task'
// altera message_off 10175

module top
	(
		clk,
		reset,
		start,
		finish,
		return_val
	);
input clk;
input reset;
input start;
output wire finish;
output wire [31:0] return_val;
wire memory_controller_waitrequest;
wire memory_controller_enable_a;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] memory_controller_address_a;
wire memory_controller_write_enable_a;
wire [`MEMORY_CONTROLLER_DATA_SIZE-1:0] memory_controller_in_a;
wire [1:0] memory_controller_size_a;
wire [`MEMORY_CONTROLLER_DATA_SIZE-1:0] memory_controller_out_a;

wire memory_controller_enable_b;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] memory_controller_address_b;
wire memory_controller_write_enable_b;
wire [`MEMORY_CONTROLLER_DATA_SIZE-1:0] memory_controller_in_b;
wire [1:0] memory_controller_size_b;
wire [`MEMORY_CONTROLLER_DATA_SIZE-1:0] memory_controller_out_b;

assign memory_controller_waitrequest = 0;

memory_controller memory_controller_inst (
	.clk( clk ),
	.memory_controller_enable_a( memory_controller_enable_a ),
	.memory_controller_enable_b( memory_controller_enable_b ),
	.memory_controller_address_a( memory_controller_address_a ),
	.memory_controller_address_b( memory_controller_address_b ),
	.memory_controller_write_enable_a( memory_controller_write_enable_a ),
	.memory_controller_write_enable_b( memory_controller_write_enable_b ),
	.memory_controller_in_a( memory_controller_in_a ),
	.memory_controller_in_b( memory_controller_in_b ),
	.memory_controller_size_a( memory_controller_size_a ),
	.memory_controller_size_b( memory_controller_size_b ),
	.memory_controller_waitrequest( memory_controller_waitrequest ),
	.memory_controller_out_reg_a( memory_controller_out_a ),
	.memory_controller_out_reg_b( memory_controller_out_b )
);

main main_inst(
	.clk( clk ),
	.clk2x( clk2x ),
	.clk1x_follower( clk1x_follower ),
	.reset( reset ),
	.start( start ),
	.finish( finish ),
	.return_val( return_val ),
	.memory_controller_enable_a(memory_controller_enable_a),
	.memory_controller_address_a(memory_controller_address_a),
	.memory_controller_write_enable_a(memory_controller_write_enable_a),
	.memory_controller_in_a(memory_controller_in_a),
	.memory_controller_size_a(memory_controller_size_a),
	.memory_controller_out_a(memory_controller_out_a),
	.memory_controller_enable_b(memory_controller_enable_b),
	.memory_controller_address_b(memory_controller_address_b),
	.memory_controller_write_enable_b(memory_controller_write_enable_b),
	.memory_controller_in_b(memory_controller_in_b),
	.memory_controller_size_b(memory_controller_size_b),
	.memory_controller_out_b(memory_controller_out_b),
	.memory_controller_waitrequest(memory_controller_waitrequest)
);

endmodule
`timescale 1 ns / 1 ns
module memory_controller
(
	clk,
	memory_controller_address_a,
	memory_controller_address_b,
	memory_controller_enable_a,
	memory_controller_enable_b,
	memory_controller_write_enable_a,
	memory_controller_write_enable_b,
	memory_controller_in_a,
	memory_controller_in_b,
	memory_controller_size_a,
	memory_controller_size_b,
	memory_controller_waitrequest,
	memory_controller_out_reg_a,
	memory_controller_out_reg_b
);


input clk;
input memory_controller_waitrequest;
input [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] memory_controller_address_a;
input memory_controller_enable_a;
input memory_controller_write_enable_a;
input [64-1:0] memory_controller_in_a;
input [1:0] memory_controller_size_a;
output reg [64-1:0] memory_controller_out_reg_a;
reg [64-1:0] memory_controller_out_prev_a;
reg [64-1:0] memory_controller_out_a;

reg memory_controller_enable_reg_a;
input [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] memory_controller_address_b;
input memory_controller_enable_b;
input memory_controller_write_enable_b;
input [64-1:0] memory_controller_in_b;
input [1:0] memory_controller_size_b;
output reg [64-1:0] memory_controller_out_reg_b;
reg [64-1:0] memory_controller_out_prev_b;
reg [64-1:0] memory_controller_out_b;

reg memory_controller_enable_reg_b;
endmodule 
`timescale 1 ns / 1 ns
module chebyshev2_fo_section
(
	clk,
	clk2x,
	clk1x_follower,
	reset,
	start,
	finish,
	memory_controller_enable_a,
	memory_controller_address_a,
	memory_controller_write_enable_a,
	memory_controller_in_a,
	memory_controller_size_a,
	memory_controller_out_a,
	memory_controller_enable_b,
	memory_controller_address_b,
	memory_controller_write_enable_b,
	memory_controller_in_b,
	memory_controller_size_b,
	memory_controller_out_b,
	memory_controller_waitrequest,
	arg_S,
	arg_a,
	arg_c,
	arg_tetta_b,
	arg_g,
	arg_si,
	arg_b,
	arg_D,
	arg_c0
);

parameter [8:0] LEGUP_0 = 9'd0;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_0_1 = 9'd1;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_0_2 = 9'd2;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_0_3 = 9'd3;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_0_4 = 9'd4;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_0_5 = 9'd5;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_0_6 = 9'd6;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_0_7 = 9'd7;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_0_8 = 9'd8;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_0_9 = 9'd9;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_0_10 = 9'd10;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_0_11 = 9'd11;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_0_12 = 9'd12;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_0_13 = 9'd13;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_0_14 = 9'd14;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_0_15 = 9'd15;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_0_16 = 9'd16;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_0_17 = 9'd17;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_0_18 = 9'd18;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_0_19 = 9'd19;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_0_20 = 9'd20;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_0_21 = 9'd21;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_0_22 = 9'd22;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_0_23 = 9'd23;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_0_24 = 9'd24;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_0_25 = 9'd25;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_0_26 = 9'd26;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_0_27 = 9'd27;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_0_28 = 9'd28;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_0_29 = 9'd29;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_0_30 = 9'd30;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_0_31 = 9'd31;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_0_32 = 9'd32;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_0_33 = 9'd33;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_0_34 = 9'd34;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_6_35 = 9'd35;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_6_36 = 9'd36;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_6_37 = 9'd37;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_6_38 = 9'd38;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_6_39 = 9'd39;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_6_40 = 9'd40;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_6_41 = 9'd41;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_6_42 = 9'd42;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_6_43 = 9'd43;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_6_44 = 9'd44;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_6_45 = 9'd45;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_6_46 = 9'd46;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_6_47 = 9'd47;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_6_48 = 9'd48;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_6_49 = 9'd49;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_6_50 = 9'd50;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_6_51 = 9'd51;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_6_52 = 9'd52;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_6_53 = 9'd53;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_6_54 = 9'd54;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_6_55 = 9'd55;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_6_56 = 9'd56;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_6_57 = 9'd57;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_6_58 = 9'd58;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_6_59 = 9'd59;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_6_60 = 9'd60;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_6_61 = 9'd61;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_6_62 = 9'd62;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_6_63 = 9'd63;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_6_64 = 9'd64;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_6_65 = 9'd65;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_6_66 = 9'd66;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_6_67 = 9'd67;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_6_68 = 9'd68;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_6_69 = 9'd69;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_6_70 = 9'd70;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_6_71 = 9'd71;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_6_72 = 9'd72;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_6_73 = 9'd73;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_6_74 = 9'd74;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_6_75 = 9'd75;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_6_76 = 9'd76;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_6_77 = 9'd77;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_6_78 = 9'd78;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_6_79 = 9'd79;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_6_80 = 9'd80;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_6_81 = 9'd81;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_6_82 = 9'd82;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_6_83 = 9'd83;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_6_84 = 9'd84;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_6_85 = 9'd85;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_6_86 = 9'd86;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_6_87 = 9'd87;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_6_88 = 9'd88;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_6_89 = 9'd89;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_6_90 = 9'd90;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_6_91 = 9'd91;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_6_92 = 9'd92;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_6_93 = 9'd93;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_6_94 = 9'd94;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_6_95 = 9'd95;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_6_96 = 9'd96;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_6_97 = 9'd97;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_6_98 = 9'd98;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_6_99 = 9'd99;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_6_100 = 9'd100;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_6_101 = 9'd101;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_6_102 = 9'd102;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_6_103 = 9'd103;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_6_104 = 9'd104;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_6_105 = 9'd105;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_6_106 = 9'd106;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_6_107 = 9'd107;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_6_108 = 9'd108;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_6_109 = 9'd109;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_6_110 = 9'd110;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_6_111 = 9'd111;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_6_112 = 9'd112;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_6_113 = 9'd113;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_6_114 = 9'd114;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_6_115 = 9'd115;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_6_116 = 9'd116;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_6_117 = 9'd117;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_6_118 = 9'd118;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_6_119 = 9'd119;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_6_120 = 9'd120;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_6_121 = 9'd121;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_6_122 = 9'd122;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_6_123 = 9'd123;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_6_124 = 9'd124;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_6_125 = 9'd125;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_6_126 = 9'd126;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_6_127 = 9'd127;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_6_128 = 9'd128;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_6_129 = 9'd129;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_6_130 = 9'd130;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_6_131 = 9'd131;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_6_132 = 9'd132;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_6_133 = 9'd133;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_6_134 = 9'd134;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_6_135 = 9'd135;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_6_136 = 9'd136;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_6_137 = 9'd137;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_6_138 = 9'd138;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_6_139 = 9'd139;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_6_140 = 9'd140;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_6_141 = 9'd141;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_6_142 = 9'd142;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_6_143 = 9'd143;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_6_144 = 9'd144;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_6_145 = 9'd145;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_6_146 = 9'd146;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_6_147 = 9'd147;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_6_148 = 9'd148;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_6_149 = 9'd149;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_6_150 = 9'd150;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_6_151 = 9'd151;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_6_152 = 9'd152;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_6_153 = 9'd153;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_6_154 = 9'd154;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_6_155 = 9'd155;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_6_156 = 9'd156;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_6_157 = 9'd157;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_6_158 = 9'd158;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_6_159 = 9'd159;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_6_160 = 9'd160;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_6_161 = 9'd161;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_6_162 = 9'd162;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_6_163 = 9'd163;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_6_164 = 9'd164;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_6_165 = 9'd165;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_6_166 = 9'd166;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_6_167 = 9'd167;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_6_168 = 9'd168;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_6_169 = 9'd169;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_6_170 = 9'd170;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_6_171 = 9'd171;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_6_172 = 9'd172;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_6_173 = 9'd173;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_6_174 = 9'd174;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_6_175 = 9'd175;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_6_176 = 9'd176;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_6_177 = 9'd177;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_6_178 = 9'd178;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_6_179 = 9'd179;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_6_180 = 9'd180;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_6_181 = 9'd181;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_6_182 = 9'd182;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_6_183 = 9'd183;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_6_184 = 9'd184;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_6_185 = 9'd185;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_6_186 = 9'd186;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_6_187 = 9'd187;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_52_188 = 9'd188;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_52_189 = 9'd189;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_52_190 = 9'd190;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_52_191 = 9'd191;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_52_192 = 9'd192;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_52_193 = 9'd193;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_52_194 = 9'd194;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_52_195 = 9'd195;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_52_196 = 9'd196;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_52_197 = 9'd197;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_52_198 = 9'd198;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_52_199 = 9'd199;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_52_200 = 9'd200;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_52_201 = 9'd201;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_52_202 = 9'd202;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_52_203 = 9'd203;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_52_204 = 9'd204;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_52_205 = 9'd205;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_52_206 = 9'd206;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_52_207 = 9'd207;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_52_208 = 9'd208;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_52_209 = 9'd209;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_52_210 = 9'd210;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_52_211 = 9'd211;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_52_212 = 9'd212;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_52_213 = 9'd213;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_52_214 = 9'd214;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_52_215 = 9'd215;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_52_216 = 9'd216;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_52_217 = 9'd217;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_52_218 = 9'd218;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_52_219 = 9'd219;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_52_220 = 9'd220;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_52_221 = 9'd221;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_52_222 = 9'd222;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_52_223 = 9'd223;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_52_224 = 9'd224;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_52_225 = 9'd225;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_52_226 = 9'd226;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_52_227 = 9'd227;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_52_228 = 9'd228;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_52_229 = 9'd229;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_52_230 = 9'd230;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_52_231 = 9'd231;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_52_232 = 9'd232;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_52_233 = 9'd233;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_52_234 = 9'd234;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_52_235 = 9'd235;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_52_236 = 9'd236;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_52_237 = 9'd237;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_52_238 = 9'd238;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_52_239 = 9'd239;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_52_240 = 9'd240;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_52_241 = 9'd241;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_52_242 = 9'd242;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_52_243 = 9'd243;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_52_244 = 9'd244;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_52_245 = 9'd245;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_52_246 = 9'd246;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_52_247 = 9'd247;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_52_248 = 9'd248;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_52_249 = 9'd249;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_52_250 = 9'd250;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_52_251 = 9'd251;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_52_252 = 9'd252;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_52_253 = 9'd253;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_52_254 = 9'd254;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_52_255 = 9'd255;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_52_256 = 9'd256;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_52_257 = 9'd257;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_52_258 = 9'd258;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_52_259 = 9'd259;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_52_260 = 9'd260;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_52_261 = 9'd261;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_52_262 = 9'd262;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_52_263 = 9'd263;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_52_264 = 9'd264;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_52_265 = 9'd265;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_52_266 = 9'd266;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_52_267 = 9'd267;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_52_268 = 9'd268;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_52_269 = 9'd269;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_52_270 = 9'd270;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_52_271 = 9'd271;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_52_272 = 9'd272;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_52_273 = 9'd273;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_52_274 = 9'd274;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_52_275 = 9'd275;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_52_276 = 9'd276;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_52_277 = 9'd277;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_52_278 = 9'd278;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_52_279 = 9'd279;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_52_280 = 9'd280;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_52_281 = 9'd281;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_52_282 = 9'd282;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_52_283 = 9'd283;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_52_284 = 9'd284;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_52_285 = 9'd285;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_52_286 = 9'd286;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_52_287 = 9'd287;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_52_288 = 9'd288;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_52_289 = 9'd289;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_52_290 = 9'd290;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_52_291 = 9'd291;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_52_292 = 9'd292;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_52_293 = 9'd293;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_52_294 = 9'd294;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_52_295 = 9'd295;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_52_296 = 9'd296;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_52_297 = 9'd297;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_52_298 = 9'd298;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_52_299 = 9'd299;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_52_300 = 9'd300;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_52_301 = 9'd301;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_52_302 = 9'd302;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_52_303 = 9'd303;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_52_304 = 9'd304;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_52_305 = 9'd305;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_52_306 = 9'd306;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_52_307 = 9'd307;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_52_308 = 9'd308;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_52_309 = 9'd309;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_52_310 = 9'd310;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_52_311 = 9'd311;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_52_312 = 9'd312;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_52_313 = 9'd313;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_52_314 = 9'd314;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_52_315 = 9'd315;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_52_316 = 9'd316;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_52_317 = 9'd317;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_52_318 = 9'd318;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_52_319 = 9'd319;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_52_320 = 9'd320;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_52_321 = 9'd321;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_52_322 = 9'd322;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_52_323 = 9'd323;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_52_324 = 9'd324;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_52_325 = 9'd325;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_52_326 = 9'd326;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_52_327 = 9'd327;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_52_328 = 9'd328;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_52_329 = 9'd329;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_52_330 = 9'd330;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_52_331 = 9'd331;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_52_332 = 9'd332;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_52_333 = 9'd333;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_52_334 = 9'd334;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_52_335 = 9'd335;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_52_336 = 9'd336;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_52_337 = 9'd337;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_52_338 = 9'd338;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_52_339 = 9'd339;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_52_340 = 9'd340;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_52_341 = 9'd341;
parameter [8:0] LEGUP_F_chebyshev2_fo_section_BB_123_342 = 9'd342;

input  clk;
input  clk2x;
input  clk1x_follower;
input  reset;
input  start;
output reg  finish;
output reg  memory_controller_enable_a;
output reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] memory_controller_address_a;
output reg  memory_controller_write_enable_a;
output reg [`MEMORY_CONTROLLER_DATA_SIZE-1:0] memory_controller_in_a;
output reg [1:0] memory_controller_size_a;
input [`MEMORY_CONTROLLER_DATA_SIZE-1:0] memory_controller_out_a;
output reg  memory_controller_enable_b;
output reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] memory_controller_address_b;
output reg  memory_controller_write_enable_b;
output reg [`MEMORY_CONTROLLER_DATA_SIZE-1:0] memory_controller_in_b;
output reg [1:0] memory_controller_size_b;
input [`MEMORY_CONTROLLER_DATA_SIZE-1:0] memory_controller_out_b;
input  memory_controller_waitrequest;
input [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] arg_S;
input [63:0] arg_a;
input [63:0] arg_c;
input [63:0] arg_tetta_b;
input [63:0] arg_g;
input [63:0] arg_si;
input [63:0] arg_b;
input [63:0] arg_D;
input [63:0] arg_c0;
reg [8:0] cur_state;
reg  chebyshev2_fo_section_0_1;
reg  chebyshev2_fo_section_0_1_reg;
reg  chebyshev2_fo_section_0_2;
reg  chebyshev2_fo_section_0_2_reg;
reg  chebyshev2_fo_section_0_or_cond;
reg  chebyshev2_fo_section_0_or_cond_reg;
reg [63:0] chebyshev2_fo_section_0_3;
reg [63:0] chebyshev2_fo_section_0_3_reg;
reg [63:0] chebyshev2_fo_section_0_4;
reg [63:0] chebyshev2_fo_section_0_4_reg;
reg [63:0] chebyshev2_fo_section_0_5;
reg [63:0] chebyshev2_fo_section_0_5_reg;
reg [63:0] chebyshev2_fo_section_6_7;
reg [63:0] chebyshev2_fo_section_6_7_reg;
reg [63:0] chebyshev2_fo_section_6_8;
reg [63:0] chebyshev2_fo_section_6_8_reg;
reg [63:0] chebyshev2_fo_section_6_9;
reg [63:0] chebyshev2_fo_section_6_9_reg;
reg [63:0] chebyshev2_fo_section_6_10;
reg [63:0] chebyshev2_fo_section_6_10_reg;
reg [63:0] chebyshev2_fo_section_6_11;
reg [63:0] chebyshev2_fo_section_6_11_reg;
reg [63:0] chebyshev2_fo_section_6_12;
reg [63:0] chebyshev2_fo_section_6_12_reg;
reg [63:0] chebyshev2_fo_section_6_13;
reg [63:0] chebyshev2_fo_section_6_13_reg;
reg [63:0] chebyshev2_fo_section_6_14;
reg [63:0] chebyshev2_fo_section_6_14_reg;
reg [63:0] chebyshev2_fo_section_6_15;
reg [63:0] chebyshev2_fo_section_6_15_reg;
reg [63:0] chebyshev2_fo_section_6_16;
reg [63:0] chebyshev2_fo_section_6_16_reg;
reg [63:0] chebyshev2_fo_section_6_17;
reg [63:0] chebyshev2_fo_section_6_17_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] chebyshev2_fo_section_6_18;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] chebyshev2_fo_section_6_18_reg;
reg [63:0] chebyshev2_fo_section_6_19;
reg [63:0] chebyshev2_fo_section_6_19_reg;
reg [63:0] chebyshev2_fo_section_6_20;
reg [63:0] chebyshev2_fo_section_6_20_reg;
reg [63:0] chebyshev2_fo_section_6_21;
reg [63:0] chebyshev2_fo_section_6_21_reg;
reg [63:0] chebyshev2_fo_section_6_22;
reg [63:0] chebyshev2_fo_section_6_22_reg;
reg [63:0] chebyshev2_fo_section_6_23;
reg [63:0] chebyshev2_fo_section_6_23_reg;
reg [31:0] chebyshev2_fo_section_6_24;
reg [31:0] chebyshev2_fo_section_6_24_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] chebyshev2_fo_section_6_25;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] chebyshev2_fo_section_6_25_reg;
reg [63:0] chebyshev2_fo_section_6_26;
reg [63:0] chebyshev2_fo_section_6_26_reg;
reg [63:0] chebyshev2_fo_section_6_27;
reg [63:0] chebyshev2_fo_section_6_27_reg;
reg [63:0] chebyshev2_fo_section_6_28;
reg [63:0] chebyshev2_fo_section_6_28_reg;
reg [63:0] chebyshev2_fo_section_6_29;
reg [63:0] chebyshev2_fo_section_6_29_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] chebyshev2_fo_section_6_30;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] chebyshev2_fo_section_6_30_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] chebyshev2_fo_section_6_31;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] chebyshev2_fo_section_6_31_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] chebyshev2_fo_section_6_32;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] chebyshev2_fo_section_6_32_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] chebyshev2_fo_section_6_33;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] chebyshev2_fo_section_6_33_reg;
reg [63:0] chebyshev2_fo_section_6_34;
reg [63:0] chebyshev2_fo_section_6_34_reg;
reg [63:0] chebyshev2_fo_section_6_35;
reg [63:0] chebyshev2_fo_section_6_35_reg;
reg [63:0] chebyshev2_fo_section_6_36;
reg [63:0] chebyshev2_fo_section_6_36_reg;
reg [63:0] chebyshev2_fo_section_6_37;
reg [63:0] chebyshev2_fo_section_6_37_reg;
reg [63:0] chebyshev2_fo_section_6_38;
reg [63:0] chebyshev2_fo_section_6_38_reg;
reg [63:0] chebyshev2_fo_section_6_39;
reg [63:0] chebyshev2_fo_section_6_39_reg;
reg [63:0] chebyshev2_fo_section_6_40;
reg [63:0] chebyshev2_fo_section_6_40_reg;
reg [31:0] chebyshev2_fo_section_6_41;
reg [31:0] chebyshev2_fo_section_6_41_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] chebyshev2_fo_section_6_42;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] chebyshev2_fo_section_6_42_reg;
reg [63:0] chebyshev2_fo_section_6_43;
reg [63:0] chebyshev2_fo_section_6_43_reg;
reg [63:0] chebyshev2_fo_section_6_44;
reg [63:0] chebyshev2_fo_section_6_44_reg;
reg [63:0] chebyshev2_fo_section_6_45;
reg [63:0] chebyshev2_fo_section_6_45_reg;
reg [63:0] chebyshev2_fo_section_6_46;
reg [63:0] chebyshev2_fo_section_6_46_reg;
reg [63:0] chebyshev2_fo_section_6_47;
reg [63:0] chebyshev2_fo_section_6_47_reg;
reg [63:0] chebyshev2_fo_section_6_48;
reg [63:0] chebyshev2_fo_section_6_48_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] chebyshev2_fo_section_6_49;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] chebyshev2_fo_section_6_49_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] chebyshev2_fo_section_6_50;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] chebyshev2_fo_section_6_50_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] chebyshev2_fo_section_6_51;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] chebyshev2_fo_section_6_51_reg;
reg [63:0] chebyshev2_fo_section_52_53;
reg [63:0] chebyshev2_fo_section_52_53_reg;
reg [63:0] chebyshev2_fo_section_52_54;
reg [63:0] chebyshev2_fo_section_52_54_reg;
reg [63:0] chebyshev2_fo_section_52_55;
reg [63:0] chebyshev2_fo_section_52_55_reg;
reg [63:0] chebyshev2_fo_section_52_56;
reg [63:0] chebyshev2_fo_section_52_56_reg;
reg [63:0] chebyshev2_fo_section_52_57;
reg [63:0] chebyshev2_fo_section_52_57_reg;
reg [63:0] chebyshev2_fo_section_52_58;
reg [63:0] chebyshev2_fo_section_52_58_reg;
reg [63:0] chebyshev2_fo_section_52_59;
reg [63:0] chebyshev2_fo_section_52_59_reg;
reg [63:0] chebyshev2_fo_section_52_60;
reg [63:0] chebyshev2_fo_section_52_60_reg;
reg [63:0] chebyshev2_fo_section_52_61;
reg [63:0] chebyshev2_fo_section_52_61_reg;
reg [63:0] chebyshev2_fo_section_52_62;
reg [63:0] chebyshev2_fo_section_52_62_reg;
reg [63:0] chebyshev2_fo_section_52_63;
reg [63:0] chebyshev2_fo_section_52_63_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] chebyshev2_fo_section_52_64;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] chebyshev2_fo_section_52_64_reg;
reg [63:0] chebyshev2_fo_section_52_65;
reg [63:0] chebyshev2_fo_section_52_65_reg;
reg [63:0] chebyshev2_fo_section_52_66;
reg [63:0] chebyshev2_fo_section_52_66_reg;
reg [63:0] chebyshev2_fo_section_52_67;
reg [63:0] chebyshev2_fo_section_52_67_reg;
reg [63:0] chebyshev2_fo_section_52_68;
reg [63:0] chebyshev2_fo_section_52_68_reg;
reg [63:0] chebyshev2_fo_section_52_69;
reg [63:0] chebyshev2_fo_section_52_69_reg;
reg [63:0] chebyshev2_fo_section_52_70;
reg [63:0] chebyshev2_fo_section_52_70_reg;
reg [63:0] chebyshev2_fo_section_52_71;
reg [63:0] chebyshev2_fo_section_52_71_reg;
reg [63:0] chebyshev2_fo_section_52_72;
reg [63:0] chebyshev2_fo_section_52_72_reg;
reg [31:0] chebyshev2_fo_section_52_73;
reg [31:0] chebyshev2_fo_section_52_73_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] chebyshev2_fo_section_52_74;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] chebyshev2_fo_section_52_74_reg;
reg [63:0] chebyshev2_fo_section_52_75;
reg [63:0] chebyshev2_fo_section_52_75_reg;
reg [63:0] chebyshev2_fo_section_52_76;
reg [63:0] chebyshev2_fo_section_52_76_reg;
reg [63:0] chebyshev2_fo_section_52_77;
reg [63:0] chebyshev2_fo_section_52_77_reg;
reg [63:0] chebyshev2_fo_section_52_78;
reg [63:0] chebyshev2_fo_section_52_78_reg;
reg [63:0] chebyshev2_fo_section_52_79;
reg [63:0] chebyshev2_fo_section_52_79_reg;
reg [63:0] chebyshev2_fo_section_52_80;
reg [63:0] chebyshev2_fo_section_52_80_reg;
reg [63:0] chebyshev2_fo_section_52_81;
reg [63:0] chebyshev2_fo_section_52_81_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] chebyshev2_fo_section_52_82;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] chebyshev2_fo_section_52_82_reg;
reg [63:0] chebyshev2_fo_section_52_83;
reg [63:0] chebyshev2_fo_section_52_83_reg;
reg [63:0] chebyshev2_fo_section_52_84;
reg [63:0] chebyshev2_fo_section_52_84_reg;
reg [63:0] chebyshev2_fo_section_52_85;
reg [63:0] chebyshev2_fo_section_52_85_reg;
reg [31:0] chebyshev2_fo_section_52_86;
reg [31:0] chebyshev2_fo_section_52_86_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] chebyshev2_fo_section_52_87;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] chebyshev2_fo_section_52_87_reg;
reg [63:0] chebyshev2_fo_section_52_88;
reg [63:0] chebyshev2_fo_section_52_88_reg;
reg [63:0] chebyshev2_fo_section_52_89;
reg [63:0] chebyshev2_fo_section_52_89_reg;
reg [63:0] chebyshev2_fo_section_52_90;
reg [63:0] chebyshev2_fo_section_52_90_reg;
reg [63:0] chebyshev2_fo_section_52_91;
reg [63:0] chebyshev2_fo_section_52_91_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] chebyshev2_fo_section_52_92;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] chebyshev2_fo_section_52_92_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] chebyshev2_fo_section_52_93;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] chebyshev2_fo_section_52_93_reg;
reg [63:0] chebyshev2_fo_section_52_94;
reg [63:0] chebyshev2_fo_section_52_94_reg;
reg [63:0] chebyshev2_fo_section_52_95;
reg [63:0] chebyshev2_fo_section_52_95_reg;
reg [63:0] chebyshev2_fo_section_52_96;
reg [63:0] chebyshev2_fo_section_52_96_reg;
reg [63:0] chebyshev2_fo_section_52_97;
reg [63:0] chebyshev2_fo_section_52_97_reg;
reg [63:0] chebyshev2_fo_section_52_98;
reg [63:0] chebyshev2_fo_section_52_98_reg;
reg [63:0] chebyshev2_fo_section_52_99;
reg [63:0] chebyshev2_fo_section_52_99_reg;
reg [63:0] chebyshev2_fo_section_52_100;
reg [63:0] chebyshev2_fo_section_52_100_reg;
reg [63:0] chebyshev2_fo_section_52_101;
reg [63:0] chebyshev2_fo_section_52_101_reg;
reg [31:0] chebyshev2_fo_section_52_102;
reg [31:0] chebyshev2_fo_section_52_102_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] chebyshev2_fo_section_52_103;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] chebyshev2_fo_section_52_103_reg;
reg [63:0] chebyshev2_fo_section_52_104;
reg [63:0] chebyshev2_fo_section_52_104_reg;
reg [63:0] chebyshev2_fo_section_52_105;
reg [63:0] chebyshev2_fo_section_52_105_reg;
reg [63:0] chebyshev2_fo_section_52_106;
reg [63:0] chebyshev2_fo_section_52_106_reg;
reg [63:0] chebyshev2_fo_section_52_107;
reg [63:0] chebyshev2_fo_section_52_107_reg;
reg [63:0] chebyshev2_fo_section_52_108;
reg [63:0] chebyshev2_fo_section_52_108_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] chebyshev2_fo_section_52_109;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] chebyshev2_fo_section_52_109_reg;
reg [63:0] chebyshev2_fo_section_52_110;
reg [63:0] chebyshev2_fo_section_52_110_reg;
reg [63:0] chebyshev2_fo_section_52_111;
reg [63:0] chebyshev2_fo_section_52_111_reg;
reg [63:0] chebyshev2_fo_section_52_112;
reg [63:0] chebyshev2_fo_section_52_112_reg;
reg [31:0] chebyshev2_fo_section_52_113;
reg [31:0] chebyshev2_fo_section_52_113_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] chebyshev2_fo_section_52_114;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] chebyshev2_fo_section_52_114_reg;
reg [63:0] chebyshev2_fo_section_52_115;
reg [63:0] chebyshev2_fo_section_52_115_reg;
reg [63:0] chebyshev2_fo_section_52_116;
reg [63:0] chebyshev2_fo_section_52_116_reg;
reg [63:0] chebyshev2_fo_section_52_117;
reg [63:0] chebyshev2_fo_section_52_117_reg;
reg [63:0] chebyshev2_fo_section_52_118;
reg [63:0] chebyshev2_fo_section_52_118_reg;
reg [63:0] chebyshev2_fo_section_52_119;
reg [63:0] chebyshev2_fo_section_52_119_reg;
reg [63:0] chebyshev2_fo_section_52_120;
reg [63:0] chebyshev2_fo_section_52_120_reg;
reg [63:0] chebyshev2_fo_section_52_121;
reg [63:0] chebyshev2_fo_section_52_121_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] chebyshev2_fo_section_52_122;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] chebyshev2_fo_section_52_122_reg;
wire [15:0] legup_pthreadpoll_threadID;
reg [63:0] chebyshev2_fo_section_altfp_multiply_64_0_op0;
reg [63:0] chebyshev2_fo_section_altfp_multiply_64_0_op1;
wire [63:0] altfp_multiplier64_chebyshev2_fo_section_0_4_out;
reg  altfp_chebyshev2_fo_section_0_4_en;
reg [63:0] chebyshev2_fo_section_altfp_multiply_64_0;
reg [63:0] chebyshev2_fo_section_altfp_fptosi_64_0_op0;
wire [31:0] altfp_fptosi64_chebyshev2_fo_section_6_24_out;
reg  altfp_chebyshev2_fo_section_6_24_en;
reg [31:0] chebyshev2_fo_section_altfp_fptosi_64_0;
reg [63:0] chebyshev2_fo_section_altfp_add_64_0_op0;
reg [63:0] chebyshev2_fo_section_altfp_add_64_0_op1;
wire [63:0] altfp_adder64_chebyshev2_fo_section_6_13_out;
reg  altfp_chebyshev2_fo_section_6_13_en;
reg [63:0] chebyshev2_fo_section_altfp_add_64_0;
reg [63:0] chebyshev2_fo_section_altfp_divide_64_0_op0;
reg [63:0] chebyshev2_fo_section_altfp_divide_64_0_op1;
wire [63:0] altfp_divider64_chebyshev2_fo_section_6_17_out;
reg  altfp_chebyshev2_fo_section_6_17_en;
reg [63:0] chebyshev2_fo_section_altfp_divide_64_0;
reg [63:0] chebyshev2_fo_section_altfp_subtract_64_0_op0;
reg [63:0] chebyshev2_fo_section_altfp_subtract_64_0_op1;
wire [63:0] altfp_subtractor64_chebyshev2_fo_section_6_38_out;
reg  altfp_chebyshev2_fo_section_6_38_en;
reg [63:0] chebyshev2_fo_section_altfp_subtract_64_0;
wire  altfp_compare64_1_chebyshev2_fo_section_0_1_out;
reg  altfp_chebyshev2_fo_section_0_1_en;
wire  chebyshev2_fo_section_0_1_unused;
wire  altfp_compare64_1_chebyshev2_fo_section_0_2_out;
reg  altfp_chebyshev2_fo_section_0_2_en;
wire  chebyshev2_fo_section_0_2_unused;
reg  altfp_chebyshev2_fo_section_0_3_en;
reg  altfp_chebyshev2_fo_section_0_5_en;
reg  altfp_chebyshev2_fo_section_6_7_en;
reg  altfp_chebyshev2_fo_section_6_12_en;
reg  altfp_chebyshev2_fo_section_6_14_en;
reg  altfp_chebyshev2_fo_section_6_19_en;
reg  altfp_chebyshev2_fo_section_6_34_en;
reg  altfp_chebyshev2_fo_section_6_35_en;
reg  altfp_chebyshev2_fo_section_6_37_en;
reg  altfp_chebyshev2_fo_section_6_8_en;
reg  altfp_chebyshev2_fo_section_6_20_en;
reg  altfp_chebyshev2_fo_section_6_36_en;
reg  altfp_chebyshev2_fo_section_6_9_en;
reg  altfp_chebyshev2_fo_section_6_43_en;
reg  altfp_chebyshev2_fo_section_6_10_en;
reg  altfp_chebyshev2_fo_section_6_44_en;
reg  altfp_chebyshev2_fo_section_6_15_en;
reg  altfp_chebyshev2_fo_section_6_11_en;
reg  altfp_chebyshev2_fo_section_6_26_en;
reg  altfp_chebyshev2_fo_section_6_45_en;
reg  altfp_chebyshev2_fo_section_6_21_en;
reg  altfp_chebyshev2_fo_section_6_27_en;
reg  altfp_chebyshev2_fo_section_6_22_en;
reg  altfp_chebyshev2_fo_section_6_46_en;
reg  altfp_chebyshev2_fo_section_6_39_en;
reg  altfp_chebyshev2_fo_section_6_23_en;
reg  altfp_chebyshev2_fo_section_6_16_en;
reg  altfp_chebyshev2_fo_section_6_40_en;
reg  altfp_chebyshev2_fo_section_6_28_en;
reg  altfp_chebyshev2_fo_section_6_47_en;
reg  altfp_chebyshev2_fo_section_6_29_en;
reg  altfp_chebyshev2_fo_section_6_48_en;
reg  altfp_chebyshev2_fo_section_6_41_en;
reg  altfp_chebyshev2_fo_section_52_53_en;
reg  altfp_chebyshev2_fo_section_52_58_en;
reg  altfp_chebyshev2_fo_section_52_60_en;
reg  altfp_chebyshev2_fo_section_52_65_en;
reg  altfp_chebyshev2_fo_section_52_67_en;
reg  altfp_chebyshev2_fo_section_52_75_en;
reg  altfp_chebyshev2_fo_section_52_94_en;
reg  altfp_chebyshev2_fo_section_52_95_en;
reg  altfp_chebyshev2_fo_section_52_97_en;
reg  altfp_chebyshev2_fo_section_52_105_en;
reg  altfp_chebyshev2_fo_section_52_115_en;
reg  altfp_chebyshev2_fo_section_52_54_en;
reg  altfp_chebyshev2_fo_section_52_55_en;
reg  altfp_chebyshev2_fo_section_52_116_en;
reg  altfp_chebyshev2_fo_section_52_61_en;
reg  altfp_chebyshev2_fo_section_52_76_en;
reg  altfp_chebyshev2_fo_section_52_56_en;
reg  altfp_chebyshev2_fo_section_52_68_en;
reg  altfp_chebyshev2_fo_section_52_66_en;
reg  altfp_chebyshev2_fo_section_52_117_en;
reg  altfp_chebyshev2_fo_section_52_77_en;
reg  altfp_chebyshev2_fo_section_52_96_en;
reg  altfp_chebyshev2_fo_section_52_57_en;
reg  altfp_chebyshev2_fo_section_52_88_en;
reg  altfp_chebyshev2_fo_section_52_69_en;
reg  altfp_chebyshev2_fo_section_52_98_en;
reg  altfp_chebyshev2_fo_section_52_118_en;
reg  altfp_chebyshev2_fo_section_52_78_en;
reg  altfp_chebyshev2_fo_section_52_104_en;
reg  altfp_chebyshev2_fo_section_52_70_en;
reg  altfp_chebyshev2_fo_section_52_83_en;
reg  altfp_chebyshev2_fo_section_52_99_en;
reg  altfp_chebyshev2_fo_section_52_110_en;
reg  altfp_chebyshev2_fo_section_52_59_en;
reg  altfp_chebyshev2_fo_section_52_89_en;
reg  altfp_chebyshev2_fo_section_52_119_en;
reg  altfp_chebyshev2_fo_section_52_79_en;
reg  altfp_chebyshev2_fo_section_52_106_en;
reg  altfp_chebyshev2_fo_section_52_71_en;
reg  altfp_chebyshev2_fo_section_52_84_en;
reg  altfp_chebyshev2_fo_section_52_62_en;
reg  altfp_chebyshev2_fo_section_52_100_en;
reg  altfp_chebyshev2_fo_section_52_90_en;
reg  altfp_chebyshev2_fo_section_52_111_en;
reg  altfp_chebyshev2_fo_section_52_120_en;
reg  altfp_chebyshev2_fo_section_52_80_en;
reg  altfp_chebyshev2_fo_section_52_107_en;
reg  altfp_chebyshev2_fo_section_52_72_en;
reg  altfp_chebyshev2_fo_section_52_85_en;
reg  altfp_chebyshev2_fo_section_52_101_en;
reg  altfp_chebyshev2_fo_section_52_112_en;
reg  altfp_chebyshev2_fo_section_52_63_en;
reg  altfp_chebyshev2_fo_section_52_81_en;
reg  altfp_chebyshev2_fo_section_52_91_en;
reg  altfp_chebyshev2_fo_section_52_108_en;
reg  altfp_chebyshev2_fo_section_52_121_en;
reg  altfp_chebyshev2_fo_section_52_73_en;
reg  altfp_chebyshev2_fo_section_52_86_en;
reg  altfp_chebyshev2_fo_section_52_102_en;
reg  altfp_chebyshev2_fo_section_52_113_en;

/*   %4 = fmul double %3, %tetta_b*/
altfp_multiplier64_11 altfp_multiplier64_11_chebyshev2_fo_section_0_4 (
	.result (altfp_multiplier64_chebyshev2_fo_section_0_4_out),
	.dataa (chebyshev2_fo_section_altfp_multiply_64_0_op0),
	.datab (chebyshev2_fo_section_altfp_multiply_64_0_op1),
	.clock (clk),
	.clk_en (altfp_chebyshev2_fo_section_0_4_en)
);


/*   %24 = fptosi double %23 to i32*/
altfp_fptosi64_6 altfp_fptosi64_6_chebyshev2_fo_section_6_24 (
	.result (altfp_fptosi64_chebyshev2_fo_section_6_24_out),
	.dataa (chebyshev2_fo_section_altfp_fptosi_64_0_op0),
	.clock (clk),
	.clk_en (altfp_chebyshev2_fo_section_6_24_en)
);


/*   %13 = fadd double %11, %12*/
altfp_adder64_14 altfp_adder64_14_chebyshev2_fo_section_6_13 (
	.result (altfp_adder64_chebyshev2_fo_section_6_13_out),
	.dataa (chebyshev2_fo_section_altfp_add_64_0_op0),
	.datab (chebyshev2_fo_section_altfp_add_64_0_op1),
	.clock (clk),
	.clk_en (altfp_chebyshev2_fo_section_6_13_en)
);


/*   %17 = fdiv double %16, %D*/
altfp_divider64_61 altfp_divider64_61_chebyshev2_fo_section_6_17 (
	.result (altfp_divider64_chebyshev2_fo_section_6_17_out),
	.dataa (chebyshev2_fo_section_altfp_divide_64_0_op0),
	.datab (chebyshev2_fo_section_altfp_divide_64_0_op1),
	.clock (clk),
	.clk_en (altfp_chebyshev2_fo_section_6_17_en)
);


/*   %38 = fsub double %36, %37*/
altfp_subtractor64_14 altfp_subtractor64_14_chebyshev2_fo_section_6_38 (
	.result (altfp_subtractor64_chebyshev2_fo_section_6_38_out),
	.dataa (chebyshev2_fo_section_altfp_subtract_64_0_op0),
	.datab (chebyshev2_fo_section_altfp_subtract_64_0_op1),
	.clock (clk),
	.clk_en (altfp_chebyshev2_fo_section_6_38_en)
);


/*   %1 = fcmp oeq double %c0, 1.000000e+00*/
altfp_compare64_1 altfp_compare64_1_chebyshev2_fo_section_0_1 (
	.dataa (arg_c0),
	.datab (64'h3FF0000000000000),
	.clock (clk),
	.clk_en (altfp_chebyshev2_fo_section_0_1_en),
	.aeb (altfp_compare64_1_chebyshev2_fo_section_0_1_out),
	.aneb (chebyshev2_fo_section_0_1_unused),
	.alb (chebyshev2_fo_section_0_1_unused),
	.aleb (chebyshev2_fo_section_0_1_unused),
	.agb (chebyshev2_fo_section_0_1_unused),
	.ageb (chebyshev2_fo_section_0_1_unused),
	.unordered (chebyshev2_fo_section_0_1_unused)
);


/*   %2 = fcmp oeq double %c0, -1.000000e+00*/
altfp_compare64_1 altfp_compare64_1_chebyshev2_fo_section_0_2 (
	.dataa (arg_c0),
	.datab (64'hBFF0000000000000),
	.clock (clk),
	.clk_en (altfp_chebyshev2_fo_section_0_2_en),
	.aeb (altfp_compare64_1_chebyshev2_fo_section_0_2_out),
	.aneb (chebyshev2_fo_section_0_2_unused),
	.alb (chebyshev2_fo_section_0_2_unused),
	.aleb (chebyshev2_fo_section_0_2_unused),
	.agb (chebyshev2_fo_section_0_2_unused),
	.ageb (chebyshev2_fo_section_0_2_unused),
	.unordered (chebyshev2_fo_section_0_2_unused)
);


// Local Rams


always @(posedge clk) begin
if (((cur_state == LEGUP_0) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_0;
if (reset == 1'b0 && ^(LEGUP_0) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_0) & (memory_controller_waitrequest == 1'd0)) & (start == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_0_1;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_0_1) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_0) & (memory_controller_waitrequest == 1'd0)) & (start == 1'd0)))
begin
cur_state <= LEGUP_0;
if (reset == 1'b0 && ^(LEGUP_0) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_0_1) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_0_1;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_0_1) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_0_1) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_0_2;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_0_2) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_0_2) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_0_2;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_0_2) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_0_2) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_0_3;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_0_3) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_0_3) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_0_3;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_0_3) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_0_3) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_0_4;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_0_4) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_0_4) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_0_4;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_0_4) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_0_4) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_0_5;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_0_5) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_0_5) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_0_5;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_0_5) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_0_5) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_0_6;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_0_6) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_0_6) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_0_6;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_0_6) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_0_6) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_0_7;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_0_7) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_0_7) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_0_7;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_0_7) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_0_7) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_0_8;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_0_8) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_0_8) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_0_8;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_0_8) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_0_8) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_0_9;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_0_9) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_0_9) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_0_9;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_0_9) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_0_9) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_0_10;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_0_10) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_0_10) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_0_10;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_0_10) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_0_10) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_0_11;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_0_11) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_0_11) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_0_11;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_0_11) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_0_11) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_0_12;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_0_12) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_0_12) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_0_12;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_0_12) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_0_12) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_0_13;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_0_13) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_0_13) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_0_13;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_0_13) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_0_13) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_0_14;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_0_14) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_0_14) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_0_14;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_0_14) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_0_14) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_0_15;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_0_15) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_0_15) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_0_15;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_0_15) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_0_15) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_0_16;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_0_16) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_0_16) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_0_16;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_0_16) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_0_16) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_0_17;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_0_17) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_0_17) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_0_17;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_0_17) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_0_17) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_0_18;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_0_18) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_0_18) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_0_18;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_0_18) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_0_18) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_0_19;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_0_19) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_0_19) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_0_19;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_0_19) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_0_19) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_0_20;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_0_20) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_0_20) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_0_20;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_0_20) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_0_20) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_0_21;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_0_21) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_0_21) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_0_21;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_0_21) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_0_21) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_0_22;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_0_22) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_0_22) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_0_22;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_0_22) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_0_22) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_0_23;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_0_23) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_0_23) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_0_23;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_0_23) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_0_23) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_0_24;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_0_24) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_0_24) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_0_24;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_0_24) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_0_24) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_0_25;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_0_25) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_0_25) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_0_25;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_0_25) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_0_25) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_0_26;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_0_26) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_0_26) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_0_26;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_0_26) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_0_26) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_0_27;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_0_27) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_0_27) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_0_27;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_0_27) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_0_27) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_0_28;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_0_28) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_0_28) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_0_28;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_0_28) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_0_28) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_0_29;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_0_29) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_0_29) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_0_29;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_0_29) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_0_29) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_0_30;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_0_30) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_0_30) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_0_30;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_0_30) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_0_30) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_0_31;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_0_31) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_0_31) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_0_31;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_0_31) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_0_31) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_0_32;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_0_32) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_0_32) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_0_32;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_0_32) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_0_32) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_0_33;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_0_33) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_0_33) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_0_33;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_0_33) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_0_33) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_0_34;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_0_34) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_0_34) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_0_34;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_0_34) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_chebyshev2_fo_section_BB_0_34) & (memory_controller_waitrequest == 1'd0)) & (chebyshev2_fo_section_0_or_cond_reg == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_35;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_35) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_chebyshev2_fo_section_BB_0_34) & (memory_controller_waitrequest == 1'd0)) & (chebyshev2_fo_section_0_or_cond_reg == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_188;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_188) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_35) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_35;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_35) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_35) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_36;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_36) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_36) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_36;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_36) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_36) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_37;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_37) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_37) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_37;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_37) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_37) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_38;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_38) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_38) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_38;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_38) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_38) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_39;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_39) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_39) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_39;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_39) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_39) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_40;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_40) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_40) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_40;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_40) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_40) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_41;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_41) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_41) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_41;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_41) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_41) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_42;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_42) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_42) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_42;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_42) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_42) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_43;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_43) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_43) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_43;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_43) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_43) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_44;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_44) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_44) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_44;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_44) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_44) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_45;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_45) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_45) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_45;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_45) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_45) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_46;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_46) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_46) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_46;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_46) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_46) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_47;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_47) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_47) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_47;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_47) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_47) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_48;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_48) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_48) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_48;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_48) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_48) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_49;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_49) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_49) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_49;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_49) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_49) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_50;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_50) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_50) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_50;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_50) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_50) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_51;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_51) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_51) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_51;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_51) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_51) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_52;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_52) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_52) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_52;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_52) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_52) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_53;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_53) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_53) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_53;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_53) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_53) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_54;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_54) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_54) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_54;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_54) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_54) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_55;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_55) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_55) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_55;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_55) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_55) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_56;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_56) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_56) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_56;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_56) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_56) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_57;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_57) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_57) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_57;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_57) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_57) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_58;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_58) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_58) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_58;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_58) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_58) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_59;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_59) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_59) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_59;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_59) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_59) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_60;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_60) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_60) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_60;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_60) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_60) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_61;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_61) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_61) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_61;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_61) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_61) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_62;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_62) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_62) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_62;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_62) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_62) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_63;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_63) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_63) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_63;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_63) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_63) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_64;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_64) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_64) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_64;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_64) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_64) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_65;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_65) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_65) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_65;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_65) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_65) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_66;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_66) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_66) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_66;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_66) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_66) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_67;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_67) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_67) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_67;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_67) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_67) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_68;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_68) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_68) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_68;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_68) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_68) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_69;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_69) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_69) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_69;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_69) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_69) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_70;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_70) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_70) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_70;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_70) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_70) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_71;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_71) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_71) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_71;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_71) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_71) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_72;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_72) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_72) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_72;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_72) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_72) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_73;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_73) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_73) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_73;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_73) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_73) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_74;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_74) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_74) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_74;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_74) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_74) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_75;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_75) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_75) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_75;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_75) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_75) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_76;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_76) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_76) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_76;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_76) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_76) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_77;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_77) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_77) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_77;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_77) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_77) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_78;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_78) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_78) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_78;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_78) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_78) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_79;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_79) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_79) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_79;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_79) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_79) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_80;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_80) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_80) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_80;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_80) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_80) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_81;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_81) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_81) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_81;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_81) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_81) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_82;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_82) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_82) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_82;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_82) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_82) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_83;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_83) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_83) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_83;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_83) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_83) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_84;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_84) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_84) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_84;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_84) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_84) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_85;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_85) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_85) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_85;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_85) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_85) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_86;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_86) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_86) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_86;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_86) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_86) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_87;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_87) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_87) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_87;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_87) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_87) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_88;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_88) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_88) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_88;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_88) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_88) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_89;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_89) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_89) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_89;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_89) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_89) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_90;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_90) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_90) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_90;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_90) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_90) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_91;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_91) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_91) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_91;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_91) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_91) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_92;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_92) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_92) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_92;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_92) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_92) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_93;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_93) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_93) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_93;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_93) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_93) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_94;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_94) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_94) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_94;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_94) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_94) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_95;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_95) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_95) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_95;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_95) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_95) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_96;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_96) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_96) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_96;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_96) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_96) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_97;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_97) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_97) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_97;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_97) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_97) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_98;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_98) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_98) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_98;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_98) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_98) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_99;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_99) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_99) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_99;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_99) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_99) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_100;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_100) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_100) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_100;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_100) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_100) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_101;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_101) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_101) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_101;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_101) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_101) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_102;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_102) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_102) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_102;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_102) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_102) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_103;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_103) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_103) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_103;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_103) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_103) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_104;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_104) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_104) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_104;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_104) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_104) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_105;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_105) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_105) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_105;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_105) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_105) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_106;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_106) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_106) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_106;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_106) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_106) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_107;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_107) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_107) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_107;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_107) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_107) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_108;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_108) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_108) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_108;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_108) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_108) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_109;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_109) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_109) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_109;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_109) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_109) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_110;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_110) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_110) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_110;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_110) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_110) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_111;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_111) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_111) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_111;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_111) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_111) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_112;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_112) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_112) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_112;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_112) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_112) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_113;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_113) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_113) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_113;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_113) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_113) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_114;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_114) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_114) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_114;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_114) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_114) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_115;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_115) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_115) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_115;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_115) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_115) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_116;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_116) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_116) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_116;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_116) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_116) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_117;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_117) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_117) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_117;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_117) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_117) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_118;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_118) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_118) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_118;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_118) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_118) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_119;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_119) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_119) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_119;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_119) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_119) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_120;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_120) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_120) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_120;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_120) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_120) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_121;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_121) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_121) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_121;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_121) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_121) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_122;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_122) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_122) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_122;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_122) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_122) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_123;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_123) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_123) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_123;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_123) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_123) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_124;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_124) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_124) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_124;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_124) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_124) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_125;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_125) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_125) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_125;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_125) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_125) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_126;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_126) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_126) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_126;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_126) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_126) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_127;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_127) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_127) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_127;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_127) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_127) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_128;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_128) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_128) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_128;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_128) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_128) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_129;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_129) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_129) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_129;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_129) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_129) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_130;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_130) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_130) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_130;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_130) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_130) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_131;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_131) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_131) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_131;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_131) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_131) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_132;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_132) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_132) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_132;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_132) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_132) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_133;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_133) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_133) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_133;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_133) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_133) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_134;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_134) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_134) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_134;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_134) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_134) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_135;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_135) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_135) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_135;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_135) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_135) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_136;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_136) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_136) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_136;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_136) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_136) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_137;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_137) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_137) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_137;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_137) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_137) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_138;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_138) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_138) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_138;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_138) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_138) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_139;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_139) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_139) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_139;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_139) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_139) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_140;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_140) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_140) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_140;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_140) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_140) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_141;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_141) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_141) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_141;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_141) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_141) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_142;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_142) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_142) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_142;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_142) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_142) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_143;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_143) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_143) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_143;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_143) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_143) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_144;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_144) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_144) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_144;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_144) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_144) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_145;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_145) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_145) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_145;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_145) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_145) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_146;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_146) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_146) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_146;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_146) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_146) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_147;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_147) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_147) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_147;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_147) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_147) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_148;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_148) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_148) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_148;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_148) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_148) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_149;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_149) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_149) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_149;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_149) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_149) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_150;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_150) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_150) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_150;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_150) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_150) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_151;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_151) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_151) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_151;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_151) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_151) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_152;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_152) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_152) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_152;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_152) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_152) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_153;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_153) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_153) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_153;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_153) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_153) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_154;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_154) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_154) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_154;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_154) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_154) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_155;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_155) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_155) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_155;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_155) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_155) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_156;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_156) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_156) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_156;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_156) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_156) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_157;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_157) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_157) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_157;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_157) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_157) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_158;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_158) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_158) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_158;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_158) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_158) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_159;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_159) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_159) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_159;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_159) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_159) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_160;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_160) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_160) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_160;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_160) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_160) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_161;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_161) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_161) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_161;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_161) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_161) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_162;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_162) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_162) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_162;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_162) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_162) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_163;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_163) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_163) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_163;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_163) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_163) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_164;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_164) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_164) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_164;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_164) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_164) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_165;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_165) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_165) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_165;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_165) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_165) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_166;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_166) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_166) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_166;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_166) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_166) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_167;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_167) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_167) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_167;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_167) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_167) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_168;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_168) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_168) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_168;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_168) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_168) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_169;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_169) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_169) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_169;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_169) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_169) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_170;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_170) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_170) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_170;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_170) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_170) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_171;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_171) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_171) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_171;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_171) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_171) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_172;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_172) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_172) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_172;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_172) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_172) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_173;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_173) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_173) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_173;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_173) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_173) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_174;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_174) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_174) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_174;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_174) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_174) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_175;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_175) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_175) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_175;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_175) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_175) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_176;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_176) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_176) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_176;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_176) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_176) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_177;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_177) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_177) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_177;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_177) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_177) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_178;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_178) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_178) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_178;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_178) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_178) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_179;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_179) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_179) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_179;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_179) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_179) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_180;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_180) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_180) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_180;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_180) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_180) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_181;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_181) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_181) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_181;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_181) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_181) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_182;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_182) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_182) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_182;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_182) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_182) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_183;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_183) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_183) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_183;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_183) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_183) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_184;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_184) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_184) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_184;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_184) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_184) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_185;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_185) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_185) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_185;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_185) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_185) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_186;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_186) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_186) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_186;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_186) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_186) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_187;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_187) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_187) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_6_187;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_6_187) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_187) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_123_342;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_123_342) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_188) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_188;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_188) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_188) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_189;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_189) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_189) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_189;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_189) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_189) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_190;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_190) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_190) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_190;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_190) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_190) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_191;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_191) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_191) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_191;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_191) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_191) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_192;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_192) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_192) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_192;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_192) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_192) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_193;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_193) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_193) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_193;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_193) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_193) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_194;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_194) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_194) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_194;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_194) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_194) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_195;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_195) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_195) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_195;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_195) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_195) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_196;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_196) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_196) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_196;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_196) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_196) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_197;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_197) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_197) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_197;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_197) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_197) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_198;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_198) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_198) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_198;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_198) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_198) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_199;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_199) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_199) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_199;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_199) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_199) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_200;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_200) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_200) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_200;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_200) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_200) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_201;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_201) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_201) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_201;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_201) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_201) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_202;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_202) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_202) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_202;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_202) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_202) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_203;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_203) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_203) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_203;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_203) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_203) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_204;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_204) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_204) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_204;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_204) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_204) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_205;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_205) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_205) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_205;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_205) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_205) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_206;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_206) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_206) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_206;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_206) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_206) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_207;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_207) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_207) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_207;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_207) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_207) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_208;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_208) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_208) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_208;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_208) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_208) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_209;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_209) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_209) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_209;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_209) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_209) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_210;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_210) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_210) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_210;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_210) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_210) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_211;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_211) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_211) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_211;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_211) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_211) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_212;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_212) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_212) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_212;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_212) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_212) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_213;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_213) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_213) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_213;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_213) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_213) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_214;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_214) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_214) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_214;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_214) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_214) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_215;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_215) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_215) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_215;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_215) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_215) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_216;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_216) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_216) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_216;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_216) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_216) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_217;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_217) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_217) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_217;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_217) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_217) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_218;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_218) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_218) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_218;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_218) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_218) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_219;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_219) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_219) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_219;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_219) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_219) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_220;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_220) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_220) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_220;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_220) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_220) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_221;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_221) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_221) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_221;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_221) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_221) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_222;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_222) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_222) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_222;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_222) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_222) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_223;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_223) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_223) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_223;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_223) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_223) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_224;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_224) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_224) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_224;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_224) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_224) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_225;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_225) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_225) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_225;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_225) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_225) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_226;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_226) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_226) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_226;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_226) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_226) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_227;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_227) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_227) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_227;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_227) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_227) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_228;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_228) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_228) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_228;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_228) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_228) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_229;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_229) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_229) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_229;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_229) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_229) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_230;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_230) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_230) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_230;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_230) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_230) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_231;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_231) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_231) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_231;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_231) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_231) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_232;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_232) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_232) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_232;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_232) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_232) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_233;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_233) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_233) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_233;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_233) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_233) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_234;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_234) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_234) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_234;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_234) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_234) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_235;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_235) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_235) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_235;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_235) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_235) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_236;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_236) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_236) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_236;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_236) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_236) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_237;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_237) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_237) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_237;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_237) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_237) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_238;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_238) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_238) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_238;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_238) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_238) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_239;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_239) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_239) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_239;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_239) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_239) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_240;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_240) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_240) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_240;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_240) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_240) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_241;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_241) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_241) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_241;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_241) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_241) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_242;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_242) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_242) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_242;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_242) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_242) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_243;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_243) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_243) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_243;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_243) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_243) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_244;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_244) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_244) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_244;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_244) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_244) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_245;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_245) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_245) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_245;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_245) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_245) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_246;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_246) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_246) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_246;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_246) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_246) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_247;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_247) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_247) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_247;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_247) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_247) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_248;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_248) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_248) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_248;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_248) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_248) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_249;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_249) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_249) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_249;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_249) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_249) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_250;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_250) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_250) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_250;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_250) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_250) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_251;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_251) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_251) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_251;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_251) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_251) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_252;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_252) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_252) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_252;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_252) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_252) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_253;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_253) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_253) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_253;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_253) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_253) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_254;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_254) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_254) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_254;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_254) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_254) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_255;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_255) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_255) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_255;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_255) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_255) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_256;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_256) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_256) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_256;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_256) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_256) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_257;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_257) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_257) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_257;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_257) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_257) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_258;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_258) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_258) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_258;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_258) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_258) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_259;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_259) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_259) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_259;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_259) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_259) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_260;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_260) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_260) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_260;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_260) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_260) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_261;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_261) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_261) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_261;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_261) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_261) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_262;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_262) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_262) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_262;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_262) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_262) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_263;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_263) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_263) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_263;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_263) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_263) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_264;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_264) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_264) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_264;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_264) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_264) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_265;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_265) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_265) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_265;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_265) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_265) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_266;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_266) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_266) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_266;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_266) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_266) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_267;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_267) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_267) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_267;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_267) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_267) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_268;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_268) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_268) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_268;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_268) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_268) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_269;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_269) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_269) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_269;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_269) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_269) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_270;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_270) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_270) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_270;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_270) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_270) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_271;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_271) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_271) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_271;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_271) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_271) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_272;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_272) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_272) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_272;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_272) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_272) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_273;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_273) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_273) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_273;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_273) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_273) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_274;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_274) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_274) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_274;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_274) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_274) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_275;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_275) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_275) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_275;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_275) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_275) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_276;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_276) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_276) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_276;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_276) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_276) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_277;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_277) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_277) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_277;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_277) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_277) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_278;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_278) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_278) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_278;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_278) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_278) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_279;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_279) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_279) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_279;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_279) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_279) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_280;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_280) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_280) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_280;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_280) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_280) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_281;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_281) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_281) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_281;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_281) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_281) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_282;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_282) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_282) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_282;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_282) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_282) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_283;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_283) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_283) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_283;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_283) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_283) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_284;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_284) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_284) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_284;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_284) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_284) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_285;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_285) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_285) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_285;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_285) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_285) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_286;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_286) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_286) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_286;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_286) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_286) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_287;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_287) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_287) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_287;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_287) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_287) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_288;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_288) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_288) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_288;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_288) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_288) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_289;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_289) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_289) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_289;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_289) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_289) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_290;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_290) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_290) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_290;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_290) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_290) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_291;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_291) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_291) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_291;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_291) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_291) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_292;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_292) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_292) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_292;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_292) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_292) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_293;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_293) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_293) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_293;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_293) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_293) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_294;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_294) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_294) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_294;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_294) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_294) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_295;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_295) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_295) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_295;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_295) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_295) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_296;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_296) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_296) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_296;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_296) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_296) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_297;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_297) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_297) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_297;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_297) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_297) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_298;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_298) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_298) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_298;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_298) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_298) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_299;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_299) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_299) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_299;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_299) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_299) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_300;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_300) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_300) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_300;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_300) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_300) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_301;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_301) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_301) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_301;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_301) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_301) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_302;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_302) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_302) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_302;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_302) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_302) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_303;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_303) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_303) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_303;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_303) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_303) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_304;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_304) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_304) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_304;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_304) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_304) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_305;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_305) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_305) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_305;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_305) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_305) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_306;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_306) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_306) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_306;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_306) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_306) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_307;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_307) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_307) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_307;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_307) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_307) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_308;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_308) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_308) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_308;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_308) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_308) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_309;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_309) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_309) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_309;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_309) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_309) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_310;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_310) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_310) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_310;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_310) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_310) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_311;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_311) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_311) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_311;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_311) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_311) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_312;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_312) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_312) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_312;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_312) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_312) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_313;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_313) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_313) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_313;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_313) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_313) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_314;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_314) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_314) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_314;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_314) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_314) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_315;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_315) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_315) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_315;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_315) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_315) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_316;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_316) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_316) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_316;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_316) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_316) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_317;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_317) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_317) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_317;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_317) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_317) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_318;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_318) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_318) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_318;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_318) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_318) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_319;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_319) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_319) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_319;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_319) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_319) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_320;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_320) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_320) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_320;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_320) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_320) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_321;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_321) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_321) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_321;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_321) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_321) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_322;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_322) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_322) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_322;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_322) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_322) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_323;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_323) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_323) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_323;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_323) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_323) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_324;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_324) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_324) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_324;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_324) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_324) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_325;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_325) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_325) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_325;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_325) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_325) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_326;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_326) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_326) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_326;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_326) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_326) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_327;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_327) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_327) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_327;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_327) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_327) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_328;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_328) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_328) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_328;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_328) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_328) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_329;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_329) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_329) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_329;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_329) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_329) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_330;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_330) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_330) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_330;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_330) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_330) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_331;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_331) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_331) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_331;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_331) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_331) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_332;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_332) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_332) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_332;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_332) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_332) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_333;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_333) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_333) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_333;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_333) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_333) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_334;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_334) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_334) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_334;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_334) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_334) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_335;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_335) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_335) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_335;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_335) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_335) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_336;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_336) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_336) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_336;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_336) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_336) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_337;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_337) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_337) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_337;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_337) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_337) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_338;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_338) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_338) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_338;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_338) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_338) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_339;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_339) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_339) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_339;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_339) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_339) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_340;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_340) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_340) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_340;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_340) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_340) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_341;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_341) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_341) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_52_341;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_52_341) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_341) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_123_342;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_123_342) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_123_342) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_chebyshev2_fo_section_BB_123_342;
if (reset == 1'b0 && ^(LEGUP_F_chebyshev2_fo_section_BB_123_342) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_chebyshev2_fo_section_BB_123_342) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_0;
if (reset == 1'b0 && ^(LEGUP_0) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((reset == 1'd1))
begin
cur_state <= 9'd0;
if (reset == 1'b0 && ^(9'd0) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
end
always @(*) begin
chebyshev2_fo_section_0_1 = altfp_compare64_1_chebyshev2_fo_section_0_1_out;
end
always @(posedge clk) begin
/* chebyshev2_fo_section: %0*/
/*   %1 = fcmp oeq double %c0, 1.000000e+00*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_0_2))
begin
chebyshev2_fo_section_0_1_reg <= chebyshev2_fo_section_0_1;
if (reset == 1'b0 && ^(chebyshev2_fo_section_0_1) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev2_fo_section_0_1_reg"); $finish; end
end
/* chebyshev2_fo_section: %0*/
/*   %1 = fcmp oeq double %c0, 1.000000e+00*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_0_2))
begin
chebyshev2_fo_section_0_1_reg <= chebyshev2_fo_section_0_1;
if (reset == 1'b0 && ^(chebyshev2_fo_section_0_1) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev2_fo_section_0_1_reg"); $finish; end
end
end
always @(*) begin
chebyshev2_fo_section_0_2 = altfp_compare64_1_chebyshev2_fo_section_0_2_out;
end
always @(posedge clk) begin
/* chebyshev2_fo_section: %0*/
/*   %2 = fcmp oeq double %c0, -1.000000e+00*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_0_2))
begin
chebyshev2_fo_section_0_2_reg <= chebyshev2_fo_section_0_2;
if (reset == 1'b0 && ^(chebyshev2_fo_section_0_2) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev2_fo_section_0_2_reg"); $finish; end
end
/* chebyshev2_fo_section: %0*/
/*   %2 = fcmp oeq double %c0, -1.000000e+00*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_0_2))
begin
chebyshev2_fo_section_0_2_reg <= chebyshev2_fo_section_0_2;
if (reset == 1'b0 && ^(chebyshev2_fo_section_0_2) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev2_fo_section_0_2_reg"); $finish; end
end
end
always @(*) begin
/* chebyshev2_fo_section: %0*/
/*   %or.cond = or i1 %1, %2*/
begin
chebyshev2_fo_section_0_or_cond = (chebyshev2_fo_section_0_1 | chebyshev2_fo_section_0_2);
end
end
always @(posedge clk) begin
/* chebyshev2_fo_section: %0*/
/*   %or.cond = or i1 %1, %2*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_0_2))
begin
chebyshev2_fo_section_0_or_cond_reg <= chebyshev2_fo_section_0_or_cond;
if (reset == 1'b0 && ^(chebyshev2_fo_section_0_or_cond) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev2_fo_section_0_or_cond_reg"); $finish; end
end
end
always @(*) begin
chebyshev2_fo_section_0_3 = chebyshev2_fo_section_altfp_multiply_64_0;
end
always @(posedge clk) begin
/* chebyshev2_fo_section: %0*/
/*   %3 = fmul double %g, %g*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_0_12))
begin
chebyshev2_fo_section_0_3_reg <= chebyshev2_fo_section_0_3;
if (reset == 1'b0 && ^(chebyshev2_fo_section_0_3) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev2_fo_section_0_3_reg"); $finish; end
end
/* chebyshev2_fo_section: %0*/
/*   %3 = fmul double %g, %g*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_0_12))
begin
chebyshev2_fo_section_0_3_reg <= chebyshev2_fo_section_0_3;
if (reset == 1'b0 && ^(chebyshev2_fo_section_0_3) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev2_fo_section_0_3_reg"); $finish; end
end
/* chebyshev2_fo_section: %6*/
/*   %43 = fmul double %7, %a*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_69))
begin
chebyshev2_fo_section_0_3_reg <= chebyshev2_fo_section_6_43;
if (reset == 1'b0 && ^(chebyshev2_fo_section_6_43) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev2_fo_section_0_3_reg"); $finish; end
end
/* chebyshev2_fo_section: %52*/
/*   %68 = fmul double %67, %si*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_233))
begin
chebyshev2_fo_section_0_3_reg <= chebyshev2_fo_section_52_68;
if (reset == 1'b0 && ^(chebyshev2_fo_section_52_68) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev2_fo_section_0_3_reg"); $finish; end
end
/* chebyshev2_fo_section: %6*/
/*   %22 = fmul double %19, %21*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_106))
begin
chebyshev2_fo_section_0_3_reg <= chebyshev2_fo_section_6_22;
if (reset == 1'b0 && ^(chebyshev2_fo_section_6_22) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev2_fo_section_0_3_reg"); $finish; end
end
/* chebyshev2_fo_section: %52*/
/*   %104 = fmul double %96, %77*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_250))
begin
chebyshev2_fo_section_0_3_reg <= chebyshev2_fo_section_52_104;
if (reset == 1'b0 && ^(chebyshev2_fo_section_52_104) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev2_fo_section_0_3_reg"); $finish; end
end
/* chebyshev2_fo_section: %52*/
/*   %55 = fmul double %54, %si*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_221))
begin
chebyshev2_fo_section_0_3_reg <= chebyshev2_fo_section_52_55;
if (reset == 1'b0 && ^(chebyshev2_fo_section_52_55) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev2_fo_section_0_3_reg"); $finish; end
end
/* chebyshev2_fo_section: %52*/
/*   %80 = fmul double %79, 2.000000e+00*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_274))
begin
chebyshev2_fo_section_0_3_reg <= chebyshev2_fo_section_52_80;
if (reset == 1'b0 && ^(chebyshev2_fo_section_52_80) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev2_fo_section_0_3_reg"); $finish; end
end
end
always @(*) begin
chebyshev2_fo_section_0_4 = chebyshev2_fo_section_altfp_multiply_64_0;
end
always @(posedge clk) begin
/* chebyshev2_fo_section: %0*/
/*   %4 = fmul double %3, %tetta_b*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_0_23))
begin
chebyshev2_fo_section_0_4_reg <= chebyshev2_fo_section_0_4;
if (reset == 1'b0 && ^(chebyshev2_fo_section_0_4) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev2_fo_section_0_4_reg"); $finish; end
end
/* chebyshev2_fo_section: %0*/
/*   %4 = fmul double %3, %tetta_b*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_0_23))
begin
chebyshev2_fo_section_0_4_reg <= chebyshev2_fo_section_0_4;
if (reset == 1'b0 && ^(chebyshev2_fo_section_0_4) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev2_fo_section_0_4_reg"); $finish; end
end
/* chebyshev2_fo_section: %6*/
/*   %7 = fmul double %tetta_b, 2.000000e+00*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_46))
begin
chebyshev2_fo_section_0_4_reg <= chebyshev2_fo_section_6_7;
if (reset == 1'b0 && ^(chebyshev2_fo_section_6_7) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev2_fo_section_0_4_reg"); $finish; end
end
/* chebyshev2_fo_section: %6*/
/*   %15 = fmul double %14, %c*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_81))
begin
chebyshev2_fo_section_0_4_reg <= chebyshev2_fo_section_6_15;
if (reset == 1'b0 && ^(chebyshev2_fo_section_6_15) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev2_fo_section_0_4_reg"); $finish; end
end
/* chebyshev2_fo_section: %52*/
/*   %61 = fmul double %60, %c*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_223))
begin
chebyshev2_fo_section_0_4_reg <= chebyshev2_fo_section_52_61;
if (reset == 1'b0 && ^(chebyshev2_fo_section_52_61) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev2_fo_section_0_4_reg"); $finish; end
end
/* chebyshev2_fo_section: %52*/
/*   %115 = fmul double %a, 2.000000e+00*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_209))
begin
chebyshev2_fo_section_0_4_reg <= chebyshev2_fo_section_52_115;
if (reset == 1'b0 && ^(chebyshev2_fo_section_52_115) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev2_fo_section_0_4_reg"); $finish; end
end
end
always @(*) begin
chebyshev2_fo_section_0_5 = chebyshev2_fo_section_altfp_multiply_64_0;
end
always @(posedge clk) begin
/* chebyshev2_fo_section: %0*/
/*   %5 = fmul double %4, %tetta_b*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_0_34))
begin
chebyshev2_fo_section_0_5_reg <= chebyshev2_fo_section_0_5;
if (reset == 1'b0 && ^(chebyshev2_fo_section_0_5) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev2_fo_section_0_5_reg"); $finish; end
end
/* chebyshev2_fo_section: %0*/
/*   %5 = fmul double %4, %tetta_b*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_0_34))
begin
chebyshev2_fo_section_0_5_reg <= chebyshev2_fo_section_0_5;
if (reset == 1'b0 && ^(chebyshev2_fo_section_0_5) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev2_fo_section_0_5_reg"); $finish; end
end
/* chebyshev2_fo_section: %52*/
/*   %71 = fmul double %65, %70*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_269))
begin
chebyshev2_fo_section_0_5_reg <= chebyshev2_fo_section_52_71;
if (reset == 1'b0 && ^(chebyshev2_fo_section_52_71) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev2_fo_section_0_5_reg"); $finish; end
end
end
always @(*) begin
chebyshev2_fo_section_6_7 = chebyshev2_fo_section_altfp_multiply_64_0;
end
always @(*) begin
/* chebyshev2_fo_section: %6*/
/*   %7 = fmul double %tetta_b, 2.000000e+00*/
chebyshev2_fo_section_6_7_reg = chebyshev2_fo_section_0_4_reg;
end
always @(*) begin
chebyshev2_fo_section_6_8 = chebyshev2_fo_section_altfp_multiply_64_0;
end
always @(*) begin
/* chebyshev2_fo_section: %6*/
/*   %8 = fmul double %7, %g*/
chebyshev2_fo_section_6_8_reg = chebyshev2_fo_section_6_44_reg;
end
always @(*) begin
chebyshev2_fo_section_6_9 = chebyshev2_fo_section_altfp_multiply_64_0;
end
always @(posedge clk) begin
/* chebyshev2_fo_section: %6*/
/*   %9 = fmul double %8, %b*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_68))
begin
chebyshev2_fo_section_6_9_reg <= chebyshev2_fo_section_6_9;
if (reset == 1'b0 && ^(chebyshev2_fo_section_6_9) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev2_fo_section_6_9_reg"); $finish; end
end
/* chebyshev2_fo_section: %6*/
/*   %9 = fmul double %8, %b*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_68))
begin
chebyshev2_fo_section_6_9_reg <= chebyshev2_fo_section_6_9;
if (reset == 1'b0 && ^(chebyshev2_fo_section_6_9) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev2_fo_section_6_9_reg"); $finish; end
end
/* chebyshev2_fo_section: %52*/
/*   %117 = fmul double %116, %tetta_b*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_234))
begin
chebyshev2_fo_section_6_9_reg <= chebyshev2_fo_section_52_117;
if (reset == 1'b0 && ^(chebyshev2_fo_section_52_117) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev2_fo_section_6_9_reg"); $finish; end
end
/* chebyshev2_fo_section: %52*/
/*   %54 = fmul double %53, %b*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_210))
begin
chebyshev2_fo_section_6_9_reg <= chebyshev2_fo_section_52_54;
if (reset == 1'b0 && ^(chebyshev2_fo_section_52_54) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev2_fo_section_6_9_reg"); $finish; end
end
end
always @(*) begin
chebyshev2_fo_section_6_10 = chebyshev2_fo_section_altfp_multiply_64_0;
end
always @(posedge clk) begin
/* chebyshev2_fo_section: %6*/
/*   %10 = fmul double %9, %si*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_79))
begin
chebyshev2_fo_section_6_10_reg <= chebyshev2_fo_section_6_10;
if (reset == 1'b0 && ^(chebyshev2_fo_section_6_10) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev2_fo_section_6_10_reg"); $finish; end
end
/* chebyshev2_fo_section: %6*/
/*   %10 = fmul double %9, %si*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_79))
begin
chebyshev2_fo_section_6_10_reg <= chebyshev2_fo_section_6_10;
if (reset == 1'b0 && ^(chebyshev2_fo_section_6_10) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev2_fo_section_6_10_reg"); $finish; end
end
/* chebyshev2_fo_section: %52*/
/*   %56 = fmul double %55, %tetta_b*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_232))
begin
chebyshev2_fo_section_6_10_reg <= chebyshev2_fo_section_52_56;
if (reset == 1'b0 && ^(chebyshev2_fo_section_52_56) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev2_fo_section_6_10_reg"); $finish; end
end
/* chebyshev2_fo_section: %52*/
/*   %60 = fmul double %3, %c*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_201))
begin
chebyshev2_fo_section_6_10_reg <= chebyshev2_fo_section_52_60;
if (reset == 1'b0 && ^(chebyshev2_fo_section_52_60) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev2_fo_section_6_10_reg"); $finish; end
end
end
always @(*) begin
chebyshev2_fo_section_6_11 = chebyshev2_fo_section_altfp_add_64_0;
end
always @(*) begin
/* chebyshev2_fo_section: %6*/
/*   %11 = fadd double %5, %10*/
chebyshev2_fo_section_6_11_reg = chebyshev2_fo_section_6_16_reg;
end
always @(*) begin
chebyshev2_fo_section_6_12 = chebyshev2_fo_section_altfp_multiply_64_0;
end
always @(posedge clk) begin
/* chebyshev2_fo_section: %6*/
/*   %12 = fmul double %b, %b*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_47))
begin
chebyshev2_fo_section_6_12_reg <= chebyshev2_fo_section_6_12;
if (reset == 1'b0 && ^(chebyshev2_fo_section_6_12) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev2_fo_section_6_12_reg"); $finish; end
end
/* chebyshev2_fo_section: %6*/
/*   %12 = fmul double %b, %b*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_47))
begin
chebyshev2_fo_section_6_12_reg <= chebyshev2_fo_section_6_12;
if (reset == 1'b0 && ^(chebyshev2_fo_section_6_12) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev2_fo_section_6_12_reg"); $finish; end
end
/* chebyshev2_fo_section: %52*/
/*   %65 = fmul double %c0, -4.000000e+00*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_202))
begin
chebyshev2_fo_section_6_12_reg <= chebyshev2_fo_section_52_65;
if (reset == 1'b0 && ^(chebyshev2_fo_section_52_65) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev2_fo_section_6_12_reg"); $finish; end
end
/* chebyshev2_fo_section: %52*/
/*   %107 = fmul double %106, 2.000000e+00*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_275))
begin
chebyshev2_fo_section_6_12_reg <= chebyshev2_fo_section_52_107;
if (reset == 1'b0 && ^(chebyshev2_fo_section_52_107) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev2_fo_section_6_12_reg"); $finish; end
end
end
always @(*) begin
chebyshev2_fo_section_6_13 = chebyshev2_fo_section_altfp_add_64_0;
end
always @(posedge clk) begin
/* chebyshev2_fo_section: %6*/
/*   %13 = fadd double %11, %12*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_107))
begin
chebyshev2_fo_section_6_13_reg <= chebyshev2_fo_section_6_13;
if (reset == 1'b0 && ^(chebyshev2_fo_section_6_13) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev2_fo_section_6_13_reg"); $finish; end
end
/* chebyshev2_fo_section: %6*/
/*   %13 = fadd double %11, %12*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_107))
begin
chebyshev2_fo_section_6_13_reg <= chebyshev2_fo_section_6_13;
if (reset == 1'b0 && ^(chebyshev2_fo_section_6_13) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev2_fo_section_6_13_reg"); $finish; end
end
/* chebyshev2_fo_section: %52*/
/*   %62 = fadd double %59, %61*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_274))
begin
chebyshev2_fo_section_6_13_reg <= chebyshev2_fo_section_52_62;
if (reset == 1'b0 && ^(chebyshev2_fo_section_52_62) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev2_fo_section_6_13_reg"); $finish; end
end
/* chebyshev2_fo_section: %52*/
/*   %66 = fadd double %58, %61*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_237))
begin
chebyshev2_fo_section_6_13_reg <= chebyshev2_fo_section_52_66;
if (reset == 1'b0 && ^(chebyshev2_fo_section_52_66) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev2_fo_section_6_13_reg"); $finish; end
end
/* chebyshev2_fo_section: %6*/
/*   %28 = fadd double %27, %15*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_122))
begin
chebyshev2_fo_section_6_13_reg <= chebyshev2_fo_section_6_28;
if (reset == 1'b0 && ^(chebyshev2_fo_section_6_28) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev2_fo_section_6_13_reg"); $finish; end
end
/* chebyshev2_fo_section: %52*/
/*   %99 = fadd double %96, %98*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_259))
begin
chebyshev2_fo_section_6_13_reg <= chebyshev2_fo_section_52_99;
if (reset == 1'b0 && ^(chebyshev2_fo_section_52_99) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev2_fo_section_6_13_reg"); $finish; end
end
end
always @(*) begin
chebyshev2_fo_section_6_14 = chebyshev2_fo_section_altfp_multiply_64_0;
end
always @(posedge clk) begin
/* chebyshev2_fo_section: %6*/
/*   %14 = fmul double %3, %c*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_48))
begin
chebyshev2_fo_section_6_14_reg <= chebyshev2_fo_section_6_14;
if (reset == 1'b0 && ^(chebyshev2_fo_section_6_14) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev2_fo_section_6_14_reg"); $finish; end
end
/* chebyshev2_fo_section: %6*/
/*   %14 = fmul double %3, %c*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_48))
begin
chebyshev2_fo_section_6_14_reg <= chebyshev2_fo_section_6_14;
if (reset == 1'b0 && ^(chebyshev2_fo_section_6_14) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev2_fo_section_6_14_reg"); $finish; end
end
/* chebyshev2_fo_section: %6*/
/*   %39 = fmul double %19, %38*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_107))
begin
chebyshev2_fo_section_6_14_reg <= chebyshev2_fo_section_6_39;
if (reset == 1'b0 && ^(chebyshev2_fo_section_6_39) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev2_fo_section_6_14_reg"); $finish; end
end
/* chebyshev2_fo_section: %52*/
/*   %67 = fmul double %g, %b*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_203))
begin
chebyshev2_fo_section_6_14_reg <= chebyshev2_fo_section_52_67;
if (reset == 1'b0 && ^(chebyshev2_fo_section_52_67) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev2_fo_section_6_14_reg"); $finish; end
end
/* chebyshev2_fo_section: %52*/
/*   %69 = fmul double %68, %tetta_b*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_244))
begin
chebyshev2_fo_section_6_14_reg <= chebyshev2_fo_section_52_69;
if (reset == 1'b0 && ^(chebyshev2_fo_section_52_69) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev2_fo_section_6_14_reg"); $finish; end
end
/* chebyshev2_fo_section: %52*/
/*   %111 = fmul double %65, %110*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_272))
begin
chebyshev2_fo_section_6_14_reg <= chebyshev2_fo_section_52_111;
if (reset == 1'b0 && ^(chebyshev2_fo_section_52_111) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev2_fo_section_6_14_reg"); $finish; end
end
end
always @(*) begin
chebyshev2_fo_section_6_15 = chebyshev2_fo_section_altfp_multiply_64_0;
end
always @(*) begin
/* chebyshev2_fo_section: %6*/
/*   %15 = fmul double %14, %c*/
chebyshev2_fo_section_6_15_reg = chebyshev2_fo_section_0_4_reg;
end
always @(*) begin
chebyshev2_fo_section_6_16 = chebyshev2_fo_section_altfp_add_64_0;
end
always @(posedge clk) begin
/* chebyshev2_fo_section: %6*/
/*   %16 = fadd double %13, %15*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_121))
begin
chebyshev2_fo_section_6_16_reg <= chebyshev2_fo_section_6_16;
if (reset == 1'b0 && ^(chebyshev2_fo_section_6_16) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev2_fo_section_6_16_reg"); $finish; end
end
/* chebyshev2_fo_section: %6*/
/*   %16 = fadd double %13, %15*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_121))
begin
chebyshev2_fo_section_6_16_reg <= chebyshev2_fo_section_6_16;
if (reset == 1'b0 && ^(chebyshev2_fo_section_6_16) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev2_fo_section_6_16_reg"); $finish; end
end
/* chebyshev2_fo_section: %6*/
/*   %11 = fadd double %5, %10*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_93))
begin
chebyshev2_fo_section_6_16_reg <= chebyshev2_fo_section_6_11;
if (reset == 1'b0 && ^(chebyshev2_fo_section_6_11) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev2_fo_section_6_16_reg"); $finish; end
end
/* chebyshev2_fo_section: %52*/
/*   %70 = fadd double %66, %69*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_258))
begin
chebyshev2_fo_section_6_16_reg <= chebyshev2_fo_section_52_70;
if (reset == 1'b0 && ^(chebyshev2_fo_section_52_70) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev2_fo_section_6_16_reg"); $finish; end
end
/* chebyshev2_fo_section: %52*/
/*   %120 = fadd double %119, %95*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_276))
begin
chebyshev2_fo_section_6_16_reg <= chebyshev2_fo_section_52_120;
if (reset == 1'b0 && ^(chebyshev2_fo_section_52_120) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev2_fo_section_6_16_reg"); $finish; end
end
/* chebyshev2_fo_section: %52*/
/*   %77 = fadd double %76, 1.000000e+00*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_238))
begin
chebyshev2_fo_section_6_16_reg <= chebyshev2_fo_section_52_77;
if (reset == 1'b0 && ^(chebyshev2_fo_section_52_77) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev2_fo_section_6_16_reg"); $finish; end
end
end
always @(*) begin
chebyshev2_fo_section_6_17 = chebyshev2_fo_section_altfp_divide_64_0;
end
always @(posedge clk) begin
/* chebyshev2_fo_section: %6*/
/*   %17 = fdiv double %16, %D*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_182))
begin
chebyshev2_fo_section_6_17_reg <= chebyshev2_fo_section_6_17;
if (reset == 1'b0 && ^(chebyshev2_fo_section_6_17) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev2_fo_section_6_17_reg"); $finish; end
end
/* chebyshev2_fo_section: %6*/
/*   %17 = fdiv double %16, %D*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_182))
begin
chebyshev2_fo_section_6_17_reg <= chebyshev2_fo_section_6_17;
if (reset == 1'b0 && ^(chebyshev2_fo_section_6_17) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev2_fo_section_6_17_reg"); $finish; end
end
/* chebyshev2_fo_section: %6*/
/*   %40 = fdiv double %39, %D*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_168))
begin
chebyshev2_fo_section_6_17_reg <= chebyshev2_fo_section_6_40;
if (reset == 1'b0 && ^(chebyshev2_fo_section_6_40) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev2_fo_section_6_17_reg"); $finish; end
end
/* chebyshev2_fo_section: %52*/
/*   %63 = fdiv double %62, %D*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_335))
begin
chebyshev2_fo_section_6_17_reg <= chebyshev2_fo_section_52_63;
if (reset == 1'b0 && ^(chebyshev2_fo_section_52_63) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev2_fo_section_6_17_reg"); $finish; end
end
/* chebyshev2_fo_section: %52*/
/*   %108 = fdiv double %107, %D*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_338))
begin
chebyshev2_fo_section_6_17_reg <= chebyshev2_fo_section_52_108;
if (reset == 1'b0 && ^(chebyshev2_fo_section_52_108) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev2_fo_section_6_17_reg"); $finish; end
end
/* chebyshev2_fo_section: %6*/
/*   %48 = fdiv double %47, %D*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_184))
begin
chebyshev2_fo_section_6_17_reg <= chebyshev2_fo_section_6_48;
if (reset == 1'b0 && ^(chebyshev2_fo_section_6_48) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev2_fo_section_6_17_reg"); $finish; end
end
end
always @(*) begin
/* chebyshev2_fo_section: %6*/
/*   %18 = getelementptr inbounds %struct.TYPE_3__* %S, i32 0, i32 0*/
begin
chebyshev2_fo_section_6_18 = arg_S;
end
end
always @(posedge clk) begin
/* chebyshev2_fo_section: %6*/
/*   %18 = getelementptr inbounds %struct.TYPE_3__* %S, i32 0, i32 0*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_35))
begin
chebyshev2_fo_section_6_18_reg <= chebyshev2_fo_section_6_18;
if (reset == 1'b0 && ^(chebyshev2_fo_section_6_18) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev2_fo_section_6_18_reg"); $finish; end
end
end
always @(*) begin
chebyshev2_fo_section_6_19 = chebyshev2_fo_section_altfp_multiply_64_0;
end
always @(posedge clk) begin
/* chebyshev2_fo_section: %6*/
/*   %19 = fmul double %c0, 2.000000e+00*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_49))
begin
chebyshev2_fo_section_6_19_reg <= chebyshev2_fo_section_6_19;
if (reset == 1'b0 && ^(chebyshev2_fo_section_6_19) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev2_fo_section_6_19_reg"); $finish; end
end
/* chebyshev2_fo_section: %6*/
/*   %19 = fmul double %c0, 2.000000e+00*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_49))
begin
chebyshev2_fo_section_6_19_reg <= chebyshev2_fo_section_6_19;
if (reset == 1'b0 && ^(chebyshev2_fo_section_6_19) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev2_fo_section_6_19_reg"); $finish; end
end
/* chebyshev2_fo_section: %52*/
/*   %58 = fmul double %b, %b*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_200))
begin
chebyshev2_fo_section_6_19_reg <= chebyshev2_fo_section_52_58;
if (reset == 1'b0 && ^(chebyshev2_fo_section_52_58) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev2_fo_section_6_19_reg"); $finish; end
end
end
always @(*) begin
chebyshev2_fo_section_6_20 = chebyshev2_fo_section_altfp_subtract_64_0;
end
always @(*) begin
/* chebyshev2_fo_section: %6*/
/*   %20 = fsub double %5, %12*/
chebyshev2_fo_section_6_20_reg = chebyshev2_fo_section_6_38_reg;
end
always @(*) begin
chebyshev2_fo_section_6_21 = chebyshev2_fo_section_altfp_subtract_64_0;
end
always @(posedge clk) begin
/* chebyshev2_fo_section: %6*/
/*   %21 = fsub double %20, %15*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_95))
begin
chebyshev2_fo_section_6_21_reg <= chebyshev2_fo_section_6_21;
if (reset == 1'b0 && ^(chebyshev2_fo_section_6_21) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev2_fo_section_6_21_reg"); $finish; end
end
/* chebyshev2_fo_section: %6*/
/*   %21 = fsub double %20, %15*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_95))
begin
chebyshev2_fo_section_6_21_reg <= chebyshev2_fo_section_6_21;
if (reset == 1'b0 && ^(chebyshev2_fo_section_6_21) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev2_fo_section_6_21_reg"); $finish; end
end
/* chebyshev2_fo_section: %52*/
/*   %110 = fsub double %96, %98*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_259))
begin
chebyshev2_fo_section_6_21_reg <= chebyshev2_fo_section_52_110;
if (reset == 1'b0 && ^(chebyshev2_fo_section_52_110) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev2_fo_section_6_21_reg"); $finish; end
end
end
always @(*) begin
chebyshev2_fo_section_6_22 = chebyshev2_fo_section_altfp_multiply_64_0;
end
always @(*) begin
/* chebyshev2_fo_section: %6*/
/*   %22 = fmul double %19, %21*/
chebyshev2_fo_section_6_22_reg = chebyshev2_fo_section_0_3_reg;
end
always @(*) begin
chebyshev2_fo_section_6_23 = chebyshev2_fo_section_altfp_divide_64_0;
end
always @(posedge clk) begin
/* chebyshev2_fo_section: %6*/
/*   %23 = fdiv double %22, %D*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_167))
begin
chebyshev2_fo_section_6_23_reg <= chebyshev2_fo_section_6_23;
if (reset == 1'b0 && ^(chebyshev2_fo_section_6_23) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev2_fo_section_6_23_reg"); $finish; end
end
/* chebyshev2_fo_section: %6*/
/*   %23 = fdiv double %22, %D*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_167))
begin
chebyshev2_fo_section_6_23_reg <= chebyshev2_fo_section_6_23;
if (reset == 1'b0 && ^(chebyshev2_fo_section_6_23) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev2_fo_section_6_23_reg"); $finish; end
end
/* chebyshev2_fo_section: %6*/
/*   %29 = fdiv double %28, %D*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_183))
begin
chebyshev2_fo_section_6_23_reg <= chebyshev2_fo_section_6_29;
if (reset == 1'b0 && ^(chebyshev2_fo_section_6_29) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev2_fo_section_6_23_reg"); $finish; end
end
/* chebyshev2_fo_section: %52*/
/*   %112 = fdiv double %111, %D*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_333))
begin
chebyshev2_fo_section_6_23_reg <= chebyshev2_fo_section_52_112;
if (reset == 1'b0 && ^(chebyshev2_fo_section_52_112) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev2_fo_section_6_23_reg"); $finish; end
end
end
always @(*) begin
chebyshev2_fo_section_6_24 = chebyshev2_fo_section_altfp_fptosi_64_0;
end
always @(posedge clk) begin
/* chebyshev2_fo_section: %6*/
/*   %24 = fptosi double %23 to i32*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_173))
begin
chebyshev2_fo_section_6_24_reg <= chebyshev2_fo_section_6_24;
if (reset == 1'b0 && ^(chebyshev2_fo_section_6_24) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev2_fo_section_6_24_reg"); $finish; end
end
/* chebyshev2_fo_section: %6*/
/*   %24 = fptosi double %23 to i32*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_173))
begin
chebyshev2_fo_section_6_24_reg <= chebyshev2_fo_section_6_24;
if (reset == 1'b0 && ^(chebyshev2_fo_section_6_24) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev2_fo_section_6_24_reg"); $finish; end
end
/* chebyshev2_fo_section: %52*/
/*   %73 = fptosi double %72 to i32*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_336))
begin
chebyshev2_fo_section_6_24_reg <= chebyshev2_fo_section_52_73;
if (reset == 1'b0 && ^(chebyshev2_fo_section_52_73) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev2_fo_section_6_24_reg"); $finish; end
end
/* chebyshev2_fo_section: %52*/
/*   %102 = fptosi double %101 to i32*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_338))
begin
chebyshev2_fo_section_6_24_reg <= chebyshev2_fo_section_52_102;
if (reset == 1'b0 && ^(chebyshev2_fo_section_52_102) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev2_fo_section_6_24_reg"); $finish; end
end
end
always @(*) begin
/* chebyshev2_fo_section: %6*/
/*   %25 = getelementptr inbounds %struct.TYPE_3__* %S, i32 0, i32 1*/
begin
chebyshev2_fo_section_6_25 = (arg_S + 8);
end
end
always @(posedge clk) begin
/* chebyshev2_fo_section: %6*/
/*   %25 = getelementptr inbounds %struct.TYPE_3__* %S, i32 0, i32 1*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_35))
begin
chebyshev2_fo_section_6_25_reg <= chebyshev2_fo_section_6_25;
if (reset == 1'b0 && ^(chebyshev2_fo_section_6_25) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev2_fo_section_6_25_reg"); $finish; end
end
end
always @(*) begin
chebyshev2_fo_section_6_26 = chebyshev2_fo_section_altfp_subtract_64_0;
end
always @(posedge clk) begin
/* chebyshev2_fo_section: %6*/
/*   %26 = fsub double %5, %10*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_93))
begin
chebyshev2_fo_section_6_26_reg <= chebyshev2_fo_section_6_26;
if (reset == 1'b0 && ^(chebyshev2_fo_section_6_26) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev2_fo_section_6_26_reg"); $finish; end
end
/* chebyshev2_fo_section: %6*/
/*   %26 = fsub double %5, %10*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_93))
begin
chebyshev2_fo_section_6_26_reg <= chebyshev2_fo_section_6_26;
if (reset == 1'b0 && ^(chebyshev2_fo_section_6_26) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev2_fo_section_6_26_reg"); $finish; end
end
/* chebyshev2_fo_section: %52*/
/*   %79 = fsub double %78, %5*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_263))
begin
chebyshev2_fo_section_6_26_reg <= chebyshev2_fo_section_52_79;
if (reset == 1'b0 && ^(chebyshev2_fo_section_52_79) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev2_fo_section_6_26_reg"); $finish; end
end
/* chebyshev2_fo_section: %52*/
/*   %88 = fsub double %5, %56*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_246))
begin
chebyshev2_fo_section_6_26_reg <= chebyshev2_fo_section_52_88;
if (reset == 1'b0 && ^(chebyshev2_fo_section_52_88) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev2_fo_section_6_26_reg"); $finish; end
end
end
always @(*) begin
chebyshev2_fo_section_6_27 = chebyshev2_fo_section_altfp_add_64_0;
end
always @(posedge clk) begin
/* chebyshev2_fo_section: %6*/
/*   %27 = fadd double %26, %12*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_108))
begin
chebyshev2_fo_section_6_27_reg <= chebyshev2_fo_section_6_27;
if (reset == 1'b0 && ^(chebyshev2_fo_section_6_27) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev2_fo_section_6_27_reg"); $finish; end
end
/* chebyshev2_fo_section: %6*/
/*   %27 = fadd double %26, %12*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_108))
begin
chebyshev2_fo_section_6_27_reg <= chebyshev2_fo_section_6_27;
if (reset == 1'b0 && ^(chebyshev2_fo_section_6_27) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev2_fo_section_6_27_reg"); $finish; end
end
/* chebyshev2_fo_section: %6*/
/*   %47 = fadd double %46, %37*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_123))
begin
chebyshev2_fo_section_6_27_reg <= chebyshev2_fo_section_6_47;
if (reset == 1'b0 && ^(chebyshev2_fo_section_6_47) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev2_fo_section_6_27_reg"); $finish; end
end
/* chebyshev2_fo_section: %52*/
/*   %119 = fadd double %118, %94*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_262))
begin
chebyshev2_fo_section_6_27_reg <= chebyshev2_fo_section_52_119;
if (reset == 1'b0 && ^(chebyshev2_fo_section_52_119) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev2_fo_section_6_27_reg"); $finish; end
end
/* chebyshev2_fo_section: %52*/
/*   %57 = fadd double %5, %56*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_246))
begin
chebyshev2_fo_section_6_27_reg <= chebyshev2_fo_section_52_57;
if (reset == 1'b0 && ^(chebyshev2_fo_section_52_57) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev2_fo_section_6_27_reg"); $finish; end
end
end
always @(*) begin
chebyshev2_fo_section_6_28 = chebyshev2_fo_section_altfp_add_64_0;
end
always @(*) begin
/* chebyshev2_fo_section: %6*/
/*   %28 = fadd double %27, %15*/
chebyshev2_fo_section_6_28_reg = chebyshev2_fo_section_6_13_reg;
end
always @(*) begin
chebyshev2_fo_section_6_29 = chebyshev2_fo_section_altfp_divide_64_0;
end
always @(*) begin
/* chebyshev2_fo_section: %6*/
/*   %29 = fdiv double %28, %D*/
chebyshev2_fo_section_6_29_reg = chebyshev2_fo_section_6_23_reg;
end
always @(*) begin
/* chebyshev2_fo_section: %6*/
/*   %30 = getelementptr inbounds %struct.TYPE_3__* %S, i32 0, i32 2*/
begin
chebyshev2_fo_section_6_30 = (arg_S + 12);
end
end
always @(posedge clk) begin
/* chebyshev2_fo_section: %6*/
/*   %30 = getelementptr inbounds %struct.TYPE_3__* %S, i32 0, i32 2*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_35))
begin
chebyshev2_fo_section_6_30_reg <= chebyshev2_fo_section_6_30;
if (reset == 1'b0 && ^(chebyshev2_fo_section_6_30) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev2_fo_section_6_30_reg"); $finish; end
end
end
always @(*) begin
/* chebyshev2_fo_section: %6*/
/*   %31 = getelementptr inbounds %struct.TYPE_3__* %S, i32 0, i32 3*/
begin
chebyshev2_fo_section_6_31 = (arg_S + 20);
end
end
always @(posedge clk) begin
/* chebyshev2_fo_section: %6*/
/*   %31 = getelementptr inbounds %struct.TYPE_3__* %S, i32 0, i32 3*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_35))
begin
chebyshev2_fo_section_6_31_reg <= chebyshev2_fo_section_6_31;
if (reset == 1'b0 && ^(chebyshev2_fo_section_6_31) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev2_fo_section_6_31_reg"); $finish; end
end
end
always @(*) begin
/* chebyshev2_fo_section: %6*/
/*   %32 = getelementptr inbounds %struct.TYPE_3__* %S, i32 0, i32 4*/
begin
chebyshev2_fo_section_6_32 = (arg_S + 24);
end
end
always @(posedge clk) begin
/* chebyshev2_fo_section: %6*/
/*   %32 = getelementptr inbounds %struct.TYPE_3__* %S, i32 0, i32 4*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_35))
begin
chebyshev2_fo_section_6_32_reg <= chebyshev2_fo_section_6_32;
if (reset == 1'b0 && ^(chebyshev2_fo_section_6_32) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev2_fo_section_6_32_reg"); $finish; end
end
end
always @(*) begin
/* chebyshev2_fo_section: %6*/
/*   %33 = getelementptr inbounds %struct.TYPE_3__* %S, i32 0, i32 5*/
begin
chebyshev2_fo_section_6_33 = (arg_S + 32);
end
end
always @(posedge clk) begin
/* chebyshev2_fo_section: %6*/
/*   %33 = getelementptr inbounds %struct.TYPE_3__* %S, i32 0, i32 5*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_35))
begin
chebyshev2_fo_section_6_33_reg <= chebyshev2_fo_section_6_33;
if (reset == 1'b0 && ^(chebyshev2_fo_section_6_33) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev2_fo_section_6_33_reg"); $finish; end
end
end
always @(*) begin
chebyshev2_fo_section_6_34 = chebyshev2_fo_section_altfp_multiply_64_0;
end
always @(posedge clk) begin
/* chebyshev2_fo_section: %6*/
/*   %34 = fmul double %tetta_b, %tetta_b*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_50))
begin
chebyshev2_fo_section_6_34_reg <= chebyshev2_fo_section_6_34;
if (reset == 1'b0 && ^(chebyshev2_fo_section_6_34) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev2_fo_section_6_34_reg"); $finish; end
end
/* chebyshev2_fo_section: %6*/
/*   %34 = fmul double %tetta_b, %tetta_b*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_50))
begin
chebyshev2_fo_section_6_34_reg <= chebyshev2_fo_section_6_34;
if (reset == 1'b0 && ^(chebyshev2_fo_section_6_34) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev2_fo_section_6_34_reg"); $finish; end
end
/* chebyshev2_fo_section: %52*/
/*   %75 = fmul double %c0, 2.000000e+00*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_204))
begin
chebyshev2_fo_section_6_34_reg <= chebyshev2_fo_section_52_75;
if (reset == 1'b0 && ^(chebyshev2_fo_section_52_75) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev2_fo_section_6_34_reg"); $finish; end
end
/* chebyshev2_fo_section: %52*/
/*   %98 = fmul double %97, %tetta_b*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_245))
begin
chebyshev2_fo_section_6_34_reg <= chebyshev2_fo_section_52_98;
if (reset == 1'b0 && ^(chebyshev2_fo_section_52_98) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev2_fo_section_6_34_reg"); $finish; end
end
end
always @(*) begin
chebyshev2_fo_section_6_35 = chebyshev2_fo_section_altfp_multiply_64_0;
end
always @(posedge clk) begin
/* chebyshev2_fo_section: %6*/
/*   %35 = fmul double %a, %a*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_51))
begin
chebyshev2_fo_section_6_35_reg <= chebyshev2_fo_section_6_35;
if (reset == 1'b0 && ^(chebyshev2_fo_section_6_35) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev2_fo_section_6_35_reg"); $finish; end
end
/* chebyshev2_fo_section: %6*/
/*   %35 = fmul double %a, %a*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_51))
begin
chebyshev2_fo_section_6_35_reg <= chebyshev2_fo_section_6_35;
if (reset == 1'b0 && ^(chebyshev2_fo_section_6_35) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev2_fo_section_6_35_reg"); $finish; end
end
/* chebyshev2_fo_section: %52*/
/*   %76 = fmul double %75, %c0*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_224))
begin
chebyshev2_fo_section_6_35_reg <= chebyshev2_fo_section_52_76;
if (reset == 1'b0 && ^(chebyshev2_fo_section_52_76) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev2_fo_section_6_35_reg"); $finish; end
end
end
always @(*) begin
chebyshev2_fo_section_6_36 = chebyshev2_fo_section_altfp_subtract_64_0;
end
always @(posedge clk) begin
/* chebyshev2_fo_section: %6*/
/*   %36 = fsub double %34, %35*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_65))
begin
chebyshev2_fo_section_6_36_reg <= chebyshev2_fo_section_6_36;
if (reset == 1'b0 && ^(chebyshev2_fo_section_6_36) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev2_fo_section_6_36_reg"); $finish; end
end
/* chebyshev2_fo_section: %6*/
/*   %36 = fsub double %34, %35*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_65))
begin
chebyshev2_fo_section_6_36_reg <= chebyshev2_fo_section_6_36;
if (reset == 1'b0 && ^(chebyshev2_fo_section_6_36) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev2_fo_section_6_36_reg"); $finish; end
end
/* chebyshev2_fo_section: %52*/
/*   %83 = fsub double %66, %69*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_258))
begin
chebyshev2_fo_section_6_36_reg <= chebyshev2_fo_section_52_83;
if (reset == 1'b0 && ^(chebyshev2_fo_section_52_83) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev2_fo_section_6_36_reg"); $finish; end
end
end
always @(*) begin
chebyshev2_fo_section_6_37 = chebyshev2_fo_section_altfp_multiply_64_0;
end
always @(posedge clk) begin
/* chebyshev2_fo_section: %6*/
/*   %37 = fmul double %c, %c*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_52))
begin
chebyshev2_fo_section_6_37_reg <= chebyshev2_fo_section_6_37;
if (reset == 1'b0 && ^(chebyshev2_fo_section_6_37) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev2_fo_section_6_37_reg"); $finish; end
end
/* chebyshev2_fo_section: %6*/
/*   %37 = fmul double %c, %c*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_52))
begin
chebyshev2_fo_section_6_37_reg <= chebyshev2_fo_section_6_37;
if (reset == 1'b0 && ^(chebyshev2_fo_section_6_37) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev2_fo_section_6_37_reg"); $finish; end
end
/* chebyshev2_fo_section: %52*/
/*   %105 = fmul double %tetta_b, %tetta_b*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_208))
begin
chebyshev2_fo_section_6_37_reg <= chebyshev2_fo_section_52_105;
if (reset == 1'b0 && ^(chebyshev2_fo_section_52_105) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev2_fo_section_6_37_reg"); $finish; end
end
/* chebyshev2_fo_section: %52*/
/*   %84 = fmul double %65, %83*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_270))
begin
chebyshev2_fo_section_6_37_reg <= chebyshev2_fo_section_52_84;
if (reset == 1'b0 && ^(chebyshev2_fo_section_52_84) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev2_fo_section_6_37_reg"); $finish; end
end
end
always @(*) begin
chebyshev2_fo_section_6_38 = chebyshev2_fo_section_altfp_subtract_64_0;
end
always @(posedge clk) begin
/* chebyshev2_fo_section: %6*/
/*   %38 = fsub double %36, %37*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_96))
begin
chebyshev2_fo_section_6_38_reg <= chebyshev2_fo_section_6_38;
if (reset == 1'b0 && ^(chebyshev2_fo_section_6_38) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev2_fo_section_6_38_reg"); $finish; end
end
/* chebyshev2_fo_section: %6*/
/*   %38 = fsub double %36, %37*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_96))
begin
chebyshev2_fo_section_6_38_reg <= chebyshev2_fo_section_6_38;
if (reset == 1'b0 && ^(chebyshev2_fo_section_6_38) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev2_fo_section_6_38_reg"); $finish; end
end
/* chebyshev2_fo_section: %6*/
/*   %20 = fsub double %5, %12*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_61))
begin
chebyshev2_fo_section_6_38_reg <= chebyshev2_fo_section_6_20;
if (reset == 1'b0 && ^(chebyshev2_fo_section_6_20) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev2_fo_section_6_38_reg"); $finish; end
end
/* chebyshev2_fo_section: %52*/
/*   %106 = fsub double %104, %105*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_264))
begin
chebyshev2_fo_section_6_38_reg <= chebyshev2_fo_section_52_106;
if (reset == 1'b0 && ^(chebyshev2_fo_section_52_106) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev2_fo_section_6_38_reg"); $finish; end
end
/* chebyshev2_fo_section: %52*/
/*   %118 = fsub double %105, %117*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_248))
begin
chebyshev2_fo_section_6_38_reg <= chebyshev2_fo_section_52_118;
if (reset == 1'b0 && ^(chebyshev2_fo_section_52_118) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev2_fo_section_6_38_reg"); $finish; end
end
end
always @(*) begin
chebyshev2_fo_section_6_39 = chebyshev2_fo_section_altfp_multiply_64_0;
end
always @(*) begin
/* chebyshev2_fo_section: %6*/
/*   %39 = fmul double %19, %38*/
chebyshev2_fo_section_6_39_reg = chebyshev2_fo_section_6_14_reg;
end
always @(*) begin
chebyshev2_fo_section_6_40 = chebyshev2_fo_section_altfp_divide_64_0;
end
always @(*) begin
/* chebyshev2_fo_section: %6*/
/*   %40 = fdiv double %39, %D*/
chebyshev2_fo_section_6_40_reg = chebyshev2_fo_section_6_17_reg;
end
always @(*) begin
chebyshev2_fo_section_6_41 = chebyshev2_fo_section_altfp_fptosi_64_0;
end
always @(posedge clk) begin
/* chebyshev2_fo_section: %6*/
/*   %41 = fptosi double %40 to i32*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_174))
begin
chebyshev2_fo_section_6_41_reg <= chebyshev2_fo_section_6_41;
if (reset == 1'b0 && ^(chebyshev2_fo_section_6_41) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev2_fo_section_6_41_reg"); $finish; end
end
/* chebyshev2_fo_section: %6*/
/*   %41 = fptosi double %40 to i32*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_174))
begin
chebyshev2_fo_section_6_41_reg <= chebyshev2_fo_section_6_41;
if (reset == 1'b0 && ^(chebyshev2_fo_section_6_41) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev2_fo_section_6_41_reg"); $finish; end
end
/* chebyshev2_fo_section: %52*/
/*   %113 = fptosi double %112 to i32*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_339))
begin
chebyshev2_fo_section_6_41_reg <= chebyshev2_fo_section_52_113;
if (reset == 1'b0 && ^(chebyshev2_fo_section_52_113) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev2_fo_section_6_41_reg"); $finish; end
end
/* chebyshev2_fo_section: %52*/
/*   %86 = fptosi double %85 to i32*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_337))
begin
chebyshev2_fo_section_6_41_reg <= chebyshev2_fo_section_52_86;
if (reset == 1'b0 && ^(chebyshev2_fo_section_52_86) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev2_fo_section_6_41_reg"); $finish; end
end
end
always @(*) begin
/* chebyshev2_fo_section: %6*/
/*   %42 = getelementptr inbounds %struct.TYPE_3__* %S, i32 0, i32 6*/
begin
chebyshev2_fo_section_6_42 = (arg_S + 36);
end
end
always @(posedge clk) begin
/* chebyshev2_fo_section: %6*/
/*   %42 = getelementptr inbounds %struct.TYPE_3__* %S, i32 0, i32 6*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_35))
begin
chebyshev2_fo_section_6_42_reg <= chebyshev2_fo_section_6_42;
if (reset == 1'b0 && ^(chebyshev2_fo_section_6_42) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev2_fo_section_6_42_reg"); $finish; end
end
end
always @(*) begin
chebyshev2_fo_section_6_43 = chebyshev2_fo_section_altfp_multiply_64_0;
end
always @(*) begin
/* chebyshev2_fo_section: %6*/
/*   %43 = fmul double %7, %a*/
chebyshev2_fo_section_6_43_reg = chebyshev2_fo_section_0_3_reg;
end
always @(*) begin
chebyshev2_fo_section_6_44 = chebyshev2_fo_section_altfp_multiply_64_0;
end
always @(posedge clk) begin
/* chebyshev2_fo_section: %6*/
/*   %44 = fmul double %43, %si*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_80))
begin
chebyshev2_fo_section_6_44_reg <= chebyshev2_fo_section_6_44;
if (reset == 1'b0 && ^(chebyshev2_fo_section_6_44) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev2_fo_section_6_44_reg"); $finish; end
end
/* chebyshev2_fo_section: %6*/
/*   %44 = fmul double %43, %si*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_80))
begin
chebyshev2_fo_section_6_44_reg <= chebyshev2_fo_section_6_44;
if (reset == 1'b0 && ^(chebyshev2_fo_section_6_44) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev2_fo_section_6_44_reg"); $finish; end
end
/* chebyshev2_fo_section: %6*/
/*   %8 = fmul double %7, %g*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_57))
begin
chebyshev2_fo_section_6_44_reg <= chebyshev2_fo_section_6_8;
if (reset == 1'b0 && ^(chebyshev2_fo_section_6_8) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev2_fo_section_6_44_reg"); $finish; end
end
/* chebyshev2_fo_section: %52*/
/*   %116 = fmul double %115, %si*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_222))
begin
chebyshev2_fo_section_6_44_reg <= chebyshev2_fo_section_52_116;
if (reset == 1'b0 && ^(chebyshev2_fo_section_52_116) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev2_fo_section_6_44_reg"); $finish; end
end
/* chebyshev2_fo_section: %52*/
/*   %53 = fmul double %g, 2.000000e+00*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_199))
begin
chebyshev2_fo_section_6_44_reg <= chebyshev2_fo_section_52_53;
if (reset == 1'b0 && ^(chebyshev2_fo_section_52_53) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev2_fo_section_6_44_reg"); $finish; end
end
/* chebyshev2_fo_section: %52*/
/*   %78 = fmul double %66, %77*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_249))
begin
chebyshev2_fo_section_6_44_reg <= chebyshev2_fo_section_52_78;
if (reset == 1'b0 && ^(chebyshev2_fo_section_52_78) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev2_fo_section_6_44_reg"); $finish; end
end
/* chebyshev2_fo_section: %52*/
/*   %100 = fmul double %65, %99*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_271))
begin
chebyshev2_fo_section_6_44_reg <= chebyshev2_fo_section_52_100;
if (reset == 1'b0 && ^(chebyshev2_fo_section_52_100) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev2_fo_section_6_44_reg"); $finish; end
end
end
always @(*) begin
chebyshev2_fo_section_6_45 = chebyshev2_fo_section_altfp_subtract_64_0;
end
always @(posedge clk) begin
/* chebyshev2_fo_section: %6*/
/*   %45 = fsub double %34, %44*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_94))
begin
chebyshev2_fo_section_6_45_reg <= chebyshev2_fo_section_6_45;
if (reset == 1'b0 && ^(chebyshev2_fo_section_6_45) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev2_fo_section_6_45_reg"); $finish; end
end
/* chebyshev2_fo_section: %6*/
/*   %45 = fsub double %34, %44*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_94))
begin
chebyshev2_fo_section_6_45_reg <= chebyshev2_fo_section_6_45;
if (reset == 1'b0 && ^(chebyshev2_fo_section_6_45) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev2_fo_section_6_45_reg"); $finish; end
end
end
always @(*) begin
chebyshev2_fo_section_6_46 = chebyshev2_fo_section_altfp_add_64_0;
end
always @(posedge clk) begin
/* chebyshev2_fo_section: %6*/
/*   %46 = fadd double %45, %35*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_109))
begin
chebyshev2_fo_section_6_46_reg <= chebyshev2_fo_section_6_46;
if (reset == 1'b0 && ^(chebyshev2_fo_section_6_46) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev2_fo_section_6_46_reg"); $finish; end
end
/* chebyshev2_fo_section: %6*/
/*   %46 = fadd double %45, %35*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_109))
begin
chebyshev2_fo_section_6_46_reg <= chebyshev2_fo_section_6_46;
if (reset == 1'b0 && ^(chebyshev2_fo_section_6_46) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev2_fo_section_6_46_reg"); $finish; end
end
/* chebyshev2_fo_section: %52*/
/*   %59 = fadd double %57, %58*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_260))
begin
chebyshev2_fo_section_6_46_reg <= chebyshev2_fo_section_52_59;
if (reset == 1'b0 && ^(chebyshev2_fo_section_52_59) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev2_fo_section_6_46_reg"); $finish; end
end
/* chebyshev2_fo_section: %52*/
/*   %90 = fadd double %89, %61*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_275))
begin
chebyshev2_fo_section_6_46_reg <= chebyshev2_fo_section_52_90;
if (reset == 1'b0 && ^(chebyshev2_fo_section_52_90) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev2_fo_section_6_46_reg"); $finish; end
end
/* chebyshev2_fo_section: %52*/
/*   %96 = fadd double %94, %95*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_239))
begin
chebyshev2_fo_section_6_46_reg <= chebyshev2_fo_section_52_96;
if (reset == 1'b0 && ^(chebyshev2_fo_section_52_96) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev2_fo_section_6_46_reg"); $finish; end
end
end
always @(*) begin
chebyshev2_fo_section_6_47 = chebyshev2_fo_section_altfp_add_64_0;
end
always @(*) begin
/* chebyshev2_fo_section: %6*/
/*   %47 = fadd double %46, %37*/
chebyshev2_fo_section_6_47_reg = chebyshev2_fo_section_6_27_reg;
end
always @(*) begin
chebyshev2_fo_section_6_48 = chebyshev2_fo_section_altfp_divide_64_0;
end
always @(*) begin
/* chebyshev2_fo_section: %6*/
/*   %48 = fdiv double %47, %D*/
chebyshev2_fo_section_6_48_reg = chebyshev2_fo_section_6_17_reg;
end
always @(*) begin
/* chebyshev2_fo_section: %6*/
/*   %49 = getelementptr inbounds %struct.TYPE_3__* %S, i32 0, i32 7*/
begin
chebyshev2_fo_section_6_49 = (arg_S + 40);
end
end
always @(posedge clk) begin
/* chebyshev2_fo_section: %6*/
/*   %49 = getelementptr inbounds %struct.TYPE_3__* %S, i32 0, i32 7*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_35))
begin
chebyshev2_fo_section_6_49_reg <= chebyshev2_fo_section_6_49;
if (reset == 1'b0 && ^(chebyshev2_fo_section_6_49) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev2_fo_section_6_49_reg"); $finish; end
end
end
always @(*) begin
/* chebyshev2_fo_section: %6*/
/*   %50 = getelementptr inbounds %struct.TYPE_3__* %S, i32 0, i32 8*/
begin
chebyshev2_fo_section_6_50 = (arg_S + 48);
end
end
always @(posedge clk) begin
/* chebyshev2_fo_section: %6*/
/*   %50 = getelementptr inbounds %struct.TYPE_3__* %S, i32 0, i32 8*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_35))
begin
chebyshev2_fo_section_6_50_reg <= chebyshev2_fo_section_6_50;
if (reset == 1'b0 && ^(chebyshev2_fo_section_6_50) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev2_fo_section_6_50_reg"); $finish; end
end
end
always @(*) begin
/* chebyshev2_fo_section: %6*/
/*   %51 = getelementptr inbounds %struct.TYPE_3__* %S, i32 0, i32 9*/
begin
chebyshev2_fo_section_6_51 = (arg_S + 52);
end
end
always @(posedge clk) begin
/* chebyshev2_fo_section: %6*/
/*   %51 = getelementptr inbounds %struct.TYPE_3__* %S, i32 0, i32 9*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_35))
begin
chebyshev2_fo_section_6_51_reg <= chebyshev2_fo_section_6_51;
if (reset == 1'b0 && ^(chebyshev2_fo_section_6_51) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev2_fo_section_6_51_reg"); $finish; end
end
end
always @(*) begin
chebyshev2_fo_section_52_53 = chebyshev2_fo_section_altfp_multiply_64_0;
end
always @(*) begin
/* chebyshev2_fo_section: %52*/
/*   %53 = fmul double %g, 2.000000e+00*/
chebyshev2_fo_section_52_53_reg = chebyshev2_fo_section_6_44_reg;
end
always @(*) begin
chebyshev2_fo_section_52_54 = chebyshev2_fo_section_altfp_multiply_64_0;
end
always @(*) begin
/* chebyshev2_fo_section: %52*/
/*   %54 = fmul double %53, %b*/
chebyshev2_fo_section_52_54_reg = chebyshev2_fo_section_6_9_reg;
end
always @(*) begin
chebyshev2_fo_section_52_55 = chebyshev2_fo_section_altfp_multiply_64_0;
end
always @(*) begin
/* chebyshev2_fo_section: %52*/
/*   %55 = fmul double %54, %si*/
chebyshev2_fo_section_52_55_reg = chebyshev2_fo_section_0_3_reg;
end
always @(*) begin
chebyshev2_fo_section_52_56 = chebyshev2_fo_section_altfp_multiply_64_0;
end
always @(*) begin
/* chebyshev2_fo_section: %52*/
/*   %56 = fmul double %55, %tetta_b*/
chebyshev2_fo_section_52_56_reg = chebyshev2_fo_section_6_10_reg;
end
always @(*) begin
chebyshev2_fo_section_52_57 = chebyshev2_fo_section_altfp_add_64_0;
end
always @(*) begin
/* chebyshev2_fo_section: %52*/
/*   %57 = fadd double %5, %56*/
chebyshev2_fo_section_52_57_reg = chebyshev2_fo_section_6_27_reg;
end
always @(*) begin
chebyshev2_fo_section_52_58 = chebyshev2_fo_section_altfp_multiply_64_0;
end
always @(*) begin
/* chebyshev2_fo_section: %52*/
/*   %58 = fmul double %b, %b*/
chebyshev2_fo_section_52_58_reg = chebyshev2_fo_section_6_19_reg;
end
always @(*) begin
chebyshev2_fo_section_52_59 = chebyshev2_fo_section_altfp_add_64_0;
end
always @(*) begin
/* chebyshev2_fo_section: %52*/
/*   %59 = fadd double %57, %58*/
chebyshev2_fo_section_52_59_reg = chebyshev2_fo_section_6_46_reg;
end
always @(*) begin
chebyshev2_fo_section_52_60 = chebyshev2_fo_section_altfp_multiply_64_0;
end
always @(*) begin
/* chebyshev2_fo_section: %52*/
/*   %60 = fmul double %3, %c*/
chebyshev2_fo_section_52_60_reg = chebyshev2_fo_section_6_10_reg;
end
always @(*) begin
chebyshev2_fo_section_52_61 = chebyshev2_fo_section_altfp_multiply_64_0;
end
always @(*) begin
/* chebyshev2_fo_section: %52*/
/*   %61 = fmul double %60, %c*/
chebyshev2_fo_section_52_61_reg = chebyshev2_fo_section_0_4_reg;
end
always @(*) begin
chebyshev2_fo_section_52_62 = chebyshev2_fo_section_altfp_add_64_0;
end
always @(*) begin
/* chebyshev2_fo_section: %52*/
/*   %62 = fadd double %59, %61*/
chebyshev2_fo_section_52_62_reg = chebyshev2_fo_section_6_13_reg;
end
always @(*) begin
chebyshev2_fo_section_52_63 = chebyshev2_fo_section_altfp_divide_64_0;
end
always @(*) begin
/* chebyshev2_fo_section: %52*/
/*   %63 = fdiv double %62, %D*/
chebyshev2_fo_section_52_63_reg = chebyshev2_fo_section_6_17_reg;
end
always @(*) begin
/* chebyshev2_fo_section: %52*/
/*   %64 = getelementptr inbounds %struct.TYPE_3__* %S, i32 0, i32 0*/
begin
chebyshev2_fo_section_52_64 = arg_S;
end
end
always @(posedge clk) begin
/* chebyshev2_fo_section: %52*/
/*   %64 = getelementptr inbounds %struct.TYPE_3__* %S, i32 0, i32 0*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_188))
begin
chebyshev2_fo_section_52_64_reg <= chebyshev2_fo_section_52_64;
if (reset == 1'b0 && ^(chebyshev2_fo_section_52_64) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev2_fo_section_52_64_reg"); $finish; end
end
end
always @(*) begin
chebyshev2_fo_section_52_65 = chebyshev2_fo_section_altfp_multiply_64_0;
end
always @(*) begin
/* chebyshev2_fo_section: %52*/
/*   %65 = fmul double %c0, -4.000000e+00*/
chebyshev2_fo_section_52_65_reg = chebyshev2_fo_section_6_12_reg;
end
always @(*) begin
chebyshev2_fo_section_52_66 = chebyshev2_fo_section_altfp_add_64_0;
end
always @(*) begin
/* chebyshev2_fo_section: %52*/
/*   %66 = fadd double %58, %61*/
chebyshev2_fo_section_52_66_reg = chebyshev2_fo_section_6_13_reg;
end
always @(*) begin
chebyshev2_fo_section_52_67 = chebyshev2_fo_section_altfp_multiply_64_0;
end
always @(*) begin
/* chebyshev2_fo_section: %52*/
/*   %67 = fmul double %g, %b*/
chebyshev2_fo_section_52_67_reg = chebyshev2_fo_section_6_14_reg;
end
always @(*) begin
chebyshev2_fo_section_52_68 = chebyshev2_fo_section_altfp_multiply_64_0;
end
always @(*) begin
/* chebyshev2_fo_section: %52*/
/*   %68 = fmul double %67, %si*/
chebyshev2_fo_section_52_68_reg = chebyshev2_fo_section_0_3_reg;
end
always @(*) begin
chebyshev2_fo_section_52_69 = chebyshev2_fo_section_altfp_multiply_64_0;
end
always @(*) begin
/* chebyshev2_fo_section: %52*/
/*   %69 = fmul double %68, %tetta_b*/
chebyshev2_fo_section_52_69_reg = chebyshev2_fo_section_6_14_reg;
end
always @(*) begin
chebyshev2_fo_section_52_70 = chebyshev2_fo_section_altfp_add_64_0;
end
always @(*) begin
/* chebyshev2_fo_section: %52*/
/*   %70 = fadd double %66, %69*/
chebyshev2_fo_section_52_70_reg = chebyshev2_fo_section_6_16_reg;
end
always @(*) begin
chebyshev2_fo_section_52_71 = chebyshev2_fo_section_altfp_multiply_64_0;
end
always @(*) begin
/* chebyshev2_fo_section: %52*/
/*   %71 = fmul double %65, %70*/
chebyshev2_fo_section_52_71_reg = chebyshev2_fo_section_0_5_reg;
end
always @(*) begin
chebyshev2_fo_section_52_72 = chebyshev2_fo_section_altfp_divide_64_0;
end
always @(*) begin
/* chebyshev2_fo_section: %52*/
/*   %72 = fdiv double %71, %D*/
chebyshev2_fo_section_52_72_reg = chebyshev2_fo_section_52_121_reg;
end
always @(*) begin
chebyshev2_fo_section_52_73 = chebyshev2_fo_section_altfp_fptosi_64_0;
end
always @(*) begin
/* chebyshev2_fo_section: %52*/
/*   %73 = fptosi double %72 to i32*/
chebyshev2_fo_section_52_73_reg = chebyshev2_fo_section_6_24_reg;
end
always @(*) begin
/* chebyshev2_fo_section: %52*/
/*   %74 = getelementptr inbounds %struct.TYPE_3__* %S, i32 0, i32 1*/
begin
chebyshev2_fo_section_52_74 = (arg_S + 8);
end
end
always @(posedge clk) begin
/* chebyshev2_fo_section: %52*/
/*   %74 = getelementptr inbounds %struct.TYPE_3__* %S, i32 0, i32 1*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_188))
begin
chebyshev2_fo_section_52_74_reg <= chebyshev2_fo_section_52_74;
if (reset == 1'b0 && ^(chebyshev2_fo_section_52_74) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev2_fo_section_52_74_reg"); $finish; end
end
end
always @(*) begin
chebyshev2_fo_section_52_75 = chebyshev2_fo_section_altfp_multiply_64_0;
end
always @(*) begin
/* chebyshev2_fo_section: %52*/
/*   %75 = fmul double %c0, 2.000000e+00*/
chebyshev2_fo_section_52_75_reg = chebyshev2_fo_section_6_34_reg;
end
always @(*) begin
chebyshev2_fo_section_52_76 = chebyshev2_fo_section_altfp_multiply_64_0;
end
always @(*) begin
/* chebyshev2_fo_section: %52*/
/*   %76 = fmul double %75, %c0*/
chebyshev2_fo_section_52_76_reg = chebyshev2_fo_section_6_35_reg;
end
always @(*) begin
chebyshev2_fo_section_52_77 = chebyshev2_fo_section_altfp_add_64_0;
end
always @(*) begin
/* chebyshev2_fo_section: %52*/
/*   %77 = fadd double %76, 1.000000e+00*/
chebyshev2_fo_section_52_77_reg = chebyshev2_fo_section_6_16_reg;
end
always @(*) begin
chebyshev2_fo_section_52_78 = chebyshev2_fo_section_altfp_multiply_64_0;
end
always @(*) begin
/* chebyshev2_fo_section: %52*/
/*   %78 = fmul double %66, %77*/
chebyshev2_fo_section_52_78_reg = chebyshev2_fo_section_6_44_reg;
end
always @(*) begin
chebyshev2_fo_section_52_79 = chebyshev2_fo_section_altfp_subtract_64_0;
end
always @(*) begin
/* chebyshev2_fo_section: %52*/
/*   %79 = fsub double %78, %5*/
chebyshev2_fo_section_52_79_reg = chebyshev2_fo_section_6_26_reg;
end
always @(*) begin
chebyshev2_fo_section_52_80 = chebyshev2_fo_section_altfp_multiply_64_0;
end
always @(*) begin
/* chebyshev2_fo_section: %52*/
/*   %80 = fmul double %79, 2.000000e+00*/
chebyshev2_fo_section_52_80_reg = chebyshev2_fo_section_0_3_reg;
end
always @(*) begin
chebyshev2_fo_section_52_81 = chebyshev2_fo_section_altfp_divide_64_0;
end
always @(posedge clk) begin
/* chebyshev2_fo_section: %52*/
/*   %81 = fdiv double %80, %D*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_336))
begin
chebyshev2_fo_section_52_81_reg <= chebyshev2_fo_section_52_81;
if (reset == 1'b0 && ^(chebyshev2_fo_section_52_81) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev2_fo_section_52_81_reg"); $finish; end
end
/* chebyshev2_fo_section: %52*/
/*   %81 = fdiv double %80, %D*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_336))
begin
chebyshev2_fo_section_52_81_reg <= chebyshev2_fo_section_52_81;
if (reset == 1'b0 && ^(chebyshev2_fo_section_52_81) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev2_fo_section_52_81_reg"); $finish; end
end
end
always @(*) begin
/* chebyshev2_fo_section: %52*/
/*   %82 = getelementptr inbounds %struct.TYPE_3__* %S, i32 0, i32 2*/
begin
chebyshev2_fo_section_52_82 = (arg_S + 12);
end
end
always @(posedge clk) begin
/* chebyshev2_fo_section: %52*/
/*   %82 = getelementptr inbounds %struct.TYPE_3__* %S, i32 0, i32 2*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_188))
begin
chebyshev2_fo_section_52_82_reg <= chebyshev2_fo_section_52_82;
if (reset == 1'b0 && ^(chebyshev2_fo_section_52_82) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev2_fo_section_52_82_reg"); $finish; end
end
end
always @(*) begin
chebyshev2_fo_section_52_83 = chebyshev2_fo_section_altfp_subtract_64_0;
end
always @(*) begin
/* chebyshev2_fo_section: %52*/
/*   %83 = fsub double %66, %69*/
chebyshev2_fo_section_52_83_reg = chebyshev2_fo_section_6_36_reg;
end
always @(*) begin
chebyshev2_fo_section_52_84 = chebyshev2_fo_section_altfp_multiply_64_0;
end
always @(*) begin
/* chebyshev2_fo_section: %52*/
/*   %84 = fmul double %65, %83*/
chebyshev2_fo_section_52_84_reg = chebyshev2_fo_section_6_37_reg;
end
always @(*) begin
chebyshev2_fo_section_52_85 = chebyshev2_fo_section_altfp_divide_64_0;
end
always @(posedge clk) begin
/* chebyshev2_fo_section: %52*/
/*   %85 = fdiv double %84, %D*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_331))
begin
chebyshev2_fo_section_52_85_reg <= chebyshev2_fo_section_52_85;
if (reset == 1'b0 && ^(chebyshev2_fo_section_52_85) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev2_fo_section_52_85_reg"); $finish; end
end
/* chebyshev2_fo_section: %52*/
/*   %85 = fdiv double %84, %D*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_331))
begin
chebyshev2_fo_section_52_85_reg <= chebyshev2_fo_section_52_85;
if (reset == 1'b0 && ^(chebyshev2_fo_section_52_85) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev2_fo_section_52_85_reg"); $finish; end
end
end
always @(*) begin
chebyshev2_fo_section_52_86 = chebyshev2_fo_section_altfp_fptosi_64_0;
end
always @(*) begin
/* chebyshev2_fo_section: %52*/
/*   %86 = fptosi double %85 to i32*/
chebyshev2_fo_section_52_86_reg = chebyshev2_fo_section_6_41_reg;
end
always @(*) begin
/* chebyshev2_fo_section: %52*/
/*   %87 = getelementptr inbounds %struct.TYPE_3__* %S, i32 0, i32 3*/
begin
chebyshev2_fo_section_52_87 = (arg_S + 20);
end
end
always @(posedge clk) begin
/* chebyshev2_fo_section: %52*/
/*   %87 = getelementptr inbounds %struct.TYPE_3__* %S, i32 0, i32 3*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_188))
begin
chebyshev2_fo_section_52_87_reg <= chebyshev2_fo_section_52_87;
if (reset == 1'b0 && ^(chebyshev2_fo_section_52_87) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev2_fo_section_52_87_reg"); $finish; end
end
end
always @(*) begin
chebyshev2_fo_section_52_88 = chebyshev2_fo_section_altfp_subtract_64_0;
end
always @(*) begin
/* chebyshev2_fo_section: %52*/
/*   %88 = fsub double %5, %56*/
chebyshev2_fo_section_52_88_reg = chebyshev2_fo_section_6_26_reg;
end
always @(*) begin
chebyshev2_fo_section_52_89 = chebyshev2_fo_section_altfp_add_64_0;
end
always @(posedge clk) begin
/* chebyshev2_fo_section: %52*/
/*   %89 = fadd double %88, %58*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_261))
begin
chebyshev2_fo_section_52_89_reg <= chebyshev2_fo_section_52_89;
if (reset == 1'b0 && ^(chebyshev2_fo_section_52_89) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev2_fo_section_52_89_reg"); $finish; end
end
/* chebyshev2_fo_section: %52*/
/*   %89 = fadd double %88, %58*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_261))
begin
chebyshev2_fo_section_52_89_reg <= chebyshev2_fo_section_52_89;
if (reset == 1'b0 && ^(chebyshev2_fo_section_52_89) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev2_fo_section_52_89_reg"); $finish; end
end
end
always @(*) begin
chebyshev2_fo_section_52_90 = chebyshev2_fo_section_altfp_add_64_0;
end
always @(*) begin
/* chebyshev2_fo_section: %52*/
/*   %90 = fadd double %89, %61*/
chebyshev2_fo_section_52_90_reg = chebyshev2_fo_section_6_46_reg;
end
always @(*) begin
chebyshev2_fo_section_52_91 = chebyshev2_fo_section_altfp_divide_64_0;
end
always @(*) begin
/* chebyshev2_fo_section: %52*/
/*   %91 = fdiv double %90, %D*/
chebyshev2_fo_section_52_91_reg = chebyshev2_fo_section_52_121_reg;
end
always @(*) begin
/* chebyshev2_fo_section: %52*/
/*   %92 = getelementptr inbounds %struct.TYPE_3__* %S, i32 0, i32 4*/
begin
chebyshev2_fo_section_52_92 = (arg_S + 24);
end
end
always @(posedge clk) begin
/* chebyshev2_fo_section: %52*/
/*   %92 = getelementptr inbounds %struct.TYPE_3__* %S, i32 0, i32 4*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_188))
begin
chebyshev2_fo_section_52_92_reg <= chebyshev2_fo_section_52_92;
if (reset == 1'b0 && ^(chebyshev2_fo_section_52_92) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev2_fo_section_52_92_reg"); $finish; end
end
end
always @(*) begin
/* chebyshev2_fo_section: %52*/
/*   %93 = getelementptr inbounds %struct.TYPE_3__* %S, i32 0, i32 5*/
begin
chebyshev2_fo_section_52_93 = (arg_S + 32);
end
end
always @(posedge clk) begin
/* chebyshev2_fo_section: %52*/
/*   %93 = getelementptr inbounds %struct.TYPE_3__* %S, i32 0, i32 5*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_188))
begin
chebyshev2_fo_section_52_93_reg <= chebyshev2_fo_section_52_93;
if (reset == 1'b0 && ^(chebyshev2_fo_section_52_93) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev2_fo_section_52_93_reg"); $finish; end
end
end
always @(*) begin
chebyshev2_fo_section_52_94 = chebyshev2_fo_section_altfp_multiply_64_0;
end
always @(posedge clk) begin
/* chebyshev2_fo_section: %52*/
/*   %94 = fmul double %a, %a*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_205))
begin
chebyshev2_fo_section_52_94_reg <= chebyshev2_fo_section_52_94;
if (reset == 1'b0 && ^(chebyshev2_fo_section_52_94) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev2_fo_section_52_94_reg"); $finish; end
end
/* chebyshev2_fo_section: %52*/
/*   %94 = fmul double %a, %a*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_205))
begin
chebyshev2_fo_section_52_94_reg <= chebyshev2_fo_section_52_94;
if (reset == 1'b0 && ^(chebyshev2_fo_section_52_94) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev2_fo_section_52_94_reg"); $finish; end
end
end
always @(*) begin
chebyshev2_fo_section_52_95 = chebyshev2_fo_section_altfp_multiply_64_0;
end
always @(posedge clk) begin
/* chebyshev2_fo_section: %52*/
/*   %95 = fmul double %c, %c*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_206))
begin
chebyshev2_fo_section_52_95_reg <= chebyshev2_fo_section_52_95;
if (reset == 1'b0 && ^(chebyshev2_fo_section_52_95) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev2_fo_section_52_95_reg"); $finish; end
end
/* chebyshev2_fo_section: %52*/
/*   %95 = fmul double %c, %c*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_206))
begin
chebyshev2_fo_section_52_95_reg <= chebyshev2_fo_section_52_95;
if (reset == 1'b0 && ^(chebyshev2_fo_section_52_95) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev2_fo_section_52_95_reg"); $finish; end
end
end
always @(*) begin
chebyshev2_fo_section_52_96 = chebyshev2_fo_section_altfp_add_64_0;
end
always @(*) begin
/* chebyshev2_fo_section: %52*/
/*   %96 = fadd double %94, %95*/
chebyshev2_fo_section_52_96_reg = chebyshev2_fo_section_6_46_reg;
end
always @(*) begin
chebyshev2_fo_section_52_97 = chebyshev2_fo_section_altfp_multiply_64_0;
end
always @(posedge clk) begin
/* chebyshev2_fo_section: %52*/
/*   %97 = fmul double %a, %si*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_207))
begin
chebyshev2_fo_section_52_97_reg <= chebyshev2_fo_section_52_97;
if (reset == 1'b0 && ^(chebyshev2_fo_section_52_97) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev2_fo_section_52_97_reg"); $finish; end
end
/* chebyshev2_fo_section: %52*/
/*   %97 = fmul double %a, %si*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_207))
begin
chebyshev2_fo_section_52_97_reg <= chebyshev2_fo_section_52_97;
if (reset == 1'b0 && ^(chebyshev2_fo_section_52_97) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev2_fo_section_52_97_reg"); $finish; end
end
end
always @(*) begin
chebyshev2_fo_section_52_98 = chebyshev2_fo_section_altfp_multiply_64_0;
end
always @(*) begin
/* chebyshev2_fo_section: %52*/
/*   %98 = fmul double %97, %tetta_b*/
chebyshev2_fo_section_52_98_reg = chebyshev2_fo_section_6_34_reg;
end
always @(*) begin
chebyshev2_fo_section_52_99 = chebyshev2_fo_section_altfp_add_64_0;
end
always @(*) begin
/* chebyshev2_fo_section: %52*/
/*   %99 = fadd double %96, %98*/
chebyshev2_fo_section_52_99_reg = chebyshev2_fo_section_6_13_reg;
end
always @(*) begin
chebyshev2_fo_section_52_100 = chebyshev2_fo_section_altfp_multiply_64_0;
end
always @(*) begin
/* chebyshev2_fo_section: %52*/
/*   %100 = fmul double %65, %99*/
chebyshev2_fo_section_52_100_reg = chebyshev2_fo_section_6_44_reg;
end
always @(*) begin
chebyshev2_fo_section_52_101 = chebyshev2_fo_section_altfp_divide_64_0;
end
always @(posedge clk) begin
/* chebyshev2_fo_section: %52*/
/*   %101 = fdiv double %100, %D*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_332))
begin
chebyshev2_fo_section_52_101_reg <= chebyshev2_fo_section_52_101;
if (reset == 1'b0 && ^(chebyshev2_fo_section_52_101) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev2_fo_section_52_101_reg"); $finish; end
end
/* chebyshev2_fo_section: %52*/
/*   %101 = fdiv double %100, %D*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_332))
begin
chebyshev2_fo_section_52_101_reg <= chebyshev2_fo_section_52_101;
if (reset == 1'b0 && ^(chebyshev2_fo_section_52_101) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev2_fo_section_52_101_reg"); $finish; end
end
end
always @(*) begin
chebyshev2_fo_section_52_102 = chebyshev2_fo_section_altfp_fptosi_64_0;
end
always @(*) begin
/* chebyshev2_fo_section: %52*/
/*   %102 = fptosi double %101 to i32*/
chebyshev2_fo_section_52_102_reg = chebyshev2_fo_section_6_24_reg;
end
always @(*) begin
/* chebyshev2_fo_section: %52*/
/*   %103 = getelementptr inbounds %struct.TYPE_3__* %S, i32 0, i32 6*/
begin
chebyshev2_fo_section_52_103 = (arg_S + 36);
end
end
always @(posedge clk) begin
/* chebyshev2_fo_section: %52*/
/*   %103 = getelementptr inbounds %struct.TYPE_3__* %S, i32 0, i32 6*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_188))
begin
chebyshev2_fo_section_52_103_reg <= chebyshev2_fo_section_52_103;
if (reset == 1'b0 && ^(chebyshev2_fo_section_52_103) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev2_fo_section_52_103_reg"); $finish; end
end
end
always @(*) begin
chebyshev2_fo_section_52_104 = chebyshev2_fo_section_altfp_multiply_64_0;
end
always @(*) begin
/* chebyshev2_fo_section: %52*/
/*   %104 = fmul double %96, %77*/
chebyshev2_fo_section_52_104_reg = chebyshev2_fo_section_0_3_reg;
end
always @(*) begin
chebyshev2_fo_section_52_105 = chebyshev2_fo_section_altfp_multiply_64_0;
end
always @(*) begin
/* chebyshev2_fo_section: %52*/
/*   %105 = fmul double %tetta_b, %tetta_b*/
chebyshev2_fo_section_52_105_reg = chebyshev2_fo_section_6_37_reg;
end
always @(*) begin
chebyshev2_fo_section_52_106 = chebyshev2_fo_section_altfp_subtract_64_0;
end
always @(*) begin
/* chebyshev2_fo_section: %52*/
/*   %106 = fsub double %104, %105*/
chebyshev2_fo_section_52_106_reg = chebyshev2_fo_section_6_38_reg;
end
always @(*) begin
chebyshev2_fo_section_52_107 = chebyshev2_fo_section_altfp_multiply_64_0;
end
always @(*) begin
/* chebyshev2_fo_section: %52*/
/*   %107 = fmul double %106, 2.000000e+00*/
chebyshev2_fo_section_52_107_reg = chebyshev2_fo_section_6_12_reg;
end
always @(*) begin
chebyshev2_fo_section_52_108 = chebyshev2_fo_section_altfp_divide_64_0;
end
always @(*) begin
/* chebyshev2_fo_section: %52*/
/*   %108 = fdiv double %107, %D*/
chebyshev2_fo_section_52_108_reg = chebyshev2_fo_section_6_17_reg;
end
always @(*) begin
/* chebyshev2_fo_section: %52*/
/*   %109 = getelementptr inbounds %struct.TYPE_3__* %S, i32 0, i32 7*/
begin
chebyshev2_fo_section_52_109 = (arg_S + 40);
end
end
always @(posedge clk) begin
/* chebyshev2_fo_section: %52*/
/*   %109 = getelementptr inbounds %struct.TYPE_3__* %S, i32 0, i32 7*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_188))
begin
chebyshev2_fo_section_52_109_reg <= chebyshev2_fo_section_52_109;
if (reset == 1'b0 && ^(chebyshev2_fo_section_52_109) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev2_fo_section_52_109_reg"); $finish; end
end
end
always @(*) begin
chebyshev2_fo_section_52_110 = chebyshev2_fo_section_altfp_subtract_64_0;
end
always @(*) begin
/* chebyshev2_fo_section: %52*/
/*   %110 = fsub double %96, %98*/
chebyshev2_fo_section_52_110_reg = chebyshev2_fo_section_6_21_reg;
end
always @(*) begin
chebyshev2_fo_section_52_111 = chebyshev2_fo_section_altfp_multiply_64_0;
end
always @(*) begin
/* chebyshev2_fo_section: %52*/
/*   %111 = fmul double %65, %110*/
chebyshev2_fo_section_52_111_reg = chebyshev2_fo_section_6_14_reg;
end
always @(*) begin
chebyshev2_fo_section_52_112 = chebyshev2_fo_section_altfp_divide_64_0;
end
always @(*) begin
/* chebyshev2_fo_section: %52*/
/*   %112 = fdiv double %111, %D*/
chebyshev2_fo_section_52_112_reg = chebyshev2_fo_section_6_23_reg;
end
always @(*) begin
chebyshev2_fo_section_52_113 = chebyshev2_fo_section_altfp_fptosi_64_0;
end
always @(*) begin
/* chebyshev2_fo_section: %52*/
/*   %113 = fptosi double %112 to i32*/
chebyshev2_fo_section_52_113_reg = chebyshev2_fo_section_6_41_reg;
end
always @(*) begin
/* chebyshev2_fo_section: %52*/
/*   %114 = getelementptr inbounds %struct.TYPE_3__* %S, i32 0, i32 8*/
begin
chebyshev2_fo_section_52_114 = (arg_S + 48);
end
end
always @(posedge clk) begin
/* chebyshev2_fo_section: %52*/
/*   %114 = getelementptr inbounds %struct.TYPE_3__* %S, i32 0, i32 8*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_188))
begin
chebyshev2_fo_section_52_114_reg <= chebyshev2_fo_section_52_114;
if (reset == 1'b0 && ^(chebyshev2_fo_section_52_114) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev2_fo_section_52_114_reg"); $finish; end
end
end
always @(*) begin
chebyshev2_fo_section_52_115 = chebyshev2_fo_section_altfp_multiply_64_0;
end
always @(*) begin
/* chebyshev2_fo_section: %52*/
/*   %115 = fmul double %a, 2.000000e+00*/
chebyshev2_fo_section_52_115_reg = chebyshev2_fo_section_0_4_reg;
end
always @(*) begin
chebyshev2_fo_section_52_116 = chebyshev2_fo_section_altfp_multiply_64_0;
end
always @(*) begin
/* chebyshev2_fo_section: %52*/
/*   %116 = fmul double %115, %si*/
chebyshev2_fo_section_52_116_reg = chebyshev2_fo_section_6_44_reg;
end
always @(*) begin
chebyshev2_fo_section_52_117 = chebyshev2_fo_section_altfp_multiply_64_0;
end
always @(*) begin
/* chebyshev2_fo_section: %52*/
/*   %117 = fmul double %116, %tetta_b*/
chebyshev2_fo_section_52_117_reg = chebyshev2_fo_section_6_9_reg;
end
always @(*) begin
chebyshev2_fo_section_52_118 = chebyshev2_fo_section_altfp_subtract_64_0;
end
always @(*) begin
/* chebyshev2_fo_section: %52*/
/*   %118 = fsub double %105, %117*/
chebyshev2_fo_section_52_118_reg = chebyshev2_fo_section_6_38_reg;
end
always @(*) begin
chebyshev2_fo_section_52_119 = chebyshev2_fo_section_altfp_add_64_0;
end
always @(*) begin
/* chebyshev2_fo_section: %52*/
/*   %119 = fadd double %118, %94*/
chebyshev2_fo_section_52_119_reg = chebyshev2_fo_section_6_27_reg;
end
always @(*) begin
chebyshev2_fo_section_52_120 = chebyshev2_fo_section_altfp_add_64_0;
end
always @(*) begin
/* chebyshev2_fo_section: %52*/
/*   %120 = fadd double %119, %95*/
chebyshev2_fo_section_52_120_reg = chebyshev2_fo_section_6_16_reg;
end
always @(*) begin
chebyshev2_fo_section_52_121 = chebyshev2_fo_section_altfp_divide_64_0;
end
always @(posedge clk) begin
/* chebyshev2_fo_section: %52*/
/*   %121 = fdiv double %120, %D*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_339))
begin
chebyshev2_fo_section_52_121_reg <= chebyshev2_fo_section_52_121;
if (reset == 1'b0 && ^(chebyshev2_fo_section_52_121) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev2_fo_section_52_121_reg"); $finish; end
end
/* chebyshev2_fo_section: %52*/
/*   %121 = fdiv double %120, %D*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_339))
begin
chebyshev2_fo_section_52_121_reg <= chebyshev2_fo_section_52_121;
if (reset == 1'b0 && ^(chebyshev2_fo_section_52_121) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev2_fo_section_52_121_reg"); $finish; end
end
/* chebyshev2_fo_section: %52*/
/*   %72 = fdiv double %71, %D*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_330))
begin
chebyshev2_fo_section_52_121_reg <= chebyshev2_fo_section_52_72;
if (reset == 1'b0 && ^(chebyshev2_fo_section_52_72) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev2_fo_section_52_121_reg"); $finish; end
end
/* chebyshev2_fo_section: %52*/
/*   %91 = fdiv double %90, %D*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_337))
begin
chebyshev2_fo_section_52_121_reg <= chebyshev2_fo_section_52_91;
if (reset == 1'b0 && ^(chebyshev2_fo_section_52_91) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev2_fo_section_52_121_reg"); $finish; end
end
end
always @(*) begin
/* chebyshev2_fo_section: %52*/
/*   %122 = getelementptr inbounds %struct.TYPE_3__* %S, i32 0, i32 9*/
begin
chebyshev2_fo_section_52_122 = (arg_S + 52);
end
end
always @(posedge clk) begin
/* chebyshev2_fo_section: %52*/
/*   %122 = getelementptr inbounds %struct.TYPE_3__* %S, i32 0, i32 9*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_188))
begin
chebyshev2_fo_section_52_122_reg <= chebyshev2_fo_section_52_122;
if (reset == 1'b0 && ^(chebyshev2_fo_section_52_122) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev2_fo_section_52_122_reg"); $finish; end
end
end
always @(*) begin
/* chebyshev2_fo_section: %0*/
/*   %3 = fmul double %g, %g*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_0_1))
begin
chebyshev2_fo_section_altfp_multiply_64_0_op0 = arg_g;
end
/* chebyshev2_fo_section: %0*/
/*   %4 = fmul double %3, %tetta_b*/
else if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_0_12))
begin
chebyshev2_fo_section_altfp_multiply_64_0_op0 = chebyshev2_fo_section_0_3;
end
/* chebyshev2_fo_section: %0*/
/*   %5 = fmul double %4, %tetta_b*/
else if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_0_23))
begin
chebyshev2_fo_section_altfp_multiply_64_0_op0 = chebyshev2_fo_section_0_4;
end
/* chebyshev2_fo_section: %6*/
/*   %7 = fmul double %tetta_b, 2.000000e+00*/
else if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_35))
begin
chebyshev2_fo_section_altfp_multiply_64_0_op0 = arg_tetta_b;
end
/* chebyshev2_fo_section: %6*/
/*   %12 = fmul double %b, %b*/
else if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_36))
begin
chebyshev2_fo_section_altfp_multiply_64_0_op0 = arg_b;
end
/* chebyshev2_fo_section: %6*/
/*   %14 = fmul double %3, %c*/
else if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_37))
begin
chebyshev2_fo_section_altfp_multiply_64_0_op0 = chebyshev2_fo_section_0_3_reg;
end
/* chebyshev2_fo_section: %6*/
/*   %19 = fmul double %c0, 2.000000e+00*/
else if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_38))
begin
chebyshev2_fo_section_altfp_multiply_64_0_op0 = arg_c0;
end
/* chebyshev2_fo_section: %6*/
/*   %34 = fmul double %tetta_b, %tetta_b*/
else if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_39))
begin
chebyshev2_fo_section_altfp_multiply_64_0_op0 = arg_tetta_b;
end
/* chebyshev2_fo_section: %6*/
/*   %35 = fmul double %a, %a*/
else if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_40))
begin
chebyshev2_fo_section_altfp_multiply_64_0_op0 = arg_a;
end
/* chebyshev2_fo_section: %6*/
/*   %37 = fmul double %c, %c*/
else if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_41))
begin
chebyshev2_fo_section_altfp_multiply_64_0_op0 = arg_c;
end
/* chebyshev2_fo_section: %6*/
/*   %8 = fmul double %7, %g*/
else if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_46))
begin
chebyshev2_fo_section_altfp_multiply_64_0_op0 = chebyshev2_fo_section_6_7;
end
/* chebyshev2_fo_section: %6*/
/*   %9 = fmul double %8, %b*/
else if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_57))
begin
chebyshev2_fo_section_altfp_multiply_64_0_op0 = chebyshev2_fo_section_6_8;
end
/* chebyshev2_fo_section: %6*/
/*   %43 = fmul double %7, %a*/
else if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_58))
begin
chebyshev2_fo_section_altfp_multiply_64_0_op0 = chebyshev2_fo_section_6_7_reg;
end
/* chebyshev2_fo_section: %6*/
/*   %10 = fmul double %9, %si*/
else if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_68))
begin
chebyshev2_fo_section_altfp_multiply_64_0_op0 = chebyshev2_fo_section_6_9;
end
/* chebyshev2_fo_section: %6*/
/*   %44 = fmul double %43, %si*/
else if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_69))
begin
chebyshev2_fo_section_altfp_multiply_64_0_op0 = chebyshev2_fo_section_6_43;
end
/* chebyshev2_fo_section: %6*/
/*   %15 = fmul double %14, %c*/
else if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_70))
begin
chebyshev2_fo_section_altfp_multiply_64_0_op0 = chebyshev2_fo_section_6_14_reg;
end
/* chebyshev2_fo_section: %6*/
/*   %22 = fmul double %19, %21*/
else if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_95))
begin
chebyshev2_fo_section_altfp_multiply_64_0_op0 = chebyshev2_fo_section_6_19_reg;
end
/* chebyshev2_fo_section: %6*/
/*   %39 = fmul double %19, %38*/
else if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_96))
begin
chebyshev2_fo_section_altfp_multiply_64_0_op0 = chebyshev2_fo_section_6_19_reg;
end
/* chebyshev2_fo_section: %52*/
/*   %53 = fmul double %g, 2.000000e+00*/
else if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_188))
begin
chebyshev2_fo_section_altfp_multiply_64_0_op0 = arg_g;
end
/* chebyshev2_fo_section: %52*/
/*   %58 = fmul double %b, %b*/
else if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_189))
begin
chebyshev2_fo_section_altfp_multiply_64_0_op0 = arg_b;
end
/* chebyshev2_fo_section: %52*/
/*   %60 = fmul double %3, %c*/
else if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_190))
begin
chebyshev2_fo_section_altfp_multiply_64_0_op0 = chebyshev2_fo_section_0_3_reg;
end
/* chebyshev2_fo_section: %52*/
/*   %65 = fmul double %c0, -4.000000e+00*/
else if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_191))
begin
chebyshev2_fo_section_altfp_multiply_64_0_op0 = arg_c0;
end
/* chebyshev2_fo_section: %52*/
/*   %67 = fmul double %g, %b*/
else if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_192))
begin
chebyshev2_fo_section_altfp_multiply_64_0_op0 = arg_g;
end
/* chebyshev2_fo_section: %52*/
/*   %75 = fmul double %c0, 2.000000e+00*/
else if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_193))
begin
chebyshev2_fo_section_altfp_multiply_64_0_op0 = arg_c0;
end
/* chebyshev2_fo_section: %52*/
/*   %94 = fmul double %a, %a*/
else if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_194))
begin
chebyshev2_fo_section_altfp_multiply_64_0_op0 = arg_a;
end
/* chebyshev2_fo_section: %52*/
/*   %95 = fmul double %c, %c*/
else if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_195))
begin
chebyshev2_fo_section_altfp_multiply_64_0_op0 = arg_c;
end
/* chebyshev2_fo_section: %52*/
/*   %97 = fmul double %a, %si*/
else if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_196))
begin
chebyshev2_fo_section_altfp_multiply_64_0_op0 = arg_a;
end
/* chebyshev2_fo_section: %52*/
/*   %105 = fmul double %tetta_b, %tetta_b*/
else if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_197))
begin
chebyshev2_fo_section_altfp_multiply_64_0_op0 = arg_tetta_b;
end
/* chebyshev2_fo_section: %52*/
/*   %115 = fmul double %a, 2.000000e+00*/
else if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_198))
begin
chebyshev2_fo_section_altfp_multiply_64_0_op0 = arg_a;
end
/* chebyshev2_fo_section: %52*/
/*   %54 = fmul double %53, %b*/
else if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_199))
begin
chebyshev2_fo_section_altfp_multiply_64_0_op0 = chebyshev2_fo_section_52_53;
end
/* chebyshev2_fo_section: %52*/
/*   %55 = fmul double %54, %si*/
else if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_210))
begin
chebyshev2_fo_section_altfp_multiply_64_0_op0 = chebyshev2_fo_section_52_54;
end
/* chebyshev2_fo_section: %52*/
/*   %116 = fmul double %115, %si*/
else if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_211))
begin
chebyshev2_fo_section_altfp_multiply_64_0_op0 = chebyshev2_fo_section_52_115_reg;
end
/* chebyshev2_fo_section: %52*/
/*   %61 = fmul double %60, %c*/
else if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_212))
begin
chebyshev2_fo_section_altfp_multiply_64_0_op0 = chebyshev2_fo_section_52_60_reg;
end
/* chebyshev2_fo_section: %52*/
/*   %76 = fmul double %75, %c0*/
else if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_213))
begin
chebyshev2_fo_section_altfp_multiply_64_0_op0 = chebyshev2_fo_section_52_75_reg;
end
/* chebyshev2_fo_section: %52*/
/*   %56 = fmul double %55, %tetta_b*/
else if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_221))
begin
chebyshev2_fo_section_altfp_multiply_64_0_op0 = chebyshev2_fo_section_52_55;
end
/* chebyshev2_fo_section: %52*/
/*   %68 = fmul double %67, %si*/
else if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_222))
begin
chebyshev2_fo_section_altfp_multiply_64_0_op0 = chebyshev2_fo_section_52_67_reg;
end
/* chebyshev2_fo_section: %52*/
/*   %117 = fmul double %116, %tetta_b*/
else if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_223))
begin
chebyshev2_fo_section_altfp_multiply_64_0_op0 = chebyshev2_fo_section_52_116_reg;
end
/* chebyshev2_fo_section: %52*/
/*   %69 = fmul double %68, %tetta_b*/
else if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_233))
begin
chebyshev2_fo_section_altfp_multiply_64_0_op0 = chebyshev2_fo_section_52_68;
end
/* chebyshev2_fo_section: %52*/
/*   %98 = fmul double %97, %tetta_b*/
else if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_234))
begin
chebyshev2_fo_section_altfp_multiply_64_0_op0 = chebyshev2_fo_section_52_97_reg;
end
/* chebyshev2_fo_section: %52*/
/*   %78 = fmul double %66, %77*/
else if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_238))
begin
chebyshev2_fo_section_altfp_multiply_64_0_op0 = chebyshev2_fo_section_52_66_reg;
end
/* chebyshev2_fo_section: %52*/
/*   %104 = fmul double %96, %77*/
else if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_239))
begin
chebyshev2_fo_section_altfp_multiply_64_0_op0 = chebyshev2_fo_section_52_96;
end
/* chebyshev2_fo_section: %52*/
/*   %71 = fmul double %65, %70*/
else if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_258))
begin
chebyshev2_fo_section_altfp_multiply_64_0_op0 = chebyshev2_fo_section_52_65_reg;
end
/* chebyshev2_fo_section: %52*/
/*   %84 = fmul double %65, %83*/
else if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_259))
begin
chebyshev2_fo_section_altfp_multiply_64_0_op0 = chebyshev2_fo_section_52_65_reg;
end
/* chebyshev2_fo_section: %52*/
/*   %100 = fmul double %65, %99*/
else if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_260))
begin
chebyshev2_fo_section_altfp_multiply_64_0_op0 = chebyshev2_fo_section_52_65_reg;
end
/* chebyshev2_fo_section: %52*/
/*   %111 = fmul double %65, %110*/
else if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_261))
begin
chebyshev2_fo_section_altfp_multiply_64_0_op0 = chebyshev2_fo_section_52_65_reg;
end
/* chebyshev2_fo_section: %52*/
/*   %80 = fmul double %79, 2.000000e+00*/
else if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_263))
begin
chebyshev2_fo_section_altfp_multiply_64_0_op0 = chebyshev2_fo_section_52_79;
end
/* chebyshev2_fo_section: %52*/
/*   %107 = fmul double %106, 2.000000e+00*/
else /* if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_264)) */
begin
chebyshev2_fo_section_altfp_multiply_64_0_op0 = chebyshev2_fo_section_52_106;
end
end
always @(*) begin
/* chebyshev2_fo_section: %0*/
/*   %3 = fmul double %g, %g*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_0_1))
begin
chebyshev2_fo_section_altfp_multiply_64_0_op1 = arg_g;
end
/* chebyshev2_fo_section: %0*/
/*   %4 = fmul double %3, %tetta_b*/
else if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_0_12))
begin
chebyshev2_fo_section_altfp_multiply_64_0_op1 = arg_tetta_b;
end
/* chebyshev2_fo_section: %0*/
/*   %5 = fmul double %4, %tetta_b*/
else if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_0_23))
begin
chebyshev2_fo_section_altfp_multiply_64_0_op1 = arg_tetta_b;
end
/* chebyshev2_fo_section: %6*/
/*   %7 = fmul double %tetta_b, 2.000000e+00*/
else if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_35))
begin
chebyshev2_fo_section_altfp_multiply_64_0_op1 = 64'h4000000000000000;
end
/* chebyshev2_fo_section: %6*/
/*   %12 = fmul double %b, %b*/
else if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_36))
begin
chebyshev2_fo_section_altfp_multiply_64_0_op1 = arg_b;
end
/* chebyshev2_fo_section: %6*/
/*   %14 = fmul double %3, %c*/
else if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_37))
begin
chebyshev2_fo_section_altfp_multiply_64_0_op1 = arg_c;
end
/* chebyshev2_fo_section: %6*/
/*   %19 = fmul double %c0, 2.000000e+00*/
else if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_38))
begin
chebyshev2_fo_section_altfp_multiply_64_0_op1 = 64'h4000000000000000;
end
/* chebyshev2_fo_section: %6*/
/*   %34 = fmul double %tetta_b, %tetta_b*/
else if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_39))
begin
chebyshev2_fo_section_altfp_multiply_64_0_op1 = arg_tetta_b;
end
/* chebyshev2_fo_section: %6*/
/*   %35 = fmul double %a, %a*/
else if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_40))
begin
chebyshev2_fo_section_altfp_multiply_64_0_op1 = arg_a;
end
/* chebyshev2_fo_section: %6*/
/*   %37 = fmul double %c, %c*/
else if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_41))
begin
chebyshev2_fo_section_altfp_multiply_64_0_op1 = arg_c;
end
/* chebyshev2_fo_section: %6*/
/*   %8 = fmul double %7, %g*/
else if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_46))
begin
chebyshev2_fo_section_altfp_multiply_64_0_op1 = arg_g;
end
/* chebyshev2_fo_section: %6*/
/*   %9 = fmul double %8, %b*/
else if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_57))
begin
chebyshev2_fo_section_altfp_multiply_64_0_op1 = arg_b;
end
/* chebyshev2_fo_section: %6*/
/*   %43 = fmul double %7, %a*/
else if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_58))
begin
chebyshev2_fo_section_altfp_multiply_64_0_op1 = arg_a;
end
/* chebyshev2_fo_section: %6*/
/*   %10 = fmul double %9, %si*/
else if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_68))
begin
chebyshev2_fo_section_altfp_multiply_64_0_op1 = arg_si;
end
/* chebyshev2_fo_section: %6*/
/*   %44 = fmul double %43, %si*/
else if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_69))
begin
chebyshev2_fo_section_altfp_multiply_64_0_op1 = arg_si;
end
/* chebyshev2_fo_section: %6*/
/*   %15 = fmul double %14, %c*/
else if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_70))
begin
chebyshev2_fo_section_altfp_multiply_64_0_op1 = arg_c;
end
/* chebyshev2_fo_section: %6*/
/*   %22 = fmul double %19, %21*/
else if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_95))
begin
chebyshev2_fo_section_altfp_multiply_64_0_op1 = chebyshev2_fo_section_6_21;
end
/* chebyshev2_fo_section: %6*/
/*   %39 = fmul double %19, %38*/
else if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_96))
begin
chebyshev2_fo_section_altfp_multiply_64_0_op1 = chebyshev2_fo_section_6_38;
end
/* chebyshev2_fo_section: %52*/
/*   %53 = fmul double %g, 2.000000e+00*/
else if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_188))
begin
chebyshev2_fo_section_altfp_multiply_64_0_op1 = 64'h4000000000000000;
end
/* chebyshev2_fo_section: %52*/
/*   %58 = fmul double %b, %b*/
else if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_189))
begin
chebyshev2_fo_section_altfp_multiply_64_0_op1 = arg_b;
end
/* chebyshev2_fo_section: %52*/
/*   %60 = fmul double %3, %c*/
else if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_190))
begin
chebyshev2_fo_section_altfp_multiply_64_0_op1 = arg_c;
end
/* chebyshev2_fo_section: %52*/
/*   %65 = fmul double %c0, -4.000000e+00*/
else if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_191))
begin
chebyshev2_fo_section_altfp_multiply_64_0_op1 = 64'hC010000000000000;
end
/* chebyshev2_fo_section: %52*/
/*   %67 = fmul double %g, %b*/
else if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_192))
begin
chebyshev2_fo_section_altfp_multiply_64_0_op1 = arg_b;
end
/* chebyshev2_fo_section: %52*/
/*   %75 = fmul double %c0, 2.000000e+00*/
else if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_193))
begin
chebyshev2_fo_section_altfp_multiply_64_0_op1 = 64'h4000000000000000;
end
/* chebyshev2_fo_section: %52*/
/*   %94 = fmul double %a, %a*/
else if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_194))
begin
chebyshev2_fo_section_altfp_multiply_64_0_op1 = arg_a;
end
/* chebyshev2_fo_section: %52*/
/*   %95 = fmul double %c, %c*/
else if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_195))
begin
chebyshev2_fo_section_altfp_multiply_64_0_op1 = arg_c;
end
/* chebyshev2_fo_section: %52*/
/*   %97 = fmul double %a, %si*/
else if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_196))
begin
chebyshev2_fo_section_altfp_multiply_64_0_op1 = arg_si;
end
/* chebyshev2_fo_section: %52*/
/*   %105 = fmul double %tetta_b, %tetta_b*/
else if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_197))
begin
chebyshev2_fo_section_altfp_multiply_64_0_op1 = arg_tetta_b;
end
/* chebyshev2_fo_section: %52*/
/*   %115 = fmul double %a, 2.000000e+00*/
else if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_198))
begin
chebyshev2_fo_section_altfp_multiply_64_0_op1 = 64'h4000000000000000;
end
/* chebyshev2_fo_section: %52*/
/*   %54 = fmul double %53, %b*/
else if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_199))
begin
chebyshev2_fo_section_altfp_multiply_64_0_op1 = arg_b;
end
/* chebyshev2_fo_section: %52*/
/*   %55 = fmul double %54, %si*/
else if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_210))
begin
chebyshev2_fo_section_altfp_multiply_64_0_op1 = arg_si;
end
/* chebyshev2_fo_section: %52*/
/*   %116 = fmul double %115, %si*/
else if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_211))
begin
chebyshev2_fo_section_altfp_multiply_64_0_op1 = arg_si;
end
/* chebyshev2_fo_section: %52*/
/*   %61 = fmul double %60, %c*/
else if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_212))
begin
chebyshev2_fo_section_altfp_multiply_64_0_op1 = arg_c;
end
/* chebyshev2_fo_section: %52*/
/*   %76 = fmul double %75, %c0*/
else if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_213))
begin
chebyshev2_fo_section_altfp_multiply_64_0_op1 = arg_c0;
end
/* chebyshev2_fo_section: %52*/
/*   %56 = fmul double %55, %tetta_b*/
else if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_221))
begin
chebyshev2_fo_section_altfp_multiply_64_0_op1 = arg_tetta_b;
end
/* chebyshev2_fo_section: %52*/
/*   %68 = fmul double %67, %si*/
else if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_222))
begin
chebyshev2_fo_section_altfp_multiply_64_0_op1 = arg_si;
end
/* chebyshev2_fo_section: %52*/
/*   %117 = fmul double %116, %tetta_b*/
else if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_223))
begin
chebyshev2_fo_section_altfp_multiply_64_0_op1 = arg_tetta_b;
end
/* chebyshev2_fo_section: %52*/
/*   %69 = fmul double %68, %tetta_b*/
else if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_233))
begin
chebyshev2_fo_section_altfp_multiply_64_0_op1 = arg_tetta_b;
end
/* chebyshev2_fo_section: %52*/
/*   %98 = fmul double %97, %tetta_b*/
else if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_234))
begin
chebyshev2_fo_section_altfp_multiply_64_0_op1 = arg_tetta_b;
end
/* chebyshev2_fo_section: %52*/
/*   %78 = fmul double %66, %77*/
else if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_238))
begin
chebyshev2_fo_section_altfp_multiply_64_0_op1 = chebyshev2_fo_section_52_77;
end
/* chebyshev2_fo_section: %52*/
/*   %104 = fmul double %96, %77*/
else if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_239))
begin
chebyshev2_fo_section_altfp_multiply_64_0_op1 = chebyshev2_fo_section_52_77_reg;
end
/* chebyshev2_fo_section: %52*/
/*   %71 = fmul double %65, %70*/
else if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_258))
begin
chebyshev2_fo_section_altfp_multiply_64_0_op1 = chebyshev2_fo_section_52_70;
end
/* chebyshev2_fo_section: %52*/
/*   %84 = fmul double %65, %83*/
else if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_259))
begin
chebyshev2_fo_section_altfp_multiply_64_0_op1 = chebyshev2_fo_section_52_83_reg;
end
/* chebyshev2_fo_section: %52*/
/*   %100 = fmul double %65, %99*/
else if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_260))
begin
chebyshev2_fo_section_altfp_multiply_64_0_op1 = chebyshev2_fo_section_52_99_reg;
end
/* chebyshev2_fo_section: %52*/
/*   %111 = fmul double %65, %110*/
else if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_261))
begin
chebyshev2_fo_section_altfp_multiply_64_0_op1 = chebyshev2_fo_section_52_110_reg;
end
/* chebyshev2_fo_section: %52*/
/*   %80 = fmul double %79, 2.000000e+00*/
else if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_263))
begin
chebyshev2_fo_section_altfp_multiply_64_0_op1 = 64'h4000000000000000;
end
/* chebyshev2_fo_section: %52*/
/*   %107 = fmul double %106, 2.000000e+00*/
else /* if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_264)) */
begin
chebyshev2_fo_section_altfp_multiply_64_0_op1 = 64'h4000000000000000;
end
end
always @(*) begin
altfp_chebyshev2_fo_section_0_4_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
chebyshev2_fo_section_altfp_multiply_64_0 = altfp_multiplier64_chebyshev2_fo_section_0_4_out;
end
always @(*) begin
/* chebyshev2_fo_section: %6*/
/*   %24 = fptosi double %23 to i32*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_167))
begin
chebyshev2_fo_section_altfp_fptosi_64_0_op0 = chebyshev2_fo_section_6_23;
end
/* chebyshev2_fo_section: %6*/
/*   %41 = fptosi double %40 to i32*/
else if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_168))
begin
chebyshev2_fo_section_altfp_fptosi_64_0_op0 = chebyshev2_fo_section_6_40;
end
/* chebyshev2_fo_section: %52*/
/*   %73 = fptosi double %72 to i32*/
else if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_330))
begin
chebyshev2_fo_section_altfp_fptosi_64_0_op0 = chebyshev2_fo_section_52_72;
end
/* chebyshev2_fo_section: %52*/
/*   %86 = fptosi double %85 to i32*/
else if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_331))
begin
chebyshev2_fo_section_altfp_fptosi_64_0_op0 = chebyshev2_fo_section_52_85;
end
/* chebyshev2_fo_section: %52*/
/*   %102 = fptosi double %101 to i32*/
else if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_332))
begin
chebyshev2_fo_section_altfp_fptosi_64_0_op0 = chebyshev2_fo_section_52_101;
end
/* chebyshev2_fo_section: %52*/
/*   %113 = fptosi double %112 to i32*/
else /* if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_333)) */
begin
chebyshev2_fo_section_altfp_fptosi_64_0_op0 = chebyshev2_fo_section_52_112;
end
end
always @(*) begin
altfp_chebyshev2_fo_section_6_24_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
chebyshev2_fo_section_altfp_fptosi_64_0 = altfp_fptosi64_chebyshev2_fo_section_6_24_out;
end
always @(*) begin
/* chebyshev2_fo_section: %6*/
/*   %11 = fadd double %5, %10*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_79))
begin
chebyshev2_fo_section_altfp_add_64_0_op0 = chebyshev2_fo_section_0_5_reg;
end
/* chebyshev2_fo_section: %6*/
/*   %13 = fadd double %11, %12*/
else if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_93))
begin
chebyshev2_fo_section_altfp_add_64_0_op0 = chebyshev2_fo_section_6_11;
end
/* chebyshev2_fo_section: %6*/
/*   %27 = fadd double %26, %12*/
else if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_94))
begin
chebyshev2_fo_section_altfp_add_64_0_op0 = chebyshev2_fo_section_6_26_reg;
end
/* chebyshev2_fo_section: %6*/
/*   %46 = fadd double %45, %35*/
else if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_95))
begin
chebyshev2_fo_section_altfp_add_64_0_op0 = chebyshev2_fo_section_6_45_reg;
end
/* chebyshev2_fo_section: %6*/
/*   %16 = fadd double %13, %15*/
else if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_107))
begin
chebyshev2_fo_section_altfp_add_64_0_op0 = chebyshev2_fo_section_6_13;
end
/* chebyshev2_fo_section: %6*/
/*   %28 = fadd double %27, %15*/
else if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_108))
begin
chebyshev2_fo_section_altfp_add_64_0_op0 = chebyshev2_fo_section_6_27;
end
/* chebyshev2_fo_section: %6*/
/*   %47 = fadd double %46, %37*/
else if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_109))
begin
chebyshev2_fo_section_altfp_add_64_0_op0 = chebyshev2_fo_section_6_46;
end
/* chebyshev2_fo_section: %52*/
/*   %66 = fadd double %58, %61*/
else if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_223))
begin
chebyshev2_fo_section_altfp_add_64_0_op0 = chebyshev2_fo_section_52_58_reg;
end
/* chebyshev2_fo_section: %52*/
/*   %77 = fadd double %76, 1.000000e+00*/
else if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_224))
begin
chebyshev2_fo_section_altfp_add_64_0_op0 = chebyshev2_fo_section_52_76;
end
/* chebyshev2_fo_section: %52*/
/*   %96 = fadd double %94, %95*/
else if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_225))
begin
chebyshev2_fo_section_altfp_add_64_0_op0 = chebyshev2_fo_section_52_94_reg;
end
/* chebyshev2_fo_section: %52*/
/*   %57 = fadd double %5, %56*/
else if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_232))
begin
chebyshev2_fo_section_altfp_add_64_0_op0 = chebyshev2_fo_section_0_5_reg;
end
/* chebyshev2_fo_section: %52*/
/*   %70 = fadd double %66, %69*/
else if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_244))
begin
chebyshev2_fo_section_altfp_add_64_0_op0 = chebyshev2_fo_section_52_66_reg;
end
/* chebyshev2_fo_section: %52*/
/*   %99 = fadd double %96, %98*/
else if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_245))
begin
chebyshev2_fo_section_altfp_add_64_0_op0 = chebyshev2_fo_section_52_96_reg;
end
/* chebyshev2_fo_section: %52*/
/*   %59 = fadd double %57, %58*/
else if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_246))
begin
chebyshev2_fo_section_altfp_add_64_0_op0 = chebyshev2_fo_section_52_57;
end
/* chebyshev2_fo_section: %52*/
/*   %89 = fadd double %88, %58*/
else if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_247))
begin
chebyshev2_fo_section_altfp_add_64_0_op0 = chebyshev2_fo_section_52_88_reg;
end
/* chebyshev2_fo_section: %52*/
/*   %119 = fadd double %118, %94*/
else if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_248))
begin
chebyshev2_fo_section_altfp_add_64_0_op0 = chebyshev2_fo_section_52_118;
end
/* chebyshev2_fo_section: %52*/
/*   %62 = fadd double %59, %61*/
else if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_260))
begin
chebyshev2_fo_section_altfp_add_64_0_op0 = chebyshev2_fo_section_52_59;
end
/* chebyshev2_fo_section: %52*/
/*   %90 = fadd double %89, %61*/
else if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_261))
begin
chebyshev2_fo_section_altfp_add_64_0_op0 = chebyshev2_fo_section_52_89;
end
/* chebyshev2_fo_section: %52*/
/*   %120 = fadd double %119, %95*/
else /* if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_262)) */
begin
chebyshev2_fo_section_altfp_add_64_0_op0 = chebyshev2_fo_section_52_119;
end
end
always @(*) begin
/* chebyshev2_fo_section: %6*/
/*   %11 = fadd double %5, %10*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_79))
begin
chebyshev2_fo_section_altfp_add_64_0_op1 = chebyshev2_fo_section_6_10;
end
/* chebyshev2_fo_section: %6*/
/*   %13 = fadd double %11, %12*/
else if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_93))
begin
chebyshev2_fo_section_altfp_add_64_0_op1 = chebyshev2_fo_section_6_12_reg;
end
/* chebyshev2_fo_section: %6*/
/*   %27 = fadd double %26, %12*/
else if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_94))
begin
chebyshev2_fo_section_altfp_add_64_0_op1 = chebyshev2_fo_section_6_12_reg;
end
/* chebyshev2_fo_section: %6*/
/*   %46 = fadd double %45, %35*/
else if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_95))
begin
chebyshev2_fo_section_altfp_add_64_0_op1 = chebyshev2_fo_section_6_35_reg;
end
/* chebyshev2_fo_section: %6*/
/*   %16 = fadd double %13, %15*/
else if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_107))
begin
chebyshev2_fo_section_altfp_add_64_0_op1 = chebyshev2_fo_section_6_15_reg;
end
/* chebyshev2_fo_section: %6*/
/*   %28 = fadd double %27, %15*/
else if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_108))
begin
chebyshev2_fo_section_altfp_add_64_0_op1 = chebyshev2_fo_section_6_15_reg;
end
/* chebyshev2_fo_section: %6*/
/*   %47 = fadd double %46, %37*/
else if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_109))
begin
chebyshev2_fo_section_altfp_add_64_0_op1 = chebyshev2_fo_section_6_37_reg;
end
/* chebyshev2_fo_section: %52*/
/*   %66 = fadd double %58, %61*/
else if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_223))
begin
chebyshev2_fo_section_altfp_add_64_0_op1 = chebyshev2_fo_section_52_61;
end
/* chebyshev2_fo_section: %52*/
/*   %77 = fadd double %76, 1.000000e+00*/
else if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_224))
begin
chebyshev2_fo_section_altfp_add_64_0_op1 = 64'h3FF0000000000000;
end
/* chebyshev2_fo_section: %52*/
/*   %96 = fadd double %94, %95*/
else if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_225))
begin
chebyshev2_fo_section_altfp_add_64_0_op1 = chebyshev2_fo_section_52_95_reg;
end
/* chebyshev2_fo_section: %52*/
/*   %57 = fadd double %5, %56*/
else if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_232))
begin
chebyshev2_fo_section_altfp_add_64_0_op1 = chebyshev2_fo_section_52_56;
end
/* chebyshev2_fo_section: %52*/
/*   %70 = fadd double %66, %69*/
else if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_244))
begin
chebyshev2_fo_section_altfp_add_64_0_op1 = chebyshev2_fo_section_52_69;
end
/* chebyshev2_fo_section: %52*/
/*   %99 = fadd double %96, %98*/
else if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_245))
begin
chebyshev2_fo_section_altfp_add_64_0_op1 = chebyshev2_fo_section_52_98;
end
/* chebyshev2_fo_section: %52*/
/*   %59 = fadd double %57, %58*/
else if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_246))
begin
chebyshev2_fo_section_altfp_add_64_0_op1 = chebyshev2_fo_section_52_58_reg;
end
/* chebyshev2_fo_section: %52*/
/*   %89 = fadd double %88, %58*/
else if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_247))
begin
chebyshev2_fo_section_altfp_add_64_0_op1 = chebyshev2_fo_section_52_58_reg;
end
/* chebyshev2_fo_section: %52*/
/*   %119 = fadd double %118, %94*/
else if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_248))
begin
chebyshev2_fo_section_altfp_add_64_0_op1 = chebyshev2_fo_section_52_94_reg;
end
/* chebyshev2_fo_section: %52*/
/*   %62 = fadd double %59, %61*/
else if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_260))
begin
chebyshev2_fo_section_altfp_add_64_0_op1 = chebyshev2_fo_section_52_61_reg;
end
/* chebyshev2_fo_section: %52*/
/*   %90 = fadd double %89, %61*/
else if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_261))
begin
chebyshev2_fo_section_altfp_add_64_0_op1 = chebyshev2_fo_section_52_61_reg;
end
/* chebyshev2_fo_section: %52*/
/*   %120 = fadd double %119, %95*/
else /* if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_262)) */
begin
chebyshev2_fo_section_altfp_add_64_0_op1 = chebyshev2_fo_section_52_95_reg;
end
end
always @(*) begin
altfp_chebyshev2_fo_section_6_13_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
chebyshev2_fo_section_altfp_add_64_0 = altfp_adder64_chebyshev2_fo_section_6_13_out;
end
always @(*) begin
/* chebyshev2_fo_section: %6*/
/*   %23 = fdiv double %22, %D*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_106))
begin
chebyshev2_fo_section_altfp_divide_64_0_op0 = chebyshev2_fo_section_6_22;
end
/* chebyshev2_fo_section: %6*/
/*   %40 = fdiv double %39, %D*/
else if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_107))
begin
chebyshev2_fo_section_altfp_divide_64_0_op0 = chebyshev2_fo_section_6_39;
end
/* chebyshev2_fo_section: %6*/
/*   %17 = fdiv double %16, %D*/
else if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_121))
begin
chebyshev2_fo_section_altfp_divide_64_0_op0 = chebyshev2_fo_section_6_16;
end
/* chebyshev2_fo_section: %6*/
/*   %29 = fdiv double %28, %D*/
else if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_122))
begin
chebyshev2_fo_section_altfp_divide_64_0_op0 = chebyshev2_fo_section_6_28;
end
/* chebyshev2_fo_section: %6*/
/*   %48 = fdiv double %47, %D*/
else if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_123))
begin
chebyshev2_fo_section_altfp_divide_64_0_op0 = chebyshev2_fo_section_6_47;
end
/* chebyshev2_fo_section: %52*/
/*   %72 = fdiv double %71, %D*/
else if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_269))
begin
chebyshev2_fo_section_altfp_divide_64_0_op0 = chebyshev2_fo_section_52_71;
end
/* chebyshev2_fo_section: %52*/
/*   %85 = fdiv double %84, %D*/
else if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_270))
begin
chebyshev2_fo_section_altfp_divide_64_0_op0 = chebyshev2_fo_section_52_84;
end
/* chebyshev2_fo_section: %52*/
/*   %101 = fdiv double %100, %D*/
else if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_271))
begin
chebyshev2_fo_section_altfp_divide_64_0_op0 = chebyshev2_fo_section_52_100;
end
/* chebyshev2_fo_section: %52*/
/*   %112 = fdiv double %111, %D*/
else if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_272))
begin
chebyshev2_fo_section_altfp_divide_64_0_op0 = chebyshev2_fo_section_52_111;
end
/* chebyshev2_fo_section: %52*/
/*   %63 = fdiv double %62, %D*/
else if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_274))
begin
chebyshev2_fo_section_altfp_divide_64_0_op0 = chebyshev2_fo_section_52_62;
end
/* chebyshev2_fo_section: %52*/
/*   %81 = fdiv double %80, %D*/
else if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_275))
begin
chebyshev2_fo_section_altfp_divide_64_0_op0 = chebyshev2_fo_section_52_80_reg;
end
/* chebyshev2_fo_section: %52*/
/*   %91 = fdiv double %90, %D*/
else if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_276))
begin
chebyshev2_fo_section_altfp_divide_64_0_op0 = chebyshev2_fo_section_52_90_reg;
end
/* chebyshev2_fo_section: %52*/
/*   %108 = fdiv double %107, %D*/
else if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_277))
begin
chebyshev2_fo_section_altfp_divide_64_0_op0 = chebyshev2_fo_section_52_107_reg;
end
/* chebyshev2_fo_section: %52*/
/*   %121 = fdiv double %120, %D*/
else /* if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_278)) */
begin
chebyshev2_fo_section_altfp_divide_64_0_op0 = chebyshev2_fo_section_52_120_reg;
end
end
always @(*) begin
/* chebyshev2_fo_section: %6*/
/*   %23 = fdiv double %22, %D*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_106))
begin
chebyshev2_fo_section_altfp_divide_64_0_op1 = arg_D;
end
/* chebyshev2_fo_section: %6*/
/*   %40 = fdiv double %39, %D*/
else if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_107))
begin
chebyshev2_fo_section_altfp_divide_64_0_op1 = arg_D;
end
/* chebyshev2_fo_section: %6*/
/*   %17 = fdiv double %16, %D*/
else if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_121))
begin
chebyshev2_fo_section_altfp_divide_64_0_op1 = arg_D;
end
/* chebyshev2_fo_section: %6*/
/*   %29 = fdiv double %28, %D*/
else if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_122))
begin
chebyshev2_fo_section_altfp_divide_64_0_op1 = arg_D;
end
/* chebyshev2_fo_section: %6*/
/*   %48 = fdiv double %47, %D*/
else if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_123))
begin
chebyshev2_fo_section_altfp_divide_64_0_op1 = arg_D;
end
/* chebyshev2_fo_section: %52*/
/*   %72 = fdiv double %71, %D*/
else if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_269))
begin
chebyshev2_fo_section_altfp_divide_64_0_op1 = arg_D;
end
/* chebyshev2_fo_section: %52*/
/*   %85 = fdiv double %84, %D*/
else if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_270))
begin
chebyshev2_fo_section_altfp_divide_64_0_op1 = arg_D;
end
/* chebyshev2_fo_section: %52*/
/*   %101 = fdiv double %100, %D*/
else if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_271))
begin
chebyshev2_fo_section_altfp_divide_64_0_op1 = arg_D;
end
/* chebyshev2_fo_section: %52*/
/*   %112 = fdiv double %111, %D*/
else if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_272))
begin
chebyshev2_fo_section_altfp_divide_64_0_op1 = arg_D;
end
/* chebyshev2_fo_section: %52*/
/*   %63 = fdiv double %62, %D*/
else if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_274))
begin
chebyshev2_fo_section_altfp_divide_64_0_op1 = arg_D;
end
/* chebyshev2_fo_section: %52*/
/*   %81 = fdiv double %80, %D*/
else if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_275))
begin
chebyshev2_fo_section_altfp_divide_64_0_op1 = arg_D;
end
/* chebyshev2_fo_section: %52*/
/*   %91 = fdiv double %90, %D*/
else if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_276))
begin
chebyshev2_fo_section_altfp_divide_64_0_op1 = arg_D;
end
/* chebyshev2_fo_section: %52*/
/*   %108 = fdiv double %107, %D*/
else if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_277))
begin
chebyshev2_fo_section_altfp_divide_64_0_op1 = arg_D;
end
/* chebyshev2_fo_section: %52*/
/*   %121 = fdiv double %120, %D*/
else /* if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_278)) */
begin
chebyshev2_fo_section_altfp_divide_64_0_op1 = arg_D;
end
end
always @(*) begin
altfp_chebyshev2_fo_section_6_17_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
chebyshev2_fo_section_altfp_divide_64_0 = altfp_divider64_chebyshev2_fo_section_6_17_out;
end
always @(*) begin
/* chebyshev2_fo_section: %6*/
/*   %20 = fsub double %5, %12*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_47))
begin
chebyshev2_fo_section_altfp_subtract_64_0_op0 = chebyshev2_fo_section_0_5_reg;
end
/* chebyshev2_fo_section: %6*/
/*   %36 = fsub double %34, %35*/
else if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_51))
begin
chebyshev2_fo_section_altfp_subtract_64_0_op0 = chebyshev2_fo_section_6_34_reg;
end
/* chebyshev2_fo_section: %6*/
/*   %26 = fsub double %5, %10*/
else if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_79))
begin
chebyshev2_fo_section_altfp_subtract_64_0_op0 = chebyshev2_fo_section_0_5_reg;
end
/* chebyshev2_fo_section: %6*/
/*   %45 = fsub double %34, %44*/
else if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_80))
begin
chebyshev2_fo_section_altfp_subtract_64_0_op0 = chebyshev2_fo_section_6_34_reg;
end
/* chebyshev2_fo_section: %6*/
/*   %21 = fsub double %20, %15*/
else if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_81))
begin
chebyshev2_fo_section_altfp_subtract_64_0_op0 = chebyshev2_fo_section_6_20_reg;
end
/* chebyshev2_fo_section: %6*/
/*   %38 = fsub double %36, %37*/
else if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_82))
begin
chebyshev2_fo_section_altfp_subtract_64_0_op0 = chebyshev2_fo_section_6_36_reg;
end
/* chebyshev2_fo_section: %52*/
/*   %88 = fsub double %5, %56*/
else if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_232))
begin
chebyshev2_fo_section_altfp_subtract_64_0_op0 = chebyshev2_fo_section_0_5_reg;
end
/* chebyshev2_fo_section: %52*/
/*   %118 = fsub double %105, %117*/
else if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_234))
begin
chebyshev2_fo_section_altfp_subtract_64_0_op0 = chebyshev2_fo_section_52_105_reg;
end
/* chebyshev2_fo_section: %52*/
/*   %83 = fsub double %66, %69*/
else if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_244))
begin
chebyshev2_fo_section_altfp_subtract_64_0_op0 = chebyshev2_fo_section_52_66_reg;
end
/* chebyshev2_fo_section: %52*/
/*   %110 = fsub double %96, %98*/
else if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_245))
begin
chebyshev2_fo_section_altfp_subtract_64_0_op0 = chebyshev2_fo_section_52_96_reg;
end
/* chebyshev2_fo_section: %52*/
/*   %79 = fsub double %78, %5*/
else if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_249))
begin
chebyshev2_fo_section_altfp_subtract_64_0_op0 = chebyshev2_fo_section_52_78;
end
/* chebyshev2_fo_section: %52*/
/*   %106 = fsub double %104, %105*/
else /* if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_250)) */
begin
chebyshev2_fo_section_altfp_subtract_64_0_op0 = chebyshev2_fo_section_52_104;
end
end
always @(*) begin
/* chebyshev2_fo_section: %6*/
/*   %20 = fsub double %5, %12*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_47))
begin
chebyshev2_fo_section_altfp_subtract_64_0_op1 = chebyshev2_fo_section_6_12;
end
/* chebyshev2_fo_section: %6*/
/*   %36 = fsub double %34, %35*/
else if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_51))
begin
chebyshev2_fo_section_altfp_subtract_64_0_op1 = chebyshev2_fo_section_6_35;
end
/* chebyshev2_fo_section: %6*/
/*   %26 = fsub double %5, %10*/
else if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_79))
begin
chebyshev2_fo_section_altfp_subtract_64_0_op1 = chebyshev2_fo_section_6_10;
end
/* chebyshev2_fo_section: %6*/
/*   %45 = fsub double %34, %44*/
else if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_80))
begin
chebyshev2_fo_section_altfp_subtract_64_0_op1 = chebyshev2_fo_section_6_44;
end
/* chebyshev2_fo_section: %6*/
/*   %21 = fsub double %20, %15*/
else if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_81))
begin
chebyshev2_fo_section_altfp_subtract_64_0_op1 = chebyshev2_fo_section_6_15;
end
/* chebyshev2_fo_section: %6*/
/*   %38 = fsub double %36, %37*/
else if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_82))
begin
chebyshev2_fo_section_altfp_subtract_64_0_op1 = chebyshev2_fo_section_6_37_reg;
end
/* chebyshev2_fo_section: %52*/
/*   %88 = fsub double %5, %56*/
else if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_232))
begin
chebyshev2_fo_section_altfp_subtract_64_0_op1 = chebyshev2_fo_section_52_56;
end
/* chebyshev2_fo_section: %52*/
/*   %118 = fsub double %105, %117*/
else if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_234))
begin
chebyshev2_fo_section_altfp_subtract_64_0_op1 = chebyshev2_fo_section_52_117;
end
/* chebyshev2_fo_section: %52*/
/*   %83 = fsub double %66, %69*/
else if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_244))
begin
chebyshev2_fo_section_altfp_subtract_64_0_op1 = chebyshev2_fo_section_52_69;
end
/* chebyshev2_fo_section: %52*/
/*   %110 = fsub double %96, %98*/
else if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_245))
begin
chebyshev2_fo_section_altfp_subtract_64_0_op1 = chebyshev2_fo_section_52_98;
end
/* chebyshev2_fo_section: %52*/
/*   %79 = fsub double %78, %5*/
else if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_249))
begin
chebyshev2_fo_section_altfp_subtract_64_0_op1 = chebyshev2_fo_section_0_5_reg;
end
/* chebyshev2_fo_section: %52*/
/*   %106 = fsub double %104, %105*/
else /* if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_250)) */
begin
chebyshev2_fo_section_altfp_subtract_64_0_op1 = chebyshev2_fo_section_52_105_reg;
end
end
always @(*) begin
altfp_chebyshev2_fo_section_6_38_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
chebyshev2_fo_section_altfp_subtract_64_0 = altfp_subtractor64_chebyshev2_fo_section_6_38_out;
end
always @(*) begin
altfp_chebyshev2_fo_section_0_1_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
altfp_chebyshev2_fo_section_0_2_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
altfp_chebyshev2_fo_section_0_3_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
altfp_chebyshev2_fo_section_0_5_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
altfp_chebyshev2_fo_section_6_7_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
altfp_chebyshev2_fo_section_6_12_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
altfp_chebyshev2_fo_section_6_14_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
altfp_chebyshev2_fo_section_6_19_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
altfp_chebyshev2_fo_section_6_34_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
altfp_chebyshev2_fo_section_6_35_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
altfp_chebyshev2_fo_section_6_37_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
altfp_chebyshev2_fo_section_6_8_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
altfp_chebyshev2_fo_section_6_20_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
altfp_chebyshev2_fo_section_6_36_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
altfp_chebyshev2_fo_section_6_9_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
altfp_chebyshev2_fo_section_6_43_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
altfp_chebyshev2_fo_section_6_10_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
altfp_chebyshev2_fo_section_6_44_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
altfp_chebyshev2_fo_section_6_15_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
altfp_chebyshev2_fo_section_6_11_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
altfp_chebyshev2_fo_section_6_26_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
altfp_chebyshev2_fo_section_6_45_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
altfp_chebyshev2_fo_section_6_21_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
altfp_chebyshev2_fo_section_6_27_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
altfp_chebyshev2_fo_section_6_22_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
altfp_chebyshev2_fo_section_6_46_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
altfp_chebyshev2_fo_section_6_39_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
altfp_chebyshev2_fo_section_6_23_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
altfp_chebyshev2_fo_section_6_16_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
altfp_chebyshev2_fo_section_6_40_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
altfp_chebyshev2_fo_section_6_28_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
altfp_chebyshev2_fo_section_6_47_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
altfp_chebyshev2_fo_section_6_29_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
altfp_chebyshev2_fo_section_6_48_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
altfp_chebyshev2_fo_section_6_41_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
altfp_chebyshev2_fo_section_52_53_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
altfp_chebyshev2_fo_section_52_58_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
altfp_chebyshev2_fo_section_52_60_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
altfp_chebyshev2_fo_section_52_65_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
altfp_chebyshev2_fo_section_52_67_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
altfp_chebyshev2_fo_section_52_75_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
altfp_chebyshev2_fo_section_52_94_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
altfp_chebyshev2_fo_section_52_95_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
altfp_chebyshev2_fo_section_52_97_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
altfp_chebyshev2_fo_section_52_105_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
altfp_chebyshev2_fo_section_52_115_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
altfp_chebyshev2_fo_section_52_54_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
altfp_chebyshev2_fo_section_52_55_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
altfp_chebyshev2_fo_section_52_116_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
altfp_chebyshev2_fo_section_52_61_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
altfp_chebyshev2_fo_section_52_76_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
altfp_chebyshev2_fo_section_52_56_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
altfp_chebyshev2_fo_section_52_68_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
altfp_chebyshev2_fo_section_52_66_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
altfp_chebyshev2_fo_section_52_117_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
altfp_chebyshev2_fo_section_52_77_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
altfp_chebyshev2_fo_section_52_96_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
altfp_chebyshev2_fo_section_52_57_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
altfp_chebyshev2_fo_section_52_88_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
altfp_chebyshev2_fo_section_52_69_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
altfp_chebyshev2_fo_section_52_98_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
altfp_chebyshev2_fo_section_52_118_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
altfp_chebyshev2_fo_section_52_78_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
altfp_chebyshev2_fo_section_52_104_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
altfp_chebyshev2_fo_section_52_70_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
altfp_chebyshev2_fo_section_52_83_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
altfp_chebyshev2_fo_section_52_99_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
altfp_chebyshev2_fo_section_52_110_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
altfp_chebyshev2_fo_section_52_59_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
altfp_chebyshev2_fo_section_52_89_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
altfp_chebyshev2_fo_section_52_119_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
altfp_chebyshev2_fo_section_52_79_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
altfp_chebyshev2_fo_section_52_106_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
altfp_chebyshev2_fo_section_52_71_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
altfp_chebyshev2_fo_section_52_84_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
altfp_chebyshev2_fo_section_52_62_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
altfp_chebyshev2_fo_section_52_100_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
altfp_chebyshev2_fo_section_52_90_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
altfp_chebyshev2_fo_section_52_111_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
altfp_chebyshev2_fo_section_52_120_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
altfp_chebyshev2_fo_section_52_80_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
altfp_chebyshev2_fo_section_52_107_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
altfp_chebyshev2_fo_section_52_72_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
altfp_chebyshev2_fo_section_52_85_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
altfp_chebyshev2_fo_section_52_101_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
altfp_chebyshev2_fo_section_52_112_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
altfp_chebyshev2_fo_section_52_63_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
altfp_chebyshev2_fo_section_52_81_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
altfp_chebyshev2_fo_section_52_91_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
altfp_chebyshev2_fo_section_52_108_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
altfp_chebyshev2_fo_section_52_121_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
altfp_chebyshev2_fo_section_52_73_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
altfp_chebyshev2_fo_section_52_86_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
altfp_chebyshev2_fo_section_52_102_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
altfp_chebyshev2_fo_section_52_113_en = (memory_controller_waitrequest == 1'd0);
end
always @(posedge clk) begin
if ((cur_state == LEGUP_0))
begin
finish <= 1'd0;
if (reset == 1'b0 && ^(1'd0) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to finish"); $finish; end
end
/* chebyshev2_fo_section: %123*/
/*   ret void*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_123_342))
begin
finish <= (memory_controller_waitrequest == 1'd0);
if (reset == 1'b0 && ^((memory_controller_waitrequest == 1'd0)) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to finish"); $finish; end
end
end
always @(*) begin
memory_controller_enable_a = 1'd0;
if ((cur_state == LEGUP_0))
begin
memory_controller_enable_a = 1'd0;
end
/* chebyshev2_fo_section: %6*/
/*   store i32 %24, i32* %25, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_173))
begin
memory_controller_enable_a = 1'd1;
end
/* chebyshev2_fo_section: %6*/
/*   store i32 0, i32* %31, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_174))
begin
memory_controller_enable_a = 1'd1;
end
/* chebyshev2_fo_section: %6*/
/*   store i32 1, i32* %33, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_175))
begin
memory_controller_enable_a = 1'd1;
end
/* chebyshev2_fo_section: %6*/
/*   store double %17, double* %18, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_182))
begin
memory_controller_enable_a = 1'd1;
end
/* chebyshev2_fo_section: %6*/
/*   store double 0.000000e+00, double* %32, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_184))
begin
memory_controller_enable_a = 1'd1;
end
/* chebyshev2_fo_section: %6*/
/*   store i32 %41, i32* %42, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_185))
begin
memory_controller_enable_a = 1'd1;
end
/* chebyshev2_fo_section: %52*/
/*   store i32 %73, i32* %74, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_336))
begin
memory_controller_enable_a = 1'd1;
end
/* chebyshev2_fo_section: %52*/
/*   store i32 %86, i32* %87, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_337))
begin
memory_controller_enable_a = 1'd1;
end
/* chebyshev2_fo_section: %52*/
/*   store i32 1, i32* %93, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_338))
begin
memory_controller_enable_a = 1'd1;
end
/* chebyshev2_fo_section: %52*/
/*   store double %108, double* %109, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_339))
begin
memory_controller_enable_a = 1'd1;
end
/* chebyshev2_fo_section: %52*/
/*   store double %121, double* %122, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_340))
begin
memory_controller_enable_a = 1'd1;
end
end
always @(*) begin
memory_controller_address_a = 1'd0;
if ((cur_state == LEGUP_0))
begin
memory_controller_address_a = 1'd0;
end
/* chebyshev2_fo_section: %6*/
/*   store i32 %24, i32* %25, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_173))
begin
memory_controller_address_a = chebyshev2_fo_section_6_25_reg;
end
/* chebyshev2_fo_section: %6*/
/*   store i32 0, i32* %31, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_174))
begin
memory_controller_address_a = chebyshev2_fo_section_6_31_reg;
end
/* chebyshev2_fo_section: %6*/
/*   store i32 1, i32* %33, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_175))
begin
memory_controller_address_a = chebyshev2_fo_section_6_33_reg;
end
/* chebyshev2_fo_section: %6*/
/*   store double %17, double* %18, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_182))
begin
memory_controller_address_a = chebyshev2_fo_section_6_18_reg;
end
/* chebyshev2_fo_section: %6*/
/*   store double 0.000000e+00, double* %32, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_184))
begin
memory_controller_address_a = chebyshev2_fo_section_6_32_reg;
end
/* chebyshev2_fo_section: %6*/
/*   store i32 %41, i32* %42, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_185))
begin
memory_controller_address_a = chebyshev2_fo_section_6_42_reg;
end
/* chebyshev2_fo_section: %52*/
/*   store i32 %73, i32* %74, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_336))
begin
memory_controller_address_a = chebyshev2_fo_section_52_74_reg;
end
/* chebyshev2_fo_section: %52*/
/*   store i32 %86, i32* %87, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_337))
begin
memory_controller_address_a = chebyshev2_fo_section_52_87_reg;
end
/* chebyshev2_fo_section: %52*/
/*   store i32 1, i32* %93, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_338))
begin
memory_controller_address_a = chebyshev2_fo_section_52_93_reg;
end
/* chebyshev2_fo_section: %52*/
/*   store double %108, double* %109, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_339))
begin
memory_controller_address_a = chebyshev2_fo_section_52_109_reg;
end
/* chebyshev2_fo_section: %52*/
/*   store double %121, double* %122, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_340))
begin
memory_controller_address_a = chebyshev2_fo_section_52_122_reg;
end
end
always @(*) begin
memory_controller_write_enable_a = 1'd0;
if ((cur_state == LEGUP_0))
begin
memory_controller_write_enable_a = 1'd0;
end
/* chebyshev2_fo_section: %6*/
/*   store i32 %24, i32* %25, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_173))
begin
memory_controller_write_enable_a = 1'd1;
end
/* chebyshev2_fo_section: %6*/
/*   store i32 0, i32* %31, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_174))
begin
memory_controller_write_enable_a = 1'd1;
end
/* chebyshev2_fo_section: %6*/
/*   store i32 1, i32* %33, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_175))
begin
memory_controller_write_enable_a = 1'd1;
end
/* chebyshev2_fo_section: %6*/
/*   store double %17, double* %18, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_182))
begin
memory_controller_write_enable_a = 1'd1;
end
/* chebyshev2_fo_section: %6*/
/*   store double 0.000000e+00, double* %32, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_184))
begin
memory_controller_write_enable_a = 1'd1;
end
/* chebyshev2_fo_section: %6*/
/*   store i32 %41, i32* %42, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_185))
begin
memory_controller_write_enable_a = 1'd1;
end
/* chebyshev2_fo_section: %52*/
/*   store i32 %73, i32* %74, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_336))
begin
memory_controller_write_enable_a = 1'd1;
end
/* chebyshev2_fo_section: %52*/
/*   store i32 %86, i32* %87, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_337))
begin
memory_controller_write_enable_a = 1'd1;
end
/* chebyshev2_fo_section: %52*/
/*   store i32 1, i32* %93, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_338))
begin
memory_controller_write_enable_a = 1'd1;
end
/* chebyshev2_fo_section: %52*/
/*   store double %108, double* %109, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_339))
begin
memory_controller_write_enable_a = 1'd1;
end
/* chebyshev2_fo_section: %52*/
/*   store double %121, double* %122, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_340))
begin
memory_controller_write_enable_a = 1'd1;
end
end
always @(*) begin
memory_controller_in_a = 1'd0;
if ((cur_state == LEGUP_0))
begin
memory_controller_in_a = 1'd0;
end
/* chebyshev2_fo_section: %6*/
/*   store i32 %24, i32* %25, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_173))
begin
memory_controller_in_a = chebyshev2_fo_section_6_24;
end
/* chebyshev2_fo_section: %6*/
/*   store i32 0, i32* %31, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_174))
begin
memory_controller_in_a = 32'd0;
end
/* chebyshev2_fo_section: %6*/
/*   store i32 1, i32* %33, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_175))
begin
memory_controller_in_a = 32'd1;
end
/* chebyshev2_fo_section: %6*/
/*   store double %17, double* %18, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_182))
begin
memory_controller_in_a = chebyshev2_fo_section_6_17;
end
/* chebyshev2_fo_section: %6*/
/*   store double 0.000000e+00, double* %32, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_184))
begin
memory_controller_in_a = 64'h0;
end
/* chebyshev2_fo_section: %6*/
/*   store i32 %41, i32* %42, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_185))
begin
memory_controller_in_a = chebyshev2_fo_section_6_41_reg;
end
/* chebyshev2_fo_section: %52*/
/*   store i32 %73, i32* %74, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_336))
begin
memory_controller_in_a = chebyshev2_fo_section_52_73;
end
/* chebyshev2_fo_section: %52*/
/*   store i32 %86, i32* %87, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_337))
begin
memory_controller_in_a = chebyshev2_fo_section_52_86;
end
/* chebyshev2_fo_section: %52*/
/*   store i32 1, i32* %93, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_338))
begin
memory_controller_in_a = 32'd1;
end
/* chebyshev2_fo_section: %52*/
/*   store double %108, double* %109, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_339))
begin
memory_controller_in_a = chebyshev2_fo_section_52_108_reg;
end
/* chebyshev2_fo_section: %52*/
/*   store double %121, double* %122, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_340))
begin
memory_controller_in_a = chebyshev2_fo_section_52_121_reg;
end
end
always @(*) begin
memory_controller_size_a = 1'd0;
if ((cur_state == LEGUP_0))
begin
memory_controller_size_a = 1'd0;
end
/* chebyshev2_fo_section: %6*/
/*   store i32 %24, i32* %25, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_173))
begin
memory_controller_size_a = 2'd2;
end
/* chebyshev2_fo_section: %6*/
/*   store i32 0, i32* %31, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_174))
begin
memory_controller_size_a = 2'd2;
end
/* chebyshev2_fo_section: %6*/
/*   store i32 1, i32* %33, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_175))
begin
memory_controller_size_a = 2'd2;
end
/* chebyshev2_fo_section: %6*/
/*   store double %17, double* %18, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_182))
begin
memory_controller_size_a = 2'd3;
end
/* chebyshev2_fo_section: %6*/
/*   store double 0.000000e+00, double* %32, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_184))
begin
memory_controller_size_a = 2'd3;
end
/* chebyshev2_fo_section: %6*/
/*   store i32 %41, i32* %42, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_185))
begin
memory_controller_size_a = 2'd2;
end
/* chebyshev2_fo_section: %52*/
/*   store i32 %73, i32* %74, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_336))
begin
memory_controller_size_a = 2'd2;
end
/* chebyshev2_fo_section: %52*/
/*   store i32 %86, i32* %87, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_337))
begin
memory_controller_size_a = 2'd2;
end
/* chebyshev2_fo_section: %52*/
/*   store i32 1, i32* %93, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_338))
begin
memory_controller_size_a = 2'd2;
end
/* chebyshev2_fo_section: %52*/
/*   store double %108, double* %109, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_339))
begin
memory_controller_size_a = 2'd3;
end
/* chebyshev2_fo_section: %52*/
/*   store double %121, double* %122, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_340))
begin
memory_controller_size_a = 2'd3;
end
end
always @(*) begin
memory_controller_enable_b = 1'd0;
if ((cur_state == LEGUP_0))
begin
memory_controller_enable_b = 1'd0;
end
/* chebyshev2_fo_section: %6*/
/*   store double %29, double* %30, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_183))
begin
memory_controller_enable_b = 1'd1;
end
/* chebyshev2_fo_section: %6*/
/*   store double %48, double* %49, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_184))
begin
memory_controller_enable_b = 1'd1;
end
/* chebyshev2_fo_section: %6*/
/*   store double 0.000000e+00, double* %51, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_185))
begin
memory_controller_enable_b = 1'd1;
end
/* chebyshev2_fo_section: %6*/
/*   store i32 0, i32* %50, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_186))
begin
memory_controller_enable_b = 1'd1;
end
/* chebyshev2_fo_section: %52*/
/*   store double %63, double* %64, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_335))
begin
memory_controller_enable_b = 1'd1;
end
/* chebyshev2_fo_section: %52*/
/*   store double %81, double* %82, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_336))
begin
memory_controller_enable_b = 1'd1;
end
/* chebyshev2_fo_section: %52*/
/*   store double %91, double* %92, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_337))
begin
memory_controller_enable_b = 1'd1;
end
/* chebyshev2_fo_section: %52*/
/*   store i32 %102, i32* %103, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_338))
begin
memory_controller_enable_b = 1'd1;
end
/* chebyshev2_fo_section: %52*/
/*   store i32 %113, i32* %114, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_339))
begin
memory_controller_enable_b = 1'd1;
end
end
always @(*) begin
memory_controller_address_b = 1'd0;
if ((cur_state == LEGUP_0))
begin
memory_controller_address_b = 1'd0;
end
/* chebyshev2_fo_section: %6*/
/*   store double %29, double* %30, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_183))
begin
memory_controller_address_b = chebyshev2_fo_section_6_30_reg;
end
/* chebyshev2_fo_section: %6*/
/*   store double %48, double* %49, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_184))
begin
memory_controller_address_b = chebyshev2_fo_section_6_49_reg;
end
/* chebyshev2_fo_section: %6*/
/*   store double 0.000000e+00, double* %51, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_185))
begin
memory_controller_address_b = chebyshev2_fo_section_6_51_reg;
end
/* chebyshev2_fo_section: %6*/
/*   store i32 0, i32* %50, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_186))
begin
memory_controller_address_b = chebyshev2_fo_section_6_50_reg;
end
/* chebyshev2_fo_section: %52*/
/*   store double %63, double* %64, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_335))
begin
memory_controller_address_b = chebyshev2_fo_section_52_64_reg;
end
/* chebyshev2_fo_section: %52*/
/*   store double %81, double* %82, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_336))
begin
memory_controller_address_b = chebyshev2_fo_section_52_82_reg;
end
/* chebyshev2_fo_section: %52*/
/*   store double %91, double* %92, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_337))
begin
memory_controller_address_b = chebyshev2_fo_section_52_92_reg;
end
/* chebyshev2_fo_section: %52*/
/*   store i32 %102, i32* %103, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_338))
begin
memory_controller_address_b = chebyshev2_fo_section_52_103_reg;
end
/* chebyshev2_fo_section: %52*/
/*   store i32 %113, i32* %114, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_339))
begin
memory_controller_address_b = chebyshev2_fo_section_52_114_reg;
end
end
always @(*) begin
memory_controller_write_enable_b = 1'd0;
if ((cur_state == LEGUP_0))
begin
memory_controller_write_enable_b = 1'd0;
end
/* chebyshev2_fo_section: %6*/
/*   store double %29, double* %30, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_183))
begin
memory_controller_write_enable_b = 1'd1;
end
/* chebyshev2_fo_section: %6*/
/*   store double %48, double* %49, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_184))
begin
memory_controller_write_enable_b = 1'd1;
end
/* chebyshev2_fo_section: %6*/
/*   store double 0.000000e+00, double* %51, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_185))
begin
memory_controller_write_enable_b = 1'd1;
end
/* chebyshev2_fo_section: %6*/
/*   store i32 0, i32* %50, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_186))
begin
memory_controller_write_enable_b = 1'd1;
end
/* chebyshev2_fo_section: %52*/
/*   store double %63, double* %64, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_335))
begin
memory_controller_write_enable_b = 1'd1;
end
/* chebyshev2_fo_section: %52*/
/*   store double %81, double* %82, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_336))
begin
memory_controller_write_enable_b = 1'd1;
end
/* chebyshev2_fo_section: %52*/
/*   store double %91, double* %92, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_337))
begin
memory_controller_write_enable_b = 1'd1;
end
/* chebyshev2_fo_section: %52*/
/*   store i32 %102, i32* %103, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_338))
begin
memory_controller_write_enable_b = 1'd1;
end
/* chebyshev2_fo_section: %52*/
/*   store i32 %113, i32* %114, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_339))
begin
memory_controller_write_enable_b = 1'd1;
end
end
always @(*) begin
memory_controller_in_b = 1'd0;
if ((cur_state == LEGUP_0))
begin
memory_controller_in_b = 1'd0;
end
/* chebyshev2_fo_section: %6*/
/*   store double %29, double* %30, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_183))
begin
memory_controller_in_b = chebyshev2_fo_section_6_29;
end
/* chebyshev2_fo_section: %6*/
/*   store double %48, double* %49, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_184))
begin
memory_controller_in_b = chebyshev2_fo_section_6_48;
end
/* chebyshev2_fo_section: %6*/
/*   store double 0.000000e+00, double* %51, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_185))
begin
memory_controller_in_b = 64'h0;
end
/* chebyshev2_fo_section: %6*/
/*   store i32 0, i32* %50, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_186))
begin
memory_controller_in_b = 32'd0;
end
/* chebyshev2_fo_section: %52*/
/*   store double %63, double* %64, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_335))
begin
memory_controller_in_b = chebyshev2_fo_section_52_63;
end
/* chebyshev2_fo_section: %52*/
/*   store double %81, double* %82, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_336))
begin
memory_controller_in_b = chebyshev2_fo_section_52_81;
end
/* chebyshev2_fo_section: %52*/
/*   store double %91, double* %92, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_337))
begin
memory_controller_in_b = chebyshev2_fo_section_52_91;
end
/* chebyshev2_fo_section: %52*/
/*   store i32 %102, i32* %103, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_338))
begin
memory_controller_in_b = chebyshev2_fo_section_52_102;
end
/* chebyshev2_fo_section: %52*/
/*   store i32 %113, i32* %114, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_339))
begin
memory_controller_in_b = chebyshev2_fo_section_52_113;
end
end
always @(*) begin
memory_controller_size_b = 1'd0;
if ((cur_state == LEGUP_0))
begin
memory_controller_size_b = 1'd0;
end
/* chebyshev2_fo_section: %6*/
/*   store double %29, double* %30, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_183))
begin
memory_controller_size_b = 2'd3;
end
/* chebyshev2_fo_section: %6*/
/*   store double %48, double* %49, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_184))
begin
memory_controller_size_b = 2'd3;
end
/* chebyshev2_fo_section: %6*/
/*   store double 0.000000e+00, double* %51, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_185))
begin
memory_controller_size_b = 2'd3;
end
/* chebyshev2_fo_section: %6*/
/*   store i32 0, i32* %50, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_6_186))
begin
memory_controller_size_b = 2'd2;
end
/* chebyshev2_fo_section: %52*/
/*   store double %63, double* %64, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_335))
begin
memory_controller_size_b = 2'd3;
end
/* chebyshev2_fo_section: %52*/
/*   store double %81, double* %82, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_336))
begin
memory_controller_size_b = 2'd3;
end
/* chebyshev2_fo_section: %52*/
/*   store double %91, double* %92, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_337))
begin
memory_controller_size_b = 2'd3;
end
/* chebyshev2_fo_section: %52*/
/*   store i32 %102, i32* %103, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_338))
begin
memory_controller_size_b = 2'd2;
end
/* chebyshev2_fo_section: %52*/
/*   store i32 %113, i32* %114, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_chebyshev2_fo_section_BB_52_339))
begin
memory_controller_size_b = 2'd2;
end
end

endmodule 
`timescale 1 ns / 1 ns
module main
(
	clk,
	clk2x,
	clk1x_follower,
	reset,
	start,
	finish,
	memory_controller_enable_a,
	memory_controller_address_a,
	memory_controller_write_enable_a,
	memory_controller_in_a,
	memory_controller_size_a,
	memory_controller_out_a,
	memory_controller_enable_b,
	memory_controller_address_b,
	memory_controller_write_enable_b,
	memory_controller_in_b,
	memory_controller_size_b,
	memory_controller_out_b,
	memory_controller_waitrequest,
	return_val
);

parameter [1:0] LEGUP_0 = 2'd0;
parameter [1:0] LEGUP_F_main_BB_0_1 = 2'd1;
parameter [1:0] LEGUP_F_main_BB_0_3 = 2'd3;
parameter [1:0] LEGUP_function_call_2 = 2'd2;

input  clk;
input  clk2x;
input  clk1x_follower;
input  reset;
input  start;
output reg  finish;
output reg  memory_controller_enable_a;
output reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] memory_controller_address_a;
output reg  memory_controller_write_enable_a;
output reg [`MEMORY_CONTROLLER_DATA_SIZE-1:0] memory_controller_in_a;
output reg [1:0] memory_controller_size_a;
input [`MEMORY_CONTROLLER_DATA_SIZE-1:0] memory_controller_out_a;
output reg  memory_controller_enable_b;
output reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] memory_controller_address_b;
output reg  memory_controller_write_enable_b;
output reg [`MEMORY_CONTROLLER_DATA_SIZE-1:0] memory_controller_in_b;
output reg [1:0] memory_controller_size_b;
input [`MEMORY_CONTROLLER_DATA_SIZE-1:0] memory_controller_out_b;
input  memory_controller_waitrequest;
output reg [31:0] return_val;
reg [1:0] cur_state;
reg  chebyshev2_fo_section_start;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] chebyshev2_fo_section_arg_S;
reg [63:0] chebyshev2_fo_section_arg_a;
reg [63:0] chebyshev2_fo_section_arg_c;
reg [63:0] chebyshev2_fo_section_arg_tetta_b;
reg [63:0] chebyshev2_fo_section_arg_g;
reg [63:0] chebyshev2_fo_section_arg_si;
reg [63:0] chebyshev2_fo_section_arg_b;
reg [63:0] chebyshev2_fo_section_arg_D;
reg [63:0] chebyshev2_fo_section_arg_c0;
wire  chebyshev2_fo_section_memory_controller_enable_a;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] chebyshev2_fo_section_memory_controller_address_a;
wire  chebyshev2_fo_section_memory_controller_write_enable_a;
wire [`MEMORY_CONTROLLER_DATA_SIZE-1:0] chebyshev2_fo_section_memory_controller_in_a;
reg [`MEMORY_CONTROLLER_DATA_SIZE-1:0] chebyshev2_fo_section_memory_controller_out_a;
wire [1:0] chebyshev2_fo_section_memory_controller_size_a;
wire  chebyshev2_fo_section_memory_controller_enable_b;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] chebyshev2_fo_section_memory_controller_address_b;
wire  chebyshev2_fo_section_memory_controller_write_enable_b;
wire [`MEMORY_CONTROLLER_DATA_SIZE-1:0] chebyshev2_fo_section_memory_controller_in_b;
reg [`MEMORY_CONTROLLER_DATA_SIZE-1:0] chebyshev2_fo_section_memory_controller_out_b;
wire [1:0] chebyshev2_fo_section_memory_controller_size_b;
reg  chebyshev2_fo_section_memory_controller_waitrequest;
wire  chebyshev2_fo_section_finish;
reg  chebyshev2_fo_section_finish_final;
reg  legup_function_call;
wire [15:0] legup_pthreadpoll_threadID;


chebyshev2_fo_section chebyshev2_fo_section_inst (
	.memory_controller_enable_a (chebyshev2_fo_section_memory_controller_enable_a),
	.memory_controller_address_a (chebyshev2_fo_section_memory_controller_address_a),
	.memory_controller_write_enable_a (chebyshev2_fo_section_memory_controller_write_enable_a),
	.memory_controller_in_a (chebyshev2_fo_section_memory_controller_in_a),
	.memory_controller_size_a (chebyshev2_fo_section_memory_controller_size_a),
	.memory_controller_out_a (memory_controller_out_a[`MEMORY_CONTROLLER_DATA_SIZE-1:0]),
	.memory_controller_enable_b (chebyshev2_fo_section_memory_controller_enable_b),
	.memory_controller_address_b (chebyshev2_fo_section_memory_controller_address_b),
	.memory_controller_write_enable_b (chebyshev2_fo_section_memory_controller_write_enable_b),
	.memory_controller_in_b (chebyshev2_fo_section_memory_controller_in_b),
	.memory_controller_size_b (chebyshev2_fo_section_memory_controller_size_b),
	.memory_controller_out_b (memory_controller_out_b[`MEMORY_CONTROLLER_DATA_SIZE-1:0]),
	.memory_controller_waitrequest (memory_controller_waitrequest),
	.clk (clk),
	.clk2x (clk2x),
	.clk1x_follower (clk1x_follower),
	.reset (reset),
	.start (chebyshev2_fo_section_start),
	.finish (chebyshev2_fo_section_finish),
	.arg_S (chebyshev2_fo_section_arg_S),
	.arg_a (chebyshev2_fo_section_arg_a),
	.arg_c (chebyshev2_fo_section_arg_c),
	.arg_tetta_b (chebyshev2_fo_section_arg_tetta_b),
	.arg_g (chebyshev2_fo_section_arg_g),
	.arg_si (chebyshev2_fo_section_arg_si),
	.arg_b (chebyshev2_fo_section_arg_b),
	.arg_D (chebyshev2_fo_section_arg_D),
	.arg_c0 (chebyshev2_fo_section_arg_c0)
);


// Local Rams


always @(posedge clk) begin
if (((cur_state == LEGUP_0) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_0;
if (reset == 1'b0 && ^(LEGUP_0) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_0) & (memory_controller_waitrequest == 1'd0)) & (start == 1'd1)))
begin
cur_state <= LEGUP_F_main_BB_0_1;
if (reset == 1'b0 && ^(LEGUP_F_main_BB_0_1) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_0) & (memory_controller_waitrequest == 1'd0)) & (start == 1'd0)))
begin
cur_state <= LEGUP_0;
if (reset == 1'b0 && ^(LEGUP_0) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_main_BB_0_1) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_main_BB_0_1;
if (reset == 1'b0 && ^(LEGUP_F_main_BB_0_1) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_main_BB_0_1) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_function_call_2;
if (reset == 1'b0 && ^(LEGUP_function_call_2) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_function_call_2) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_function_call_2;
if (reset == 1'b0 && ^(LEGUP_function_call_2) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_function_call_2) & (memory_controller_waitrequest == 1'd0)) & (chebyshev2_fo_section_finish_final == 1'd1)))
begin
cur_state <= LEGUP_F_main_BB_0_3;
if (reset == 1'b0 && ^(LEGUP_F_main_BB_0_3) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_function_call_2) & (memory_controller_waitrequest == 1'd0)) & (chebyshev2_fo_section_finish_final == 1'd0)))
begin
cur_state <= LEGUP_function_call_2;
if (reset == 1'b0 && ^(LEGUP_function_call_2) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_main_BB_0_3) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_main_BB_0_3;
if (reset == 1'b0 && ^(LEGUP_F_main_BB_0_3) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_main_BB_0_3) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_0;
if (reset == 1'b0 && ^(LEGUP_0) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((reset == 1'd1))
begin
cur_state <= 2'd0;
if (reset == 1'b0 && ^(2'd0) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
end
always @(posedge clk) begin
/* main: %0*/
/*   tail call void @chebyshev2_fo_section(%struct.TYPE_3__* undef, double undef, double undef, double undef, double undef, double undef, double undef, double undef, double undef)*/
if ((cur_state == LEGUP_F_main_BB_0_1))
begin
chebyshev2_fo_section_start <= 1'd1;
if (reset == 1'b0 && ^(1'd1) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev2_fo_section_start"); $finish; end
end
/* main: %0*/
/*   tail call void @chebyshev2_fo_section(%struct.TYPE_3__* undef, double undef, double undef, double undef, double undef, double undef, double undef, double undef, double undef)*/
if ((cur_state == LEGUP_function_call_2))
begin
chebyshev2_fo_section_start <= 1'd0;
if (reset == 1'b0 && ^(1'd0) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev2_fo_section_start"); $finish; end
end
end
always @(posedge clk) begin
/* main: %0*/
/*   tail call void @chebyshev2_fo_section(%struct.TYPE_3__* undef, double undef, double undef, double undef, double undef, double undef, double undef, double undef, double undef)*/
if ((cur_state == LEGUP_F_main_BB_0_1))
begin
chebyshev2_fo_section_arg_S <= 0;
if (reset == 1'b0 && ^(0) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev2_fo_section_arg_S"); $finish; end
end
end
always @(posedge clk) begin
/* main: %0*/
/*   tail call void @chebyshev2_fo_section(%struct.TYPE_3__* undef, double undef, double undef, double undef, double undef, double undef, double undef, double undef, double undef)*/
if ((cur_state == LEGUP_F_main_BB_0_1))
begin
chebyshev2_fo_section_arg_a <= 64'd0;
if (reset == 1'b0 && ^(64'd0) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev2_fo_section_arg_a"); $finish; end
end
end
always @(posedge clk) begin
/* main: %0*/
/*   tail call void @chebyshev2_fo_section(%struct.TYPE_3__* undef, double undef, double undef, double undef, double undef, double undef, double undef, double undef, double undef)*/
if ((cur_state == LEGUP_F_main_BB_0_1))
begin
chebyshev2_fo_section_arg_c <= 64'd0;
if (reset == 1'b0 && ^(64'd0) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev2_fo_section_arg_c"); $finish; end
end
end
always @(posedge clk) begin
/* main: %0*/
/*   tail call void @chebyshev2_fo_section(%struct.TYPE_3__* undef, double undef, double undef, double undef, double undef, double undef, double undef, double undef, double undef)*/
if ((cur_state == LEGUP_F_main_BB_0_1))
begin
chebyshev2_fo_section_arg_tetta_b <= 64'd0;
if (reset == 1'b0 && ^(64'd0) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev2_fo_section_arg_tetta_b"); $finish; end
end
end
always @(posedge clk) begin
/* main: %0*/
/*   tail call void @chebyshev2_fo_section(%struct.TYPE_3__* undef, double undef, double undef, double undef, double undef, double undef, double undef, double undef, double undef)*/
if ((cur_state == LEGUP_F_main_BB_0_1))
begin
chebyshev2_fo_section_arg_g <= 64'd0;
if (reset == 1'b0 && ^(64'd0) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev2_fo_section_arg_g"); $finish; end
end
end
always @(posedge clk) begin
/* main: %0*/
/*   tail call void @chebyshev2_fo_section(%struct.TYPE_3__* undef, double undef, double undef, double undef, double undef, double undef, double undef, double undef, double undef)*/
if ((cur_state == LEGUP_F_main_BB_0_1))
begin
chebyshev2_fo_section_arg_si <= 64'd0;
if (reset == 1'b0 && ^(64'd0) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev2_fo_section_arg_si"); $finish; end
end
end
always @(posedge clk) begin
/* main: %0*/
/*   tail call void @chebyshev2_fo_section(%struct.TYPE_3__* undef, double undef, double undef, double undef, double undef, double undef, double undef, double undef, double undef)*/
if ((cur_state == LEGUP_F_main_BB_0_1))
begin
chebyshev2_fo_section_arg_b <= 64'd0;
if (reset == 1'b0 && ^(64'd0) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev2_fo_section_arg_b"); $finish; end
end
end
always @(posedge clk) begin
/* main: %0*/
/*   tail call void @chebyshev2_fo_section(%struct.TYPE_3__* undef, double undef, double undef, double undef, double undef, double undef, double undef, double undef, double undef)*/
if ((cur_state == LEGUP_F_main_BB_0_1))
begin
chebyshev2_fo_section_arg_D <= 64'd0;
if (reset == 1'b0 && ^(64'd0) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev2_fo_section_arg_D"); $finish; end
end
end
always @(posedge clk) begin
/* main: %0*/
/*   tail call void @chebyshev2_fo_section(%struct.TYPE_3__* undef, double undef, double undef, double undef, double undef, double undef, double undef, double undef, double undef)*/
if ((cur_state == LEGUP_F_main_BB_0_1))
begin
chebyshev2_fo_section_arg_c0 <= 64'd0;
if (reset == 1'b0 && ^(64'd0) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to chebyshev2_fo_section_arg_c0"); $finish; end
end
end
always @(*) begin
/* main: %0*/
/*   tail call void @chebyshev2_fo_section(%struct.TYPE_3__* undef, double undef, double undef, double undef, double undef, double undef, double undef, double undef, double undef)*/
begin
chebyshev2_fo_section_memory_controller_out_a = memory_controller_out_a;
end
end
always @(*) begin
/* main: %0*/
/*   tail call void @chebyshev2_fo_section(%struct.TYPE_3__* undef, double undef, double undef, double undef, double undef, double undef, double undef, double undef, double undef)*/
begin
chebyshev2_fo_section_memory_controller_out_b = memory_controller_out_b;
end
end
always @(*) begin
chebyshev2_fo_section_memory_controller_waitrequest = memory_controller_waitrequest;
end
always @(*) begin
chebyshev2_fo_section_finish_final = chebyshev2_fo_section_finish;
end
always @(*) begin
legup_function_call = 1'd0;
/* main: %0*/
/*   tail call void @chebyshev2_fo_section(%struct.TYPE_3__* undef, double undef, double undef, double undef, double undef, double undef, double undef, double undef, double undef)*/
if ((cur_state == LEGUP_function_call_2))
begin
legup_function_call = 1'd1;
end
end
always @(posedge clk) begin
if ((cur_state == LEGUP_0))
begin
finish <= 1'd0;
if (reset == 1'b0 && ^(1'd0) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to finish"); $finish; end
end
/* main: %0*/
/*   ret i32 0*/
if ((cur_state == LEGUP_F_main_BB_0_3))
begin
finish <= (memory_controller_waitrequest == 1'd0);
if (reset == 1'b0 && ^((memory_controller_waitrequest == 1'd0)) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to finish"); $finish; end
end
end
always @(*) begin
memory_controller_enable_a = 1'd0;
/* main: %0*/
/*   tail call void @chebyshev2_fo_section(%struct.TYPE_3__* undef, double undef, double undef, double undef, double undef, double undef, double undef, double undef, double undef)*/
if ((cur_state == LEGUP_function_call_2))
begin
memory_controller_enable_a = chebyshev2_fo_section_memory_controller_enable_a;
end
/* main: %0*/
/*   tail call void @chebyshev2_fo_section(%struct.TYPE_3__* undef, double undef, double undef, double undef, double undef, double undef, double undef, double undef, double undef)*/
if ((cur_state == LEGUP_function_call_2))
begin
memory_controller_enable_a = chebyshev2_fo_section_memory_controller_enable_a;
end
end
always @(*) begin
memory_controller_address_a = 1'd0;
/* main: %0*/
/*   tail call void @chebyshev2_fo_section(%struct.TYPE_3__* undef, double undef, double undef, double undef, double undef, double undef, double undef, double undef, double undef)*/
if ((cur_state == LEGUP_function_call_2))
begin
memory_controller_address_a[`MEMORY_CONTROLLER_ADDR_SIZE-1:0] = chebyshev2_fo_section_memory_controller_address_a;
end
/* main: %0*/
/*   tail call void @chebyshev2_fo_section(%struct.TYPE_3__* undef, double undef, double undef, double undef, double undef, double undef, double undef, double undef, double undef)*/
if ((cur_state == LEGUP_function_call_2))
begin
memory_controller_address_a[`MEMORY_CONTROLLER_ADDR_SIZE-1:0] = chebyshev2_fo_section_memory_controller_address_a;
end
end
always @(*) begin
memory_controller_write_enable_a = 1'd0;
/* main: %0*/
/*   tail call void @chebyshev2_fo_section(%struct.TYPE_3__* undef, double undef, double undef, double undef, double undef, double undef, double undef, double undef, double undef)*/
if ((cur_state == LEGUP_function_call_2))
begin
memory_controller_write_enable_a = chebyshev2_fo_section_memory_controller_write_enable_a;
end
/* main: %0*/
/*   tail call void @chebyshev2_fo_section(%struct.TYPE_3__* undef, double undef, double undef, double undef, double undef, double undef, double undef, double undef, double undef)*/
if ((cur_state == LEGUP_function_call_2))
begin
memory_controller_write_enable_a = chebyshev2_fo_section_memory_controller_write_enable_a;
end
end
always @(*) begin
memory_controller_in_a = 1'd0;
/* main: %0*/
/*   tail call void @chebyshev2_fo_section(%struct.TYPE_3__* undef, double undef, double undef, double undef, double undef, double undef, double undef, double undef, double undef)*/
if ((cur_state == LEGUP_function_call_2))
begin
memory_controller_in_a[`MEMORY_CONTROLLER_DATA_SIZE-1:0] = chebyshev2_fo_section_memory_controller_in_a;
end
/* main: %0*/
/*   tail call void @chebyshev2_fo_section(%struct.TYPE_3__* undef, double undef, double undef, double undef, double undef, double undef, double undef, double undef, double undef)*/
if ((cur_state == LEGUP_function_call_2))
begin
memory_controller_in_a[`MEMORY_CONTROLLER_DATA_SIZE-1:0] = chebyshev2_fo_section_memory_controller_in_a;
end
end
always @(*) begin
memory_controller_size_a = 1'd0;
/* main: %0*/
/*   tail call void @chebyshev2_fo_section(%struct.TYPE_3__* undef, double undef, double undef, double undef, double undef, double undef, double undef, double undef, double undef)*/
if ((cur_state == LEGUP_function_call_2))
begin
memory_controller_size_a[1:0] = chebyshev2_fo_section_memory_controller_size_a;
end
/* main: %0*/
/*   tail call void @chebyshev2_fo_section(%struct.TYPE_3__* undef, double undef, double undef, double undef, double undef, double undef, double undef, double undef, double undef)*/
if ((cur_state == LEGUP_function_call_2))
begin
memory_controller_size_a[1:0] = chebyshev2_fo_section_memory_controller_size_a;
end
end
always @(*) begin
memory_controller_enable_b = 1'd0;
/* main: %0*/
/*   tail call void @chebyshev2_fo_section(%struct.TYPE_3__* undef, double undef, double undef, double undef, double undef, double undef, double undef, double undef, double undef)*/
if ((cur_state == LEGUP_function_call_2))
begin
memory_controller_enable_b = chebyshev2_fo_section_memory_controller_enable_b;
end
/* main: %0*/
/*   tail call void @chebyshev2_fo_section(%struct.TYPE_3__* undef, double undef, double undef, double undef, double undef, double undef, double undef, double undef, double undef)*/
if ((cur_state == LEGUP_function_call_2))
begin
memory_controller_enable_b = chebyshev2_fo_section_memory_controller_enable_b;
end
end
always @(*) begin
memory_controller_address_b = 1'd0;
/* main: %0*/
/*   tail call void @chebyshev2_fo_section(%struct.TYPE_3__* undef, double undef, double undef, double undef, double undef, double undef, double undef, double undef, double undef)*/
if ((cur_state == LEGUP_function_call_2))
begin
memory_controller_address_b[`MEMORY_CONTROLLER_ADDR_SIZE-1:0] = chebyshev2_fo_section_memory_controller_address_b;
end
/* main: %0*/
/*   tail call void @chebyshev2_fo_section(%struct.TYPE_3__* undef, double undef, double undef, double undef, double undef, double undef, double undef, double undef, double undef)*/
if ((cur_state == LEGUP_function_call_2))
begin
memory_controller_address_b[`MEMORY_CONTROLLER_ADDR_SIZE-1:0] = chebyshev2_fo_section_memory_controller_address_b;
end
end
always @(*) begin
memory_controller_write_enable_b = 1'd0;
/* main: %0*/
/*   tail call void @chebyshev2_fo_section(%struct.TYPE_3__* undef, double undef, double undef, double undef, double undef, double undef, double undef, double undef, double undef)*/
if ((cur_state == LEGUP_function_call_2))
begin
memory_controller_write_enable_b = chebyshev2_fo_section_memory_controller_write_enable_b;
end
/* main: %0*/
/*   tail call void @chebyshev2_fo_section(%struct.TYPE_3__* undef, double undef, double undef, double undef, double undef, double undef, double undef, double undef, double undef)*/
if ((cur_state == LEGUP_function_call_2))
begin
memory_controller_write_enable_b = chebyshev2_fo_section_memory_controller_write_enable_b;
end
end
always @(*) begin
memory_controller_in_b = 1'd0;
/* main: %0*/
/*   tail call void @chebyshev2_fo_section(%struct.TYPE_3__* undef, double undef, double undef, double undef, double undef, double undef, double undef, double undef, double undef)*/
if ((cur_state == LEGUP_function_call_2))
begin
memory_controller_in_b[`MEMORY_CONTROLLER_DATA_SIZE-1:0] = chebyshev2_fo_section_memory_controller_in_b;
end
/* main: %0*/
/*   tail call void @chebyshev2_fo_section(%struct.TYPE_3__* undef, double undef, double undef, double undef, double undef, double undef, double undef, double undef, double undef)*/
if ((cur_state == LEGUP_function_call_2))
begin
memory_controller_in_b[`MEMORY_CONTROLLER_DATA_SIZE-1:0] = chebyshev2_fo_section_memory_controller_in_b;
end
end
always @(*) begin
memory_controller_size_b = 1'd0;
/* main: %0*/
/*   tail call void @chebyshev2_fo_section(%struct.TYPE_3__* undef, double undef, double undef, double undef, double undef, double undef, double undef, double undef, double undef)*/
if ((cur_state == LEGUP_function_call_2))
begin
memory_controller_size_b[1:0] = chebyshev2_fo_section_memory_controller_size_b;
end
/* main: %0*/
/*   tail call void @chebyshev2_fo_section(%struct.TYPE_3__* undef, double undef, double undef, double undef, double undef, double undef, double undef, double undef, double undef)*/
if ((cur_state == LEGUP_function_call_2))
begin
memory_controller_size_b[1:0] = chebyshev2_fo_section_memory_controller_size_b;
end
end
always @(posedge clk) begin
if ((cur_state == LEGUP_0))
begin
return_val <= 0;
if (reset == 1'b0 && ^(0) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to return_val"); $finish; end
end
/* main: %0*/
/*   ret i32 0*/
if ((cur_state == LEGUP_F_main_BB_0_3))
begin
return_val <= 32'd0;
if (reset == 1'b0 && ^(32'd0) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to return_val"); $finish; end
end
end

endmodule 
module ram_dual_port
(
	clk,
	address_a,
	address_b,
	wren_a,
	wren_b,
	data_a,
	data_b,
	byteena_a,
	byteena_b,
	q_a,
	q_b
);

parameter  width_a = 1'd0;
parameter  width_b = 1'd0;
parameter  widthad_a = 1'd0;
parameter  widthad_b = 1'd0;
parameter  numwords_a = 1'd0;
parameter  numwords_b = 1'd0;
parameter  init_file = "UNUSED.mif";
parameter  width_be_a = 1'd0;
parameter  width_be_b = 1'd0;
parameter  latency = 1;

input  clk;
input [(widthad_a-1):0] address_a;
input [(widthad_b-1):0] address_b;
output wire [(width_a-1):0] q_a;
output wire [(width_b-1):0] q_b;
reg [(width_a-1):0] q_a_wire;
reg [(width_b-1):0] q_b_wire;
input  wren_a;
input  wren_b;
input [(width_a-1):0] data_a;
input [(width_b-1):0] data_b;
// byte enable is unsupported by inferred RAMs
input [width_be_a-1:0] byteena_a;
input [width_be_b-1:0] byteena_b;

(* ramstyle = "no_rw_check", ram_init_file = init_file *) reg [width_a-1:0] ram[numwords_a-1:0];

/* synthesis translate_off */
integer i;
ALTERA_MF_MEMORY_INITIALIZATION mem ();
reg [8*256:1] ram_ver_file;
initial begin
	if (init_file == "UNUSED.mif")
    begin
		for (i = 0; i < numwords_a; i = i + 1)
			ram[i] = 0;
    end
	else
    begin
        // modelsim can't read .mif files directly. So use Altera function to
        // convert them to .ver files
        mem.convert_to_ver_file(init_file, width_a, ram_ver_file);
        $readmemh(ram_ver_file, ram);
    end
end
/* synthesis translate_on */

always @ (posedge clk)
begin // Port A
if (wren_a)
begin
    ram[address_a] <= data_a;
    q_a_wire <= {width_a{1'bX}};
end
else
    q_a_wire <= ram[address_a];
end
always @ (posedge clk)
begin // Port b
if (wren_b)
begin
    ram[address_b] <= data_b;
    q_b_wire <= {width_b{1'bX}};
end
else
    q_b_wire <= ram[address_b];
end



integer j;
reg [(width_a-1):0] q_a_reg[latency:1], q_b_reg[latency:1];

always @(*)
begin
   q_a_reg[1] <= q_a_wire;
   q_b_reg[1] <= q_b_wire;
end

always @(posedge clk)
begin
   for (j = 1; j < latency; j=j+1)
   begin
       q_a_reg[j+1] <= q_a_reg[j];
       q_b_reg[j+1] <= q_b_reg[j];
   end
end

assign q_a = q_a_reg[latency];
assign q_b = q_b_reg[latency];


endmodule
module rom_dual_port
(
	clk,
	address_a,
	address_b,
	q_a,
	q_b
);

parameter  width_a = 1'd0;
parameter  width_b = 1'd0;
parameter  widthad_a = 1'd0;
parameter  widthad_b = 1'd0;
parameter  numwords_a = 1'd0;
parameter  numwords_b = 1'd0;
parameter  init_file = "UNUSED.mif";
parameter  latency = 1;

input  clk;
input [(widthad_a-1):0] address_a;
input [(widthad_b-1):0] address_b;
output wire [(width_a-1):0] q_a;
output wire [(width_b-1):0] q_b;
reg [(width_a-1):0] q_a_wire;
reg [(width_b-1):0] q_b_wire;

(* ramstyle = "no_rw_check", ram_init_file = init_file *) reg [width_a-1:0] ram[numwords_a-1:0];

/* synthesis translate_off */
integer i;
ALTERA_MF_MEMORY_INITIALIZATION mem ();
reg [8*256:1] ram_ver_file;
initial begin
	if (init_file == "UNUSED.mif")
    begin
		for (i = 0; i < numwords_a; i = i + 1)
			ram[i] = 0;
    end
	else
    begin
        // modelsim can't read .mif files directly. So use Altera function to
        // convert them to .ver files
        mem.convert_to_ver_file(init_file, width_a, ram_ver_file);
        $readmemh(ram_ver_file, ram);
    end
end
/* synthesis translate_on */

always @ (posedge clk)
begin
    q_a_wire <= ram[address_a];
    q_b_wire <= ram[address_b];
end



integer j;
reg [(width_a-1):0] q_a_reg[latency:1], q_b_reg[latency:1];

always @(*)
begin
   q_a_reg[1] <= q_a_wire;
   q_b_reg[1] <= q_b_wire;
end

always @(posedge clk)
begin
   for (j = 1; j < latency; j=j+1)
   begin
       q_a_reg[j+1] <= q_a_reg[j];
       q_b_reg[j+1] <= q_b_reg[j];
   end
end

assign q_a = q_a_reg[latency];
assign q_b = q_b_reg[latency];


endmodule
module de2 (CLOCK_50, KEY, SW, HEX0, HEX1, HEX2, HEX3, HEX4, HEX5, HEX6, HEX7, LEDG);
    input CLOCK_50;
    output [7:0] LEDG;
    input [3:0] KEY;
    input [17:0] SW;
    output [6:0] HEX0, HEX1, HEX2, HEX3, HEX4, HEX5, HEX6, HEX7;

    wire clk = CLOCK_50;
    wire reset = ~KEY[0];
    wire go = ~KEY[1];

    wire  start;
    wire [31:0] return_val;
    wire  finish;

    reg [31:0] return_val_reg;
    
	reg [3:0] hex0, hex1, hex2, hex3, hex4, hex5, hex6, hex7;
	always @ (*) begin
		hex7 <= return_val_reg[31:28];
		hex6 <= return_val_reg[27:24];
		hex5 <= return_val_reg[23:20];
		hex4 <= return_val_reg[19:16];
		hex3 <= return_val_reg[15:12];
		hex2 <= return_val_reg[11:8];
		hex1 <= return_val_reg[7:4];
		hex0 <= return_val_reg[3:0];
	end

    hex_digits h7( .x(hex7), .hex_LEDs(HEX7));
    hex_digits h6( .x(hex6), .hex_LEDs(HEX6));
    hex_digits h5( .x(hex5), .hex_LEDs(HEX5));
    hex_digits h4( .x(hex4), .hex_LEDs(HEX4));
    hex_digits h3( .x(hex3), .hex_LEDs(HEX3));
    hex_digits h2( .x(hex2), .hex_LEDs(HEX2));
    hex_digits h1( .x(hex1), .hex_LEDs(HEX1));
    hex_digits h0( .x(hex0), .hex_LEDs(HEX0));


    top top_inst (
        .clk (clk),
        .reset (reset),
        .start (start),
        .finish (finish),
        .return_val (return_val)
    );

    parameter s_WAIT = 3'b001, s_START = 3'b010, s_EXE = 3'b011,
                s_DONE = 3'b100;

    // state registers
    reg [3:0] y_Q, Y_D;

    assign LEDG[3:0] = y_Q;

    // next state
    always @(*)
    begin
        case (y_Q)
            s_WAIT: if (go) Y_D = s_START; else Y_D = y_Q;

            s_START: Y_D = s_EXE;

            s_EXE: if (!finish) Y_D = s_EXE; else Y_D = s_DONE;

            s_DONE: Y_D = s_DONE;

            default: Y_D = 3'bxxx;
        endcase
    end

    // current state
    always @(posedge clk)
    begin
        if (reset) // synchronous clear
            y_Q <= s_WAIT;
        else
            y_Q <= Y_D;
    end

    always @(posedge clk)
        if (y_Q == s_EXE && finish)
            return_val_reg <= return_val;
        else if (y_Q == s_DONE)
            return_val_reg <= return_val_reg;
        else
            return_val_reg <= 0;


    assign start = (y_Q == s_START);
endmodule

module de4 (
	OSC_50_BANK2,
    BUTTON,
    LED,
	SEG0_D,
	SEG1_D
);
    input OSC_50_BANK2;
    input [1:0] BUTTON;
    output [6:0] SEG0_D;
    output [6:0] SEG1_D;
    output [7:0] LED;

    de2 de2_inst (
        .CLOCK_50 (OSC_50_BANK2),
        .LEDG (LED),
        .KEY (BUTTON),
        .SW (),
        .HEX0 (SEG0_D),
        .HEX1 (SEG1_D),
        .HEX2 (),
        .HEX3 (),
        .HEX4 (),
        .HEX5 (),
        .HEX6 (),
        .HEX7 ()
    );

endmodule
module hex_digits(x, hex_LEDs);
    input [3:0] x;
    output [6:0] hex_LEDs;
    
    assign hex_LEDs[0] = (~x[3] & ~x[2] & ~x[1] & x[0]) |
                            (~x[3] & x[2] & ~x[1] & ~x[0]) |
                            (x[3] & x[2] & ~x[1] & x[0]) |
                            (x[3] & ~x[2] & x[1] & x[0]);
    assign hex_LEDs[1] = (~x[3] & x[2] & ~x[1] & x[0]) |
                            (x[3] & x[1] & x[0]) |
                            (x[3] & x[2] & ~x[0]) |
                            (x[2] & x[1] & ~x[0]);
    assign hex_LEDs[2] = (x[3] & x[2] & ~x[0]) |
                            (x[3] & x[2] & x[1]) |
                            (~x[3] & ~x[2] & x[1] & ~x[0]);
    assign hex_LEDs[3] = (~x[3] & ~x[2] & ~x[1] & x[0]) | 
                            (~x[3] & x[2] & ~x[1] & ~x[0]) | 
                            (x[2] & x[1] & x[0]) | 
                            (x[3] & ~x[2] & x[1] & ~x[0]);
    assign hex_LEDs[4] = (~x[3] & x[0]) |
                            (~x[3] & x[2] & ~x[1]) |
                            (~x[2] & ~x[1] & x[0]);
    assign hex_LEDs[5] = (~x[3] & ~x[2] & x[0]) | 
                            (~x[3] & ~x[2] & x[1]) | 
                            (~x[3] & x[1] & x[0]) | 
                            (x[3] & x[2] & ~x[1] & x[0]);
    assign hex_LEDs[6] = (~x[3] & ~x[2] & ~x[1]) | 
                            (x[3] & x[2] & ~x[1] & ~x[0]) | 
                            (~x[3] & x[2] & x[1] & x[0]);
    
endmodule
`timescale 1 ns / 1 ns
module main_tb
(
);

reg  clk;
reg  reset;
reg  start;
wire [31:0] return_val;
wire  finish;


top top_inst (
	.clk (clk),
	.reset (reset),
	.start (start),
	.finish (finish),
	.return_val (return_val)
);


// Local Rams



initial 
    clk = 0;
always @(clk)
    clk <= #10 ~clk;

initial begin
//$monitor("At t=%t clk=%b %b %b %b %d", $time, clk, reset, start, finish, return_val);
@(negedge clk);
reset <= 1;
@(negedge clk);
reset <= 0;
start <= 1;

end

always@(finish) begin
    if (finish == 1) begin
        $display("At t=%t clk=%b finish=%b return_val=%d", $time, clk, finish, return_val);
        $display("Cycles: %d", ($time-50)/20);
        $finish;
    end
end

endmodule 
