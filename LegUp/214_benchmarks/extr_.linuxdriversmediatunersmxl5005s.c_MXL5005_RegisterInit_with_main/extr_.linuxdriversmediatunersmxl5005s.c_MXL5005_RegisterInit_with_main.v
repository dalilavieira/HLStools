//----------------------------------------------------------------------------//
// Generated by LegUp High-Level Synthesis Tool Version 3.0 (http://legup.org)
// Compiled: Tue Jul 15 15:43:09 2014
// University of Toronto
// For research and academic purposes only. Commercial use is prohibited.
// Please send bugs to: legup@eecg.toronto.edu
// Date: Tue Mar 10 07:55:41 2020
//----------------------------------------------------------------------------//

`define MEMORY_CONTROLLER_ADDR_SIZE 32
`define MEMORY_CONTROLLER_DATA_SIZE 64
// Number of RAM elements: 0
`define MEMORY_CONTROLLER_TAG_SIZE 9
`define TAG_NULL `MEMORY_CONTROLLER_TAG_SIZE'd0
`define TAG_PROCESSOR `MEMORY_CONTROLLER_TAG_SIZE'd1

// Turn off warning 'ignoring unsupported system task'
// altera message_off 10175

module top
	(
		clk,
		reset,
		start,
		finish,
		return_val
	);
input clk;
input reset;
input start;
output wire finish;
output wire [31:0] return_val;
wire memory_controller_waitrequest;
wire memory_controller_enable_a;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] memory_controller_address_a;
wire memory_controller_write_enable_a;
wire [`MEMORY_CONTROLLER_DATA_SIZE-1:0] memory_controller_in_a;
wire [1:0] memory_controller_size_a;
wire [`MEMORY_CONTROLLER_DATA_SIZE-1:0] memory_controller_out_a;

wire memory_controller_enable_b;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] memory_controller_address_b;
wire memory_controller_write_enable_b;
wire [`MEMORY_CONTROLLER_DATA_SIZE-1:0] memory_controller_in_b;
wire [1:0] memory_controller_size_b;
wire [`MEMORY_CONTROLLER_DATA_SIZE-1:0] memory_controller_out_b;

assign memory_controller_waitrequest = 0;

memory_controller memory_controller_inst (
	.clk( clk ),
	.memory_controller_enable_a( memory_controller_enable_a ),
	.memory_controller_enable_b( memory_controller_enable_b ),
	.memory_controller_address_a( memory_controller_address_a ),
	.memory_controller_address_b( memory_controller_address_b ),
	.memory_controller_write_enable_a( memory_controller_write_enable_a ),
	.memory_controller_write_enable_b( memory_controller_write_enable_b ),
	.memory_controller_in_a( memory_controller_in_a ),
	.memory_controller_in_b( memory_controller_in_b ),
	.memory_controller_size_a( memory_controller_size_a ),
	.memory_controller_size_b( memory_controller_size_b ),
	.memory_controller_waitrequest( memory_controller_waitrequest ),
	.memory_controller_out_reg_a( memory_controller_out_a ),
	.memory_controller_out_reg_b( memory_controller_out_b )
);

main main_inst(
	.clk( clk ),
	.clk2x( clk2x ),
	.clk1x_follower( clk1x_follower ),
	.reset( reset ),
	.start( start ),
	.finish( finish ),
	.return_val( return_val ),
	.memory_controller_enable_a(memory_controller_enable_a),
	.memory_controller_address_a(memory_controller_address_a),
	.memory_controller_write_enable_a(memory_controller_write_enable_a),
	.memory_controller_in_a(memory_controller_in_a),
	.memory_controller_size_a(memory_controller_size_a),
	.memory_controller_out_a(memory_controller_out_a),
	.memory_controller_enable_b(memory_controller_enable_b),
	.memory_controller_address_b(memory_controller_address_b),
	.memory_controller_write_enable_b(memory_controller_write_enable_b),
	.memory_controller_in_b(memory_controller_in_b),
	.memory_controller_size_b(memory_controller_size_b),
	.memory_controller_out_b(memory_controller_out_b),
	.memory_controller_waitrequest(memory_controller_waitrequest)
);

endmodule
`timescale 1 ns / 1 ns
module memory_controller
(
	clk,
	memory_controller_address_a,
	memory_controller_address_b,
	memory_controller_enable_a,
	memory_controller_enable_b,
	memory_controller_write_enable_a,
	memory_controller_write_enable_b,
	memory_controller_in_a,
	memory_controller_in_b,
	memory_controller_size_a,
	memory_controller_size_b,
	memory_controller_waitrequest,
	memory_controller_out_reg_a,
	memory_controller_out_reg_b
);


input clk;
input memory_controller_waitrequest;
input [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] memory_controller_address_a;
input memory_controller_enable_a;
input memory_controller_write_enable_a;
input [64-1:0] memory_controller_in_a;
input [1:0] memory_controller_size_a;
output reg [64-1:0] memory_controller_out_reg_a;
reg [64-1:0] memory_controller_out_prev_a;
reg [64-1:0] memory_controller_out_a;

reg memory_controller_enable_reg_a;
input [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] memory_controller_address_b;
input memory_controller_enable_b;
input memory_controller_write_enable_b;
input [64-1:0] memory_controller_in_b;
input [1:0] memory_controller_size_b;
output reg [64-1:0] memory_controller_out_reg_b;
reg [64-1:0] memory_controller_out_prev_b;
reg [64-1:0] memory_controller_out_b;

reg memory_controller_enable_reg_b;
endmodule 
`timescale 1 ns / 1 ns
module MXL5005_RegisterInit
(
	clk,
	clk2x,
	clk1x_follower,
	reset,
	start,
	finish,
	memory_controller_enable_a,
	memory_controller_address_a,
	memory_controller_write_enable_a,
	memory_controller_in_a,
	memory_controller_size_a,
	memory_controller_out_a,
	memory_controller_enable_b,
	memory_controller_address_b,
	memory_controller_write_enable_b,
	memory_controller_in_b,
	memory_controller_size_b,
	memory_controller_out_b,
	memory_controller_waitrequest,
	return_val,
	arg_fe
);

parameter [6:0] LEGUP_0 = 7'd0;
parameter [6:0] LEGUP_F_MXL5005_RegisterInit_BB_0_1 = 7'd1;
parameter [6:0] LEGUP_F_MXL5005_RegisterInit_BB_0_2 = 7'd2;
parameter [6:0] LEGUP_F_MXL5005_RegisterInit_BB_0_3 = 7'd3;
parameter [6:0] LEGUP_F_MXL5005_RegisterInit_BB_0_4 = 7'd4;
parameter [6:0] LEGUP_F_MXL5005_RegisterInit_BB_0_5 = 7'd5;
parameter [6:0] LEGUP_F_MXL5005_RegisterInit_BB_0_6 = 7'd6;
parameter [6:0] LEGUP_F_MXL5005_RegisterInit_BB_0_7 = 7'd7;
parameter [6:0] LEGUP_F_MXL5005_RegisterInit_BB_0_8 = 7'd8;
parameter [6:0] LEGUP_F_MXL5005_RegisterInit_BB_0_9 = 7'd9;
parameter [6:0] LEGUP_F_MXL5005_RegisterInit_BB_0_10 = 7'd10;
parameter [6:0] LEGUP_F_MXL5005_RegisterInit_BB_0_11 = 7'd11;
parameter [6:0] LEGUP_F_MXL5005_RegisterInit_BB_0_12 = 7'd12;
parameter [6:0] LEGUP_F_MXL5005_RegisterInit_BB_0_13 = 7'd13;
parameter [6:0] LEGUP_F_MXL5005_RegisterInit_BB_0_14 = 7'd14;
parameter [6:0] LEGUP_F_MXL5005_RegisterInit_BB_0_15 = 7'd15;
parameter [6:0] LEGUP_F_MXL5005_RegisterInit_BB_0_16 = 7'd16;
parameter [6:0] LEGUP_F_MXL5005_RegisterInit_BB_0_17 = 7'd17;
parameter [6:0] LEGUP_F_MXL5005_RegisterInit_BB_0_18 = 7'd18;
parameter [6:0] LEGUP_F_MXL5005_RegisterInit_BB_0_19 = 7'd19;
parameter [6:0] LEGUP_F_MXL5005_RegisterInit_BB_0_20 = 7'd20;
parameter [6:0] LEGUP_F_MXL5005_RegisterInit_BB_0_21 = 7'd21;
parameter [6:0] LEGUP_F_MXL5005_RegisterInit_BB_0_22 = 7'd22;
parameter [6:0] LEGUP_F_MXL5005_RegisterInit_BB_0_23 = 7'd23;
parameter [6:0] LEGUP_F_MXL5005_RegisterInit_BB_0_24 = 7'd24;
parameter [6:0] LEGUP_F_MXL5005_RegisterInit_BB_0_25 = 7'd25;
parameter [6:0] LEGUP_F_MXL5005_RegisterInit_BB_0_26 = 7'd26;
parameter [6:0] LEGUP_F_MXL5005_RegisterInit_BB_0_27 = 7'd27;
parameter [6:0] LEGUP_F_MXL5005_RegisterInit_BB_0_28 = 7'd28;
parameter [6:0] LEGUP_F_MXL5005_RegisterInit_BB_0_29 = 7'd29;
parameter [6:0] LEGUP_F_MXL5005_RegisterInit_BB_0_30 = 7'd30;
parameter [6:0] LEGUP_F_MXL5005_RegisterInit_BB_0_31 = 7'd31;
parameter [6:0] LEGUP_F_MXL5005_RegisterInit_BB_0_32 = 7'd32;
parameter [6:0] LEGUP_F_MXL5005_RegisterInit_BB_0_33 = 7'd33;
parameter [6:0] LEGUP_F_MXL5005_RegisterInit_BB_0_34 = 7'd34;
parameter [6:0] LEGUP_F_MXL5005_RegisterInit_BB_0_35 = 7'd35;
parameter [6:0] LEGUP_F_MXL5005_RegisterInit_BB_0_36 = 7'd36;
parameter [6:0] LEGUP_F_MXL5005_RegisterInit_BB_0_37 = 7'd37;
parameter [6:0] LEGUP_F_MXL5005_RegisterInit_BB_0_38 = 7'd38;
parameter [6:0] LEGUP_F_MXL5005_RegisterInit_BB_0_39 = 7'd39;
parameter [6:0] LEGUP_F_MXL5005_RegisterInit_BB_0_40 = 7'd40;
parameter [6:0] LEGUP_F_MXL5005_RegisterInit_BB_0_41 = 7'd41;
parameter [6:0] LEGUP_F_MXL5005_RegisterInit_BB_0_42 = 7'd42;
parameter [6:0] LEGUP_F_MXL5005_RegisterInit_BB_0_43 = 7'd43;
parameter [6:0] LEGUP_F_MXL5005_RegisterInit_BB_0_44 = 7'd44;
parameter [6:0] LEGUP_F_MXL5005_RegisterInit_BB_0_45 = 7'd45;
parameter [6:0] LEGUP_F_MXL5005_RegisterInit_BB_0_46 = 7'd46;
parameter [6:0] LEGUP_F_MXL5005_RegisterInit_BB_0_47 = 7'd47;
parameter [6:0] LEGUP_F_MXL5005_RegisterInit_BB_0_48 = 7'd48;
parameter [6:0] LEGUP_F_MXL5005_RegisterInit_BB_0_49 = 7'd49;
parameter [6:0] LEGUP_F_MXL5005_RegisterInit_BB_0_50 = 7'd50;
parameter [6:0] LEGUP_F_MXL5005_RegisterInit_BB_0_51 = 7'd51;
parameter [6:0] LEGUP_F_MXL5005_RegisterInit_BB_0_52 = 7'd52;
parameter [6:0] LEGUP_F_MXL5005_RegisterInit_BB_0_53 = 7'd53;
parameter [6:0] LEGUP_F_MXL5005_RegisterInit_BB_0_54 = 7'd54;
parameter [6:0] LEGUP_F_MXL5005_RegisterInit_BB_0_55 = 7'd55;
parameter [6:0] LEGUP_F_MXL5005_RegisterInit_BB_0_56 = 7'd56;
parameter [6:0] LEGUP_F_MXL5005_RegisterInit_BB_0_57 = 7'd57;
parameter [6:0] LEGUP_F_MXL5005_RegisterInit_BB_0_58 = 7'd58;
parameter [6:0] LEGUP_F_MXL5005_RegisterInit_BB_0_59 = 7'd59;
parameter [6:0] LEGUP_F_MXL5005_RegisterInit_BB_0_60 = 7'd60;
parameter [6:0] LEGUP_F_MXL5005_RegisterInit_BB_0_61 = 7'd61;
parameter [6:0] LEGUP_F_MXL5005_RegisterInit_BB_0_62 = 7'd62;
parameter [6:0] LEGUP_F_MXL5005_RegisterInit_BB_0_63 = 7'd63;
parameter [6:0] LEGUP_F_MXL5005_RegisterInit_BB_0_64 = 7'd64;
parameter [6:0] LEGUP_F_MXL5005_RegisterInit_BB_0_65 = 7'd65;
parameter [6:0] LEGUP_F_MXL5005_RegisterInit_BB_0_66 = 7'd66;
parameter [6:0] LEGUP_F_MXL5005_RegisterInit_BB_0_67 = 7'd67;
parameter [6:0] LEGUP_F_MXL5005_RegisterInit_BB_0_68 = 7'd68;
parameter [6:0] LEGUP_F_MXL5005_RegisterInit_BB_0_69 = 7'd69;
parameter [6:0] LEGUP_F_MXL5005_RegisterInit_BB_0_70 = 7'd70;
parameter [6:0] LEGUP_F_MXL5005_RegisterInit_BB_0_71 = 7'd71;
parameter [6:0] LEGUP_F_MXL5005_RegisterInit_BB_0_72 = 7'd72;
parameter [6:0] LEGUP_F_MXL5005_RegisterInit_BB_0_73 = 7'd73;
parameter [6:0] LEGUP_F_MXL5005_RegisterInit_BB_0_74 = 7'd74;
parameter [6:0] LEGUP_F_MXL5005_RegisterInit_BB_0_75 = 7'd75;
parameter [6:0] LEGUP_F_MXL5005_RegisterInit_BB_0_76 = 7'd76;
parameter [6:0] LEGUP_F_MXL5005_RegisterInit_BB_0_77 = 7'd77;
parameter [6:0] LEGUP_F_MXL5005_RegisterInit_BB_0_78 = 7'd78;
parameter [6:0] LEGUP_F_MXL5005_RegisterInit_BB_0_79 = 7'd79;
parameter [6:0] LEGUP_F_MXL5005_RegisterInit_BB_0_80 = 7'd80;
parameter [6:0] LEGUP_F_MXL5005_RegisterInit_BB_0_81 = 7'd81;
parameter [6:0] LEGUP_F_MXL5005_RegisterInit_BB_0_82 = 7'd82;
parameter [6:0] LEGUP_F_MXL5005_RegisterInit_BB_0_83 = 7'd83;
parameter [6:0] LEGUP_F_MXL5005_RegisterInit_BB_0_84 = 7'd84;
parameter [6:0] LEGUP_F_MXL5005_RegisterInit_BB_0_85 = 7'd85;
parameter [6:0] LEGUP_F_MXL5005_RegisterInit_BB_0_86 = 7'd86;
parameter [6:0] LEGUP_F_MXL5005_RegisterInit_BB_0_87 = 7'd87;
parameter [6:0] LEGUP_F_MXL5005_RegisterInit_BB_0_88 = 7'd88;
parameter [6:0] LEGUP_F_MXL5005_RegisterInit_BB_0_89 = 7'd89;
parameter [6:0] LEGUP_F_MXL5005_RegisterInit_BB_0_90 = 7'd90;
parameter [6:0] LEGUP_F_MXL5005_RegisterInit_BB_0_91 = 7'd91;
parameter [6:0] LEGUP_F_MXL5005_RegisterInit_BB_0_92 = 7'd92;
parameter [6:0] LEGUP_F_MXL5005_RegisterInit_BB_0_93 = 7'd93;
parameter [6:0] LEGUP_F_MXL5005_RegisterInit_BB_0_94 = 7'd94;
parameter [6:0] LEGUP_F_MXL5005_RegisterInit_BB_0_95 = 7'd95;
parameter [6:0] LEGUP_F_MXL5005_RegisterInit_BB_0_96 = 7'd96;
parameter [6:0] LEGUP_F_MXL5005_RegisterInit_BB_0_97 = 7'd97;
parameter [6:0] LEGUP_F_MXL5005_RegisterInit_BB_0_98 = 7'd98;
parameter [6:0] LEGUP_F_MXL5005_RegisterInit_BB_0_99 = 7'd99;
parameter [6:0] LEGUP_F_MXL5005_RegisterInit_BB_0_100 = 7'd100;
parameter [6:0] LEGUP_F_MXL5005_RegisterInit_BB_0_101 = 7'd101;
parameter [6:0] LEGUP_F_MXL5005_RegisterInit_BB_0_102 = 7'd102;
parameter [6:0] LEGUP_F_MXL5005_RegisterInit_BB_0_103 = 7'd103;
parameter [6:0] LEGUP_F_MXL5005_RegisterInit_BB_0_104 = 7'd104;
parameter [6:0] LEGUP_F_MXL5005_RegisterInit_BB_0_105 = 7'd105;
parameter [6:0] LEGUP_F_MXL5005_RegisterInit_BB_0_106 = 7'd106;
parameter [6:0] LEGUP_F_MXL5005_RegisterInit_BB_0_107 = 7'd107;
parameter [6:0] LEGUP_F_MXL5005_RegisterInit_BB_0_108 = 7'd108;
parameter [6:0] LEGUP_F_MXL5005_RegisterInit_BB_0_109 = 7'd109;

input  clk;
input  clk2x;
input  clk1x_follower;
input  reset;
input  start;
output reg  finish;
output reg  memory_controller_enable_a;
output reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] memory_controller_address_a;
output reg  memory_controller_write_enable_a;
output reg [`MEMORY_CONTROLLER_DATA_SIZE-1:0] memory_controller_in_a;
output reg [1:0] memory_controller_size_a;
input [`MEMORY_CONTROLLER_DATA_SIZE-1:0] memory_controller_out_a;
output reg  memory_controller_enable_b;
output reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] memory_controller_address_b;
output reg  memory_controller_write_enable_b;
output reg [`MEMORY_CONTROLLER_DATA_SIZE-1:0] memory_controller_in_b;
output reg [1:0] memory_controller_size_b;
input [`MEMORY_CONTROLLER_DATA_SIZE-1:0] memory_controller_out_b;
input  memory_controller_waitrequest;
output reg [31:0] return_val;
input [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] arg_fe;
reg [6:0] cur_state;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_1;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_1_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_2;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_2_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_3;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_3_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_4;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_4_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_5;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_5_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_6;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_6_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_7;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_7_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_8;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_8_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_9;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_9_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_10;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_10_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_11;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_11_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_12;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_12_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_13;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_13_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_14;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_14_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_15;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_15_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_16;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_16_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_17;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_17_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_18;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_18_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_19;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_19_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_20;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_20_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_21;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_21_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_22;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_22_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_23;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_23_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_24;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_24_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_25;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_25_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_26;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_26_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_27;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_27_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_28;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_28_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_29;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_29_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_30;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_30_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_31;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_31_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_32;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_32_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_33;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_33_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_34;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_34_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_35;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_35_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_36;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_36_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_37;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_37_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_38;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_38_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_39;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_39_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_40;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_40_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_41;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_41_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_42;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_42_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_43;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_43_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_44;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_44_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_45;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_45_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_46;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_46_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_47;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_47_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_48;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_48_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_49;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_49_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_50;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_50_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_51;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_51_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_52;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_52_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_53;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_53_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_54;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_54_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_55;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_55_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_56;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_56_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_57;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_57_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_58;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_58_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_59;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_59_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_60;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_60_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_61;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_61_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_62;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_62_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_63;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_63_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_64;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_64_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_65;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_65_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_66;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_66_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_67;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_67_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_68;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_68_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_69;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_69_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_70;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_70_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_71;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_71_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_72;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_72_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_73;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_73_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_74;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_74_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_75;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_75_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_76;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_76_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_77;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_77_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_78;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_78_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_79;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_79_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_80;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_80_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_81;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_81_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_82;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_82_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_83;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_83_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_84;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_84_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_85;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_85_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_86;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_86_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_87;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_87_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_88;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_88_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_89;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_89_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_90;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_90_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_91;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_91_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_92;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_92_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_93;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_93_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_94;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_94_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_95;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_95_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_96;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_96_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_97;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_97_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_98;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_98_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_99;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_99_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_100;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_100_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_101;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_101_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_102;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_102_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_103;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_103_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_104;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_104_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_105;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_105_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_106;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_106_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_107;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_107_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_108;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_108_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_109;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_109_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_110;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_110_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_111;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_111_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_112;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_112_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_113;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_113_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_114;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_114_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_115;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_115_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_116;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_116_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_117;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_117_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_118;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_118_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_119;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_119_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_120;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_120_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_121;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_121_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_122;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_122_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_123;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_123_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_124;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_124_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_125;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_125_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_126;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_126_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_127;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_127_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_128;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_128_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_129;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_129_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_130;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_130_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_131;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_131_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_132;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_132_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_133;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_133_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_134;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_134_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_135;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_135_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_136;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_136_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_137;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_137_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_138;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_138_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_139;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_139_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_140;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_140_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_141;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_141_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_142;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_142_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_143;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_143_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_144;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_144_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_145;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_145_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_146;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_146_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_147;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_147_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_148;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_148_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_149;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_149_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_150;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_150_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_151;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_151_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_152;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_152_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_153;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_153_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_154;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_154_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_155;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_155_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_156;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_156_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_157;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_157_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_158;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_158_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_159;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_159_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_160;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_160_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_161;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_161_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_162;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_162_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_163;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_163_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_164;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_164_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_165;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_165_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_166;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_166_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_167;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_167_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_168;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_168_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_169;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_169_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_170;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_170_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_171;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_171_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_172;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_172_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_173;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_173_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_174;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_174_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_175;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_175_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_176;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_176_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_177;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_177_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_178;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_178_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_179;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_179_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_180;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_180_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_181;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_181_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_182;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_182_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_183;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_183_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_184;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_184_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_185;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_185_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_186;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_186_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_187;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_187_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_188;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_188_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_189;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_189_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_190;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_190_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_191;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_191_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_192;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_192_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_193;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_193_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_194;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_194_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_195;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_195_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_196;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_196_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_197;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_197_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_198;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_198_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_199;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_199_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_200;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_200_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_201;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_201_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_202;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_202_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_203;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_203_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_204;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_204_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_205;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_205_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_206;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_206_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_207;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_207_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_208;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_208_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_209;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_209_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_210;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_210_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_211;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_211_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_212;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_212_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_213;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_0_213_reg;
wire [15:0] legup_pthreadpoll_threadID;

// Local Rams


always @(posedge clk) begin
if (((cur_state == LEGUP_0) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_0;
if (reset == 1'b0 && ^(LEGUP_0) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_0) & (memory_controller_waitrequest == 1'd0)) & (start == 1'd1)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_1;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_1) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_0) & (memory_controller_waitrequest == 1'd0)) & (start == 1'd0)))
begin
cur_state <= LEGUP_0;
if (reset == 1'b0 && ^(LEGUP_0) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_1) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_1;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_1) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_1) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_2;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_2) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_2) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_2;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_2) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_2) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_3;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_3) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_3) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_3;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_3) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_3) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_4;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_4) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_4) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_4;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_4) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_4) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_5;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_5) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_5;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_5) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_6;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_6) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_6) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_6;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_6) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_6) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_7;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_7) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_7) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_7;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_7) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_7) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_8;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_8) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_8) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_8;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_8) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_8) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_9;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_9) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_9) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_9;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_9) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_9) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_10;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_10) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_10) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_10;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_10) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_10) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_11;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_11) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_11) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_11;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_11) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_11) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_12;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_12) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_12) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_12;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_12) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_12) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_13;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_13) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_13) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_13;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_13) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_13) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_14;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_14) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_14) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_14;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_14) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_14) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_15;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_15) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_15) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_15;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_15) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_15) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_16;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_16) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_16) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_16;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_16) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_16) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_17;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_17) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_17) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_17;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_17) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_17) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_18;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_18) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_18) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_18;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_18) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_18) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_19;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_19) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_19) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_19;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_19) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_19) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_20;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_20) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_20) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_20;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_20) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_20) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_21;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_21) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_21) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_21;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_21) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_21) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_22;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_22) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_22) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_22;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_22) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_22) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_23;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_23) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_23) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_23;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_23) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_23) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_24;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_24) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_24) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_24;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_24) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_24) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_25;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_25) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_25) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_25;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_25) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_25) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_26;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_26) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_26) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_26;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_26) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_26) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_27;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_27) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_27) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_27;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_27) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_27) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_28;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_28) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_28) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_28;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_28) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_28) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_29;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_29) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_29) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_29;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_29) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_29) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_30;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_30) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_30) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_30;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_30) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_30) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_31;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_31) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_31) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_31;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_31) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_31) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_32;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_32) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_32) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_32;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_32) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_32) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_33;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_33) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_33) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_33;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_33) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_33) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_34;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_34) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_34) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_34;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_34) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_34) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_35;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_35) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_35) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_35;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_35) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_35) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_36;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_36) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_36) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_36;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_36) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_36) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_37;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_37) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_37) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_37;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_37) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_37) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_38;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_38) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_38) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_38;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_38) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_38) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_39;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_39) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_39) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_39;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_39) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_39) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_40;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_40) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_40) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_40;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_40) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_40) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_41;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_41) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_41) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_41;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_41) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_41) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_42;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_42) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_42) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_42;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_42) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_42) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_43;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_43) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_43) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_43;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_43) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_43) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_44;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_44) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_44) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_44;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_44) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_44) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_45;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_45) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_45) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_45;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_45) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_45) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_46;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_46) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_46) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_46;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_46) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_46) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_47;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_47) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_47) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_47;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_47) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_47) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_48;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_48) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_48) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_48;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_48) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_48) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_49;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_49) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_49) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_49;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_49) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_49) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_50;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_50) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_50) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_50;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_50) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_50) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_51;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_51) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_51) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_51;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_51) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_51) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_52;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_52) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_52) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_52;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_52) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_52) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_53;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_53) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_53) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_53;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_53) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_53) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_54;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_54) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_54) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_54;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_54) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_54) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_55;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_55) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_55) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_55;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_55) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_55) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_56;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_56) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_56) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_56;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_56) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_56) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_57;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_57) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_57) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_57;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_57) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_57) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_58;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_58) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_58) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_58;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_58) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_58) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_59;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_59) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_59) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_59;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_59) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_59) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_60;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_60) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_60) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_60;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_60) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_60) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_61;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_61) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_61) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_61;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_61) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_61) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_62;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_62) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_62) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_62;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_62) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_62) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_63;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_63) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_63) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_63;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_63) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_63) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_64;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_64) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_64) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_64;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_64) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_64) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_65;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_65) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_65) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_65;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_65) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_65) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_66;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_66) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_66) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_66;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_66) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_66) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_67;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_67) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_67) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_67;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_67) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_67) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_68;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_68) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_68) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_68;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_68) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_68) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_69;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_69) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_69) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_69;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_69) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_69) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_70;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_70) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_70) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_70;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_70) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_70) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_71;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_71) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_71) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_71;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_71) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_71) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_72;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_72) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_72) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_72;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_72) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_72) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_73;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_73) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_73) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_73;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_73) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_73) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_74;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_74) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_74) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_74;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_74) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_74) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_75;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_75) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_75) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_75;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_75) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_75) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_76;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_76) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_76) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_76;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_76) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_76) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_77;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_77) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_77) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_77;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_77) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_77) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_78;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_78) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_78) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_78;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_78) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_78) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_79;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_79) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_79) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_79;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_79) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_79) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_80;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_80) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_80) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_80;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_80) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_80) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_81;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_81) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_81) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_81;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_81) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_81) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_82;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_82) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_82) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_82;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_82) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_82) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_83;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_83) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_83) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_83;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_83) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_83) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_84;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_84) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_84) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_84;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_84) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_84) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_85;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_85) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_85) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_85;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_85) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_85) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_86;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_86) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_86) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_86;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_86) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_86) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_87;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_87) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_87) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_87;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_87) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_87) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_88;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_88) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_88) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_88;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_88) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_88) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_89;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_89) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_89) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_89;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_89) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_89) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_90;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_90) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_90) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_90;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_90) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_90) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_91;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_91) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_91) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_91;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_91) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_91) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_92;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_92) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_92) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_92;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_92) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_92) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_93;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_93) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_93) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_93;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_93) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_93) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_94;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_94) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_94) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_94;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_94) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_94) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_95;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_95) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_95) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_95;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_95) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_95) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_96;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_96) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_96) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_96;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_96) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_96) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_97;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_97) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_97) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_97;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_97) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_97) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_98;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_98) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_98) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_98;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_98) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_98) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_99;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_99) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_99) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_99;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_99) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_99) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_100;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_100) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_100) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_100;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_100) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_100) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_101;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_101) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_101) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_101;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_101) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_101) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_102;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_102) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_102) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_102;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_102) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_102) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_103;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_103) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_103) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_103;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_103) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_103) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_104;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_104) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_104) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_104;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_104) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_104) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_105;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_105) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_105) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_105;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_105) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_105) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_106;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_106) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_106) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_106;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_106) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_106) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_107;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_107) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_107) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_107;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_107) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_107) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_108;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_108) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_108) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_108;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_108) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_108) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_109;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_109) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_109) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_MXL5005_RegisterInit_BB_0_109;
if (reset == 1'b0 && ^(LEGUP_F_MXL5005_RegisterInit_BB_0_109) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_109) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_0;
if (reset == 1'b0 && ^(LEGUP_0) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((reset == 1'd1))
begin
cur_state <= 7'd0;
if (reset == 1'b0 && ^(7'd0) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %1 = getelementptr inbounds %struct.dvb_frontend* %fe, i32 0, i32 0*/
begin
MXL5005_RegisterInit_0_1 = arg_fe;
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %1 = getelementptr inbounds %struct.dvb_frontend* %fe, i32 0, i32 0*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_1))
begin
MXL5005_RegisterInit_0_1_reg <= MXL5005_RegisterInit_0_1;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_1) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_1_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %2 = load %struct.mxl5005s_state** %1, align 4, !tbaa !0*/
begin
MXL5005_RegisterInit_0_2 = memory_controller_out_a[`MEMORY_CONTROLLER_ADDR_SIZE-1:0];
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %2 = load %struct.mxl5005s_state** %1, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_3))
begin
MXL5005_RegisterInit_0_2_reg <= MXL5005_RegisterInit_0_2;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_2) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_2_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %3 = getelementptr inbounds %struct.mxl5005s_state* %2, i32 0, i32 1*/
begin
MXL5005_RegisterInit_0_3 = (MXL5005_RegisterInit_0_2 + 4);
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %3 = getelementptr inbounds %struct.mxl5005s_state* %2, i32 0, i32 1*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_3))
begin
MXL5005_RegisterInit_0_3_reg <= MXL5005_RegisterInit_0_3;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_3) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_3_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %4 = getelementptr inbounds %struct.mxl5005s_state* %2, i32 0, i32 0*/
begin
MXL5005_RegisterInit_0_4 = MXL5005_RegisterInit_0_2;
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %4 = getelementptr inbounds %struct.mxl5005s_state* %2, i32 0, i32 0*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_3))
begin
MXL5005_RegisterInit_0_4_reg <= MXL5005_RegisterInit_0_4;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_4) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_4_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %5 = load %struct.TYPE_2__** %4, align 4, !tbaa !0*/
begin
MXL5005_RegisterInit_0_5 = memory_controller_out_b[`MEMORY_CONTROLLER_ADDR_SIZE-1:0];
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %5 = load %struct.TYPE_2__** %4, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_5_reg <= MXL5005_RegisterInit_0_5;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_5) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_5_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %6 = getelementptr inbounds %struct.TYPE_2__* %5, i32 0, i32 0*/
begin
MXL5005_RegisterInit_0_6 = MXL5005_RegisterInit_0_5;
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %6 = getelementptr inbounds %struct.TYPE_2__* %5, i32 0, i32 0*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_6_reg <= MXL5005_RegisterInit_0_6;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_6) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_6_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %7 = getelementptr inbounds %struct.TYPE_2__* %5, i32 0, i32 1*/
begin
MXL5005_RegisterInit_0_7 = (MXL5005_RegisterInit_0_5 + 4);
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %7 = getelementptr inbounds %struct.TYPE_2__* %5, i32 0, i32 1*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_7_reg <= MXL5005_RegisterInit_0_7;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_7) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_7_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %8 = getelementptr inbounds %struct.TYPE_2__* %5, i32 1, i32 0*/
begin
MXL5005_RegisterInit_0_8 = (MXL5005_RegisterInit_0_5 + (8 * 32'd1));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %8 = getelementptr inbounds %struct.TYPE_2__* %5, i32 1, i32 0*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_8_reg <= MXL5005_RegisterInit_0_8;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_8) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_8_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %9 = getelementptr inbounds %struct.TYPE_2__* %5, i32 1, i32 1*/
begin
MXL5005_RegisterInit_0_9 = (MXL5005_RegisterInit_0_5 + ((8 * 32'd1) + 4));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %9 = getelementptr inbounds %struct.TYPE_2__* %5, i32 1, i32 1*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_9_reg <= MXL5005_RegisterInit_0_9;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_9) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_9_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %10 = getelementptr inbounds %struct.TYPE_2__* %5, i32 2, i32 0*/
begin
MXL5005_RegisterInit_0_10 = (MXL5005_RegisterInit_0_5 + (8 * 32'd2));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %10 = getelementptr inbounds %struct.TYPE_2__* %5, i32 2, i32 0*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_10_reg <= MXL5005_RegisterInit_0_10;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_10) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_10_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %11 = getelementptr inbounds %struct.TYPE_2__* %5, i32 2, i32 1*/
begin
MXL5005_RegisterInit_0_11 = (MXL5005_RegisterInit_0_5 + ((8 * 32'd2) + 4));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %11 = getelementptr inbounds %struct.TYPE_2__* %5, i32 2, i32 1*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_11_reg <= MXL5005_RegisterInit_0_11;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_11) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_11_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %12 = getelementptr inbounds %struct.TYPE_2__* %5, i32 3, i32 0*/
begin
MXL5005_RegisterInit_0_12 = (MXL5005_RegisterInit_0_5 + (8 * 32'd3));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %12 = getelementptr inbounds %struct.TYPE_2__* %5, i32 3, i32 0*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_12_reg <= MXL5005_RegisterInit_0_12;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_12) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_12_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %13 = getelementptr inbounds %struct.TYPE_2__* %5, i32 3, i32 1*/
begin
MXL5005_RegisterInit_0_13 = (MXL5005_RegisterInit_0_5 + ((8 * 32'd3) + 4));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %13 = getelementptr inbounds %struct.TYPE_2__* %5, i32 3, i32 1*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_13_reg <= MXL5005_RegisterInit_0_13;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_13) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_13_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %14 = getelementptr inbounds %struct.TYPE_2__* %5, i32 4, i32 0*/
begin
MXL5005_RegisterInit_0_14 = (MXL5005_RegisterInit_0_5 + (8 * 32'd4));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %14 = getelementptr inbounds %struct.TYPE_2__* %5, i32 4, i32 0*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_14_reg <= MXL5005_RegisterInit_0_14;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_14) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_14_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %15 = getelementptr inbounds %struct.TYPE_2__* %5, i32 4, i32 1*/
begin
MXL5005_RegisterInit_0_15 = (MXL5005_RegisterInit_0_5 + ((8 * 32'd4) + 4));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %15 = getelementptr inbounds %struct.TYPE_2__* %5, i32 4, i32 1*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_15_reg <= MXL5005_RegisterInit_0_15;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_15) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_15_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %16 = getelementptr inbounds %struct.TYPE_2__* %5, i32 5, i32 0*/
begin
MXL5005_RegisterInit_0_16 = (MXL5005_RegisterInit_0_5 + (8 * 32'd5));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %16 = getelementptr inbounds %struct.TYPE_2__* %5, i32 5, i32 0*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_16_reg <= MXL5005_RegisterInit_0_16;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_16) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_16_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %17 = getelementptr inbounds %struct.TYPE_2__* %5, i32 5, i32 1*/
begin
MXL5005_RegisterInit_0_17 = (MXL5005_RegisterInit_0_5 + ((8 * 32'd5) + 4));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %17 = getelementptr inbounds %struct.TYPE_2__* %5, i32 5, i32 1*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_17_reg <= MXL5005_RegisterInit_0_17;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_17) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_17_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %18 = getelementptr inbounds %struct.TYPE_2__* %5, i32 6, i32 0*/
begin
MXL5005_RegisterInit_0_18 = (MXL5005_RegisterInit_0_5 + (8 * 32'd6));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %18 = getelementptr inbounds %struct.TYPE_2__* %5, i32 6, i32 0*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_18_reg <= MXL5005_RegisterInit_0_18;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_18) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_18_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %19 = getelementptr inbounds %struct.TYPE_2__* %5, i32 6, i32 1*/
begin
MXL5005_RegisterInit_0_19 = (MXL5005_RegisterInit_0_5 + ((8 * 32'd6) + 4));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %19 = getelementptr inbounds %struct.TYPE_2__* %5, i32 6, i32 1*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_19_reg <= MXL5005_RegisterInit_0_19;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_19) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_19_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %20 = getelementptr inbounds %struct.TYPE_2__* %5, i32 7, i32 0*/
begin
MXL5005_RegisterInit_0_20 = (MXL5005_RegisterInit_0_5 + (8 * 32'd7));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %20 = getelementptr inbounds %struct.TYPE_2__* %5, i32 7, i32 0*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_20_reg <= MXL5005_RegisterInit_0_20;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_20) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_20_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %21 = getelementptr inbounds %struct.TYPE_2__* %5, i32 7, i32 1*/
begin
MXL5005_RegisterInit_0_21 = (MXL5005_RegisterInit_0_5 + ((8 * 32'd7) + 4));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %21 = getelementptr inbounds %struct.TYPE_2__* %5, i32 7, i32 1*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_21_reg <= MXL5005_RegisterInit_0_21;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_21) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_21_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %22 = getelementptr inbounds %struct.TYPE_2__* %5, i32 8, i32 0*/
begin
MXL5005_RegisterInit_0_22 = (MXL5005_RegisterInit_0_5 + (8 * 32'd8));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %22 = getelementptr inbounds %struct.TYPE_2__* %5, i32 8, i32 0*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_22_reg <= MXL5005_RegisterInit_0_22;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_22) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_22_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %23 = getelementptr inbounds %struct.TYPE_2__* %5, i32 8, i32 1*/
begin
MXL5005_RegisterInit_0_23 = (MXL5005_RegisterInit_0_5 + ((8 * 32'd8) + 4));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %23 = getelementptr inbounds %struct.TYPE_2__* %5, i32 8, i32 1*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_23_reg <= MXL5005_RegisterInit_0_23;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_23) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_23_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %24 = getelementptr inbounds %struct.TYPE_2__* %5, i32 9, i32 0*/
begin
MXL5005_RegisterInit_0_24 = (MXL5005_RegisterInit_0_5 + (8 * 32'd9));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %24 = getelementptr inbounds %struct.TYPE_2__* %5, i32 9, i32 0*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_24_reg <= MXL5005_RegisterInit_0_24;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_24) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_24_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %25 = getelementptr inbounds %struct.TYPE_2__* %5, i32 9, i32 1*/
begin
MXL5005_RegisterInit_0_25 = (MXL5005_RegisterInit_0_5 + ((8 * 32'd9) + 4));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %25 = getelementptr inbounds %struct.TYPE_2__* %5, i32 9, i32 1*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_25_reg <= MXL5005_RegisterInit_0_25;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_25) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_25_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %26 = getelementptr inbounds %struct.TYPE_2__* %5, i32 10, i32 0*/
begin
MXL5005_RegisterInit_0_26 = (MXL5005_RegisterInit_0_5 + (8 * 32'd10));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %26 = getelementptr inbounds %struct.TYPE_2__* %5, i32 10, i32 0*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_26_reg <= MXL5005_RegisterInit_0_26;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_26) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_26_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %27 = getelementptr inbounds %struct.TYPE_2__* %5, i32 10, i32 1*/
begin
MXL5005_RegisterInit_0_27 = (MXL5005_RegisterInit_0_5 + ((8 * 32'd10) + 4));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %27 = getelementptr inbounds %struct.TYPE_2__* %5, i32 10, i32 1*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_27_reg <= MXL5005_RegisterInit_0_27;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_27) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_27_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %28 = getelementptr inbounds %struct.TYPE_2__* %5, i32 11, i32 0*/
begin
MXL5005_RegisterInit_0_28 = (MXL5005_RegisterInit_0_5 + (8 * 32'd11));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %28 = getelementptr inbounds %struct.TYPE_2__* %5, i32 11, i32 0*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_28_reg <= MXL5005_RegisterInit_0_28;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_28) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_28_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %29 = getelementptr inbounds %struct.TYPE_2__* %5, i32 11, i32 1*/
begin
MXL5005_RegisterInit_0_29 = (MXL5005_RegisterInit_0_5 + ((8 * 32'd11) + 4));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %29 = getelementptr inbounds %struct.TYPE_2__* %5, i32 11, i32 1*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_29_reg <= MXL5005_RegisterInit_0_29;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_29) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_29_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %30 = getelementptr inbounds %struct.TYPE_2__* %5, i32 12, i32 0*/
begin
MXL5005_RegisterInit_0_30 = (MXL5005_RegisterInit_0_5 + (8 * 32'd12));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %30 = getelementptr inbounds %struct.TYPE_2__* %5, i32 12, i32 0*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_30_reg <= MXL5005_RegisterInit_0_30;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_30) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_30_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %31 = getelementptr inbounds %struct.TYPE_2__* %5, i32 12, i32 1*/
begin
MXL5005_RegisterInit_0_31 = (MXL5005_RegisterInit_0_5 + ((8 * 32'd12) + 4));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %31 = getelementptr inbounds %struct.TYPE_2__* %5, i32 12, i32 1*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_31_reg <= MXL5005_RegisterInit_0_31;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_31) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_31_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %32 = getelementptr inbounds %struct.TYPE_2__* %5, i32 13, i32 0*/
begin
MXL5005_RegisterInit_0_32 = (MXL5005_RegisterInit_0_5 + (8 * 32'd13));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %32 = getelementptr inbounds %struct.TYPE_2__* %5, i32 13, i32 0*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_32_reg <= MXL5005_RegisterInit_0_32;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_32) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_32_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %33 = getelementptr inbounds %struct.TYPE_2__* %5, i32 13, i32 1*/
begin
MXL5005_RegisterInit_0_33 = (MXL5005_RegisterInit_0_5 + ((8 * 32'd13) + 4));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %33 = getelementptr inbounds %struct.TYPE_2__* %5, i32 13, i32 1*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_33_reg <= MXL5005_RegisterInit_0_33;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_33) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_33_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %34 = getelementptr inbounds %struct.TYPE_2__* %5, i32 14, i32 0*/
begin
MXL5005_RegisterInit_0_34 = (MXL5005_RegisterInit_0_5 + (8 * 32'd14));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %34 = getelementptr inbounds %struct.TYPE_2__* %5, i32 14, i32 0*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_34_reg <= MXL5005_RegisterInit_0_34;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_34) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_34_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %35 = getelementptr inbounds %struct.TYPE_2__* %5, i32 14, i32 1*/
begin
MXL5005_RegisterInit_0_35 = (MXL5005_RegisterInit_0_5 + ((8 * 32'd14) + 4));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %35 = getelementptr inbounds %struct.TYPE_2__* %5, i32 14, i32 1*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_35_reg <= MXL5005_RegisterInit_0_35;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_35) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_35_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %36 = getelementptr inbounds %struct.TYPE_2__* %5, i32 15, i32 0*/
begin
MXL5005_RegisterInit_0_36 = (MXL5005_RegisterInit_0_5 + (8 * 32'd15));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %36 = getelementptr inbounds %struct.TYPE_2__* %5, i32 15, i32 0*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_36_reg <= MXL5005_RegisterInit_0_36;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_36) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_36_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %37 = getelementptr inbounds %struct.TYPE_2__* %5, i32 15, i32 1*/
begin
MXL5005_RegisterInit_0_37 = (MXL5005_RegisterInit_0_5 + ((8 * 32'd15) + 4));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %37 = getelementptr inbounds %struct.TYPE_2__* %5, i32 15, i32 1*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_37_reg <= MXL5005_RegisterInit_0_37;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_37) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_37_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %38 = getelementptr inbounds %struct.TYPE_2__* %5, i32 16, i32 0*/
begin
MXL5005_RegisterInit_0_38 = (MXL5005_RegisterInit_0_5 + (8 * 32'd16));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %38 = getelementptr inbounds %struct.TYPE_2__* %5, i32 16, i32 0*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_38_reg <= MXL5005_RegisterInit_0_38;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_38) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_38_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %39 = getelementptr inbounds %struct.TYPE_2__* %5, i32 16, i32 1*/
begin
MXL5005_RegisterInit_0_39 = (MXL5005_RegisterInit_0_5 + ((8 * 32'd16) + 4));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %39 = getelementptr inbounds %struct.TYPE_2__* %5, i32 16, i32 1*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_39_reg <= MXL5005_RegisterInit_0_39;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_39) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_39_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %40 = getelementptr inbounds %struct.TYPE_2__* %5, i32 17, i32 0*/
begin
MXL5005_RegisterInit_0_40 = (MXL5005_RegisterInit_0_5 + (8 * 32'd17));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %40 = getelementptr inbounds %struct.TYPE_2__* %5, i32 17, i32 0*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_40_reg <= MXL5005_RegisterInit_0_40;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_40) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_40_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %41 = getelementptr inbounds %struct.TYPE_2__* %5, i32 17, i32 1*/
begin
MXL5005_RegisterInit_0_41 = (MXL5005_RegisterInit_0_5 + ((8 * 32'd17) + 4));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %41 = getelementptr inbounds %struct.TYPE_2__* %5, i32 17, i32 1*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_41_reg <= MXL5005_RegisterInit_0_41;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_41) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_41_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %42 = getelementptr inbounds %struct.TYPE_2__* %5, i32 18, i32 0*/
begin
MXL5005_RegisterInit_0_42 = (MXL5005_RegisterInit_0_5 + (8 * 32'd18));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %42 = getelementptr inbounds %struct.TYPE_2__* %5, i32 18, i32 0*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_42_reg <= MXL5005_RegisterInit_0_42;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_42) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_42_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %43 = getelementptr inbounds %struct.TYPE_2__* %5, i32 18, i32 1*/
begin
MXL5005_RegisterInit_0_43 = (MXL5005_RegisterInit_0_5 + ((8 * 32'd18) + 4));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %43 = getelementptr inbounds %struct.TYPE_2__* %5, i32 18, i32 1*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_43_reg <= MXL5005_RegisterInit_0_43;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_43) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_43_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %44 = getelementptr inbounds %struct.TYPE_2__* %5, i32 19, i32 0*/
begin
MXL5005_RegisterInit_0_44 = (MXL5005_RegisterInit_0_5 + (8 * 32'd19));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %44 = getelementptr inbounds %struct.TYPE_2__* %5, i32 19, i32 0*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_44_reg <= MXL5005_RegisterInit_0_44;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_44) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_44_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %45 = getelementptr inbounds %struct.TYPE_2__* %5, i32 19, i32 1*/
begin
MXL5005_RegisterInit_0_45 = (MXL5005_RegisterInit_0_5 + ((8 * 32'd19) + 4));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %45 = getelementptr inbounds %struct.TYPE_2__* %5, i32 19, i32 1*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_45_reg <= MXL5005_RegisterInit_0_45;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_45) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_45_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %46 = getelementptr inbounds %struct.TYPE_2__* %5, i32 20, i32 0*/
begin
MXL5005_RegisterInit_0_46 = (MXL5005_RegisterInit_0_5 + (8 * 32'd20));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %46 = getelementptr inbounds %struct.TYPE_2__* %5, i32 20, i32 0*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_46_reg <= MXL5005_RegisterInit_0_46;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_46) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_46_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %47 = getelementptr inbounds %struct.TYPE_2__* %5, i32 20, i32 1*/
begin
MXL5005_RegisterInit_0_47 = (MXL5005_RegisterInit_0_5 + ((8 * 32'd20) + 4));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %47 = getelementptr inbounds %struct.TYPE_2__* %5, i32 20, i32 1*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_47_reg <= MXL5005_RegisterInit_0_47;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_47) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_47_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %48 = getelementptr inbounds %struct.TYPE_2__* %5, i32 21, i32 0*/
begin
MXL5005_RegisterInit_0_48 = (MXL5005_RegisterInit_0_5 + (8 * 32'd21));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %48 = getelementptr inbounds %struct.TYPE_2__* %5, i32 21, i32 0*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_48_reg <= MXL5005_RegisterInit_0_48;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_48) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_48_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %49 = getelementptr inbounds %struct.TYPE_2__* %5, i32 21, i32 1*/
begin
MXL5005_RegisterInit_0_49 = (MXL5005_RegisterInit_0_5 + ((8 * 32'd21) + 4));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %49 = getelementptr inbounds %struct.TYPE_2__* %5, i32 21, i32 1*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_49_reg <= MXL5005_RegisterInit_0_49;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_49) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_49_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %50 = getelementptr inbounds %struct.TYPE_2__* %5, i32 22, i32 0*/
begin
MXL5005_RegisterInit_0_50 = (MXL5005_RegisterInit_0_5 + (8 * 32'd22));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %50 = getelementptr inbounds %struct.TYPE_2__* %5, i32 22, i32 0*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_50_reg <= MXL5005_RegisterInit_0_50;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_50) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_50_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %51 = getelementptr inbounds %struct.TYPE_2__* %5, i32 22, i32 1*/
begin
MXL5005_RegisterInit_0_51 = (MXL5005_RegisterInit_0_5 + ((8 * 32'd22) + 4));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %51 = getelementptr inbounds %struct.TYPE_2__* %5, i32 22, i32 1*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_51_reg <= MXL5005_RegisterInit_0_51;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_51) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_51_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %52 = getelementptr inbounds %struct.TYPE_2__* %5, i32 23, i32 0*/
begin
MXL5005_RegisterInit_0_52 = (MXL5005_RegisterInit_0_5 + (8 * 32'd23));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %52 = getelementptr inbounds %struct.TYPE_2__* %5, i32 23, i32 0*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_52_reg <= MXL5005_RegisterInit_0_52;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_52) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_52_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %53 = getelementptr inbounds %struct.TYPE_2__* %5, i32 23, i32 1*/
begin
MXL5005_RegisterInit_0_53 = (MXL5005_RegisterInit_0_5 + ((8 * 32'd23) + 4));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %53 = getelementptr inbounds %struct.TYPE_2__* %5, i32 23, i32 1*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_53_reg <= MXL5005_RegisterInit_0_53;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_53) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_53_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %54 = getelementptr inbounds %struct.TYPE_2__* %5, i32 24, i32 0*/
begin
MXL5005_RegisterInit_0_54 = (MXL5005_RegisterInit_0_5 + (8 * 32'd24));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %54 = getelementptr inbounds %struct.TYPE_2__* %5, i32 24, i32 0*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_54_reg <= MXL5005_RegisterInit_0_54;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_54) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_54_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %55 = getelementptr inbounds %struct.TYPE_2__* %5, i32 24, i32 1*/
begin
MXL5005_RegisterInit_0_55 = (MXL5005_RegisterInit_0_5 + ((8 * 32'd24) + 4));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %55 = getelementptr inbounds %struct.TYPE_2__* %5, i32 24, i32 1*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_55_reg <= MXL5005_RegisterInit_0_55;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_55) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_55_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %56 = getelementptr inbounds %struct.TYPE_2__* %5, i32 25, i32 0*/
begin
MXL5005_RegisterInit_0_56 = (MXL5005_RegisterInit_0_5 + (8 * 32'd25));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %56 = getelementptr inbounds %struct.TYPE_2__* %5, i32 25, i32 0*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_56_reg <= MXL5005_RegisterInit_0_56;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_56) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_56_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %57 = getelementptr inbounds %struct.TYPE_2__* %5, i32 25, i32 1*/
begin
MXL5005_RegisterInit_0_57 = (MXL5005_RegisterInit_0_5 + ((8 * 32'd25) + 4));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %57 = getelementptr inbounds %struct.TYPE_2__* %5, i32 25, i32 1*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_57_reg <= MXL5005_RegisterInit_0_57;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_57) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_57_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %58 = getelementptr inbounds %struct.TYPE_2__* %5, i32 26, i32 0*/
begin
MXL5005_RegisterInit_0_58 = (MXL5005_RegisterInit_0_5 + (8 * 32'd26));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %58 = getelementptr inbounds %struct.TYPE_2__* %5, i32 26, i32 0*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_58_reg <= MXL5005_RegisterInit_0_58;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_58) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_58_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %59 = getelementptr inbounds %struct.TYPE_2__* %5, i32 26, i32 1*/
begin
MXL5005_RegisterInit_0_59 = (MXL5005_RegisterInit_0_5 + ((8 * 32'd26) + 4));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %59 = getelementptr inbounds %struct.TYPE_2__* %5, i32 26, i32 1*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_59_reg <= MXL5005_RegisterInit_0_59;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_59) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_59_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %60 = getelementptr inbounds %struct.TYPE_2__* %5, i32 27, i32 0*/
begin
MXL5005_RegisterInit_0_60 = (MXL5005_RegisterInit_0_5 + (8 * 32'd27));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %60 = getelementptr inbounds %struct.TYPE_2__* %5, i32 27, i32 0*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_60_reg <= MXL5005_RegisterInit_0_60;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_60) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_60_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %61 = getelementptr inbounds %struct.TYPE_2__* %5, i32 27, i32 1*/
begin
MXL5005_RegisterInit_0_61 = (MXL5005_RegisterInit_0_5 + ((8 * 32'd27) + 4));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %61 = getelementptr inbounds %struct.TYPE_2__* %5, i32 27, i32 1*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_61_reg <= MXL5005_RegisterInit_0_61;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_61) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_61_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %62 = getelementptr inbounds %struct.TYPE_2__* %5, i32 28, i32 0*/
begin
MXL5005_RegisterInit_0_62 = (MXL5005_RegisterInit_0_5 + (8 * 32'd28));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %62 = getelementptr inbounds %struct.TYPE_2__* %5, i32 28, i32 0*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_62_reg <= MXL5005_RegisterInit_0_62;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_62) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_62_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %63 = getelementptr inbounds %struct.TYPE_2__* %5, i32 28, i32 1*/
begin
MXL5005_RegisterInit_0_63 = (MXL5005_RegisterInit_0_5 + ((8 * 32'd28) + 4));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %63 = getelementptr inbounds %struct.TYPE_2__* %5, i32 28, i32 1*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_63_reg <= MXL5005_RegisterInit_0_63;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_63) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_63_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %64 = getelementptr inbounds %struct.TYPE_2__* %5, i32 29, i32 0*/
begin
MXL5005_RegisterInit_0_64 = (MXL5005_RegisterInit_0_5 + (8 * 32'd29));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %64 = getelementptr inbounds %struct.TYPE_2__* %5, i32 29, i32 0*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_64_reg <= MXL5005_RegisterInit_0_64;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_64) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_64_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %65 = getelementptr inbounds %struct.TYPE_2__* %5, i32 29, i32 1*/
begin
MXL5005_RegisterInit_0_65 = (MXL5005_RegisterInit_0_5 + ((8 * 32'd29) + 4));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %65 = getelementptr inbounds %struct.TYPE_2__* %5, i32 29, i32 1*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_65_reg <= MXL5005_RegisterInit_0_65;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_65) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_65_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %66 = getelementptr inbounds %struct.TYPE_2__* %5, i32 30, i32 0*/
begin
MXL5005_RegisterInit_0_66 = (MXL5005_RegisterInit_0_5 + (8 * 32'd30));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %66 = getelementptr inbounds %struct.TYPE_2__* %5, i32 30, i32 0*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_66_reg <= MXL5005_RegisterInit_0_66;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_66) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_66_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %67 = getelementptr inbounds %struct.TYPE_2__* %5, i32 30, i32 1*/
begin
MXL5005_RegisterInit_0_67 = (MXL5005_RegisterInit_0_5 + ((8 * 32'd30) + 4));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %67 = getelementptr inbounds %struct.TYPE_2__* %5, i32 30, i32 1*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_67_reg <= MXL5005_RegisterInit_0_67;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_67) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_67_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %68 = getelementptr inbounds %struct.TYPE_2__* %5, i32 31, i32 0*/
begin
MXL5005_RegisterInit_0_68 = (MXL5005_RegisterInit_0_5 + (8 * 32'd31));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %68 = getelementptr inbounds %struct.TYPE_2__* %5, i32 31, i32 0*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_68_reg <= MXL5005_RegisterInit_0_68;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_68) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_68_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %69 = getelementptr inbounds %struct.TYPE_2__* %5, i32 31, i32 1*/
begin
MXL5005_RegisterInit_0_69 = (MXL5005_RegisterInit_0_5 + ((8 * 32'd31) + 4));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %69 = getelementptr inbounds %struct.TYPE_2__* %5, i32 31, i32 1*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_69_reg <= MXL5005_RegisterInit_0_69;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_69) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_69_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %70 = getelementptr inbounds %struct.TYPE_2__* %5, i32 32, i32 0*/
begin
MXL5005_RegisterInit_0_70 = (MXL5005_RegisterInit_0_5 + (8 * 32'd32));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %70 = getelementptr inbounds %struct.TYPE_2__* %5, i32 32, i32 0*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_70_reg <= MXL5005_RegisterInit_0_70;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_70) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_70_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %71 = getelementptr inbounds %struct.TYPE_2__* %5, i32 32, i32 1*/
begin
MXL5005_RegisterInit_0_71 = (MXL5005_RegisterInit_0_5 + ((8 * 32'd32) + 4));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %71 = getelementptr inbounds %struct.TYPE_2__* %5, i32 32, i32 1*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_71_reg <= MXL5005_RegisterInit_0_71;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_71) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_71_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %72 = getelementptr inbounds %struct.TYPE_2__* %5, i32 33, i32 0*/
begin
MXL5005_RegisterInit_0_72 = (MXL5005_RegisterInit_0_5 + (8 * 32'd33));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %72 = getelementptr inbounds %struct.TYPE_2__* %5, i32 33, i32 0*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_72_reg <= MXL5005_RegisterInit_0_72;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_72) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_72_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %73 = getelementptr inbounds %struct.TYPE_2__* %5, i32 33, i32 1*/
begin
MXL5005_RegisterInit_0_73 = (MXL5005_RegisterInit_0_5 + ((8 * 32'd33) + 4));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %73 = getelementptr inbounds %struct.TYPE_2__* %5, i32 33, i32 1*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_73_reg <= MXL5005_RegisterInit_0_73;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_73) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_73_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %74 = getelementptr inbounds %struct.TYPE_2__* %5, i32 34, i32 0*/
begin
MXL5005_RegisterInit_0_74 = (MXL5005_RegisterInit_0_5 + (8 * 32'd34));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %74 = getelementptr inbounds %struct.TYPE_2__* %5, i32 34, i32 0*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_74_reg <= MXL5005_RegisterInit_0_74;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_74) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_74_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %75 = getelementptr inbounds %struct.TYPE_2__* %5, i32 34, i32 1*/
begin
MXL5005_RegisterInit_0_75 = (MXL5005_RegisterInit_0_5 + ((8 * 32'd34) + 4));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %75 = getelementptr inbounds %struct.TYPE_2__* %5, i32 34, i32 1*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_75_reg <= MXL5005_RegisterInit_0_75;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_75) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_75_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %76 = getelementptr inbounds %struct.TYPE_2__* %5, i32 35, i32 0*/
begin
MXL5005_RegisterInit_0_76 = (MXL5005_RegisterInit_0_5 + (8 * 32'd35));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %76 = getelementptr inbounds %struct.TYPE_2__* %5, i32 35, i32 0*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_76_reg <= MXL5005_RegisterInit_0_76;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_76) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_76_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %77 = getelementptr inbounds %struct.TYPE_2__* %5, i32 35, i32 1*/
begin
MXL5005_RegisterInit_0_77 = (MXL5005_RegisterInit_0_5 + ((8 * 32'd35) + 4));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %77 = getelementptr inbounds %struct.TYPE_2__* %5, i32 35, i32 1*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_77_reg <= MXL5005_RegisterInit_0_77;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_77) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_77_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %78 = getelementptr inbounds %struct.TYPE_2__* %5, i32 36, i32 0*/
begin
MXL5005_RegisterInit_0_78 = (MXL5005_RegisterInit_0_5 + (8 * 32'd36));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %78 = getelementptr inbounds %struct.TYPE_2__* %5, i32 36, i32 0*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_78_reg <= MXL5005_RegisterInit_0_78;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_78) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_78_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %79 = getelementptr inbounds %struct.TYPE_2__* %5, i32 36, i32 1*/
begin
MXL5005_RegisterInit_0_79 = (MXL5005_RegisterInit_0_5 + ((8 * 32'd36) + 4));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %79 = getelementptr inbounds %struct.TYPE_2__* %5, i32 36, i32 1*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_79_reg <= MXL5005_RegisterInit_0_79;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_79) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_79_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %80 = getelementptr inbounds %struct.TYPE_2__* %5, i32 37, i32 0*/
begin
MXL5005_RegisterInit_0_80 = (MXL5005_RegisterInit_0_5 + (8 * 32'd37));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %80 = getelementptr inbounds %struct.TYPE_2__* %5, i32 37, i32 0*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_80_reg <= MXL5005_RegisterInit_0_80;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_80) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_80_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %81 = getelementptr inbounds %struct.TYPE_2__* %5, i32 37, i32 1*/
begin
MXL5005_RegisterInit_0_81 = (MXL5005_RegisterInit_0_5 + ((8 * 32'd37) + 4));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %81 = getelementptr inbounds %struct.TYPE_2__* %5, i32 37, i32 1*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_81_reg <= MXL5005_RegisterInit_0_81;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_81) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_81_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %82 = getelementptr inbounds %struct.TYPE_2__* %5, i32 38, i32 0*/
begin
MXL5005_RegisterInit_0_82 = (MXL5005_RegisterInit_0_5 + (8 * 32'd38));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %82 = getelementptr inbounds %struct.TYPE_2__* %5, i32 38, i32 0*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_82_reg <= MXL5005_RegisterInit_0_82;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_82) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_82_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %83 = getelementptr inbounds %struct.TYPE_2__* %5, i32 38, i32 1*/
begin
MXL5005_RegisterInit_0_83 = (MXL5005_RegisterInit_0_5 + ((8 * 32'd38) + 4));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %83 = getelementptr inbounds %struct.TYPE_2__* %5, i32 38, i32 1*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_83_reg <= MXL5005_RegisterInit_0_83;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_83) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_83_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %84 = getelementptr inbounds %struct.TYPE_2__* %5, i32 39, i32 0*/
begin
MXL5005_RegisterInit_0_84 = (MXL5005_RegisterInit_0_5 + (8 * 32'd39));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %84 = getelementptr inbounds %struct.TYPE_2__* %5, i32 39, i32 0*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_84_reg <= MXL5005_RegisterInit_0_84;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_84) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_84_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %85 = getelementptr inbounds %struct.TYPE_2__* %5, i32 39, i32 1*/
begin
MXL5005_RegisterInit_0_85 = (MXL5005_RegisterInit_0_5 + ((8 * 32'd39) + 4));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %85 = getelementptr inbounds %struct.TYPE_2__* %5, i32 39, i32 1*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_85_reg <= MXL5005_RegisterInit_0_85;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_85) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_85_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %86 = getelementptr inbounds %struct.TYPE_2__* %5, i32 40, i32 0*/
begin
MXL5005_RegisterInit_0_86 = (MXL5005_RegisterInit_0_5 + (8 * 32'd40));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %86 = getelementptr inbounds %struct.TYPE_2__* %5, i32 40, i32 0*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_86_reg <= MXL5005_RegisterInit_0_86;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_86) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_86_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %87 = getelementptr inbounds %struct.TYPE_2__* %5, i32 40, i32 1*/
begin
MXL5005_RegisterInit_0_87 = (MXL5005_RegisterInit_0_5 + ((8 * 32'd40) + 4));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %87 = getelementptr inbounds %struct.TYPE_2__* %5, i32 40, i32 1*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_87_reg <= MXL5005_RegisterInit_0_87;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_87) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_87_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %88 = getelementptr inbounds %struct.TYPE_2__* %5, i32 41, i32 0*/
begin
MXL5005_RegisterInit_0_88 = (MXL5005_RegisterInit_0_5 + (8 * 32'd41));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %88 = getelementptr inbounds %struct.TYPE_2__* %5, i32 41, i32 0*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_88_reg <= MXL5005_RegisterInit_0_88;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_88) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_88_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %89 = getelementptr inbounds %struct.TYPE_2__* %5, i32 41, i32 1*/
begin
MXL5005_RegisterInit_0_89 = (MXL5005_RegisterInit_0_5 + ((8 * 32'd41) + 4));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %89 = getelementptr inbounds %struct.TYPE_2__* %5, i32 41, i32 1*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_89_reg <= MXL5005_RegisterInit_0_89;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_89) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_89_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %90 = getelementptr inbounds %struct.TYPE_2__* %5, i32 42, i32 0*/
begin
MXL5005_RegisterInit_0_90 = (MXL5005_RegisterInit_0_5 + (8 * 32'd42));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %90 = getelementptr inbounds %struct.TYPE_2__* %5, i32 42, i32 0*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_90_reg <= MXL5005_RegisterInit_0_90;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_90) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_90_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %91 = getelementptr inbounds %struct.TYPE_2__* %5, i32 42, i32 1*/
begin
MXL5005_RegisterInit_0_91 = (MXL5005_RegisterInit_0_5 + ((8 * 32'd42) + 4));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %91 = getelementptr inbounds %struct.TYPE_2__* %5, i32 42, i32 1*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_91_reg <= MXL5005_RegisterInit_0_91;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_91) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_91_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %92 = getelementptr inbounds %struct.TYPE_2__* %5, i32 43, i32 0*/
begin
MXL5005_RegisterInit_0_92 = (MXL5005_RegisterInit_0_5 + (8 * 32'd43));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %92 = getelementptr inbounds %struct.TYPE_2__* %5, i32 43, i32 0*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_92_reg <= MXL5005_RegisterInit_0_92;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_92) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_92_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %93 = getelementptr inbounds %struct.TYPE_2__* %5, i32 43, i32 1*/
begin
MXL5005_RegisterInit_0_93 = (MXL5005_RegisterInit_0_5 + ((8 * 32'd43) + 4));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %93 = getelementptr inbounds %struct.TYPE_2__* %5, i32 43, i32 1*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_93_reg <= MXL5005_RegisterInit_0_93;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_93) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_93_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %94 = getelementptr inbounds %struct.TYPE_2__* %5, i32 44, i32 0*/
begin
MXL5005_RegisterInit_0_94 = (MXL5005_RegisterInit_0_5 + (8 * 32'd44));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %94 = getelementptr inbounds %struct.TYPE_2__* %5, i32 44, i32 0*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_94_reg <= MXL5005_RegisterInit_0_94;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_94) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_94_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %95 = getelementptr inbounds %struct.TYPE_2__* %5, i32 44, i32 1*/
begin
MXL5005_RegisterInit_0_95 = (MXL5005_RegisterInit_0_5 + ((8 * 32'd44) + 4));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %95 = getelementptr inbounds %struct.TYPE_2__* %5, i32 44, i32 1*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_95_reg <= MXL5005_RegisterInit_0_95;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_95) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_95_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %96 = getelementptr inbounds %struct.TYPE_2__* %5, i32 45, i32 0*/
begin
MXL5005_RegisterInit_0_96 = (MXL5005_RegisterInit_0_5 + (8 * 32'd45));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %96 = getelementptr inbounds %struct.TYPE_2__* %5, i32 45, i32 0*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_96_reg <= MXL5005_RegisterInit_0_96;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_96) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_96_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %97 = getelementptr inbounds %struct.TYPE_2__* %5, i32 45, i32 1*/
begin
MXL5005_RegisterInit_0_97 = (MXL5005_RegisterInit_0_5 + ((8 * 32'd45) + 4));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %97 = getelementptr inbounds %struct.TYPE_2__* %5, i32 45, i32 1*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_97_reg <= MXL5005_RegisterInit_0_97;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_97) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_97_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %98 = getelementptr inbounds %struct.TYPE_2__* %5, i32 46, i32 0*/
begin
MXL5005_RegisterInit_0_98 = (MXL5005_RegisterInit_0_5 + (8 * 32'd46));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %98 = getelementptr inbounds %struct.TYPE_2__* %5, i32 46, i32 0*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_98_reg <= MXL5005_RegisterInit_0_98;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_98) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_98_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %99 = getelementptr inbounds %struct.TYPE_2__* %5, i32 46, i32 1*/
begin
MXL5005_RegisterInit_0_99 = (MXL5005_RegisterInit_0_5 + ((8 * 32'd46) + 4));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %99 = getelementptr inbounds %struct.TYPE_2__* %5, i32 46, i32 1*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_99_reg <= MXL5005_RegisterInit_0_99;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_99) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_99_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %100 = getelementptr inbounds %struct.TYPE_2__* %5, i32 47, i32 0*/
begin
MXL5005_RegisterInit_0_100 = (MXL5005_RegisterInit_0_5 + (8 * 32'd47));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %100 = getelementptr inbounds %struct.TYPE_2__* %5, i32 47, i32 0*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_100_reg <= MXL5005_RegisterInit_0_100;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_100) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_100_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %101 = getelementptr inbounds %struct.TYPE_2__* %5, i32 47, i32 1*/
begin
MXL5005_RegisterInit_0_101 = (MXL5005_RegisterInit_0_5 + ((8 * 32'd47) + 4));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %101 = getelementptr inbounds %struct.TYPE_2__* %5, i32 47, i32 1*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_101_reg <= MXL5005_RegisterInit_0_101;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_101) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_101_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %102 = getelementptr inbounds %struct.TYPE_2__* %5, i32 48, i32 0*/
begin
MXL5005_RegisterInit_0_102 = (MXL5005_RegisterInit_0_5 + (8 * 32'd48));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %102 = getelementptr inbounds %struct.TYPE_2__* %5, i32 48, i32 0*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_102_reg <= MXL5005_RegisterInit_0_102;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_102) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_102_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %103 = getelementptr inbounds %struct.TYPE_2__* %5, i32 48, i32 1*/
begin
MXL5005_RegisterInit_0_103 = (MXL5005_RegisterInit_0_5 + ((8 * 32'd48) + 4));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %103 = getelementptr inbounds %struct.TYPE_2__* %5, i32 48, i32 1*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_103_reg <= MXL5005_RegisterInit_0_103;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_103) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_103_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %104 = getelementptr inbounds %struct.TYPE_2__* %5, i32 49, i32 0*/
begin
MXL5005_RegisterInit_0_104 = (MXL5005_RegisterInit_0_5 + (8 * 32'd49));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %104 = getelementptr inbounds %struct.TYPE_2__* %5, i32 49, i32 0*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_104_reg <= MXL5005_RegisterInit_0_104;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_104) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_104_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %105 = getelementptr inbounds %struct.TYPE_2__* %5, i32 49, i32 1*/
begin
MXL5005_RegisterInit_0_105 = (MXL5005_RegisterInit_0_5 + ((8 * 32'd49) + 4));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %105 = getelementptr inbounds %struct.TYPE_2__* %5, i32 49, i32 1*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_105_reg <= MXL5005_RegisterInit_0_105;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_105) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_105_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %106 = getelementptr inbounds %struct.TYPE_2__* %5, i32 50, i32 0*/
begin
MXL5005_RegisterInit_0_106 = (MXL5005_RegisterInit_0_5 + (8 * 32'd50));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %106 = getelementptr inbounds %struct.TYPE_2__* %5, i32 50, i32 0*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_106_reg <= MXL5005_RegisterInit_0_106;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_106) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_106_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %107 = getelementptr inbounds %struct.TYPE_2__* %5, i32 50, i32 1*/
begin
MXL5005_RegisterInit_0_107 = (MXL5005_RegisterInit_0_5 + ((8 * 32'd50) + 4));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %107 = getelementptr inbounds %struct.TYPE_2__* %5, i32 50, i32 1*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_107_reg <= MXL5005_RegisterInit_0_107;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_107) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_107_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %108 = getelementptr inbounds %struct.TYPE_2__* %5, i32 51, i32 0*/
begin
MXL5005_RegisterInit_0_108 = (MXL5005_RegisterInit_0_5 + (8 * 32'd51));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %108 = getelementptr inbounds %struct.TYPE_2__* %5, i32 51, i32 0*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_108_reg <= MXL5005_RegisterInit_0_108;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_108) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_108_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %109 = getelementptr inbounds %struct.TYPE_2__* %5, i32 51, i32 1*/
begin
MXL5005_RegisterInit_0_109 = (MXL5005_RegisterInit_0_5 + ((8 * 32'd51) + 4));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %109 = getelementptr inbounds %struct.TYPE_2__* %5, i32 51, i32 1*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_109_reg <= MXL5005_RegisterInit_0_109;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_109) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_109_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %110 = getelementptr inbounds %struct.TYPE_2__* %5, i32 52, i32 0*/
begin
MXL5005_RegisterInit_0_110 = (MXL5005_RegisterInit_0_5 + (8 * 32'd52));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %110 = getelementptr inbounds %struct.TYPE_2__* %5, i32 52, i32 0*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_110_reg <= MXL5005_RegisterInit_0_110;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_110) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_110_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %111 = getelementptr inbounds %struct.TYPE_2__* %5, i32 52, i32 1*/
begin
MXL5005_RegisterInit_0_111 = (MXL5005_RegisterInit_0_5 + ((8 * 32'd52) + 4));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %111 = getelementptr inbounds %struct.TYPE_2__* %5, i32 52, i32 1*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_111_reg <= MXL5005_RegisterInit_0_111;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_111) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_111_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %112 = getelementptr inbounds %struct.TYPE_2__* %5, i32 53, i32 0*/
begin
MXL5005_RegisterInit_0_112 = (MXL5005_RegisterInit_0_5 + (8 * 32'd53));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %112 = getelementptr inbounds %struct.TYPE_2__* %5, i32 53, i32 0*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_112_reg <= MXL5005_RegisterInit_0_112;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_112) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_112_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %113 = getelementptr inbounds %struct.TYPE_2__* %5, i32 53, i32 1*/
begin
MXL5005_RegisterInit_0_113 = (MXL5005_RegisterInit_0_5 + ((8 * 32'd53) + 4));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %113 = getelementptr inbounds %struct.TYPE_2__* %5, i32 53, i32 1*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_113_reg <= MXL5005_RegisterInit_0_113;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_113) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_113_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %114 = getelementptr inbounds %struct.TYPE_2__* %5, i32 54, i32 0*/
begin
MXL5005_RegisterInit_0_114 = (MXL5005_RegisterInit_0_5 + (8 * 32'd54));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %114 = getelementptr inbounds %struct.TYPE_2__* %5, i32 54, i32 0*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_114_reg <= MXL5005_RegisterInit_0_114;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_114) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_114_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %115 = getelementptr inbounds %struct.TYPE_2__* %5, i32 54, i32 1*/
begin
MXL5005_RegisterInit_0_115 = (MXL5005_RegisterInit_0_5 + ((8 * 32'd54) + 4));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %115 = getelementptr inbounds %struct.TYPE_2__* %5, i32 54, i32 1*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_115_reg <= MXL5005_RegisterInit_0_115;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_115) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_115_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %116 = getelementptr inbounds %struct.TYPE_2__* %5, i32 55, i32 0*/
begin
MXL5005_RegisterInit_0_116 = (MXL5005_RegisterInit_0_5 + (8 * 32'd55));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %116 = getelementptr inbounds %struct.TYPE_2__* %5, i32 55, i32 0*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_116_reg <= MXL5005_RegisterInit_0_116;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_116) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_116_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %117 = getelementptr inbounds %struct.TYPE_2__* %5, i32 55, i32 1*/
begin
MXL5005_RegisterInit_0_117 = (MXL5005_RegisterInit_0_5 + ((8 * 32'd55) + 4));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %117 = getelementptr inbounds %struct.TYPE_2__* %5, i32 55, i32 1*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_117_reg <= MXL5005_RegisterInit_0_117;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_117) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_117_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %118 = getelementptr inbounds %struct.TYPE_2__* %5, i32 56, i32 0*/
begin
MXL5005_RegisterInit_0_118 = (MXL5005_RegisterInit_0_5 + (8 * 32'd56));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %118 = getelementptr inbounds %struct.TYPE_2__* %5, i32 56, i32 0*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_118_reg <= MXL5005_RegisterInit_0_118;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_118) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_118_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %119 = getelementptr inbounds %struct.TYPE_2__* %5, i32 56, i32 1*/
begin
MXL5005_RegisterInit_0_119 = (MXL5005_RegisterInit_0_5 + ((8 * 32'd56) + 4));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %119 = getelementptr inbounds %struct.TYPE_2__* %5, i32 56, i32 1*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_119_reg <= MXL5005_RegisterInit_0_119;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_119) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_119_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %120 = getelementptr inbounds %struct.TYPE_2__* %5, i32 57, i32 0*/
begin
MXL5005_RegisterInit_0_120 = (MXL5005_RegisterInit_0_5 + (8 * 32'd57));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %120 = getelementptr inbounds %struct.TYPE_2__* %5, i32 57, i32 0*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_120_reg <= MXL5005_RegisterInit_0_120;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_120) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_120_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %121 = getelementptr inbounds %struct.TYPE_2__* %5, i32 57, i32 1*/
begin
MXL5005_RegisterInit_0_121 = (MXL5005_RegisterInit_0_5 + ((8 * 32'd57) + 4));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %121 = getelementptr inbounds %struct.TYPE_2__* %5, i32 57, i32 1*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_121_reg <= MXL5005_RegisterInit_0_121;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_121) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_121_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %122 = getelementptr inbounds %struct.TYPE_2__* %5, i32 58, i32 0*/
begin
MXL5005_RegisterInit_0_122 = (MXL5005_RegisterInit_0_5 + (8 * 32'd58));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %122 = getelementptr inbounds %struct.TYPE_2__* %5, i32 58, i32 0*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_122_reg <= MXL5005_RegisterInit_0_122;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_122) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_122_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %123 = getelementptr inbounds %struct.TYPE_2__* %5, i32 58, i32 1*/
begin
MXL5005_RegisterInit_0_123 = (MXL5005_RegisterInit_0_5 + ((8 * 32'd58) + 4));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %123 = getelementptr inbounds %struct.TYPE_2__* %5, i32 58, i32 1*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_123_reg <= MXL5005_RegisterInit_0_123;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_123) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_123_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %124 = getelementptr inbounds %struct.TYPE_2__* %5, i32 59, i32 0*/
begin
MXL5005_RegisterInit_0_124 = (MXL5005_RegisterInit_0_5 + (8 * 32'd59));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %124 = getelementptr inbounds %struct.TYPE_2__* %5, i32 59, i32 0*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_124_reg <= MXL5005_RegisterInit_0_124;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_124) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_124_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %125 = getelementptr inbounds %struct.TYPE_2__* %5, i32 59, i32 1*/
begin
MXL5005_RegisterInit_0_125 = (MXL5005_RegisterInit_0_5 + ((8 * 32'd59) + 4));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %125 = getelementptr inbounds %struct.TYPE_2__* %5, i32 59, i32 1*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_125_reg <= MXL5005_RegisterInit_0_125;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_125) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_125_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %126 = getelementptr inbounds %struct.TYPE_2__* %5, i32 60, i32 0*/
begin
MXL5005_RegisterInit_0_126 = (MXL5005_RegisterInit_0_5 + (8 * 32'd60));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %126 = getelementptr inbounds %struct.TYPE_2__* %5, i32 60, i32 0*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_126_reg <= MXL5005_RegisterInit_0_126;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_126) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_126_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %127 = getelementptr inbounds %struct.TYPE_2__* %5, i32 60, i32 1*/
begin
MXL5005_RegisterInit_0_127 = (MXL5005_RegisterInit_0_5 + ((8 * 32'd60) + 4));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %127 = getelementptr inbounds %struct.TYPE_2__* %5, i32 60, i32 1*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_127_reg <= MXL5005_RegisterInit_0_127;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_127) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_127_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %128 = getelementptr inbounds %struct.TYPE_2__* %5, i32 61, i32 0*/
begin
MXL5005_RegisterInit_0_128 = (MXL5005_RegisterInit_0_5 + (8 * 32'd61));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %128 = getelementptr inbounds %struct.TYPE_2__* %5, i32 61, i32 0*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_128_reg <= MXL5005_RegisterInit_0_128;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_128) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_128_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %129 = getelementptr inbounds %struct.TYPE_2__* %5, i32 61, i32 1*/
begin
MXL5005_RegisterInit_0_129 = (MXL5005_RegisterInit_0_5 + ((8 * 32'd61) + 4));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %129 = getelementptr inbounds %struct.TYPE_2__* %5, i32 61, i32 1*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_129_reg <= MXL5005_RegisterInit_0_129;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_129) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_129_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %130 = getelementptr inbounds %struct.TYPE_2__* %5, i32 62, i32 0*/
begin
MXL5005_RegisterInit_0_130 = (MXL5005_RegisterInit_0_5 + (8 * 32'd62));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %130 = getelementptr inbounds %struct.TYPE_2__* %5, i32 62, i32 0*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_130_reg <= MXL5005_RegisterInit_0_130;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_130) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_130_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %131 = getelementptr inbounds %struct.TYPE_2__* %5, i32 62, i32 1*/
begin
MXL5005_RegisterInit_0_131 = (MXL5005_RegisterInit_0_5 + ((8 * 32'd62) + 4));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %131 = getelementptr inbounds %struct.TYPE_2__* %5, i32 62, i32 1*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_131_reg <= MXL5005_RegisterInit_0_131;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_131) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_131_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %132 = getelementptr inbounds %struct.TYPE_2__* %5, i32 63, i32 0*/
begin
MXL5005_RegisterInit_0_132 = (MXL5005_RegisterInit_0_5 + (8 * 32'd63));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %132 = getelementptr inbounds %struct.TYPE_2__* %5, i32 63, i32 0*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_132_reg <= MXL5005_RegisterInit_0_132;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_132) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_132_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %133 = getelementptr inbounds %struct.TYPE_2__* %5, i32 63, i32 1*/
begin
MXL5005_RegisterInit_0_133 = (MXL5005_RegisterInit_0_5 + ((8 * 32'd63) + 4));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %133 = getelementptr inbounds %struct.TYPE_2__* %5, i32 63, i32 1*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_133_reg <= MXL5005_RegisterInit_0_133;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_133) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_133_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %134 = getelementptr inbounds %struct.TYPE_2__* %5, i32 64, i32 0*/
begin
MXL5005_RegisterInit_0_134 = (MXL5005_RegisterInit_0_5 + (8 * 32'd64));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %134 = getelementptr inbounds %struct.TYPE_2__* %5, i32 64, i32 0*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_134_reg <= MXL5005_RegisterInit_0_134;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_134) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_134_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %135 = getelementptr inbounds %struct.TYPE_2__* %5, i32 64, i32 1*/
begin
MXL5005_RegisterInit_0_135 = (MXL5005_RegisterInit_0_5 + ((8 * 32'd64) + 4));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %135 = getelementptr inbounds %struct.TYPE_2__* %5, i32 64, i32 1*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_135_reg <= MXL5005_RegisterInit_0_135;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_135) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_135_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %136 = getelementptr inbounds %struct.TYPE_2__* %5, i32 65, i32 0*/
begin
MXL5005_RegisterInit_0_136 = (MXL5005_RegisterInit_0_5 + (8 * 32'd65));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %136 = getelementptr inbounds %struct.TYPE_2__* %5, i32 65, i32 0*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_136_reg <= MXL5005_RegisterInit_0_136;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_136) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_136_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %137 = getelementptr inbounds %struct.TYPE_2__* %5, i32 65, i32 1*/
begin
MXL5005_RegisterInit_0_137 = (MXL5005_RegisterInit_0_5 + ((8 * 32'd65) + 4));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %137 = getelementptr inbounds %struct.TYPE_2__* %5, i32 65, i32 1*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_137_reg <= MXL5005_RegisterInit_0_137;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_137) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_137_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %138 = getelementptr inbounds %struct.TYPE_2__* %5, i32 66, i32 0*/
begin
MXL5005_RegisterInit_0_138 = (MXL5005_RegisterInit_0_5 + (8 * 32'd66));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %138 = getelementptr inbounds %struct.TYPE_2__* %5, i32 66, i32 0*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_138_reg <= MXL5005_RegisterInit_0_138;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_138) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_138_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %139 = getelementptr inbounds %struct.TYPE_2__* %5, i32 66, i32 1*/
begin
MXL5005_RegisterInit_0_139 = (MXL5005_RegisterInit_0_5 + ((8 * 32'd66) + 4));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %139 = getelementptr inbounds %struct.TYPE_2__* %5, i32 66, i32 1*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_139_reg <= MXL5005_RegisterInit_0_139;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_139) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_139_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %140 = getelementptr inbounds %struct.TYPE_2__* %5, i32 67, i32 0*/
begin
MXL5005_RegisterInit_0_140 = (MXL5005_RegisterInit_0_5 + (8 * 32'd67));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %140 = getelementptr inbounds %struct.TYPE_2__* %5, i32 67, i32 0*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_140_reg <= MXL5005_RegisterInit_0_140;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_140) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_140_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %141 = getelementptr inbounds %struct.TYPE_2__* %5, i32 67, i32 1*/
begin
MXL5005_RegisterInit_0_141 = (MXL5005_RegisterInit_0_5 + ((8 * 32'd67) + 4));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %141 = getelementptr inbounds %struct.TYPE_2__* %5, i32 67, i32 1*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_141_reg <= MXL5005_RegisterInit_0_141;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_141) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_141_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %142 = getelementptr inbounds %struct.TYPE_2__* %5, i32 68, i32 0*/
begin
MXL5005_RegisterInit_0_142 = (MXL5005_RegisterInit_0_5 + (8 * 32'd68));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %142 = getelementptr inbounds %struct.TYPE_2__* %5, i32 68, i32 0*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_142_reg <= MXL5005_RegisterInit_0_142;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_142) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_142_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %143 = getelementptr inbounds %struct.TYPE_2__* %5, i32 68, i32 1*/
begin
MXL5005_RegisterInit_0_143 = (MXL5005_RegisterInit_0_5 + ((8 * 32'd68) + 4));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %143 = getelementptr inbounds %struct.TYPE_2__* %5, i32 68, i32 1*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_143_reg <= MXL5005_RegisterInit_0_143;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_143) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_143_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %144 = getelementptr inbounds %struct.TYPE_2__* %5, i32 69, i32 0*/
begin
MXL5005_RegisterInit_0_144 = (MXL5005_RegisterInit_0_5 + (8 * 32'd69));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %144 = getelementptr inbounds %struct.TYPE_2__* %5, i32 69, i32 0*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_144_reg <= MXL5005_RegisterInit_0_144;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_144) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_144_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %145 = getelementptr inbounds %struct.TYPE_2__* %5, i32 69, i32 1*/
begin
MXL5005_RegisterInit_0_145 = (MXL5005_RegisterInit_0_5 + ((8 * 32'd69) + 4));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %145 = getelementptr inbounds %struct.TYPE_2__* %5, i32 69, i32 1*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_145_reg <= MXL5005_RegisterInit_0_145;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_145) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_145_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %146 = getelementptr inbounds %struct.TYPE_2__* %5, i32 70, i32 0*/
begin
MXL5005_RegisterInit_0_146 = (MXL5005_RegisterInit_0_5 + (8 * 32'd70));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %146 = getelementptr inbounds %struct.TYPE_2__* %5, i32 70, i32 0*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_146_reg <= MXL5005_RegisterInit_0_146;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_146) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_146_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %147 = getelementptr inbounds %struct.TYPE_2__* %5, i32 70, i32 1*/
begin
MXL5005_RegisterInit_0_147 = (MXL5005_RegisterInit_0_5 + ((8 * 32'd70) + 4));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %147 = getelementptr inbounds %struct.TYPE_2__* %5, i32 70, i32 1*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_147_reg <= MXL5005_RegisterInit_0_147;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_147) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_147_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %148 = getelementptr inbounds %struct.TYPE_2__* %5, i32 71, i32 0*/
begin
MXL5005_RegisterInit_0_148 = (MXL5005_RegisterInit_0_5 + (8 * 32'd71));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %148 = getelementptr inbounds %struct.TYPE_2__* %5, i32 71, i32 0*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_148_reg <= MXL5005_RegisterInit_0_148;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_148) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_148_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %149 = getelementptr inbounds %struct.TYPE_2__* %5, i32 71, i32 1*/
begin
MXL5005_RegisterInit_0_149 = (MXL5005_RegisterInit_0_5 + ((8 * 32'd71) + 4));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %149 = getelementptr inbounds %struct.TYPE_2__* %5, i32 71, i32 1*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_149_reg <= MXL5005_RegisterInit_0_149;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_149) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_149_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %150 = getelementptr inbounds %struct.TYPE_2__* %5, i32 72, i32 0*/
begin
MXL5005_RegisterInit_0_150 = (MXL5005_RegisterInit_0_5 + (8 * 32'd72));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %150 = getelementptr inbounds %struct.TYPE_2__* %5, i32 72, i32 0*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_150_reg <= MXL5005_RegisterInit_0_150;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_150) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_150_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %151 = getelementptr inbounds %struct.TYPE_2__* %5, i32 72, i32 1*/
begin
MXL5005_RegisterInit_0_151 = (MXL5005_RegisterInit_0_5 + ((8 * 32'd72) + 4));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %151 = getelementptr inbounds %struct.TYPE_2__* %5, i32 72, i32 1*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_151_reg <= MXL5005_RegisterInit_0_151;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_151) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_151_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %152 = getelementptr inbounds %struct.TYPE_2__* %5, i32 73, i32 0*/
begin
MXL5005_RegisterInit_0_152 = (MXL5005_RegisterInit_0_5 + (8 * 32'd73));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %152 = getelementptr inbounds %struct.TYPE_2__* %5, i32 73, i32 0*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_152_reg <= MXL5005_RegisterInit_0_152;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_152) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_152_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %153 = getelementptr inbounds %struct.TYPE_2__* %5, i32 73, i32 1*/
begin
MXL5005_RegisterInit_0_153 = (MXL5005_RegisterInit_0_5 + ((8 * 32'd73) + 4));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %153 = getelementptr inbounds %struct.TYPE_2__* %5, i32 73, i32 1*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_153_reg <= MXL5005_RegisterInit_0_153;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_153) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_153_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %154 = getelementptr inbounds %struct.TYPE_2__* %5, i32 74, i32 0*/
begin
MXL5005_RegisterInit_0_154 = (MXL5005_RegisterInit_0_5 + (8 * 32'd74));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %154 = getelementptr inbounds %struct.TYPE_2__* %5, i32 74, i32 0*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_154_reg <= MXL5005_RegisterInit_0_154;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_154) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_154_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %155 = getelementptr inbounds %struct.TYPE_2__* %5, i32 74, i32 1*/
begin
MXL5005_RegisterInit_0_155 = (MXL5005_RegisterInit_0_5 + ((8 * 32'd74) + 4));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %155 = getelementptr inbounds %struct.TYPE_2__* %5, i32 74, i32 1*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_155_reg <= MXL5005_RegisterInit_0_155;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_155) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_155_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %156 = getelementptr inbounds %struct.TYPE_2__* %5, i32 75, i32 0*/
begin
MXL5005_RegisterInit_0_156 = (MXL5005_RegisterInit_0_5 + (8 * 32'd75));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %156 = getelementptr inbounds %struct.TYPE_2__* %5, i32 75, i32 0*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_156_reg <= MXL5005_RegisterInit_0_156;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_156) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_156_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %157 = getelementptr inbounds %struct.TYPE_2__* %5, i32 75, i32 1*/
begin
MXL5005_RegisterInit_0_157 = (MXL5005_RegisterInit_0_5 + ((8 * 32'd75) + 4));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %157 = getelementptr inbounds %struct.TYPE_2__* %5, i32 75, i32 1*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_157_reg <= MXL5005_RegisterInit_0_157;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_157) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_157_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %158 = getelementptr inbounds %struct.TYPE_2__* %5, i32 76, i32 0*/
begin
MXL5005_RegisterInit_0_158 = (MXL5005_RegisterInit_0_5 + (8 * 32'd76));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %158 = getelementptr inbounds %struct.TYPE_2__* %5, i32 76, i32 0*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_158_reg <= MXL5005_RegisterInit_0_158;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_158) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_158_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %159 = getelementptr inbounds %struct.TYPE_2__* %5, i32 76, i32 1*/
begin
MXL5005_RegisterInit_0_159 = (MXL5005_RegisterInit_0_5 + ((8 * 32'd76) + 4));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %159 = getelementptr inbounds %struct.TYPE_2__* %5, i32 76, i32 1*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_159_reg <= MXL5005_RegisterInit_0_159;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_159) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_159_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %160 = getelementptr inbounds %struct.TYPE_2__* %5, i32 77, i32 0*/
begin
MXL5005_RegisterInit_0_160 = (MXL5005_RegisterInit_0_5 + (8 * 32'd77));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %160 = getelementptr inbounds %struct.TYPE_2__* %5, i32 77, i32 0*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_160_reg <= MXL5005_RegisterInit_0_160;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_160) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_160_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %161 = getelementptr inbounds %struct.TYPE_2__* %5, i32 77, i32 1*/
begin
MXL5005_RegisterInit_0_161 = (MXL5005_RegisterInit_0_5 + ((8 * 32'd77) + 4));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %161 = getelementptr inbounds %struct.TYPE_2__* %5, i32 77, i32 1*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_161_reg <= MXL5005_RegisterInit_0_161;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_161) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_161_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %162 = getelementptr inbounds %struct.TYPE_2__* %5, i32 78, i32 0*/
begin
MXL5005_RegisterInit_0_162 = (MXL5005_RegisterInit_0_5 + (8 * 32'd78));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %162 = getelementptr inbounds %struct.TYPE_2__* %5, i32 78, i32 0*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_162_reg <= MXL5005_RegisterInit_0_162;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_162) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_162_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %163 = getelementptr inbounds %struct.TYPE_2__* %5, i32 78, i32 1*/
begin
MXL5005_RegisterInit_0_163 = (MXL5005_RegisterInit_0_5 + ((8 * 32'd78) + 4));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %163 = getelementptr inbounds %struct.TYPE_2__* %5, i32 78, i32 1*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_163_reg <= MXL5005_RegisterInit_0_163;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_163) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_163_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %164 = getelementptr inbounds %struct.TYPE_2__* %5, i32 79, i32 0*/
begin
MXL5005_RegisterInit_0_164 = (MXL5005_RegisterInit_0_5 + (8 * 32'd79));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %164 = getelementptr inbounds %struct.TYPE_2__* %5, i32 79, i32 0*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_164_reg <= MXL5005_RegisterInit_0_164;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_164) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_164_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %165 = getelementptr inbounds %struct.TYPE_2__* %5, i32 79, i32 1*/
begin
MXL5005_RegisterInit_0_165 = (MXL5005_RegisterInit_0_5 + ((8 * 32'd79) + 4));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %165 = getelementptr inbounds %struct.TYPE_2__* %5, i32 79, i32 1*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_165_reg <= MXL5005_RegisterInit_0_165;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_165) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_165_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %166 = getelementptr inbounds %struct.TYPE_2__* %5, i32 80, i32 0*/
begin
MXL5005_RegisterInit_0_166 = (MXL5005_RegisterInit_0_5 + (8 * 32'd80));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %166 = getelementptr inbounds %struct.TYPE_2__* %5, i32 80, i32 0*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_166_reg <= MXL5005_RegisterInit_0_166;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_166) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_166_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %167 = getelementptr inbounds %struct.TYPE_2__* %5, i32 80, i32 1*/
begin
MXL5005_RegisterInit_0_167 = (MXL5005_RegisterInit_0_5 + ((8 * 32'd80) + 4));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %167 = getelementptr inbounds %struct.TYPE_2__* %5, i32 80, i32 1*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_167_reg <= MXL5005_RegisterInit_0_167;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_167) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_167_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %168 = getelementptr inbounds %struct.TYPE_2__* %5, i32 81, i32 0*/
begin
MXL5005_RegisterInit_0_168 = (MXL5005_RegisterInit_0_5 + (8 * 32'd81));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %168 = getelementptr inbounds %struct.TYPE_2__* %5, i32 81, i32 0*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_168_reg <= MXL5005_RegisterInit_0_168;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_168) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_168_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %169 = getelementptr inbounds %struct.TYPE_2__* %5, i32 81, i32 1*/
begin
MXL5005_RegisterInit_0_169 = (MXL5005_RegisterInit_0_5 + ((8 * 32'd81) + 4));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %169 = getelementptr inbounds %struct.TYPE_2__* %5, i32 81, i32 1*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_169_reg <= MXL5005_RegisterInit_0_169;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_169) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_169_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %170 = getelementptr inbounds %struct.TYPE_2__* %5, i32 82, i32 0*/
begin
MXL5005_RegisterInit_0_170 = (MXL5005_RegisterInit_0_5 + (8 * 32'd82));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %170 = getelementptr inbounds %struct.TYPE_2__* %5, i32 82, i32 0*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_170_reg <= MXL5005_RegisterInit_0_170;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_170) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_170_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %171 = getelementptr inbounds %struct.TYPE_2__* %5, i32 82, i32 1*/
begin
MXL5005_RegisterInit_0_171 = (MXL5005_RegisterInit_0_5 + ((8 * 32'd82) + 4));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %171 = getelementptr inbounds %struct.TYPE_2__* %5, i32 82, i32 1*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_171_reg <= MXL5005_RegisterInit_0_171;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_171) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_171_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %172 = getelementptr inbounds %struct.TYPE_2__* %5, i32 83, i32 0*/
begin
MXL5005_RegisterInit_0_172 = (MXL5005_RegisterInit_0_5 + (8 * 32'd83));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %172 = getelementptr inbounds %struct.TYPE_2__* %5, i32 83, i32 0*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_172_reg <= MXL5005_RegisterInit_0_172;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_172) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_172_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %173 = getelementptr inbounds %struct.TYPE_2__* %5, i32 83, i32 1*/
begin
MXL5005_RegisterInit_0_173 = (MXL5005_RegisterInit_0_5 + ((8 * 32'd83) + 4));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %173 = getelementptr inbounds %struct.TYPE_2__* %5, i32 83, i32 1*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_173_reg <= MXL5005_RegisterInit_0_173;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_173) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_173_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %174 = getelementptr inbounds %struct.TYPE_2__* %5, i32 84, i32 0*/
begin
MXL5005_RegisterInit_0_174 = (MXL5005_RegisterInit_0_5 + (8 * 32'd84));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %174 = getelementptr inbounds %struct.TYPE_2__* %5, i32 84, i32 0*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_174_reg <= MXL5005_RegisterInit_0_174;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_174) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_174_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %175 = getelementptr inbounds %struct.TYPE_2__* %5, i32 84, i32 1*/
begin
MXL5005_RegisterInit_0_175 = (MXL5005_RegisterInit_0_5 + ((8 * 32'd84) + 4));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %175 = getelementptr inbounds %struct.TYPE_2__* %5, i32 84, i32 1*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_175_reg <= MXL5005_RegisterInit_0_175;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_175) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_175_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %176 = getelementptr inbounds %struct.TYPE_2__* %5, i32 85, i32 0*/
begin
MXL5005_RegisterInit_0_176 = (MXL5005_RegisterInit_0_5 + (8 * 32'd85));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %176 = getelementptr inbounds %struct.TYPE_2__* %5, i32 85, i32 0*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_176_reg <= MXL5005_RegisterInit_0_176;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_176) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_176_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %177 = getelementptr inbounds %struct.TYPE_2__* %5, i32 85, i32 1*/
begin
MXL5005_RegisterInit_0_177 = (MXL5005_RegisterInit_0_5 + ((8 * 32'd85) + 4));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %177 = getelementptr inbounds %struct.TYPE_2__* %5, i32 85, i32 1*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_177_reg <= MXL5005_RegisterInit_0_177;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_177) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_177_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %178 = getelementptr inbounds %struct.TYPE_2__* %5, i32 86, i32 0*/
begin
MXL5005_RegisterInit_0_178 = (MXL5005_RegisterInit_0_5 + (8 * 32'd86));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %178 = getelementptr inbounds %struct.TYPE_2__* %5, i32 86, i32 0*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_178_reg <= MXL5005_RegisterInit_0_178;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_178) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_178_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %179 = getelementptr inbounds %struct.TYPE_2__* %5, i32 86, i32 1*/
begin
MXL5005_RegisterInit_0_179 = (MXL5005_RegisterInit_0_5 + ((8 * 32'd86) + 4));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %179 = getelementptr inbounds %struct.TYPE_2__* %5, i32 86, i32 1*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_179_reg <= MXL5005_RegisterInit_0_179;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_179) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_179_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %180 = getelementptr inbounds %struct.TYPE_2__* %5, i32 87, i32 0*/
begin
MXL5005_RegisterInit_0_180 = (MXL5005_RegisterInit_0_5 + (8 * 32'd87));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %180 = getelementptr inbounds %struct.TYPE_2__* %5, i32 87, i32 0*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_180_reg <= MXL5005_RegisterInit_0_180;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_180) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_180_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %181 = getelementptr inbounds %struct.TYPE_2__* %5, i32 87, i32 1*/
begin
MXL5005_RegisterInit_0_181 = (MXL5005_RegisterInit_0_5 + ((8 * 32'd87) + 4));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %181 = getelementptr inbounds %struct.TYPE_2__* %5, i32 87, i32 1*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_181_reg <= MXL5005_RegisterInit_0_181;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_181) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_181_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %182 = getelementptr inbounds %struct.TYPE_2__* %5, i32 88, i32 0*/
begin
MXL5005_RegisterInit_0_182 = (MXL5005_RegisterInit_0_5 + (8 * 32'd88));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %182 = getelementptr inbounds %struct.TYPE_2__* %5, i32 88, i32 0*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_182_reg <= MXL5005_RegisterInit_0_182;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_182) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_182_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %183 = getelementptr inbounds %struct.TYPE_2__* %5, i32 88, i32 1*/
begin
MXL5005_RegisterInit_0_183 = (MXL5005_RegisterInit_0_5 + ((8 * 32'd88) + 4));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %183 = getelementptr inbounds %struct.TYPE_2__* %5, i32 88, i32 1*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_183_reg <= MXL5005_RegisterInit_0_183;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_183) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_183_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %184 = getelementptr inbounds %struct.TYPE_2__* %5, i32 89, i32 0*/
begin
MXL5005_RegisterInit_0_184 = (MXL5005_RegisterInit_0_5 + (8 * 32'd89));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %184 = getelementptr inbounds %struct.TYPE_2__* %5, i32 89, i32 0*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_184_reg <= MXL5005_RegisterInit_0_184;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_184) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_184_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %185 = getelementptr inbounds %struct.TYPE_2__* %5, i32 89, i32 1*/
begin
MXL5005_RegisterInit_0_185 = (MXL5005_RegisterInit_0_5 + ((8 * 32'd89) + 4));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %185 = getelementptr inbounds %struct.TYPE_2__* %5, i32 89, i32 1*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_185_reg <= MXL5005_RegisterInit_0_185;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_185) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_185_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %186 = getelementptr inbounds %struct.TYPE_2__* %5, i32 90, i32 0*/
begin
MXL5005_RegisterInit_0_186 = (MXL5005_RegisterInit_0_5 + (8 * 32'd90));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %186 = getelementptr inbounds %struct.TYPE_2__* %5, i32 90, i32 0*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_186_reg <= MXL5005_RegisterInit_0_186;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_186) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_186_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %187 = getelementptr inbounds %struct.TYPE_2__* %5, i32 90, i32 1*/
begin
MXL5005_RegisterInit_0_187 = (MXL5005_RegisterInit_0_5 + ((8 * 32'd90) + 4));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %187 = getelementptr inbounds %struct.TYPE_2__* %5, i32 90, i32 1*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_187_reg <= MXL5005_RegisterInit_0_187;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_187) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_187_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %188 = getelementptr inbounds %struct.TYPE_2__* %5, i32 91, i32 0*/
begin
MXL5005_RegisterInit_0_188 = (MXL5005_RegisterInit_0_5 + (8 * 32'd91));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %188 = getelementptr inbounds %struct.TYPE_2__* %5, i32 91, i32 0*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_188_reg <= MXL5005_RegisterInit_0_188;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_188) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_188_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %189 = getelementptr inbounds %struct.TYPE_2__* %5, i32 91, i32 1*/
begin
MXL5005_RegisterInit_0_189 = (MXL5005_RegisterInit_0_5 + ((8 * 32'd91) + 4));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %189 = getelementptr inbounds %struct.TYPE_2__* %5, i32 91, i32 1*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_189_reg <= MXL5005_RegisterInit_0_189;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_189) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_189_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %190 = getelementptr inbounds %struct.TYPE_2__* %5, i32 92, i32 0*/
begin
MXL5005_RegisterInit_0_190 = (MXL5005_RegisterInit_0_5 + (8 * 32'd92));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %190 = getelementptr inbounds %struct.TYPE_2__* %5, i32 92, i32 0*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_190_reg <= MXL5005_RegisterInit_0_190;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_190) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_190_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %191 = getelementptr inbounds %struct.TYPE_2__* %5, i32 92, i32 1*/
begin
MXL5005_RegisterInit_0_191 = (MXL5005_RegisterInit_0_5 + ((8 * 32'd92) + 4));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %191 = getelementptr inbounds %struct.TYPE_2__* %5, i32 92, i32 1*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_191_reg <= MXL5005_RegisterInit_0_191;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_191) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_191_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %192 = getelementptr inbounds %struct.TYPE_2__* %5, i32 93, i32 0*/
begin
MXL5005_RegisterInit_0_192 = (MXL5005_RegisterInit_0_5 + (8 * 32'd93));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %192 = getelementptr inbounds %struct.TYPE_2__* %5, i32 93, i32 0*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_192_reg <= MXL5005_RegisterInit_0_192;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_192) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_192_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %193 = getelementptr inbounds %struct.TYPE_2__* %5, i32 93, i32 1*/
begin
MXL5005_RegisterInit_0_193 = (MXL5005_RegisterInit_0_5 + ((8 * 32'd93) + 4));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %193 = getelementptr inbounds %struct.TYPE_2__* %5, i32 93, i32 1*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_193_reg <= MXL5005_RegisterInit_0_193;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_193) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_193_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %194 = getelementptr inbounds %struct.TYPE_2__* %5, i32 94, i32 0*/
begin
MXL5005_RegisterInit_0_194 = (MXL5005_RegisterInit_0_5 + (8 * 32'd94));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %194 = getelementptr inbounds %struct.TYPE_2__* %5, i32 94, i32 0*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_194_reg <= MXL5005_RegisterInit_0_194;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_194) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_194_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %195 = getelementptr inbounds %struct.TYPE_2__* %5, i32 94, i32 1*/
begin
MXL5005_RegisterInit_0_195 = (MXL5005_RegisterInit_0_5 + ((8 * 32'd94) + 4));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %195 = getelementptr inbounds %struct.TYPE_2__* %5, i32 94, i32 1*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_195_reg <= MXL5005_RegisterInit_0_195;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_195) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_195_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %196 = getelementptr inbounds %struct.TYPE_2__* %5, i32 95, i32 0*/
begin
MXL5005_RegisterInit_0_196 = (MXL5005_RegisterInit_0_5 + (8 * 32'd95));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %196 = getelementptr inbounds %struct.TYPE_2__* %5, i32 95, i32 0*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_196_reg <= MXL5005_RegisterInit_0_196;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_196) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_196_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %197 = getelementptr inbounds %struct.TYPE_2__* %5, i32 95, i32 1*/
begin
MXL5005_RegisterInit_0_197 = (MXL5005_RegisterInit_0_5 + ((8 * 32'd95) + 4));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %197 = getelementptr inbounds %struct.TYPE_2__* %5, i32 95, i32 1*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_197_reg <= MXL5005_RegisterInit_0_197;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_197) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_197_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %198 = getelementptr inbounds %struct.TYPE_2__* %5, i32 96, i32 0*/
begin
MXL5005_RegisterInit_0_198 = (MXL5005_RegisterInit_0_5 + (8 * 32'd96));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %198 = getelementptr inbounds %struct.TYPE_2__* %5, i32 96, i32 0*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_198_reg <= MXL5005_RegisterInit_0_198;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_198) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_198_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %199 = getelementptr inbounds %struct.TYPE_2__* %5, i32 96, i32 1*/
begin
MXL5005_RegisterInit_0_199 = (MXL5005_RegisterInit_0_5 + ((8 * 32'd96) + 4));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %199 = getelementptr inbounds %struct.TYPE_2__* %5, i32 96, i32 1*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_199_reg <= MXL5005_RegisterInit_0_199;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_199) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_199_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %200 = getelementptr inbounds %struct.TYPE_2__* %5, i32 97, i32 0*/
begin
MXL5005_RegisterInit_0_200 = (MXL5005_RegisterInit_0_5 + (8 * 32'd97));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %200 = getelementptr inbounds %struct.TYPE_2__* %5, i32 97, i32 0*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_200_reg <= MXL5005_RegisterInit_0_200;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_200) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_200_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %201 = getelementptr inbounds %struct.TYPE_2__* %5, i32 97, i32 1*/
begin
MXL5005_RegisterInit_0_201 = (MXL5005_RegisterInit_0_5 + ((8 * 32'd97) + 4));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %201 = getelementptr inbounds %struct.TYPE_2__* %5, i32 97, i32 1*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_201_reg <= MXL5005_RegisterInit_0_201;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_201) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_201_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %202 = getelementptr inbounds %struct.TYPE_2__* %5, i32 98, i32 0*/
begin
MXL5005_RegisterInit_0_202 = (MXL5005_RegisterInit_0_5 + (8 * 32'd98));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %202 = getelementptr inbounds %struct.TYPE_2__* %5, i32 98, i32 0*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_202_reg <= MXL5005_RegisterInit_0_202;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_202) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_202_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %203 = getelementptr inbounds %struct.TYPE_2__* %5, i32 98, i32 1*/
begin
MXL5005_RegisterInit_0_203 = (MXL5005_RegisterInit_0_5 + ((8 * 32'd98) + 4));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %203 = getelementptr inbounds %struct.TYPE_2__* %5, i32 98, i32 1*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_203_reg <= MXL5005_RegisterInit_0_203;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_203) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_203_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %204 = getelementptr inbounds %struct.TYPE_2__* %5, i32 99, i32 0*/
begin
MXL5005_RegisterInit_0_204 = (MXL5005_RegisterInit_0_5 + (8 * 32'd99));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %204 = getelementptr inbounds %struct.TYPE_2__* %5, i32 99, i32 0*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_204_reg <= MXL5005_RegisterInit_0_204;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_204) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_204_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %205 = getelementptr inbounds %struct.TYPE_2__* %5, i32 99, i32 1*/
begin
MXL5005_RegisterInit_0_205 = (MXL5005_RegisterInit_0_5 + ((8 * 32'd99) + 4));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %205 = getelementptr inbounds %struct.TYPE_2__* %5, i32 99, i32 1*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_205_reg <= MXL5005_RegisterInit_0_205;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_205) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_205_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %206 = getelementptr inbounds %struct.TYPE_2__* %5, i32 100, i32 0*/
begin
MXL5005_RegisterInit_0_206 = (MXL5005_RegisterInit_0_5 + (8 * 32'd100));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %206 = getelementptr inbounds %struct.TYPE_2__* %5, i32 100, i32 0*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_206_reg <= MXL5005_RegisterInit_0_206;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_206) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_206_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %207 = getelementptr inbounds %struct.TYPE_2__* %5, i32 100, i32 1*/
begin
MXL5005_RegisterInit_0_207 = (MXL5005_RegisterInit_0_5 + ((8 * 32'd100) + 4));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %207 = getelementptr inbounds %struct.TYPE_2__* %5, i32 100, i32 1*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_207_reg <= MXL5005_RegisterInit_0_207;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_207) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_207_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %208 = getelementptr inbounds %struct.TYPE_2__* %5, i32 101, i32 0*/
begin
MXL5005_RegisterInit_0_208 = (MXL5005_RegisterInit_0_5 + (8 * 32'd101));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %208 = getelementptr inbounds %struct.TYPE_2__* %5, i32 101, i32 0*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_208_reg <= MXL5005_RegisterInit_0_208;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_208) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_208_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %209 = getelementptr inbounds %struct.TYPE_2__* %5, i32 101, i32 1*/
begin
MXL5005_RegisterInit_0_209 = (MXL5005_RegisterInit_0_5 + ((8 * 32'd101) + 4));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %209 = getelementptr inbounds %struct.TYPE_2__* %5, i32 101, i32 1*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_209_reg <= MXL5005_RegisterInit_0_209;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_209) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_209_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %210 = getelementptr inbounds %struct.TYPE_2__* %5, i32 102, i32 0*/
begin
MXL5005_RegisterInit_0_210 = (MXL5005_RegisterInit_0_5 + (8 * 32'd102));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %210 = getelementptr inbounds %struct.TYPE_2__* %5, i32 102, i32 0*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_210_reg <= MXL5005_RegisterInit_0_210;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_210) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_210_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %211 = getelementptr inbounds %struct.TYPE_2__* %5, i32 102, i32 1*/
begin
MXL5005_RegisterInit_0_211 = (MXL5005_RegisterInit_0_5 + ((8 * 32'd102) + 4));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %211 = getelementptr inbounds %struct.TYPE_2__* %5, i32 102, i32 1*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_211_reg <= MXL5005_RegisterInit_0_211;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_211) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_211_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %212 = getelementptr inbounds %struct.TYPE_2__* %5, i32 103, i32 0*/
begin
MXL5005_RegisterInit_0_212 = (MXL5005_RegisterInit_0_5 + (8 * 32'd103));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %212 = getelementptr inbounds %struct.TYPE_2__* %5, i32 103, i32 0*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_212_reg <= MXL5005_RegisterInit_0_212;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_212) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_212_reg"); $finish; end
end
end
always @(*) begin
/* MXL5005_RegisterInit: %0*/
/*   %213 = getelementptr inbounds %struct.TYPE_2__* %5, i32 103, i32 1*/
begin
MXL5005_RegisterInit_0_213 = (MXL5005_RegisterInit_0_5 + ((8 * 32'd103) + 4));
end
end
always @(posedge clk) begin
/* MXL5005_RegisterInit: %0*/
/*   %213 = getelementptr inbounds %struct.TYPE_2__* %5, i32 103, i32 1*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
MXL5005_RegisterInit_0_213_reg <= MXL5005_RegisterInit_0_213;
if (reset == 1'b0 && ^(MXL5005_RegisterInit_0_213) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_0_213_reg"); $finish; end
end
end
always @(posedge clk) begin
if ((cur_state == LEGUP_0))
begin
finish <= 1'd0;
if (reset == 1'b0 && ^(1'd0) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to finish"); $finish; end
end
/* MXL5005_RegisterInit: %0*/
/*   ret i32 0*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_109))
begin
finish <= (memory_controller_waitrequest == 1'd0);
if (reset == 1'b0 && ^((memory_controller_waitrequest == 1'd0)) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to finish"); $finish; end
end
end
always @(*) begin
memory_controller_enable_a = 1'd0;
if ((cur_state == LEGUP_0))
begin
memory_controller_enable_a = 1'd0;
end
/* MXL5005_RegisterInit: %0*/
/*   %2 = load %struct.mxl5005s_state** %1, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_1))
begin
memory_controller_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 0, i32* %3, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_3))
begin
memory_controller_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 9, i32* %6, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
memory_controller_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 11, i32* %8, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_6))
begin
memory_controller_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 12, i32* %10, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_7))
begin
memory_controller_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 13, i32* %12, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_8))
begin
memory_controller_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 14, i32* %14, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_9))
begin
memory_controller_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 15, i32* %16, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_10))
begin
memory_controller_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 16, i32* %18, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_11))
begin
memory_controller_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 17, i32* %20, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_12))
begin
memory_controller_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 18, i32* %22, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_13))
begin
memory_controller_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 19, i32* %24, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_14))
begin
memory_controller_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 21, i32* %26, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_15))
begin
memory_controller_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 22, i32* %28, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_16))
begin
memory_controller_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 23, i32* %30, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_17))
begin
memory_controller_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 24, i32* %32, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_18))
begin
memory_controller_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 25, i32* %34, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_19))
begin
memory_controller_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 26, i32* %36, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_20))
begin
memory_controller_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 31, i32* %38, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_21))
begin
memory_controller_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 32, i32* %40, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_22))
begin
memory_controller_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 33, i32* %42, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_23))
begin
memory_controller_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 34, i32* %44, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_24))
begin
memory_controller_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 35, i32* %46, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_25))
begin
memory_controller_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 36, i32* %48, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_26))
begin
memory_controller_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 37, i32* %50, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_27))
begin
memory_controller_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 41, i32* %52, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_28))
begin
memory_controller_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 42, i32* %54, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_29))
begin
memory_controller_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 43, i32* %56, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_30))
begin
memory_controller_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 44, i32* %58, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_31))
begin
memory_controller_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 45, i32* %60, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_32))
begin
memory_controller_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 46, i32* %62, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_33))
begin
memory_controller_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 47, i32* %64, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_34))
begin
memory_controller_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 48, i32* %66, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_35))
begin
memory_controller_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 49, i32* %68, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_36))
begin
memory_controller_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 53, i32* %70, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_37))
begin
memory_controller_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 54, i32* %72, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_38))
begin
memory_controller_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 55, i32* %74, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_39))
begin
memory_controller_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 56, i32* %76, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_40))
begin
memory_controller_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 57, i32* %78, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_41))
begin
memory_controller_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 58, i32* %80, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_42))
begin
memory_controller_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 59, i32* %82, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_43))
begin
memory_controller_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 60, i32* %84, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_44))
begin
memory_controller_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 61, i32* %86, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_45))
begin
memory_controller_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 62, i32* %88, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_46))
begin
memory_controller_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 65, i32* %90, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_47))
begin
memory_controller_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 66, i32* %92, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_48))
begin
memory_controller_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 67, i32* %94, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_49))
begin
memory_controller_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 68, i32* %96, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_50))
begin
memory_controller_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 69, i32* %98, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_51))
begin
memory_controller_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 70, i32* %100, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_52))
begin
memory_controller_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 71, i32* %102, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_53))
begin
memory_controller_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 72, i32* %104, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_54))
begin
memory_controller_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 73, i32* %106, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_55))
begin
memory_controller_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 76, i32* %108, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_56))
begin
memory_controller_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 77, i32* %110, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_57))
begin
memory_controller_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 81, i32* %112, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_58))
begin
memory_controller_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 82, i32* %114, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_59))
begin
memory_controller_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 83, i32* %116, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_60))
begin
memory_controller_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 84, i32* %118, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_61))
begin
memory_controller_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 85, i32* %120, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_62))
begin
memory_controller_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 91, i32* %122, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_63))
begin
memory_controller_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 92, i32* %124, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_64))
begin
memory_controller_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 93, i32* %126, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_65))
begin
memory_controller_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 94, i32* %128, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_66))
begin
memory_controller_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 95, i32* %130, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_67))
begin
memory_controller_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 96, i32* %132, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_68))
begin
memory_controller_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 97, i32* %134, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_69))
begin
memory_controller_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 98, i32* %136, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_70))
begin
memory_controller_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 99, i32* %138, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_71))
begin
memory_controller_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 100, i32* %140, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_72))
begin
memory_controller_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 101, i32* %142, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_73))
begin
memory_controller_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 102, i32* %144, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_74))
begin
memory_controller_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 103, i32* %146, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_75))
begin
memory_controller_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 104, i32* %148, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_76))
begin
memory_controller_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 105, i32* %150, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_77))
begin
memory_controller_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 106, i32* %152, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_78))
begin
memory_controller_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 107, i32* %154, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_79))
begin
memory_controller_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 108, i32* %156, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_80))
begin
memory_controller_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 109, i32* %158, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_81))
begin
memory_controller_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 110, i32* %160, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_82))
begin
memory_controller_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 111, i32* %162, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_83))
begin
memory_controller_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 112, i32* %164, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_84))
begin
memory_controller_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 131, i32* %166, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_85))
begin
memory_controller_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 132, i32* %168, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_86))
begin
memory_controller_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 133, i32* %170, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_87))
begin
memory_controller_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 134, i32* %172, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_88))
begin
memory_controller_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 135, i32* %174, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_89))
begin
memory_controller_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 136, i32* %176, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_90))
begin
memory_controller_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 137, i32* %178, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_91))
begin
memory_controller_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 138, i32* %180, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_92))
begin
memory_controller_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 146, i32* %182, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_93))
begin
memory_controller_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 147, i32* %184, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_94))
begin
memory_controller_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 148, i32* %186, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_95))
begin
memory_controller_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 149, i32* %188, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_96))
begin
memory_controller_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 150, i32* %190, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_97))
begin
memory_controller_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 156, i32* %192, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_98))
begin
memory_controller_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 157, i32* %194, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_99))
begin
memory_controller_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 158, i32* %196, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_100))
begin
memory_controller_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 159, i32* %198, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_101))
begin
memory_controller_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 160, i32* %200, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_102))
begin
memory_controller_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 161, i32* %202, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_103))
begin
memory_controller_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 162, i32* %204, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_104))
begin
memory_controller_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 166, i32* %206, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_105))
begin
memory_controller_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 167, i32* %208, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_106))
begin
memory_controller_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 168, i32* %210, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_107))
begin
memory_controller_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 195, i32* %212, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_108))
begin
memory_controller_enable_a = 1'd1;
end
end
always @(*) begin
memory_controller_address_a = 1'd0;
if ((cur_state == LEGUP_0))
begin
memory_controller_address_a = 1'd0;
end
/* MXL5005_RegisterInit: %0*/
/*   %2 = load %struct.mxl5005s_state** %1, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_1))
begin
memory_controller_address_a = MXL5005_RegisterInit_0_1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 0, i32* %3, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_3))
begin
memory_controller_address_a = MXL5005_RegisterInit_0_3;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 9, i32* %6, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
memory_controller_address_a = MXL5005_RegisterInit_0_6;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 11, i32* %8, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_6))
begin
memory_controller_address_a = MXL5005_RegisterInit_0_8_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 12, i32* %10, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_7))
begin
memory_controller_address_a = MXL5005_RegisterInit_0_10_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 13, i32* %12, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_8))
begin
memory_controller_address_a = MXL5005_RegisterInit_0_12_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 14, i32* %14, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_9))
begin
memory_controller_address_a = MXL5005_RegisterInit_0_14_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 15, i32* %16, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_10))
begin
memory_controller_address_a = MXL5005_RegisterInit_0_16_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 16, i32* %18, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_11))
begin
memory_controller_address_a = MXL5005_RegisterInit_0_18_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 17, i32* %20, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_12))
begin
memory_controller_address_a = MXL5005_RegisterInit_0_20_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 18, i32* %22, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_13))
begin
memory_controller_address_a = MXL5005_RegisterInit_0_22_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 19, i32* %24, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_14))
begin
memory_controller_address_a = MXL5005_RegisterInit_0_24_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 21, i32* %26, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_15))
begin
memory_controller_address_a = MXL5005_RegisterInit_0_26_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 22, i32* %28, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_16))
begin
memory_controller_address_a = MXL5005_RegisterInit_0_28_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 23, i32* %30, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_17))
begin
memory_controller_address_a = MXL5005_RegisterInit_0_30_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 24, i32* %32, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_18))
begin
memory_controller_address_a = MXL5005_RegisterInit_0_32_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 25, i32* %34, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_19))
begin
memory_controller_address_a = MXL5005_RegisterInit_0_34_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 26, i32* %36, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_20))
begin
memory_controller_address_a = MXL5005_RegisterInit_0_36_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 31, i32* %38, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_21))
begin
memory_controller_address_a = MXL5005_RegisterInit_0_38_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 32, i32* %40, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_22))
begin
memory_controller_address_a = MXL5005_RegisterInit_0_40_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 33, i32* %42, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_23))
begin
memory_controller_address_a = MXL5005_RegisterInit_0_42_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 34, i32* %44, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_24))
begin
memory_controller_address_a = MXL5005_RegisterInit_0_44_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 35, i32* %46, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_25))
begin
memory_controller_address_a = MXL5005_RegisterInit_0_46_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 36, i32* %48, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_26))
begin
memory_controller_address_a = MXL5005_RegisterInit_0_48_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 37, i32* %50, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_27))
begin
memory_controller_address_a = MXL5005_RegisterInit_0_50_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 41, i32* %52, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_28))
begin
memory_controller_address_a = MXL5005_RegisterInit_0_52_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 42, i32* %54, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_29))
begin
memory_controller_address_a = MXL5005_RegisterInit_0_54_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 43, i32* %56, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_30))
begin
memory_controller_address_a = MXL5005_RegisterInit_0_56_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 44, i32* %58, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_31))
begin
memory_controller_address_a = MXL5005_RegisterInit_0_58_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 45, i32* %60, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_32))
begin
memory_controller_address_a = MXL5005_RegisterInit_0_60_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 46, i32* %62, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_33))
begin
memory_controller_address_a = MXL5005_RegisterInit_0_62_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 47, i32* %64, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_34))
begin
memory_controller_address_a = MXL5005_RegisterInit_0_64_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 48, i32* %66, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_35))
begin
memory_controller_address_a = MXL5005_RegisterInit_0_66_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 49, i32* %68, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_36))
begin
memory_controller_address_a = MXL5005_RegisterInit_0_68_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 53, i32* %70, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_37))
begin
memory_controller_address_a = MXL5005_RegisterInit_0_70_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 54, i32* %72, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_38))
begin
memory_controller_address_a = MXL5005_RegisterInit_0_72_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 55, i32* %74, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_39))
begin
memory_controller_address_a = MXL5005_RegisterInit_0_74_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 56, i32* %76, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_40))
begin
memory_controller_address_a = MXL5005_RegisterInit_0_76_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 57, i32* %78, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_41))
begin
memory_controller_address_a = MXL5005_RegisterInit_0_78_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 58, i32* %80, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_42))
begin
memory_controller_address_a = MXL5005_RegisterInit_0_80_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 59, i32* %82, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_43))
begin
memory_controller_address_a = MXL5005_RegisterInit_0_82_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 60, i32* %84, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_44))
begin
memory_controller_address_a = MXL5005_RegisterInit_0_84_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 61, i32* %86, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_45))
begin
memory_controller_address_a = MXL5005_RegisterInit_0_86_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 62, i32* %88, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_46))
begin
memory_controller_address_a = MXL5005_RegisterInit_0_88_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 65, i32* %90, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_47))
begin
memory_controller_address_a = MXL5005_RegisterInit_0_90_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 66, i32* %92, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_48))
begin
memory_controller_address_a = MXL5005_RegisterInit_0_92_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 67, i32* %94, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_49))
begin
memory_controller_address_a = MXL5005_RegisterInit_0_94_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 68, i32* %96, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_50))
begin
memory_controller_address_a = MXL5005_RegisterInit_0_96_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 69, i32* %98, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_51))
begin
memory_controller_address_a = MXL5005_RegisterInit_0_98_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 70, i32* %100, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_52))
begin
memory_controller_address_a = MXL5005_RegisterInit_0_100_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 71, i32* %102, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_53))
begin
memory_controller_address_a = MXL5005_RegisterInit_0_102_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 72, i32* %104, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_54))
begin
memory_controller_address_a = MXL5005_RegisterInit_0_104_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 73, i32* %106, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_55))
begin
memory_controller_address_a = MXL5005_RegisterInit_0_106_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 76, i32* %108, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_56))
begin
memory_controller_address_a = MXL5005_RegisterInit_0_108_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 77, i32* %110, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_57))
begin
memory_controller_address_a = MXL5005_RegisterInit_0_110_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 81, i32* %112, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_58))
begin
memory_controller_address_a = MXL5005_RegisterInit_0_112_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 82, i32* %114, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_59))
begin
memory_controller_address_a = MXL5005_RegisterInit_0_114_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 83, i32* %116, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_60))
begin
memory_controller_address_a = MXL5005_RegisterInit_0_116_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 84, i32* %118, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_61))
begin
memory_controller_address_a = MXL5005_RegisterInit_0_118_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 85, i32* %120, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_62))
begin
memory_controller_address_a = MXL5005_RegisterInit_0_120_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 91, i32* %122, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_63))
begin
memory_controller_address_a = MXL5005_RegisterInit_0_122_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 92, i32* %124, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_64))
begin
memory_controller_address_a = MXL5005_RegisterInit_0_124_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 93, i32* %126, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_65))
begin
memory_controller_address_a = MXL5005_RegisterInit_0_126_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 94, i32* %128, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_66))
begin
memory_controller_address_a = MXL5005_RegisterInit_0_128_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 95, i32* %130, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_67))
begin
memory_controller_address_a = MXL5005_RegisterInit_0_130_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 96, i32* %132, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_68))
begin
memory_controller_address_a = MXL5005_RegisterInit_0_132_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 97, i32* %134, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_69))
begin
memory_controller_address_a = MXL5005_RegisterInit_0_134_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 98, i32* %136, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_70))
begin
memory_controller_address_a = MXL5005_RegisterInit_0_136_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 99, i32* %138, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_71))
begin
memory_controller_address_a = MXL5005_RegisterInit_0_138_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 100, i32* %140, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_72))
begin
memory_controller_address_a = MXL5005_RegisterInit_0_140_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 101, i32* %142, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_73))
begin
memory_controller_address_a = MXL5005_RegisterInit_0_142_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 102, i32* %144, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_74))
begin
memory_controller_address_a = MXL5005_RegisterInit_0_144_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 103, i32* %146, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_75))
begin
memory_controller_address_a = MXL5005_RegisterInit_0_146_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 104, i32* %148, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_76))
begin
memory_controller_address_a = MXL5005_RegisterInit_0_148_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 105, i32* %150, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_77))
begin
memory_controller_address_a = MXL5005_RegisterInit_0_150_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 106, i32* %152, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_78))
begin
memory_controller_address_a = MXL5005_RegisterInit_0_152_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 107, i32* %154, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_79))
begin
memory_controller_address_a = MXL5005_RegisterInit_0_154_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 108, i32* %156, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_80))
begin
memory_controller_address_a = MXL5005_RegisterInit_0_156_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 109, i32* %158, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_81))
begin
memory_controller_address_a = MXL5005_RegisterInit_0_158_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 110, i32* %160, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_82))
begin
memory_controller_address_a = MXL5005_RegisterInit_0_160_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 111, i32* %162, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_83))
begin
memory_controller_address_a = MXL5005_RegisterInit_0_162_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 112, i32* %164, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_84))
begin
memory_controller_address_a = MXL5005_RegisterInit_0_164_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 131, i32* %166, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_85))
begin
memory_controller_address_a = MXL5005_RegisterInit_0_166_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 132, i32* %168, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_86))
begin
memory_controller_address_a = MXL5005_RegisterInit_0_168_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 133, i32* %170, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_87))
begin
memory_controller_address_a = MXL5005_RegisterInit_0_170_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 134, i32* %172, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_88))
begin
memory_controller_address_a = MXL5005_RegisterInit_0_172_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 135, i32* %174, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_89))
begin
memory_controller_address_a = MXL5005_RegisterInit_0_174_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 136, i32* %176, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_90))
begin
memory_controller_address_a = MXL5005_RegisterInit_0_176_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 137, i32* %178, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_91))
begin
memory_controller_address_a = MXL5005_RegisterInit_0_178_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 138, i32* %180, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_92))
begin
memory_controller_address_a = MXL5005_RegisterInit_0_180_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 146, i32* %182, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_93))
begin
memory_controller_address_a = MXL5005_RegisterInit_0_182_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 147, i32* %184, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_94))
begin
memory_controller_address_a = MXL5005_RegisterInit_0_184_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 148, i32* %186, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_95))
begin
memory_controller_address_a = MXL5005_RegisterInit_0_186_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 149, i32* %188, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_96))
begin
memory_controller_address_a = MXL5005_RegisterInit_0_188_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 150, i32* %190, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_97))
begin
memory_controller_address_a = MXL5005_RegisterInit_0_190_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 156, i32* %192, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_98))
begin
memory_controller_address_a = MXL5005_RegisterInit_0_192_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 157, i32* %194, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_99))
begin
memory_controller_address_a = MXL5005_RegisterInit_0_194_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 158, i32* %196, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_100))
begin
memory_controller_address_a = MXL5005_RegisterInit_0_196_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 159, i32* %198, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_101))
begin
memory_controller_address_a = MXL5005_RegisterInit_0_198_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 160, i32* %200, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_102))
begin
memory_controller_address_a = MXL5005_RegisterInit_0_200_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 161, i32* %202, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_103))
begin
memory_controller_address_a = MXL5005_RegisterInit_0_202_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 162, i32* %204, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_104))
begin
memory_controller_address_a = MXL5005_RegisterInit_0_204_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 166, i32* %206, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_105))
begin
memory_controller_address_a = MXL5005_RegisterInit_0_206_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 167, i32* %208, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_106))
begin
memory_controller_address_a = MXL5005_RegisterInit_0_208_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 168, i32* %210, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_107))
begin
memory_controller_address_a = MXL5005_RegisterInit_0_210_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 195, i32* %212, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_108))
begin
memory_controller_address_a = MXL5005_RegisterInit_0_212_reg;
end
end
always @(*) begin
memory_controller_write_enable_a = 1'd0;
if ((cur_state == LEGUP_0))
begin
memory_controller_write_enable_a = 1'd0;
end
/* MXL5005_RegisterInit: %0*/
/*   %2 = load %struct.mxl5005s_state** %1, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_1))
begin
memory_controller_write_enable_a = 1'd0;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 0, i32* %3, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_3))
begin
memory_controller_write_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 9, i32* %6, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
memory_controller_write_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 11, i32* %8, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_6))
begin
memory_controller_write_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 12, i32* %10, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_7))
begin
memory_controller_write_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 13, i32* %12, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_8))
begin
memory_controller_write_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 14, i32* %14, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_9))
begin
memory_controller_write_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 15, i32* %16, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_10))
begin
memory_controller_write_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 16, i32* %18, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_11))
begin
memory_controller_write_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 17, i32* %20, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_12))
begin
memory_controller_write_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 18, i32* %22, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_13))
begin
memory_controller_write_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 19, i32* %24, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_14))
begin
memory_controller_write_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 21, i32* %26, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_15))
begin
memory_controller_write_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 22, i32* %28, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_16))
begin
memory_controller_write_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 23, i32* %30, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_17))
begin
memory_controller_write_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 24, i32* %32, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_18))
begin
memory_controller_write_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 25, i32* %34, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_19))
begin
memory_controller_write_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 26, i32* %36, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_20))
begin
memory_controller_write_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 31, i32* %38, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_21))
begin
memory_controller_write_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 32, i32* %40, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_22))
begin
memory_controller_write_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 33, i32* %42, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_23))
begin
memory_controller_write_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 34, i32* %44, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_24))
begin
memory_controller_write_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 35, i32* %46, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_25))
begin
memory_controller_write_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 36, i32* %48, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_26))
begin
memory_controller_write_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 37, i32* %50, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_27))
begin
memory_controller_write_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 41, i32* %52, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_28))
begin
memory_controller_write_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 42, i32* %54, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_29))
begin
memory_controller_write_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 43, i32* %56, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_30))
begin
memory_controller_write_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 44, i32* %58, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_31))
begin
memory_controller_write_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 45, i32* %60, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_32))
begin
memory_controller_write_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 46, i32* %62, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_33))
begin
memory_controller_write_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 47, i32* %64, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_34))
begin
memory_controller_write_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 48, i32* %66, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_35))
begin
memory_controller_write_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 49, i32* %68, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_36))
begin
memory_controller_write_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 53, i32* %70, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_37))
begin
memory_controller_write_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 54, i32* %72, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_38))
begin
memory_controller_write_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 55, i32* %74, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_39))
begin
memory_controller_write_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 56, i32* %76, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_40))
begin
memory_controller_write_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 57, i32* %78, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_41))
begin
memory_controller_write_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 58, i32* %80, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_42))
begin
memory_controller_write_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 59, i32* %82, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_43))
begin
memory_controller_write_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 60, i32* %84, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_44))
begin
memory_controller_write_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 61, i32* %86, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_45))
begin
memory_controller_write_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 62, i32* %88, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_46))
begin
memory_controller_write_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 65, i32* %90, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_47))
begin
memory_controller_write_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 66, i32* %92, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_48))
begin
memory_controller_write_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 67, i32* %94, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_49))
begin
memory_controller_write_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 68, i32* %96, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_50))
begin
memory_controller_write_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 69, i32* %98, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_51))
begin
memory_controller_write_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 70, i32* %100, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_52))
begin
memory_controller_write_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 71, i32* %102, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_53))
begin
memory_controller_write_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 72, i32* %104, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_54))
begin
memory_controller_write_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 73, i32* %106, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_55))
begin
memory_controller_write_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 76, i32* %108, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_56))
begin
memory_controller_write_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 77, i32* %110, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_57))
begin
memory_controller_write_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 81, i32* %112, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_58))
begin
memory_controller_write_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 82, i32* %114, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_59))
begin
memory_controller_write_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 83, i32* %116, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_60))
begin
memory_controller_write_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 84, i32* %118, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_61))
begin
memory_controller_write_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 85, i32* %120, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_62))
begin
memory_controller_write_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 91, i32* %122, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_63))
begin
memory_controller_write_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 92, i32* %124, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_64))
begin
memory_controller_write_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 93, i32* %126, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_65))
begin
memory_controller_write_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 94, i32* %128, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_66))
begin
memory_controller_write_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 95, i32* %130, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_67))
begin
memory_controller_write_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 96, i32* %132, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_68))
begin
memory_controller_write_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 97, i32* %134, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_69))
begin
memory_controller_write_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 98, i32* %136, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_70))
begin
memory_controller_write_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 99, i32* %138, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_71))
begin
memory_controller_write_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 100, i32* %140, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_72))
begin
memory_controller_write_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 101, i32* %142, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_73))
begin
memory_controller_write_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 102, i32* %144, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_74))
begin
memory_controller_write_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 103, i32* %146, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_75))
begin
memory_controller_write_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 104, i32* %148, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_76))
begin
memory_controller_write_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 105, i32* %150, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_77))
begin
memory_controller_write_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 106, i32* %152, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_78))
begin
memory_controller_write_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 107, i32* %154, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_79))
begin
memory_controller_write_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 108, i32* %156, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_80))
begin
memory_controller_write_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 109, i32* %158, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_81))
begin
memory_controller_write_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 110, i32* %160, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_82))
begin
memory_controller_write_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 111, i32* %162, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_83))
begin
memory_controller_write_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 112, i32* %164, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_84))
begin
memory_controller_write_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 131, i32* %166, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_85))
begin
memory_controller_write_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 132, i32* %168, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_86))
begin
memory_controller_write_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 133, i32* %170, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_87))
begin
memory_controller_write_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 134, i32* %172, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_88))
begin
memory_controller_write_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 135, i32* %174, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_89))
begin
memory_controller_write_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 136, i32* %176, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_90))
begin
memory_controller_write_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 137, i32* %178, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_91))
begin
memory_controller_write_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 138, i32* %180, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_92))
begin
memory_controller_write_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 146, i32* %182, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_93))
begin
memory_controller_write_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 147, i32* %184, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_94))
begin
memory_controller_write_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 148, i32* %186, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_95))
begin
memory_controller_write_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 149, i32* %188, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_96))
begin
memory_controller_write_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 150, i32* %190, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_97))
begin
memory_controller_write_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 156, i32* %192, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_98))
begin
memory_controller_write_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 157, i32* %194, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_99))
begin
memory_controller_write_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 158, i32* %196, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_100))
begin
memory_controller_write_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 159, i32* %198, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_101))
begin
memory_controller_write_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 160, i32* %200, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_102))
begin
memory_controller_write_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 161, i32* %202, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_103))
begin
memory_controller_write_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 162, i32* %204, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_104))
begin
memory_controller_write_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 166, i32* %206, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_105))
begin
memory_controller_write_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 167, i32* %208, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_106))
begin
memory_controller_write_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 168, i32* %210, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_107))
begin
memory_controller_write_enable_a = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 195, i32* %212, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_108))
begin
memory_controller_write_enable_a = 1'd1;
end
end
always @(*) begin
memory_controller_in_a = 1'd0;
if ((cur_state == LEGUP_0))
begin
memory_controller_in_a = 1'd0;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 0, i32* %3, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_3))
begin
memory_controller_in_a = 32'd0;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 9, i32* %6, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
memory_controller_in_a = 32'd9;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 11, i32* %8, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_6))
begin
memory_controller_in_a = 32'd11;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 12, i32* %10, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_7))
begin
memory_controller_in_a = 32'd12;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 13, i32* %12, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_8))
begin
memory_controller_in_a = 32'd13;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 14, i32* %14, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_9))
begin
memory_controller_in_a = 32'd14;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 15, i32* %16, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_10))
begin
memory_controller_in_a = 32'd15;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 16, i32* %18, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_11))
begin
memory_controller_in_a = 32'd16;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 17, i32* %20, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_12))
begin
memory_controller_in_a = 32'd17;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 18, i32* %22, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_13))
begin
memory_controller_in_a = 32'd18;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 19, i32* %24, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_14))
begin
memory_controller_in_a = 32'd19;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 21, i32* %26, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_15))
begin
memory_controller_in_a = 32'd21;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 22, i32* %28, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_16))
begin
memory_controller_in_a = 32'd22;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 23, i32* %30, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_17))
begin
memory_controller_in_a = 32'd23;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 24, i32* %32, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_18))
begin
memory_controller_in_a = 32'd24;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 25, i32* %34, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_19))
begin
memory_controller_in_a = 32'd25;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 26, i32* %36, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_20))
begin
memory_controller_in_a = 32'd26;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 31, i32* %38, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_21))
begin
memory_controller_in_a = 32'd31;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 32, i32* %40, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_22))
begin
memory_controller_in_a = 32'd32;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 33, i32* %42, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_23))
begin
memory_controller_in_a = 32'd33;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 34, i32* %44, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_24))
begin
memory_controller_in_a = 32'd34;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 35, i32* %46, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_25))
begin
memory_controller_in_a = 32'd35;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 36, i32* %48, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_26))
begin
memory_controller_in_a = 32'd36;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 37, i32* %50, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_27))
begin
memory_controller_in_a = 32'd37;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 41, i32* %52, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_28))
begin
memory_controller_in_a = 32'd41;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 42, i32* %54, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_29))
begin
memory_controller_in_a = 32'd42;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 43, i32* %56, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_30))
begin
memory_controller_in_a = 32'd43;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 44, i32* %58, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_31))
begin
memory_controller_in_a = 32'd44;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 45, i32* %60, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_32))
begin
memory_controller_in_a = 32'd45;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 46, i32* %62, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_33))
begin
memory_controller_in_a = 32'd46;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 47, i32* %64, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_34))
begin
memory_controller_in_a = 32'd47;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 48, i32* %66, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_35))
begin
memory_controller_in_a = 32'd48;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 49, i32* %68, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_36))
begin
memory_controller_in_a = 32'd49;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 53, i32* %70, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_37))
begin
memory_controller_in_a = 32'd53;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 54, i32* %72, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_38))
begin
memory_controller_in_a = 32'd54;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 55, i32* %74, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_39))
begin
memory_controller_in_a = 32'd55;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 56, i32* %76, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_40))
begin
memory_controller_in_a = 32'd56;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 57, i32* %78, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_41))
begin
memory_controller_in_a = 32'd57;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 58, i32* %80, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_42))
begin
memory_controller_in_a = 32'd58;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 59, i32* %82, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_43))
begin
memory_controller_in_a = 32'd59;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 60, i32* %84, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_44))
begin
memory_controller_in_a = 32'd60;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 61, i32* %86, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_45))
begin
memory_controller_in_a = 32'd61;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 62, i32* %88, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_46))
begin
memory_controller_in_a = 32'd62;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 65, i32* %90, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_47))
begin
memory_controller_in_a = 32'd65;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 66, i32* %92, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_48))
begin
memory_controller_in_a = 32'd66;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 67, i32* %94, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_49))
begin
memory_controller_in_a = 32'd67;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 68, i32* %96, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_50))
begin
memory_controller_in_a = 32'd68;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 69, i32* %98, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_51))
begin
memory_controller_in_a = 32'd69;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 70, i32* %100, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_52))
begin
memory_controller_in_a = 32'd70;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 71, i32* %102, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_53))
begin
memory_controller_in_a = 32'd71;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 72, i32* %104, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_54))
begin
memory_controller_in_a = 32'd72;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 73, i32* %106, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_55))
begin
memory_controller_in_a = 32'd73;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 76, i32* %108, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_56))
begin
memory_controller_in_a = 32'd76;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 77, i32* %110, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_57))
begin
memory_controller_in_a = 32'd77;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 81, i32* %112, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_58))
begin
memory_controller_in_a = 32'd81;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 82, i32* %114, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_59))
begin
memory_controller_in_a = 32'd82;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 83, i32* %116, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_60))
begin
memory_controller_in_a = 32'd83;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 84, i32* %118, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_61))
begin
memory_controller_in_a = 32'd84;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 85, i32* %120, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_62))
begin
memory_controller_in_a = 32'd85;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 91, i32* %122, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_63))
begin
memory_controller_in_a = 32'd91;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 92, i32* %124, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_64))
begin
memory_controller_in_a = 32'd92;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 93, i32* %126, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_65))
begin
memory_controller_in_a = 32'd93;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 94, i32* %128, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_66))
begin
memory_controller_in_a = 32'd94;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 95, i32* %130, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_67))
begin
memory_controller_in_a = 32'd95;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 96, i32* %132, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_68))
begin
memory_controller_in_a = 32'd96;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 97, i32* %134, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_69))
begin
memory_controller_in_a = 32'd97;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 98, i32* %136, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_70))
begin
memory_controller_in_a = 32'd98;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 99, i32* %138, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_71))
begin
memory_controller_in_a = 32'd99;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 100, i32* %140, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_72))
begin
memory_controller_in_a = 32'd100;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 101, i32* %142, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_73))
begin
memory_controller_in_a = 32'd101;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 102, i32* %144, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_74))
begin
memory_controller_in_a = 32'd102;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 103, i32* %146, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_75))
begin
memory_controller_in_a = 32'd103;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 104, i32* %148, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_76))
begin
memory_controller_in_a = 32'd104;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 105, i32* %150, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_77))
begin
memory_controller_in_a = 32'd105;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 106, i32* %152, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_78))
begin
memory_controller_in_a = 32'd106;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 107, i32* %154, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_79))
begin
memory_controller_in_a = 32'd107;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 108, i32* %156, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_80))
begin
memory_controller_in_a = 32'd108;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 109, i32* %158, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_81))
begin
memory_controller_in_a = 32'd109;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 110, i32* %160, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_82))
begin
memory_controller_in_a = 32'd110;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 111, i32* %162, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_83))
begin
memory_controller_in_a = 32'd111;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 112, i32* %164, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_84))
begin
memory_controller_in_a = 32'd112;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 131, i32* %166, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_85))
begin
memory_controller_in_a = 32'd131;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 132, i32* %168, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_86))
begin
memory_controller_in_a = 32'd132;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 133, i32* %170, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_87))
begin
memory_controller_in_a = 32'd133;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 134, i32* %172, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_88))
begin
memory_controller_in_a = 32'd134;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 135, i32* %174, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_89))
begin
memory_controller_in_a = 32'd135;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 136, i32* %176, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_90))
begin
memory_controller_in_a = 32'd136;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 137, i32* %178, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_91))
begin
memory_controller_in_a = 32'd137;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 138, i32* %180, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_92))
begin
memory_controller_in_a = 32'd138;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 146, i32* %182, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_93))
begin
memory_controller_in_a = 32'd146;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 147, i32* %184, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_94))
begin
memory_controller_in_a = 32'd147;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 148, i32* %186, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_95))
begin
memory_controller_in_a = 32'd148;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 149, i32* %188, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_96))
begin
memory_controller_in_a = 32'd149;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 150, i32* %190, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_97))
begin
memory_controller_in_a = 32'd150;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 156, i32* %192, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_98))
begin
memory_controller_in_a = 32'd156;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 157, i32* %194, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_99))
begin
memory_controller_in_a = 32'd157;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 158, i32* %196, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_100))
begin
memory_controller_in_a = 32'd158;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 159, i32* %198, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_101))
begin
memory_controller_in_a = 32'd159;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 160, i32* %200, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_102))
begin
memory_controller_in_a = 32'd160;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 161, i32* %202, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_103))
begin
memory_controller_in_a = 32'd161;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 162, i32* %204, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_104))
begin
memory_controller_in_a = 32'd162;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 166, i32* %206, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_105))
begin
memory_controller_in_a = 32'd166;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 167, i32* %208, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_106))
begin
memory_controller_in_a = 32'd167;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 168, i32* %210, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_107))
begin
memory_controller_in_a = 32'd168;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 195, i32* %212, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_108))
begin
memory_controller_in_a = 32'd195;
end
end
always @(*) begin
memory_controller_size_a = 1'd0;
if ((cur_state == LEGUP_0))
begin
memory_controller_size_a = 1'd0;
end
/* MXL5005_RegisterInit: %0*/
/*   %2 = load %struct.mxl5005s_state** %1, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_1))
begin
memory_controller_size_a = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 0, i32* %3, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_3))
begin
memory_controller_size_a = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 9, i32* %6, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
memory_controller_size_a = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 11, i32* %8, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_6))
begin
memory_controller_size_a = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 12, i32* %10, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_7))
begin
memory_controller_size_a = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 13, i32* %12, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_8))
begin
memory_controller_size_a = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 14, i32* %14, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_9))
begin
memory_controller_size_a = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 15, i32* %16, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_10))
begin
memory_controller_size_a = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 16, i32* %18, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_11))
begin
memory_controller_size_a = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 17, i32* %20, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_12))
begin
memory_controller_size_a = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 18, i32* %22, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_13))
begin
memory_controller_size_a = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 19, i32* %24, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_14))
begin
memory_controller_size_a = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 21, i32* %26, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_15))
begin
memory_controller_size_a = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 22, i32* %28, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_16))
begin
memory_controller_size_a = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 23, i32* %30, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_17))
begin
memory_controller_size_a = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 24, i32* %32, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_18))
begin
memory_controller_size_a = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 25, i32* %34, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_19))
begin
memory_controller_size_a = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 26, i32* %36, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_20))
begin
memory_controller_size_a = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 31, i32* %38, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_21))
begin
memory_controller_size_a = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 32, i32* %40, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_22))
begin
memory_controller_size_a = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 33, i32* %42, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_23))
begin
memory_controller_size_a = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 34, i32* %44, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_24))
begin
memory_controller_size_a = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 35, i32* %46, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_25))
begin
memory_controller_size_a = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 36, i32* %48, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_26))
begin
memory_controller_size_a = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 37, i32* %50, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_27))
begin
memory_controller_size_a = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 41, i32* %52, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_28))
begin
memory_controller_size_a = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 42, i32* %54, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_29))
begin
memory_controller_size_a = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 43, i32* %56, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_30))
begin
memory_controller_size_a = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 44, i32* %58, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_31))
begin
memory_controller_size_a = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 45, i32* %60, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_32))
begin
memory_controller_size_a = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 46, i32* %62, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_33))
begin
memory_controller_size_a = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 47, i32* %64, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_34))
begin
memory_controller_size_a = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 48, i32* %66, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_35))
begin
memory_controller_size_a = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 49, i32* %68, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_36))
begin
memory_controller_size_a = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 53, i32* %70, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_37))
begin
memory_controller_size_a = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 54, i32* %72, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_38))
begin
memory_controller_size_a = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 55, i32* %74, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_39))
begin
memory_controller_size_a = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 56, i32* %76, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_40))
begin
memory_controller_size_a = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 57, i32* %78, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_41))
begin
memory_controller_size_a = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 58, i32* %80, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_42))
begin
memory_controller_size_a = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 59, i32* %82, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_43))
begin
memory_controller_size_a = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 60, i32* %84, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_44))
begin
memory_controller_size_a = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 61, i32* %86, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_45))
begin
memory_controller_size_a = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 62, i32* %88, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_46))
begin
memory_controller_size_a = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 65, i32* %90, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_47))
begin
memory_controller_size_a = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 66, i32* %92, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_48))
begin
memory_controller_size_a = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 67, i32* %94, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_49))
begin
memory_controller_size_a = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 68, i32* %96, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_50))
begin
memory_controller_size_a = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 69, i32* %98, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_51))
begin
memory_controller_size_a = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 70, i32* %100, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_52))
begin
memory_controller_size_a = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 71, i32* %102, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_53))
begin
memory_controller_size_a = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 72, i32* %104, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_54))
begin
memory_controller_size_a = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 73, i32* %106, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_55))
begin
memory_controller_size_a = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 76, i32* %108, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_56))
begin
memory_controller_size_a = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 77, i32* %110, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_57))
begin
memory_controller_size_a = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 81, i32* %112, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_58))
begin
memory_controller_size_a = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 82, i32* %114, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_59))
begin
memory_controller_size_a = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 83, i32* %116, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_60))
begin
memory_controller_size_a = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 84, i32* %118, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_61))
begin
memory_controller_size_a = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 85, i32* %120, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_62))
begin
memory_controller_size_a = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 91, i32* %122, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_63))
begin
memory_controller_size_a = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 92, i32* %124, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_64))
begin
memory_controller_size_a = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 93, i32* %126, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_65))
begin
memory_controller_size_a = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 94, i32* %128, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_66))
begin
memory_controller_size_a = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 95, i32* %130, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_67))
begin
memory_controller_size_a = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 96, i32* %132, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_68))
begin
memory_controller_size_a = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 97, i32* %134, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_69))
begin
memory_controller_size_a = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 98, i32* %136, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_70))
begin
memory_controller_size_a = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 99, i32* %138, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_71))
begin
memory_controller_size_a = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 100, i32* %140, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_72))
begin
memory_controller_size_a = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 101, i32* %142, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_73))
begin
memory_controller_size_a = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 102, i32* %144, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_74))
begin
memory_controller_size_a = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 103, i32* %146, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_75))
begin
memory_controller_size_a = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 104, i32* %148, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_76))
begin
memory_controller_size_a = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 105, i32* %150, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_77))
begin
memory_controller_size_a = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 106, i32* %152, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_78))
begin
memory_controller_size_a = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 107, i32* %154, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_79))
begin
memory_controller_size_a = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 108, i32* %156, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_80))
begin
memory_controller_size_a = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 109, i32* %158, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_81))
begin
memory_controller_size_a = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 110, i32* %160, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_82))
begin
memory_controller_size_a = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 111, i32* %162, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_83))
begin
memory_controller_size_a = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 112, i32* %164, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_84))
begin
memory_controller_size_a = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 131, i32* %166, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_85))
begin
memory_controller_size_a = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 132, i32* %168, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_86))
begin
memory_controller_size_a = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 133, i32* %170, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_87))
begin
memory_controller_size_a = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 134, i32* %172, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_88))
begin
memory_controller_size_a = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 135, i32* %174, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_89))
begin
memory_controller_size_a = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 136, i32* %176, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_90))
begin
memory_controller_size_a = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 137, i32* %178, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_91))
begin
memory_controller_size_a = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 138, i32* %180, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_92))
begin
memory_controller_size_a = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 146, i32* %182, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_93))
begin
memory_controller_size_a = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 147, i32* %184, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_94))
begin
memory_controller_size_a = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 148, i32* %186, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_95))
begin
memory_controller_size_a = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 149, i32* %188, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_96))
begin
memory_controller_size_a = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 150, i32* %190, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_97))
begin
memory_controller_size_a = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 156, i32* %192, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_98))
begin
memory_controller_size_a = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 157, i32* %194, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_99))
begin
memory_controller_size_a = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 158, i32* %196, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_100))
begin
memory_controller_size_a = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 159, i32* %198, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_101))
begin
memory_controller_size_a = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 160, i32* %200, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_102))
begin
memory_controller_size_a = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 161, i32* %202, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_103))
begin
memory_controller_size_a = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 162, i32* %204, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_104))
begin
memory_controller_size_a = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 166, i32* %206, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_105))
begin
memory_controller_size_a = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 167, i32* %208, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_106))
begin
memory_controller_size_a = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 168, i32* %210, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_107))
begin
memory_controller_size_a = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 195, i32* %212, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_108))
begin
memory_controller_size_a = 2'd2;
end
end
always @(*) begin
memory_controller_enable_b = 1'd0;
if ((cur_state == LEGUP_0))
begin
memory_controller_enable_b = 1'd0;
end
/* MXL5005_RegisterInit: %0*/
/*   %5 = load %struct.TYPE_2__** %4, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_3))
begin
memory_controller_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 64, i32* %7, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
memory_controller_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 25, i32* %9, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_6))
begin
memory_controller_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 96, i32* %11, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_7))
begin
memory_controller_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 0, i32* %13, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_8))
begin
memory_controller_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 0, i32* %15, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_9))
begin
memory_controller_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 192, i32* %17, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_10))
begin
memory_controller_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 0, i32* %19, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_11))
begin
memory_controller_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 0, i32* %21, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_12))
begin
memory_controller_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 0, i32* %23, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_13))
begin
memory_controller_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 52, i32* %25, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_14))
begin
memory_controller_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 0, i32* %27, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_15))
begin
memory_controller_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 107, i32* %29, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_16))
begin
memory_controller_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 53, i32* %31, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_17))
begin
memory_controller_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 112, i32* %33, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_18))
begin
memory_controller_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 62, i32* %35, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_19))
begin
memory_controller_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 130, i32* %37, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_20))
begin
memory_controller_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 0, i32* %39, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_21))
begin
memory_controller_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 64, i32* %41, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_22))
begin
memory_controller_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 83, i32* %43, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_23))
begin
memory_controller_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 129, i32* %45, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_24))
begin
memory_controller_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 201, i32* %47, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_25))
begin
memory_controller_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 1, i32* %49, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_26))
begin
memory_controller_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 0, i32* %51, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_27))
begin
memory_controller_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 0, i32* %53, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_28))
begin
memory_controller_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 248, i32* %55, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_29))
begin
memory_controller_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 67, i32* %57, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_30))
begin
memory_controller_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 32, i32* %59, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_31))
begin
memory_controller_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 128, i32* %61, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_32))
begin
memory_controller_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 136, i32* %63, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_33))
begin
memory_controller_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 134, i32* %65, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_34))
begin
memory_controller_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 0, i32* %67, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_35))
begin
memory_controller_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 0, i32* %69, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_36))
begin
memory_controller_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 148, i32* %71, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_37))
begin
memory_controller_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 250, i32* %73, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_38))
begin
memory_controller_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 146, i32* %75, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_39))
begin
memory_controller_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 128, i32* %77, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_40))
begin
memory_controller_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 65, i32* %79, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_41))
begin
memory_controller_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 219, i32* %81, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_42))
begin
memory_controller_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 0, i32* %83, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_43))
begin
memory_controller_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 0, i32* %85, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_44))
begin
memory_controller_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 0, i32* %87, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_45))
begin
memory_controller_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 0, i32* %89, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_46))
begin
memory_controller_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 248, i32* %91, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_47))
begin
memory_controller_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 228, i32* %93, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_48))
begin
memory_controller_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 144, i32* %95, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_49))
begin
memory_controller_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 192, i32* %97, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_50))
begin
memory_controller_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 1, i32* %99, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_51))
begin
memory_controller_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 80, i32* %101, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_52))
begin
memory_controller_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 6, i32* %103, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_53))
begin
memory_controller_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 0, i32* %105, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_54))
begin
memory_controller_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 32, i32* %107, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_55))
begin
memory_controller_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 187, i32* %109, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_56))
begin
memory_controller_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 19, i32* %111, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_57))
begin
memory_controller_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 4, i32* %113, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_58))
begin
memory_controller_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 117, i32* %115, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_59))
begin
memory_controller_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 0, i32* %117, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_60))
begin
memory_controller_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 0, i32* %119, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_61))
begin
memory_controller_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 0, i32* %121, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_62))
begin
memory_controller_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 112, i32* %123, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_63))
begin
memory_controller_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 0, i32* %125, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_64))
begin
memory_controller_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 0, i32* %127, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_65))
begin
memory_controller_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 0, i32* %129, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_66))
begin
memory_controller_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 12, i32* %131, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_67))
begin
memory_controller_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 0, i32* %133, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_68))
begin
memory_controller_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 0, i32* %135, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_69))
begin
memory_controller_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 226, i32* %137, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_70))
begin
memory_controller_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 0, i32* %139, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_71))
begin
memory_controller_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 0, i32* %141, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_72))
begin
memory_controller_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 18, i32* %143, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_73))
begin
memory_controller_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 128, i32* %145, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_74))
begin
memory_controller_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 50, i32* %147, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_75))
begin
memory_controller_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 180, i32* %149, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_76))
begin
memory_controller_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 96, i32* %151, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_77))
begin
memory_controller_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 131, i32* %153, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_78))
begin
memory_controller_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 132, i32* %155, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_79))
begin
memory_controller_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 156, i32* %157, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_80))
begin
memory_controller_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 2, i32* %159, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_81))
begin
memory_controller_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 129, i32* %161, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_82))
begin
memory_controller_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 192, i32* %163, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_83))
begin
memory_controller_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 16, i32* %165, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_84))
begin
memory_controller_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 138, i32* %167, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_85))
begin
memory_controller_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 16, i32* %169, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_86))
begin
memory_controller_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 36, i32* %171, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_87))
begin
memory_controller_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 0, i32* %173, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_88))
begin
memory_controller_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 0, i32* %175, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_89))
begin
memory_controller_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 126, i32* %177, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_90))
begin
memory_controller_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 64, i32* %179, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_91))
begin
memory_controller_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 56, i32* %181, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_92))
begin
memory_controller_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 246, i32* %183, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_93))
begin
memory_controller_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 26, i32* %185, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_94))
begin
memory_controller_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 98, i32* %187, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_95))
begin
memory_controller_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 51, i32* %189, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_96))
begin
memory_controller_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 128, i32* %191, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_97))
begin
memory_controller_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 86, i32* %193, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_98))
begin
memory_controller_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 23, i32* %195, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_99))
begin
memory_controller_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 169, i32* %197, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_100))
begin
memory_controller_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 0, i32* %199, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_101))
begin
memory_controller_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 0, i32* %201, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_102))
begin
memory_controller_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 0, i32* %203, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_103))
begin
memory_controller_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 64, i32* %205, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_104))
begin
memory_controller_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 174, i32* %207, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_105))
begin
memory_controller_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 27, i32* %209, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_106))
begin
memory_controller_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 242, i32* %211, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_107))
begin
memory_controller_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 0, i32* %213, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_108))
begin
memory_controller_enable_b = 1'd1;
end
end
always @(*) begin
memory_controller_address_b = 1'd0;
if ((cur_state == LEGUP_0))
begin
memory_controller_address_b = 1'd0;
end
/* MXL5005_RegisterInit: %0*/
/*   %5 = load %struct.TYPE_2__** %4, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_3))
begin
memory_controller_address_b = MXL5005_RegisterInit_0_4;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 64, i32* %7, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
memory_controller_address_b = MXL5005_RegisterInit_0_7;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 25, i32* %9, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_6))
begin
memory_controller_address_b = MXL5005_RegisterInit_0_9_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 96, i32* %11, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_7))
begin
memory_controller_address_b = MXL5005_RegisterInit_0_11_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 0, i32* %13, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_8))
begin
memory_controller_address_b = MXL5005_RegisterInit_0_13_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 0, i32* %15, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_9))
begin
memory_controller_address_b = MXL5005_RegisterInit_0_15_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 192, i32* %17, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_10))
begin
memory_controller_address_b = MXL5005_RegisterInit_0_17_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 0, i32* %19, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_11))
begin
memory_controller_address_b = MXL5005_RegisterInit_0_19_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 0, i32* %21, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_12))
begin
memory_controller_address_b = MXL5005_RegisterInit_0_21_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 0, i32* %23, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_13))
begin
memory_controller_address_b = MXL5005_RegisterInit_0_23_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 52, i32* %25, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_14))
begin
memory_controller_address_b = MXL5005_RegisterInit_0_25_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 0, i32* %27, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_15))
begin
memory_controller_address_b = MXL5005_RegisterInit_0_27_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 107, i32* %29, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_16))
begin
memory_controller_address_b = MXL5005_RegisterInit_0_29_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 53, i32* %31, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_17))
begin
memory_controller_address_b = MXL5005_RegisterInit_0_31_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 112, i32* %33, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_18))
begin
memory_controller_address_b = MXL5005_RegisterInit_0_33_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 62, i32* %35, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_19))
begin
memory_controller_address_b = MXL5005_RegisterInit_0_35_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 130, i32* %37, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_20))
begin
memory_controller_address_b = MXL5005_RegisterInit_0_37_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 0, i32* %39, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_21))
begin
memory_controller_address_b = MXL5005_RegisterInit_0_39_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 64, i32* %41, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_22))
begin
memory_controller_address_b = MXL5005_RegisterInit_0_41_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 83, i32* %43, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_23))
begin
memory_controller_address_b = MXL5005_RegisterInit_0_43_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 129, i32* %45, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_24))
begin
memory_controller_address_b = MXL5005_RegisterInit_0_45_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 201, i32* %47, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_25))
begin
memory_controller_address_b = MXL5005_RegisterInit_0_47_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 1, i32* %49, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_26))
begin
memory_controller_address_b = MXL5005_RegisterInit_0_49_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 0, i32* %51, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_27))
begin
memory_controller_address_b = MXL5005_RegisterInit_0_51_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 0, i32* %53, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_28))
begin
memory_controller_address_b = MXL5005_RegisterInit_0_53_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 248, i32* %55, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_29))
begin
memory_controller_address_b = MXL5005_RegisterInit_0_55_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 67, i32* %57, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_30))
begin
memory_controller_address_b = MXL5005_RegisterInit_0_57_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 32, i32* %59, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_31))
begin
memory_controller_address_b = MXL5005_RegisterInit_0_59_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 128, i32* %61, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_32))
begin
memory_controller_address_b = MXL5005_RegisterInit_0_61_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 136, i32* %63, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_33))
begin
memory_controller_address_b = MXL5005_RegisterInit_0_63_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 134, i32* %65, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_34))
begin
memory_controller_address_b = MXL5005_RegisterInit_0_65_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 0, i32* %67, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_35))
begin
memory_controller_address_b = MXL5005_RegisterInit_0_67_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 0, i32* %69, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_36))
begin
memory_controller_address_b = MXL5005_RegisterInit_0_69_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 148, i32* %71, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_37))
begin
memory_controller_address_b = MXL5005_RegisterInit_0_71_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 250, i32* %73, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_38))
begin
memory_controller_address_b = MXL5005_RegisterInit_0_73_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 146, i32* %75, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_39))
begin
memory_controller_address_b = MXL5005_RegisterInit_0_75_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 128, i32* %77, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_40))
begin
memory_controller_address_b = MXL5005_RegisterInit_0_77_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 65, i32* %79, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_41))
begin
memory_controller_address_b = MXL5005_RegisterInit_0_79_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 219, i32* %81, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_42))
begin
memory_controller_address_b = MXL5005_RegisterInit_0_81_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 0, i32* %83, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_43))
begin
memory_controller_address_b = MXL5005_RegisterInit_0_83_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 0, i32* %85, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_44))
begin
memory_controller_address_b = MXL5005_RegisterInit_0_85_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 0, i32* %87, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_45))
begin
memory_controller_address_b = MXL5005_RegisterInit_0_87_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 0, i32* %89, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_46))
begin
memory_controller_address_b = MXL5005_RegisterInit_0_89_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 248, i32* %91, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_47))
begin
memory_controller_address_b = MXL5005_RegisterInit_0_91_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 228, i32* %93, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_48))
begin
memory_controller_address_b = MXL5005_RegisterInit_0_93_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 144, i32* %95, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_49))
begin
memory_controller_address_b = MXL5005_RegisterInit_0_95_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 192, i32* %97, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_50))
begin
memory_controller_address_b = MXL5005_RegisterInit_0_97_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 1, i32* %99, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_51))
begin
memory_controller_address_b = MXL5005_RegisterInit_0_99_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 80, i32* %101, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_52))
begin
memory_controller_address_b = MXL5005_RegisterInit_0_101_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 6, i32* %103, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_53))
begin
memory_controller_address_b = MXL5005_RegisterInit_0_103_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 0, i32* %105, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_54))
begin
memory_controller_address_b = MXL5005_RegisterInit_0_105_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 32, i32* %107, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_55))
begin
memory_controller_address_b = MXL5005_RegisterInit_0_107_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 187, i32* %109, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_56))
begin
memory_controller_address_b = MXL5005_RegisterInit_0_109_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 19, i32* %111, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_57))
begin
memory_controller_address_b = MXL5005_RegisterInit_0_111_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 4, i32* %113, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_58))
begin
memory_controller_address_b = MXL5005_RegisterInit_0_113_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 117, i32* %115, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_59))
begin
memory_controller_address_b = MXL5005_RegisterInit_0_115_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 0, i32* %117, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_60))
begin
memory_controller_address_b = MXL5005_RegisterInit_0_117_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 0, i32* %119, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_61))
begin
memory_controller_address_b = MXL5005_RegisterInit_0_119_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 0, i32* %121, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_62))
begin
memory_controller_address_b = MXL5005_RegisterInit_0_121_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 112, i32* %123, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_63))
begin
memory_controller_address_b = MXL5005_RegisterInit_0_123_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 0, i32* %125, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_64))
begin
memory_controller_address_b = MXL5005_RegisterInit_0_125_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 0, i32* %127, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_65))
begin
memory_controller_address_b = MXL5005_RegisterInit_0_127_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 0, i32* %129, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_66))
begin
memory_controller_address_b = MXL5005_RegisterInit_0_129_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 12, i32* %131, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_67))
begin
memory_controller_address_b = MXL5005_RegisterInit_0_131_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 0, i32* %133, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_68))
begin
memory_controller_address_b = MXL5005_RegisterInit_0_133_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 0, i32* %135, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_69))
begin
memory_controller_address_b = MXL5005_RegisterInit_0_135_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 226, i32* %137, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_70))
begin
memory_controller_address_b = MXL5005_RegisterInit_0_137_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 0, i32* %139, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_71))
begin
memory_controller_address_b = MXL5005_RegisterInit_0_139_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 0, i32* %141, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_72))
begin
memory_controller_address_b = MXL5005_RegisterInit_0_141_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 18, i32* %143, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_73))
begin
memory_controller_address_b = MXL5005_RegisterInit_0_143_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 128, i32* %145, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_74))
begin
memory_controller_address_b = MXL5005_RegisterInit_0_145_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 50, i32* %147, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_75))
begin
memory_controller_address_b = MXL5005_RegisterInit_0_147_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 180, i32* %149, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_76))
begin
memory_controller_address_b = MXL5005_RegisterInit_0_149_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 96, i32* %151, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_77))
begin
memory_controller_address_b = MXL5005_RegisterInit_0_151_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 131, i32* %153, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_78))
begin
memory_controller_address_b = MXL5005_RegisterInit_0_153_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 132, i32* %155, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_79))
begin
memory_controller_address_b = MXL5005_RegisterInit_0_155_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 156, i32* %157, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_80))
begin
memory_controller_address_b = MXL5005_RegisterInit_0_157_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 2, i32* %159, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_81))
begin
memory_controller_address_b = MXL5005_RegisterInit_0_159_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 129, i32* %161, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_82))
begin
memory_controller_address_b = MXL5005_RegisterInit_0_161_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 192, i32* %163, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_83))
begin
memory_controller_address_b = MXL5005_RegisterInit_0_163_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 16, i32* %165, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_84))
begin
memory_controller_address_b = MXL5005_RegisterInit_0_165_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 138, i32* %167, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_85))
begin
memory_controller_address_b = MXL5005_RegisterInit_0_167_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 16, i32* %169, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_86))
begin
memory_controller_address_b = MXL5005_RegisterInit_0_169_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 36, i32* %171, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_87))
begin
memory_controller_address_b = MXL5005_RegisterInit_0_171_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 0, i32* %173, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_88))
begin
memory_controller_address_b = MXL5005_RegisterInit_0_173_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 0, i32* %175, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_89))
begin
memory_controller_address_b = MXL5005_RegisterInit_0_175_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 126, i32* %177, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_90))
begin
memory_controller_address_b = MXL5005_RegisterInit_0_177_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 64, i32* %179, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_91))
begin
memory_controller_address_b = MXL5005_RegisterInit_0_179_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 56, i32* %181, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_92))
begin
memory_controller_address_b = MXL5005_RegisterInit_0_181_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 246, i32* %183, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_93))
begin
memory_controller_address_b = MXL5005_RegisterInit_0_183_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 26, i32* %185, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_94))
begin
memory_controller_address_b = MXL5005_RegisterInit_0_185_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 98, i32* %187, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_95))
begin
memory_controller_address_b = MXL5005_RegisterInit_0_187_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 51, i32* %189, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_96))
begin
memory_controller_address_b = MXL5005_RegisterInit_0_189_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 128, i32* %191, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_97))
begin
memory_controller_address_b = MXL5005_RegisterInit_0_191_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 86, i32* %193, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_98))
begin
memory_controller_address_b = MXL5005_RegisterInit_0_193_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 23, i32* %195, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_99))
begin
memory_controller_address_b = MXL5005_RegisterInit_0_195_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 169, i32* %197, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_100))
begin
memory_controller_address_b = MXL5005_RegisterInit_0_197_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 0, i32* %199, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_101))
begin
memory_controller_address_b = MXL5005_RegisterInit_0_199_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 0, i32* %201, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_102))
begin
memory_controller_address_b = MXL5005_RegisterInit_0_201_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 0, i32* %203, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_103))
begin
memory_controller_address_b = MXL5005_RegisterInit_0_203_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 64, i32* %205, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_104))
begin
memory_controller_address_b = MXL5005_RegisterInit_0_205_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 174, i32* %207, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_105))
begin
memory_controller_address_b = MXL5005_RegisterInit_0_207_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 27, i32* %209, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_106))
begin
memory_controller_address_b = MXL5005_RegisterInit_0_209_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 242, i32* %211, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_107))
begin
memory_controller_address_b = MXL5005_RegisterInit_0_211_reg;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 0, i32* %213, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_108))
begin
memory_controller_address_b = MXL5005_RegisterInit_0_213_reg;
end
end
always @(*) begin
memory_controller_write_enable_b = 1'd0;
if ((cur_state == LEGUP_0))
begin
memory_controller_write_enable_b = 1'd0;
end
/* MXL5005_RegisterInit: %0*/
/*   %5 = load %struct.TYPE_2__** %4, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_3))
begin
memory_controller_write_enable_b = 1'd0;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 64, i32* %7, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
memory_controller_write_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 25, i32* %9, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_6))
begin
memory_controller_write_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 96, i32* %11, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_7))
begin
memory_controller_write_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 0, i32* %13, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_8))
begin
memory_controller_write_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 0, i32* %15, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_9))
begin
memory_controller_write_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 192, i32* %17, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_10))
begin
memory_controller_write_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 0, i32* %19, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_11))
begin
memory_controller_write_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 0, i32* %21, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_12))
begin
memory_controller_write_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 0, i32* %23, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_13))
begin
memory_controller_write_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 52, i32* %25, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_14))
begin
memory_controller_write_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 0, i32* %27, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_15))
begin
memory_controller_write_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 107, i32* %29, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_16))
begin
memory_controller_write_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 53, i32* %31, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_17))
begin
memory_controller_write_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 112, i32* %33, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_18))
begin
memory_controller_write_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 62, i32* %35, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_19))
begin
memory_controller_write_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 130, i32* %37, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_20))
begin
memory_controller_write_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 0, i32* %39, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_21))
begin
memory_controller_write_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 64, i32* %41, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_22))
begin
memory_controller_write_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 83, i32* %43, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_23))
begin
memory_controller_write_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 129, i32* %45, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_24))
begin
memory_controller_write_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 201, i32* %47, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_25))
begin
memory_controller_write_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 1, i32* %49, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_26))
begin
memory_controller_write_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 0, i32* %51, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_27))
begin
memory_controller_write_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 0, i32* %53, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_28))
begin
memory_controller_write_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 248, i32* %55, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_29))
begin
memory_controller_write_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 67, i32* %57, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_30))
begin
memory_controller_write_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 32, i32* %59, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_31))
begin
memory_controller_write_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 128, i32* %61, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_32))
begin
memory_controller_write_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 136, i32* %63, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_33))
begin
memory_controller_write_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 134, i32* %65, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_34))
begin
memory_controller_write_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 0, i32* %67, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_35))
begin
memory_controller_write_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 0, i32* %69, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_36))
begin
memory_controller_write_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 148, i32* %71, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_37))
begin
memory_controller_write_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 250, i32* %73, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_38))
begin
memory_controller_write_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 146, i32* %75, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_39))
begin
memory_controller_write_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 128, i32* %77, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_40))
begin
memory_controller_write_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 65, i32* %79, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_41))
begin
memory_controller_write_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 219, i32* %81, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_42))
begin
memory_controller_write_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 0, i32* %83, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_43))
begin
memory_controller_write_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 0, i32* %85, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_44))
begin
memory_controller_write_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 0, i32* %87, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_45))
begin
memory_controller_write_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 0, i32* %89, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_46))
begin
memory_controller_write_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 248, i32* %91, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_47))
begin
memory_controller_write_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 228, i32* %93, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_48))
begin
memory_controller_write_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 144, i32* %95, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_49))
begin
memory_controller_write_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 192, i32* %97, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_50))
begin
memory_controller_write_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 1, i32* %99, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_51))
begin
memory_controller_write_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 80, i32* %101, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_52))
begin
memory_controller_write_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 6, i32* %103, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_53))
begin
memory_controller_write_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 0, i32* %105, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_54))
begin
memory_controller_write_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 32, i32* %107, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_55))
begin
memory_controller_write_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 187, i32* %109, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_56))
begin
memory_controller_write_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 19, i32* %111, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_57))
begin
memory_controller_write_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 4, i32* %113, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_58))
begin
memory_controller_write_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 117, i32* %115, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_59))
begin
memory_controller_write_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 0, i32* %117, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_60))
begin
memory_controller_write_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 0, i32* %119, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_61))
begin
memory_controller_write_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 0, i32* %121, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_62))
begin
memory_controller_write_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 112, i32* %123, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_63))
begin
memory_controller_write_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 0, i32* %125, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_64))
begin
memory_controller_write_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 0, i32* %127, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_65))
begin
memory_controller_write_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 0, i32* %129, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_66))
begin
memory_controller_write_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 12, i32* %131, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_67))
begin
memory_controller_write_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 0, i32* %133, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_68))
begin
memory_controller_write_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 0, i32* %135, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_69))
begin
memory_controller_write_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 226, i32* %137, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_70))
begin
memory_controller_write_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 0, i32* %139, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_71))
begin
memory_controller_write_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 0, i32* %141, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_72))
begin
memory_controller_write_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 18, i32* %143, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_73))
begin
memory_controller_write_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 128, i32* %145, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_74))
begin
memory_controller_write_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 50, i32* %147, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_75))
begin
memory_controller_write_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 180, i32* %149, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_76))
begin
memory_controller_write_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 96, i32* %151, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_77))
begin
memory_controller_write_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 131, i32* %153, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_78))
begin
memory_controller_write_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 132, i32* %155, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_79))
begin
memory_controller_write_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 156, i32* %157, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_80))
begin
memory_controller_write_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 2, i32* %159, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_81))
begin
memory_controller_write_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 129, i32* %161, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_82))
begin
memory_controller_write_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 192, i32* %163, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_83))
begin
memory_controller_write_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 16, i32* %165, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_84))
begin
memory_controller_write_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 138, i32* %167, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_85))
begin
memory_controller_write_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 16, i32* %169, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_86))
begin
memory_controller_write_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 36, i32* %171, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_87))
begin
memory_controller_write_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 0, i32* %173, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_88))
begin
memory_controller_write_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 0, i32* %175, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_89))
begin
memory_controller_write_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 126, i32* %177, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_90))
begin
memory_controller_write_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 64, i32* %179, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_91))
begin
memory_controller_write_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 56, i32* %181, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_92))
begin
memory_controller_write_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 246, i32* %183, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_93))
begin
memory_controller_write_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 26, i32* %185, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_94))
begin
memory_controller_write_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 98, i32* %187, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_95))
begin
memory_controller_write_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 51, i32* %189, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_96))
begin
memory_controller_write_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 128, i32* %191, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_97))
begin
memory_controller_write_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 86, i32* %193, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_98))
begin
memory_controller_write_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 23, i32* %195, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_99))
begin
memory_controller_write_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 169, i32* %197, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_100))
begin
memory_controller_write_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 0, i32* %199, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_101))
begin
memory_controller_write_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 0, i32* %201, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_102))
begin
memory_controller_write_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 0, i32* %203, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_103))
begin
memory_controller_write_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 64, i32* %205, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_104))
begin
memory_controller_write_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 174, i32* %207, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_105))
begin
memory_controller_write_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 27, i32* %209, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_106))
begin
memory_controller_write_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 242, i32* %211, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_107))
begin
memory_controller_write_enable_b = 1'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 0, i32* %213, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_108))
begin
memory_controller_write_enable_b = 1'd1;
end
end
always @(*) begin
memory_controller_in_b = 1'd0;
if ((cur_state == LEGUP_0))
begin
memory_controller_in_b = 1'd0;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 64, i32* %7, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
memory_controller_in_b = 32'd64;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 25, i32* %9, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_6))
begin
memory_controller_in_b = 32'd25;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 96, i32* %11, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_7))
begin
memory_controller_in_b = 32'd96;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 0, i32* %13, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_8))
begin
memory_controller_in_b = 32'd0;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 0, i32* %15, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_9))
begin
memory_controller_in_b = 32'd0;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 192, i32* %17, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_10))
begin
memory_controller_in_b = 32'd192;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 0, i32* %19, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_11))
begin
memory_controller_in_b = 32'd0;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 0, i32* %21, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_12))
begin
memory_controller_in_b = 32'd0;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 0, i32* %23, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_13))
begin
memory_controller_in_b = 32'd0;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 52, i32* %25, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_14))
begin
memory_controller_in_b = 32'd52;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 0, i32* %27, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_15))
begin
memory_controller_in_b = 32'd0;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 107, i32* %29, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_16))
begin
memory_controller_in_b = 32'd107;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 53, i32* %31, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_17))
begin
memory_controller_in_b = 32'd53;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 112, i32* %33, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_18))
begin
memory_controller_in_b = 32'd112;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 62, i32* %35, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_19))
begin
memory_controller_in_b = 32'd62;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 130, i32* %37, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_20))
begin
memory_controller_in_b = 32'd130;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 0, i32* %39, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_21))
begin
memory_controller_in_b = 32'd0;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 64, i32* %41, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_22))
begin
memory_controller_in_b = 32'd64;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 83, i32* %43, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_23))
begin
memory_controller_in_b = 32'd83;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 129, i32* %45, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_24))
begin
memory_controller_in_b = 32'd129;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 201, i32* %47, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_25))
begin
memory_controller_in_b = 32'd201;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 1, i32* %49, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_26))
begin
memory_controller_in_b = 32'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 0, i32* %51, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_27))
begin
memory_controller_in_b = 32'd0;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 0, i32* %53, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_28))
begin
memory_controller_in_b = 32'd0;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 248, i32* %55, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_29))
begin
memory_controller_in_b = 32'd248;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 67, i32* %57, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_30))
begin
memory_controller_in_b = 32'd67;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 32, i32* %59, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_31))
begin
memory_controller_in_b = 32'd32;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 128, i32* %61, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_32))
begin
memory_controller_in_b = 32'd128;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 136, i32* %63, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_33))
begin
memory_controller_in_b = 32'd136;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 134, i32* %65, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_34))
begin
memory_controller_in_b = 32'd134;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 0, i32* %67, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_35))
begin
memory_controller_in_b = 32'd0;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 0, i32* %69, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_36))
begin
memory_controller_in_b = 32'd0;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 148, i32* %71, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_37))
begin
memory_controller_in_b = 32'd148;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 250, i32* %73, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_38))
begin
memory_controller_in_b = 32'd250;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 146, i32* %75, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_39))
begin
memory_controller_in_b = 32'd146;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 128, i32* %77, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_40))
begin
memory_controller_in_b = 32'd128;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 65, i32* %79, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_41))
begin
memory_controller_in_b = 32'd65;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 219, i32* %81, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_42))
begin
memory_controller_in_b = 32'd219;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 0, i32* %83, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_43))
begin
memory_controller_in_b = 32'd0;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 0, i32* %85, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_44))
begin
memory_controller_in_b = 32'd0;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 0, i32* %87, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_45))
begin
memory_controller_in_b = 32'd0;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 0, i32* %89, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_46))
begin
memory_controller_in_b = 32'd0;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 248, i32* %91, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_47))
begin
memory_controller_in_b = 32'd248;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 228, i32* %93, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_48))
begin
memory_controller_in_b = 32'd228;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 144, i32* %95, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_49))
begin
memory_controller_in_b = 32'd144;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 192, i32* %97, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_50))
begin
memory_controller_in_b = 32'd192;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 1, i32* %99, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_51))
begin
memory_controller_in_b = 32'd1;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 80, i32* %101, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_52))
begin
memory_controller_in_b = 32'd80;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 6, i32* %103, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_53))
begin
memory_controller_in_b = 32'd6;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 0, i32* %105, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_54))
begin
memory_controller_in_b = 32'd0;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 32, i32* %107, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_55))
begin
memory_controller_in_b = 32'd32;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 187, i32* %109, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_56))
begin
memory_controller_in_b = 32'd187;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 19, i32* %111, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_57))
begin
memory_controller_in_b = 32'd19;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 4, i32* %113, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_58))
begin
memory_controller_in_b = 32'd4;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 117, i32* %115, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_59))
begin
memory_controller_in_b = 32'd117;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 0, i32* %117, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_60))
begin
memory_controller_in_b = 32'd0;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 0, i32* %119, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_61))
begin
memory_controller_in_b = 32'd0;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 0, i32* %121, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_62))
begin
memory_controller_in_b = 32'd0;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 112, i32* %123, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_63))
begin
memory_controller_in_b = 32'd112;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 0, i32* %125, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_64))
begin
memory_controller_in_b = 32'd0;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 0, i32* %127, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_65))
begin
memory_controller_in_b = 32'd0;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 0, i32* %129, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_66))
begin
memory_controller_in_b = 32'd0;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 12, i32* %131, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_67))
begin
memory_controller_in_b = 32'd12;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 0, i32* %133, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_68))
begin
memory_controller_in_b = 32'd0;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 0, i32* %135, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_69))
begin
memory_controller_in_b = 32'd0;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 226, i32* %137, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_70))
begin
memory_controller_in_b = 32'd226;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 0, i32* %139, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_71))
begin
memory_controller_in_b = 32'd0;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 0, i32* %141, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_72))
begin
memory_controller_in_b = 32'd0;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 18, i32* %143, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_73))
begin
memory_controller_in_b = 32'd18;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 128, i32* %145, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_74))
begin
memory_controller_in_b = 32'd128;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 50, i32* %147, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_75))
begin
memory_controller_in_b = 32'd50;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 180, i32* %149, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_76))
begin
memory_controller_in_b = 32'd180;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 96, i32* %151, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_77))
begin
memory_controller_in_b = 32'd96;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 131, i32* %153, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_78))
begin
memory_controller_in_b = 32'd131;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 132, i32* %155, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_79))
begin
memory_controller_in_b = 32'd132;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 156, i32* %157, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_80))
begin
memory_controller_in_b = 32'd156;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 2, i32* %159, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_81))
begin
memory_controller_in_b = 32'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 129, i32* %161, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_82))
begin
memory_controller_in_b = 32'd129;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 192, i32* %163, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_83))
begin
memory_controller_in_b = 32'd192;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 16, i32* %165, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_84))
begin
memory_controller_in_b = 32'd16;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 138, i32* %167, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_85))
begin
memory_controller_in_b = 32'd138;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 16, i32* %169, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_86))
begin
memory_controller_in_b = 32'd16;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 36, i32* %171, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_87))
begin
memory_controller_in_b = 32'd36;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 0, i32* %173, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_88))
begin
memory_controller_in_b = 32'd0;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 0, i32* %175, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_89))
begin
memory_controller_in_b = 32'd0;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 126, i32* %177, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_90))
begin
memory_controller_in_b = 32'd126;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 64, i32* %179, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_91))
begin
memory_controller_in_b = 32'd64;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 56, i32* %181, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_92))
begin
memory_controller_in_b = 32'd56;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 246, i32* %183, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_93))
begin
memory_controller_in_b = 32'd246;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 26, i32* %185, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_94))
begin
memory_controller_in_b = 32'd26;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 98, i32* %187, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_95))
begin
memory_controller_in_b = 32'd98;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 51, i32* %189, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_96))
begin
memory_controller_in_b = 32'd51;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 128, i32* %191, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_97))
begin
memory_controller_in_b = 32'd128;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 86, i32* %193, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_98))
begin
memory_controller_in_b = 32'd86;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 23, i32* %195, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_99))
begin
memory_controller_in_b = 32'd23;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 169, i32* %197, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_100))
begin
memory_controller_in_b = 32'd169;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 0, i32* %199, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_101))
begin
memory_controller_in_b = 32'd0;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 0, i32* %201, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_102))
begin
memory_controller_in_b = 32'd0;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 0, i32* %203, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_103))
begin
memory_controller_in_b = 32'd0;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 64, i32* %205, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_104))
begin
memory_controller_in_b = 32'd64;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 174, i32* %207, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_105))
begin
memory_controller_in_b = 32'd174;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 27, i32* %209, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_106))
begin
memory_controller_in_b = 32'd27;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 242, i32* %211, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_107))
begin
memory_controller_in_b = 32'd242;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 0, i32* %213, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_108))
begin
memory_controller_in_b = 32'd0;
end
end
always @(*) begin
memory_controller_size_b = 1'd0;
if ((cur_state == LEGUP_0))
begin
memory_controller_size_b = 1'd0;
end
/* MXL5005_RegisterInit: %0*/
/*   %5 = load %struct.TYPE_2__** %4, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_3))
begin
memory_controller_size_b = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 64, i32* %7, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_5))
begin
memory_controller_size_b = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 25, i32* %9, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_6))
begin
memory_controller_size_b = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 96, i32* %11, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_7))
begin
memory_controller_size_b = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 0, i32* %13, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_8))
begin
memory_controller_size_b = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 0, i32* %15, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_9))
begin
memory_controller_size_b = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 192, i32* %17, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_10))
begin
memory_controller_size_b = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 0, i32* %19, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_11))
begin
memory_controller_size_b = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 0, i32* %21, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_12))
begin
memory_controller_size_b = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 0, i32* %23, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_13))
begin
memory_controller_size_b = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 52, i32* %25, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_14))
begin
memory_controller_size_b = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 0, i32* %27, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_15))
begin
memory_controller_size_b = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 107, i32* %29, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_16))
begin
memory_controller_size_b = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 53, i32* %31, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_17))
begin
memory_controller_size_b = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 112, i32* %33, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_18))
begin
memory_controller_size_b = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 62, i32* %35, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_19))
begin
memory_controller_size_b = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 130, i32* %37, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_20))
begin
memory_controller_size_b = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 0, i32* %39, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_21))
begin
memory_controller_size_b = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 64, i32* %41, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_22))
begin
memory_controller_size_b = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 83, i32* %43, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_23))
begin
memory_controller_size_b = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 129, i32* %45, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_24))
begin
memory_controller_size_b = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 201, i32* %47, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_25))
begin
memory_controller_size_b = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 1, i32* %49, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_26))
begin
memory_controller_size_b = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 0, i32* %51, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_27))
begin
memory_controller_size_b = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 0, i32* %53, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_28))
begin
memory_controller_size_b = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 248, i32* %55, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_29))
begin
memory_controller_size_b = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 67, i32* %57, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_30))
begin
memory_controller_size_b = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 32, i32* %59, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_31))
begin
memory_controller_size_b = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 128, i32* %61, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_32))
begin
memory_controller_size_b = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 136, i32* %63, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_33))
begin
memory_controller_size_b = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 134, i32* %65, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_34))
begin
memory_controller_size_b = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 0, i32* %67, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_35))
begin
memory_controller_size_b = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 0, i32* %69, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_36))
begin
memory_controller_size_b = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 148, i32* %71, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_37))
begin
memory_controller_size_b = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 250, i32* %73, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_38))
begin
memory_controller_size_b = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 146, i32* %75, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_39))
begin
memory_controller_size_b = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 128, i32* %77, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_40))
begin
memory_controller_size_b = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 65, i32* %79, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_41))
begin
memory_controller_size_b = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 219, i32* %81, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_42))
begin
memory_controller_size_b = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 0, i32* %83, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_43))
begin
memory_controller_size_b = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 0, i32* %85, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_44))
begin
memory_controller_size_b = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 0, i32* %87, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_45))
begin
memory_controller_size_b = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 0, i32* %89, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_46))
begin
memory_controller_size_b = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 248, i32* %91, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_47))
begin
memory_controller_size_b = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 228, i32* %93, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_48))
begin
memory_controller_size_b = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 144, i32* %95, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_49))
begin
memory_controller_size_b = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 192, i32* %97, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_50))
begin
memory_controller_size_b = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 1, i32* %99, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_51))
begin
memory_controller_size_b = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 80, i32* %101, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_52))
begin
memory_controller_size_b = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 6, i32* %103, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_53))
begin
memory_controller_size_b = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 0, i32* %105, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_54))
begin
memory_controller_size_b = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 32, i32* %107, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_55))
begin
memory_controller_size_b = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 187, i32* %109, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_56))
begin
memory_controller_size_b = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 19, i32* %111, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_57))
begin
memory_controller_size_b = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 4, i32* %113, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_58))
begin
memory_controller_size_b = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 117, i32* %115, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_59))
begin
memory_controller_size_b = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 0, i32* %117, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_60))
begin
memory_controller_size_b = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 0, i32* %119, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_61))
begin
memory_controller_size_b = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 0, i32* %121, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_62))
begin
memory_controller_size_b = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 112, i32* %123, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_63))
begin
memory_controller_size_b = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 0, i32* %125, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_64))
begin
memory_controller_size_b = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 0, i32* %127, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_65))
begin
memory_controller_size_b = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 0, i32* %129, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_66))
begin
memory_controller_size_b = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 12, i32* %131, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_67))
begin
memory_controller_size_b = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 0, i32* %133, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_68))
begin
memory_controller_size_b = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 0, i32* %135, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_69))
begin
memory_controller_size_b = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 226, i32* %137, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_70))
begin
memory_controller_size_b = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 0, i32* %139, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_71))
begin
memory_controller_size_b = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 0, i32* %141, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_72))
begin
memory_controller_size_b = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 18, i32* %143, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_73))
begin
memory_controller_size_b = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 128, i32* %145, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_74))
begin
memory_controller_size_b = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 50, i32* %147, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_75))
begin
memory_controller_size_b = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 180, i32* %149, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_76))
begin
memory_controller_size_b = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 96, i32* %151, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_77))
begin
memory_controller_size_b = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 131, i32* %153, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_78))
begin
memory_controller_size_b = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 132, i32* %155, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_79))
begin
memory_controller_size_b = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 156, i32* %157, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_80))
begin
memory_controller_size_b = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 2, i32* %159, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_81))
begin
memory_controller_size_b = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 129, i32* %161, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_82))
begin
memory_controller_size_b = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 192, i32* %163, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_83))
begin
memory_controller_size_b = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 16, i32* %165, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_84))
begin
memory_controller_size_b = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 138, i32* %167, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_85))
begin
memory_controller_size_b = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 16, i32* %169, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_86))
begin
memory_controller_size_b = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 36, i32* %171, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_87))
begin
memory_controller_size_b = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 0, i32* %173, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_88))
begin
memory_controller_size_b = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 0, i32* %175, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_89))
begin
memory_controller_size_b = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 126, i32* %177, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_90))
begin
memory_controller_size_b = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 64, i32* %179, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_91))
begin
memory_controller_size_b = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 56, i32* %181, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_92))
begin
memory_controller_size_b = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 246, i32* %183, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_93))
begin
memory_controller_size_b = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 26, i32* %185, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_94))
begin
memory_controller_size_b = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 98, i32* %187, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_95))
begin
memory_controller_size_b = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 51, i32* %189, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_96))
begin
memory_controller_size_b = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 128, i32* %191, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_97))
begin
memory_controller_size_b = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 86, i32* %193, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_98))
begin
memory_controller_size_b = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 23, i32* %195, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_99))
begin
memory_controller_size_b = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 169, i32* %197, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_100))
begin
memory_controller_size_b = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 0, i32* %199, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_101))
begin
memory_controller_size_b = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 0, i32* %201, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_102))
begin
memory_controller_size_b = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 0, i32* %203, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_103))
begin
memory_controller_size_b = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 64, i32* %205, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_104))
begin
memory_controller_size_b = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 174, i32* %207, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_105))
begin
memory_controller_size_b = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 27, i32* %209, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_106))
begin
memory_controller_size_b = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 242, i32* %211, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_107))
begin
memory_controller_size_b = 2'd2;
end
/* MXL5005_RegisterInit: %0*/
/*   store i32 0, i32* %213, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_108))
begin
memory_controller_size_b = 2'd2;
end
end
always @(posedge clk) begin
if ((cur_state == LEGUP_0))
begin
return_val <= 0;
if (reset == 1'b0 && ^(0) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to return_val"); $finish; end
end
/* MXL5005_RegisterInit: %0*/
/*   ret i32 0*/
if ((cur_state == LEGUP_F_MXL5005_RegisterInit_BB_0_109))
begin
return_val <= 32'd0;
if (reset == 1'b0 && ^(32'd0) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to return_val"); $finish; end
end
end

endmodule 
`timescale 1 ns / 1 ns
module main
(
	clk,
	clk2x,
	clk1x_follower,
	reset,
	start,
	finish,
	memory_controller_enable_a,
	memory_controller_address_a,
	memory_controller_write_enable_a,
	memory_controller_in_a,
	memory_controller_size_a,
	memory_controller_out_a,
	memory_controller_enable_b,
	memory_controller_address_b,
	memory_controller_write_enable_b,
	memory_controller_in_b,
	memory_controller_size_b,
	memory_controller_out_b,
	memory_controller_waitrequest,
	return_val
);

parameter [1:0] LEGUP_0 = 2'd0;
parameter [1:0] LEGUP_F_main_BB_0_1 = 2'd1;
parameter [1:0] LEGUP_F_main_BB_0_3 = 2'd3;
parameter [1:0] LEGUP_function_call_2 = 2'd2;

input  clk;
input  clk2x;
input  clk1x_follower;
input  reset;
input  start;
output reg  finish;
output reg  memory_controller_enable_a;
output reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] memory_controller_address_a;
output reg  memory_controller_write_enable_a;
output reg [`MEMORY_CONTROLLER_DATA_SIZE-1:0] memory_controller_in_a;
output reg [1:0] memory_controller_size_a;
input [`MEMORY_CONTROLLER_DATA_SIZE-1:0] memory_controller_out_a;
output reg  memory_controller_enable_b;
output reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] memory_controller_address_b;
output reg  memory_controller_write_enable_b;
output reg [`MEMORY_CONTROLLER_DATA_SIZE-1:0] memory_controller_in_b;
output reg [1:0] memory_controller_size_b;
input [`MEMORY_CONTROLLER_DATA_SIZE-1:0] memory_controller_out_b;
input  memory_controller_waitrequest;
output reg [31:0] return_val;
reg [1:0] cur_state;
reg [31:0] main_0_1;
reg [31:0] main_0_1_reg;
reg  MXL5005_RegisterInit_start;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_arg_fe;
wire  MXL5005_RegisterInit_memory_controller_enable_a;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_memory_controller_address_a;
wire  MXL5005_RegisterInit_memory_controller_write_enable_a;
wire [`MEMORY_CONTROLLER_DATA_SIZE-1:0] MXL5005_RegisterInit_memory_controller_in_a;
reg [`MEMORY_CONTROLLER_DATA_SIZE-1:0] MXL5005_RegisterInit_memory_controller_out_a;
wire [1:0] MXL5005_RegisterInit_memory_controller_size_a;
wire  MXL5005_RegisterInit_memory_controller_enable_b;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] MXL5005_RegisterInit_memory_controller_address_b;
wire  MXL5005_RegisterInit_memory_controller_write_enable_b;
wire [`MEMORY_CONTROLLER_DATA_SIZE-1:0] MXL5005_RegisterInit_memory_controller_in_b;
reg [`MEMORY_CONTROLLER_DATA_SIZE-1:0] MXL5005_RegisterInit_memory_controller_out_b;
wire [1:0] MXL5005_RegisterInit_memory_controller_size_b;
reg  MXL5005_RegisterInit_memory_controller_waitrequest;
wire  MXL5005_RegisterInit_finish;
reg  MXL5005_RegisterInit_finish_final;
wire [31:0] MXL5005_RegisterInit_return_val;
reg  legup_function_call;
wire [15:0] legup_pthreadpoll_threadID;


MXL5005_RegisterInit MXL5005_RegisterInit_inst (
	.memory_controller_enable_a (MXL5005_RegisterInit_memory_controller_enable_a),
	.memory_controller_address_a (MXL5005_RegisterInit_memory_controller_address_a),
	.memory_controller_write_enable_a (MXL5005_RegisterInit_memory_controller_write_enable_a),
	.memory_controller_in_a (MXL5005_RegisterInit_memory_controller_in_a),
	.memory_controller_size_a (MXL5005_RegisterInit_memory_controller_size_a),
	.memory_controller_out_a (memory_controller_out_a[`MEMORY_CONTROLLER_DATA_SIZE-1:0]),
	.memory_controller_enable_b (MXL5005_RegisterInit_memory_controller_enable_b),
	.memory_controller_address_b (MXL5005_RegisterInit_memory_controller_address_b),
	.memory_controller_write_enable_b (MXL5005_RegisterInit_memory_controller_write_enable_b),
	.memory_controller_in_b (MXL5005_RegisterInit_memory_controller_in_b),
	.memory_controller_size_b (MXL5005_RegisterInit_memory_controller_size_b),
	.memory_controller_out_b (memory_controller_out_b[`MEMORY_CONTROLLER_DATA_SIZE-1:0]),
	.memory_controller_waitrequest (memory_controller_waitrequest),
	.clk (clk),
	.clk2x (clk2x),
	.clk1x_follower (clk1x_follower),
	.reset (reset),
	.start (MXL5005_RegisterInit_start),
	.finish (MXL5005_RegisterInit_finish),
	.return_val (MXL5005_RegisterInit_return_val),
	.arg_fe (MXL5005_RegisterInit_arg_fe)
);


// Local Rams


always @(posedge clk) begin
if (((cur_state == LEGUP_0) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_0;
if (reset == 1'b0 && ^(LEGUP_0) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_0) & (memory_controller_waitrequest == 1'd0)) & (start == 1'd1)))
begin
cur_state <= LEGUP_F_main_BB_0_1;
if (reset == 1'b0 && ^(LEGUP_F_main_BB_0_1) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_0) & (memory_controller_waitrequest == 1'd0)) & (start == 1'd0)))
begin
cur_state <= LEGUP_0;
if (reset == 1'b0 && ^(LEGUP_0) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_main_BB_0_1) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_main_BB_0_1;
if (reset == 1'b0 && ^(LEGUP_F_main_BB_0_1) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_main_BB_0_1) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_function_call_2;
if (reset == 1'b0 && ^(LEGUP_function_call_2) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_function_call_2) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_function_call_2;
if (reset == 1'b0 && ^(LEGUP_function_call_2) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_function_call_2) & (memory_controller_waitrequest == 1'd0)) & (MXL5005_RegisterInit_finish_final == 1'd1)))
begin
cur_state <= LEGUP_F_main_BB_0_3;
if (reset == 1'b0 && ^(LEGUP_F_main_BB_0_3) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_function_call_2) & (memory_controller_waitrequest == 1'd0)) & (MXL5005_RegisterInit_finish_final == 1'd0)))
begin
cur_state <= LEGUP_function_call_2;
if (reset == 1'b0 && ^(LEGUP_function_call_2) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_main_BB_0_3) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_main_BB_0_3;
if (reset == 1'b0 && ^(LEGUP_F_main_BB_0_3) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_main_BB_0_3) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_0;
if (reset == 1'b0 && ^(LEGUP_0) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((reset == 1'd1))
begin
cur_state <= 2'd0;
if (reset == 1'b0 && ^(2'd0) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
end
always @(*) begin
/* main: %0*/
/*   %1 = tail call i32 @MXL5005_RegisterInit(%struct.dvb_frontend* undef)*/
begin
main_0_1 = MXL5005_RegisterInit_return_val;
end
end
always @(posedge clk) begin
/* main: %0*/
/*   %1 = tail call i32 @MXL5005_RegisterInit(%struct.dvb_frontend* undef)*/
if ((cur_state == LEGUP_function_call_2))
begin
main_0_1_reg <= main_0_1;
if (reset == 1'b0 && ^(main_0_1) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to main_0_1_reg"); $finish; end
end
end
always @(posedge clk) begin
/* main: %0*/
/*   %1 = tail call i32 @MXL5005_RegisterInit(%struct.dvb_frontend* undef)*/
if ((cur_state == LEGUP_F_main_BB_0_1))
begin
MXL5005_RegisterInit_start <= 1'd1;
if (reset == 1'b0 && ^(1'd1) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_start"); $finish; end
end
/* main: %0*/
/*   %1 = tail call i32 @MXL5005_RegisterInit(%struct.dvb_frontend* undef)*/
if ((cur_state == LEGUP_function_call_2))
begin
MXL5005_RegisterInit_start <= 1'd0;
if (reset == 1'b0 && ^(1'd0) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_start"); $finish; end
end
end
always @(posedge clk) begin
/* main: %0*/
/*   %1 = tail call i32 @MXL5005_RegisterInit(%struct.dvb_frontend* undef)*/
if ((cur_state == LEGUP_F_main_BB_0_1))
begin
MXL5005_RegisterInit_arg_fe <= 0;
if (reset == 1'b0 && ^(0) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to MXL5005_RegisterInit_arg_fe"); $finish; end
end
end
always @(*) begin
/* main: %0*/
/*   %1 = tail call i32 @MXL5005_RegisterInit(%struct.dvb_frontend* undef)*/
begin
MXL5005_RegisterInit_memory_controller_out_a = memory_controller_out_a;
end
end
always @(*) begin
/* main: %0*/
/*   %1 = tail call i32 @MXL5005_RegisterInit(%struct.dvb_frontend* undef)*/
begin
MXL5005_RegisterInit_memory_controller_out_b = memory_controller_out_b;
end
end
always @(*) begin
MXL5005_RegisterInit_memory_controller_waitrequest = memory_controller_waitrequest;
end
always @(*) begin
MXL5005_RegisterInit_finish_final = MXL5005_RegisterInit_finish;
end
always @(*) begin
legup_function_call = 1'd0;
/* main: %0*/
/*   %1 = tail call i32 @MXL5005_RegisterInit(%struct.dvb_frontend* undef)*/
if ((cur_state == LEGUP_function_call_2))
begin
legup_function_call = 1'd1;
end
end
always @(posedge clk) begin
if ((cur_state == LEGUP_0))
begin
finish <= 1'd0;
if (reset == 1'b0 && ^(1'd0) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to finish"); $finish; end
end
/* main: %0*/
/*   ret i32 0*/
if ((cur_state == LEGUP_F_main_BB_0_3))
begin
finish <= (memory_controller_waitrequest == 1'd0);
if (reset == 1'b0 && ^((memory_controller_waitrequest == 1'd0)) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to finish"); $finish; end
end
end
always @(*) begin
memory_controller_enable_a = 1'd0;
/* main: %0*/
/*   %1 = tail call i32 @MXL5005_RegisterInit(%struct.dvb_frontend* undef)*/
if ((cur_state == LEGUP_function_call_2))
begin
memory_controller_enable_a = MXL5005_RegisterInit_memory_controller_enable_a;
end
/* main: %0*/
/*   %1 = tail call i32 @MXL5005_RegisterInit(%struct.dvb_frontend* undef)*/
if ((cur_state == LEGUP_function_call_2))
begin
memory_controller_enable_a = MXL5005_RegisterInit_memory_controller_enable_a;
end
end
always @(*) begin
memory_controller_address_a = 1'd0;
/* main: %0*/
/*   %1 = tail call i32 @MXL5005_RegisterInit(%struct.dvb_frontend* undef)*/
if ((cur_state == LEGUP_function_call_2))
begin
memory_controller_address_a[`MEMORY_CONTROLLER_ADDR_SIZE-1:0] = MXL5005_RegisterInit_memory_controller_address_a;
end
/* main: %0*/
/*   %1 = tail call i32 @MXL5005_RegisterInit(%struct.dvb_frontend* undef)*/
if ((cur_state == LEGUP_function_call_2))
begin
memory_controller_address_a[`MEMORY_CONTROLLER_ADDR_SIZE-1:0] = MXL5005_RegisterInit_memory_controller_address_a;
end
end
always @(*) begin
memory_controller_write_enable_a = 1'd0;
/* main: %0*/
/*   %1 = tail call i32 @MXL5005_RegisterInit(%struct.dvb_frontend* undef)*/
if ((cur_state == LEGUP_function_call_2))
begin
memory_controller_write_enable_a = MXL5005_RegisterInit_memory_controller_write_enable_a;
end
/* main: %0*/
/*   %1 = tail call i32 @MXL5005_RegisterInit(%struct.dvb_frontend* undef)*/
if ((cur_state == LEGUP_function_call_2))
begin
memory_controller_write_enable_a = MXL5005_RegisterInit_memory_controller_write_enable_a;
end
end
always @(*) begin
memory_controller_in_a = 1'd0;
/* main: %0*/
/*   %1 = tail call i32 @MXL5005_RegisterInit(%struct.dvb_frontend* undef)*/
if ((cur_state == LEGUP_function_call_2))
begin
memory_controller_in_a[`MEMORY_CONTROLLER_DATA_SIZE-1:0] = MXL5005_RegisterInit_memory_controller_in_a;
end
/* main: %0*/
/*   %1 = tail call i32 @MXL5005_RegisterInit(%struct.dvb_frontend* undef)*/
if ((cur_state == LEGUP_function_call_2))
begin
memory_controller_in_a[`MEMORY_CONTROLLER_DATA_SIZE-1:0] = MXL5005_RegisterInit_memory_controller_in_a;
end
end
always @(*) begin
memory_controller_size_a = 1'd0;
/* main: %0*/
/*   %1 = tail call i32 @MXL5005_RegisterInit(%struct.dvb_frontend* undef)*/
if ((cur_state == LEGUP_function_call_2))
begin
memory_controller_size_a[1:0] = MXL5005_RegisterInit_memory_controller_size_a;
end
/* main: %0*/
/*   %1 = tail call i32 @MXL5005_RegisterInit(%struct.dvb_frontend* undef)*/
if ((cur_state == LEGUP_function_call_2))
begin
memory_controller_size_a[1:0] = MXL5005_RegisterInit_memory_controller_size_a;
end
end
always @(*) begin
memory_controller_enable_b = 1'd0;
/* main: %0*/
/*   %1 = tail call i32 @MXL5005_RegisterInit(%struct.dvb_frontend* undef)*/
if ((cur_state == LEGUP_function_call_2))
begin
memory_controller_enable_b = MXL5005_RegisterInit_memory_controller_enable_b;
end
/* main: %0*/
/*   %1 = tail call i32 @MXL5005_RegisterInit(%struct.dvb_frontend* undef)*/
if ((cur_state == LEGUP_function_call_2))
begin
memory_controller_enable_b = MXL5005_RegisterInit_memory_controller_enable_b;
end
end
always @(*) begin
memory_controller_address_b = 1'd0;
/* main: %0*/
/*   %1 = tail call i32 @MXL5005_RegisterInit(%struct.dvb_frontend* undef)*/
if ((cur_state == LEGUP_function_call_2))
begin
memory_controller_address_b[`MEMORY_CONTROLLER_ADDR_SIZE-1:0] = MXL5005_RegisterInit_memory_controller_address_b;
end
/* main: %0*/
/*   %1 = tail call i32 @MXL5005_RegisterInit(%struct.dvb_frontend* undef)*/
if ((cur_state == LEGUP_function_call_2))
begin
memory_controller_address_b[`MEMORY_CONTROLLER_ADDR_SIZE-1:0] = MXL5005_RegisterInit_memory_controller_address_b;
end
end
always @(*) begin
memory_controller_write_enable_b = 1'd0;
/* main: %0*/
/*   %1 = tail call i32 @MXL5005_RegisterInit(%struct.dvb_frontend* undef)*/
if ((cur_state == LEGUP_function_call_2))
begin
memory_controller_write_enable_b = MXL5005_RegisterInit_memory_controller_write_enable_b;
end
/* main: %0*/
/*   %1 = tail call i32 @MXL5005_RegisterInit(%struct.dvb_frontend* undef)*/
if ((cur_state == LEGUP_function_call_2))
begin
memory_controller_write_enable_b = MXL5005_RegisterInit_memory_controller_write_enable_b;
end
end
always @(*) begin
memory_controller_in_b = 1'd0;
/* main: %0*/
/*   %1 = tail call i32 @MXL5005_RegisterInit(%struct.dvb_frontend* undef)*/
if ((cur_state == LEGUP_function_call_2))
begin
memory_controller_in_b[`MEMORY_CONTROLLER_DATA_SIZE-1:0] = MXL5005_RegisterInit_memory_controller_in_b;
end
/* main: %0*/
/*   %1 = tail call i32 @MXL5005_RegisterInit(%struct.dvb_frontend* undef)*/
if ((cur_state == LEGUP_function_call_2))
begin
memory_controller_in_b[`MEMORY_CONTROLLER_DATA_SIZE-1:0] = MXL5005_RegisterInit_memory_controller_in_b;
end
end
always @(*) begin
memory_controller_size_b = 1'd0;
/* main: %0*/
/*   %1 = tail call i32 @MXL5005_RegisterInit(%struct.dvb_frontend* undef)*/
if ((cur_state == LEGUP_function_call_2))
begin
memory_controller_size_b[1:0] = MXL5005_RegisterInit_memory_controller_size_b;
end
/* main: %0*/
/*   %1 = tail call i32 @MXL5005_RegisterInit(%struct.dvb_frontend* undef)*/
if ((cur_state == LEGUP_function_call_2))
begin
memory_controller_size_b[1:0] = MXL5005_RegisterInit_memory_controller_size_b;
end
end
always @(posedge clk) begin
if ((cur_state == LEGUP_0))
begin
return_val <= 0;
if (reset == 1'b0 && ^(0) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to return_val"); $finish; end
end
/* main: %0*/
/*   ret i32 0*/
if ((cur_state == LEGUP_F_main_BB_0_3))
begin
return_val <= 32'd0;
if (reset == 1'b0 && ^(32'd0) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to return_val"); $finish; end
end
end

endmodule 
module ram_dual_port
(
	clk,
	address_a,
	address_b,
	wren_a,
	wren_b,
	data_a,
	data_b,
	byteena_a,
	byteena_b,
	q_a,
	q_b
);

parameter  width_a = 1'd0;
parameter  width_b = 1'd0;
parameter  widthad_a = 1'd0;
parameter  widthad_b = 1'd0;
parameter  numwords_a = 1'd0;
parameter  numwords_b = 1'd0;
parameter  init_file = "UNUSED.mif";
parameter  width_be_a = 1'd0;
parameter  width_be_b = 1'd0;
parameter  latency = 1;

input  clk;
input [(widthad_a-1):0] address_a;
input [(widthad_b-1):0] address_b;
output wire [(width_a-1):0] q_a;
output wire [(width_b-1):0] q_b;
reg [(width_a-1):0] q_a_wire;
reg [(width_b-1):0] q_b_wire;
input  wren_a;
input  wren_b;
input [(width_a-1):0] data_a;
input [(width_b-1):0] data_b;
// byte enable is unsupported by inferred RAMs
input [width_be_a-1:0] byteena_a;
input [width_be_b-1:0] byteena_b;

(* ramstyle = "no_rw_check", ram_init_file = init_file *) reg [width_a-1:0] ram[numwords_a-1:0];

/* synthesis translate_off */
integer i;
ALTERA_MF_MEMORY_INITIALIZATION mem ();
reg [8*256:1] ram_ver_file;
initial begin
	if (init_file == "UNUSED.mif")
    begin
		for (i = 0; i < numwords_a; i = i + 1)
			ram[i] = 0;
    end
	else
    begin
        // modelsim can't read .mif files directly. So use Altera function to
        // convert them to .ver files
        mem.convert_to_ver_file(init_file, width_a, ram_ver_file);
        $readmemh(ram_ver_file, ram);
    end
end
/* synthesis translate_on */

always @ (posedge clk)
begin // Port A
if (wren_a)
begin
    ram[address_a] <= data_a;
    q_a_wire <= {width_a{1'bX}};
end
else
    q_a_wire <= ram[address_a];
end
always @ (posedge clk)
begin // Port b
if (wren_b)
begin
    ram[address_b] <= data_b;
    q_b_wire <= {width_b{1'bX}};
end
else
    q_b_wire <= ram[address_b];
end



integer j;
reg [(width_a-1):0] q_a_reg[latency:1], q_b_reg[latency:1];

always @(*)
begin
   q_a_reg[1] <= q_a_wire;
   q_b_reg[1] <= q_b_wire;
end

always @(posedge clk)
begin
   for (j = 1; j < latency; j=j+1)
   begin
       q_a_reg[j+1] <= q_a_reg[j];
       q_b_reg[j+1] <= q_b_reg[j];
   end
end

assign q_a = q_a_reg[latency];
assign q_b = q_b_reg[latency];


endmodule
module rom_dual_port
(
	clk,
	address_a,
	address_b,
	q_a,
	q_b
);

parameter  width_a = 1'd0;
parameter  width_b = 1'd0;
parameter  widthad_a = 1'd0;
parameter  widthad_b = 1'd0;
parameter  numwords_a = 1'd0;
parameter  numwords_b = 1'd0;
parameter  init_file = "UNUSED.mif";
parameter  latency = 1;

input  clk;
input [(widthad_a-1):0] address_a;
input [(widthad_b-1):0] address_b;
output wire [(width_a-1):0] q_a;
output wire [(width_b-1):0] q_b;
reg [(width_a-1):0] q_a_wire;
reg [(width_b-1):0] q_b_wire;

(* ramstyle = "no_rw_check", ram_init_file = init_file *) reg [width_a-1:0] ram[numwords_a-1:0];

/* synthesis translate_off */
integer i;
ALTERA_MF_MEMORY_INITIALIZATION mem ();
reg [8*256:1] ram_ver_file;
initial begin
	if (init_file == "UNUSED.mif")
    begin
		for (i = 0; i < numwords_a; i = i + 1)
			ram[i] = 0;
    end
	else
    begin
        // modelsim can't read .mif files directly. So use Altera function to
        // convert them to .ver files
        mem.convert_to_ver_file(init_file, width_a, ram_ver_file);
        $readmemh(ram_ver_file, ram);
    end
end
/* synthesis translate_on */

always @ (posedge clk)
begin
    q_a_wire <= ram[address_a];
    q_b_wire <= ram[address_b];
end



integer j;
reg [(width_a-1):0] q_a_reg[latency:1], q_b_reg[latency:1];

always @(*)
begin
   q_a_reg[1] <= q_a_wire;
   q_b_reg[1] <= q_b_wire;
end

always @(posedge clk)
begin
   for (j = 1; j < latency; j=j+1)
   begin
       q_a_reg[j+1] <= q_a_reg[j];
       q_b_reg[j+1] <= q_b_reg[j];
   end
end

assign q_a = q_a_reg[latency];
assign q_b = q_b_reg[latency];


endmodule
module de2 (CLOCK_50, KEY, SW, HEX0, HEX1, HEX2, HEX3, HEX4, HEX5, HEX6, HEX7, LEDG);
    input CLOCK_50;
    output [7:0] LEDG;
    input [3:0] KEY;
    input [17:0] SW;
    output [6:0] HEX0, HEX1, HEX2, HEX3, HEX4, HEX5, HEX6, HEX7;

    wire clk = CLOCK_50;
    wire reset = ~KEY[0];
    wire go = ~KEY[1];

    wire  start;
    wire [31:0] return_val;
    wire  finish;

    reg [31:0] return_val_reg;
    
	reg [3:0] hex0, hex1, hex2, hex3, hex4, hex5, hex6, hex7;
	always @ (*) begin
		hex7 <= return_val_reg[31:28];
		hex6 <= return_val_reg[27:24];
		hex5 <= return_val_reg[23:20];
		hex4 <= return_val_reg[19:16];
		hex3 <= return_val_reg[15:12];
		hex2 <= return_val_reg[11:8];
		hex1 <= return_val_reg[7:4];
		hex0 <= return_val_reg[3:0];
	end

    hex_digits h7( .x(hex7), .hex_LEDs(HEX7));
    hex_digits h6( .x(hex6), .hex_LEDs(HEX6));
    hex_digits h5( .x(hex5), .hex_LEDs(HEX5));
    hex_digits h4( .x(hex4), .hex_LEDs(HEX4));
    hex_digits h3( .x(hex3), .hex_LEDs(HEX3));
    hex_digits h2( .x(hex2), .hex_LEDs(HEX2));
    hex_digits h1( .x(hex1), .hex_LEDs(HEX1));
    hex_digits h0( .x(hex0), .hex_LEDs(HEX0));


    top top_inst (
        .clk (clk),
        .reset (reset),
        .start (start),
        .finish (finish),
        .return_val (return_val)
    );

    parameter s_WAIT = 3'b001, s_START = 3'b010, s_EXE = 3'b011,
                s_DONE = 3'b100;

    // state registers
    reg [3:0] y_Q, Y_D;

    assign LEDG[3:0] = y_Q;

    // next state
    always @(*)
    begin
        case (y_Q)
            s_WAIT: if (go) Y_D = s_START; else Y_D = y_Q;

            s_START: Y_D = s_EXE;

            s_EXE: if (!finish) Y_D = s_EXE; else Y_D = s_DONE;

            s_DONE: Y_D = s_DONE;

            default: Y_D = 3'bxxx;
        endcase
    end

    // current state
    always @(posedge clk)
    begin
        if (reset) // synchronous clear
            y_Q <= s_WAIT;
        else
            y_Q <= Y_D;
    end

    always @(posedge clk)
        if (y_Q == s_EXE && finish)
            return_val_reg <= return_val;
        else if (y_Q == s_DONE)
            return_val_reg <= return_val_reg;
        else
            return_val_reg <= 0;


    assign start = (y_Q == s_START);
endmodule

module de4 (
	OSC_50_BANK2,
    BUTTON,
    LED,
	SEG0_D,
	SEG1_D
);
    input OSC_50_BANK2;
    input [1:0] BUTTON;
    output [6:0] SEG0_D;
    output [6:0] SEG1_D;
    output [7:0] LED;

    de2 de2_inst (
        .CLOCK_50 (OSC_50_BANK2),
        .LEDG (LED),
        .KEY (BUTTON),
        .SW (),
        .HEX0 (SEG0_D),
        .HEX1 (SEG1_D),
        .HEX2 (),
        .HEX3 (),
        .HEX4 (),
        .HEX5 (),
        .HEX6 (),
        .HEX7 ()
    );

endmodule
module hex_digits(x, hex_LEDs);
    input [3:0] x;
    output [6:0] hex_LEDs;
    
    assign hex_LEDs[0] = (~x[3] & ~x[2] & ~x[1] & x[0]) |
                            (~x[3] & x[2] & ~x[1] & ~x[0]) |
                            (x[3] & x[2] & ~x[1] & x[0]) |
                            (x[3] & ~x[2] & x[1] & x[0]);
    assign hex_LEDs[1] = (~x[3] & x[2] & ~x[1] & x[0]) |
                            (x[3] & x[1] & x[0]) |
                            (x[3] & x[2] & ~x[0]) |
                            (x[2] & x[1] & ~x[0]);
    assign hex_LEDs[2] = (x[3] & x[2] & ~x[0]) |
                            (x[3] & x[2] & x[1]) |
                            (~x[3] & ~x[2] & x[1] & ~x[0]);
    assign hex_LEDs[3] = (~x[3] & ~x[2] & ~x[1] & x[0]) | 
                            (~x[3] & x[2] & ~x[1] & ~x[0]) | 
                            (x[2] & x[1] & x[0]) | 
                            (x[3] & ~x[2] & x[1] & ~x[0]);
    assign hex_LEDs[4] = (~x[3] & x[0]) |
                            (~x[3] & x[2] & ~x[1]) |
                            (~x[2] & ~x[1] & x[0]);
    assign hex_LEDs[5] = (~x[3] & ~x[2] & x[0]) | 
                            (~x[3] & ~x[2] & x[1]) | 
                            (~x[3] & x[1] & x[0]) | 
                            (x[3] & x[2] & ~x[1] & x[0]);
    assign hex_LEDs[6] = (~x[3] & ~x[2] & ~x[1]) | 
                            (x[3] & x[2] & ~x[1] & ~x[0]) | 
                            (~x[3] & x[2] & x[1] & x[0]);
    
endmodule
`timescale 1 ns / 1 ns
module main_tb
(
);

reg  clk;
reg  reset;
reg  start;
wire [31:0] return_val;
wire  finish;


top top_inst (
	.clk (clk),
	.reset (reset),
	.start (start),
	.finish (finish),
	.return_val (return_val)
);


// Local Rams



initial 
    clk = 0;
always @(clk)
    clk <= #10 ~clk;

initial begin
//$monitor("At t=%t clk=%b %b %b %b %d", $time, clk, reset, start, finish, return_val);
@(negedge clk);
reset <= 1;
@(negedge clk);
reset <= 0;
start <= 1;

end

always@(finish) begin
    if (finish == 1) begin
        $display("At t=%t clk=%b finish=%b return_val=%d", $time, clk, finish, return_val);
        $display("Cycles: %d", ($time-50)/20);
        $finish;
    end
end

endmodule 
