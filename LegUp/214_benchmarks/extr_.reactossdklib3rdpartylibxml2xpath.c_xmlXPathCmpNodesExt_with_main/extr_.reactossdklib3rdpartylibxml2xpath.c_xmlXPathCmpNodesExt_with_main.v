//----------------------------------------------------------------------------//
// Generated by LegUp High-Level Synthesis Tool Version 3.0 (http://legup.org)
// Compiled: Tue Jul 15 15:43:09 2014
// University of Toronto
// For research and academic purposes only. Commercial use is prohibited.
// Please send bugs to: legup@eecg.toronto.edu
// Date: Tue Mar 10 07:58:47 2020
//----------------------------------------------------------------------------//

`define MEMORY_CONTROLLER_ADDR_SIZE 32
`define MEMORY_CONTROLLER_DATA_SIZE 64
// Number of RAM elements: 2
`define MEMORY_CONTROLLER_TAG_SIZE 9
`define TAG_NULL `MEMORY_CONTROLLER_TAG_SIZE'd0
`define TAG_PROCESSOR `MEMORY_CONTROLLER_TAG_SIZE'd1
// @.str = private unnamed_addr constant [8 x i8] c"default\00"

`define TAG_g__str `MEMORY_CONTROLLER_TAG_SIZE'd2
// @.str1 = private unnamed_addr constant [18 x i8] c"turtle_comparison\00"

`define TAG_g__str1 `MEMORY_CONTROLLER_TAG_SIZE'd3
`define TAG_g__str1_a {`TAG_g__str1, 23'd0}
`define TAG_g__str_a {`TAG_g__str, 23'd0}

// Turn off warning 'ignoring unsupported system task'
// altera message_off 10175

module top
	(
		clk,
		reset,
		start,
		finish,
		return_val
	);
input clk;
input reset;
input start;
output wire finish;
output wire [31:0] return_val;
wire memory_controller_waitrequest;
wire memory_controller_enable_a;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] memory_controller_address_a;
wire memory_controller_write_enable_a;
wire [`MEMORY_CONTROLLER_DATA_SIZE-1:0] memory_controller_in_a;
wire [1:0] memory_controller_size_a;
wire [`MEMORY_CONTROLLER_DATA_SIZE-1:0] memory_controller_out_a;

wire memory_controller_enable_b;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] memory_controller_address_b;
wire memory_controller_write_enable_b;
wire [`MEMORY_CONTROLLER_DATA_SIZE-1:0] memory_controller_in_b;
wire [1:0] memory_controller_size_b;
wire [`MEMORY_CONTROLLER_DATA_SIZE-1:0] memory_controller_out_b;

assign memory_controller_waitrequest = 0;

memory_controller memory_controller_inst (
	.clk( clk ),
	.memory_controller_enable_a( memory_controller_enable_a ),
	.memory_controller_enable_b( memory_controller_enable_b ),
	.memory_controller_address_a( memory_controller_address_a ),
	.memory_controller_address_b( memory_controller_address_b ),
	.memory_controller_write_enable_a( memory_controller_write_enable_a ),
	.memory_controller_write_enable_b( memory_controller_write_enable_b ),
	.memory_controller_in_a( memory_controller_in_a ),
	.memory_controller_in_b( memory_controller_in_b ),
	.memory_controller_size_a( memory_controller_size_a ),
	.memory_controller_size_b( memory_controller_size_b ),
	.memory_controller_waitrequest( memory_controller_waitrequest ),
	.memory_controller_out_reg_a( memory_controller_out_a ),
	.memory_controller_out_reg_b( memory_controller_out_b )
);

main main_inst(
	.clk( clk ),
	.clk2x( clk2x ),
	.clk1x_follower( clk1x_follower ),
	.reset( reset ),
	.start( start ),
	.finish( finish ),
	.return_val( return_val ),
	.memory_controller_enable_a(memory_controller_enable_a),
	.memory_controller_address_a(memory_controller_address_a),
	.memory_controller_write_enable_a(memory_controller_write_enable_a),
	.memory_controller_in_a(memory_controller_in_a),
	.memory_controller_size_a(memory_controller_size_a),
	.memory_controller_out_a(memory_controller_out_a),
	.memory_controller_enable_b(memory_controller_enable_b),
	.memory_controller_address_b(memory_controller_address_b),
	.memory_controller_write_enable_b(memory_controller_write_enable_b),
	.memory_controller_in_b(memory_controller_in_b),
	.memory_controller_size_b(memory_controller_size_b),
	.memory_controller_out_b(memory_controller_out_b),
	.memory_controller_waitrequest(memory_controller_waitrequest)
);

endmodule
`timescale 1 ns / 1 ns
module memory_controller
(
	clk,
	memory_controller_address_a,
	memory_controller_address_b,
	memory_controller_enable_a,
	memory_controller_enable_b,
	memory_controller_write_enable_a,
	memory_controller_write_enable_b,
	memory_controller_in_a,
	memory_controller_in_b,
	memory_controller_size_a,
	memory_controller_size_b,
	memory_controller_waitrequest,
	memory_controller_out_reg_a,
	memory_controller_out_reg_b
);


input clk;
input memory_controller_waitrequest;
input [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] memory_controller_address_a;
input memory_controller_enable_a;
input memory_controller_write_enable_a;
input [64-1:0] memory_controller_in_a;
input [1:0] memory_controller_size_a;
output reg [64-1:0] memory_controller_out_reg_a;
reg [64-1:0] memory_controller_out_prev_a;
reg [64-1:0] memory_controller_out_a;

reg memory_controller_enable_reg_a;
input [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] memory_controller_address_b;
input memory_controller_enable_b;
input memory_controller_write_enable_b;
input [64-1:0] memory_controller_in_b;
input [1:0] memory_controller_size_b;
output reg [64-1:0] memory_controller_out_reg_b;
reg [64-1:0] memory_controller_out_prev_b;
reg [64-1:0] memory_controller_out_b;

reg memory_controller_enable_reg_b;

reg [2:0] _str_address_a;
reg [2:0] _str_address_b;
reg _str_write_enable_a;
reg _str_write_enable_b;
reg [7:0] _str_in_a;
reg [7:0] _str_in_b;
wire [7:0] _str_out_a;
wire [7:0] _str_out_b;

// @.str = private unnamed_addr constant [8 x i8] c"default\00"

rom_dual_port _str (
	.clk( clk ),
	.address_a( _str_address_a ),
	.address_b( _str_address_b ),
	.q_a( _str_out_a ),
	.q_b( _str_out_b)
);
defparam _str.width_a = 8;
defparam _str.width_b = 8;
defparam _str.widthad_a = 3;
defparam _str.widthad_b = 3;
defparam _str.numwords_a = 8;
defparam _str.numwords_b = 8;
defparam _str.latency = 1;
defparam _str.init_file = "_str.mif";


reg [4:0] _str1_address_a;
reg [4:0] _str1_address_b;
reg _str1_write_enable_a;
reg _str1_write_enable_b;
reg [7:0] _str1_in_a;
reg [7:0] _str1_in_b;
wire [7:0] _str1_out_a;
wire [7:0] _str1_out_b;

// @.str1 = private unnamed_addr constant [18 x i8] c"turtle_comparison\00"

rom_dual_port _str1 (
	.clk( clk ),
	.address_a( _str1_address_a ),
	.address_b( _str1_address_b ),
	.q_a( _str1_out_a ),
	.q_b( _str1_out_b)
);
defparam _str1.width_a = 8;
defparam _str1.width_b = 8;
defparam _str1.widthad_a = 5;
defparam _str1.widthad_b = 5;
defparam _str1.numwords_a = 18;
defparam _str1.numwords_b = 18;
defparam _str1.latency = 1;
defparam _str1.init_file = "_str1.mif";

wire [`MEMORY_CONTROLLER_TAG_SIZE-1:0] tag_a;
assign tag_a = memory_controller_address_a[`MEMORY_CONTROLLER_ADDR_SIZE-1:`MEMORY_CONTROLLER_ADDR_SIZE-`MEMORY_CONTROLLER_TAG_SIZE];
always @(*)
if (memory_controller_enable_a & (tag_a == 0))
begin
   $display("Error: Null pointer exception! Are you trying to read from a local ram? Use: 'set_memory_global <ram_name>' To debug this error try: 'set_parameter PRINT_STATES 1'");
   $finish;
end
reg [2:0] prevAddr_a;
reg [1:0] prevSize_a;
reg [2:0] prevSize_a_and;

always @(posedge clk)
begin
	prevAddr_a <= memory_controller_address_a[2:0];
	prevSize_a <= memory_controller_size_a;
end
wire [`MEMORY_CONTROLLER_TAG_SIZE-1:0] tag_b;
assign tag_b = memory_controller_address_b[`MEMORY_CONTROLLER_ADDR_SIZE-1:`MEMORY_CONTROLLER_ADDR_SIZE-`MEMORY_CONTROLLER_TAG_SIZE];
always @(*)
if (memory_controller_enable_b & (tag_b == 0))
begin
   $display("Error: Null pointer exception! Are you trying to read from a local ram? Use: 'set_memory_global <ram_name>' To debug this error try: 'set_parameter PRINT_STATES 1'");
   $finish;
end
reg [2:0] prevAddr_b;
reg [1:0] prevSize_b;
reg [2:0] prevSize_b_and;

always @(posedge clk)
begin
	prevAddr_b <= memory_controller_address_b[2:0];
	prevSize_b <= memory_controller_size_b;
end

reg [2:0] select_not_struct_a;

wire select__str_a;
assign select__str_a = (tag_a == `TAG_g__str);
reg select__str_reg_a;
wire [7:0] memory_controller__str_out_a;
assign memory_controller__str_out_a = {8{ select__str_reg_a}} & _str_out_a;

wire select__str1_a;
assign select__str1_a = (tag_a == `TAG_g__str1);
reg select__str1_reg_a;
wire [7:0] memory_controller__str1_out_a;
assign memory_controller__str1_out_a = {8{ select__str1_reg_a}} & _str1_out_a;

always @(*)
begin
	_str_address_a = memory_controller_address_a [3-1+0:0] & {3{select__str_a}};
	_str_write_enable_a = memory_controller_write_enable_a & select__str_a;
	_str_in_a [8-1:0] = memory_controller_in_a[8-1:0];

	_str1_address_a = memory_controller_address_a [5-1+0:0] & {5{select__str1_a}};
	_str1_write_enable_a = memory_controller_write_enable_a & select__str1_a;
	_str1_in_a [8-1:0] = memory_controller_in_a[8-1:0];

end
always @(*)
begin
	select_not_struct_a [2:0] = 3'b0;
	if (prevAddr_a[2:0] & select_not_struct_a[2:0] != 0 && memory_controller_enable_a)
	begin
		$display("Error: memory address not aligned to ram word size!");
		$finish;
	end

	prevSize_a_and[0] = prevSize_a[1] | prevSize_a[0];
	prevSize_a_and[1] = prevSize_a[1];
	prevSize_a_and[2] = prevSize_a[1] & prevSize_a[0];
	if ((prevAddr_a & prevSize_a_and) != 0 && memory_controller_enable_a)
	begin
		$display("Error: memory address not aligned to ram word size!");
		$finish;
	end
	memory_controller_out_prev_a = memory_controller_out_reg_a & { 64{!memory_controller_enable_reg_a}};
	memory_controller_out_a = 1'b0 | memory_controller_out_prev_a | memory_controller__str_out_a | memory_controller__str1_out_a;
end

always @(posedge clk)
begin
memory_controller_out_reg_a <= memory_controller_out_a;
memory_controller_enable_reg_a <= memory_controller_enable_a;
select__str_reg_a <= select__str_a;
select__str1_reg_a <= select__str1_a;
end

reg [2:0] select_not_struct_b;

wire select__str_b;
assign select__str_b = (tag_b == `TAG_g__str);
reg select__str_reg_b;
wire [7:0] memory_controller__str_out_b;
assign memory_controller__str_out_b = {8{ select__str_reg_b}} & _str_out_b;

wire select__str1_b;
assign select__str1_b = (tag_b == `TAG_g__str1);
reg select__str1_reg_b;
wire [7:0] memory_controller__str1_out_b;
assign memory_controller__str1_out_b = {8{ select__str1_reg_b}} & _str1_out_b;

always @(*)
begin
	_str_address_b = memory_controller_address_b [3-1+0:0] & {3{select__str_b}};
	_str_write_enable_b = memory_controller_write_enable_b & select__str_b;
	_str_in_b [8-1:0] = memory_controller_in_b[8-1:0];

	_str1_address_b = memory_controller_address_b [5-1+0:0] & {5{select__str1_b}};
	_str1_write_enable_b = memory_controller_write_enable_b & select__str1_b;
	_str1_in_b [8-1:0] = memory_controller_in_b[8-1:0];

end
always @(*)
begin
	select_not_struct_b [2:0] = 3'b0;
	if (prevAddr_b[2:0] & select_not_struct_b[2:0] != 0 && memory_controller_enable_b)
	begin
		$display("Error: memory address not aligned to ram word size!");
		$finish;
	end

	prevSize_b_and[0] = prevSize_b[1] | prevSize_b[0];
	prevSize_b_and[1] = prevSize_b[1];
	prevSize_b_and[2] = prevSize_b[1] & prevSize_b[0];
	if ((prevAddr_b & prevSize_b_and) != 0 && memory_controller_enable_b)
	begin
		$display("Error: memory address not aligned to ram word size!");
		$finish;
	end
	memory_controller_out_prev_b = memory_controller_out_reg_b & { 64{!memory_controller_enable_reg_b}};
	memory_controller_out_b = 1'b0 | memory_controller_out_prev_b | memory_controller__str_out_b | memory_controller__str1_out_b;
end

always @(posedge clk)
begin
memory_controller_out_reg_b <= memory_controller_out_b;
memory_controller_enable_reg_b <= memory_controller_enable_b;
select__str_reg_b <= select__str_b;
select__str1_reg_b <= select__str1_b;
end

endmodule 

`timescale 1 ns / 1 ns
module xmlXPathCmpNodesExt
(
	clk,
	clk2x,
	clk1x_follower,
	reset,
	start,
	finish,
	memory_controller_enable_a,
	memory_controller_address_a,
	memory_controller_write_enable_a,
	memory_controller_in_a,
	memory_controller_size_a,
	memory_controller_out_a,
	memory_controller_enable_b,
	memory_controller_address_b,
	memory_controller_write_enable_b,
	memory_controller_in_b,
	memory_controller_size_b,
	memory_controller_out_b,
	memory_controller_waitrequest,
	return_val,
	arg_node1,
	arg_node2
);

parameter [7:0] LEGUP_0 = 8'd0;
parameter [7:0] LEGUP_F_xmlXPathCmpNodesExt_BB_0_1 = 8'd1;
parameter [7:0] LEGUP_F_xmlXPathCmpNodesExt_BB_3_2 = 8'd2;
parameter [7:0] LEGUP_F_xmlXPathCmpNodesExt_BB_5_3 = 8'd3;
parameter [7:0] LEGUP_F_xmlXPathCmpNodesExt_BB_5_4 = 8'd4;
parameter [7:0] LEGUP_F_xmlXPathCmpNodesExt_BB_5_5 = 8'd5;
parameter [7:0] LEGUP_F_xmlXPathCmpNodesExt_BB_8_6 = 8'd6;
parameter [7:0] LEGUP_F_xmlXPathCmpNodesExt_BB_8_7 = 8'd7;
parameter [7:0] LEGUP_F_xmlXPathCmpNodesExt_BB_8_8 = 8'd8;
parameter [7:0] LEGUP_F_xmlXPathCmpNodesExt_BB_12_9 = 8'd9;
parameter [7:0] LEGUP_F_xmlXPathCmpNodesExt_BB_12_10 = 8'd10;
parameter [7:0] LEGUP_F_xmlXPathCmpNodesExt_BB_12_11 = 8'd11;
parameter [7:0] LEGUP_F_xmlXPathCmpNodesExt_BB_16_12 = 8'd12;
parameter [7:0] LEGUP_F_xmlXPathCmpNodesExt_BB_16_13 = 8'd13;
parameter [7:0] LEGUP_F_xmlXPathCmpNodesExt_BB_16_14 = 8'd14;
parameter [7:0] LEGUP_F_xmlXPathCmpNodesExt_BB_20_15 = 8'd15;
parameter [7:0] LEGUP_F_xmlXPathCmpNodesExt_BB_20_16 = 8'd16;
parameter [7:0] LEGUP_F_xmlXPathCmpNodesExt_BB_20_17 = 8'd17;
parameter [7:0] LEGUP_F_xmlXPathCmpNodesExt_BB_26_18 = 8'd18;
parameter [7:0] LEGUP_F_xmlXPathCmpNodesExt_BB_30_19 = 8'd19;
parameter [7:0] LEGUP_F_xmlXPathCmpNodesExt_BB_32_20 = 8'd20;
parameter [7:0] LEGUP_F_xmlXPathCmpNodesExt_BB_32_21 = 8'd21;
parameter [7:0] LEGUP_F_xmlXPathCmpNodesExt_BB_32_22 = 8'd22;
parameter [7:0] LEGUP_F_xmlXPathCmpNodesExt_BB_35_23 = 8'd23;
parameter [7:0] LEGUP_F_xmlXPathCmpNodesExt_BB_35_24 = 8'd24;
parameter [7:0] LEGUP_F_xmlXPathCmpNodesExt_BB_35_25 = 8'd25;
parameter [7:0] LEGUP_F_xmlXPathCmpNodesExt_BB__preheader_preheader_26 = 8'd26;
parameter [7:0] LEGUP_F_xmlXPathCmpNodesExt_BB__preheader_27 = 8'd27;
parameter [7:0] LEGUP_F_xmlXPathCmpNodesExt_BB__preheader_28 = 8'd28;
parameter [7:0] LEGUP_F_xmlXPathCmpNodesExt_BB__preheader_29 = 8'd29;
parameter [7:0] LEGUP_F_xmlXPathCmpNodesExt_BB_43_30 = 8'd30;
parameter [7:0] LEGUP_F_xmlXPathCmpNodesExt_BB_43_31 = 8'd31;
parameter [7:0] LEGUP_F_xmlXPathCmpNodesExt_BB_43_32 = 8'd32;
parameter [7:0] LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit_loopexit_33 = 8'd33;
parameter [7:0] LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit_34 = 8'd34;
parameter [7:0] LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit_35 = 8'd35;
parameter [7:0] LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit_36 = 8'd36;
parameter [7:0] LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit_thread_37 = 8'd37;
parameter [7:0] LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit_thread_38 = 8'd38;
parameter [7:0] LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit_thread_39 = 8'd39;
parameter [7:0] LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit_thread_thread_loopexit_40 = 8'd40;
parameter [7:0] LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit_thread_thread_41 = 8'd41;
parameter [7:0] LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit_thread_thread_42 = 8'd42;
parameter [7:0] LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit_thread_thread_43 = 8'd43;
parameter [7:0] LEGUP_F_xmlXPathCmpNodesExt_BB_52_44 = 8'd44;
parameter [7:0] LEGUP_F_xmlXPathCmpNodesExt_BB___crit_edge73_45 = 8'd45;
parameter [7:0] LEGUP_F_xmlXPathCmpNodesExt_BB___crit_edge73_46 = 8'd46;
parameter [7:0] LEGUP_F_xmlXPathCmpNodesExt_BB___crit_edge73_47 = 8'd47;
parameter [7:0] LEGUP_F_xmlXPathCmpNodesExt_BB_55_48 = 8'd48;
parameter [7:0] LEGUP_F_xmlXPathCmpNodesExt_BB_55_49 = 8'd49;
parameter [7:0] LEGUP_F_xmlXPathCmpNodesExt_BB_55_50 = 8'd50;
parameter [7:0] LEGUP_F_xmlXPathCmpNodesExt_BB_58_51 = 8'd51;
parameter [7:0] LEGUP_F_xmlXPathCmpNodesExt_BB_58_52 = 8'd52;
parameter [7:0] LEGUP_F_xmlXPathCmpNodesExt_BB_58_53 = 8'd53;
parameter [7:0] LEGUP_F_xmlXPathCmpNodesExt_BB__preheader17_preheader_54 = 8'd54;
parameter [7:0] LEGUP_F_xmlXPathCmpNodesExt_BB__preheader17_55 = 8'd55;
parameter [7:0] LEGUP_F_xmlXPathCmpNodesExt_BB__preheader17_56 = 8'd56;
parameter [7:0] LEGUP_F_xmlXPathCmpNodesExt_BB__preheader17_57 = 8'd57;
parameter [7:0] LEGUP_F_xmlXPathCmpNodesExt_BB_66_58 = 8'd58;
parameter [7:0] LEGUP_F_xmlXPathCmpNodesExt_BB_66_59 = 8'd59;
parameter [7:0] LEGUP_F_xmlXPathCmpNodesExt_BB_66_60 = 8'd60;
parameter [7:0] LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit18_loopexit_61 = 8'd61;
parameter [7:0] LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit18_62 = 8'd62;
parameter [7:0] LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit18_63 = 8'd63;
parameter [7:0] LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit18_64 = 8'd64;
parameter [7:0] LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit18_thread_65 = 8'd65;
parameter [7:0] LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit18_thread_66 = 8'd66;
parameter [7:0] LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit18_thread_67 = 8'd67;
parameter [7:0] LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit18_thread_thread_loopexit_68 = 8'd68;
parameter [7:0] LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit18_thread_thread_69 = 8'd69;
parameter [7:0] LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit18_thread_thread_70 = 8'd70;
parameter [7:0] LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit18_thread_thread_71 = 8'd71;
parameter [7:0] LEGUP_F_xmlXPathCmpNodesExt_BB_75_72 = 8'd72;
parameter [7:0] LEGUP_F_xmlXPathCmpNodesExt_BB__thread_73 = 8'd73;
parameter [7:0] LEGUP_F_xmlXPathCmpNodesExt_BB_78_74 = 8'd74;
parameter [7:0] LEGUP_F_xmlXPathCmpNodesExt_BB__preheader27_preheader_75 = 8'd75;
parameter [7:0] LEGUP_F_xmlXPathCmpNodesExt_BB__preheader27_76 = 8'd76;
parameter [7:0] LEGUP_F_xmlXPathCmpNodesExt_BB__preheader27_77 = 8'd77;
parameter [7:0] LEGUP_F_xmlXPathCmpNodesExt_BB__preheader27_78 = 8'd78;
parameter [7:0] LEGUP_F_xmlXPathCmpNodesExt_BB_81_79 = 8'd79;
parameter [7:0] LEGUP_F_xmlXPathCmpNodesExt_BB_83_80 = 8'd80;
parameter [7:0] LEGUP_F_xmlXPathCmpNodesExt_BB_83_81 = 8'd81;
parameter [7:0] LEGUP_F_xmlXPathCmpNodesExt_BB_83_82 = 8'd82;
parameter [7:0] LEGUP_F_xmlXPathCmpNodesExt_BB_87_83 = 8'd83;
parameter [7:0] LEGUP_F_xmlXPathCmpNodesExt_BB_89_84 = 8'd84;
parameter [7:0] LEGUP_F_xmlXPathCmpNodesExt_BB__preheader24_preheader_85 = 8'd85;
parameter [7:0] LEGUP_F_xmlXPathCmpNodesExt_BB__preheader24_86 = 8'd86;
parameter [7:0] LEGUP_F_xmlXPathCmpNodesExt_BB__preheader24_87 = 8'd87;
parameter [7:0] LEGUP_F_xmlXPathCmpNodesExt_BB__preheader24_88 = 8'd88;
parameter [7:0] LEGUP_F_xmlXPathCmpNodesExt_BB_93_89 = 8'd89;
parameter [7:0] LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit25_loopexit_90 = 8'd90;
parameter [7:0] LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit25_91 = 8'd91;
parameter [7:0] LEGUP_F_xmlXPathCmpNodesExt_BB__preheader21_preheader_92 = 8'd92;
parameter [7:0] LEGUP_F_xmlXPathCmpNodesExt_BB__preheader21_93 = 8'd93;
parameter [7:0] LEGUP_F_xmlXPathCmpNodesExt_BB__preheader21_94 = 8'd94;
parameter [7:0] LEGUP_F_xmlXPathCmpNodesExt_BB__preheader21_95 = 8'd95;
parameter [7:0] LEGUP_F_xmlXPathCmpNodesExt_BB_98_96 = 8'd96;
parameter [7:0] LEGUP_F_xmlXPathCmpNodesExt_BB___crit_edge72_loopexit_97 = 8'd97;
parameter [7:0] LEGUP_F_xmlXPathCmpNodesExt_BB___crit_edge72_98 = 8'd98;
parameter [7:0] LEGUP_F_xmlXPathCmpNodesExt_BB___crit_edge72_99 = 8'd99;
parameter [7:0] LEGUP_F_xmlXPathCmpNodesExt_BB___crit_edge72_100 = 8'd100;
parameter [7:0] LEGUP_F_xmlXPathCmpNodesExt_BB_103_101 = 8'd101;
parameter [7:0] LEGUP_F_xmlXPathCmpNodesExt_BB_103_102 = 8'd102;
parameter [7:0] LEGUP_F_xmlXPathCmpNodesExt_BB_103_103 = 8'd103;
parameter [7:0] LEGUP_F_xmlXPathCmpNodesExt_BB_107_104 = 8'd104;
parameter [7:0] LEGUP_F_xmlXPathCmpNodesExt_BB_107_105 = 8'd105;
parameter [7:0] LEGUP_F_xmlXPathCmpNodesExt_BB_107_106 = 8'd106;
parameter [7:0] LEGUP_F_xmlXPathCmpNodesExt_BB_111_107 = 8'd107;
parameter [7:0] LEGUP_F_xmlXPathCmpNodesExt_BB_111_108 = 8'd108;
parameter [7:0] LEGUP_F_xmlXPathCmpNodesExt_BB_111_109 = 8'd109;
parameter [7:0] LEGUP_F_xmlXPathCmpNodesExt_BB_115_110 = 8'd110;
parameter [7:0] LEGUP_F_xmlXPathCmpNodesExt_BB_115_111 = 8'd111;
parameter [7:0] LEGUP_F_xmlXPathCmpNodesExt_BB_115_112 = 8'd112;
parameter [7:0] LEGUP_F_xmlXPathCmpNodesExt_BB_121_113 = 8'd113;
parameter [7:0] LEGUP_F_xmlXPathCmpNodesExt_BB_125_114 = 8'd114;
parameter [7:0] LEGUP_F_xmlXPathCmpNodesExt_BB_127_115 = 8'd115;
parameter [7:0] LEGUP_F_xmlXPathCmpNodesExt_BB_127_116 = 8'd116;
parameter [7:0] LEGUP_F_xmlXPathCmpNodesExt_BB_127_117 = 8'd117;
parameter [7:0] LEGUP_F_xmlXPathCmpNodesExt_BB_131_118 = 8'd118;
parameter [7:0] LEGUP_F_xmlXPathCmpNodesExt_BB_131_119 = 8'd119;
parameter [7:0] LEGUP_F_xmlXPathCmpNodesExt_BB_131_120 = 8'd120;
parameter [7:0] LEGUP_F_xmlXPathCmpNodesExt_BB__preheader49_preheader_121 = 8'd121;
parameter [7:0] LEGUP_F_xmlXPathCmpNodesExt_BB__preheader49_122 = 8'd122;
parameter [7:0] LEGUP_F_xmlXPathCmpNodesExt_BB__preheader49_123 = 8'd123;
parameter [7:0] LEGUP_F_xmlXPathCmpNodesExt_BB__preheader49_124 = 8'd124;
parameter [7:0] LEGUP_F_xmlXPathCmpNodesExt_BB__preheader45_preheader_125 = 8'd125;
parameter [7:0] LEGUP_F_xmlXPathCmpNodesExt_BB_139_126 = 8'd126;
parameter [7:0] LEGUP_F_xmlXPathCmpNodesExt_BB_139_127 = 8'd127;
parameter [7:0] LEGUP_F_xmlXPathCmpNodesExt_BB_139_128 = 8'd128;
parameter [7:0] LEGUP_F_xmlXPathCmpNodesExt_BB_142_129 = 8'd129;
parameter [7:0] LEGUP_F_xmlXPathCmpNodesExt_BB__preheader45_130 = 8'd130;
parameter [7:0] LEGUP_F_xmlXPathCmpNodesExt_BB__preheader45_131 = 8'd131;
parameter [7:0] LEGUP_F_xmlXPathCmpNodesExt_BB__preheader45_132 = 8'd132;
parameter [7:0] LEGUP_F_xmlXPathCmpNodesExt_BB_148_133 = 8'd133;
parameter [7:0] LEGUP_F_xmlXPathCmpNodesExt_BB_150_134 = 8'd134;
parameter [7:0] LEGUP_F_xmlXPathCmpNodesExt_BB_152_135 = 8'd135;
parameter [7:0] LEGUP_F_xmlXPathCmpNodesExt_BB__preheader39_136 = 8'd136;
parameter [7:0] LEGUP_F_xmlXPathCmpNodesExt_BB__lr_ph42_137 = 8'd137;
parameter [7:0] LEGUP_F_xmlXPathCmpNodesExt_BB__preheader36_loopexit_138 = 8'd138;
parameter [7:0] LEGUP_F_xmlXPathCmpNodesExt_BB__preheader36_139 = 8'd139;
parameter [7:0] LEGUP_F_xmlXPathCmpNodesExt_BB__lr_ph_140 = 8'd140;
parameter [7:0] LEGUP_F_xmlXPathCmpNodesExt_BB_156_141 = 8'd141;
parameter [7:0] LEGUP_F_xmlXPathCmpNodesExt_BB_156_142 = 8'd142;
parameter [7:0] LEGUP_F_xmlXPathCmpNodesExt_BB_156_143 = 8'd143;
parameter [7:0] LEGUP_F_xmlXPathCmpNodesExt_BB_159_144 = 8'd144;
parameter [7:0] LEGUP_F_xmlXPathCmpNodesExt_BB_159_145 = 8'd145;
parameter [7:0] LEGUP_F_xmlXPathCmpNodesExt_BB_159_146 = 8'd146;
parameter [7:0] LEGUP_F_xmlXPathCmpNodesExt_BB__preheader32_preheader_loopexit_147 = 8'd147;
parameter [7:0] LEGUP_F_xmlXPathCmpNodesExt_BB__preheader32_preheader_148 = 8'd148;
parameter [7:0] LEGUP_F_xmlXPathCmpNodesExt_BB__preheader32_149 = 8'd149;
parameter [7:0] LEGUP_F_xmlXPathCmpNodesExt_BB__preheader32_150 = 8'd150;
parameter [7:0] LEGUP_F_xmlXPathCmpNodesExt_BB__preheader32_151 = 8'd151;
parameter [7:0] LEGUP_F_xmlXPathCmpNodesExt_BB_167_152 = 8'd152;
parameter [7:0] LEGUP_F_xmlXPathCmpNodesExt_BB_170_153 = 8'd153;
parameter [7:0] LEGUP_F_xmlXPathCmpNodesExt_BB_170_154 = 8'd154;
parameter [7:0] LEGUP_F_xmlXPathCmpNodesExt_BB_170_155 = 8'd155;
parameter [7:0] LEGUP_F_xmlXPathCmpNodesExt_BB_174_156 = 8'd156;
parameter [7:0] LEGUP_F_xmlXPathCmpNodesExt_BB_174_157 = 8'd157;
parameter [7:0] LEGUP_F_xmlXPathCmpNodesExt_BB_174_158 = 8'd158;
parameter [7:0] LEGUP_F_xmlXPathCmpNodesExt_BB_178_159 = 8'd159;
parameter [7:0] LEGUP_F_xmlXPathCmpNodesExt_BB_178_160 = 8'd160;
parameter [7:0] LEGUP_F_xmlXPathCmpNodesExt_BB_178_161 = 8'd161;
parameter [7:0] LEGUP_F_xmlXPathCmpNodesExt_BB_182_162 = 8'd162;
parameter [7:0] LEGUP_F_xmlXPathCmpNodesExt_BB_182_163 = 8'd163;
parameter [7:0] LEGUP_F_xmlXPathCmpNodesExt_BB_182_164 = 8'd164;
parameter [7:0] LEGUP_F_xmlXPathCmpNodesExt_BB_186_165 = 8'd165;
parameter [7:0] LEGUP_F_xmlXPathCmpNodesExt_BB_186_166 = 8'd166;
parameter [7:0] LEGUP_F_xmlXPathCmpNodesExt_BB_186_167 = 8'd167;
parameter [7:0] LEGUP_F_xmlXPathCmpNodesExt_BB_190_168 = 8'd168;
parameter [7:0] LEGUP_F_xmlXPathCmpNodesExt_BB_190_169 = 8'd169;
parameter [7:0] LEGUP_F_xmlXPathCmpNodesExt_BB_190_170 = 8'd170;
parameter [7:0] LEGUP_F_xmlXPathCmpNodesExt_BB_194_171 = 8'd171;
parameter [7:0] LEGUP_F_xmlXPathCmpNodesExt_BB_194_172 = 8'd172;
parameter [7:0] LEGUP_F_xmlXPathCmpNodesExt_BB_194_173 = 8'd173;
parameter [7:0] LEGUP_F_xmlXPathCmpNodesExt_BB_200_174 = 8'd174;
parameter [7:0] LEGUP_F_xmlXPathCmpNodesExt_BB_204_175 = 8'd175;
parameter [7:0] LEGUP_F_xmlXPathCmpNodesExt_BB__preheader29_preheader_176 = 8'd176;
parameter [7:0] LEGUP_F_xmlXPathCmpNodesExt_BB__preheader29_177 = 8'd177;
parameter [7:0] LEGUP_F_xmlXPathCmpNodesExt_BB__preheader29_178 = 8'd178;
parameter [7:0] LEGUP_F_xmlXPathCmpNodesExt_BB__preheader29_179 = 8'd179;
parameter [7:0] LEGUP_F_xmlXPathCmpNodesExt_BB_207_180 = 8'd180;
parameter [7:0] LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit23_loopexit_181 = 8'd181;
parameter [7:0] LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit23_loopexit1_182 = 8'd182;
parameter [7:0] LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit23_loopexit2_183 = 8'd183;
parameter [7:0] LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit23_loopexit3_184 = 8'd184;
parameter [7:0] LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit23_loopexit5_185 = 8'd185;
parameter [7:0] LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit23_loopexit6_186 = 8'd186;
parameter [7:0] LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit23_loopexit7_187 = 8'd187;
parameter [7:0] LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit23_188 = 8'd188;

input  clk;
input  clk2x;
input  clk1x_follower;
input  reset;
input  start;
output reg  finish;
output reg  memory_controller_enable_a;
output reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] memory_controller_address_a;
output reg  memory_controller_write_enable_a;
output reg [`MEMORY_CONTROLLER_DATA_SIZE-1:0] memory_controller_in_a;
output reg [1:0] memory_controller_size_a;
input [`MEMORY_CONTROLLER_DATA_SIZE-1:0] memory_controller_out_a;
output reg  memory_controller_enable_b;
output reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] memory_controller_address_b;
output reg  memory_controller_write_enable_b;
output reg [`MEMORY_CONTROLLER_DATA_SIZE-1:0] memory_controller_in_b;
output reg [1:0] memory_controller_size_b;
input [`MEMORY_CONTROLLER_DATA_SIZE-1:0] memory_controller_out_b;
input  memory_controller_waitrequest;
output reg [31:0] return_val;
input [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] arg_node1;
input [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] arg_node2;
reg [7:0] cur_state;
reg  xmlXPathCmpNodesExt_0_1;
reg  xmlXPathCmpNodesExt_0_1_reg;
reg  xmlXPathCmpNodesExt_0_2;
reg  xmlXPathCmpNodesExt_0_2_reg;
reg  xmlXPathCmpNodesExt_0_or_cond;
reg  xmlXPathCmpNodesExt_0_or_cond_reg;
reg  xmlXPathCmpNodesExt_3_4;
reg  xmlXPathCmpNodesExt_3_4_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] xmlXPathCmpNodesExt_5_6;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] xmlXPathCmpNodesExt_5_6_reg;
reg [31:0] xmlXPathCmpNodesExt_5_7;
reg [31:0] xmlXPathCmpNodesExt_5_7_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] xmlXPathCmpNodesExt_8_9;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] xmlXPathCmpNodesExt_8_9_reg;
reg [31:0] xmlXPathCmpNodesExt_8_10;
reg [31:0] xmlXPathCmpNodesExt_8_10_reg;
reg  xmlXPathCmpNodesExt_8_11;
reg  xmlXPathCmpNodesExt_8_11_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] xmlXPathCmpNodesExt_12_13;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] xmlXPathCmpNodesExt_12_13_reg;
reg [31:0] xmlXPathCmpNodesExt_12_14;
reg [31:0] xmlXPathCmpNodesExt_12_14_reg;
reg  xmlXPathCmpNodesExt_12_15;
reg  xmlXPathCmpNodesExt_12_15_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] xmlXPathCmpNodesExt_16_17;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] xmlXPathCmpNodesExt_16_17_reg;
reg [31:0] xmlXPathCmpNodesExt_16_18;
reg [31:0] xmlXPathCmpNodesExt_16_18_reg;
reg  xmlXPathCmpNodesExt_16_19;
reg  xmlXPathCmpNodesExt_16_19_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] xmlXPathCmpNodesExt_20_21;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] xmlXPathCmpNodesExt_20_21_reg;
reg [31:0] xmlXPathCmpNodesExt_20_22;
reg [31:0] xmlXPathCmpNodesExt_20_22_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] xmlXPathCmpNodesExt_20_23;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] xmlXPathCmpNodesExt_20_23_reg;
reg [31:0] xmlXPathCmpNodesExt_20_24;
reg [31:0] xmlXPathCmpNodesExt_20_24_reg;
reg  xmlXPathCmpNodesExt_20_25;
reg  xmlXPathCmpNodesExt_20_25_reg;
reg [31:0] xmlXPathCmpNodesExt_26_27;
reg [31:0] xmlXPathCmpNodesExt_26_27_reg;
reg [31:0] xmlXPathCmpNodesExt_26_28;
reg [31:0] xmlXPathCmpNodesExt_26_28_reg;
reg  xmlXPathCmpNodesExt_26_29;
reg  xmlXPathCmpNodesExt_26_29_reg;
reg  xmlXPathCmpNodesExt_30_31;
reg  xmlXPathCmpNodesExt_30_31_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] xmlXPathCmpNodesExt_32_33;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] xmlXPathCmpNodesExt_32_33_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] xmlXPathCmpNodesExt_32_34;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] xmlXPathCmpNodesExt_32_34_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] xmlXPathCmpNodesExt_35_36;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] xmlXPathCmpNodesExt_35_36_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] xmlXPathCmpNodesExt_35_37;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] xmlXPathCmpNodesExt_35_37_reg;
reg  xmlXPathCmpNodesExt_35_38;
reg  xmlXPathCmpNodesExt_35_38_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] xmlXPathCmpNodesExt__preheader_39;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] xmlXPathCmpNodesExt__preheader_39_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] xmlXPathCmpNodesExt__preheader_40;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] xmlXPathCmpNodesExt__preheader_40_reg;
reg [31:0] xmlXPathCmpNodesExt__preheader_41;
reg [31:0] xmlXPathCmpNodesExt__preheader_41_reg;
reg  xmlXPathCmpNodesExt__preheader_42;
reg  xmlXPathCmpNodesExt__preheader_42_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] xmlXPathCmpNodesExt_43_44;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] xmlXPathCmpNodesExt_43_44_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] xmlXPathCmpNodesExt_43_45;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] xmlXPathCmpNodesExt_43_45_reg;
reg  xmlXPathCmpNodesExt_43_46;
reg  xmlXPathCmpNodesExt_43_46_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] xmlXPathCmpNodesExt__loopexit__pn;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] xmlXPathCmpNodesExt__loopexit__pn_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] xmlXPathCmpNodesExt__loopexit__1_in;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] xmlXPathCmpNodesExt__loopexit__1_in_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] xmlXPathCmpNodesExt__loopexit__1;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] xmlXPathCmpNodesExt__loopexit__1_reg;
reg  xmlXPathCmpNodesExt__loopexit_47;
reg  xmlXPathCmpNodesExt__loopexit_47_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] xmlXPathCmpNodesExt__loopexit_thread__phi_trans_insert10;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] xmlXPathCmpNodesExt__loopexit_thread__phi_trans_insert10_reg;
reg [31:0] xmlXPathCmpNodesExt__loopexit_thread__pre11;
reg [31:0] xmlXPathCmpNodesExt__loopexit_thread__pre11_reg;
reg  xmlXPathCmpNodesExt__loopexit_thread_48;
reg  xmlXPathCmpNodesExt__loopexit_thread_48_reg;
reg [31:0] xmlXPathCmpNodesExt__loopexit_thread_thread_precedence1_07713;
reg [31:0] xmlXPathCmpNodesExt__loopexit_thread_thread_precedence1_07713_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] xmlXPathCmpNodesExt__loopexit_thread_thread__17812;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] xmlXPathCmpNodesExt__loopexit_thread_thread__17812_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] xmlXPathCmpNodesExt__loopexit_thread_thread_49;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] xmlXPathCmpNodesExt__loopexit_thread_thread_49_reg;
reg [31:0] xmlXPathCmpNodesExt__loopexit_thread_thread_50;
reg [31:0] xmlXPathCmpNodesExt__loopexit_thread_thread_50_reg;
reg  xmlXPathCmpNodesExt__loopexit_thread_thread_51;
reg  xmlXPathCmpNodesExt__loopexit_thread_thread_51_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] xmlXPathCmpNodesExt___crit_edge73_miscNode1_0;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] xmlXPathCmpNodesExt___crit_edge73_miscNode1_0_reg;
reg [31:0] xmlXPathCmpNodesExt___crit_edge73_precedence1_1;
reg [31:0] xmlXPathCmpNodesExt___crit_edge73_precedence1_1_reg;
reg [31:0] xmlXPathCmpNodesExt___crit_edge73_misc_0;
reg [31:0] xmlXPathCmpNodesExt___crit_edge73_misc_0_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] xmlXPathCmpNodesExt___crit_edge73__2;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] xmlXPathCmpNodesExt___crit_edge73__2_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] xmlXPathCmpNodesExt___crit_edge73_53;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] xmlXPathCmpNodesExt___crit_edge73_53_reg;
reg [31:0] xmlXPathCmpNodesExt___crit_edge73_54;
reg [31:0] xmlXPathCmpNodesExt___crit_edge73_54_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] xmlXPathCmpNodesExt_55_56;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] xmlXPathCmpNodesExt_55_56_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] xmlXPathCmpNodesExt_55_57;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] xmlXPathCmpNodesExt_55_57_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] xmlXPathCmpNodesExt_58_59;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] xmlXPathCmpNodesExt_58_59_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] xmlXPathCmpNodesExt_58_60;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] xmlXPathCmpNodesExt_58_60_reg;
reg  xmlXPathCmpNodesExt_58_61;
reg  xmlXPathCmpNodesExt_58_61_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] xmlXPathCmpNodesExt__preheader17_62;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] xmlXPathCmpNodesExt__preheader17_62_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] xmlXPathCmpNodesExt__preheader17_63;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] xmlXPathCmpNodesExt__preheader17_63_reg;
reg [31:0] xmlXPathCmpNodesExt__preheader17_64;
reg [31:0] xmlXPathCmpNodesExt__preheader17_64_reg;
reg  xmlXPathCmpNodesExt__preheader17_65;
reg  xmlXPathCmpNodesExt__preheader17_65_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] xmlXPathCmpNodesExt_66_67;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] xmlXPathCmpNodesExt_66_67_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] xmlXPathCmpNodesExt_66_68;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] xmlXPathCmpNodesExt_66_68_reg;
reg  xmlXPathCmpNodesExt_66_69;
reg  xmlXPathCmpNodesExt_66_69_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] xmlXPathCmpNodesExt__loopexit18__pn1;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] xmlXPathCmpNodesExt__loopexit18__pn1_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] xmlXPathCmpNodesExt__loopexit18__13_in;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] xmlXPathCmpNodesExt__loopexit18__13_in_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] xmlXPathCmpNodesExt__loopexit18__13;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] xmlXPathCmpNodesExt__loopexit18__13_reg;
reg  xmlXPathCmpNodesExt__loopexit18_70;
reg  xmlXPathCmpNodesExt__loopexit18_70_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] xmlXPathCmpNodesExt__loopexit18_thread__phi_trans_insert;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] xmlXPathCmpNodesExt__loopexit18_thread__phi_trans_insert_reg;
reg [31:0] xmlXPathCmpNodesExt__loopexit18_thread__pre;
reg [31:0] xmlXPathCmpNodesExt__loopexit18_thread__pre_reg;
reg  xmlXPathCmpNodesExt__loopexit18_thread_71;
reg  xmlXPathCmpNodesExt__loopexit18_thread_71_reg;
reg [31:0] xmlXPathCmpNodesExt__loopexit18_thread_thread_precedence2_07915;
reg [31:0] xmlXPathCmpNodesExt__loopexit18_thread_thread_precedence2_07915_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] xmlXPathCmpNodesExt__loopexit18_thread_thread__138014;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] xmlXPathCmpNodesExt__loopexit18_thread_thread__138014_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] xmlXPathCmpNodesExt__loopexit18_thread_thread_72;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] xmlXPathCmpNodesExt__loopexit18_thread_thread_72_reg;
reg [31:0] xmlXPathCmpNodesExt__loopexit18_thread_thread_73;
reg [31:0] xmlXPathCmpNodesExt__loopexit18_thread_thread_73_reg;
reg  xmlXPathCmpNodesExt__loopexit18_thread_thread_74;
reg  xmlXPathCmpNodesExt__loopexit18_thread_thread_74_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] xmlXPathCmpNodesExt_75_miscNode2_0;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] xmlXPathCmpNodesExt_75_miscNode2_0_reg;
reg  xmlXPathCmpNodesExt_75_76;
reg  xmlXPathCmpNodesExt_75_76_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] xmlXPathCmpNodesExt__thread__2413;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] xmlXPathCmpNodesExt__thread__2413_reg;
reg [31:0] xmlXPathCmpNodesExt__thread_precedence2_112;
reg [31:0] xmlXPathCmpNodesExt__thread_precedence2_112_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] xmlXPathCmpNodesExt__thread_miscNode2_011;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] xmlXPathCmpNodesExt__thread_miscNode2_011_reg;
reg  xmlXPathCmpNodesExt__thread_77;
reg  xmlXPathCmpNodesExt__thread_77_reg;
reg  xmlXPathCmpNodesExt_78_79;
reg  xmlXPathCmpNodesExt_78_79_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] xmlXPathCmpNodesExt__preheader27_miscNode2_0_pn;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] xmlXPathCmpNodesExt__preheader27_miscNode2_0_pn_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] xmlXPathCmpNodesExt__preheader27_cur_0_in;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] xmlXPathCmpNodesExt__preheader27_cur_0_in_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] xmlXPathCmpNodesExt__preheader27_cur_0;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] xmlXPathCmpNodesExt__preheader27_cur_0_reg;
reg  xmlXPathCmpNodesExt__preheader27_80;
reg  xmlXPathCmpNodesExt__preheader27_80_reg;
reg  xmlXPathCmpNodesExt_81_82;
reg  xmlXPathCmpNodesExt_81_82_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] xmlXPathCmpNodesExt_83_84;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] xmlXPathCmpNodesExt_83_84_reg;
reg [31:0] xmlXPathCmpNodesExt_83_85;
reg [31:0] xmlXPathCmpNodesExt_83_85_reg;
reg  xmlXPathCmpNodesExt_83_86;
reg  xmlXPathCmpNodesExt_83_86_reg;
reg  xmlXPathCmpNodesExt_87_88;
reg  xmlXPathCmpNodesExt_87_88_reg;
reg [31:0] xmlXPathCmpNodesExt_87__;
reg [31:0] xmlXPathCmpNodesExt_87___reg;
reg  xmlXPathCmpNodesExt_89_90;
reg  xmlXPathCmpNodesExt_89_90_reg;
reg  xmlXPathCmpNodesExt_89_91;
reg  xmlXPathCmpNodesExt_89_91_reg;
reg  xmlXPathCmpNodesExt_89_or_cond8;
reg  xmlXPathCmpNodesExt_89_or_cond8_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] xmlXPathCmpNodesExt__preheader24__2_pn;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] xmlXPathCmpNodesExt__preheader24__2_pn_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] xmlXPathCmpNodesExt__preheader24_cur_1_in;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] xmlXPathCmpNodesExt__preheader24_cur_1_in_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] xmlXPathCmpNodesExt__preheader24_cur_1;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] xmlXPathCmpNodesExt__preheader24_cur_1_reg;
reg  xmlXPathCmpNodesExt__preheader24_92;
reg  xmlXPathCmpNodesExt__preheader24_92_reg;
reg  xmlXPathCmpNodesExt_93_94;
reg  xmlXPathCmpNodesExt_93_94_reg;
reg  xmlXPathCmpNodesExt__loopexit25_95;
reg  xmlXPathCmpNodesExt__loopexit25_95_reg;
reg  xmlXPathCmpNodesExt__loopexit25_96;
reg  xmlXPathCmpNodesExt__loopexit25_96_reg;
reg  xmlXPathCmpNodesExt__loopexit25_or_cond9;
reg  xmlXPathCmpNodesExt__loopexit25_or_cond9_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] xmlXPathCmpNodesExt__preheader21__24_pn;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] xmlXPathCmpNodesExt__preheader21__24_pn_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] xmlXPathCmpNodesExt__preheader21_cur_2_in;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] xmlXPathCmpNodesExt__preheader21_cur_2_in_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] xmlXPathCmpNodesExt__preheader21_cur_2;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] xmlXPathCmpNodesExt__preheader21_cur_2_reg;
reg  xmlXPathCmpNodesExt__preheader21_97;
reg  xmlXPathCmpNodesExt__preheader21_97_reg;
reg  xmlXPathCmpNodesExt_98_99;
reg  xmlXPathCmpNodesExt_98_99_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] xmlXPathCmpNodesExt___crit_edge72__2414;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] xmlXPathCmpNodesExt___crit_edge72__2414_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] xmlXPathCmpNodesExt___crit_edge72_100;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] xmlXPathCmpNodesExt___crit_edge72_100_reg;
reg [31:0] xmlXPathCmpNodesExt___crit_edge72_101;
reg [31:0] xmlXPathCmpNodesExt___crit_edge72_101_reg;
reg  xmlXPathCmpNodesExt___crit_edge72_102;
reg  xmlXPathCmpNodesExt___crit_edge72_102_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] xmlXPathCmpNodesExt_103_104;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] xmlXPathCmpNodesExt_103_104_reg;
reg [31:0] xmlXPathCmpNodesExt_103_105;
reg [31:0] xmlXPathCmpNodesExt_103_105_reg;
reg  xmlXPathCmpNodesExt_103_106;
reg  xmlXPathCmpNodesExt_103_106_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] xmlXPathCmpNodesExt_107_108;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] xmlXPathCmpNodesExt_107_108_reg;
reg [31:0] xmlXPathCmpNodesExt_107_109;
reg [31:0] xmlXPathCmpNodesExt_107_109_reg;
reg  xmlXPathCmpNodesExt_107_110;
reg  xmlXPathCmpNodesExt_107_110_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] xmlXPathCmpNodesExt_111_112;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] xmlXPathCmpNodesExt_111_112_reg;
reg [31:0] xmlXPathCmpNodesExt_111_113;
reg [31:0] xmlXPathCmpNodesExt_111_113_reg;
reg  xmlXPathCmpNodesExt_111_114;
reg  xmlXPathCmpNodesExt_111_114_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] xmlXPathCmpNodesExt_115_116;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] xmlXPathCmpNodesExt_115_116_reg;
reg [31:0] xmlXPathCmpNodesExt_115_117;
reg [31:0] xmlXPathCmpNodesExt_115_117_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] xmlXPathCmpNodesExt_115_118;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] xmlXPathCmpNodesExt_115_118_reg;
reg [31:0] xmlXPathCmpNodesExt_115_119;
reg [31:0] xmlXPathCmpNodesExt_115_119_reg;
reg  xmlXPathCmpNodesExt_115_120;
reg  xmlXPathCmpNodesExt_115_120_reg;
reg [31:0] xmlXPathCmpNodesExt_121_122;
reg [31:0] xmlXPathCmpNodesExt_121_122_reg;
reg [31:0] xmlXPathCmpNodesExt_121_123;
reg [31:0] xmlXPathCmpNodesExt_121_123_reg;
reg  xmlXPathCmpNodesExt_121_124;
reg  xmlXPathCmpNodesExt_121_124_reg;
reg  xmlXPathCmpNodesExt_125_126;
reg  xmlXPathCmpNodesExt_125_126_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] xmlXPathCmpNodesExt_127__35;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] xmlXPathCmpNodesExt_127__35_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] xmlXPathCmpNodesExt_127__3;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] xmlXPathCmpNodesExt_127__3_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] xmlXPathCmpNodesExt_127_128;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] xmlXPathCmpNodesExt_127_128_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] xmlXPathCmpNodesExt_127_129;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] xmlXPathCmpNodesExt_127_129_reg;
reg  xmlXPathCmpNodesExt_127_130;
reg  xmlXPathCmpNodesExt_127_130_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] xmlXPathCmpNodesExt_131_132;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] xmlXPathCmpNodesExt_131_132_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] xmlXPathCmpNodesExt_131_133;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] xmlXPathCmpNodesExt_131_133_reg;
reg  xmlXPathCmpNodesExt_131_134;
reg  xmlXPathCmpNodesExt_131_134_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] xmlXPathCmpNodesExt__preheader49_cur_3;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] xmlXPathCmpNodesExt__preheader49_cur_3_reg;
reg [31:0] xmlXPathCmpNodesExt__preheader49_135;
reg [31:0] xmlXPathCmpNodesExt__preheader49_135_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] xmlXPathCmpNodesExt__preheader49_136;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] xmlXPathCmpNodesExt__preheader49_136_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] xmlXPathCmpNodesExt__preheader49_137;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] xmlXPathCmpNodesExt__preheader49_137_reg;
reg  xmlXPathCmpNodesExt__preheader49_138;
reg  xmlXPathCmpNodesExt__preheader49_138_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] xmlXPathCmpNodesExt_139_140;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] xmlXPathCmpNodesExt_139_140_reg;
reg  xmlXPathCmpNodesExt_139_141;
reg  xmlXPathCmpNodesExt_139_141_reg;
reg [31:0] xmlXPathCmpNodesExt_142_143;
reg [31:0] xmlXPathCmpNodesExt_142_143_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] xmlXPathCmpNodesExt__preheader45_cur_4;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] xmlXPathCmpNodesExt__preheader45_cur_4_reg;
reg [31:0] xmlXPathCmpNodesExt__preheader45_144;
reg [31:0] xmlXPathCmpNodesExt__preheader45_144_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] xmlXPathCmpNodesExt__preheader45_145;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] xmlXPathCmpNodesExt__preheader45_145_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] xmlXPathCmpNodesExt__preheader45_146;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] xmlXPathCmpNodesExt__preheader45_146_reg;
reg  xmlXPathCmpNodesExt__preheader45_147;
reg  xmlXPathCmpNodesExt__preheader45_147_reg;
reg  xmlXPathCmpNodesExt_148_149;
reg  xmlXPathCmpNodesExt_148_149_reg;
reg [31:0] xmlXPathCmpNodesExt_150_151;
reg [31:0] xmlXPathCmpNodesExt_150_151_reg;
reg  xmlXPathCmpNodesExt_152_153;
reg  xmlXPathCmpNodesExt_152_153_reg;
reg  xmlXPathCmpNodesExt__preheader39_154;
reg  xmlXPathCmpNodesExt__preheader39_154_reg;
reg [31:0] xmlXPathCmpNodesExt__lr_ph42_tmp65;
reg [31:0] xmlXPathCmpNodesExt__lr_ph42_tmp65_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] xmlXPathCmpNodesExt__preheader36__4_lcssa;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] xmlXPathCmpNodesExt__preheader36__4_lcssa_reg;
reg [31:0] xmlXPathCmpNodesExt__preheader36_depth1_1_lcssa;
reg [31:0] xmlXPathCmpNodesExt__preheader36_depth1_1_lcssa_reg;
reg  xmlXPathCmpNodesExt__preheader36_155;
reg  xmlXPathCmpNodesExt__preheader36_155_reg;
reg [31:0] xmlXPathCmpNodesExt__lr_ph_tmp59;
reg [31:0] xmlXPathCmpNodesExt__lr_ph_tmp59_reg;
reg [31:0] xmlXPathCmpNodesExt_156_indvar62;
reg [31:0] xmlXPathCmpNodesExt_156_indvar62_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] xmlXPathCmpNodesExt_156__441;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] xmlXPathCmpNodesExt_156__441_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] xmlXPathCmpNodesExt_156_157;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] xmlXPathCmpNodesExt_156_157_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] xmlXPathCmpNodesExt_156_158;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] xmlXPathCmpNodesExt_156_158_reg;
reg [31:0] xmlXPathCmpNodesExt_156_indvar_next63;
reg [31:0] xmlXPathCmpNodesExt_156_indvar_next63_reg;
reg  xmlXPathCmpNodesExt_156_exitcond66;
reg  xmlXPathCmpNodesExt_156_exitcond66_reg;
reg [31:0] xmlXPathCmpNodesExt_159_indvar;
reg [31:0] xmlXPathCmpNodesExt_159_indvar_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] xmlXPathCmpNodesExt_159__4638;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] xmlXPathCmpNodesExt_159__4638_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] xmlXPathCmpNodesExt_159_160;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] xmlXPathCmpNodesExt_159_160_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] xmlXPathCmpNodesExt_159_161;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] xmlXPathCmpNodesExt_159_161_reg;
reg [31:0] xmlXPathCmpNodesExt_159_indvar_next;
reg [31:0] xmlXPathCmpNodesExt_159_indvar_next_reg;
reg  xmlXPathCmpNodesExt_159_exitcond;
reg  xmlXPathCmpNodesExt_159_exitcond_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] xmlXPathCmpNodesExt__preheader32_preheader__57_ph;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] xmlXPathCmpNodesExt__preheader32_preheader__57_ph_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] xmlXPathCmpNodesExt__preheader32__57;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] xmlXPathCmpNodesExt__preheader32__57_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] xmlXPathCmpNodesExt__preheader32__5;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] xmlXPathCmpNodesExt__preheader32__5_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] xmlXPathCmpNodesExt__preheader32_162;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] xmlXPathCmpNodesExt__preheader32_162_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] xmlXPathCmpNodesExt__preheader32_163;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] xmlXPathCmpNodesExt__preheader32_163_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] xmlXPathCmpNodesExt__preheader32_164;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] xmlXPathCmpNodesExt__preheader32_164_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] xmlXPathCmpNodesExt__preheader32_165;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] xmlXPathCmpNodesExt__preheader32_165_reg;
reg  xmlXPathCmpNodesExt__preheader32_166;
reg  xmlXPathCmpNodesExt__preheader32_166_reg;
reg  xmlXPathCmpNodesExt_167_168;
reg  xmlXPathCmpNodesExt_167_168_reg;
reg  xmlXPathCmpNodesExt_167_169;
reg  xmlXPathCmpNodesExt_167_169_reg;
reg  xmlXPathCmpNodesExt_167_or_cond10;
reg  xmlXPathCmpNodesExt_167_or_cond10_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] xmlXPathCmpNodesExt_170_171;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] xmlXPathCmpNodesExt_170_171_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] xmlXPathCmpNodesExt_170_172;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] xmlXPathCmpNodesExt_170_172_reg;
reg  xmlXPathCmpNodesExt_170_173;
reg  xmlXPathCmpNodesExt_170_173_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] xmlXPathCmpNodesExt_174_175;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] xmlXPathCmpNodesExt_174_175_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] xmlXPathCmpNodesExt_174_176;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] xmlXPathCmpNodesExt_174_176_reg;
reg  xmlXPathCmpNodesExt_174_177;
reg  xmlXPathCmpNodesExt_174_177_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] xmlXPathCmpNodesExt_178_179;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] xmlXPathCmpNodesExt_178_179_reg;
reg [31:0] xmlXPathCmpNodesExt_178_180;
reg [31:0] xmlXPathCmpNodesExt_178_180_reg;
reg  xmlXPathCmpNodesExt_178_181;
reg  xmlXPathCmpNodesExt_178_181_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] xmlXPathCmpNodesExt_182_183;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] xmlXPathCmpNodesExt_182_183_reg;
reg [31:0] xmlXPathCmpNodesExt_182_184;
reg [31:0] xmlXPathCmpNodesExt_182_184_reg;
reg  xmlXPathCmpNodesExt_182_185;
reg  xmlXPathCmpNodesExt_182_185_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] xmlXPathCmpNodesExt_186_187;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] xmlXPathCmpNodesExt_186_187_reg;
reg [31:0] xmlXPathCmpNodesExt_186_188;
reg [31:0] xmlXPathCmpNodesExt_186_188_reg;
reg  xmlXPathCmpNodesExt_186_189;
reg  xmlXPathCmpNodesExt_186_189_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] xmlXPathCmpNodesExt_190_191;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] xmlXPathCmpNodesExt_190_191_reg;
reg [31:0] xmlXPathCmpNodesExt_190_192;
reg [31:0] xmlXPathCmpNodesExt_190_192_reg;
reg  xmlXPathCmpNodesExt_190_193;
reg  xmlXPathCmpNodesExt_190_193_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] xmlXPathCmpNodesExt_194_195;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] xmlXPathCmpNodesExt_194_195_reg;
reg [31:0] xmlXPathCmpNodesExt_194_196;
reg [31:0] xmlXPathCmpNodesExt_194_196_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] xmlXPathCmpNodesExt_194_197;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] xmlXPathCmpNodesExt_194_197_reg;
reg [31:0] xmlXPathCmpNodesExt_194_198;
reg [31:0] xmlXPathCmpNodesExt_194_198_reg;
reg  xmlXPathCmpNodesExt_194_199;
reg  xmlXPathCmpNodesExt_194_199_reg;
reg [31:0] xmlXPathCmpNodesExt_200_201;
reg [31:0] xmlXPathCmpNodesExt_200_201_reg;
reg [31:0] xmlXPathCmpNodesExt_200_202;
reg [31:0] xmlXPathCmpNodesExt_200_202_reg;
reg  xmlXPathCmpNodesExt_200_203;
reg  xmlXPathCmpNodesExt_200_203_reg;
reg  xmlXPathCmpNodesExt_204_205;
reg  xmlXPathCmpNodesExt_204_205_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] xmlXPathCmpNodesExt__preheader29__5_pn;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] xmlXPathCmpNodesExt__preheader29__5_pn_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] xmlXPathCmpNodesExt__preheader29_cur_5_in;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] xmlXPathCmpNodesExt__preheader29_cur_5_in_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] xmlXPathCmpNodesExt__preheader29_cur_5;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] xmlXPathCmpNodesExt__preheader29_cur_5_reg;
reg  xmlXPathCmpNodesExt__preheader29_206;
reg  xmlXPathCmpNodesExt__preheader29_206_reg;
reg  xmlXPathCmpNodesExt_207_208;
reg  xmlXPathCmpNodesExt_207_208_reg;
reg [31:0] xmlXPathCmpNodesExt__loopexit23_loopexit2__0_ph;
reg [31:0] xmlXPathCmpNodesExt__loopexit23_loopexit2__0_ph_reg;
reg [31:0] xmlXPathCmpNodesExt__loopexit23_loopexit3__0_ph4;
reg [31:0] xmlXPathCmpNodesExt__loopexit23_loopexit3__0_ph4_reg;
reg [31:0] xmlXPathCmpNodesExt__loopexit23__0;
reg [31:0] xmlXPathCmpNodesExt__loopexit23__0_reg;
wire [2:0] _str_address_a;
wire  _str_write_enable_a;
wire [7:0] _str_in_a;
wire [7:0] _str_out_a;
wire [2:0] _str_address_b;
wire  _str_write_enable_b;
wire [7:0] _str_in_b;
wire [7:0] _str_out_b;
wire [4:0] _str1_address_a;
wire  _str1_write_enable_a;
wire [7:0] _str1_in_a;
wire [7:0] _str1_out_a;
wire [4:0] _str1_address_b;
wire  _str1_write_enable_b;
wire [7:0] _str1_in_b;
wire [7:0] _str1_out_b;
wire [15:0] legup_pthreadpoll_threadID;

// Local Rams


always @(posedge clk) begin
if (((cur_state == LEGUP_0) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_0;
if (reset == 1'b0 && ^(LEGUP_0) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_0) & (memory_controller_waitrequest == 1'd0)) & (start == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_0_1;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_0_1) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_0) & (memory_controller_waitrequest == 1'd0)) & (start == 1'd0)))
begin
cur_state <= LEGUP_0;
if (reset == 1'b0 && ^(LEGUP_0) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_0_1) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_0_1;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_0_1) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_0_1) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_0_or_cond == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit23_188;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit23_188) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_0_1) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_0_or_cond == 1'd0)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_3_2;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_3_2) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_3_2) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_3_2;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_3_2) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_3_2) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_3_4 == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit23_188;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit23_188) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_3_2) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_3_4 == 1'd0)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_5_3;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_5_3) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_5_3) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_5_3;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_5_3) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_5_3) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_5_4;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_5_4) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_5_4) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_5_4;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_5_4) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_5_4) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_5_5;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_5_5) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_5_5) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_5_5;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_5_5) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_5_5) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_5_7 == 32'd131)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_8_6;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_8_6) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_5_5) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_5_7 == 32'd134)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_32_20;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_32_20) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_5_5) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_5_7 == 32'd128)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_35_23;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_35_23) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_5_5) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_5_7 == 32'd133)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_35_23;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_35_23) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_5_5) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_5_7 == 32'd132)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_35_23;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_35_23) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_5_5) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_5_7 == 32'd129)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_35_23;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_35_23) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_5_5) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_5_7 == 32'd130)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit23_188;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit23_188) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((((((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_5_5) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_5_7 != 32'd131)) & (xmlXPathCmpNodesExt_5_7 != 32'd134)) & (xmlXPathCmpNodesExt_5_7 != 32'd128)) & (xmlXPathCmpNodesExt_5_7 != 32'd133)) & (xmlXPathCmpNodesExt_5_7 != 32'd132)) & (xmlXPathCmpNodesExt_5_7 != 32'd129)) & (xmlXPathCmpNodesExt_5_7 != 32'd130)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB___crit_edge73_45;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB___crit_edge73_45) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_8_6) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_8_6;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_8_6) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_8_6) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_8_7;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_8_7) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_8_7) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_8_7;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_8_7) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_8_7) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_8_8;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_8_8) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_8_8) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_8_8;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_8_8) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_8_8) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_8_11 == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_12_9;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_12_9) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_8_8) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_8_11 == 1'd0)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB___crit_edge73_45;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB___crit_edge73_45) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_12_9) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_12_9;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_12_9) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_12_9) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_12_10;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_12_10) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_12_10) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_12_10;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_12_10) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_12_10) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_12_11;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_12_11) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_12_11) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_12_11;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_12_11) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_12_11) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_12_15 == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_16_12;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_16_12) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_12_11) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_12_15 == 1'd0)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_127_115;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_127_115) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_16_12) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_16_12;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_16_12) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_16_12) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_16_13;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_16_13) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_16_13) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_16_13;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_16_13) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_16_13) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_16_14;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_16_14) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_16_14) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_16_14;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_16_14) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_16_14) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_16_19 == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_20_15;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_20_15) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_16_14) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_16_19 == 1'd0)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_127_115;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_127_115) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_20_15) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_20_15;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_20_15) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_20_15) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_20_16;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_20_16) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_20_16) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_20_16;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_20_16) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_20_16) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_20_17;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_20_17) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_20_17) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_20_17;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_20_17) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_20_17) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_20_25 == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_26_18;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_26_18) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_20_17) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_20_25 == 1'd0)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_127_115;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_127_115) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_26_18) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_26_18;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_26_18) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_26_18) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_26_29 == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit23_188;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit23_188) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_26_18) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_26_29 == 1'd0)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_30_19;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_30_19) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_30_19) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_30_19;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_30_19) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_30_19) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_30_31 == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit23_188;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit23_188) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_30_19) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_30_31 == 1'd0)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB___crit_edge73_45;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB___crit_edge73_45) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_32_20) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_32_20;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_32_20) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_32_20) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_32_21;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_32_21) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_32_21) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_32_21;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_32_21) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_32_21) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_32_22;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_32_22) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_32_22) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_32_22;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_32_22) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_32_22) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB___crit_edge73_45;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB___crit_edge73_45) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_35_23) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_35_23;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_35_23) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_35_23) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_35_24;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_35_24) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_35_24) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_35_24;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_35_24) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_35_24) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_35_25;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_35_25) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_35_25) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_35_25;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_35_25) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_35_25) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_35_38 == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit_34;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit_34) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_35_25) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_35_38 == 1'd0)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB__preheader_preheader_26;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB__preheader_preheader_26) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader_preheader_26) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB__preheader_preheader_26;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB__preheader_preheader_26) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader_preheader_26) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB__preheader_27;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB__preheader_27) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader_27) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB__preheader_27;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB__preheader_27) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader_27) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB__preheader_28;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB__preheader_28) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader_28) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB__preheader_28;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB__preheader_28) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader_28) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB__preheader_29;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB__preheader_29) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader_29) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB__preheader_29;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB__preheader_29) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader_29) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt__preheader_42 == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit_thread_thread_loopexit_40;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit_thread_thread_loopexit_40) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader_29) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt__preheader_42 == 1'd0)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_43_30;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_43_30) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_43_30) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_43_30;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_43_30) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_43_30) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_43_31;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_43_31) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_43_31) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_43_31;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_43_31) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_43_31) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_43_32;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_43_32) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_43_32) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_43_32;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_43_32) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_43_32) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_43_46 == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit_loopexit_33;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit_loopexit_33) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_43_32) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_43_46 == 1'd0)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB__preheader_27;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB__preheader_27) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit_loopexit_33) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit_loopexit_33;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit_loopexit_33) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit_loopexit_33) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit_34;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit_34) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit_34) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit_34;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit_34) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit_34) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit_35;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit_35) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit_35) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit_35;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit_35) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit_35) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit_36;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit_36) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit_36) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit_36;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit_36) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit_36) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt__loopexit_47 == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB___crit_edge73_45;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB___crit_edge73_45) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit_36) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt__loopexit_47 == 1'd0)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit_thread_37;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit_thread_37) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit_thread_37) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit_thread_37;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit_thread_37) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit_thread_37) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit_thread_38;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit_thread_38) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit_thread_38) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit_thread_38;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit_thread_38) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit_thread_38) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit_thread_39;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit_thread_39) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit_thread_39) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit_thread_39;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit_thread_39) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit_thread_39) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt__loopexit_thread_48 == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit_thread_thread_41;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit_thread_thread_41) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit_thread_39) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt__loopexit_thread_48 == 1'd0)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB___crit_edge73_45;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB___crit_edge73_45) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit_thread_thread_loopexit_40) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit_thread_thread_loopexit_40;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit_thread_thread_loopexit_40) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit_thread_thread_loopexit_40) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit_thread_thread_41;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit_thread_thread_41) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit_thread_thread_41) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit_thread_thread_41;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit_thread_thread_41) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit_thread_thread_41) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit_thread_thread_42;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit_thread_thread_42) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit_thread_thread_42) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit_thread_thread_42;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit_thread_thread_42) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit_thread_thread_42) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit_thread_thread_43;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit_thread_thread_43) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit_thread_thread_43) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit_thread_thread_43;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit_thread_thread_43) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit_thread_thread_43) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt__loopexit_thread_thread_51 == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB___crit_edge73_45;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB___crit_edge73_45) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit_thread_thread_43) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt__loopexit_thread_thread_51 == 1'd0)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_52_44;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_52_44) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_52_44) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_52_44;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_52_44) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_52_44) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB___crit_edge73_45;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB___crit_edge73_45) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB___crit_edge73_45) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB___crit_edge73_45;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB___crit_edge73_45) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB___crit_edge73_45) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB___crit_edge73_46;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB___crit_edge73_46) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB___crit_edge73_46) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB___crit_edge73_46;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB___crit_edge73_46) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB___crit_edge73_46) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB___crit_edge73_47;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB___crit_edge73_47) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB___crit_edge73_47) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB___crit_edge73_47;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB___crit_edge73_47) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB___crit_edge73_47) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt___crit_edge73_54 == 32'd130)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit23_188;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit23_188) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB___crit_edge73_47) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt___crit_edge73_54 == 32'd134)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_55_48;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_55_48) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB___crit_edge73_47) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt___crit_edge73_54 == 32'd128)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_58_51;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_58_51) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB___crit_edge73_47) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt___crit_edge73_54 == 32'd133)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_58_51;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_58_51) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB___crit_edge73_47) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt___crit_edge73_54 == 32'd132)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_58_51;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_58_51) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB___crit_edge73_47) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt___crit_edge73_54 == 32'd129)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_58_51;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_58_51) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((((((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB___crit_edge73_47) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt___crit_edge73_54 != 32'd130)) & (xmlXPathCmpNodesExt___crit_edge73_54 != 32'd134)) & (xmlXPathCmpNodesExt___crit_edge73_54 != 32'd128)) & (xmlXPathCmpNodesExt___crit_edge73_54 != 32'd133)) & (xmlXPathCmpNodesExt___crit_edge73_54 != 32'd132)) & (xmlXPathCmpNodesExt___crit_edge73_54 != 32'd129)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_75_72;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_75_72) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_55_48) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_55_48;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_55_48) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_55_48) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_55_49;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_55_49) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_55_49) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_55_49;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_55_49) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_55_49) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_55_50;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_55_50) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_55_50) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_55_50;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_55_50) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_55_50) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB__thread_73;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB__thread_73) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_58_51) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_58_51;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_58_51) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_58_51) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_58_52;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_58_52) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_58_52) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_58_52;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_58_52) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_58_52) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_58_53;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_58_53) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_58_53) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_58_53;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_58_53) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_58_53) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_58_61 == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit18_62;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit18_62) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_58_53) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_58_61 == 1'd0)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB__preheader17_preheader_54;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB__preheader17_preheader_54) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader17_preheader_54) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB__preheader17_preheader_54;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB__preheader17_preheader_54) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader17_preheader_54) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB__preheader17_55;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB__preheader17_55) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader17_55) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB__preheader17_55;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB__preheader17_55) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader17_55) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB__preheader17_56;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB__preheader17_56) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader17_56) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB__preheader17_56;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB__preheader17_56) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader17_56) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB__preheader17_57;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB__preheader17_57) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader17_57) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB__preheader17_57;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB__preheader17_57) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader17_57) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt__preheader17_65 == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit18_thread_thread_loopexit_68;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit18_thread_thread_loopexit_68) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader17_57) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt__preheader17_65 == 1'd0)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_66_58;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_66_58) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_66_58) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_66_58;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_66_58) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_66_58) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_66_59;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_66_59) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_66_59) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_66_59;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_66_59) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_66_59) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_66_60;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_66_60) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_66_60) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_66_60;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_66_60) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_66_60) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_66_69 == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit18_loopexit_61;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit18_loopexit_61) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_66_60) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_66_69 == 1'd0)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB__preheader17_55;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB__preheader17_55) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit18_loopexit_61) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit18_loopexit_61;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit18_loopexit_61) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit18_loopexit_61) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit18_62;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit18_62) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit18_62) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit18_62;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit18_62) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit18_62) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit18_63;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit18_63) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit18_63) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit18_63;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit18_63) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit18_63) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit18_64;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit18_64) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit18_64) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit18_64;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit18_64) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit18_64) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt__loopexit18_70 == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_75_72;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_75_72) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit18_64) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt__loopexit18_70 == 1'd0)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit18_thread_65;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit18_thread_65) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit18_thread_65) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit18_thread_65;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit18_thread_65) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit18_thread_65) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit18_thread_66;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit18_thread_66) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit18_thread_66) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit18_thread_66;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit18_thread_66) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit18_thread_66) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit18_thread_67;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit18_thread_67) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit18_thread_67) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit18_thread_67;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit18_thread_67) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit18_thread_67) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt__loopexit18_thread_71 == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit18_thread_thread_69;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit18_thread_thread_69) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit18_thread_67) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt__loopexit18_thread_71 == 1'd0)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_75_72;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_75_72) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit18_thread_thread_loopexit_68) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit18_thread_thread_loopexit_68;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit18_thread_thread_loopexit_68) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit18_thread_thread_loopexit_68) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit18_thread_thread_69;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit18_thread_thread_69) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit18_thread_thread_69) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit18_thread_thread_69;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit18_thread_thread_69) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit18_thread_thread_69) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit18_thread_thread_70;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit18_thread_thread_70) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit18_thread_thread_70) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit18_thread_thread_70;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit18_thread_thread_70) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit18_thread_thread_70) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit18_thread_thread_71;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit18_thread_thread_71) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit18_thread_thread_71) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit18_thread_thread_71;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit18_thread_thread_71) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit18_thread_thread_71) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt__loopexit18_thread_thread_74 == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_75_72;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_75_72) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit18_thread_thread_71) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt__loopexit18_thread_thread_74 == 1'd0)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB__thread_73;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB__thread_73) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_75_72) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_75_72;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_75_72) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_75_72) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_75_76 == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB___crit_edge72_98;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB___crit_edge72_98) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_75_72) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_75_76 == 1'd0)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB__thread_73;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB__thread_73) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__thread_73) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB__thread_73;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB__thread_73) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__thread_73) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt__thread_77 == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_78_74;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_78_74) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__thread_73) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt__thread_77 == 1'd0)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_89_84;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_89_84) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_78_74) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_78_74;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_78_74) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_78_74) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_78_79 == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB__preheader27_preheader_75;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB__preheader27_preheader_75) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_78_74) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_78_79 == 1'd0)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_87_83;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_87_83) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader27_preheader_75) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB__preheader27_preheader_75;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB__preheader27_preheader_75) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader27_preheader_75) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB__preheader27_76;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB__preheader27_76) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader27_76) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB__preheader27_76;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB__preheader27_76) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader27_76) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB__preheader27_77;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB__preheader27_77) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader27_77) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB__preheader27_77;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB__preheader27_77) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader27_77) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB__preheader27_78;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB__preheader27_78) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader27_78) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB__preheader27_78;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB__preheader27_78) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader27_78) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt__preheader27_80 == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit23_loopexit2_183;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit23_loopexit2_183) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader27_78) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt__preheader27_80 == 1'd0)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_81_79;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_81_79) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_81_79) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_81_79;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_81_79) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_81_79) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_81_82 == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit23_loopexit2_183;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit23_loopexit2_183) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_81_79) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_81_82 == 1'd0)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_83_80;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_83_80) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_83_80) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_83_80;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_83_80) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_83_80) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_83_81;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_83_81) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_83_81) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_83_81;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_83_81) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_83_81) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_83_82;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_83_82) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_83_82) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_83_82;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_83_82) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_83_82) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_83_86 == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit23_loopexit2_183;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit23_loopexit2_183) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_83_82) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_83_86 == 1'd0)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB__preheader27_76;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB__preheader27_76) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_87_83) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_87_83;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_87_83) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_87_83) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit23_188;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit23_188) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_89_84) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_89_84;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_89_84) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_89_84) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_89_or_cond8 == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB__preheader24_preheader_85;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB__preheader24_preheader_85) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_89_84) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_89_or_cond8 == 1'd0)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit25_91;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit25_91) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader24_preheader_85) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB__preheader24_preheader_85;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB__preheader24_preheader_85) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader24_preheader_85) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB__preheader24_86;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB__preheader24_86) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader24_86) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB__preheader24_86;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB__preheader24_86) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader24_86) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB__preheader24_87;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB__preheader24_87) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader24_87) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB__preheader24_87;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB__preheader24_87) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader24_87) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB__preheader24_88;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB__preheader24_88) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader24_88) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB__preheader24_88;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB__preheader24_88) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader24_88) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt__preheader24_92 == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit25_loopexit_90;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit25_loopexit_90) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader24_88) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt__preheader24_92 == 1'd0)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_93_89;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_93_89) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_93_89) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_93_89;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_93_89) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_93_89) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_93_94 == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit23_loopexit1_182;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit23_loopexit1_182) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_93_89) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_93_94 == 1'd0)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB__preheader24_86;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB__preheader24_86) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit25_loopexit_90) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit25_loopexit_90;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit25_loopexit_90) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit25_loopexit_90) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit25_91;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit25_91) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit25_91) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit25_91;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit25_91) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit25_91) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt__loopexit25_or_cond9 == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB__preheader21_preheader_92;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB__preheader21_preheader_92) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit25_91) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt__loopexit25_or_cond9 == 1'd0)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB___crit_edge72_98;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB___crit_edge72_98) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader21_preheader_92) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB__preheader21_preheader_92;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB__preheader21_preheader_92) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader21_preheader_92) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB__preheader21_93;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB__preheader21_93) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader21_93) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB__preheader21_93;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB__preheader21_93) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader21_93) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB__preheader21_94;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB__preheader21_94) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader21_94) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB__preheader21_94;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB__preheader21_94) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader21_94) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB__preheader21_95;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB__preheader21_95) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader21_95) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB__preheader21_95;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB__preheader21_95) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader21_95) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt__preheader21_97 == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB___crit_edge72_loopexit_97;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB___crit_edge72_loopexit_97) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader21_95) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt__preheader21_97 == 1'd0)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_98_96;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_98_96) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_98_96) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_98_96;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_98_96) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_98_96) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_98_99 == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit23_loopexit_181;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit23_loopexit_181) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_98_96) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_98_99 == 1'd0)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB__preheader21_93;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB__preheader21_93) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB___crit_edge72_loopexit_97) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB___crit_edge72_loopexit_97;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB___crit_edge72_loopexit_97) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB___crit_edge72_loopexit_97) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB___crit_edge72_98;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB___crit_edge72_98) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB___crit_edge72_98) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB___crit_edge72_98;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB___crit_edge72_98) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB___crit_edge72_98) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB___crit_edge72_99;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB___crit_edge72_99) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB___crit_edge72_99) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB___crit_edge72_99;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB___crit_edge72_99) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB___crit_edge72_99) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB___crit_edge72_100;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB___crit_edge72_100) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB___crit_edge72_100) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB___crit_edge72_100;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB___crit_edge72_100) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB___crit_edge72_100) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt___crit_edge72_102 == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_103_101;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_103_101) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB___crit_edge72_100) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt___crit_edge72_102 == 1'd0)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_127_115;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_127_115) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_103_101) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_103_101;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_103_101) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_103_101) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_103_102;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_103_102) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_103_102) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_103_102;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_103_102) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_103_102) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_103_103;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_103_103) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_103_103) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_103_103;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_103_103) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_103_103) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_103_106 == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_107_104;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_107_104) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_103_103) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_103_106 == 1'd0)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_127_115;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_127_115) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_107_104) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_107_104;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_107_104) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_107_104) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_107_105;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_107_105) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_107_105) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_107_105;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_107_105) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_107_105) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_107_106;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_107_106) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_107_106) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_107_106;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_107_106) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_107_106) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_107_110 == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_111_107;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_111_107) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_107_106) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_107_110 == 1'd0)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_127_115;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_127_115) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_111_107) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_111_107;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_111_107) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_111_107) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_111_108;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_111_108) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_111_108) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_111_108;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_111_108) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_111_108) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_111_109;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_111_109) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_111_109) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_111_109;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_111_109) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_111_109) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_111_114 == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_115_110;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_115_110) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_111_109) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_111_114 == 1'd0)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_127_115;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_127_115) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_115_110) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_115_110;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_115_110) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_115_110) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_115_111;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_115_111) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_115_111) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_115_111;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_115_111) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_115_111) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_115_112;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_115_112) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_115_112) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_115_112;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_115_112) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_115_112) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_115_120 == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_121_113;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_121_113) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_115_112) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_115_120 == 1'd0)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_127_115;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_127_115) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_121_113) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_121_113;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_121_113) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_121_113) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_121_124 == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit23_188;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit23_188) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_121_113) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_121_124 == 1'd0)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_125_114;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_125_114) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_125_114) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_125_114;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_125_114) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_125_114) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_125_126 == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit23_188;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit23_188) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_125_114) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_125_126 == 1'd0)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_127_115;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_127_115) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_127_115) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_127_115;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_127_115) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_127_115) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_127_116;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_127_116) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_127_116) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_127_116;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_127_116) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_127_116) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_127_117;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_127_117) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_127_117) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_127_117;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_127_117) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_127_117) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_127_130 == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit23_188;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit23_188) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_127_117) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_127_130 == 1'd0)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_131_118;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_131_118) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_131_118) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_131_118;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_131_118) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_131_118) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_131_119;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_131_119) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_131_119) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_131_119;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_131_119) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_131_119) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_131_120;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_131_120) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_131_120) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_131_120;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_131_120) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_131_120) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_131_134 == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit23_188;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit23_188) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_131_120) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_131_134 == 1'd0)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB__preheader49_preheader_121;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB__preheader49_preheader_121) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader49_preheader_121) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB__preheader49_preheader_121;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB__preheader49_preheader_121) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader49_preheader_121) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB__preheader49_122;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB__preheader49_122) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader49_122) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB__preheader49_122;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB__preheader49_122) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader49_122) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB__preheader49_123;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB__preheader49_123) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader49_123) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB__preheader49_123;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB__preheader49_123) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader49_123) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB__preheader49_124;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB__preheader49_124) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader49_124) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB__preheader49_124;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB__preheader49_124) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader49_124) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt__preheader49_138 == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB__preheader45_preheader_125;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB__preheader45_preheader_125) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader49_124) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt__preheader49_138 == 1'd0)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_139_126;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_139_126) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader45_preheader_125) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB__preheader45_preheader_125;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB__preheader45_preheader_125) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader45_preheader_125) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB__preheader45_130;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB__preheader45_130) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_139_126) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_139_126;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_139_126) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_139_126) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_139_127;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_139_127) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_139_127) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_139_127;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_139_127) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_139_127) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_139_128;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_139_128) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_139_128) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_139_128;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_139_128) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_139_128) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_139_141 == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit23_loopexit7_187;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit23_loopexit7_187) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_139_128) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_139_141 == 1'd0)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_142_129;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_142_129) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_142_129) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_142_129;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_142_129) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_142_129) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB__preheader49_122;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB__preheader49_122) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader45_130) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB__preheader45_130;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB__preheader45_130) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader45_130) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB__preheader45_131;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB__preheader45_131) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader45_131) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB__preheader45_131;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB__preheader45_131) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader45_131) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB__preheader45_132;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB__preheader45_132) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader45_132) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB__preheader45_132;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB__preheader45_132) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader45_132) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt__preheader45_147 == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_152_135;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_152_135) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader45_132) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt__preheader45_147 == 1'd0)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_148_133;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_148_133) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_148_133) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_148_133;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_148_133) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_148_133) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_148_149 == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit23_loopexit6_186;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit23_loopexit6_186) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_148_133) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_148_149 == 1'd0)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_150_134;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_150_134) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_150_134) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_150_134;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_150_134) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_150_134) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB__preheader45_130;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB__preheader45_130) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_152_135) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_152_135;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_152_135) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_152_135) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_152_153 == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB__preheader39_136;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB__preheader39_136) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_152_135) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_152_153 == 1'd0)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit23_188;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit23_188) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader39_136) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB__preheader39_136;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB__preheader39_136) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader39_136) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt__preheader39_154 == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB__lr_ph42_137;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB__lr_ph42_137) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader39_136) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt__preheader39_154 == 1'd0)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB__preheader36_139;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB__preheader36_139) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__lr_ph42_137) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB__lr_ph42_137;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB__lr_ph42_137) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__lr_ph42_137) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_156_141;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_156_141) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader36_loopexit_138) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB__preheader36_loopexit_138;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB__preheader36_loopexit_138) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader36_loopexit_138) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB__preheader36_139;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB__preheader36_139) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader36_139) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB__preheader36_139;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB__preheader36_139) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader36_139) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt__preheader36_155 == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB__lr_ph_140;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB__lr_ph_140) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader36_139) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt__preheader36_155 == 1'd0)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB__preheader32_preheader_148;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB__preheader32_preheader_148) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__lr_ph_140) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB__lr_ph_140;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB__lr_ph_140) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__lr_ph_140) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_159_144;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_159_144) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_156_141) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_156_141;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_156_141) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_156_141) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_156_142;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_156_142) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_156_142) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_156_142;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_156_142) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_156_142) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_156_143;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_156_143) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_156_143) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_156_143;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_156_143) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_156_143) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_156_exitcond66_reg == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB__preheader36_loopexit_138;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB__preheader36_loopexit_138) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_156_143) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_156_exitcond66_reg == 1'd0)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_156_141;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_156_141) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_159_144) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_159_144;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_159_144) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_159_144) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_159_145;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_159_145) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_159_145) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_159_145;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_159_145) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_159_145) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_159_146;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_159_146) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_159_146) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_159_146;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_159_146) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_159_146) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_159_exitcond_reg == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB__preheader32_preheader_loopexit_147;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB__preheader32_preheader_loopexit_147) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_159_146) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_159_exitcond_reg == 1'd0)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_159_144;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_159_144) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader32_preheader_loopexit_147) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB__preheader32_preheader_loopexit_147;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB__preheader32_preheader_loopexit_147) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader32_preheader_loopexit_147) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB__preheader32_preheader_148;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB__preheader32_preheader_148) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader32_preheader_148) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB__preheader32_preheader_148;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB__preheader32_preheader_148) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader32_preheader_148) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB__preheader32_149;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB__preheader32_149) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader32_149) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB__preheader32_149;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB__preheader32_149) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader32_149) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB__preheader32_150;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB__preheader32_150) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader32_150) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB__preheader32_150;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB__preheader32_150) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader32_150) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB__preheader32_151;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB__preheader32_151) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader32_151) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB__preheader32_151;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB__preheader32_151) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader32_151) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt__preheader32_166 == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_170_153;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_170_153) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader32_151) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt__preheader32_166 == 1'd0)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_167_152;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_167_152) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_167_152) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_167_152;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_167_152) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_167_152) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_167_or_cond10 == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit23_loopexit5_185;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit23_loopexit5_185) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_167_152) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_167_or_cond10 == 1'd0)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB__preheader32_149;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB__preheader32_149) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_170_153) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_170_153;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_170_153) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_170_153) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_170_154;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_170_154) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_170_154) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_170_154;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_170_154) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_170_154) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_170_155;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_170_155) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_170_155) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_170_155;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_170_155) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_170_155) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_170_173 == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit23_188;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit23_188) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_170_155) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_170_173 == 1'd0)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_174_156;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_174_156) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_174_156) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_174_156;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_174_156) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_174_156) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_174_157;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_174_157) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_174_157) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_174_157;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_174_157) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_174_157) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_174_158;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_174_158) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_174_158) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_174_158;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_174_158) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_174_158) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_174_177 == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit23_188;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit23_188) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_174_158) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_174_177 == 1'd0)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_178_159;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_178_159) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_178_159) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_178_159;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_178_159) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_178_159) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_178_160;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_178_160) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_178_160) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_178_160;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_178_160) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_178_160) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_178_161;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_178_161) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_178_161) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_178_161;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_178_161) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_178_161) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_178_181 == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_182_162;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_182_162) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_178_161) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_178_181 == 1'd0)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB__preheader29_preheader_176;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB__preheader29_preheader_176) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_182_162) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_182_162;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_182_162) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_182_162) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_182_163;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_182_163) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_182_163) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_182_163;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_182_163) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_182_163) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_182_164;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_182_164) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_182_164) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_182_164;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_182_164) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_182_164) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_182_185 == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_186_165;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_186_165) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_182_164) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_182_185 == 1'd0)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB__preheader29_preheader_176;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB__preheader29_preheader_176) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_186_165) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_186_165;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_186_165) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_186_165) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_186_166;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_186_166) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_186_166) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_186_166;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_186_166) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_186_166) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_186_167;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_186_167) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_186_167) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_186_167;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_186_167) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_186_167) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_186_189 == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_190_168;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_190_168) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_186_167) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_186_189 == 1'd0)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB__preheader29_preheader_176;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB__preheader29_preheader_176) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_190_168) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_190_168;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_190_168) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_190_168) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_190_169;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_190_169) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_190_169) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_190_169;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_190_169) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_190_169) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_190_170;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_190_170) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_190_170) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_190_170;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_190_170) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_190_170) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_190_193 == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_194_171;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_194_171) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_190_170) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_190_193 == 1'd0)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB__preheader29_preheader_176;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB__preheader29_preheader_176) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_194_171) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_194_171;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_194_171) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_194_171) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_194_172;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_194_172) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_194_172) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_194_172;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_194_172) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_194_172) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_194_173;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_194_173) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_194_173) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_194_173;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_194_173) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_194_173) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_194_199 == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_200_174;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_200_174) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_194_173) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_194_199 == 1'd0)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB__preheader29_preheader_176;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB__preheader29_preheader_176) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_200_174) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_200_174;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_200_174) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_200_174) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_200_203 == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit23_188;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit23_188) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_200_174) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_200_203 == 1'd0)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_204_175;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_204_175) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_204_175) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_204_175;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_204_175) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_204_175) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_204_205 == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit23_188;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit23_188) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_204_175) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_204_205 == 1'd0)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB__preheader29_preheader_176;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB__preheader29_preheader_176) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader29_preheader_176) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB__preheader29_preheader_176;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB__preheader29_preheader_176) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader29_preheader_176) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB__preheader29_177;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB__preheader29_177) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader29_177) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB__preheader29_177;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB__preheader29_177) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader29_177) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB__preheader29_178;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB__preheader29_178) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader29_178) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB__preheader29_178;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB__preheader29_178) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader29_178) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB__preheader29_179;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB__preheader29_179) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader29_179) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB__preheader29_179;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB__preheader29_179) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader29_179) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt__preheader29_206 == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit23_loopexit3_184;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit23_loopexit3_184) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader29_179) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt__preheader29_206 == 1'd0)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_207_180;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_207_180) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_207_180) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB_207_180;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB_207_180) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_207_180) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_207_208 == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit23_loopexit3_184;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit23_loopexit3_184) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_207_180) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_207_208 == 1'd0)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB__preheader29_177;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB__preheader29_177) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit23_loopexit_181) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit23_loopexit_181;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit23_loopexit_181) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit23_loopexit_181) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit23_188;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit23_188) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit23_loopexit1_182) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit23_loopexit1_182;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit23_loopexit1_182) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit23_loopexit1_182) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit23_188;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit23_188) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit23_loopexit2_183) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit23_loopexit2_183;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit23_loopexit2_183) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit23_loopexit2_183) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit23_188;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit23_188) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit23_loopexit3_184) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit23_loopexit3_184;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit23_loopexit3_184) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit23_loopexit3_184) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit23_188;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit23_188) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit23_loopexit5_185) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit23_loopexit5_185;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit23_loopexit5_185) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit23_loopexit5_185) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit23_188;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit23_188) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit23_loopexit6_186) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit23_loopexit6_186;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit23_loopexit6_186) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit23_loopexit6_186) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit23_188;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit23_188) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit23_loopexit7_187) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit23_loopexit7_187;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit23_loopexit7_187) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit23_loopexit7_187) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit23_188;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit23_188) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit23_188) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit23_188;
if (reset == 1'b0 && ^(LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit23_188) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit23_188) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_0;
if (reset == 1'b0 && ^(LEGUP_0) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((reset == 1'd1))
begin
cur_state <= 8'd0;
if (reset == 1'b0 && ^(8'd0) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %0*/
/*   %1 = icmp eq %struct.TYPE_4__* %node1, null*/
begin
xmlXPathCmpNodesExt_0_1 = (arg_node1 == 0);
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %0*/
/*   %1 = icmp eq %struct.TYPE_4__* %node1, null*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_0_1))
begin
xmlXPathCmpNodesExt_0_1_reg <= xmlXPathCmpNodesExt_0_1;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt_0_1) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt_0_1_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %0*/
/*   %2 = icmp eq %struct.TYPE_4__* %node2, null*/
begin
xmlXPathCmpNodesExt_0_2 = (arg_node2 == 0);
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %0*/
/*   %2 = icmp eq %struct.TYPE_4__* %node2, null*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_0_1))
begin
xmlXPathCmpNodesExt_0_2_reg <= xmlXPathCmpNodesExt_0_2;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt_0_2) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt_0_2_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %0*/
/*   %or.cond = or i1 %1, %2*/
begin
xmlXPathCmpNodesExt_0_or_cond = (xmlXPathCmpNodesExt_0_1 | xmlXPathCmpNodesExt_0_2);
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %0*/
/*   %or.cond = or i1 %1, %2*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_0_1))
begin
xmlXPathCmpNodesExt_0_or_cond_reg <= xmlXPathCmpNodesExt_0_or_cond;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt_0_or_cond) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt_0_or_cond_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %3*/
/*   %4 = icmp eq %struct.TYPE_4__* %node1, %node2*/
begin
xmlXPathCmpNodesExt_3_4 = (arg_node1 == arg_node2);
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %3*/
/*   %4 = icmp eq %struct.TYPE_4__* %node1, %node2*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_3_2))
begin
xmlXPathCmpNodesExt_3_4_reg <= xmlXPathCmpNodesExt_3_4;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt_3_4) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt_3_4_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %5*/
/*   %6 = getelementptr inbounds %struct.TYPE_4__* %node1, i32 0, i32 0*/
begin
xmlXPathCmpNodesExt_5_6 = arg_node1;
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %5*/
/*   %6 = getelementptr inbounds %struct.TYPE_4__* %node1, i32 0, i32 0*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_5_3))
begin
xmlXPathCmpNodesExt_5_6_reg <= xmlXPathCmpNodesExt_5_6;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt_5_6) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt_5_6_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %5*/
/*   %7 = load i32* %6, align 4, !tbaa !0*/
begin
xmlXPathCmpNodesExt_5_7 = memory_controller_out_a[31:0];
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %5*/
/*   %7 = load i32* %6, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_5_5))
begin
xmlXPathCmpNodesExt_5_7_reg <= xmlXPathCmpNodesExt_5_7;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt_5_7) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt_5_7_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %8*/
/*   %9 = getelementptr inbounds %struct.TYPE_4__* %node2, i32 0, i32 0*/
begin
xmlXPathCmpNodesExt_8_9 = arg_node2;
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %8*/
/*   %9 = getelementptr inbounds %struct.TYPE_4__* %node2, i32 0, i32 0*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_8_6))
begin
xmlXPathCmpNodesExt_8_9_reg <= xmlXPathCmpNodesExt_8_9;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt_8_9) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt_8_9_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %8*/
/*   %10 = load i32* %9, align 4, !tbaa !0*/
begin
xmlXPathCmpNodesExt_8_10 = memory_controller_out_a[31:0];
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %8*/
/*   %10 = load i32* %9, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_8_8))
begin
xmlXPathCmpNodesExt_8_10_reg <= xmlXPathCmpNodesExt_8_10;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt_8_10) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt_8_10_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %8*/
/*   %11 = icmp eq i32 %10, 131*/
begin
xmlXPathCmpNodesExt_8_11 = (xmlXPathCmpNodesExt_8_10 == 32'd131);
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %8*/
/*   %11 = icmp eq i32 %10, 131*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_8_8))
begin
xmlXPathCmpNodesExt_8_11_reg <= xmlXPathCmpNodesExt_8_11;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt_8_11) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt_8_11_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %12*/
/*   %13 = getelementptr inbounds %struct.TYPE_4__* %node1, i32 0, i32 1*/
begin
xmlXPathCmpNodesExt_12_13 = (arg_node1 + 4);
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %12*/
/*   %13 = getelementptr inbounds %struct.TYPE_4__* %node1, i32 0, i32 1*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_12_9))
begin
xmlXPathCmpNodesExt_12_13_reg <= xmlXPathCmpNodesExt_12_13;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt_12_13) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt_12_13_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %12*/
/*   %14 = load i32* %13, align 4, !tbaa !0*/
begin
xmlXPathCmpNodesExt_12_14 = memory_controller_out_b[31:0];
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %12*/
/*   %14 = load i32* %13, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_12_11))
begin
xmlXPathCmpNodesExt_12_14_reg <= xmlXPathCmpNodesExt_12_14;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt_12_14) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt_12_14_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %12*/
/*   %15 = icmp slt i32 %14, 0*/
begin
xmlXPathCmpNodesExt_12_15 = ($signed(xmlXPathCmpNodesExt_12_14) < $signed(32'd0));
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %12*/
/*   %15 = icmp slt i32 %14, 0*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_12_11))
begin
xmlXPathCmpNodesExt_12_15_reg <= xmlXPathCmpNodesExt_12_15;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt_12_15) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt_12_15_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %16*/
/*   %17 = getelementptr inbounds %struct.TYPE_4__* %node2, i32 0, i32 1*/
begin
xmlXPathCmpNodesExt_16_17 = (arg_node2 + 4);
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %16*/
/*   %17 = getelementptr inbounds %struct.TYPE_4__* %node2, i32 0, i32 1*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_16_12))
begin
xmlXPathCmpNodesExt_16_17_reg <= xmlXPathCmpNodesExt_16_17;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt_16_17) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt_16_17_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %16*/
/*   %18 = load i32* %17, align 4, !tbaa !0*/
begin
xmlXPathCmpNodesExt_16_18 = memory_controller_out_b[31:0];
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %16*/
/*   %18 = load i32* %17, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_16_14))
begin
xmlXPathCmpNodesExt_16_18_reg <= xmlXPathCmpNodesExt_16_18;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt_16_18) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt_16_18_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %16*/
/*   %19 = icmp slt i32 %18, 0*/
begin
xmlXPathCmpNodesExt_16_19 = ($signed(xmlXPathCmpNodesExt_16_18) < $signed(32'd0));
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %16*/
/*   %19 = icmp slt i32 %18, 0*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_16_14))
begin
xmlXPathCmpNodesExt_16_19_reg <= xmlXPathCmpNodesExt_16_19;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt_16_19) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt_16_19_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %20*/
/*   %21 = getelementptr inbounds %struct.TYPE_4__* %node1, i32 0, i32 2*/
begin
xmlXPathCmpNodesExt_20_21 = (arg_node1 + 8);
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %20*/
/*   %21 = getelementptr inbounds %struct.TYPE_4__* %node1, i32 0, i32 2*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_20_15))
begin
xmlXPathCmpNodesExt_20_21_reg <= xmlXPathCmpNodesExt_20_21;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt_20_21) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt_20_21_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %20*/
/*   %22 = load i32* %21, align 4, !tbaa !0*/
begin
xmlXPathCmpNodesExt_20_22 = memory_controller_out_a[31:0];
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %20*/
/*   %22 = load i32* %21, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_20_17))
begin
xmlXPathCmpNodesExt_20_22_reg <= xmlXPathCmpNodesExt_20_22;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt_20_22) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt_20_22_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %20*/
/*   %23 = getelementptr inbounds %struct.TYPE_4__* %node2, i32 0, i32 2*/
begin
xmlXPathCmpNodesExt_20_23 = (arg_node2 + 8);
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %20*/
/*   %23 = getelementptr inbounds %struct.TYPE_4__* %node2, i32 0, i32 2*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_20_15))
begin
xmlXPathCmpNodesExt_20_23_reg <= xmlXPathCmpNodesExt_20_23;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt_20_23) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt_20_23_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %20*/
/*   %24 = load i32* %23, align 4, !tbaa !0*/
begin
xmlXPathCmpNodesExt_20_24 = memory_controller_out_b[31:0];
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %20*/
/*   %24 = load i32* %23, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_20_17))
begin
xmlXPathCmpNodesExt_20_24_reg <= xmlXPathCmpNodesExt_20_24;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt_20_24) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt_20_24_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %20*/
/*   %25 = icmp eq i32 %22, %24*/
begin
xmlXPathCmpNodesExt_20_25 = (xmlXPathCmpNodesExt_20_22 == xmlXPathCmpNodesExt_20_24);
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %20*/
/*   %25 = icmp eq i32 %22, %24*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_20_17))
begin
xmlXPathCmpNodesExt_20_25_reg <= xmlXPathCmpNodesExt_20_25;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt_20_25) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt_20_25_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %26*/
/*   %27 = sub nsw i32 0, %14*/
begin
xmlXPathCmpNodesExt_26_27 = (32'd0 - xmlXPathCmpNodesExt_12_14_reg);
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %26*/
/*   %27 = sub nsw i32 0, %14*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_26_18))
begin
xmlXPathCmpNodesExt_26_27_reg <= xmlXPathCmpNodesExt_26_27;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt_26_27) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt_26_27_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %26*/
/*   %28 = sub nsw i32 0, %18*/
begin
xmlXPathCmpNodesExt_26_28 = (32'd0 - xmlXPathCmpNodesExt_16_18_reg);
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %26*/
/*   %28 = sub nsw i32 0, %18*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_26_18))
begin
xmlXPathCmpNodesExt_26_28_reg <= xmlXPathCmpNodesExt_26_28;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt_26_28) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt_26_28_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %26*/
/*   %29 = icmp slt i32 %27, %28*/
begin
xmlXPathCmpNodesExt_26_29 = ($signed(xmlXPathCmpNodesExt_26_27) < $signed(xmlXPathCmpNodesExt_26_28));
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %26*/
/*   %29 = icmp slt i32 %27, %28*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_26_18))
begin
xmlXPathCmpNodesExt_26_29_reg <= xmlXPathCmpNodesExt_26_29;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt_26_29) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt_26_29_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %30*/
/*   %31 = icmp sgt i32 %27, %28*/
begin
xmlXPathCmpNodesExt_30_31 = ($signed(xmlXPathCmpNodesExt_26_27_reg) > $signed(xmlXPathCmpNodesExt_26_28_reg));
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %30*/
/*   %31 = icmp sgt i32 %27, %28*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_30_19))
begin
xmlXPathCmpNodesExt_30_31_reg <= xmlXPathCmpNodesExt_30_31;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt_30_31) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt_30_31_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %32*/
/*   %33 = getelementptr inbounds %struct.TYPE_4__* %node1, i32 0, i32 5*/
begin
xmlXPathCmpNodesExt_32_33 = (arg_node1 + 20);
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %32*/
/*   %33 = getelementptr inbounds %struct.TYPE_4__* %node1, i32 0, i32 5*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_32_20))
begin
xmlXPathCmpNodesExt_32_33_reg <= xmlXPathCmpNodesExt_32_33;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt_32_33) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt_32_33_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %32*/
/*   %34 = load %struct.TYPE_4__** %33, align 4, !tbaa !3*/
begin
xmlXPathCmpNodesExt_32_34 = memory_controller_out_a[`MEMORY_CONTROLLER_ADDR_SIZE-1:0];
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %32*/
/*   %34 = load %struct.TYPE_4__** %33, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_32_22))
begin
xmlXPathCmpNodesExt_32_34_reg <= xmlXPathCmpNodesExt_32_34;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt_32_34) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt_32_34_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %35*/
/*   %36 = getelementptr inbounds %struct.TYPE_4__* %node1, i32 0, i32 4*/
begin
xmlXPathCmpNodesExt_35_36 = (arg_node1 + 16);
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %35*/
/*   %36 = getelementptr inbounds %struct.TYPE_4__* %node1, i32 0, i32 4*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_35_23))
begin
xmlXPathCmpNodesExt_35_36_reg <= xmlXPathCmpNodesExt_35_36;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt_35_36) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt_35_36_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %35*/
/*   %37 = load %struct.TYPE_4__** %36, align 4, !tbaa !3*/
begin
xmlXPathCmpNodesExt_35_37 = memory_controller_out_b[`MEMORY_CONTROLLER_ADDR_SIZE-1:0];
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %35*/
/*   %37 = load %struct.TYPE_4__** %36, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_35_25))
begin
xmlXPathCmpNodesExt_35_37_reg <= xmlXPathCmpNodesExt_35_37;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt_35_37) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt_35_37_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %35*/
/*   %38 = icmp eq %struct.TYPE_4__* %37, null*/
begin
xmlXPathCmpNodesExt_35_38 = (xmlXPathCmpNodesExt_35_37 == 0);
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %35*/
/*   %38 = icmp eq %struct.TYPE_4__* %37, null*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_35_25))
begin
xmlXPathCmpNodesExt_35_38_reg <= xmlXPathCmpNodesExt_35_38;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt_35_38) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt_35_38_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %.preheader*/
/*   %39 = phi %struct.TYPE_4__* [ %45, %43 ], [ %37, %.preheader.preheader ]*/
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader_preheader_26) & (memory_controller_waitrequest == 1'd0)))
begin
xmlXPathCmpNodesExt__preheader_39 = xmlXPathCmpNodesExt_35_37_reg;
end
/* xmlXPathCmpNodesExt: %.preheader*/
/*   %39 = phi %struct.TYPE_4__* [ %45, %43 ], [ %37, %.preheader.preheader ]*/
else /* if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_43_32) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_43_46 == 1'd0))) */
begin
xmlXPathCmpNodesExt__preheader_39 = xmlXPathCmpNodesExt_43_45;
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %.preheader*/
/*   %39 = phi %struct.TYPE_4__* [ %45, %43 ], [ %37, %.preheader.preheader ]*/
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader_preheader_26) & (memory_controller_waitrequest == 1'd0)))
begin
xmlXPathCmpNodesExt__preheader_39_reg <= xmlXPathCmpNodesExt__preheader_39;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt__preheader_39) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt__preheader_39_reg"); $finish; end
end
/* xmlXPathCmpNodesExt: %.preheader*/
/*   %39 = phi %struct.TYPE_4__* [ %45, %43 ], [ %37, %.preheader.preheader ]*/
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_43_32) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_43_46 == 1'd0)))
begin
xmlXPathCmpNodesExt__preheader_39_reg <= xmlXPathCmpNodesExt__preheader_39;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt__preheader_39) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt__preheader_39_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %.preheader*/
/*   %40 = getelementptr inbounds %struct.TYPE_4__* %39, i32 0, i32 0*/
begin
xmlXPathCmpNodesExt__preheader_40 = xmlXPathCmpNodesExt__preheader_39_reg;
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %.preheader*/
/*   %40 = getelementptr inbounds %struct.TYPE_4__* %39, i32 0, i32 0*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader_27))
begin
xmlXPathCmpNodesExt__preheader_40_reg <= xmlXPathCmpNodesExt__preheader_40;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt__preheader_40) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt__preheader_40_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %.preheader*/
/*   %41 = load i32* %40, align 4, !tbaa !0*/
begin
xmlXPathCmpNodesExt__preheader_41 = memory_controller_out_a[31:0];
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %.preheader*/
/*   %41 = load i32* %40, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader_29))
begin
xmlXPathCmpNodesExt__preheader_41_reg <= xmlXPathCmpNodesExt__preheader_41;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt__preheader_41) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt__preheader_41_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %.preheader*/
/*   %42 = icmp eq i32 %41, 131*/
begin
xmlXPathCmpNodesExt__preheader_42 = (xmlXPathCmpNodesExt__preheader_41 == 32'd131);
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %.preheader*/
/*   %42 = icmp eq i32 %41, 131*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader_29))
begin
xmlXPathCmpNodesExt__preheader_42_reg <= xmlXPathCmpNodesExt__preheader_42;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt__preheader_42) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt__preheader_42_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %43*/
/*   %44 = getelementptr inbounds %struct.TYPE_4__* %39, i32 0, i32 4*/
begin
xmlXPathCmpNodesExt_43_44 = (xmlXPathCmpNodesExt__preheader_39_reg + 16);
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %43*/
/*   %44 = getelementptr inbounds %struct.TYPE_4__* %39, i32 0, i32 4*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_43_30))
begin
xmlXPathCmpNodesExt_43_44_reg <= xmlXPathCmpNodesExt_43_44;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt_43_44) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt_43_44_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %43*/
/*   %45 = load %struct.TYPE_4__** %44, align 4, !tbaa !3*/
begin
xmlXPathCmpNodesExt_43_45 = memory_controller_out_b[`MEMORY_CONTROLLER_ADDR_SIZE-1:0];
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %43*/
/*   %45 = load %struct.TYPE_4__** %44, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_43_32))
begin
xmlXPathCmpNodesExt_43_45_reg <= xmlXPathCmpNodesExt_43_45;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt_43_45) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt_43_45_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %43*/
/*   %46 = icmp eq %struct.TYPE_4__* %45, null*/
begin
xmlXPathCmpNodesExt_43_46 = (xmlXPathCmpNodesExt_43_45 == 0);
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %43*/
/*   %46 = icmp eq %struct.TYPE_4__* %45, null*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_43_32))
begin
xmlXPathCmpNodesExt_43_46_reg <= xmlXPathCmpNodesExt_43_46;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt_43_46) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt_43_46_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %.loopexit*/
/*   %.pn = phi %struct.TYPE_4__* [ %node1, %35 ], [ %39, %.loopexit.loopexit ]*/
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_35_25) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_35_38 == 1'd1)))
begin
xmlXPathCmpNodesExt__loopexit__pn = arg_node1;
end
/* xmlXPathCmpNodesExt: %.loopexit*/
/*   %.pn = phi %struct.TYPE_4__* [ %node1, %35 ], [ %39, %.loopexit.loopexit ]*/
else /* if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit_loopexit_33) & (memory_controller_waitrequest == 1'd0))) */
begin
xmlXPathCmpNodesExt__loopexit__pn = xmlXPathCmpNodesExt__preheader_39_reg;
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %.loopexit*/
/*   %.pn = phi %struct.TYPE_4__* [ %node1, %35 ], [ %39, %.loopexit.loopexit ]*/
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_35_25) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_35_38 == 1'd1)))
begin
xmlXPathCmpNodesExt__loopexit__pn_reg <= xmlXPathCmpNodesExt__loopexit__pn;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt__loopexit__pn) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt__loopexit__pn_reg"); $finish; end
end
/* xmlXPathCmpNodesExt: %.loopexit*/
/*   %.pn = phi %struct.TYPE_4__* [ %node1, %35 ], [ %39, %.loopexit.loopexit ]*/
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit_loopexit_33) & (memory_controller_waitrequest == 1'd0)))
begin
xmlXPathCmpNodesExt__loopexit__pn_reg <= xmlXPathCmpNodesExt__loopexit__pn;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt__loopexit__pn) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt__loopexit__pn_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %.loopexit*/
/*   %.1.in = getelementptr inbounds %struct.TYPE_4__* %.pn, i32 0, i32 5*/
begin
xmlXPathCmpNodesExt__loopexit__1_in = (xmlXPathCmpNodesExt__loopexit__pn_reg + 20);
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %.loopexit*/
/*   %.1.in = getelementptr inbounds %struct.TYPE_4__* %.pn, i32 0, i32 5*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit_34))
begin
xmlXPathCmpNodesExt__loopexit__1_in_reg <= xmlXPathCmpNodesExt__loopexit__1_in;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt__loopexit__1_in) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt__loopexit__1_in_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %.loopexit*/
/*   %.1 = load %struct.TYPE_4__** %.1.in, align 4*/
begin
xmlXPathCmpNodesExt__loopexit__1 = memory_controller_out_b[`MEMORY_CONTROLLER_ADDR_SIZE-1:0];
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %.loopexit*/
/*   %.1 = load %struct.TYPE_4__** %.1.in, align 4*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit_36))
begin
xmlXPathCmpNodesExt__loopexit__1_reg <= xmlXPathCmpNodesExt__loopexit__1;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt__loopexit__1) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt__loopexit__1_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %.loopexit*/
/*   %47 = icmp eq %struct.TYPE_4__* %.1, null*/
begin
xmlXPathCmpNodesExt__loopexit_47 = (xmlXPathCmpNodesExt__loopexit__1 == 0);
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %.loopexit*/
/*   %47 = icmp eq %struct.TYPE_4__* %.1, null*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit_36))
begin
xmlXPathCmpNodesExt__loopexit_47_reg <= xmlXPathCmpNodesExt__loopexit_47;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt__loopexit_47) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt__loopexit_47_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %.loopexit.thread*/
/*   %.phi.trans.insert10 = getelementptr inbounds %struct.TYPE_4__* %.1, i32 0, i32 0*/
begin
xmlXPathCmpNodesExt__loopexit_thread__phi_trans_insert10 = xmlXPathCmpNodesExt__loopexit__1_reg;
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %.loopexit.thread*/
/*   %.phi.trans.insert10 = getelementptr inbounds %struct.TYPE_4__* %.1, i32 0, i32 0*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit_thread_37))
begin
xmlXPathCmpNodesExt__loopexit_thread__phi_trans_insert10_reg <= xmlXPathCmpNodesExt__loopexit_thread__phi_trans_insert10;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt__loopexit_thread__phi_trans_insert10) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt__loopexit_thread__phi_trans_insert10_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %.loopexit.thread*/
/*   %.pre11 = load i32* %.phi.trans.insert10, align 4, !tbaa !0*/
begin
xmlXPathCmpNodesExt__loopexit_thread__pre11 = memory_controller_out_a[31:0];
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %.loopexit.thread*/
/*   %.pre11 = load i32* %.phi.trans.insert10, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit_thread_39))
begin
xmlXPathCmpNodesExt__loopexit_thread__pre11_reg <= xmlXPathCmpNodesExt__loopexit_thread__pre11;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt__loopexit_thread__pre11) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt__loopexit_thread__pre11_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %.loopexit.thread*/
/*   %48 = icmp eq i32 %.pre11, 131*/
begin
xmlXPathCmpNodesExt__loopexit_thread_48 = (xmlXPathCmpNodesExt__loopexit_thread__pre11 == 32'd131);
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %.loopexit.thread*/
/*   %48 = icmp eq i32 %.pre11, 131*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit_thread_39))
begin
xmlXPathCmpNodesExt__loopexit_thread_48_reg <= xmlXPathCmpNodesExt__loopexit_thread_48;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt__loopexit_thread_48) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt__loopexit_thread_48_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %.loopexit.thread.thread*/
/*   %precedence1.07713 = phi i32 [ 2, %.loopexit.thread ], [ 3, %.loopexit.thread.thread.loopexit ]*/
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit_thread_39) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt__loopexit_thread_48 == 1'd1)))
begin
xmlXPathCmpNodesExt__loopexit_thread_thread_precedence1_07713 = 32'd2;
end
/* xmlXPathCmpNodesExt: %.loopexit.thread.thread*/
/*   %precedence1.07713 = phi i32 [ 2, %.loopexit.thread ], [ 3, %.loopexit.thread.thread.loopexit ]*/
else /* if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit_thread_thread_loopexit_40) & (memory_controller_waitrequest == 1'd0))) */
begin
xmlXPathCmpNodesExt__loopexit_thread_thread_precedence1_07713 = 32'd3;
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %.loopexit.thread.thread*/
/*   %precedence1.07713 = phi i32 [ 2, %.loopexit.thread ], [ 3, %.loopexit.thread.thread.loopexit ]*/
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit_thread_39) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt__loopexit_thread_48 == 1'd1)))
begin
xmlXPathCmpNodesExt__loopexit_thread_thread_precedence1_07713_reg <= xmlXPathCmpNodesExt__loopexit_thread_thread_precedence1_07713;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt__loopexit_thread_thread_precedence1_07713) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt__loopexit_thread_thread_precedence1_07713_reg"); $finish; end
end
/* xmlXPathCmpNodesExt: %.loopexit.thread.thread*/
/*   %precedence1.07713 = phi i32 [ 2, %.loopexit.thread ], [ 3, %.loopexit.thread.thread.loopexit ]*/
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit_thread_thread_loopexit_40) & (memory_controller_waitrequest == 1'd0)))
begin
xmlXPathCmpNodesExt__loopexit_thread_thread_precedence1_07713_reg <= xmlXPathCmpNodesExt__loopexit_thread_thread_precedence1_07713;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt__loopexit_thread_thread_precedence1_07713) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt__loopexit_thread_thread_precedence1_07713_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %.loopexit.thread.thread*/
/*   %.17812 = phi %struct.TYPE_4__* [ %.1, %.loopexit.thread ], [ %39, %.loopexit.thread.thread.loopexit ]*/
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit_thread_39) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt__loopexit_thread_48 == 1'd1)))
begin
xmlXPathCmpNodesExt__loopexit_thread_thread__17812 = xmlXPathCmpNodesExt__loopexit__1_reg;
end
/* xmlXPathCmpNodesExt: %.loopexit.thread.thread*/
/*   %.17812 = phi %struct.TYPE_4__* [ %.1, %.loopexit.thread ], [ %39, %.loopexit.thread.thread.loopexit ]*/
else /* if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit_thread_thread_loopexit_40) & (memory_controller_waitrequest == 1'd0))) */
begin
xmlXPathCmpNodesExt__loopexit_thread_thread__17812 = xmlXPathCmpNodesExt__preheader_39_reg;
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %.loopexit.thread.thread*/
/*   %.17812 = phi %struct.TYPE_4__* [ %.1, %.loopexit.thread ], [ %39, %.loopexit.thread.thread.loopexit ]*/
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit_thread_39) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt__loopexit_thread_48 == 1'd1)))
begin
xmlXPathCmpNodesExt__loopexit_thread_thread__17812_reg <= xmlXPathCmpNodesExt__loopexit_thread_thread__17812;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt__loopexit_thread_thread__17812) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt__loopexit_thread_thread__17812_reg"); $finish; end
end
/* xmlXPathCmpNodesExt: %.loopexit.thread.thread*/
/*   %.17812 = phi %struct.TYPE_4__* [ %.1, %.loopexit.thread ], [ %39, %.loopexit.thread.thread.loopexit ]*/
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit_thread_thread_loopexit_40) & (memory_controller_waitrequest == 1'd0)))
begin
xmlXPathCmpNodesExt__loopexit_thread_thread__17812_reg <= xmlXPathCmpNodesExt__loopexit_thread_thread__17812;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt__loopexit_thread_thread__17812) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt__loopexit_thread_thread__17812_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %.loopexit.thread.thread*/
/*   %49 = getelementptr inbounds %struct.TYPE_4__* %.17812, i32 0, i32 1*/
begin
xmlXPathCmpNodesExt__loopexit_thread_thread_49 = (xmlXPathCmpNodesExt__loopexit_thread_thread__17812_reg + 4);
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %.loopexit.thread.thread*/
/*   %49 = getelementptr inbounds %struct.TYPE_4__* %.17812, i32 0, i32 1*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit_thread_thread_41))
begin
xmlXPathCmpNodesExt__loopexit_thread_thread_49_reg <= xmlXPathCmpNodesExt__loopexit_thread_thread_49;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt__loopexit_thread_thread_49) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt__loopexit_thread_thread_49_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %.loopexit.thread.thread*/
/*   %50 = load i32* %49, align 4, !tbaa !0*/
begin
xmlXPathCmpNodesExt__loopexit_thread_thread_50 = memory_controller_out_a[31:0];
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %.loopexit.thread.thread*/
/*   %50 = load i32* %49, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit_thread_thread_43))
begin
xmlXPathCmpNodesExt__loopexit_thread_thread_50_reg <= xmlXPathCmpNodesExt__loopexit_thread_thread_50;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt__loopexit_thread_thread_50) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt__loopexit_thread_thread_50_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %.loopexit.thread.thread*/
/*   %51 = icmp sgt i32 %50, -1*/
begin
xmlXPathCmpNodesExt__loopexit_thread_thread_51 = ($signed(xmlXPathCmpNodesExt__loopexit_thread_thread_50) > $signed(-32'd1));
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %.loopexit.thread.thread*/
/*   %51 = icmp sgt i32 %50, -1*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit_thread_thread_43))
begin
xmlXPathCmpNodesExt__loopexit_thread_thread_51_reg <= xmlXPathCmpNodesExt__loopexit_thread_thread_51;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt__loopexit_thread_thread_51) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt__loopexit_thread_thread_51_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %._crit_edge73*/
/*   %miscNode1.0 = phi %struct.TYPE_4__* [ %node1, %52 ], [ %node1, %32 ], [ null, %30 ], [ null, %8 ], [ null, %5 ], [ %node1, %.loopexit ], [ %node1, %.loopexit.thread ], [ %node1, %.loopexit.thread.thread ]*/
if ((((((((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_5_5) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_5_7 != 32'd131)) & (xmlXPathCmpNodesExt_5_7 != 32'd134)) & (xmlXPathCmpNodesExt_5_7 != 32'd128)) & (xmlXPathCmpNodesExt_5_7 != 32'd133)) & (xmlXPathCmpNodesExt_5_7 != 32'd132)) & (xmlXPathCmpNodesExt_5_7 != 32'd129)) & (xmlXPathCmpNodesExt_5_7 != 32'd130)))
begin
xmlXPathCmpNodesExt___crit_edge73_miscNode1_0 = 0;
end
/* xmlXPathCmpNodesExt: %._crit_edge73*/
/*   %miscNode1.0 = phi %struct.TYPE_4__* [ %node1, %52 ], [ %node1, %32 ], [ null, %30 ], [ null, %8 ], [ null, %5 ], [ %node1, %.loopexit ], [ %node1, %.loopexit.thread ], [ %node1, %.loopexit.thread.thread ]*/
else if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_8_8) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_8_11 == 1'd0)))
begin
xmlXPathCmpNodesExt___crit_edge73_miscNode1_0 = 0;
end
/* xmlXPathCmpNodesExt: %._crit_edge73*/
/*   %miscNode1.0 = phi %struct.TYPE_4__* [ %node1, %52 ], [ %node1, %32 ], [ null, %30 ], [ null, %8 ], [ null, %5 ], [ %node1, %.loopexit ], [ %node1, %.loopexit.thread ], [ %node1, %.loopexit.thread.thread ]*/
else if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_30_19) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_30_31 == 1'd0)))
begin
xmlXPathCmpNodesExt___crit_edge73_miscNode1_0 = 0;
end
/* xmlXPathCmpNodesExt: %._crit_edge73*/
/*   %miscNode1.0 = phi %struct.TYPE_4__* [ %node1, %52 ], [ %node1, %32 ], [ null, %30 ], [ null, %8 ], [ null, %5 ], [ %node1, %.loopexit ], [ %node1, %.loopexit.thread ], [ %node1, %.loopexit.thread.thread ]*/
else if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_32_22) & (memory_controller_waitrequest == 1'd0)))
begin
xmlXPathCmpNodesExt___crit_edge73_miscNode1_0 = arg_node1;
end
/* xmlXPathCmpNodesExt: %._crit_edge73*/
/*   %miscNode1.0 = phi %struct.TYPE_4__* [ %node1, %52 ], [ %node1, %32 ], [ null, %30 ], [ null, %8 ], [ null, %5 ], [ %node1, %.loopexit ], [ %node1, %.loopexit.thread ], [ %node1, %.loopexit.thread.thread ]*/
else if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit_36) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt__loopexit_47 == 1'd1)))
begin
xmlXPathCmpNodesExt___crit_edge73_miscNode1_0 = arg_node1;
end
/* xmlXPathCmpNodesExt: %._crit_edge73*/
/*   %miscNode1.0 = phi %struct.TYPE_4__* [ %node1, %52 ], [ %node1, %32 ], [ null, %30 ], [ null, %8 ], [ null, %5 ], [ %node1, %.loopexit ], [ %node1, %.loopexit.thread ], [ %node1, %.loopexit.thread.thread ]*/
else if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit_thread_39) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt__loopexit_thread_48 == 1'd0)))
begin
xmlXPathCmpNodesExt___crit_edge73_miscNode1_0 = arg_node1;
end
/* xmlXPathCmpNodesExt: %._crit_edge73*/
/*   %miscNode1.0 = phi %struct.TYPE_4__* [ %node1, %52 ], [ %node1, %32 ], [ null, %30 ], [ null, %8 ], [ null, %5 ], [ %node1, %.loopexit ], [ %node1, %.loopexit.thread ], [ %node1, %.loopexit.thread.thread ]*/
else if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit_thread_thread_43) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt__loopexit_thread_thread_51 == 1'd1)))
begin
xmlXPathCmpNodesExt___crit_edge73_miscNode1_0 = arg_node1;
end
/* xmlXPathCmpNodesExt: %._crit_edge73*/
/*   %miscNode1.0 = phi %struct.TYPE_4__* [ %node1, %52 ], [ %node1, %32 ], [ null, %30 ], [ null, %8 ], [ null, %5 ], [ %node1, %.loopexit ], [ %node1, %.loopexit.thread ], [ %node1, %.loopexit.thread.thread ]*/
else /* if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_52_44) & (memory_controller_waitrequest == 1'd0))) */
begin
xmlXPathCmpNodesExt___crit_edge73_miscNode1_0 = arg_node1;
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %._crit_edge73*/
/*   %miscNode1.0 = phi %struct.TYPE_4__* [ %node1, %52 ], [ %node1, %32 ], [ null, %30 ], [ null, %8 ], [ null, %5 ], [ %node1, %.loopexit ], [ %node1, %.loopexit.thread ], [ %node1, %.loopexit.thread.thread ]*/
if ((((((((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_5_5) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_5_7 != 32'd131)) & (xmlXPathCmpNodesExt_5_7 != 32'd134)) & (xmlXPathCmpNodesExt_5_7 != 32'd128)) & (xmlXPathCmpNodesExt_5_7 != 32'd133)) & (xmlXPathCmpNodesExt_5_7 != 32'd132)) & (xmlXPathCmpNodesExt_5_7 != 32'd129)) & (xmlXPathCmpNodesExt_5_7 != 32'd130)))
begin
xmlXPathCmpNodesExt___crit_edge73_miscNode1_0_reg <= xmlXPathCmpNodesExt___crit_edge73_miscNode1_0;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt___crit_edge73_miscNode1_0) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt___crit_edge73_miscNode1_0_reg"); $finish; end
end
/* xmlXPathCmpNodesExt: %._crit_edge73*/
/*   %miscNode1.0 = phi %struct.TYPE_4__* [ %node1, %52 ], [ %node1, %32 ], [ null, %30 ], [ null, %8 ], [ null, %5 ], [ %node1, %.loopexit ], [ %node1, %.loopexit.thread ], [ %node1, %.loopexit.thread.thread ]*/
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_8_8) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_8_11 == 1'd0)))
begin
xmlXPathCmpNodesExt___crit_edge73_miscNode1_0_reg <= xmlXPathCmpNodesExt___crit_edge73_miscNode1_0;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt___crit_edge73_miscNode1_0) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt___crit_edge73_miscNode1_0_reg"); $finish; end
end
/* xmlXPathCmpNodesExt: %._crit_edge73*/
/*   %miscNode1.0 = phi %struct.TYPE_4__* [ %node1, %52 ], [ %node1, %32 ], [ null, %30 ], [ null, %8 ], [ null, %5 ], [ %node1, %.loopexit ], [ %node1, %.loopexit.thread ], [ %node1, %.loopexit.thread.thread ]*/
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_30_19) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_30_31 == 1'd0)))
begin
xmlXPathCmpNodesExt___crit_edge73_miscNode1_0_reg <= xmlXPathCmpNodesExt___crit_edge73_miscNode1_0;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt___crit_edge73_miscNode1_0) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt___crit_edge73_miscNode1_0_reg"); $finish; end
end
/* xmlXPathCmpNodesExt: %._crit_edge73*/
/*   %miscNode1.0 = phi %struct.TYPE_4__* [ %node1, %52 ], [ %node1, %32 ], [ null, %30 ], [ null, %8 ], [ null, %5 ], [ %node1, %.loopexit ], [ %node1, %.loopexit.thread ], [ %node1, %.loopexit.thread.thread ]*/
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_32_22) & (memory_controller_waitrequest == 1'd0)))
begin
xmlXPathCmpNodesExt___crit_edge73_miscNode1_0_reg <= xmlXPathCmpNodesExt___crit_edge73_miscNode1_0;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt___crit_edge73_miscNode1_0) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt___crit_edge73_miscNode1_0_reg"); $finish; end
end
/* xmlXPathCmpNodesExt: %._crit_edge73*/
/*   %miscNode1.0 = phi %struct.TYPE_4__* [ %node1, %52 ], [ %node1, %32 ], [ null, %30 ], [ null, %8 ], [ null, %5 ], [ %node1, %.loopexit ], [ %node1, %.loopexit.thread ], [ %node1, %.loopexit.thread.thread ]*/
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit_36) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt__loopexit_47 == 1'd1)))
begin
xmlXPathCmpNodesExt___crit_edge73_miscNode1_0_reg <= xmlXPathCmpNodesExt___crit_edge73_miscNode1_0;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt___crit_edge73_miscNode1_0) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt___crit_edge73_miscNode1_0_reg"); $finish; end
end
/* xmlXPathCmpNodesExt: %._crit_edge73*/
/*   %miscNode1.0 = phi %struct.TYPE_4__* [ %node1, %52 ], [ %node1, %32 ], [ null, %30 ], [ null, %8 ], [ null, %5 ], [ %node1, %.loopexit ], [ %node1, %.loopexit.thread ], [ %node1, %.loopexit.thread.thread ]*/
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit_thread_39) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt__loopexit_thread_48 == 1'd0)))
begin
xmlXPathCmpNodesExt___crit_edge73_miscNode1_0_reg <= xmlXPathCmpNodesExt___crit_edge73_miscNode1_0;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt___crit_edge73_miscNode1_0) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt___crit_edge73_miscNode1_0_reg"); $finish; end
end
/* xmlXPathCmpNodesExt: %._crit_edge73*/
/*   %miscNode1.0 = phi %struct.TYPE_4__* [ %node1, %52 ], [ %node1, %32 ], [ null, %30 ], [ null, %8 ], [ null, %5 ], [ %node1, %.loopexit ], [ %node1, %.loopexit.thread ], [ %node1, %.loopexit.thread.thread ]*/
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit_thread_thread_43) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt__loopexit_thread_thread_51 == 1'd1)))
begin
xmlXPathCmpNodesExt___crit_edge73_miscNode1_0_reg <= xmlXPathCmpNodesExt___crit_edge73_miscNode1_0;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt___crit_edge73_miscNode1_0) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt___crit_edge73_miscNode1_0_reg"); $finish; end
end
/* xmlXPathCmpNodesExt: %._crit_edge73*/
/*   %miscNode1.0 = phi %struct.TYPE_4__* [ %node1, %52 ], [ %node1, %32 ], [ null, %30 ], [ null, %8 ], [ null, %5 ], [ %node1, %.loopexit ], [ %node1, %.loopexit.thread ], [ %node1, %.loopexit.thread.thread ]*/
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_52_44) & (memory_controller_waitrequest == 1'd0)))
begin
xmlXPathCmpNodesExt___crit_edge73_miscNode1_0_reg <= xmlXPathCmpNodesExt___crit_edge73_miscNode1_0;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt___crit_edge73_miscNode1_0) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt___crit_edge73_miscNode1_0_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %._crit_edge73*/
/*   %precedence1.1 = phi i32 [ %precedence1.07713, %52 ], [ 1, %32 ], [ 0, %30 ], [ 0, %8 ], [ 0, %5 ], [ 0, %.loopexit ], [ 0, %.loopexit.thread ], [ 0, %.loopexit.thread.thread ]*/
if ((((((((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_5_5) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_5_7 != 32'd131)) & (xmlXPathCmpNodesExt_5_7 != 32'd134)) & (xmlXPathCmpNodesExt_5_7 != 32'd128)) & (xmlXPathCmpNodesExt_5_7 != 32'd133)) & (xmlXPathCmpNodesExt_5_7 != 32'd132)) & (xmlXPathCmpNodesExt_5_7 != 32'd129)) & (xmlXPathCmpNodesExt_5_7 != 32'd130)))
begin
xmlXPathCmpNodesExt___crit_edge73_precedence1_1 = 32'd0;
end
/* xmlXPathCmpNodesExt: %._crit_edge73*/
/*   %precedence1.1 = phi i32 [ %precedence1.07713, %52 ], [ 1, %32 ], [ 0, %30 ], [ 0, %8 ], [ 0, %5 ], [ 0, %.loopexit ], [ 0, %.loopexit.thread ], [ 0, %.loopexit.thread.thread ]*/
else if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_8_8) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_8_11 == 1'd0)))
begin
xmlXPathCmpNodesExt___crit_edge73_precedence1_1 = 32'd0;
end
/* xmlXPathCmpNodesExt: %._crit_edge73*/
/*   %precedence1.1 = phi i32 [ %precedence1.07713, %52 ], [ 1, %32 ], [ 0, %30 ], [ 0, %8 ], [ 0, %5 ], [ 0, %.loopexit ], [ 0, %.loopexit.thread ], [ 0, %.loopexit.thread.thread ]*/
else if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_30_19) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_30_31 == 1'd0)))
begin
xmlXPathCmpNodesExt___crit_edge73_precedence1_1 = 32'd0;
end
/* xmlXPathCmpNodesExt: %._crit_edge73*/
/*   %precedence1.1 = phi i32 [ %precedence1.07713, %52 ], [ 1, %32 ], [ 0, %30 ], [ 0, %8 ], [ 0, %5 ], [ 0, %.loopexit ], [ 0, %.loopexit.thread ], [ 0, %.loopexit.thread.thread ]*/
else if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_32_22) & (memory_controller_waitrequest == 1'd0)))
begin
xmlXPathCmpNodesExt___crit_edge73_precedence1_1 = 32'd1;
end
/* xmlXPathCmpNodesExt: %._crit_edge73*/
/*   %precedence1.1 = phi i32 [ %precedence1.07713, %52 ], [ 1, %32 ], [ 0, %30 ], [ 0, %8 ], [ 0, %5 ], [ 0, %.loopexit ], [ 0, %.loopexit.thread ], [ 0, %.loopexit.thread.thread ]*/
else if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit_36) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt__loopexit_47 == 1'd1)))
begin
xmlXPathCmpNodesExt___crit_edge73_precedence1_1 = 32'd0;
end
/* xmlXPathCmpNodesExt: %._crit_edge73*/
/*   %precedence1.1 = phi i32 [ %precedence1.07713, %52 ], [ 1, %32 ], [ 0, %30 ], [ 0, %8 ], [ 0, %5 ], [ 0, %.loopexit ], [ 0, %.loopexit.thread ], [ 0, %.loopexit.thread.thread ]*/
else if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit_thread_39) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt__loopexit_thread_48 == 1'd0)))
begin
xmlXPathCmpNodesExt___crit_edge73_precedence1_1 = 32'd0;
end
/* xmlXPathCmpNodesExt: %._crit_edge73*/
/*   %precedence1.1 = phi i32 [ %precedence1.07713, %52 ], [ 1, %32 ], [ 0, %30 ], [ 0, %8 ], [ 0, %5 ], [ 0, %.loopexit ], [ 0, %.loopexit.thread ], [ 0, %.loopexit.thread.thread ]*/
else if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit_thread_thread_43) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt__loopexit_thread_thread_51 == 1'd1)))
begin
xmlXPathCmpNodesExt___crit_edge73_precedence1_1 = 32'd0;
end
/* xmlXPathCmpNodesExt: %._crit_edge73*/
/*   %precedence1.1 = phi i32 [ %precedence1.07713, %52 ], [ 1, %32 ], [ 0, %30 ], [ 0, %8 ], [ 0, %5 ], [ 0, %.loopexit ], [ 0, %.loopexit.thread ], [ 0, %.loopexit.thread.thread ]*/
else /* if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_52_44) & (memory_controller_waitrequest == 1'd0))) */
begin
xmlXPathCmpNodesExt___crit_edge73_precedence1_1 = xmlXPathCmpNodesExt__loopexit_thread_thread_precedence1_07713_reg;
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %._crit_edge73*/
/*   %precedence1.1 = phi i32 [ %precedence1.07713, %52 ], [ 1, %32 ], [ 0, %30 ], [ 0, %8 ], [ 0, %5 ], [ 0, %.loopexit ], [ 0, %.loopexit.thread ], [ 0, %.loopexit.thread.thread ]*/
if ((((((((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_5_5) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_5_7 != 32'd131)) & (xmlXPathCmpNodesExt_5_7 != 32'd134)) & (xmlXPathCmpNodesExt_5_7 != 32'd128)) & (xmlXPathCmpNodesExt_5_7 != 32'd133)) & (xmlXPathCmpNodesExt_5_7 != 32'd132)) & (xmlXPathCmpNodesExt_5_7 != 32'd129)) & (xmlXPathCmpNodesExt_5_7 != 32'd130)))
begin
xmlXPathCmpNodesExt___crit_edge73_precedence1_1_reg <= xmlXPathCmpNodesExt___crit_edge73_precedence1_1;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt___crit_edge73_precedence1_1) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt___crit_edge73_precedence1_1_reg"); $finish; end
end
/* xmlXPathCmpNodesExt: %._crit_edge73*/
/*   %precedence1.1 = phi i32 [ %precedence1.07713, %52 ], [ 1, %32 ], [ 0, %30 ], [ 0, %8 ], [ 0, %5 ], [ 0, %.loopexit ], [ 0, %.loopexit.thread ], [ 0, %.loopexit.thread.thread ]*/
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_8_8) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_8_11 == 1'd0)))
begin
xmlXPathCmpNodesExt___crit_edge73_precedence1_1_reg <= xmlXPathCmpNodesExt___crit_edge73_precedence1_1;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt___crit_edge73_precedence1_1) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt___crit_edge73_precedence1_1_reg"); $finish; end
end
/* xmlXPathCmpNodesExt: %._crit_edge73*/
/*   %precedence1.1 = phi i32 [ %precedence1.07713, %52 ], [ 1, %32 ], [ 0, %30 ], [ 0, %8 ], [ 0, %5 ], [ 0, %.loopexit ], [ 0, %.loopexit.thread ], [ 0, %.loopexit.thread.thread ]*/
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_30_19) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_30_31 == 1'd0)))
begin
xmlXPathCmpNodesExt___crit_edge73_precedence1_1_reg <= xmlXPathCmpNodesExt___crit_edge73_precedence1_1;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt___crit_edge73_precedence1_1) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt___crit_edge73_precedence1_1_reg"); $finish; end
end
/* xmlXPathCmpNodesExt: %._crit_edge73*/
/*   %precedence1.1 = phi i32 [ %precedence1.07713, %52 ], [ 1, %32 ], [ 0, %30 ], [ 0, %8 ], [ 0, %5 ], [ 0, %.loopexit ], [ 0, %.loopexit.thread ], [ 0, %.loopexit.thread.thread ]*/
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_32_22) & (memory_controller_waitrequest == 1'd0)))
begin
xmlXPathCmpNodesExt___crit_edge73_precedence1_1_reg <= xmlXPathCmpNodesExt___crit_edge73_precedence1_1;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt___crit_edge73_precedence1_1) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt___crit_edge73_precedence1_1_reg"); $finish; end
end
/* xmlXPathCmpNodesExt: %._crit_edge73*/
/*   %precedence1.1 = phi i32 [ %precedence1.07713, %52 ], [ 1, %32 ], [ 0, %30 ], [ 0, %8 ], [ 0, %5 ], [ 0, %.loopexit ], [ 0, %.loopexit.thread ], [ 0, %.loopexit.thread.thread ]*/
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit_36) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt__loopexit_47 == 1'd1)))
begin
xmlXPathCmpNodesExt___crit_edge73_precedence1_1_reg <= xmlXPathCmpNodesExt___crit_edge73_precedence1_1;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt___crit_edge73_precedence1_1) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt___crit_edge73_precedence1_1_reg"); $finish; end
end
/* xmlXPathCmpNodesExt: %._crit_edge73*/
/*   %precedence1.1 = phi i32 [ %precedence1.07713, %52 ], [ 1, %32 ], [ 0, %30 ], [ 0, %8 ], [ 0, %5 ], [ 0, %.loopexit ], [ 0, %.loopexit.thread ], [ 0, %.loopexit.thread.thread ]*/
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit_thread_39) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt__loopexit_thread_48 == 1'd0)))
begin
xmlXPathCmpNodesExt___crit_edge73_precedence1_1_reg <= xmlXPathCmpNodesExt___crit_edge73_precedence1_1;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt___crit_edge73_precedence1_1) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt___crit_edge73_precedence1_1_reg"); $finish; end
end
/* xmlXPathCmpNodesExt: %._crit_edge73*/
/*   %precedence1.1 = phi i32 [ %precedence1.07713, %52 ], [ 1, %32 ], [ 0, %30 ], [ 0, %8 ], [ 0, %5 ], [ 0, %.loopexit ], [ 0, %.loopexit.thread ], [ 0, %.loopexit.thread.thread ]*/
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit_thread_thread_43) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt__loopexit_thread_thread_51 == 1'd1)))
begin
xmlXPathCmpNodesExt___crit_edge73_precedence1_1_reg <= xmlXPathCmpNodesExt___crit_edge73_precedence1_1;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt___crit_edge73_precedence1_1) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt___crit_edge73_precedence1_1_reg"); $finish; end
end
/* xmlXPathCmpNodesExt: %._crit_edge73*/
/*   %precedence1.1 = phi i32 [ %precedence1.07713, %52 ], [ 1, %32 ], [ 0, %30 ], [ 0, %8 ], [ 0, %5 ], [ 0, %.loopexit ], [ 0, %.loopexit.thread ], [ 0, %.loopexit.thread.thread ]*/
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_52_44) & (memory_controller_waitrequest == 1'd0)))
begin
xmlXPathCmpNodesExt___crit_edge73_precedence1_1_reg <= xmlXPathCmpNodesExt___crit_edge73_precedence1_1;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt___crit_edge73_precedence1_1) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt___crit_edge73_precedence1_1_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %._crit_edge73*/
/*   %misc.0 = phi i32 [ 1, %52 ], [ 1, %32 ], [ 0, %30 ], [ 0, %8 ], [ 0, %5 ], [ 0, %.loopexit ], [ 0, %.loopexit.thread ], [ 0, %.loopexit.thread.thread ]*/
if ((((((((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_5_5) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_5_7 != 32'd131)) & (xmlXPathCmpNodesExt_5_7 != 32'd134)) & (xmlXPathCmpNodesExt_5_7 != 32'd128)) & (xmlXPathCmpNodesExt_5_7 != 32'd133)) & (xmlXPathCmpNodesExt_5_7 != 32'd132)) & (xmlXPathCmpNodesExt_5_7 != 32'd129)) & (xmlXPathCmpNodesExt_5_7 != 32'd130)))
begin
xmlXPathCmpNodesExt___crit_edge73_misc_0 = 32'd0;
end
/* xmlXPathCmpNodesExt: %._crit_edge73*/
/*   %misc.0 = phi i32 [ 1, %52 ], [ 1, %32 ], [ 0, %30 ], [ 0, %8 ], [ 0, %5 ], [ 0, %.loopexit ], [ 0, %.loopexit.thread ], [ 0, %.loopexit.thread.thread ]*/
else if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_8_8) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_8_11 == 1'd0)))
begin
xmlXPathCmpNodesExt___crit_edge73_misc_0 = 32'd0;
end
/* xmlXPathCmpNodesExt: %._crit_edge73*/
/*   %misc.0 = phi i32 [ 1, %52 ], [ 1, %32 ], [ 0, %30 ], [ 0, %8 ], [ 0, %5 ], [ 0, %.loopexit ], [ 0, %.loopexit.thread ], [ 0, %.loopexit.thread.thread ]*/
else if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_30_19) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_30_31 == 1'd0)))
begin
xmlXPathCmpNodesExt___crit_edge73_misc_0 = 32'd0;
end
/* xmlXPathCmpNodesExt: %._crit_edge73*/
/*   %misc.0 = phi i32 [ 1, %52 ], [ 1, %32 ], [ 0, %30 ], [ 0, %8 ], [ 0, %5 ], [ 0, %.loopexit ], [ 0, %.loopexit.thread ], [ 0, %.loopexit.thread.thread ]*/
else if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_32_22) & (memory_controller_waitrequest == 1'd0)))
begin
xmlXPathCmpNodesExt___crit_edge73_misc_0 = 32'd1;
end
/* xmlXPathCmpNodesExt: %._crit_edge73*/
/*   %misc.0 = phi i32 [ 1, %52 ], [ 1, %32 ], [ 0, %30 ], [ 0, %8 ], [ 0, %5 ], [ 0, %.loopexit ], [ 0, %.loopexit.thread ], [ 0, %.loopexit.thread.thread ]*/
else if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit_36) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt__loopexit_47 == 1'd1)))
begin
xmlXPathCmpNodesExt___crit_edge73_misc_0 = 32'd0;
end
/* xmlXPathCmpNodesExt: %._crit_edge73*/
/*   %misc.0 = phi i32 [ 1, %52 ], [ 1, %32 ], [ 0, %30 ], [ 0, %8 ], [ 0, %5 ], [ 0, %.loopexit ], [ 0, %.loopexit.thread ], [ 0, %.loopexit.thread.thread ]*/
else if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit_thread_39) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt__loopexit_thread_48 == 1'd0)))
begin
xmlXPathCmpNodesExt___crit_edge73_misc_0 = 32'd0;
end
/* xmlXPathCmpNodesExt: %._crit_edge73*/
/*   %misc.0 = phi i32 [ 1, %52 ], [ 1, %32 ], [ 0, %30 ], [ 0, %8 ], [ 0, %5 ], [ 0, %.loopexit ], [ 0, %.loopexit.thread ], [ 0, %.loopexit.thread.thread ]*/
else if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit_thread_thread_43) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt__loopexit_thread_thread_51 == 1'd1)))
begin
xmlXPathCmpNodesExt___crit_edge73_misc_0 = 32'd0;
end
/* xmlXPathCmpNodesExt: %._crit_edge73*/
/*   %misc.0 = phi i32 [ 1, %52 ], [ 1, %32 ], [ 0, %30 ], [ 0, %8 ], [ 0, %5 ], [ 0, %.loopexit ], [ 0, %.loopexit.thread ], [ 0, %.loopexit.thread.thread ]*/
else /* if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_52_44) & (memory_controller_waitrequest == 1'd0))) */
begin
xmlXPathCmpNodesExt___crit_edge73_misc_0 = 32'd1;
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %._crit_edge73*/
/*   %misc.0 = phi i32 [ 1, %52 ], [ 1, %32 ], [ 0, %30 ], [ 0, %8 ], [ 0, %5 ], [ 0, %.loopexit ], [ 0, %.loopexit.thread ], [ 0, %.loopexit.thread.thread ]*/
if ((((((((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_5_5) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_5_7 != 32'd131)) & (xmlXPathCmpNodesExt_5_7 != 32'd134)) & (xmlXPathCmpNodesExt_5_7 != 32'd128)) & (xmlXPathCmpNodesExt_5_7 != 32'd133)) & (xmlXPathCmpNodesExt_5_7 != 32'd132)) & (xmlXPathCmpNodesExt_5_7 != 32'd129)) & (xmlXPathCmpNodesExt_5_7 != 32'd130)))
begin
xmlXPathCmpNodesExt___crit_edge73_misc_0_reg <= xmlXPathCmpNodesExt___crit_edge73_misc_0;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt___crit_edge73_misc_0) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt___crit_edge73_misc_0_reg"); $finish; end
end
/* xmlXPathCmpNodesExt: %._crit_edge73*/
/*   %misc.0 = phi i32 [ 1, %52 ], [ 1, %32 ], [ 0, %30 ], [ 0, %8 ], [ 0, %5 ], [ 0, %.loopexit ], [ 0, %.loopexit.thread ], [ 0, %.loopexit.thread.thread ]*/
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_8_8) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_8_11 == 1'd0)))
begin
xmlXPathCmpNodesExt___crit_edge73_misc_0_reg <= xmlXPathCmpNodesExt___crit_edge73_misc_0;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt___crit_edge73_misc_0) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt___crit_edge73_misc_0_reg"); $finish; end
end
/* xmlXPathCmpNodesExt: %._crit_edge73*/
/*   %misc.0 = phi i32 [ 1, %52 ], [ 1, %32 ], [ 0, %30 ], [ 0, %8 ], [ 0, %5 ], [ 0, %.loopexit ], [ 0, %.loopexit.thread ], [ 0, %.loopexit.thread.thread ]*/
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_30_19) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_30_31 == 1'd0)))
begin
xmlXPathCmpNodesExt___crit_edge73_misc_0_reg <= xmlXPathCmpNodesExt___crit_edge73_misc_0;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt___crit_edge73_misc_0) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt___crit_edge73_misc_0_reg"); $finish; end
end
/* xmlXPathCmpNodesExt: %._crit_edge73*/
/*   %misc.0 = phi i32 [ 1, %52 ], [ 1, %32 ], [ 0, %30 ], [ 0, %8 ], [ 0, %5 ], [ 0, %.loopexit ], [ 0, %.loopexit.thread ], [ 0, %.loopexit.thread.thread ]*/
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_32_22) & (memory_controller_waitrequest == 1'd0)))
begin
xmlXPathCmpNodesExt___crit_edge73_misc_0_reg <= xmlXPathCmpNodesExt___crit_edge73_misc_0;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt___crit_edge73_misc_0) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt___crit_edge73_misc_0_reg"); $finish; end
end
/* xmlXPathCmpNodesExt: %._crit_edge73*/
/*   %misc.0 = phi i32 [ 1, %52 ], [ 1, %32 ], [ 0, %30 ], [ 0, %8 ], [ 0, %5 ], [ 0, %.loopexit ], [ 0, %.loopexit.thread ], [ 0, %.loopexit.thread.thread ]*/
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit_36) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt__loopexit_47 == 1'd1)))
begin
xmlXPathCmpNodesExt___crit_edge73_misc_0_reg <= xmlXPathCmpNodesExt___crit_edge73_misc_0;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt___crit_edge73_misc_0) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt___crit_edge73_misc_0_reg"); $finish; end
end
/* xmlXPathCmpNodesExt: %._crit_edge73*/
/*   %misc.0 = phi i32 [ 1, %52 ], [ 1, %32 ], [ 0, %30 ], [ 0, %8 ], [ 0, %5 ], [ 0, %.loopexit ], [ 0, %.loopexit.thread ], [ 0, %.loopexit.thread.thread ]*/
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit_thread_39) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt__loopexit_thread_48 == 1'd0)))
begin
xmlXPathCmpNodesExt___crit_edge73_misc_0_reg <= xmlXPathCmpNodesExt___crit_edge73_misc_0;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt___crit_edge73_misc_0) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt___crit_edge73_misc_0_reg"); $finish; end
end
/* xmlXPathCmpNodesExt: %._crit_edge73*/
/*   %misc.0 = phi i32 [ 1, %52 ], [ 1, %32 ], [ 0, %30 ], [ 0, %8 ], [ 0, %5 ], [ 0, %.loopexit ], [ 0, %.loopexit.thread ], [ 0, %.loopexit.thread.thread ]*/
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit_thread_thread_43) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt__loopexit_thread_thread_51 == 1'd1)))
begin
xmlXPathCmpNodesExt___crit_edge73_misc_0_reg <= xmlXPathCmpNodesExt___crit_edge73_misc_0;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt___crit_edge73_misc_0) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt___crit_edge73_misc_0_reg"); $finish; end
end
/* xmlXPathCmpNodesExt: %._crit_edge73*/
/*   %misc.0 = phi i32 [ 1, %52 ], [ 1, %32 ], [ 0, %30 ], [ 0, %8 ], [ 0, %5 ], [ 0, %.loopexit ], [ 0, %.loopexit.thread ], [ 0, %.loopexit.thread.thread ]*/
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_52_44) & (memory_controller_waitrequest == 1'd0)))
begin
xmlXPathCmpNodesExt___crit_edge73_misc_0_reg <= xmlXPathCmpNodesExt___crit_edge73_misc_0;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt___crit_edge73_misc_0) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt___crit_edge73_misc_0_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %._crit_edge73*/
/*   %.2 = phi %struct.TYPE_4__* [ %.17812, %52 ], [ %34, %32 ], [ %node1, %30 ], [ %node1, %8 ], [ %node1, %5 ], [ %node1, %.loopexit ], [ %node1, %.loopexit.thread ], [ %node1, %.loopexit.thread.thread ]*/
if ((((((((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_5_5) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_5_7 != 32'd131)) & (xmlXPathCmpNodesExt_5_7 != 32'd134)) & (xmlXPathCmpNodesExt_5_7 != 32'd128)) & (xmlXPathCmpNodesExt_5_7 != 32'd133)) & (xmlXPathCmpNodesExt_5_7 != 32'd132)) & (xmlXPathCmpNodesExt_5_7 != 32'd129)) & (xmlXPathCmpNodesExt_5_7 != 32'd130)))
begin
xmlXPathCmpNodesExt___crit_edge73__2 = arg_node1;
end
/* xmlXPathCmpNodesExt: %._crit_edge73*/
/*   %.2 = phi %struct.TYPE_4__* [ %.17812, %52 ], [ %34, %32 ], [ %node1, %30 ], [ %node1, %8 ], [ %node1, %5 ], [ %node1, %.loopexit ], [ %node1, %.loopexit.thread ], [ %node1, %.loopexit.thread.thread ]*/
else if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_8_8) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_8_11 == 1'd0)))
begin
xmlXPathCmpNodesExt___crit_edge73__2 = arg_node1;
end
/* xmlXPathCmpNodesExt: %._crit_edge73*/
/*   %.2 = phi %struct.TYPE_4__* [ %.17812, %52 ], [ %34, %32 ], [ %node1, %30 ], [ %node1, %8 ], [ %node1, %5 ], [ %node1, %.loopexit ], [ %node1, %.loopexit.thread ], [ %node1, %.loopexit.thread.thread ]*/
else if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_30_19) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_30_31 == 1'd0)))
begin
xmlXPathCmpNodesExt___crit_edge73__2 = arg_node1;
end
/* xmlXPathCmpNodesExt: %._crit_edge73*/
/*   %.2 = phi %struct.TYPE_4__* [ %.17812, %52 ], [ %34, %32 ], [ %node1, %30 ], [ %node1, %8 ], [ %node1, %5 ], [ %node1, %.loopexit ], [ %node1, %.loopexit.thread ], [ %node1, %.loopexit.thread.thread ]*/
else if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_32_22) & (memory_controller_waitrequest == 1'd0)))
begin
xmlXPathCmpNodesExt___crit_edge73__2 = xmlXPathCmpNodesExt_32_34;
end
/* xmlXPathCmpNodesExt: %._crit_edge73*/
/*   %.2 = phi %struct.TYPE_4__* [ %.17812, %52 ], [ %34, %32 ], [ %node1, %30 ], [ %node1, %8 ], [ %node1, %5 ], [ %node1, %.loopexit ], [ %node1, %.loopexit.thread ], [ %node1, %.loopexit.thread.thread ]*/
else if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit_36) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt__loopexit_47 == 1'd1)))
begin
xmlXPathCmpNodesExt___crit_edge73__2 = arg_node1;
end
/* xmlXPathCmpNodesExt: %._crit_edge73*/
/*   %.2 = phi %struct.TYPE_4__* [ %.17812, %52 ], [ %34, %32 ], [ %node1, %30 ], [ %node1, %8 ], [ %node1, %5 ], [ %node1, %.loopexit ], [ %node1, %.loopexit.thread ], [ %node1, %.loopexit.thread.thread ]*/
else if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit_thread_39) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt__loopexit_thread_48 == 1'd0)))
begin
xmlXPathCmpNodesExt___crit_edge73__2 = arg_node1;
end
/* xmlXPathCmpNodesExt: %._crit_edge73*/
/*   %.2 = phi %struct.TYPE_4__* [ %.17812, %52 ], [ %34, %32 ], [ %node1, %30 ], [ %node1, %8 ], [ %node1, %5 ], [ %node1, %.loopexit ], [ %node1, %.loopexit.thread ], [ %node1, %.loopexit.thread.thread ]*/
else if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit_thread_thread_43) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt__loopexit_thread_thread_51 == 1'd1)))
begin
xmlXPathCmpNodesExt___crit_edge73__2 = arg_node1;
end
/* xmlXPathCmpNodesExt: %._crit_edge73*/
/*   %.2 = phi %struct.TYPE_4__* [ %.17812, %52 ], [ %34, %32 ], [ %node1, %30 ], [ %node1, %8 ], [ %node1, %5 ], [ %node1, %.loopexit ], [ %node1, %.loopexit.thread ], [ %node1, %.loopexit.thread.thread ]*/
else /* if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_52_44) & (memory_controller_waitrequest == 1'd0))) */
begin
xmlXPathCmpNodesExt___crit_edge73__2 = xmlXPathCmpNodesExt__loopexit_thread_thread__17812_reg;
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %._crit_edge73*/
/*   %.2 = phi %struct.TYPE_4__* [ %.17812, %52 ], [ %34, %32 ], [ %node1, %30 ], [ %node1, %8 ], [ %node1, %5 ], [ %node1, %.loopexit ], [ %node1, %.loopexit.thread ], [ %node1, %.loopexit.thread.thread ]*/
if ((((((((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_5_5) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_5_7 != 32'd131)) & (xmlXPathCmpNodesExt_5_7 != 32'd134)) & (xmlXPathCmpNodesExt_5_7 != 32'd128)) & (xmlXPathCmpNodesExt_5_7 != 32'd133)) & (xmlXPathCmpNodesExt_5_7 != 32'd132)) & (xmlXPathCmpNodesExt_5_7 != 32'd129)) & (xmlXPathCmpNodesExt_5_7 != 32'd130)))
begin
xmlXPathCmpNodesExt___crit_edge73__2_reg <= xmlXPathCmpNodesExt___crit_edge73__2;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt___crit_edge73__2) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt___crit_edge73__2_reg"); $finish; end
end
/* xmlXPathCmpNodesExt: %._crit_edge73*/
/*   %.2 = phi %struct.TYPE_4__* [ %.17812, %52 ], [ %34, %32 ], [ %node1, %30 ], [ %node1, %8 ], [ %node1, %5 ], [ %node1, %.loopexit ], [ %node1, %.loopexit.thread ], [ %node1, %.loopexit.thread.thread ]*/
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_8_8) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_8_11 == 1'd0)))
begin
xmlXPathCmpNodesExt___crit_edge73__2_reg <= xmlXPathCmpNodesExt___crit_edge73__2;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt___crit_edge73__2) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt___crit_edge73__2_reg"); $finish; end
end
/* xmlXPathCmpNodesExt: %._crit_edge73*/
/*   %.2 = phi %struct.TYPE_4__* [ %.17812, %52 ], [ %34, %32 ], [ %node1, %30 ], [ %node1, %8 ], [ %node1, %5 ], [ %node1, %.loopexit ], [ %node1, %.loopexit.thread ], [ %node1, %.loopexit.thread.thread ]*/
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_30_19) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_30_31 == 1'd0)))
begin
xmlXPathCmpNodesExt___crit_edge73__2_reg <= xmlXPathCmpNodesExt___crit_edge73__2;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt___crit_edge73__2) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt___crit_edge73__2_reg"); $finish; end
end
/* xmlXPathCmpNodesExt: %._crit_edge73*/
/*   %.2 = phi %struct.TYPE_4__* [ %.17812, %52 ], [ %34, %32 ], [ %node1, %30 ], [ %node1, %8 ], [ %node1, %5 ], [ %node1, %.loopexit ], [ %node1, %.loopexit.thread ], [ %node1, %.loopexit.thread.thread ]*/
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_32_22) & (memory_controller_waitrequest == 1'd0)))
begin
xmlXPathCmpNodesExt___crit_edge73__2_reg <= xmlXPathCmpNodesExt___crit_edge73__2;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt___crit_edge73__2) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt___crit_edge73__2_reg"); $finish; end
end
/* xmlXPathCmpNodesExt: %._crit_edge73*/
/*   %.2 = phi %struct.TYPE_4__* [ %.17812, %52 ], [ %34, %32 ], [ %node1, %30 ], [ %node1, %8 ], [ %node1, %5 ], [ %node1, %.loopexit ], [ %node1, %.loopexit.thread ], [ %node1, %.loopexit.thread.thread ]*/
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit_36) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt__loopexit_47 == 1'd1)))
begin
xmlXPathCmpNodesExt___crit_edge73__2_reg <= xmlXPathCmpNodesExt___crit_edge73__2;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt___crit_edge73__2) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt___crit_edge73__2_reg"); $finish; end
end
/* xmlXPathCmpNodesExt: %._crit_edge73*/
/*   %.2 = phi %struct.TYPE_4__* [ %.17812, %52 ], [ %34, %32 ], [ %node1, %30 ], [ %node1, %8 ], [ %node1, %5 ], [ %node1, %.loopexit ], [ %node1, %.loopexit.thread ], [ %node1, %.loopexit.thread.thread ]*/
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit_thread_39) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt__loopexit_thread_48 == 1'd0)))
begin
xmlXPathCmpNodesExt___crit_edge73__2_reg <= xmlXPathCmpNodesExt___crit_edge73__2;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt___crit_edge73__2) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt___crit_edge73__2_reg"); $finish; end
end
/* xmlXPathCmpNodesExt: %._crit_edge73*/
/*   %.2 = phi %struct.TYPE_4__* [ %.17812, %52 ], [ %34, %32 ], [ %node1, %30 ], [ %node1, %8 ], [ %node1, %5 ], [ %node1, %.loopexit ], [ %node1, %.loopexit.thread ], [ %node1, %.loopexit.thread.thread ]*/
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit_thread_thread_43) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt__loopexit_thread_thread_51 == 1'd1)))
begin
xmlXPathCmpNodesExt___crit_edge73__2_reg <= xmlXPathCmpNodesExt___crit_edge73__2;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt___crit_edge73__2) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt___crit_edge73__2_reg"); $finish; end
end
/* xmlXPathCmpNodesExt: %._crit_edge73*/
/*   %.2 = phi %struct.TYPE_4__* [ %.17812, %52 ], [ %34, %32 ], [ %node1, %30 ], [ %node1, %8 ], [ %node1, %5 ], [ %node1, %.loopexit ], [ %node1, %.loopexit.thread ], [ %node1, %.loopexit.thread.thread ]*/
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_52_44) & (memory_controller_waitrequest == 1'd0)))
begin
xmlXPathCmpNodesExt___crit_edge73__2_reg <= xmlXPathCmpNodesExt___crit_edge73__2;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt___crit_edge73__2) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt___crit_edge73__2_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %._crit_edge73*/
/*   %53 = getelementptr inbounds %struct.TYPE_4__* %node2, i32 0, i32 0*/
begin
xmlXPathCmpNodesExt___crit_edge73_53 = arg_node2;
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %._crit_edge73*/
/*   %53 = getelementptr inbounds %struct.TYPE_4__* %node2, i32 0, i32 0*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB___crit_edge73_45))
begin
xmlXPathCmpNodesExt___crit_edge73_53_reg <= xmlXPathCmpNodesExt___crit_edge73_53;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt___crit_edge73_53) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt___crit_edge73_53_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %._crit_edge73*/
/*   %54 = load i32* %53, align 4, !tbaa !0*/
begin
xmlXPathCmpNodesExt___crit_edge73_54 = memory_controller_out_b[31:0];
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %._crit_edge73*/
/*   %54 = load i32* %53, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB___crit_edge73_47))
begin
xmlXPathCmpNodesExt___crit_edge73_54_reg <= xmlXPathCmpNodesExt___crit_edge73_54;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt___crit_edge73_54) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt___crit_edge73_54_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %55*/
/*   %56 = getelementptr inbounds %struct.TYPE_4__* %node2, i32 0, i32 5*/
begin
xmlXPathCmpNodesExt_55_56 = (arg_node2 + 20);
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %55*/
/*   %56 = getelementptr inbounds %struct.TYPE_4__* %node2, i32 0, i32 5*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_55_48))
begin
xmlXPathCmpNodesExt_55_56_reg <= xmlXPathCmpNodesExt_55_56;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt_55_56) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt_55_56_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %55*/
/*   %57 = load %struct.TYPE_4__** %56, align 4, !tbaa !3*/
begin
xmlXPathCmpNodesExt_55_57 = memory_controller_out_a[`MEMORY_CONTROLLER_ADDR_SIZE-1:0];
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %55*/
/*   %57 = load %struct.TYPE_4__** %56, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_55_50))
begin
xmlXPathCmpNodesExt_55_57_reg <= xmlXPathCmpNodesExt_55_57;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt_55_57) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt_55_57_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %58*/
/*   %59 = getelementptr inbounds %struct.TYPE_4__* %node2, i32 0, i32 4*/
begin
xmlXPathCmpNodesExt_58_59 = (arg_node2 + 16);
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %58*/
/*   %59 = getelementptr inbounds %struct.TYPE_4__* %node2, i32 0, i32 4*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_58_51))
begin
xmlXPathCmpNodesExt_58_59_reg <= xmlXPathCmpNodesExt_58_59;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt_58_59) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt_58_59_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %58*/
/*   %60 = load %struct.TYPE_4__** %59, align 4, !tbaa !3*/
begin
xmlXPathCmpNodesExt_58_60 = memory_controller_out_b[`MEMORY_CONTROLLER_ADDR_SIZE-1:0];
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %58*/
/*   %60 = load %struct.TYPE_4__** %59, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_58_53))
begin
xmlXPathCmpNodesExt_58_60_reg <= xmlXPathCmpNodesExt_58_60;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt_58_60) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt_58_60_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %58*/
/*   %61 = icmp eq %struct.TYPE_4__* %60, null*/
begin
xmlXPathCmpNodesExt_58_61 = (xmlXPathCmpNodesExt_58_60 == 0);
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %58*/
/*   %61 = icmp eq %struct.TYPE_4__* %60, null*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_58_53))
begin
xmlXPathCmpNodesExt_58_61_reg <= xmlXPathCmpNodesExt_58_61;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt_58_61) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt_58_61_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %.preheader17*/
/*   %62 = phi %struct.TYPE_4__* [ %68, %66 ], [ %60, %.preheader17.preheader ]*/
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader17_preheader_54) & (memory_controller_waitrequest == 1'd0)))
begin
xmlXPathCmpNodesExt__preheader17_62 = xmlXPathCmpNodesExt_58_60_reg;
end
/* xmlXPathCmpNodesExt: %.preheader17*/
/*   %62 = phi %struct.TYPE_4__* [ %68, %66 ], [ %60, %.preheader17.preheader ]*/
else /* if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_66_60) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_66_69 == 1'd0))) */
begin
xmlXPathCmpNodesExt__preheader17_62 = xmlXPathCmpNodesExt_66_68;
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %.preheader17*/
/*   %62 = phi %struct.TYPE_4__* [ %68, %66 ], [ %60, %.preheader17.preheader ]*/
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader17_preheader_54) & (memory_controller_waitrequest == 1'd0)))
begin
xmlXPathCmpNodesExt__preheader17_62_reg <= xmlXPathCmpNodesExt__preheader17_62;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt__preheader17_62) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt__preheader17_62_reg"); $finish; end
end
/* xmlXPathCmpNodesExt: %.preheader17*/
/*   %62 = phi %struct.TYPE_4__* [ %68, %66 ], [ %60, %.preheader17.preheader ]*/
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_66_60) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_66_69 == 1'd0)))
begin
xmlXPathCmpNodesExt__preheader17_62_reg <= xmlXPathCmpNodesExt__preheader17_62;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt__preheader17_62) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt__preheader17_62_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %.preheader17*/
/*   %63 = getelementptr inbounds %struct.TYPE_4__* %62, i32 0, i32 0*/
begin
xmlXPathCmpNodesExt__preheader17_63 = xmlXPathCmpNodesExt__preheader17_62_reg;
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %.preheader17*/
/*   %63 = getelementptr inbounds %struct.TYPE_4__* %62, i32 0, i32 0*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader17_55))
begin
xmlXPathCmpNodesExt__preheader17_63_reg <= xmlXPathCmpNodesExt__preheader17_63;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt__preheader17_63) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt__preheader17_63_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %.preheader17*/
/*   %64 = load i32* %63, align 4, !tbaa !0*/
begin
xmlXPathCmpNodesExt__preheader17_64 = memory_controller_out_a[31:0];
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %.preheader17*/
/*   %64 = load i32* %63, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader17_57))
begin
xmlXPathCmpNodesExt__preheader17_64_reg <= xmlXPathCmpNodesExt__preheader17_64;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt__preheader17_64) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt__preheader17_64_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %.preheader17*/
/*   %65 = icmp eq i32 %64, 131*/
begin
xmlXPathCmpNodesExt__preheader17_65 = (xmlXPathCmpNodesExt__preheader17_64 == 32'd131);
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %.preheader17*/
/*   %65 = icmp eq i32 %64, 131*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader17_57))
begin
xmlXPathCmpNodesExt__preheader17_65_reg <= xmlXPathCmpNodesExt__preheader17_65;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt__preheader17_65) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt__preheader17_65_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %66*/
/*   %67 = getelementptr inbounds %struct.TYPE_4__* %62, i32 0, i32 4*/
begin
xmlXPathCmpNodesExt_66_67 = (xmlXPathCmpNodesExt__preheader17_62_reg + 16);
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %66*/
/*   %67 = getelementptr inbounds %struct.TYPE_4__* %62, i32 0, i32 4*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_66_58))
begin
xmlXPathCmpNodesExt_66_67_reg <= xmlXPathCmpNodesExt_66_67;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt_66_67) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt_66_67_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %66*/
/*   %68 = load %struct.TYPE_4__** %67, align 4, !tbaa !3*/
begin
xmlXPathCmpNodesExt_66_68 = memory_controller_out_b[`MEMORY_CONTROLLER_ADDR_SIZE-1:0];
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %66*/
/*   %68 = load %struct.TYPE_4__** %67, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_66_60))
begin
xmlXPathCmpNodesExt_66_68_reg <= xmlXPathCmpNodesExt_66_68;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt_66_68) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt_66_68_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %66*/
/*   %69 = icmp eq %struct.TYPE_4__* %68, null*/
begin
xmlXPathCmpNodesExt_66_69 = (xmlXPathCmpNodesExt_66_68 == 0);
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %66*/
/*   %69 = icmp eq %struct.TYPE_4__* %68, null*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_66_60))
begin
xmlXPathCmpNodesExt_66_69_reg <= xmlXPathCmpNodesExt_66_69;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt_66_69) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt_66_69_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %.loopexit18*/
/*   %.pn1 = phi %struct.TYPE_4__* [ %node2, %58 ], [ %62, %.loopexit18.loopexit ]*/
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_58_53) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_58_61 == 1'd1)))
begin
xmlXPathCmpNodesExt__loopexit18__pn1 = arg_node2;
end
/* xmlXPathCmpNodesExt: %.loopexit18*/
/*   %.pn1 = phi %struct.TYPE_4__* [ %node2, %58 ], [ %62, %.loopexit18.loopexit ]*/
else /* if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit18_loopexit_61) & (memory_controller_waitrequest == 1'd0))) */
begin
xmlXPathCmpNodesExt__loopexit18__pn1 = xmlXPathCmpNodesExt__preheader17_62_reg;
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %.loopexit18*/
/*   %.pn1 = phi %struct.TYPE_4__* [ %node2, %58 ], [ %62, %.loopexit18.loopexit ]*/
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_58_53) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_58_61 == 1'd1)))
begin
xmlXPathCmpNodesExt__loopexit18__pn1_reg <= xmlXPathCmpNodesExt__loopexit18__pn1;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt__loopexit18__pn1) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt__loopexit18__pn1_reg"); $finish; end
end
/* xmlXPathCmpNodesExt: %.loopexit18*/
/*   %.pn1 = phi %struct.TYPE_4__* [ %node2, %58 ], [ %62, %.loopexit18.loopexit ]*/
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit18_loopexit_61) & (memory_controller_waitrequest == 1'd0)))
begin
xmlXPathCmpNodesExt__loopexit18__pn1_reg <= xmlXPathCmpNodesExt__loopexit18__pn1;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt__loopexit18__pn1) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt__loopexit18__pn1_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %.loopexit18*/
/*   %.13.in = getelementptr inbounds %struct.TYPE_4__* %.pn1, i32 0, i32 5*/
begin
xmlXPathCmpNodesExt__loopexit18__13_in = (xmlXPathCmpNodesExt__loopexit18__pn1_reg + 20);
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %.loopexit18*/
/*   %.13.in = getelementptr inbounds %struct.TYPE_4__* %.pn1, i32 0, i32 5*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit18_62))
begin
xmlXPathCmpNodesExt__loopexit18__13_in_reg <= xmlXPathCmpNodesExt__loopexit18__13_in;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt__loopexit18__13_in) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt__loopexit18__13_in_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %.loopexit18*/
/*   %.13 = load %struct.TYPE_4__** %.13.in, align 4*/
begin
xmlXPathCmpNodesExt__loopexit18__13 = memory_controller_out_b[`MEMORY_CONTROLLER_ADDR_SIZE-1:0];
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %.loopexit18*/
/*   %.13 = load %struct.TYPE_4__** %.13.in, align 4*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit18_64))
begin
xmlXPathCmpNodesExt__loopexit18__13_reg <= xmlXPathCmpNodesExt__loopexit18__13;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt__loopexit18__13) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt__loopexit18__13_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %.loopexit18*/
/*   %70 = icmp eq %struct.TYPE_4__* %.13, null*/
begin
xmlXPathCmpNodesExt__loopexit18_70 = (xmlXPathCmpNodesExt__loopexit18__13 == 0);
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %.loopexit18*/
/*   %70 = icmp eq %struct.TYPE_4__* %.13, null*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit18_64))
begin
xmlXPathCmpNodesExt__loopexit18_70_reg <= xmlXPathCmpNodesExt__loopexit18_70;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt__loopexit18_70) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt__loopexit18_70_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %.loopexit18.thread*/
/*   %.phi.trans.insert = getelementptr inbounds %struct.TYPE_4__* %.13, i32 0, i32 0*/
begin
xmlXPathCmpNodesExt__loopexit18_thread__phi_trans_insert = xmlXPathCmpNodesExt__loopexit18__13_reg;
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %.loopexit18.thread*/
/*   %.phi.trans.insert = getelementptr inbounds %struct.TYPE_4__* %.13, i32 0, i32 0*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit18_thread_65))
begin
xmlXPathCmpNodesExt__loopexit18_thread__phi_trans_insert_reg <= xmlXPathCmpNodesExt__loopexit18_thread__phi_trans_insert;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt__loopexit18_thread__phi_trans_insert) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt__loopexit18_thread__phi_trans_insert_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %.loopexit18.thread*/
/*   %.pre = load i32* %.phi.trans.insert, align 4, !tbaa !0*/
begin
xmlXPathCmpNodesExt__loopexit18_thread__pre = memory_controller_out_a[31:0];
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %.loopexit18.thread*/
/*   %.pre = load i32* %.phi.trans.insert, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit18_thread_67))
begin
xmlXPathCmpNodesExt__loopexit18_thread__pre_reg <= xmlXPathCmpNodesExt__loopexit18_thread__pre;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt__loopexit18_thread__pre) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt__loopexit18_thread__pre_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %.loopexit18.thread*/
/*   %71 = icmp eq i32 %.pre, 131*/
begin
xmlXPathCmpNodesExt__loopexit18_thread_71 = (xmlXPathCmpNodesExt__loopexit18_thread__pre == 32'd131);
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %.loopexit18.thread*/
/*   %71 = icmp eq i32 %.pre, 131*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit18_thread_67))
begin
xmlXPathCmpNodesExt__loopexit18_thread_71_reg <= xmlXPathCmpNodesExt__loopexit18_thread_71;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt__loopexit18_thread_71) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt__loopexit18_thread_71_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %.loopexit18.thread.thread*/
/*   %precedence2.07915 = phi i32 [ 2, %.loopexit18.thread ], [ 3, %.loopexit18.thread.thread.loopexit ]*/
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit18_thread_67) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt__loopexit18_thread_71 == 1'd1)))
begin
xmlXPathCmpNodesExt__loopexit18_thread_thread_precedence2_07915 = 32'd2;
end
/* xmlXPathCmpNodesExt: %.loopexit18.thread.thread*/
/*   %precedence2.07915 = phi i32 [ 2, %.loopexit18.thread ], [ 3, %.loopexit18.thread.thread.loopexit ]*/
else /* if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit18_thread_thread_loopexit_68) & (memory_controller_waitrequest == 1'd0))) */
begin
xmlXPathCmpNodesExt__loopexit18_thread_thread_precedence2_07915 = 32'd3;
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %.loopexit18.thread.thread*/
/*   %precedence2.07915 = phi i32 [ 2, %.loopexit18.thread ], [ 3, %.loopexit18.thread.thread.loopexit ]*/
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit18_thread_67) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt__loopexit18_thread_71 == 1'd1)))
begin
xmlXPathCmpNodesExt__loopexit18_thread_thread_precedence2_07915_reg <= xmlXPathCmpNodesExt__loopexit18_thread_thread_precedence2_07915;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt__loopexit18_thread_thread_precedence2_07915) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt__loopexit18_thread_thread_precedence2_07915_reg"); $finish; end
end
/* xmlXPathCmpNodesExt: %.loopexit18.thread.thread*/
/*   %precedence2.07915 = phi i32 [ 2, %.loopexit18.thread ], [ 3, %.loopexit18.thread.thread.loopexit ]*/
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit18_thread_thread_loopexit_68) & (memory_controller_waitrequest == 1'd0)))
begin
xmlXPathCmpNodesExt__loopexit18_thread_thread_precedence2_07915_reg <= xmlXPathCmpNodesExt__loopexit18_thread_thread_precedence2_07915;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt__loopexit18_thread_thread_precedence2_07915) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt__loopexit18_thread_thread_precedence2_07915_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %.loopexit18.thread.thread*/
/*   %.138014 = phi %struct.TYPE_4__* [ %.13, %.loopexit18.thread ], [ %62, %.loopexit18.thread.thread.loopexit ]*/
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit18_thread_67) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt__loopexit18_thread_71 == 1'd1)))
begin
xmlXPathCmpNodesExt__loopexit18_thread_thread__138014 = xmlXPathCmpNodesExt__loopexit18__13_reg;
end
/* xmlXPathCmpNodesExt: %.loopexit18.thread.thread*/
/*   %.138014 = phi %struct.TYPE_4__* [ %.13, %.loopexit18.thread ], [ %62, %.loopexit18.thread.thread.loopexit ]*/
else /* if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit18_thread_thread_loopexit_68) & (memory_controller_waitrequest == 1'd0))) */
begin
xmlXPathCmpNodesExt__loopexit18_thread_thread__138014 = xmlXPathCmpNodesExt__preheader17_62_reg;
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %.loopexit18.thread.thread*/
/*   %.138014 = phi %struct.TYPE_4__* [ %.13, %.loopexit18.thread ], [ %62, %.loopexit18.thread.thread.loopexit ]*/
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit18_thread_67) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt__loopexit18_thread_71 == 1'd1)))
begin
xmlXPathCmpNodesExt__loopexit18_thread_thread__138014_reg <= xmlXPathCmpNodesExt__loopexit18_thread_thread__138014;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt__loopexit18_thread_thread__138014) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt__loopexit18_thread_thread__138014_reg"); $finish; end
end
/* xmlXPathCmpNodesExt: %.loopexit18.thread.thread*/
/*   %.138014 = phi %struct.TYPE_4__* [ %.13, %.loopexit18.thread ], [ %62, %.loopexit18.thread.thread.loopexit ]*/
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit18_thread_thread_loopexit_68) & (memory_controller_waitrequest == 1'd0)))
begin
xmlXPathCmpNodesExt__loopexit18_thread_thread__138014_reg <= xmlXPathCmpNodesExt__loopexit18_thread_thread__138014;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt__loopexit18_thread_thread__138014) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt__loopexit18_thread_thread__138014_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %.loopexit18.thread.thread*/
/*   %72 = getelementptr inbounds %struct.TYPE_4__* %.138014, i32 0, i32 1*/
begin
xmlXPathCmpNodesExt__loopexit18_thread_thread_72 = (xmlXPathCmpNodesExt__loopexit18_thread_thread__138014_reg + 4);
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %.loopexit18.thread.thread*/
/*   %72 = getelementptr inbounds %struct.TYPE_4__* %.138014, i32 0, i32 1*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit18_thread_thread_69))
begin
xmlXPathCmpNodesExt__loopexit18_thread_thread_72_reg <= xmlXPathCmpNodesExt__loopexit18_thread_thread_72;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt__loopexit18_thread_thread_72) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt__loopexit18_thread_thread_72_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %.loopexit18.thread.thread*/
/*   %73 = load i32* %72, align 4, !tbaa !0*/
begin
xmlXPathCmpNodesExt__loopexit18_thread_thread_73 = memory_controller_out_a[31:0];
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %.loopexit18.thread.thread*/
/*   %73 = load i32* %72, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit18_thread_thread_71))
begin
xmlXPathCmpNodesExt__loopexit18_thread_thread_73_reg <= xmlXPathCmpNodesExt__loopexit18_thread_thread_73;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt__loopexit18_thread_thread_73) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt__loopexit18_thread_thread_73_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %.loopexit18.thread.thread*/
/*   %74 = icmp sgt i32 %73, -1*/
begin
xmlXPathCmpNodesExt__loopexit18_thread_thread_74 = ($signed(xmlXPathCmpNodesExt__loopexit18_thread_thread_73) > $signed(-32'd1));
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %.loopexit18.thread.thread*/
/*   %74 = icmp sgt i32 %73, -1*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit18_thread_thread_71))
begin
xmlXPathCmpNodesExt__loopexit18_thread_thread_74_reg <= xmlXPathCmpNodesExt__loopexit18_thread_thread_74;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt__loopexit18_thread_thread_74) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt__loopexit18_thread_thread_74_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %75*/
/*   %miscNode2.0 = phi %struct.TYPE_4__* [ null, %._crit_edge73 ], [ %node2, %.loopexit18.thread ], [ %node2, %.loopexit18.thread.thread ], [ %node2, %.loopexit18 ]*/
if (((((((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB___crit_edge73_47) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt___crit_edge73_54 != 32'd130)) & (xmlXPathCmpNodesExt___crit_edge73_54 != 32'd134)) & (xmlXPathCmpNodesExt___crit_edge73_54 != 32'd128)) & (xmlXPathCmpNodesExt___crit_edge73_54 != 32'd133)) & (xmlXPathCmpNodesExt___crit_edge73_54 != 32'd132)) & (xmlXPathCmpNodesExt___crit_edge73_54 != 32'd129)))
begin
xmlXPathCmpNodesExt_75_miscNode2_0 = 0;
end
/* xmlXPathCmpNodesExt: %75*/
/*   %miscNode2.0 = phi %struct.TYPE_4__* [ null, %._crit_edge73 ], [ %node2, %.loopexit18.thread ], [ %node2, %.loopexit18.thread.thread ], [ %node2, %.loopexit18 ]*/
else if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit18_64) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt__loopexit18_70 == 1'd1)))
begin
xmlXPathCmpNodesExt_75_miscNode2_0 = arg_node2;
end
/* xmlXPathCmpNodesExt: %75*/
/*   %miscNode2.0 = phi %struct.TYPE_4__* [ null, %._crit_edge73 ], [ %node2, %.loopexit18.thread ], [ %node2, %.loopexit18.thread.thread ], [ %node2, %.loopexit18 ]*/
else if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit18_thread_67) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt__loopexit18_thread_71 == 1'd0)))
begin
xmlXPathCmpNodesExt_75_miscNode2_0 = arg_node2;
end
/* xmlXPathCmpNodesExt: %75*/
/*   %miscNode2.0 = phi %struct.TYPE_4__* [ null, %._crit_edge73 ], [ %node2, %.loopexit18.thread ], [ %node2, %.loopexit18.thread.thread ], [ %node2, %.loopexit18 ]*/
else /* if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit18_thread_thread_71) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt__loopexit18_thread_thread_74 == 1'd1))) */
begin
xmlXPathCmpNodesExt_75_miscNode2_0 = arg_node2;
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %75*/
/*   %miscNode2.0 = phi %struct.TYPE_4__* [ null, %._crit_edge73 ], [ %node2, %.loopexit18.thread ], [ %node2, %.loopexit18.thread.thread ], [ %node2, %.loopexit18 ]*/
if (((((((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB___crit_edge73_47) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt___crit_edge73_54 != 32'd130)) & (xmlXPathCmpNodesExt___crit_edge73_54 != 32'd134)) & (xmlXPathCmpNodesExt___crit_edge73_54 != 32'd128)) & (xmlXPathCmpNodesExt___crit_edge73_54 != 32'd133)) & (xmlXPathCmpNodesExt___crit_edge73_54 != 32'd132)) & (xmlXPathCmpNodesExt___crit_edge73_54 != 32'd129)))
begin
xmlXPathCmpNodesExt_75_miscNode2_0_reg <= xmlXPathCmpNodesExt_75_miscNode2_0;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt_75_miscNode2_0) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt_75_miscNode2_0_reg"); $finish; end
end
/* xmlXPathCmpNodesExt: %75*/
/*   %miscNode2.0 = phi %struct.TYPE_4__* [ null, %._crit_edge73 ], [ %node2, %.loopexit18.thread ], [ %node2, %.loopexit18.thread.thread ], [ %node2, %.loopexit18 ]*/
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit18_64) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt__loopexit18_70 == 1'd1)))
begin
xmlXPathCmpNodesExt_75_miscNode2_0_reg <= xmlXPathCmpNodesExt_75_miscNode2_0;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt_75_miscNode2_0) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt_75_miscNode2_0_reg"); $finish; end
end
/* xmlXPathCmpNodesExt: %75*/
/*   %miscNode2.0 = phi %struct.TYPE_4__* [ null, %._crit_edge73 ], [ %node2, %.loopexit18.thread ], [ %node2, %.loopexit18.thread.thread ], [ %node2, %.loopexit18 ]*/
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit18_thread_67) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt__loopexit18_thread_71 == 1'd0)))
begin
xmlXPathCmpNodesExt_75_miscNode2_0_reg <= xmlXPathCmpNodesExt_75_miscNode2_0;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt_75_miscNode2_0) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt_75_miscNode2_0_reg"); $finish; end
end
/* xmlXPathCmpNodesExt: %75*/
/*   %miscNode2.0 = phi %struct.TYPE_4__* [ null, %._crit_edge73 ], [ %node2, %.loopexit18.thread ], [ %node2, %.loopexit18.thread.thread ], [ %node2, %.loopexit18 ]*/
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit18_thread_thread_71) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt__loopexit18_thread_thread_74 == 1'd1)))
begin
xmlXPathCmpNodesExt_75_miscNode2_0_reg <= xmlXPathCmpNodesExt_75_miscNode2_0;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt_75_miscNode2_0) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt_75_miscNode2_0_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %75*/
/*   %76 = icmp eq i32 %misc.0, 0*/
begin
xmlXPathCmpNodesExt_75_76 = (xmlXPathCmpNodesExt___crit_edge73_misc_0_reg == 32'd0);
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %75*/
/*   %76 = icmp eq i32 %misc.0, 0*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_75_72))
begin
xmlXPathCmpNodesExt_75_76_reg <= xmlXPathCmpNodesExt_75_76;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt_75_76) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt_75_76_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %.thread*/
/*   %.2413 = phi %struct.TYPE_4__* [ %node2, %75 ], [ %57, %55 ], [ %.138014, %.loopexit18.thread.thread ]*/
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_55_50) & (memory_controller_waitrequest == 1'd0)))
begin
xmlXPathCmpNodesExt__thread__2413 = xmlXPathCmpNodesExt_55_57;
end
/* xmlXPathCmpNodesExt: %.thread*/
/*   %.2413 = phi %struct.TYPE_4__* [ %node2, %75 ], [ %57, %55 ], [ %.138014, %.loopexit18.thread.thread ]*/
else if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit18_thread_thread_71) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt__loopexit18_thread_thread_74 == 1'd0)))
begin
xmlXPathCmpNodesExt__thread__2413 = xmlXPathCmpNodesExt__loopexit18_thread_thread__138014_reg;
end
/* xmlXPathCmpNodesExt: %.thread*/
/*   %.2413 = phi %struct.TYPE_4__* [ %node2, %75 ], [ %57, %55 ], [ %.138014, %.loopexit18.thread.thread ]*/
else /* if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_75_72) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_75_76 == 1'd0))) */
begin
xmlXPathCmpNodesExt__thread__2413 = arg_node2;
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %.thread*/
/*   %.2413 = phi %struct.TYPE_4__* [ %node2, %75 ], [ %57, %55 ], [ %.138014, %.loopexit18.thread.thread ]*/
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_55_50) & (memory_controller_waitrequest == 1'd0)))
begin
xmlXPathCmpNodesExt__thread__2413_reg <= xmlXPathCmpNodesExt__thread__2413;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt__thread__2413) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt__thread__2413_reg"); $finish; end
end
/* xmlXPathCmpNodesExt: %.thread*/
/*   %.2413 = phi %struct.TYPE_4__* [ %node2, %75 ], [ %57, %55 ], [ %.138014, %.loopexit18.thread.thread ]*/
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit18_thread_thread_71) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt__loopexit18_thread_thread_74 == 1'd0)))
begin
xmlXPathCmpNodesExt__thread__2413_reg <= xmlXPathCmpNodesExt__thread__2413;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt__thread__2413) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt__thread__2413_reg"); $finish; end
end
/* xmlXPathCmpNodesExt: %.thread*/
/*   %.2413 = phi %struct.TYPE_4__* [ %node2, %75 ], [ %57, %55 ], [ %.138014, %.loopexit18.thread.thread ]*/
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_75_72) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_75_76 == 1'd0)))
begin
xmlXPathCmpNodesExt__thread__2413_reg <= xmlXPathCmpNodesExt__thread__2413;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt__thread__2413) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt__thread__2413_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %.thread*/
/*   %precedence2.112 = phi i32 [ 0, %75 ], [ 1, %55 ], [ %precedence2.07915, %.loopexit18.thread.thread ]*/
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_55_50) & (memory_controller_waitrequest == 1'd0)))
begin
xmlXPathCmpNodesExt__thread_precedence2_112 = 32'd1;
end
/* xmlXPathCmpNodesExt: %.thread*/
/*   %precedence2.112 = phi i32 [ 0, %75 ], [ 1, %55 ], [ %precedence2.07915, %.loopexit18.thread.thread ]*/
else if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit18_thread_thread_71) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt__loopexit18_thread_thread_74 == 1'd0)))
begin
xmlXPathCmpNodesExt__thread_precedence2_112 = xmlXPathCmpNodesExt__loopexit18_thread_thread_precedence2_07915_reg;
end
/* xmlXPathCmpNodesExt: %.thread*/
/*   %precedence2.112 = phi i32 [ 0, %75 ], [ 1, %55 ], [ %precedence2.07915, %.loopexit18.thread.thread ]*/
else /* if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_75_72) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_75_76 == 1'd0))) */
begin
xmlXPathCmpNodesExt__thread_precedence2_112 = 32'd0;
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %.thread*/
/*   %precedence2.112 = phi i32 [ 0, %75 ], [ 1, %55 ], [ %precedence2.07915, %.loopexit18.thread.thread ]*/
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_55_50) & (memory_controller_waitrequest == 1'd0)))
begin
xmlXPathCmpNodesExt__thread_precedence2_112_reg <= xmlXPathCmpNodesExt__thread_precedence2_112;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt__thread_precedence2_112) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt__thread_precedence2_112_reg"); $finish; end
end
/* xmlXPathCmpNodesExt: %.thread*/
/*   %precedence2.112 = phi i32 [ 0, %75 ], [ 1, %55 ], [ %precedence2.07915, %.loopexit18.thread.thread ]*/
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit18_thread_thread_71) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt__loopexit18_thread_thread_74 == 1'd0)))
begin
xmlXPathCmpNodesExt__thread_precedence2_112_reg <= xmlXPathCmpNodesExt__thread_precedence2_112;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt__thread_precedence2_112) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt__thread_precedence2_112_reg"); $finish; end
end
/* xmlXPathCmpNodesExt: %.thread*/
/*   %precedence2.112 = phi i32 [ 0, %75 ], [ 1, %55 ], [ %precedence2.07915, %.loopexit18.thread.thread ]*/
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_75_72) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_75_76 == 1'd0)))
begin
xmlXPathCmpNodesExt__thread_precedence2_112_reg <= xmlXPathCmpNodesExt__thread_precedence2_112;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt__thread_precedence2_112) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt__thread_precedence2_112_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %.thread*/
/*   %miscNode2.011 = phi %struct.TYPE_4__* [ %miscNode2.0, %75 ], [ %node2, %55 ], [ %node2, %.loopexit18.thread.thread ]*/
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_55_50) & (memory_controller_waitrequest == 1'd0)))
begin
xmlXPathCmpNodesExt__thread_miscNode2_011 = arg_node2;
end
/* xmlXPathCmpNodesExt: %.thread*/
/*   %miscNode2.011 = phi %struct.TYPE_4__* [ %miscNode2.0, %75 ], [ %node2, %55 ], [ %node2, %.loopexit18.thread.thread ]*/
else if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit18_thread_thread_71) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt__loopexit18_thread_thread_74 == 1'd0)))
begin
xmlXPathCmpNodesExt__thread_miscNode2_011 = arg_node2;
end
/* xmlXPathCmpNodesExt: %.thread*/
/*   %miscNode2.011 = phi %struct.TYPE_4__* [ %miscNode2.0, %75 ], [ %node2, %55 ], [ %node2, %.loopexit18.thread.thread ]*/
else /* if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_75_72) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_75_76 == 1'd0))) */
begin
xmlXPathCmpNodesExt__thread_miscNode2_011 = xmlXPathCmpNodesExt_75_miscNode2_0_reg;
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %.thread*/
/*   %miscNode2.011 = phi %struct.TYPE_4__* [ %miscNode2.0, %75 ], [ %node2, %55 ], [ %node2, %.loopexit18.thread.thread ]*/
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_55_50) & (memory_controller_waitrequest == 1'd0)))
begin
xmlXPathCmpNodesExt__thread_miscNode2_011_reg <= xmlXPathCmpNodesExt__thread_miscNode2_011;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt__thread_miscNode2_011) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt__thread_miscNode2_011_reg"); $finish; end
end
/* xmlXPathCmpNodesExt: %.thread*/
/*   %miscNode2.011 = phi %struct.TYPE_4__* [ %miscNode2.0, %75 ], [ %node2, %55 ], [ %node2, %.loopexit18.thread.thread ]*/
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit18_thread_thread_71) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt__loopexit18_thread_thread_74 == 1'd0)))
begin
xmlXPathCmpNodesExt__thread_miscNode2_011_reg <= xmlXPathCmpNodesExt__thread_miscNode2_011;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt__thread_miscNode2_011) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt__thread_miscNode2_011_reg"); $finish; end
end
/* xmlXPathCmpNodesExt: %.thread*/
/*   %miscNode2.011 = phi %struct.TYPE_4__* [ %miscNode2.0, %75 ], [ %node2, %55 ], [ %node2, %.loopexit18.thread.thread ]*/
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_75_72) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_75_76 == 1'd0)))
begin
xmlXPathCmpNodesExt__thread_miscNode2_011_reg <= xmlXPathCmpNodesExt__thread_miscNode2_011;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt__thread_miscNode2_011) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt__thread_miscNode2_011_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %.thread*/
/*   %77 = icmp eq %struct.TYPE_4__* %.2, %.2413*/
begin
xmlXPathCmpNodesExt__thread_77 = (xmlXPathCmpNodesExt___crit_edge73__2_reg == xmlXPathCmpNodesExt__thread__2413_reg);
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %.thread*/
/*   %77 = icmp eq %struct.TYPE_4__* %.2, %.2413*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__thread_73))
begin
xmlXPathCmpNodesExt__thread_77_reg <= xmlXPathCmpNodesExt__thread_77;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt__thread_77) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt__thread_77_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %78*/
/*   %79 = icmp eq i32 %precedence1.1, %precedence2.112*/
begin
xmlXPathCmpNodesExt_78_79 = (xmlXPathCmpNodesExt___crit_edge73_precedence1_1_reg == xmlXPathCmpNodesExt__thread_precedence2_112_reg);
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %78*/
/*   %79 = icmp eq i32 %precedence1.1, %precedence2.112*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_78_74))
begin
xmlXPathCmpNodesExt_78_79_reg <= xmlXPathCmpNodesExt_78_79;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt_78_79) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt_78_79_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %.preheader27*/
/*   %miscNode2.0.pn = phi %struct.TYPE_4__* [ %cur.0, %83 ], [ %miscNode2.011, %.preheader27.preheader ]*/
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader27_preheader_75) & (memory_controller_waitrequest == 1'd0)))
begin
xmlXPathCmpNodesExt__preheader27_miscNode2_0_pn = xmlXPathCmpNodesExt__thread_miscNode2_011_reg;
end
/* xmlXPathCmpNodesExt: %.preheader27*/
/*   %miscNode2.0.pn = phi %struct.TYPE_4__* [ %cur.0, %83 ], [ %miscNode2.011, %.preheader27.preheader ]*/
else /* if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_83_82) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_83_86 == 1'd0))) */
begin
xmlXPathCmpNodesExt__preheader27_miscNode2_0_pn = xmlXPathCmpNodesExt__preheader27_cur_0_reg;
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %.preheader27*/
/*   %miscNode2.0.pn = phi %struct.TYPE_4__* [ %cur.0, %83 ], [ %miscNode2.011, %.preheader27.preheader ]*/
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader27_preheader_75) & (memory_controller_waitrequest == 1'd0)))
begin
xmlXPathCmpNodesExt__preheader27_miscNode2_0_pn_reg <= xmlXPathCmpNodesExt__preheader27_miscNode2_0_pn;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt__preheader27_miscNode2_0_pn) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt__preheader27_miscNode2_0_pn_reg"); $finish; end
end
/* xmlXPathCmpNodesExt: %.preheader27*/
/*   %miscNode2.0.pn = phi %struct.TYPE_4__* [ %cur.0, %83 ], [ %miscNode2.011, %.preheader27.preheader ]*/
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_83_82) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_83_86 == 1'd0)))
begin
xmlXPathCmpNodesExt__preheader27_miscNode2_0_pn_reg <= xmlXPathCmpNodesExt__preheader27_miscNode2_0_pn;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt__preheader27_miscNode2_0_pn) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt__preheader27_miscNode2_0_pn_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %.preheader27*/
/*   %cur.0.in = getelementptr inbounds %struct.TYPE_4__* %miscNode2.0.pn, i32 0, i32 4*/
begin
xmlXPathCmpNodesExt__preheader27_cur_0_in = (xmlXPathCmpNodesExt__preheader27_miscNode2_0_pn_reg + 16);
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %.preheader27*/
/*   %cur.0.in = getelementptr inbounds %struct.TYPE_4__* %miscNode2.0.pn, i32 0, i32 4*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader27_76))
begin
xmlXPathCmpNodesExt__preheader27_cur_0_in_reg <= xmlXPathCmpNodesExt__preheader27_cur_0_in;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt__preheader27_cur_0_in) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt__preheader27_cur_0_in_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %.preheader27*/
/*   %cur.0 = load %struct.TYPE_4__** %cur.0.in, align 4*/
begin
xmlXPathCmpNodesExt__preheader27_cur_0 = memory_controller_out_b[`MEMORY_CONTROLLER_ADDR_SIZE-1:0];
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %.preheader27*/
/*   %cur.0 = load %struct.TYPE_4__** %cur.0.in, align 4*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader27_78))
begin
xmlXPathCmpNodesExt__preheader27_cur_0_reg <= xmlXPathCmpNodesExt__preheader27_cur_0;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt__preheader27_cur_0) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt__preheader27_cur_0_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %.preheader27*/
/*   %80 = icmp eq %struct.TYPE_4__* %cur.0, null*/
begin
xmlXPathCmpNodesExt__preheader27_80 = (xmlXPathCmpNodesExt__preheader27_cur_0 == 0);
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %.preheader27*/
/*   %80 = icmp eq %struct.TYPE_4__* %cur.0, null*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader27_78))
begin
xmlXPathCmpNodesExt__preheader27_80_reg <= xmlXPathCmpNodesExt__preheader27_80;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt__preheader27_80) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt__preheader27_80_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %81*/
/*   %82 = icmp eq %struct.TYPE_4__* %cur.0, %miscNode1.0*/
begin
xmlXPathCmpNodesExt_81_82 = (xmlXPathCmpNodesExt__preheader27_cur_0_reg == xmlXPathCmpNodesExt___crit_edge73_miscNode1_0_reg);
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %81*/
/*   %82 = icmp eq %struct.TYPE_4__* %cur.0, %miscNode1.0*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_81_79))
begin
xmlXPathCmpNodesExt_81_82_reg <= xmlXPathCmpNodesExt_81_82;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt_81_82) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt_81_82_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %83*/
/*   %84 = getelementptr inbounds %struct.TYPE_4__* %cur.0, i32 0, i32 0*/
begin
xmlXPathCmpNodesExt_83_84 = xmlXPathCmpNodesExt__preheader27_cur_0_reg;
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %83*/
/*   %84 = getelementptr inbounds %struct.TYPE_4__* %cur.0, i32 0, i32 0*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_83_80))
begin
xmlXPathCmpNodesExt_83_84_reg <= xmlXPathCmpNodesExt_83_84;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt_83_84) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt_83_84_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %83*/
/*   %85 = load i32* %84, align 4, !tbaa !0*/
begin
xmlXPathCmpNodesExt_83_85 = memory_controller_out_a[31:0];
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %83*/
/*   %85 = load i32* %84, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_83_82))
begin
xmlXPathCmpNodesExt_83_85_reg <= xmlXPathCmpNodesExt_83_85;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt_83_85) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt_83_85_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %83*/
/*   %86 = icmp eq i32 %85, 131*/
begin
xmlXPathCmpNodesExt_83_86 = (xmlXPathCmpNodesExt_83_85 == 32'd131);
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %83*/
/*   %86 = icmp eq i32 %85, 131*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_83_82))
begin
xmlXPathCmpNodesExt_83_86_reg <= xmlXPathCmpNodesExt_83_86;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt_83_86) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt_83_86_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %87*/
/*   %88 = icmp slt i32 %precedence1.1, %precedence2.112*/
begin
xmlXPathCmpNodesExt_87_88 = ($signed(xmlXPathCmpNodesExt___crit_edge73_precedence1_1_reg) < $signed(xmlXPathCmpNodesExt__thread_precedence2_112_reg));
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %87*/
/*   %88 = icmp slt i32 %precedence1.1, %precedence2.112*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_87_83))
begin
xmlXPathCmpNodesExt_87_88_reg <= xmlXPathCmpNodesExt_87_88;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt_87_88) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt_87_88_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %87*/
/*   %. = select i1 %88, i32 1, i32 -1*/
begin
xmlXPathCmpNodesExt_87__ = (xmlXPathCmpNodesExt_87_88 ? 32'd1 : -32'd1);
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %87*/
/*   %. = select i1 %88, i32 1, i32 -1*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_87_83))
begin
xmlXPathCmpNodesExt_87___reg <= xmlXPathCmpNodesExt_87__;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt_87__) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt_87___reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %89*/
/*   %90 = icmp eq i32 %precedence2.112, 3*/
begin
xmlXPathCmpNodesExt_89_90 = (xmlXPathCmpNodesExt__thread_precedence2_112_reg == 32'd3);
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %89*/
/*   %90 = icmp eq i32 %precedence2.112, 3*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_89_84))
begin
xmlXPathCmpNodesExt_89_90_reg <= xmlXPathCmpNodesExt_89_90;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt_89_90) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt_89_90_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %89*/
/*   %91 = icmp sgt i32 %precedence1.1, 1*/
begin
xmlXPathCmpNodesExt_89_91 = ($signed(xmlXPathCmpNodesExt___crit_edge73_precedence1_1_reg) > $signed(32'd1));
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %89*/
/*   %91 = icmp sgt i32 %precedence1.1, 1*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_89_84))
begin
xmlXPathCmpNodesExt_89_91_reg <= xmlXPathCmpNodesExt_89_91;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt_89_91) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt_89_91_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %89*/
/*   %or.cond8 = and i1 %90, %91*/
begin
xmlXPathCmpNodesExt_89_or_cond8 = (xmlXPathCmpNodesExt_89_90 & xmlXPathCmpNodesExt_89_91);
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %89*/
/*   %or.cond8 = and i1 %90, %91*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_89_84))
begin
xmlXPathCmpNodesExt_89_or_cond8_reg <= xmlXPathCmpNodesExt_89_or_cond8;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt_89_or_cond8) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt_89_or_cond8_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %.preheader24*/
/*   %.2.pn = phi %struct.TYPE_4__* [ %cur.1, %93 ], [ %.2, %.preheader24.preheader ]*/
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader24_preheader_85) & (memory_controller_waitrequest == 1'd0)))
begin
xmlXPathCmpNodesExt__preheader24__2_pn = xmlXPathCmpNodesExt___crit_edge73__2_reg;
end
/* xmlXPathCmpNodesExt: %.preheader24*/
/*   %.2.pn = phi %struct.TYPE_4__* [ %cur.1, %93 ], [ %.2, %.preheader24.preheader ]*/
else /* if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_93_89) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_93_94 == 1'd0))) */
begin
xmlXPathCmpNodesExt__preheader24__2_pn = xmlXPathCmpNodesExt__preheader24_cur_1_reg;
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %.preheader24*/
/*   %.2.pn = phi %struct.TYPE_4__* [ %cur.1, %93 ], [ %.2, %.preheader24.preheader ]*/
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader24_preheader_85) & (memory_controller_waitrequest == 1'd0)))
begin
xmlXPathCmpNodesExt__preheader24__2_pn_reg <= xmlXPathCmpNodesExt__preheader24__2_pn;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt__preheader24__2_pn) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt__preheader24__2_pn_reg"); $finish; end
end
/* xmlXPathCmpNodesExt: %.preheader24*/
/*   %.2.pn = phi %struct.TYPE_4__* [ %cur.1, %93 ], [ %.2, %.preheader24.preheader ]*/
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_93_89) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_93_94 == 1'd0)))
begin
xmlXPathCmpNodesExt__preheader24__2_pn_reg <= xmlXPathCmpNodesExt__preheader24__2_pn;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt__preheader24__2_pn) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt__preheader24__2_pn_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %.preheader24*/
/*   %cur.1.in = getelementptr inbounds %struct.TYPE_4__* %.2.pn, i32 0, i32 5*/
begin
xmlXPathCmpNodesExt__preheader24_cur_1_in = (xmlXPathCmpNodesExt__preheader24__2_pn_reg + 20);
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %.preheader24*/
/*   %cur.1.in = getelementptr inbounds %struct.TYPE_4__* %.2.pn, i32 0, i32 5*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader24_86))
begin
xmlXPathCmpNodesExt__preheader24_cur_1_in_reg <= xmlXPathCmpNodesExt__preheader24_cur_1_in;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt__preheader24_cur_1_in) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt__preheader24_cur_1_in_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %.preheader24*/
/*   %cur.1 = load %struct.TYPE_4__** %cur.1.in, align 4*/
begin
xmlXPathCmpNodesExt__preheader24_cur_1 = memory_controller_out_b[`MEMORY_CONTROLLER_ADDR_SIZE-1:0];
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %.preheader24*/
/*   %cur.1 = load %struct.TYPE_4__** %cur.1.in, align 4*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader24_88))
begin
xmlXPathCmpNodesExt__preheader24_cur_1_reg <= xmlXPathCmpNodesExt__preheader24_cur_1;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt__preheader24_cur_1) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt__preheader24_cur_1_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %.preheader24*/
/*   %92 = icmp eq %struct.TYPE_4__* %cur.1, null*/
begin
xmlXPathCmpNodesExt__preheader24_92 = (xmlXPathCmpNodesExt__preheader24_cur_1 == 0);
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %.preheader24*/
/*   %92 = icmp eq %struct.TYPE_4__* %cur.1, null*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader24_88))
begin
xmlXPathCmpNodesExt__preheader24_92_reg <= xmlXPathCmpNodesExt__preheader24_92;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt__preheader24_92) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt__preheader24_92_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %93*/
/*   %94 = icmp eq %struct.TYPE_4__* %cur.1, %.2413*/
begin
xmlXPathCmpNodesExt_93_94 = (xmlXPathCmpNodesExt__preheader24_cur_1_reg == xmlXPathCmpNodesExt__thread__2413_reg);
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %93*/
/*   %94 = icmp eq %struct.TYPE_4__* %cur.1, %.2413*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_93_89))
begin
xmlXPathCmpNodesExt_93_94_reg <= xmlXPathCmpNodesExt_93_94;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt_93_94) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt_93_94_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %.loopexit25*/
/*   %95 = icmp eq i32 %precedence1.1, 3*/
begin
xmlXPathCmpNodesExt__loopexit25_95 = (xmlXPathCmpNodesExt___crit_edge73_precedence1_1_reg == 32'd3);
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %.loopexit25*/
/*   %95 = icmp eq i32 %precedence1.1, 3*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit25_91))
begin
xmlXPathCmpNodesExt__loopexit25_95_reg <= xmlXPathCmpNodesExt__loopexit25_95;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt__loopexit25_95) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt__loopexit25_95_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %.loopexit25*/
/*   %96 = icmp sgt i32 %precedence2.112, 1*/
begin
xmlXPathCmpNodesExt__loopexit25_96 = ($signed(xmlXPathCmpNodesExt__thread_precedence2_112_reg) > $signed(32'd1));
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %.loopexit25*/
/*   %96 = icmp sgt i32 %precedence2.112, 1*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit25_91))
begin
xmlXPathCmpNodesExt__loopexit25_96_reg <= xmlXPathCmpNodesExt__loopexit25_96;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt__loopexit25_96) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt__loopexit25_96_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %.loopexit25*/
/*   %or.cond9 = and i1 %95, %96*/
begin
xmlXPathCmpNodesExt__loopexit25_or_cond9 = (xmlXPathCmpNodesExt__loopexit25_95 & xmlXPathCmpNodesExt__loopexit25_96);
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %.loopexit25*/
/*   %or.cond9 = and i1 %95, %96*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit25_91))
begin
xmlXPathCmpNodesExt__loopexit25_or_cond9_reg <= xmlXPathCmpNodesExt__loopexit25_or_cond9;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt__loopexit25_or_cond9) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt__loopexit25_or_cond9_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %.preheader21*/
/*   %.24.pn = phi %struct.TYPE_4__* [ %cur.2, %98 ], [ %.2413, %.preheader21.preheader ]*/
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader21_preheader_92) & (memory_controller_waitrequest == 1'd0)))
begin
xmlXPathCmpNodesExt__preheader21__24_pn = xmlXPathCmpNodesExt__thread__2413_reg;
end
/* xmlXPathCmpNodesExt: %.preheader21*/
/*   %.24.pn = phi %struct.TYPE_4__* [ %cur.2, %98 ], [ %.2413, %.preheader21.preheader ]*/
else /* if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_98_96) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_98_99 == 1'd0))) */
begin
xmlXPathCmpNodesExt__preheader21__24_pn = xmlXPathCmpNodesExt__preheader21_cur_2_reg;
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %.preheader21*/
/*   %.24.pn = phi %struct.TYPE_4__* [ %cur.2, %98 ], [ %.2413, %.preheader21.preheader ]*/
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader21_preheader_92) & (memory_controller_waitrequest == 1'd0)))
begin
xmlXPathCmpNodesExt__preheader21__24_pn_reg <= xmlXPathCmpNodesExt__preheader21__24_pn;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt__preheader21__24_pn) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt__preheader21__24_pn_reg"); $finish; end
end
/* xmlXPathCmpNodesExt: %.preheader21*/
/*   %.24.pn = phi %struct.TYPE_4__* [ %cur.2, %98 ], [ %.2413, %.preheader21.preheader ]*/
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_98_96) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_98_99 == 1'd0)))
begin
xmlXPathCmpNodesExt__preheader21__24_pn_reg <= xmlXPathCmpNodesExt__preheader21__24_pn;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt__preheader21__24_pn) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt__preheader21__24_pn_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %.preheader21*/
/*   %cur.2.in = getelementptr inbounds %struct.TYPE_4__* %.24.pn, i32 0, i32 5*/
begin
xmlXPathCmpNodesExt__preheader21_cur_2_in = (xmlXPathCmpNodesExt__preheader21__24_pn_reg + 20);
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %.preheader21*/
/*   %cur.2.in = getelementptr inbounds %struct.TYPE_4__* %.24.pn, i32 0, i32 5*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader21_93))
begin
xmlXPathCmpNodesExt__preheader21_cur_2_in_reg <= xmlXPathCmpNodesExt__preheader21_cur_2_in;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt__preheader21_cur_2_in) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt__preheader21_cur_2_in_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %.preheader21*/
/*   %cur.2 = load %struct.TYPE_4__** %cur.2.in, align 4*/
begin
xmlXPathCmpNodesExt__preheader21_cur_2 = memory_controller_out_b[`MEMORY_CONTROLLER_ADDR_SIZE-1:0];
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %.preheader21*/
/*   %cur.2 = load %struct.TYPE_4__** %cur.2.in, align 4*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader21_95))
begin
xmlXPathCmpNodesExt__preheader21_cur_2_reg <= xmlXPathCmpNodesExt__preheader21_cur_2;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt__preheader21_cur_2) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt__preheader21_cur_2_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %.preheader21*/
/*   %97 = icmp eq %struct.TYPE_4__* %cur.2, null*/
begin
xmlXPathCmpNodesExt__preheader21_97 = (xmlXPathCmpNodesExt__preheader21_cur_2 == 0);
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %.preheader21*/
/*   %97 = icmp eq %struct.TYPE_4__* %cur.2, null*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader21_95))
begin
xmlXPathCmpNodesExt__preheader21_97_reg <= xmlXPathCmpNodesExt__preheader21_97;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt__preheader21_97) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt__preheader21_97_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %98*/
/*   %99 = icmp eq %struct.TYPE_4__* %cur.2, %.2*/
begin
xmlXPathCmpNodesExt_98_99 = (xmlXPathCmpNodesExt__preheader21_cur_2_reg == xmlXPathCmpNodesExt___crit_edge73__2_reg);
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %98*/
/*   %99 = icmp eq %struct.TYPE_4__* %cur.2, %.2*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_98_96))
begin
xmlXPathCmpNodesExt_98_99_reg <= xmlXPathCmpNodesExt_98_99;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt_98_99) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt_98_99_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %._crit_edge72*/
/*   %.2414 = phi %struct.TYPE_4__* [ %node2, %75 ], [ %.2413, %.loopexit25 ], [ %.2413, %._crit_edge72.loopexit ]*/
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_75_72) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_75_76 == 1'd1)))
begin
xmlXPathCmpNodesExt___crit_edge72__2414 = arg_node2;
end
/* xmlXPathCmpNodesExt: %._crit_edge72*/
/*   %.2414 = phi %struct.TYPE_4__* [ %node2, %75 ], [ %.2413, %.loopexit25 ], [ %.2413, %._crit_edge72.loopexit ]*/
else if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit25_91) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt__loopexit25_or_cond9 == 1'd0)))
begin
xmlXPathCmpNodesExt___crit_edge72__2414 = xmlXPathCmpNodesExt__thread__2413_reg;
end
/* xmlXPathCmpNodesExt: %._crit_edge72*/
/*   %.2414 = phi %struct.TYPE_4__* [ %node2, %75 ], [ %.2413, %.loopexit25 ], [ %.2413, %._crit_edge72.loopexit ]*/
else /* if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB___crit_edge72_loopexit_97) & (memory_controller_waitrequest == 1'd0))) */
begin
xmlXPathCmpNodesExt___crit_edge72__2414 = xmlXPathCmpNodesExt__thread__2413_reg;
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %._crit_edge72*/
/*   %.2414 = phi %struct.TYPE_4__* [ %node2, %75 ], [ %.2413, %.loopexit25 ], [ %.2413, %._crit_edge72.loopexit ]*/
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_75_72) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_75_76 == 1'd1)))
begin
xmlXPathCmpNodesExt___crit_edge72__2414_reg <= xmlXPathCmpNodesExt___crit_edge72__2414;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt___crit_edge72__2414) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt___crit_edge72__2414_reg"); $finish; end
end
/* xmlXPathCmpNodesExt: %._crit_edge72*/
/*   %.2414 = phi %struct.TYPE_4__* [ %node2, %75 ], [ %.2413, %.loopexit25 ], [ %.2413, %._crit_edge72.loopexit ]*/
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit25_91) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt__loopexit25_or_cond9 == 1'd0)))
begin
xmlXPathCmpNodesExt___crit_edge72__2414_reg <= xmlXPathCmpNodesExt___crit_edge72__2414;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt___crit_edge72__2414) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt___crit_edge72__2414_reg"); $finish; end
end
/* xmlXPathCmpNodesExt: %._crit_edge72*/
/*   %.2414 = phi %struct.TYPE_4__* [ %node2, %75 ], [ %.2413, %.loopexit25 ], [ %.2413, %._crit_edge72.loopexit ]*/
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB___crit_edge72_loopexit_97) & (memory_controller_waitrequest == 1'd0)))
begin
xmlXPathCmpNodesExt___crit_edge72__2414_reg <= xmlXPathCmpNodesExt___crit_edge72__2414;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt___crit_edge72__2414) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt___crit_edge72__2414_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %._crit_edge72*/
/*   %100 = getelementptr inbounds %struct.TYPE_4__* %.2, i32 0, i32 0*/
begin
xmlXPathCmpNodesExt___crit_edge72_100 = xmlXPathCmpNodesExt___crit_edge73__2_reg;
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %._crit_edge72*/
/*   %100 = getelementptr inbounds %struct.TYPE_4__* %.2, i32 0, i32 0*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB___crit_edge72_98))
begin
xmlXPathCmpNodesExt___crit_edge72_100_reg <= xmlXPathCmpNodesExt___crit_edge72_100;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt___crit_edge72_100) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt___crit_edge72_100_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %._crit_edge72*/
/*   %101 = load i32* %100, align 4, !tbaa !0*/
begin
xmlXPathCmpNodesExt___crit_edge72_101 = memory_controller_out_a[31:0];
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %._crit_edge72*/
/*   %101 = load i32* %100, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB___crit_edge72_100))
begin
xmlXPathCmpNodesExt___crit_edge72_101_reg <= xmlXPathCmpNodesExt___crit_edge72_101;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt___crit_edge72_101) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt___crit_edge72_101_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %._crit_edge72*/
/*   %102 = icmp eq i32 %101, 131*/
begin
xmlXPathCmpNodesExt___crit_edge72_102 = (xmlXPathCmpNodesExt___crit_edge72_101 == 32'd131);
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %._crit_edge72*/
/*   %102 = icmp eq i32 %101, 131*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB___crit_edge72_100))
begin
xmlXPathCmpNodesExt___crit_edge72_102_reg <= xmlXPathCmpNodesExt___crit_edge72_102;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt___crit_edge72_102) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt___crit_edge72_102_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %103*/
/*   %104 = getelementptr inbounds %struct.TYPE_4__* %.2414, i32 0, i32 0*/
begin
xmlXPathCmpNodesExt_103_104 = xmlXPathCmpNodesExt___crit_edge72__2414_reg;
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %103*/
/*   %104 = getelementptr inbounds %struct.TYPE_4__* %.2414, i32 0, i32 0*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_103_101))
begin
xmlXPathCmpNodesExt_103_104_reg <= xmlXPathCmpNodesExt_103_104;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt_103_104) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt_103_104_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %103*/
/*   %105 = load i32* %104, align 4, !tbaa !0*/
begin
xmlXPathCmpNodesExt_103_105 = memory_controller_out_a[31:0];
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %103*/
/*   %105 = load i32* %104, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_103_103))
begin
xmlXPathCmpNodesExt_103_105_reg <= xmlXPathCmpNodesExt_103_105;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt_103_105) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt_103_105_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %103*/
/*   %106 = icmp eq i32 %105, 131*/
begin
xmlXPathCmpNodesExt_103_106 = (xmlXPathCmpNodesExt_103_105 == 32'd131);
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %103*/
/*   %106 = icmp eq i32 %105, 131*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_103_103))
begin
xmlXPathCmpNodesExt_103_106_reg <= xmlXPathCmpNodesExt_103_106;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt_103_106) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt_103_106_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %107*/
/*   %108 = getelementptr inbounds %struct.TYPE_4__* %.2, i32 0, i32 1*/
begin
xmlXPathCmpNodesExt_107_108 = (xmlXPathCmpNodesExt___crit_edge73__2_reg + 4);
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %107*/
/*   %108 = getelementptr inbounds %struct.TYPE_4__* %.2, i32 0, i32 1*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_107_104))
begin
xmlXPathCmpNodesExt_107_108_reg <= xmlXPathCmpNodesExt_107_108;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt_107_108) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt_107_108_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %107*/
/*   %109 = load i32* %108, align 4, !tbaa !0*/
begin
xmlXPathCmpNodesExt_107_109 = memory_controller_out_b[31:0];
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %107*/
/*   %109 = load i32* %108, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_107_106))
begin
xmlXPathCmpNodesExt_107_109_reg <= xmlXPathCmpNodesExt_107_109;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt_107_109) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt_107_109_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %107*/
/*   %110 = icmp slt i32 %109, 0*/
begin
xmlXPathCmpNodesExt_107_110 = ($signed(xmlXPathCmpNodesExt_107_109) < $signed(32'd0));
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %107*/
/*   %110 = icmp slt i32 %109, 0*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_107_106))
begin
xmlXPathCmpNodesExt_107_110_reg <= xmlXPathCmpNodesExt_107_110;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt_107_110) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt_107_110_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %111*/
/*   %112 = getelementptr inbounds %struct.TYPE_4__* %.2414, i32 0, i32 1*/
begin
xmlXPathCmpNodesExt_111_112 = (xmlXPathCmpNodesExt___crit_edge72__2414_reg + 4);
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %111*/
/*   %112 = getelementptr inbounds %struct.TYPE_4__* %.2414, i32 0, i32 1*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_111_107))
begin
xmlXPathCmpNodesExt_111_112_reg <= xmlXPathCmpNodesExt_111_112;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt_111_112) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt_111_112_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %111*/
/*   %113 = load i32* %112, align 4, !tbaa !0*/
begin
xmlXPathCmpNodesExt_111_113 = memory_controller_out_b[31:0];
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %111*/
/*   %113 = load i32* %112, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_111_109))
begin
xmlXPathCmpNodesExt_111_113_reg <= xmlXPathCmpNodesExt_111_113;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt_111_113) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt_111_113_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %111*/
/*   %114 = icmp slt i32 %113, 0*/
begin
xmlXPathCmpNodesExt_111_114 = ($signed(xmlXPathCmpNodesExt_111_113) < $signed(32'd0));
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %111*/
/*   %114 = icmp slt i32 %113, 0*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_111_109))
begin
xmlXPathCmpNodesExt_111_114_reg <= xmlXPathCmpNodesExt_111_114;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt_111_114) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt_111_114_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %115*/
/*   %116 = getelementptr inbounds %struct.TYPE_4__* %.2, i32 0, i32 2*/
begin
xmlXPathCmpNodesExt_115_116 = (xmlXPathCmpNodesExt___crit_edge73__2_reg + 8);
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %115*/
/*   %116 = getelementptr inbounds %struct.TYPE_4__* %.2, i32 0, i32 2*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_115_110))
begin
xmlXPathCmpNodesExt_115_116_reg <= xmlXPathCmpNodesExt_115_116;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt_115_116) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt_115_116_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %115*/
/*   %117 = load i32* %116, align 4, !tbaa !0*/
begin
xmlXPathCmpNodesExt_115_117 = memory_controller_out_a[31:0];
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %115*/
/*   %117 = load i32* %116, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_115_112))
begin
xmlXPathCmpNodesExt_115_117_reg <= xmlXPathCmpNodesExt_115_117;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt_115_117) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt_115_117_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %115*/
/*   %118 = getelementptr inbounds %struct.TYPE_4__* %.2414, i32 0, i32 2*/
begin
xmlXPathCmpNodesExt_115_118 = (xmlXPathCmpNodesExt___crit_edge72__2414_reg + 8);
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %115*/
/*   %118 = getelementptr inbounds %struct.TYPE_4__* %.2414, i32 0, i32 2*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_115_110))
begin
xmlXPathCmpNodesExt_115_118_reg <= xmlXPathCmpNodesExt_115_118;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt_115_118) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt_115_118_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %115*/
/*   %119 = load i32* %118, align 4, !tbaa !0*/
begin
xmlXPathCmpNodesExt_115_119 = memory_controller_out_b[31:0];
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %115*/
/*   %119 = load i32* %118, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_115_112))
begin
xmlXPathCmpNodesExt_115_119_reg <= xmlXPathCmpNodesExt_115_119;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt_115_119) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt_115_119_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %115*/
/*   %120 = icmp eq i32 %117, %119*/
begin
xmlXPathCmpNodesExt_115_120 = (xmlXPathCmpNodesExt_115_117 == xmlXPathCmpNodesExt_115_119);
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %115*/
/*   %120 = icmp eq i32 %117, %119*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_115_112))
begin
xmlXPathCmpNodesExt_115_120_reg <= xmlXPathCmpNodesExt_115_120;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt_115_120) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt_115_120_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %121*/
/*   %122 = sub nsw i32 0, %109*/
begin
xmlXPathCmpNodesExt_121_122 = (32'd0 - xmlXPathCmpNodesExt_107_109_reg);
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %121*/
/*   %122 = sub nsw i32 0, %109*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_121_113))
begin
xmlXPathCmpNodesExt_121_122_reg <= xmlXPathCmpNodesExt_121_122;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt_121_122) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt_121_122_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %121*/
/*   %123 = sub nsw i32 0, %113*/
begin
xmlXPathCmpNodesExt_121_123 = (32'd0 - xmlXPathCmpNodesExt_111_113_reg);
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %121*/
/*   %123 = sub nsw i32 0, %113*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_121_113))
begin
xmlXPathCmpNodesExt_121_123_reg <= xmlXPathCmpNodesExt_121_123;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt_121_123) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt_121_123_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %121*/
/*   %124 = icmp slt i32 %122, %123*/
begin
xmlXPathCmpNodesExt_121_124 = ($signed(xmlXPathCmpNodesExt_121_122) < $signed(xmlXPathCmpNodesExt_121_123));
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %121*/
/*   %124 = icmp slt i32 %122, %123*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_121_113))
begin
xmlXPathCmpNodesExt_121_124_reg <= xmlXPathCmpNodesExt_121_124;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt_121_124) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt_121_124_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %125*/
/*   %126 = icmp sgt i32 %122, %123*/
begin
xmlXPathCmpNodesExt_125_126 = ($signed(xmlXPathCmpNodesExt_121_122_reg) > $signed(xmlXPathCmpNodesExt_121_123_reg));
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %125*/
/*   %126 = icmp sgt i32 %122, %123*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_125_114))
begin
xmlXPathCmpNodesExt_125_126_reg <= xmlXPathCmpNodesExt_125_126;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt_125_126) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt_125_126_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %127*/
/*   %.35 = phi %struct.TYPE_4__* [ %.2414, %125 ], [ %.2414, %115 ], [ %.2414, %111 ], [ %.2414, %107 ], [ %.2414, %103 ], [ %.2414, %._crit_edge72 ], [ %node2, %20 ], [ %node2, %16 ], [ %node2, %12 ]*/
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_12_11) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_12_15 == 1'd0)))
begin
xmlXPathCmpNodesExt_127__35 = arg_node2;
end
/* xmlXPathCmpNodesExt: %127*/
/*   %.35 = phi %struct.TYPE_4__* [ %.2414, %125 ], [ %.2414, %115 ], [ %.2414, %111 ], [ %.2414, %107 ], [ %.2414, %103 ], [ %.2414, %._crit_edge72 ], [ %node2, %20 ], [ %node2, %16 ], [ %node2, %12 ]*/
else if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_16_14) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_16_19 == 1'd0)))
begin
xmlXPathCmpNodesExt_127__35 = arg_node2;
end
/* xmlXPathCmpNodesExt: %127*/
/*   %.35 = phi %struct.TYPE_4__* [ %.2414, %125 ], [ %.2414, %115 ], [ %.2414, %111 ], [ %.2414, %107 ], [ %.2414, %103 ], [ %.2414, %._crit_edge72 ], [ %node2, %20 ], [ %node2, %16 ], [ %node2, %12 ]*/
else if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_20_17) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_20_25 == 1'd0)))
begin
xmlXPathCmpNodesExt_127__35 = arg_node2;
end
/* xmlXPathCmpNodesExt: %127*/
/*   %.35 = phi %struct.TYPE_4__* [ %.2414, %125 ], [ %.2414, %115 ], [ %.2414, %111 ], [ %.2414, %107 ], [ %.2414, %103 ], [ %.2414, %._crit_edge72 ], [ %node2, %20 ], [ %node2, %16 ], [ %node2, %12 ]*/
else if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB___crit_edge72_100) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt___crit_edge72_102 == 1'd0)))
begin
xmlXPathCmpNodesExt_127__35 = xmlXPathCmpNodesExt___crit_edge72__2414_reg;
end
/* xmlXPathCmpNodesExt: %127*/
/*   %.35 = phi %struct.TYPE_4__* [ %.2414, %125 ], [ %.2414, %115 ], [ %.2414, %111 ], [ %.2414, %107 ], [ %.2414, %103 ], [ %.2414, %._crit_edge72 ], [ %node2, %20 ], [ %node2, %16 ], [ %node2, %12 ]*/
else if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_103_103) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_103_106 == 1'd0)))
begin
xmlXPathCmpNodesExt_127__35 = xmlXPathCmpNodesExt___crit_edge72__2414_reg;
end
/* xmlXPathCmpNodesExt: %127*/
/*   %.35 = phi %struct.TYPE_4__* [ %.2414, %125 ], [ %.2414, %115 ], [ %.2414, %111 ], [ %.2414, %107 ], [ %.2414, %103 ], [ %.2414, %._crit_edge72 ], [ %node2, %20 ], [ %node2, %16 ], [ %node2, %12 ]*/
else if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_107_106) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_107_110 == 1'd0)))
begin
xmlXPathCmpNodesExt_127__35 = xmlXPathCmpNodesExt___crit_edge72__2414_reg;
end
/* xmlXPathCmpNodesExt: %127*/
/*   %.35 = phi %struct.TYPE_4__* [ %.2414, %125 ], [ %.2414, %115 ], [ %.2414, %111 ], [ %.2414, %107 ], [ %.2414, %103 ], [ %.2414, %._crit_edge72 ], [ %node2, %20 ], [ %node2, %16 ], [ %node2, %12 ]*/
else if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_111_109) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_111_114 == 1'd0)))
begin
xmlXPathCmpNodesExt_127__35 = xmlXPathCmpNodesExt___crit_edge72__2414_reg;
end
/* xmlXPathCmpNodesExt: %127*/
/*   %.35 = phi %struct.TYPE_4__* [ %.2414, %125 ], [ %.2414, %115 ], [ %.2414, %111 ], [ %.2414, %107 ], [ %.2414, %103 ], [ %.2414, %._crit_edge72 ], [ %node2, %20 ], [ %node2, %16 ], [ %node2, %12 ]*/
else if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_115_112) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_115_120 == 1'd0)))
begin
xmlXPathCmpNodesExt_127__35 = xmlXPathCmpNodesExt___crit_edge72__2414_reg;
end
/* xmlXPathCmpNodesExt: %127*/
/*   %.35 = phi %struct.TYPE_4__* [ %.2414, %125 ], [ %.2414, %115 ], [ %.2414, %111 ], [ %.2414, %107 ], [ %.2414, %103 ], [ %.2414, %._crit_edge72 ], [ %node2, %20 ], [ %node2, %16 ], [ %node2, %12 ]*/
else /* if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_125_114) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_125_126 == 1'd0))) */
begin
xmlXPathCmpNodesExt_127__35 = xmlXPathCmpNodesExt___crit_edge72__2414_reg;
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %127*/
/*   %.35 = phi %struct.TYPE_4__* [ %.2414, %125 ], [ %.2414, %115 ], [ %.2414, %111 ], [ %.2414, %107 ], [ %.2414, %103 ], [ %.2414, %._crit_edge72 ], [ %node2, %20 ], [ %node2, %16 ], [ %node2, %12 ]*/
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_12_11) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_12_15 == 1'd0)))
begin
xmlXPathCmpNodesExt_127__35_reg <= xmlXPathCmpNodesExt_127__35;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt_127__35) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt_127__35_reg"); $finish; end
end
/* xmlXPathCmpNodesExt: %127*/
/*   %.35 = phi %struct.TYPE_4__* [ %.2414, %125 ], [ %.2414, %115 ], [ %.2414, %111 ], [ %.2414, %107 ], [ %.2414, %103 ], [ %.2414, %._crit_edge72 ], [ %node2, %20 ], [ %node2, %16 ], [ %node2, %12 ]*/
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_16_14) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_16_19 == 1'd0)))
begin
xmlXPathCmpNodesExt_127__35_reg <= xmlXPathCmpNodesExt_127__35;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt_127__35) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt_127__35_reg"); $finish; end
end
/* xmlXPathCmpNodesExt: %127*/
/*   %.35 = phi %struct.TYPE_4__* [ %.2414, %125 ], [ %.2414, %115 ], [ %.2414, %111 ], [ %.2414, %107 ], [ %.2414, %103 ], [ %.2414, %._crit_edge72 ], [ %node2, %20 ], [ %node2, %16 ], [ %node2, %12 ]*/
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_20_17) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_20_25 == 1'd0)))
begin
xmlXPathCmpNodesExt_127__35_reg <= xmlXPathCmpNodesExt_127__35;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt_127__35) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt_127__35_reg"); $finish; end
end
/* xmlXPathCmpNodesExt: %127*/
/*   %.35 = phi %struct.TYPE_4__* [ %.2414, %125 ], [ %.2414, %115 ], [ %.2414, %111 ], [ %.2414, %107 ], [ %.2414, %103 ], [ %.2414, %._crit_edge72 ], [ %node2, %20 ], [ %node2, %16 ], [ %node2, %12 ]*/
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB___crit_edge72_100) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt___crit_edge72_102 == 1'd0)))
begin
xmlXPathCmpNodesExt_127__35_reg <= xmlXPathCmpNodesExt_127__35;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt_127__35) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt_127__35_reg"); $finish; end
end
/* xmlXPathCmpNodesExt: %127*/
/*   %.35 = phi %struct.TYPE_4__* [ %.2414, %125 ], [ %.2414, %115 ], [ %.2414, %111 ], [ %.2414, %107 ], [ %.2414, %103 ], [ %.2414, %._crit_edge72 ], [ %node2, %20 ], [ %node2, %16 ], [ %node2, %12 ]*/
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_103_103) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_103_106 == 1'd0)))
begin
xmlXPathCmpNodesExt_127__35_reg <= xmlXPathCmpNodesExt_127__35;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt_127__35) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt_127__35_reg"); $finish; end
end
/* xmlXPathCmpNodesExt: %127*/
/*   %.35 = phi %struct.TYPE_4__* [ %.2414, %125 ], [ %.2414, %115 ], [ %.2414, %111 ], [ %.2414, %107 ], [ %.2414, %103 ], [ %.2414, %._crit_edge72 ], [ %node2, %20 ], [ %node2, %16 ], [ %node2, %12 ]*/
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_107_106) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_107_110 == 1'd0)))
begin
xmlXPathCmpNodesExt_127__35_reg <= xmlXPathCmpNodesExt_127__35;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt_127__35) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt_127__35_reg"); $finish; end
end
/* xmlXPathCmpNodesExt: %127*/
/*   %.35 = phi %struct.TYPE_4__* [ %.2414, %125 ], [ %.2414, %115 ], [ %.2414, %111 ], [ %.2414, %107 ], [ %.2414, %103 ], [ %.2414, %._crit_edge72 ], [ %node2, %20 ], [ %node2, %16 ], [ %node2, %12 ]*/
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_111_109) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_111_114 == 1'd0)))
begin
xmlXPathCmpNodesExt_127__35_reg <= xmlXPathCmpNodesExt_127__35;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt_127__35) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt_127__35_reg"); $finish; end
end
/* xmlXPathCmpNodesExt: %127*/
/*   %.35 = phi %struct.TYPE_4__* [ %.2414, %125 ], [ %.2414, %115 ], [ %.2414, %111 ], [ %.2414, %107 ], [ %.2414, %103 ], [ %.2414, %._crit_edge72 ], [ %node2, %20 ], [ %node2, %16 ], [ %node2, %12 ]*/
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_115_112) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_115_120 == 1'd0)))
begin
xmlXPathCmpNodesExt_127__35_reg <= xmlXPathCmpNodesExt_127__35;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt_127__35) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt_127__35_reg"); $finish; end
end
/* xmlXPathCmpNodesExt: %127*/
/*   %.35 = phi %struct.TYPE_4__* [ %.2414, %125 ], [ %.2414, %115 ], [ %.2414, %111 ], [ %.2414, %107 ], [ %.2414, %103 ], [ %.2414, %._crit_edge72 ], [ %node2, %20 ], [ %node2, %16 ], [ %node2, %12 ]*/
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_125_114) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_125_126 == 1'd0)))
begin
xmlXPathCmpNodesExt_127__35_reg <= xmlXPathCmpNodesExt_127__35;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt_127__35) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt_127__35_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %127*/
/*   %.3 = phi %struct.TYPE_4__* [ %.2, %125 ], [ %.2, %115 ], [ %.2, %111 ], [ %.2, %107 ], [ %.2, %103 ], [ %.2, %._crit_edge72 ], [ %node1, %20 ], [ %node1, %16 ], [ %node1, %12 ]*/
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_12_11) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_12_15 == 1'd0)))
begin
xmlXPathCmpNodesExt_127__3 = arg_node1;
end
/* xmlXPathCmpNodesExt: %127*/
/*   %.3 = phi %struct.TYPE_4__* [ %.2, %125 ], [ %.2, %115 ], [ %.2, %111 ], [ %.2, %107 ], [ %.2, %103 ], [ %.2, %._crit_edge72 ], [ %node1, %20 ], [ %node1, %16 ], [ %node1, %12 ]*/
else if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_16_14) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_16_19 == 1'd0)))
begin
xmlXPathCmpNodesExt_127__3 = arg_node1;
end
/* xmlXPathCmpNodesExt: %127*/
/*   %.3 = phi %struct.TYPE_4__* [ %.2, %125 ], [ %.2, %115 ], [ %.2, %111 ], [ %.2, %107 ], [ %.2, %103 ], [ %.2, %._crit_edge72 ], [ %node1, %20 ], [ %node1, %16 ], [ %node1, %12 ]*/
else if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_20_17) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_20_25 == 1'd0)))
begin
xmlXPathCmpNodesExt_127__3 = arg_node1;
end
/* xmlXPathCmpNodesExt: %127*/
/*   %.3 = phi %struct.TYPE_4__* [ %.2, %125 ], [ %.2, %115 ], [ %.2, %111 ], [ %.2, %107 ], [ %.2, %103 ], [ %.2, %._crit_edge72 ], [ %node1, %20 ], [ %node1, %16 ], [ %node1, %12 ]*/
else if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB___crit_edge72_100) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt___crit_edge72_102 == 1'd0)))
begin
xmlXPathCmpNodesExt_127__3 = xmlXPathCmpNodesExt___crit_edge73__2_reg;
end
/* xmlXPathCmpNodesExt: %127*/
/*   %.3 = phi %struct.TYPE_4__* [ %.2, %125 ], [ %.2, %115 ], [ %.2, %111 ], [ %.2, %107 ], [ %.2, %103 ], [ %.2, %._crit_edge72 ], [ %node1, %20 ], [ %node1, %16 ], [ %node1, %12 ]*/
else if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_103_103) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_103_106 == 1'd0)))
begin
xmlXPathCmpNodesExt_127__3 = xmlXPathCmpNodesExt___crit_edge73__2_reg;
end
/* xmlXPathCmpNodesExt: %127*/
/*   %.3 = phi %struct.TYPE_4__* [ %.2, %125 ], [ %.2, %115 ], [ %.2, %111 ], [ %.2, %107 ], [ %.2, %103 ], [ %.2, %._crit_edge72 ], [ %node1, %20 ], [ %node1, %16 ], [ %node1, %12 ]*/
else if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_107_106) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_107_110 == 1'd0)))
begin
xmlXPathCmpNodesExt_127__3 = xmlXPathCmpNodesExt___crit_edge73__2_reg;
end
/* xmlXPathCmpNodesExt: %127*/
/*   %.3 = phi %struct.TYPE_4__* [ %.2, %125 ], [ %.2, %115 ], [ %.2, %111 ], [ %.2, %107 ], [ %.2, %103 ], [ %.2, %._crit_edge72 ], [ %node1, %20 ], [ %node1, %16 ], [ %node1, %12 ]*/
else if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_111_109) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_111_114 == 1'd0)))
begin
xmlXPathCmpNodesExt_127__3 = xmlXPathCmpNodesExt___crit_edge73__2_reg;
end
/* xmlXPathCmpNodesExt: %127*/
/*   %.3 = phi %struct.TYPE_4__* [ %.2, %125 ], [ %.2, %115 ], [ %.2, %111 ], [ %.2, %107 ], [ %.2, %103 ], [ %.2, %._crit_edge72 ], [ %node1, %20 ], [ %node1, %16 ], [ %node1, %12 ]*/
else if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_115_112) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_115_120 == 1'd0)))
begin
xmlXPathCmpNodesExt_127__3 = xmlXPathCmpNodesExt___crit_edge73__2_reg;
end
/* xmlXPathCmpNodesExt: %127*/
/*   %.3 = phi %struct.TYPE_4__* [ %.2, %125 ], [ %.2, %115 ], [ %.2, %111 ], [ %.2, %107 ], [ %.2, %103 ], [ %.2, %._crit_edge72 ], [ %node1, %20 ], [ %node1, %16 ], [ %node1, %12 ]*/
else /* if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_125_114) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_125_126 == 1'd0))) */
begin
xmlXPathCmpNodesExt_127__3 = xmlXPathCmpNodesExt___crit_edge73__2_reg;
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %127*/
/*   %.3 = phi %struct.TYPE_4__* [ %.2, %125 ], [ %.2, %115 ], [ %.2, %111 ], [ %.2, %107 ], [ %.2, %103 ], [ %.2, %._crit_edge72 ], [ %node1, %20 ], [ %node1, %16 ], [ %node1, %12 ]*/
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_12_11) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_12_15 == 1'd0)))
begin
xmlXPathCmpNodesExt_127__3_reg <= xmlXPathCmpNodesExt_127__3;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt_127__3) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt_127__3_reg"); $finish; end
end
/* xmlXPathCmpNodesExt: %127*/
/*   %.3 = phi %struct.TYPE_4__* [ %.2, %125 ], [ %.2, %115 ], [ %.2, %111 ], [ %.2, %107 ], [ %.2, %103 ], [ %.2, %._crit_edge72 ], [ %node1, %20 ], [ %node1, %16 ], [ %node1, %12 ]*/
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_16_14) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_16_19 == 1'd0)))
begin
xmlXPathCmpNodesExt_127__3_reg <= xmlXPathCmpNodesExt_127__3;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt_127__3) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt_127__3_reg"); $finish; end
end
/* xmlXPathCmpNodesExt: %127*/
/*   %.3 = phi %struct.TYPE_4__* [ %.2, %125 ], [ %.2, %115 ], [ %.2, %111 ], [ %.2, %107 ], [ %.2, %103 ], [ %.2, %._crit_edge72 ], [ %node1, %20 ], [ %node1, %16 ], [ %node1, %12 ]*/
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_20_17) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_20_25 == 1'd0)))
begin
xmlXPathCmpNodesExt_127__3_reg <= xmlXPathCmpNodesExt_127__3;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt_127__3) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt_127__3_reg"); $finish; end
end
/* xmlXPathCmpNodesExt: %127*/
/*   %.3 = phi %struct.TYPE_4__* [ %.2, %125 ], [ %.2, %115 ], [ %.2, %111 ], [ %.2, %107 ], [ %.2, %103 ], [ %.2, %._crit_edge72 ], [ %node1, %20 ], [ %node1, %16 ], [ %node1, %12 ]*/
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB___crit_edge72_100) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt___crit_edge72_102 == 1'd0)))
begin
xmlXPathCmpNodesExt_127__3_reg <= xmlXPathCmpNodesExt_127__3;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt_127__3) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt_127__3_reg"); $finish; end
end
/* xmlXPathCmpNodesExt: %127*/
/*   %.3 = phi %struct.TYPE_4__* [ %.2, %125 ], [ %.2, %115 ], [ %.2, %111 ], [ %.2, %107 ], [ %.2, %103 ], [ %.2, %._crit_edge72 ], [ %node1, %20 ], [ %node1, %16 ], [ %node1, %12 ]*/
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_103_103) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_103_106 == 1'd0)))
begin
xmlXPathCmpNodesExt_127__3_reg <= xmlXPathCmpNodesExt_127__3;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt_127__3) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt_127__3_reg"); $finish; end
end
/* xmlXPathCmpNodesExt: %127*/
/*   %.3 = phi %struct.TYPE_4__* [ %.2, %125 ], [ %.2, %115 ], [ %.2, %111 ], [ %.2, %107 ], [ %.2, %103 ], [ %.2, %._crit_edge72 ], [ %node1, %20 ], [ %node1, %16 ], [ %node1, %12 ]*/
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_107_106) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_107_110 == 1'd0)))
begin
xmlXPathCmpNodesExt_127__3_reg <= xmlXPathCmpNodesExt_127__3;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt_127__3) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt_127__3_reg"); $finish; end
end
/* xmlXPathCmpNodesExt: %127*/
/*   %.3 = phi %struct.TYPE_4__* [ %.2, %125 ], [ %.2, %115 ], [ %.2, %111 ], [ %.2, %107 ], [ %.2, %103 ], [ %.2, %._crit_edge72 ], [ %node1, %20 ], [ %node1, %16 ], [ %node1, %12 ]*/
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_111_109) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_111_114 == 1'd0)))
begin
xmlXPathCmpNodesExt_127__3_reg <= xmlXPathCmpNodesExt_127__3;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt_127__3) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt_127__3_reg"); $finish; end
end
/* xmlXPathCmpNodesExt: %127*/
/*   %.3 = phi %struct.TYPE_4__* [ %.2, %125 ], [ %.2, %115 ], [ %.2, %111 ], [ %.2, %107 ], [ %.2, %103 ], [ %.2, %._crit_edge72 ], [ %node1, %20 ], [ %node1, %16 ], [ %node1, %12 ]*/
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_115_112) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_115_120 == 1'd0)))
begin
xmlXPathCmpNodesExt_127__3_reg <= xmlXPathCmpNodesExt_127__3;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt_127__3) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt_127__3_reg"); $finish; end
end
/* xmlXPathCmpNodesExt: %127*/
/*   %.3 = phi %struct.TYPE_4__* [ %.2, %125 ], [ %.2, %115 ], [ %.2, %111 ], [ %.2, %107 ], [ %.2, %103 ], [ %.2, %._crit_edge72 ], [ %node1, %20 ], [ %node1, %16 ], [ %node1, %12 ]*/
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_125_114) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_125_126 == 1'd0)))
begin
xmlXPathCmpNodesExt_127__3_reg <= xmlXPathCmpNodesExt_127__3;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt_127__3) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt_127__3_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %127*/
/*   %128 = getelementptr inbounds %struct.TYPE_4__* %.35, i32 0, i32 4*/
begin
xmlXPathCmpNodesExt_127_128 = (xmlXPathCmpNodesExt_127__35_reg + 16);
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %127*/
/*   %128 = getelementptr inbounds %struct.TYPE_4__* %.35, i32 0, i32 4*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_127_115))
begin
xmlXPathCmpNodesExt_127_128_reg <= xmlXPathCmpNodesExt_127_128;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt_127_128) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt_127_128_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %127*/
/*   %129 = load %struct.TYPE_4__** %128, align 4, !tbaa !3*/
begin
xmlXPathCmpNodesExt_127_129 = memory_controller_out_a[`MEMORY_CONTROLLER_ADDR_SIZE-1:0];
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %127*/
/*   %129 = load %struct.TYPE_4__** %128, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_127_117))
begin
xmlXPathCmpNodesExt_127_129_reg <= xmlXPathCmpNodesExt_127_129;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt_127_129) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt_127_129_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %127*/
/*   %130 = icmp eq %struct.TYPE_4__* %.3, %129*/
begin
xmlXPathCmpNodesExt_127_130 = (xmlXPathCmpNodesExt_127__3_reg == xmlXPathCmpNodesExt_127_129);
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %127*/
/*   %130 = icmp eq %struct.TYPE_4__* %.3, %129*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_127_117))
begin
xmlXPathCmpNodesExt_127_130_reg <= xmlXPathCmpNodesExt_127_130;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt_127_130) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt_127_130_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %131*/
/*   %132 = getelementptr inbounds %struct.TYPE_4__* %.35, i32 0, i32 3*/
begin
xmlXPathCmpNodesExt_131_132 = (xmlXPathCmpNodesExt_127__35_reg + 12);
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %131*/
/*   %132 = getelementptr inbounds %struct.TYPE_4__* %.35, i32 0, i32 3*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_131_118))
begin
xmlXPathCmpNodesExt_131_132_reg <= xmlXPathCmpNodesExt_131_132;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt_131_132) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt_131_132_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %131*/
/*   %133 = load %struct.TYPE_4__** %132, align 4, !tbaa !3*/
begin
xmlXPathCmpNodesExt_131_133 = memory_controller_out_a[`MEMORY_CONTROLLER_ADDR_SIZE-1:0];
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %131*/
/*   %133 = load %struct.TYPE_4__** %132, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_131_120))
begin
xmlXPathCmpNodesExt_131_133_reg <= xmlXPathCmpNodesExt_131_133;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt_131_133) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt_131_133_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %131*/
/*   %134 = icmp eq %struct.TYPE_4__* %.3, %133*/
begin
xmlXPathCmpNodesExt_131_134 = (xmlXPathCmpNodesExt_127__3_reg == xmlXPathCmpNodesExt_131_133);
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %131*/
/*   %134 = icmp eq %struct.TYPE_4__* %.3, %133*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_131_120))
begin
xmlXPathCmpNodesExt_131_134_reg <= xmlXPathCmpNodesExt_131_134;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt_131_134) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt_131_134_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %.preheader49*/
/*   %cur.3 = phi %struct.TYPE_4__* [ %140, %142 ], [ %.35, %.preheader49.preheader ]*/
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader49_preheader_121) & (memory_controller_waitrequest == 1'd0)))
begin
xmlXPathCmpNodesExt__preheader49_cur_3 = xmlXPathCmpNodesExt_127__35_reg;
end
/* xmlXPathCmpNodesExt: %.preheader49*/
/*   %cur.3 = phi %struct.TYPE_4__* [ %140, %142 ], [ %.35, %.preheader49.preheader ]*/
else /* if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_142_129) & (memory_controller_waitrequest == 1'd0))) */
begin
xmlXPathCmpNodesExt__preheader49_cur_3 = xmlXPathCmpNodesExt_139_140_reg;
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %.preheader49*/
/*   %cur.3 = phi %struct.TYPE_4__* [ %140, %142 ], [ %.35, %.preheader49.preheader ]*/
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader49_preheader_121) & (memory_controller_waitrequest == 1'd0)))
begin
xmlXPathCmpNodesExt__preheader49_cur_3_reg <= xmlXPathCmpNodesExt__preheader49_cur_3;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt__preheader49_cur_3) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt__preheader49_cur_3_reg"); $finish; end
end
/* xmlXPathCmpNodesExt: %.preheader49*/
/*   %cur.3 = phi %struct.TYPE_4__* [ %140, %142 ], [ %.35, %.preheader49.preheader ]*/
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_142_129) & (memory_controller_waitrequest == 1'd0)))
begin
xmlXPathCmpNodesExt__preheader49_cur_3_reg <= xmlXPathCmpNodesExt__preheader49_cur_3;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt__preheader49_cur_3) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt__preheader49_cur_3_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %.preheader49*/
/*   %135 = phi i32 [ %143, %142 ], [ 0, %.preheader49.preheader ]*/
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader49_preheader_121) & (memory_controller_waitrequest == 1'd0)))
begin
xmlXPathCmpNodesExt__preheader49_135 = 32'd0;
end
/* xmlXPathCmpNodesExt: %.preheader49*/
/*   %135 = phi i32 [ %143, %142 ], [ 0, %.preheader49.preheader ]*/
else /* if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_142_129) & (memory_controller_waitrequest == 1'd0))) */
begin
xmlXPathCmpNodesExt__preheader49_135 = xmlXPathCmpNodesExt_142_143;
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %.preheader49*/
/*   %135 = phi i32 [ %143, %142 ], [ 0, %.preheader49.preheader ]*/
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader49_preheader_121) & (memory_controller_waitrequest == 1'd0)))
begin
xmlXPathCmpNodesExt__preheader49_135_reg <= xmlXPathCmpNodesExt__preheader49_135;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt__preheader49_135) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt__preheader49_135_reg"); $finish; end
end
/* xmlXPathCmpNodesExt: %.preheader49*/
/*   %135 = phi i32 [ %143, %142 ], [ 0, %.preheader49.preheader ]*/
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_142_129) & (memory_controller_waitrequest == 1'd0)))
begin
xmlXPathCmpNodesExt__preheader49_135_reg <= xmlXPathCmpNodesExt__preheader49_135;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt__preheader49_135) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt__preheader49_135_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %.preheader49*/
/*   %136 = getelementptr inbounds %struct.TYPE_4__* %cur.3, i32 0, i32 5*/
begin
xmlXPathCmpNodesExt__preheader49_136 = (xmlXPathCmpNodesExt__preheader49_cur_3_reg + 20);
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %.preheader49*/
/*   %136 = getelementptr inbounds %struct.TYPE_4__* %cur.3, i32 0, i32 5*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader49_122))
begin
xmlXPathCmpNodesExt__preheader49_136_reg <= xmlXPathCmpNodesExt__preheader49_136;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt__preheader49_136) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt__preheader49_136_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %.preheader49*/
/*   %137 = load %struct.TYPE_4__** %136, align 4, !tbaa !3*/
begin
xmlXPathCmpNodesExt__preheader49_137 = memory_controller_out_b[`MEMORY_CONTROLLER_ADDR_SIZE-1:0];
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %.preheader49*/
/*   %137 = load %struct.TYPE_4__** %136, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader49_124))
begin
xmlXPathCmpNodesExt__preheader49_137_reg <= xmlXPathCmpNodesExt__preheader49_137;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt__preheader49_137) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt__preheader49_137_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %.preheader49*/
/*   %138 = icmp eq %struct.TYPE_4__* %137, null*/
begin
xmlXPathCmpNodesExt__preheader49_138 = (xmlXPathCmpNodesExt__preheader49_137 == 0);
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %.preheader49*/
/*   %138 = icmp eq %struct.TYPE_4__* %137, null*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader49_124))
begin
xmlXPathCmpNodesExt__preheader49_138_reg <= xmlXPathCmpNodesExt__preheader49_138;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt__preheader49_138) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt__preheader49_138_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %139*/
/*   %140 = load %struct.TYPE_4__** %136, align 4, !tbaa !3*/
begin
xmlXPathCmpNodesExt_139_140 = memory_controller_out_b[`MEMORY_CONTROLLER_ADDR_SIZE-1:0];
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %139*/
/*   %140 = load %struct.TYPE_4__** %136, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_139_128))
begin
xmlXPathCmpNodesExt_139_140_reg <= xmlXPathCmpNodesExt_139_140;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt_139_140) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt_139_140_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %139*/
/*   %141 = icmp eq %struct.TYPE_4__* %140, %.3*/
begin
xmlXPathCmpNodesExt_139_141 = (xmlXPathCmpNodesExt_139_140 == xmlXPathCmpNodesExt_127__3_reg);
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %139*/
/*   %141 = icmp eq %struct.TYPE_4__* %140, %.3*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_139_128))
begin
xmlXPathCmpNodesExt_139_141_reg <= xmlXPathCmpNodesExt_139_141;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt_139_141) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt_139_141_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %142*/
/*   %143 = add nsw i32 %135, 1*/
begin
xmlXPathCmpNodesExt_142_143 = (xmlXPathCmpNodesExt__preheader49_135_reg + 32'd1);
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %142*/
/*   %143 = add nsw i32 %135, 1*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_142_129))
begin
xmlXPathCmpNodesExt_142_143_reg <= xmlXPathCmpNodesExt_142_143;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt_142_143) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt_142_143_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %.preheader45*/
/*   %cur.4 = phi %struct.TYPE_4__* [ %146, %150 ], [ %.3, %.preheader45.preheader ]*/
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader45_preheader_125) & (memory_controller_waitrequest == 1'd0)))
begin
xmlXPathCmpNodesExt__preheader45_cur_4 = xmlXPathCmpNodesExt_127__3_reg;
end
/* xmlXPathCmpNodesExt: %.preheader45*/
/*   %cur.4 = phi %struct.TYPE_4__* [ %146, %150 ], [ %.3, %.preheader45.preheader ]*/
else /* if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_150_134) & (memory_controller_waitrequest == 1'd0))) */
begin
xmlXPathCmpNodesExt__preheader45_cur_4 = xmlXPathCmpNodesExt__preheader45_146_reg;
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %.preheader45*/
/*   %cur.4 = phi %struct.TYPE_4__* [ %146, %150 ], [ %.3, %.preheader45.preheader ]*/
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader45_preheader_125) & (memory_controller_waitrequest == 1'd0)))
begin
xmlXPathCmpNodesExt__preheader45_cur_4_reg <= xmlXPathCmpNodesExt__preheader45_cur_4;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt__preheader45_cur_4) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt__preheader45_cur_4_reg"); $finish; end
end
/* xmlXPathCmpNodesExt: %.preheader45*/
/*   %cur.4 = phi %struct.TYPE_4__* [ %146, %150 ], [ %.3, %.preheader45.preheader ]*/
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_150_134) & (memory_controller_waitrequest == 1'd0)))
begin
xmlXPathCmpNodesExt__preheader45_cur_4_reg <= xmlXPathCmpNodesExt__preheader45_cur_4;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt__preheader45_cur_4) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt__preheader45_cur_4_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %.preheader45*/
/*   %144 = phi i32 [ %151, %150 ], [ 0, %.preheader45.preheader ]*/
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader45_preheader_125) & (memory_controller_waitrequest == 1'd0)))
begin
xmlXPathCmpNodesExt__preheader45_144 = 32'd0;
end
/* xmlXPathCmpNodesExt: %.preheader45*/
/*   %144 = phi i32 [ %151, %150 ], [ 0, %.preheader45.preheader ]*/
else /* if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_150_134) & (memory_controller_waitrequest == 1'd0))) */
begin
xmlXPathCmpNodesExt__preheader45_144 = xmlXPathCmpNodesExt_150_151;
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %.preheader45*/
/*   %144 = phi i32 [ %151, %150 ], [ 0, %.preheader45.preheader ]*/
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader45_preheader_125) & (memory_controller_waitrequest == 1'd0)))
begin
xmlXPathCmpNodesExt__preheader45_144_reg <= xmlXPathCmpNodesExt__preheader45_144;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt__preheader45_144) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt__preheader45_144_reg"); $finish; end
end
/* xmlXPathCmpNodesExt: %.preheader45*/
/*   %144 = phi i32 [ %151, %150 ], [ 0, %.preheader45.preheader ]*/
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_150_134) & (memory_controller_waitrequest == 1'd0)))
begin
xmlXPathCmpNodesExt__preheader45_144_reg <= xmlXPathCmpNodesExt__preheader45_144;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt__preheader45_144) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt__preheader45_144_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %.preheader45*/
/*   %145 = getelementptr inbounds %struct.TYPE_4__* %cur.4, i32 0, i32 5*/
begin
xmlXPathCmpNodesExt__preheader45_145 = (xmlXPathCmpNodesExt__preheader45_cur_4_reg + 20);
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %.preheader45*/
/*   %145 = getelementptr inbounds %struct.TYPE_4__* %cur.4, i32 0, i32 5*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader45_130))
begin
xmlXPathCmpNodesExt__preheader45_145_reg <= xmlXPathCmpNodesExt__preheader45_145;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt__preheader45_145) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt__preheader45_145_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %.preheader45*/
/*   %146 = load %struct.TYPE_4__** %145, align 4, !tbaa !3*/
begin
xmlXPathCmpNodesExt__preheader45_146 = memory_controller_out_b[`MEMORY_CONTROLLER_ADDR_SIZE-1:0];
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %.preheader45*/
/*   %146 = load %struct.TYPE_4__** %145, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader45_132))
begin
xmlXPathCmpNodesExt__preheader45_146_reg <= xmlXPathCmpNodesExt__preheader45_146;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt__preheader45_146) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt__preheader45_146_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %.preheader45*/
/*   %147 = icmp eq %struct.TYPE_4__* %146, null*/
begin
xmlXPathCmpNodesExt__preheader45_147 = (xmlXPathCmpNodesExt__preheader45_146 == 0);
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %.preheader45*/
/*   %147 = icmp eq %struct.TYPE_4__* %146, null*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader45_132))
begin
xmlXPathCmpNodesExt__preheader45_147_reg <= xmlXPathCmpNodesExt__preheader45_147;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt__preheader45_147) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt__preheader45_147_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %148*/
/*   %149 = icmp eq %struct.TYPE_4__* %146, %.35*/
begin
xmlXPathCmpNodesExt_148_149 = (xmlXPathCmpNodesExt__preheader45_146_reg == xmlXPathCmpNodesExt_127__35_reg);
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %148*/
/*   %149 = icmp eq %struct.TYPE_4__* %146, %.35*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_148_133))
begin
xmlXPathCmpNodesExt_148_149_reg <= xmlXPathCmpNodesExt_148_149;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt_148_149) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt_148_149_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %150*/
/*   %151 = add nsw i32 %144, 1*/
begin
xmlXPathCmpNodesExt_150_151 = (xmlXPathCmpNodesExt__preheader45_144_reg + 32'd1);
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %150*/
/*   %151 = add nsw i32 %144, 1*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_150_134))
begin
xmlXPathCmpNodesExt_150_151_reg <= xmlXPathCmpNodesExt_150_151;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt_150_151) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt_150_151_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %152*/
/*   %153 = icmp eq %struct.TYPE_4__* %cur.3, %cur.4*/
begin
xmlXPathCmpNodesExt_152_153 = (xmlXPathCmpNodesExt__preheader49_cur_3_reg == xmlXPathCmpNodesExt__preheader45_cur_4_reg);
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %152*/
/*   %153 = icmp eq %struct.TYPE_4__* %cur.3, %cur.4*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_152_135))
begin
xmlXPathCmpNodesExt_152_153_reg <= xmlXPathCmpNodesExt_152_153;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt_152_153) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt_152_153_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %.preheader39*/
/*   %154 = icmp sgt i32 %144, %135*/
begin
xmlXPathCmpNodesExt__preheader39_154 = ($signed(xmlXPathCmpNodesExt__preheader45_144_reg) > $signed(xmlXPathCmpNodesExt__preheader49_135_reg));
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %.preheader39*/
/*   %154 = icmp sgt i32 %144, %135*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader39_136))
begin
xmlXPathCmpNodesExt__preheader39_154_reg <= xmlXPathCmpNodesExt__preheader39_154;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt__preheader39_154) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt__preheader39_154_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %.lr.ph42*/
/*   %tmp65 = sub i32 %144, %135*/
begin
xmlXPathCmpNodesExt__lr_ph42_tmp65 = (xmlXPathCmpNodesExt__preheader45_144_reg - xmlXPathCmpNodesExt__preheader49_135_reg);
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %.lr.ph42*/
/*   %tmp65 = sub i32 %144, %135*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__lr_ph42_137))
begin
xmlXPathCmpNodesExt__lr_ph42_tmp65_reg <= xmlXPathCmpNodesExt__lr_ph42_tmp65;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt__lr_ph42_tmp65) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt__lr_ph42_tmp65_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %.preheader36*/
/*   %.4.lcssa = phi %struct.TYPE_4__* [ %.3, %.preheader39 ], [ %158, %.preheader36.loopexit ]*/
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader39_136) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt__preheader39_154 == 1'd0)))
begin
xmlXPathCmpNodesExt__preheader36__4_lcssa = xmlXPathCmpNodesExt_127__3_reg;
end
/* xmlXPathCmpNodesExt: %.preheader36*/
/*   %.4.lcssa = phi %struct.TYPE_4__* [ %.3, %.preheader39 ], [ %158, %.preheader36.loopexit ]*/
else /* if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader36_loopexit_138) & (memory_controller_waitrequest == 1'd0))) */
begin
xmlXPathCmpNodesExt__preheader36__4_lcssa = xmlXPathCmpNodesExt_156_158_reg;
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %.preheader36*/
/*   %.4.lcssa = phi %struct.TYPE_4__* [ %.3, %.preheader39 ], [ %158, %.preheader36.loopexit ]*/
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader39_136) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt__preheader39_154 == 1'd0)))
begin
xmlXPathCmpNodesExt__preheader36__4_lcssa_reg <= xmlXPathCmpNodesExt__preheader36__4_lcssa;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt__preheader36__4_lcssa) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt__preheader36__4_lcssa_reg"); $finish; end
end
/* xmlXPathCmpNodesExt: %.preheader36*/
/*   %.4.lcssa = phi %struct.TYPE_4__* [ %.3, %.preheader39 ], [ %158, %.preheader36.loopexit ]*/
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader36_loopexit_138) & (memory_controller_waitrequest == 1'd0)))
begin
xmlXPathCmpNodesExt__preheader36__4_lcssa_reg <= xmlXPathCmpNodesExt__preheader36__4_lcssa;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt__preheader36__4_lcssa) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt__preheader36__4_lcssa_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %.preheader36*/
/*   %depth1.1.lcssa = phi i32 [ %144, %.preheader39 ], [ %135, %.preheader36.loopexit ]*/
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader39_136) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt__preheader39_154 == 1'd0)))
begin
xmlXPathCmpNodesExt__preheader36_depth1_1_lcssa = xmlXPathCmpNodesExt__preheader45_144_reg;
end
/* xmlXPathCmpNodesExt: %.preheader36*/
/*   %depth1.1.lcssa = phi i32 [ %144, %.preheader39 ], [ %135, %.preheader36.loopexit ]*/
else /* if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader36_loopexit_138) & (memory_controller_waitrequest == 1'd0))) */
begin
xmlXPathCmpNodesExt__preheader36_depth1_1_lcssa = xmlXPathCmpNodesExt__preheader49_135_reg;
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %.preheader36*/
/*   %depth1.1.lcssa = phi i32 [ %144, %.preheader39 ], [ %135, %.preheader36.loopexit ]*/
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader39_136) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt__preheader39_154 == 1'd0)))
begin
xmlXPathCmpNodesExt__preheader36_depth1_1_lcssa_reg <= xmlXPathCmpNodesExt__preheader36_depth1_1_lcssa;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt__preheader36_depth1_1_lcssa) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt__preheader36_depth1_1_lcssa_reg"); $finish; end
end
/* xmlXPathCmpNodesExt: %.preheader36*/
/*   %depth1.1.lcssa = phi i32 [ %144, %.preheader39 ], [ %135, %.preheader36.loopexit ]*/
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader36_loopexit_138) & (memory_controller_waitrequest == 1'd0)))
begin
xmlXPathCmpNodesExt__preheader36_depth1_1_lcssa_reg <= xmlXPathCmpNodesExt__preheader36_depth1_1_lcssa;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt__preheader36_depth1_1_lcssa) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt__preheader36_depth1_1_lcssa_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %.preheader36*/
/*   %155 = icmp sgt i32 %135, %depth1.1.lcssa*/
begin
xmlXPathCmpNodesExt__preheader36_155 = ($signed(xmlXPathCmpNodesExt__preheader49_135_reg) > $signed(xmlXPathCmpNodesExt__preheader36_depth1_1_lcssa_reg));
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %.preheader36*/
/*   %155 = icmp sgt i32 %135, %depth1.1.lcssa*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader36_139))
begin
xmlXPathCmpNodesExt__preheader36_155_reg <= xmlXPathCmpNodesExt__preheader36_155;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt__preheader36_155) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt__preheader36_155_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %.lr.ph*/
/*   %tmp59 = sub i32 %135, %depth1.1.lcssa*/
begin
xmlXPathCmpNodesExt__lr_ph_tmp59 = (xmlXPathCmpNodesExt__preheader49_135_reg - xmlXPathCmpNodesExt__preheader36_depth1_1_lcssa_reg);
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %.lr.ph*/
/*   %tmp59 = sub i32 %135, %depth1.1.lcssa*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__lr_ph_140))
begin
xmlXPathCmpNodesExt__lr_ph_tmp59_reg <= xmlXPathCmpNodesExt__lr_ph_tmp59;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt__lr_ph_tmp59) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt__lr_ph_tmp59_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %156*/
/*   %indvar62 = phi i32 [ 0, %.lr.ph42 ], [ %indvar.next63, %156 ]*/
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__lr_ph42_137) & (memory_controller_waitrequest == 1'd0)))
begin
xmlXPathCmpNodesExt_156_indvar62 = 32'd0;
end
/* xmlXPathCmpNodesExt: %156*/
/*   %indvar62 = phi i32 [ 0, %.lr.ph42 ], [ %indvar.next63, %156 ]*/
else /* if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_156_143) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_156_exitcond66_reg == 1'd0))) */
begin
xmlXPathCmpNodesExt_156_indvar62 = xmlXPathCmpNodesExt_156_indvar_next63_reg;
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %156*/
/*   %indvar62 = phi i32 [ 0, %.lr.ph42 ], [ %indvar.next63, %156 ]*/
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__lr_ph42_137) & (memory_controller_waitrequest == 1'd0)))
begin
xmlXPathCmpNodesExt_156_indvar62_reg <= xmlXPathCmpNodesExt_156_indvar62;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt_156_indvar62) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt_156_indvar62_reg"); $finish; end
end
/* xmlXPathCmpNodesExt: %156*/
/*   %indvar62 = phi i32 [ 0, %.lr.ph42 ], [ %indvar.next63, %156 ]*/
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_156_143) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_156_exitcond66_reg == 1'd0)))
begin
xmlXPathCmpNodesExt_156_indvar62_reg <= xmlXPathCmpNodesExt_156_indvar62;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt_156_indvar62) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt_156_indvar62_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %156*/
/*   %.441 = phi %struct.TYPE_4__* [ %.3, %.lr.ph42 ], [ %158, %156 ]*/
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__lr_ph42_137) & (memory_controller_waitrequest == 1'd0)))
begin
xmlXPathCmpNodesExt_156__441 = xmlXPathCmpNodesExt_127__3_reg;
end
/* xmlXPathCmpNodesExt: %156*/
/*   %.441 = phi %struct.TYPE_4__* [ %.3, %.lr.ph42 ], [ %158, %156 ]*/
else /* if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_156_143) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_156_exitcond66_reg == 1'd0))) */
begin
xmlXPathCmpNodesExt_156__441 = xmlXPathCmpNodesExt_156_158;
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %156*/
/*   %.441 = phi %struct.TYPE_4__* [ %.3, %.lr.ph42 ], [ %158, %156 ]*/
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__lr_ph42_137) & (memory_controller_waitrequest == 1'd0)))
begin
xmlXPathCmpNodesExt_156__441_reg <= xmlXPathCmpNodesExt_156__441;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt_156__441) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt_156__441_reg"); $finish; end
end
/* xmlXPathCmpNodesExt: %156*/
/*   %.441 = phi %struct.TYPE_4__* [ %.3, %.lr.ph42 ], [ %158, %156 ]*/
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_156_143) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_156_exitcond66_reg == 1'd0)))
begin
xmlXPathCmpNodesExt_156__441_reg <= xmlXPathCmpNodesExt_156__441;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt_156__441) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt_156__441_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %156*/
/*   %157 = getelementptr inbounds %struct.TYPE_4__* %.441, i32 0, i32 5*/
begin
xmlXPathCmpNodesExt_156_157 = (xmlXPathCmpNodesExt_156__441_reg + 20);
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %156*/
/*   %157 = getelementptr inbounds %struct.TYPE_4__* %.441, i32 0, i32 5*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_156_141))
begin
xmlXPathCmpNodesExt_156_157_reg <= xmlXPathCmpNodesExt_156_157;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt_156_157) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt_156_157_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %156*/
/*   %158 = load %struct.TYPE_4__** %157, align 4, !tbaa !3*/
begin
xmlXPathCmpNodesExt_156_158 = memory_controller_out_b[`MEMORY_CONTROLLER_ADDR_SIZE-1:0];
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %156*/
/*   %158 = load %struct.TYPE_4__** %157, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_156_143))
begin
xmlXPathCmpNodesExt_156_158_reg <= xmlXPathCmpNodesExt_156_158;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt_156_158) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt_156_158_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %156*/
/*   %indvar.next63 = add i32 %indvar62, 1*/
begin
xmlXPathCmpNodesExt_156_indvar_next63 = (xmlXPathCmpNodesExt_156_indvar62_reg + 32'd1);
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %156*/
/*   %indvar.next63 = add i32 %indvar62, 1*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_156_141))
begin
xmlXPathCmpNodesExt_156_indvar_next63_reg <= xmlXPathCmpNodesExt_156_indvar_next63;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt_156_indvar_next63) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt_156_indvar_next63_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %156*/
/*   %exitcond66 = icmp eq i32 %indvar.next63, %tmp65*/
begin
xmlXPathCmpNodesExt_156_exitcond66 = (xmlXPathCmpNodesExt_156_indvar_next63 == xmlXPathCmpNodesExt__lr_ph42_tmp65_reg);
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %156*/
/*   %exitcond66 = icmp eq i32 %indvar.next63, %tmp65*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_156_141))
begin
xmlXPathCmpNodesExt_156_exitcond66_reg <= xmlXPathCmpNodesExt_156_exitcond66;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt_156_exitcond66) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt_156_exitcond66_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %159*/
/*   %indvar = phi i32 [ 0, %.lr.ph ], [ %indvar.next, %159 ]*/
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__lr_ph_140) & (memory_controller_waitrequest == 1'd0)))
begin
xmlXPathCmpNodesExt_159_indvar = 32'd0;
end
/* xmlXPathCmpNodesExt: %159*/
/*   %indvar = phi i32 [ 0, %.lr.ph ], [ %indvar.next, %159 ]*/
else /* if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_159_146) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_159_exitcond_reg == 1'd0))) */
begin
xmlXPathCmpNodesExt_159_indvar = xmlXPathCmpNodesExt_159_indvar_next_reg;
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %159*/
/*   %indvar = phi i32 [ 0, %.lr.ph ], [ %indvar.next, %159 ]*/
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__lr_ph_140) & (memory_controller_waitrequest == 1'd0)))
begin
xmlXPathCmpNodesExt_159_indvar_reg <= xmlXPathCmpNodesExt_159_indvar;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt_159_indvar) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt_159_indvar_reg"); $finish; end
end
/* xmlXPathCmpNodesExt: %159*/
/*   %indvar = phi i32 [ 0, %.lr.ph ], [ %indvar.next, %159 ]*/
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_159_146) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_159_exitcond_reg == 1'd0)))
begin
xmlXPathCmpNodesExt_159_indvar_reg <= xmlXPathCmpNodesExt_159_indvar;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt_159_indvar) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt_159_indvar_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %159*/
/*   %.4638 = phi %struct.TYPE_4__* [ %.35, %.lr.ph ], [ %161, %159 ]*/
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__lr_ph_140) & (memory_controller_waitrequest == 1'd0)))
begin
xmlXPathCmpNodesExt_159__4638 = xmlXPathCmpNodesExt_127__35_reg;
end
/* xmlXPathCmpNodesExt: %159*/
/*   %.4638 = phi %struct.TYPE_4__* [ %.35, %.lr.ph ], [ %161, %159 ]*/
else /* if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_159_146) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_159_exitcond_reg == 1'd0))) */
begin
xmlXPathCmpNodesExt_159__4638 = xmlXPathCmpNodesExt_159_161;
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %159*/
/*   %.4638 = phi %struct.TYPE_4__* [ %.35, %.lr.ph ], [ %161, %159 ]*/
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__lr_ph_140) & (memory_controller_waitrequest == 1'd0)))
begin
xmlXPathCmpNodesExt_159__4638_reg <= xmlXPathCmpNodesExt_159__4638;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt_159__4638) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt_159__4638_reg"); $finish; end
end
/* xmlXPathCmpNodesExt: %159*/
/*   %.4638 = phi %struct.TYPE_4__* [ %.35, %.lr.ph ], [ %161, %159 ]*/
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_159_146) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_159_exitcond_reg == 1'd0)))
begin
xmlXPathCmpNodesExt_159__4638_reg <= xmlXPathCmpNodesExt_159__4638;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt_159__4638) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt_159__4638_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %159*/
/*   %160 = getelementptr inbounds %struct.TYPE_4__* %.4638, i32 0, i32 5*/
begin
xmlXPathCmpNodesExt_159_160 = (xmlXPathCmpNodesExt_159__4638_reg + 20);
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %159*/
/*   %160 = getelementptr inbounds %struct.TYPE_4__* %.4638, i32 0, i32 5*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_159_144))
begin
xmlXPathCmpNodesExt_159_160_reg <= xmlXPathCmpNodesExt_159_160;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt_159_160) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt_159_160_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %159*/
/*   %161 = load %struct.TYPE_4__** %160, align 4, !tbaa !3*/
begin
xmlXPathCmpNodesExt_159_161 = memory_controller_out_b[`MEMORY_CONTROLLER_ADDR_SIZE-1:0];
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %159*/
/*   %161 = load %struct.TYPE_4__** %160, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_159_146))
begin
xmlXPathCmpNodesExt_159_161_reg <= xmlXPathCmpNodesExt_159_161;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt_159_161) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt_159_161_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %159*/
/*   %indvar.next = add i32 %indvar, 1*/
begin
xmlXPathCmpNodesExt_159_indvar_next = (xmlXPathCmpNodesExt_159_indvar_reg + 32'd1);
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %159*/
/*   %indvar.next = add i32 %indvar, 1*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_159_144))
begin
xmlXPathCmpNodesExt_159_indvar_next_reg <= xmlXPathCmpNodesExt_159_indvar_next;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt_159_indvar_next) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt_159_indvar_next_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %159*/
/*   %exitcond = icmp eq i32 %indvar.next, %tmp59*/
begin
xmlXPathCmpNodesExt_159_exitcond = (xmlXPathCmpNodesExt_159_indvar_next == xmlXPathCmpNodesExt__lr_ph_tmp59_reg);
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %159*/
/*   %exitcond = icmp eq i32 %indvar.next, %tmp59*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_159_144))
begin
xmlXPathCmpNodesExt_159_exitcond_reg <= xmlXPathCmpNodesExt_159_exitcond;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt_159_exitcond) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt_159_exitcond_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %.preheader32.preheader*/
/*   %.57.ph = phi %struct.TYPE_4__* [ %.35, %.preheader36 ], [ %161, %.preheader32.preheader.loopexit ]*/
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader36_139) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt__preheader36_155 == 1'd0)))
begin
xmlXPathCmpNodesExt__preheader32_preheader__57_ph = xmlXPathCmpNodesExt_127__35_reg;
end
/* xmlXPathCmpNodesExt: %.preheader32.preheader*/
/*   %.57.ph = phi %struct.TYPE_4__* [ %.35, %.preheader36 ], [ %161, %.preheader32.preheader.loopexit ]*/
else /* if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader32_preheader_loopexit_147) & (memory_controller_waitrequest == 1'd0))) */
begin
xmlXPathCmpNodesExt__preheader32_preheader__57_ph = xmlXPathCmpNodesExt_159_161_reg;
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %.preheader32.preheader*/
/*   %.57.ph = phi %struct.TYPE_4__* [ %.35, %.preheader36 ], [ %161, %.preheader32.preheader.loopexit ]*/
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader36_139) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt__preheader36_155 == 1'd0)))
begin
xmlXPathCmpNodesExt__preheader32_preheader__57_ph_reg <= xmlXPathCmpNodesExt__preheader32_preheader__57_ph;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt__preheader32_preheader__57_ph) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt__preheader32_preheader__57_ph_reg"); $finish; end
end
/* xmlXPathCmpNodesExt: %.preheader32.preheader*/
/*   %.57.ph = phi %struct.TYPE_4__* [ %.35, %.preheader36 ], [ %161, %.preheader32.preheader.loopexit ]*/
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader32_preheader_loopexit_147) & (memory_controller_waitrequest == 1'd0)))
begin
xmlXPathCmpNodesExt__preheader32_preheader__57_ph_reg <= xmlXPathCmpNodesExt__preheader32_preheader__57_ph;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt__preheader32_preheader__57_ph) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt__preheader32_preheader__57_ph_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %.preheader32*/
/*   %.57 = phi %struct.TYPE_4__* [ %165, %167 ], [ %.57.ph, %.preheader32.preheader ]*/
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader32_preheader_148) & (memory_controller_waitrequest == 1'd0)))
begin
xmlXPathCmpNodesExt__preheader32__57 = xmlXPathCmpNodesExt__preheader32_preheader__57_ph_reg;
end
/* xmlXPathCmpNodesExt: %.preheader32*/
/*   %.57 = phi %struct.TYPE_4__* [ %165, %167 ], [ %.57.ph, %.preheader32.preheader ]*/
else /* if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_167_152) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_167_or_cond10 == 1'd0))) */
begin
xmlXPathCmpNodesExt__preheader32__57 = xmlXPathCmpNodesExt__preheader32_165_reg;
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %.preheader32*/
/*   %.57 = phi %struct.TYPE_4__* [ %165, %167 ], [ %.57.ph, %.preheader32.preheader ]*/
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader32_preheader_148) & (memory_controller_waitrequest == 1'd0)))
begin
xmlXPathCmpNodesExt__preheader32__57_reg <= xmlXPathCmpNodesExt__preheader32__57;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt__preheader32__57) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt__preheader32__57_reg"); $finish; end
end
/* xmlXPathCmpNodesExt: %.preheader32*/
/*   %.57 = phi %struct.TYPE_4__* [ %165, %167 ], [ %.57.ph, %.preheader32.preheader ]*/
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_167_152) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_167_or_cond10 == 1'd0)))
begin
xmlXPathCmpNodesExt__preheader32__57_reg <= xmlXPathCmpNodesExt__preheader32__57;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt__preheader32__57) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt__preheader32__57_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %.preheader32*/
/*   %.5 = phi %struct.TYPE_4__* [ %163, %167 ], [ %.4.lcssa, %.preheader32.preheader ]*/
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader32_preheader_148) & (memory_controller_waitrequest == 1'd0)))
begin
xmlXPathCmpNodesExt__preheader32__5 = xmlXPathCmpNodesExt__preheader36__4_lcssa_reg;
end
/* xmlXPathCmpNodesExt: %.preheader32*/
/*   %.5 = phi %struct.TYPE_4__* [ %163, %167 ], [ %.4.lcssa, %.preheader32.preheader ]*/
else /* if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_167_152) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_167_or_cond10 == 1'd0))) */
begin
xmlXPathCmpNodesExt__preheader32__5 = xmlXPathCmpNodesExt__preheader32_163_reg;
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %.preheader32*/
/*   %.5 = phi %struct.TYPE_4__* [ %163, %167 ], [ %.4.lcssa, %.preheader32.preheader ]*/
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader32_preheader_148) & (memory_controller_waitrequest == 1'd0)))
begin
xmlXPathCmpNodesExt__preheader32__5_reg <= xmlXPathCmpNodesExt__preheader32__5;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt__preheader32__5) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt__preheader32__5_reg"); $finish; end
end
/* xmlXPathCmpNodesExt: %.preheader32*/
/*   %.5 = phi %struct.TYPE_4__* [ %163, %167 ], [ %.4.lcssa, %.preheader32.preheader ]*/
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_167_152) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_167_or_cond10 == 1'd0)))
begin
xmlXPathCmpNodesExt__preheader32__5_reg <= xmlXPathCmpNodesExt__preheader32__5;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt__preheader32__5) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt__preheader32__5_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %.preheader32*/
/*   %162 = getelementptr inbounds %struct.TYPE_4__* %.5, i32 0, i32 5*/
begin
xmlXPathCmpNodesExt__preheader32_162 = (xmlXPathCmpNodesExt__preheader32__5_reg + 20);
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %.preheader32*/
/*   %162 = getelementptr inbounds %struct.TYPE_4__* %.5, i32 0, i32 5*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader32_149))
begin
xmlXPathCmpNodesExt__preheader32_162_reg <= xmlXPathCmpNodesExt__preheader32_162;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt__preheader32_162) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt__preheader32_162_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %.preheader32*/
/*   %163 = load %struct.TYPE_4__** %162, align 4, !tbaa !3*/
begin
xmlXPathCmpNodesExt__preheader32_163 = memory_controller_out_a[`MEMORY_CONTROLLER_ADDR_SIZE-1:0];
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %.preheader32*/
/*   %163 = load %struct.TYPE_4__** %162, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader32_151))
begin
xmlXPathCmpNodesExt__preheader32_163_reg <= xmlXPathCmpNodesExt__preheader32_163;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt__preheader32_163) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt__preheader32_163_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %.preheader32*/
/*   %164 = getelementptr inbounds %struct.TYPE_4__* %.57, i32 0, i32 5*/
begin
xmlXPathCmpNodesExt__preheader32_164 = (xmlXPathCmpNodesExt__preheader32__57_reg + 20);
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %.preheader32*/
/*   %164 = getelementptr inbounds %struct.TYPE_4__* %.57, i32 0, i32 5*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader32_149))
begin
xmlXPathCmpNodesExt__preheader32_164_reg <= xmlXPathCmpNodesExt__preheader32_164;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt__preheader32_164) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt__preheader32_164_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %.preheader32*/
/*   %165 = load %struct.TYPE_4__** %164, align 4, !tbaa !3*/
begin
xmlXPathCmpNodesExt__preheader32_165 = memory_controller_out_b[`MEMORY_CONTROLLER_ADDR_SIZE-1:0];
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %.preheader32*/
/*   %165 = load %struct.TYPE_4__** %164, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader32_151))
begin
xmlXPathCmpNodesExt__preheader32_165_reg <= xmlXPathCmpNodesExt__preheader32_165;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt__preheader32_165) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt__preheader32_165_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %.preheader32*/
/*   %166 = icmp eq %struct.TYPE_4__* %163, %165*/
begin
xmlXPathCmpNodesExt__preheader32_166 = (xmlXPathCmpNodesExt__preheader32_163 == xmlXPathCmpNodesExt__preheader32_165);
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %.preheader32*/
/*   %166 = icmp eq %struct.TYPE_4__* %163, %165*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader32_151))
begin
xmlXPathCmpNodesExt__preheader32_166_reg <= xmlXPathCmpNodesExt__preheader32_166;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt__preheader32_166) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt__preheader32_166_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %167*/
/*   %168 = icmp eq %struct.TYPE_4__* %163, null*/
begin
xmlXPathCmpNodesExt_167_168 = (xmlXPathCmpNodesExt__preheader32_163_reg == 0);
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %167*/
/*   %168 = icmp eq %struct.TYPE_4__* %163, null*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_167_152))
begin
xmlXPathCmpNodesExt_167_168_reg <= xmlXPathCmpNodesExt_167_168;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt_167_168) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt_167_168_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %167*/
/*   %169 = icmp eq %struct.TYPE_4__* %165, null*/
begin
xmlXPathCmpNodesExt_167_169 = (xmlXPathCmpNodesExt__preheader32_165_reg == 0);
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %167*/
/*   %169 = icmp eq %struct.TYPE_4__* %165, null*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_167_152))
begin
xmlXPathCmpNodesExt_167_169_reg <= xmlXPathCmpNodesExt_167_169;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt_167_169) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt_167_169_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %167*/
/*   %or.cond10 = or i1 %168, %169*/
begin
xmlXPathCmpNodesExt_167_or_cond10 = (xmlXPathCmpNodesExt_167_168 | xmlXPathCmpNodesExt_167_169);
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %167*/
/*   %or.cond10 = or i1 %168, %169*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_167_152))
begin
xmlXPathCmpNodesExt_167_or_cond10_reg <= xmlXPathCmpNodesExt_167_or_cond10;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt_167_or_cond10) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt_167_or_cond10_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %170*/
/*   %171 = getelementptr inbounds %struct.TYPE_4__* %.57, i32 0, i32 4*/
begin
xmlXPathCmpNodesExt_170_171 = (xmlXPathCmpNodesExt__preheader32__57_reg + 16);
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %170*/
/*   %171 = getelementptr inbounds %struct.TYPE_4__* %.57, i32 0, i32 4*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_170_153))
begin
xmlXPathCmpNodesExt_170_171_reg <= xmlXPathCmpNodesExt_170_171;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt_170_171) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt_170_171_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %170*/
/*   %172 = load %struct.TYPE_4__** %171, align 4, !tbaa !3*/
begin
xmlXPathCmpNodesExt_170_172 = memory_controller_out_a[`MEMORY_CONTROLLER_ADDR_SIZE-1:0];
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %170*/
/*   %172 = load %struct.TYPE_4__** %171, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_170_155))
begin
xmlXPathCmpNodesExt_170_172_reg <= xmlXPathCmpNodesExt_170_172;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt_170_172) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt_170_172_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %170*/
/*   %173 = icmp eq %struct.TYPE_4__* %.5, %172*/
begin
xmlXPathCmpNodesExt_170_173 = (xmlXPathCmpNodesExt__preheader32__5_reg == xmlXPathCmpNodesExt_170_172);
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %170*/
/*   %173 = icmp eq %struct.TYPE_4__* %.5, %172*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_170_155))
begin
xmlXPathCmpNodesExt_170_173_reg <= xmlXPathCmpNodesExt_170_173;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt_170_173) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt_170_173_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %174*/
/*   %175 = getelementptr inbounds %struct.TYPE_4__* %.57, i32 0, i32 3*/
begin
xmlXPathCmpNodesExt_174_175 = (xmlXPathCmpNodesExt__preheader32__57_reg + 12);
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %174*/
/*   %175 = getelementptr inbounds %struct.TYPE_4__* %.57, i32 0, i32 3*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_174_156))
begin
xmlXPathCmpNodesExt_174_175_reg <= xmlXPathCmpNodesExt_174_175;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt_174_175) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt_174_175_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %174*/
/*   %176 = load %struct.TYPE_4__** %175, align 4, !tbaa !3*/
begin
xmlXPathCmpNodesExt_174_176 = memory_controller_out_a[`MEMORY_CONTROLLER_ADDR_SIZE-1:0];
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %174*/
/*   %176 = load %struct.TYPE_4__** %175, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_174_158))
begin
xmlXPathCmpNodesExt_174_176_reg <= xmlXPathCmpNodesExt_174_176;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt_174_176) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt_174_176_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %174*/
/*   %177 = icmp eq %struct.TYPE_4__* %.5, %176*/
begin
xmlXPathCmpNodesExt_174_177 = (xmlXPathCmpNodesExt__preheader32__5_reg == xmlXPathCmpNodesExt_174_176);
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %174*/
/*   %177 = icmp eq %struct.TYPE_4__* %.5, %176*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_174_158))
begin
xmlXPathCmpNodesExt_174_177_reg <= xmlXPathCmpNodesExt_174_177;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt_174_177) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt_174_177_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %178*/
/*   %179 = getelementptr inbounds %struct.TYPE_4__* %.5, i32 0, i32 0*/
begin
xmlXPathCmpNodesExt_178_179 = xmlXPathCmpNodesExt__preheader32__5_reg;
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %178*/
/*   %179 = getelementptr inbounds %struct.TYPE_4__* %.5, i32 0, i32 0*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_178_159))
begin
xmlXPathCmpNodesExt_178_179_reg <= xmlXPathCmpNodesExt_178_179;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt_178_179) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt_178_179_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %178*/
/*   %180 = load i32* %179, align 4, !tbaa !0*/
begin
xmlXPathCmpNodesExt_178_180 = memory_controller_out_a[31:0];
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %178*/
/*   %180 = load i32* %179, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_178_161))
begin
xmlXPathCmpNodesExt_178_180_reg <= xmlXPathCmpNodesExt_178_180;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt_178_180) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt_178_180_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %178*/
/*   %181 = icmp eq i32 %180, 131*/
begin
xmlXPathCmpNodesExt_178_181 = (xmlXPathCmpNodesExt_178_180 == 32'd131);
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %178*/
/*   %181 = icmp eq i32 %180, 131*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_178_161))
begin
xmlXPathCmpNodesExt_178_181_reg <= xmlXPathCmpNodesExt_178_181;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt_178_181) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt_178_181_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %182*/
/*   %183 = getelementptr inbounds %struct.TYPE_4__* %.57, i32 0, i32 0*/
begin
xmlXPathCmpNodesExt_182_183 = xmlXPathCmpNodesExt__preheader32__57_reg;
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %182*/
/*   %183 = getelementptr inbounds %struct.TYPE_4__* %.57, i32 0, i32 0*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_182_162))
begin
xmlXPathCmpNodesExt_182_183_reg <= xmlXPathCmpNodesExt_182_183;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt_182_183) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt_182_183_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %182*/
/*   %184 = load i32* %183, align 4, !tbaa !0*/
begin
xmlXPathCmpNodesExt_182_184 = memory_controller_out_a[31:0];
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %182*/
/*   %184 = load i32* %183, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_182_164))
begin
xmlXPathCmpNodesExt_182_184_reg <= xmlXPathCmpNodesExt_182_184;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt_182_184) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt_182_184_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %182*/
/*   %185 = icmp eq i32 %184, 131*/
begin
xmlXPathCmpNodesExt_182_185 = (xmlXPathCmpNodesExt_182_184 == 32'd131);
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %182*/
/*   %185 = icmp eq i32 %184, 131*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_182_164))
begin
xmlXPathCmpNodesExt_182_185_reg <= xmlXPathCmpNodesExt_182_185;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt_182_185) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt_182_185_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %186*/
/*   %187 = getelementptr inbounds %struct.TYPE_4__* %.5, i32 0, i32 1*/
begin
xmlXPathCmpNodesExt_186_187 = (xmlXPathCmpNodesExt__preheader32__5_reg + 4);
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %186*/
/*   %187 = getelementptr inbounds %struct.TYPE_4__* %.5, i32 0, i32 1*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_186_165))
begin
xmlXPathCmpNodesExt_186_187_reg <= xmlXPathCmpNodesExt_186_187;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt_186_187) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt_186_187_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %186*/
/*   %188 = load i32* %187, align 4, !tbaa !0*/
begin
xmlXPathCmpNodesExt_186_188 = memory_controller_out_b[31:0];
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %186*/
/*   %188 = load i32* %187, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_186_167))
begin
xmlXPathCmpNodesExt_186_188_reg <= xmlXPathCmpNodesExt_186_188;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt_186_188) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt_186_188_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %186*/
/*   %189 = icmp slt i32 %188, 0*/
begin
xmlXPathCmpNodesExt_186_189 = ($signed(xmlXPathCmpNodesExt_186_188) < $signed(32'd0));
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %186*/
/*   %189 = icmp slt i32 %188, 0*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_186_167))
begin
xmlXPathCmpNodesExt_186_189_reg <= xmlXPathCmpNodesExt_186_189;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt_186_189) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt_186_189_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %190*/
/*   %191 = getelementptr inbounds %struct.TYPE_4__* %.57, i32 0, i32 1*/
begin
xmlXPathCmpNodesExt_190_191 = (xmlXPathCmpNodesExt__preheader32__57_reg + 4);
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %190*/
/*   %191 = getelementptr inbounds %struct.TYPE_4__* %.57, i32 0, i32 1*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_190_168))
begin
xmlXPathCmpNodesExt_190_191_reg <= xmlXPathCmpNodesExt_190_191;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt_190_191) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt_190_191_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %190*/
/*   %192 = load i32* %191, align 4, !tbaa !0*/
begin
xmlXPathCmpNodesExt_190_192 = memory_controller_out_a[31:0];
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %190*/
/*   %192 = load i32* %191, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_190_170))
begin
xmlXPathCmpNodesExt_190_192_reg <= xmlXPathCmpNodesExt_190_192;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt_190_192) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt_190_192_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %190*/
/*   %193 = icmp slt i32 %192, 0*/
begin
xmlXPathCmpNodesExt_190_193 = ($signed(xmlXPathCmpNodesExt_190_192) < $signed(32'd0));
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %190*/
/*   %193 = icmp slt i32 %192, 0*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_190_170))
begin
xmlXPathCmpNodesExt_190_193_reg <= xmlXPathCmpNodesExt_190_193;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt_190_193) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt_190_193_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %194*/
/*   %195 = getelementptr inbounds %struct.TYPE_4__* %.5, i32 0, i32 2*/
begin
xmlXPathCmpNodesExt_194_195 = (xmlXPathCmpNodesExt__preheader32__5_reg + 8);
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %194*/
/*   %195 = getelementptr inbounds %struct.TYPE_4__* %.5, i32 0, i32 2*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_194_171))
begin
xmlXPathCmpNodesExt_194_195_reg <= xmlXPathCmpNodesExt_194_195;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt_194_195) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt_194_195_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %194*/
/*   %196 = load i32* %195, align 4, !tbaa !0*/
begin
xmlXPathCmpNodesExt_194_196 = memory_controller_out_a[31:0];
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %194*/
/*   %196 = load i32* %195, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_194_173))
begin
xmlXPathCmpNodesExt_194_196_reg <= xmlXPathCmpNodesExt_194_196;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt_194_196) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt_194_196_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %194*/
/*   %197 = getelementptr inbounds %struct.TYPE_4__* %.57, i32 0, i32 2*/
begin
xmlXPathCmpNodesExt_194_197 = (xmlXPathCmpNodesExt__preheader32__57_reg + 8);
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %194*/
/*   %197 = getelementptr inbounds %struct.TYPE_4__* %.57, i32 0, i32 2*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_194_171))
begin
xmlXPathCmpNodesExt_194_197_reg <= xmlXPathCmpNodesExt_194_197;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt_194_197) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt_194_197_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %194*/
/*   %198 = load i32* %197, align 4, !tbaa !0*/
begin
xmlXPathCmpNodesExt_194_198 = memory_controller_out_b[31:0];
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %194*/
/*   %198 = load i32* %197, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_194_173))
begin
xmlXPathCmpNodesExt_194_198_reg <= xmlXPathCmpNodesExt_194_198;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt_194_198) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt_194_198_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %194*/
/*   %199 = icmp eq i32 %196, %198*/
begin
xmlXPathCmpNodesExt_194_199 = (xmlXPathCmpNodesExt_194_196 == xmlXPathCmpNodesExt_194_198);
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %194*/
/*   %199 = icmp eq i32 %196, %198*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_194_173))
begin
xmlXPathCmpNodesExt_194_199_reg <= xmlXPathCmpNodesExt_194_199;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt_194_199) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt_194_199_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %200*/
/*   %201 = sub nsw i32 0, %188*/
begin
xmlXPathCmpNodesExt_200_201 = (32'd0 - xmlXPathCmpNodesExt_186_188_reg);
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %200*/
/*   %201 = sub nsw i32 0, %188*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_200_174))
begin
xmlXPathCmpNodesExt_200_201_reg <= xmlXPathCmpNodesExt_200_201;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt_200_201) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt_200_201_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %200*/
/*   %202 = sub nsw i32 0, %192*/
begin
xmlXPathCmpNodesExt_200_202 = (32'd0 - xmlXPathCmpNodesExt_190_192_reg);
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %200*/
/*   %202 = sub nsw i32 0, %192*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_200_174))
begin
xmlXPathCmpNodesExt_200_202_reg <= xmlXPathCmpNodesExt_200_202;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt_200_202) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt_200_202_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %200*/
/*   %203 = icmp slt i32 %201, %202*/
begin
xmlXPathCmpNodesExt_200_203 = ($signed(xmlXPathCmpNodesExt_200_201) < $signed(xmlXPathCmpNodesExt_200_202));
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %200*/
/*   %203 = icmp slt i32 %201, %202*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_200_174))
begin
xmlXPathCmpNodesExt_200_203_reg <= xmlXPathCmpNodesExt_200_203;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt_200_203) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt_200_203_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %204*/
/*   %205 = icmp sgt i32 %201, %202*/
begin
xmlXPathCmpNodesExt_204_205 = ($signed(xmlXPathCmpNodesExt_200_201_reg) > $signed(xmlXPathCmpNodesExt_200_202_reg));
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %204*/
/*   %205 = icmp sgt i32 %201, %202*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_204_175))
begin
xmlXPathCmpNodesExt_204_205_reg <= xmlXPathCmpNodesExt_204_205;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt_204_205) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt_204_205_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %.preheader29*/
/*   %.5.pn = phi %struct.TYPE_4__* [ %cur.5, %207 ], [ %.5, %.preheader29.preheader ]*/
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader29_preheader_176) & (memory_controller_waitrequest == 1'd0)))
begin
xmlXPathCmpNodesExt__preheader29__5_pn = xmlXPathCmpNodesExt__preheader32__5_reg;
end
/* xmlXPathCmpNodesExt: %.preheader29*/
/*   %.5.pn = phi %struct.TYPE_4__* [ %cur.5, %207 ], [ %.5, %.preheader29.preheader ]*/
else /* if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_207_180) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_207_208 == 1'd0))) */
begin
xmlXPathCmpNodesExt__preheader29__5_pn = xmlXPathCmpNodesExt__preheader29_cur_5_reg;
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %.preheader29*/
/*   %.5.pn = phi %struct.TYPE_4__* [ %cur.5, %207 ], [ %.5, %.preheader29.preheader ]*/
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader29_preheader_176) & (memory_controller_waitrequest == 1'd0)))
begin
xmlXPathCmpNodesExt__preheader29__5_pn_reg <= xmlXPathCmpNodesExt__preheader29__5_pn;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt__preheader29__5_pn) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt__preheader29__5_pn_reg"); $finish; end
end
/* xmlXPathCmpNodesExt: %.preheader29*/
/*   %.5.pn = phi %struct.TYPE_4__* [ %cur.5, %207 ], [ %.5, %.preheader29.preheader ]*/
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_207_180) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_207_208 == 1'd0)))
begin
xmlXPathCmpNodesExt__preheader29__5_pn_reg <= xmlXPathCmpNodesExt__preheader29__5_pn;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt__preheader29__5_pn) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt__preheader29__5_pn_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %.preheader29*/
/*   %cur.5.in = getelementptr inbounds %struct.TYPE_4__* %.5.pn, i32 0, i32 3*/
begin
xmlXPathCmpNodesExt__preheader29_cur_5_in = (xmlXPathCmpNodesExt__preheader29__5_pn_reg + 12);
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %.preheader29*/
/*   %cur.5.in = getelementptr inbounds %struct.TYPE_4__* %.5.pn, i32 0, i32 3*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader29_177))
begin
xmlXPathCmpNodesExt__preheader29_cur_5_in_reg <= xmlXPathCmpNodesExt__preheader29_cur_5_in;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt__preheader29_cur_5_in) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt__preheader29_cur_5_in_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %.preheader29*/
/*   %cur.5 = load %struct.TYPE_4__** %cur.5.in, align 4*/
begin
xmlXPathCmpNodesExt__preheader29_cur_5 = memory_controller_out_b[`MEMORY_CONTROLLER_ADDR_SIZE-1:0];
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %.preheader29*/
/*   %cur.5 = load %struct.TYPE_4__** %cur.5.in, align 4*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader29_179))
begin
xmlXPathCmpNodesExt__preheader29_cur_5_reg <= xmlXPathCmpNodesExt__preheader29_cur_5;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt__preheader29_cur_5) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt__preheader29_cur_5_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %.preheader29*/
/*   %206 = icmp eq %struct.TYPE_4__* %cur.5, null*/
begin
xmlXPathCmpNodesExt__preheader29_206 = (xmlXPathCmpNodesExt__preheader29_cur_5 == 0);
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %.preheader29*/
/*   %206 = icmp eq %struct.TYPE_4__* %cur.5, null*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader29_179))
begin
xmlXPathCmpNodesExt__preheader29_206_reg <= xmlXPathCmpNodesExt__preheader29_206;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt__preheader29_206) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt__preheader29_206_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %207*/
/*   %208 = icmp eq %struct.TYPE_4__* %cur.5, %.57*/
begin
xmlXPathCmpNodesExt_207_208 = (xmlXPathCmpNodesExt__preheader29_cur_5_reg == xmlXPathCmpNodesExt__preheader32__57_reg);
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %207*/
/*   %208 = icmp eq %struct.TYPE_4__* %cur.5, %.57*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_207_180))
begin
xmlXPathCmpNodesExt_207_208_reg <= xmlXPathCmpNodesExt_207_208;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt_207_208) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt_207_208_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %.loopexit23.loopexit2*/
/*   %.0.ph = phi i32 [ -1, %83 ], [ 1, %81 ], [ -1, %.preheader27 ]*/
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader27_78) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt__preheader27_80 == 1'd1)))
begin
xmlXPathCmpNodesExt__loopexit23_loopexit2__0_ph = -32'd1;
end
/* xmlXPathCmpNodesExt: %.loopexit23.loopexit2*/
/*   %.0.ph = phi i32 [ -1, %83 ], [ 1, %81 ], [ -1, %.preheader27 ]*/
else if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_81_79) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_81_82 == 1'd1)))
begin
xmlXPathCmpNodesExt__loopexit23_loopexit2__0_ph = 32'd1;
end
/* xmlXPathCmpNodesExt: %.loopexit23.loopexit2*/
/*   %.0.ph = phi i32 [ -1, %83 ], [ 1, %81 ], [ -1, %.preheader27 ]*/
else /* if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_83_82) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_83_86 == 1'd1))) */
begin
xmlXPathCmpNodesExt__loopexit23_loopexit2__0_ph = -32'd1;
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %.loopexit23.loopexit2*/
/*   %.0.ph = phi i32 [ -1, %83 ], [ 1, %81 ], [ -1, %.preheader27 ]*/
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader27_78) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt__preheader27_80 == 1'd1)))
begin
xmlXPathCmpNodesExt__loopexit23_loopexit2__0_ph_reg <= xmlXPathCmpNodesExt__loopexit23_loopexit2__0_ph;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt__loopexit23_loopexit2__0_ph) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt__loopexit23_loopexit2__0_ph_reg"); $finish; end
end
/* xmlXPathCmpNodesExt: %.loopexit23.loopexit2*/
/*   %.0.ph = phi i32 [ -1, %83 ], [ 1, %81 ], [ -1, %.preheader27 ]*/
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_81_79) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_81_82 == 1'd1)))
begin
xmlXPathCmpNodesExt__loopexit23_loopexit2__0_ph_reg <= xmlXPathCmpNodesExt__loopexit23_loopexit2__0_ph;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt__loopexit23_loopexit2__0_ph) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt__loopexit23_loopexit2__0_ph_reg"); $finish; end
end
/* xmlXPathCmpNodesExt: %.loopexit23.loopexit2*/
/*   %.0.ph = phi i32 [ -1, %83 ], [ 1, %81 ], [ -1, %.preheader27 ]*/
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_83_82) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_83_86 == 1'd1)))
begin
xmlXPathCmpNodesExt__loopexit23_loopexit2__0_ph_reg <= xmlXPathCmpNodesExt__loopexit23_loopexit2__0_ph;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt__loopexit23_loopexit2__0_ph) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt__loopexit23_loopexit2__0_ph_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %.loopexit23.loopexit3*/
/*   %.0.ph4 = phi i32 [ 1, %207 ], [ -1, %.preheader29 ]*/
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader29_179) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt__preheader29_206 == 1'd1)))
begin
xmlXPathCmpNodesExt__loopexit23_loopexit3__0_ph4 = -32'd1;
end
/* xmlXPathCmpNodesExt: %.loopexit23.loopexit3*/
/*   %.0.ph4 = phi i32 [ 1, %207 ], [ -1, %.preheader29 ]*/
else /* if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_207_180) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_207_208 == 1'd1))) */
begin
xmlXPathCmpNodesExt__loopexit23_loopexit3__0_ph4 = 32'd1;
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %.loopexit23.loopexit3*/
/*   %.0.ph4 = phi i32 [ 1, %207 ], [ -1, %.preheader29 ]*/
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader29_179) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt__preheader29_206 == 1'd1)))
begin
xmlXPathCmpNodesExt__loopexit23_loopexit3__0_ph4_reg <= xmlXPathCmpNodesExt__loopexit23_loopexit3__0_ph4;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt__loopexit23_loopexit3__0_ph4) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt__loopexit23_loopexit3__0_ph4_reg"); $finish; end
end
/* xmlXPathCmpNodesExt: %.loopexit23.loopexit3*/
/*   %.0.ph4 = phi i32 [ 1, %207 ], [ -1, %.preheader29 ]*/
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_207_180) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_207_208 == 1'd1)))
begin
xmlXPathCmpNodesExt__loopexit23_loopexit3__0_ph4_reg <= xmlXPathCmpNodesExt__loopexit23_loopexit3__0_ph4;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt__loopexit23_loopexit3__0_ph4) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt__loopexit23_loopexit3__0_ph4_reg"); $finish; end
end
end
always @(*) begin
/* xmlXPathCmpNodesExt: %.loopexit23*/
/*   %.0 = phi i32 [ -2, %0 ], [ 0, %3 ], [ 1, %26 ], [ -1, %30 ], [ 1, %5 ], [ 1, %._crit_edge73 ], [ %., %87 ], [ 1, %121 ], [ -1, %125 ], [ 1, %127 ], [ -1, %131 ], [ -2, %152 ], [ 1, %170 ], [ -1, %174 ], [ 1, %200 ], [ -1, %204 ], [ -1, %.loopexit23.loopexit ], [ 1, %.loopexit23.loopexit1 ], [ %.0.ph, %.loopexit23.loopexit2 ], [ %.0.ph4, %.loopexit23.loopexit3 ], [ -2, %.loopexit23.loopexit5 ], [ -1, %.loopexit23.loopexit6 ], [ 1, %.loopexit23.loopexit7 ]*/
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_0_1) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_0_or_cond == 1'd1)))
begin
xmlXPathCmpNodesExt__loopexit23__0 = -32'd2;
end
/* xmlXPathCmpNodesExt: %.loopexit23*/
/*   %.0 = phi i32 [ -2, %0 ], [ 0, %3 ], [ 1, %26 ], [ -1, %30 ], [ 1, %5 ], [ 1, %._crit_edge73 ], [ %., %87 ], [ 1, %121 ], [ -1, %125 ], [ 1, %127 ], [ -1, %131 ], [ -2, %152 ], [ 1, %170 ], [ -1, %174 ], [ 1, %200 ], [ -1, %204 ], [ -1, %.loopexit23.loopexit ], [ 1, %.loopexit23.loopexit1 ], [ %.0.ph, %.loopexit23.loopexit2 ], [ %.0.ph4, %.loopexit23.loopexit3 ], [ -2, %.loopexit23.loopexit5 ], [ -1, %.loopexit23.loopexit6 ], [ 1, %.loopexit23.loopexit7 ]*/
else if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_3_2) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_3_4 == 1'd1)))
begin
xmlXPathCmpNodesExt__loopexit23__0 = 32'd0;
end
/* xmlXPathCmpNodesExt: %.loopexit23*/
/*   %.0 = phi i32 [ -2, %0 ], [ 0, %3 ], [ 1, %26 ], [ -1, %30 ], [ 1, %5 ], [ 1, %._crit_edge73 ], [ %., %87 ], [ 1, %121 ], [ -1, %125 ], [ 1, %127 ], [ -1, %131 ], [ -2, %152 ], [ 1, %170 ], [ -1, %174 ], [ 1, %200 ], [ -1, %204 ], [ -1, %.loopexit23.loopexit ], [ 1, %.loopexit23.loopexit1 ], [ %.0.ph, %.loopexit23.loopexit2 ], [ %.0.ph4, %.loopexit23.loopexit3 ], [ -2, %.loopexit23.loopexit5 ], [ -1, %.loopexit23.loopexit6 ], [ 1, %.loopexit23.loopexit7 ]*/
else if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_5_5) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_5_7 == 32'd130)))
begin
xmlXPathCmpNodesExt__loopexit23__0 = 32'd1;
end
/* xmlXPathCmpNodesExt: %.loopexit23*/
/*   %.0 = phi i32 [ -2, %0 ], [ 0, %3 ], [ 1, %26 ], [ -1, %30 ], [ 1, %5 ], [ 1, %._crit_edge73 ], [ %., %87 ], [ 1, %121 ], [ -1, %125 ], [ 1, %127 ], [ -1, %131 ], [ -2, %152 ], [ 1, %170 ], [ -1, %174 ], [ 1, %200 ], [ -1, %204 ], [ -1, %.loopexit23.loopexit ], [ 1, %.loopexit23.loopexit1 ], [ %.0.ph, %.loopexit23.loopexit2 ], [ %.0.ph4, %.loopexit23.loopexit3 ], [ -2, %.loopexit23.loopexit5 ], [ -1, %.loopexit23.loopexit6 ], [ 1, %.loopexit23.loopexit7 ]*/
else if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_26_18) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_26_29 == 1'd1)))
begin
xmlXPathCmpNodesExt__loopexit23__0 = 32'd1;
end
/* xmlXPathCmpNodesExt: %.loopexit23*/
/*   %.0 = phi i32 [ -2, %0 ], [ 0, %3 ], [ 1, %26 ], [ -1, %30 ], [ 1, %5 ], [ 1, %._crit_edge73 ], [ %., %87 ], [ 1, %121 ], [ -1, %125 ], [ 1, %127 ], [ -1, %131 ], [ -2, %152 ], [ 1, %170 ], [ -1, %174 ], [ 1, %200 ], [ -1, %204 ], [ -1, %.loopexit23.loopexit ], [ 1, %.loopexit23.loopexit1 ], [ %.0.ph, %.loopexit23.loopexit2 ], [ %.0.ph4, %.loopexit23.loopexit3 ], [ -2, %.loopexit23.loopexit5 ], [ -1, %.loopexit23.loopexit6 ], [ 1, %.loopexit23.loopexit7 ]*/
else if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_30_19) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_30_31 == 1'd1)))
begin
xmlXPathCmpNodesExt__loopexit23__0 = -32'd1;
end
/* xmlXPathCmpNodesExt: %.loopexit23*/
/*   %.0 = phi i32 [ -2, %0 ], [ 0, %3 ], [ 1, %26 ], [ -1, %30 ], [ 1, %5 ], [ 1, %._crit_edge73 ], [ %., %87 ], [ 1, %121 ], [ -1, %125 ], [ 1, %127 ], [ -1, %131 ], [ -2, %152 ], [ 1, %170 ], [ -1, %174 ], [ 1, %200 ], [ -1, %204 ], [ -1, %.loopexit23.loopexit ], [ 1, %.loopexit23.loopexit1 ], [ %.0.ph, %.loopexit23.loopexit2 ], [ %.0.ph4, %.loopexit23.loopexit3 ], [ -2, %.loopexit23.loopexit5 ], [ -1, %.loopexit23.loopexit6 ], [ 1, %.loopexit23.loopexit7 ]*/
else if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB___crit_edge73_47) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt___crit_edge73_54 == 32'd130)))
begin
xmlXPathCmpNodesExt__loopexit23__0 = 32'd1;
end
/* xmlXPathCmpNodesExt: %.loopexit23*/
/*   %.0 = phi i32 [ -2, %0 ], [ 0, %3 ], [ 1, %26 ], [ -1, %30 ], [ 1, %5 ], [ 1, %._crit_edge73 ], [ %., %87 ], [ 1, %121 ], [ -1, %125 ], [ 1, %127 ], [ -1, %131 ], [ -2, %152 ], [ 1, %170 ], [ -1, %174 ], [ 1, %200 ], [ -1, %204 ], [ -1, %.loopexit23.loopexit ], [ 1, %.loopexit23.loopexit1 ], [ %.0.ph, %.loopexit23.loopexit2 ], [ %.0.ph4, %.loopexit23.loopexit3 ], [ -2, %.loopexit23.loopexit5 ], [ -1, %.loopexit23.loopexit6 ], [ 1, %.loopexit23.loopexit7 ]*/
else if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_87_83) & (memory_controller_waitrequest == 1'd0)))
begin
xmlXPathCmpNodesExt__loopexit23__0 = xmlXPathCmpNodesExt_87__;
end
/* xmlXPathCmpNodesExt: %.loopexit23*/
/*   %.0 = phi i32 [ -2, %0 ], [ 0, %3 ], [ 1, %26 ], [ -1, %30 ], [ 1, %5 ], [ 1, %._crit_edge73 ], [ %., %87 ], [ 1, %121 ], [ -1, %125 ], [ 1, %127 ], [ -1, %131 ], [ -2, %152 ], [ 1, %170 ], [ -1, %174 ], [ 1, %200 ], [ -1, %204 ], [ -1, %.loopexit23.loopexit ], [ 1, %.loopexit23.loopexit1 ], [ %.0.ph, %.loopexit23.loopexit2 ], [ %.0.ph4, %.loopexit23.loopexit3 ], [ -2, %.loopexit23.loopexit5 ], [ -1, %.loopexit23.loopexit6 ], [ 1, %.loopexit23.loopexit7 ]*/
else if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_121_113) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_121_124 == 1'd1)))
begin
xmlXPathCmpNodesExt__loopexit23__0 = 32'd1;
end
/* xmlXPathCmpNodesExt: %.loopexit23*/
/*   %.0 = phi i32 [ -2, %0 ], [ 0, %3 ], [ 1, %26 ], [ -1, %30 ], [ 1, %5 ], [ 1, %._crit_edge73 ], [ %., %87 ], [ 1, %121 ], [ -1, %125 ], [ 1, %127 ], [ -1, %131 ], [ -2, %152 ], [ 1, %170 ], [ -1, %174 ], [ 1, %200 ], [ -1, %204 ], [ -1, %.loopexit23.loopexit ], [ 1, %.loopexit23.loopexit1 ], [ %.0.ph, %.loopexit23.loopexit2 ], [ %.0.ph4, %.loopexit23.loopexit3 ], [ -2, %.loopexit23.loopexit5 ], [ -1, %.loopexit23.loopexit6 ], [ 1, %.loopexit23.loopexit7 ]*/
else if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_125_114) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_125_126 == 1'd1)))
begin
xmlXPathCmpNodesExt__loopexit23__0 = -32'd1;
end
/* xmlXPathCmpNodesExt: %.loopexit23*/
/*   %.0 = phi i32 [ -2, %0 ], [ 0, %3 ], [ 1, %26 ], [ -1, %30 ], [ 1, %5 ], [ 1, %._crit_edge73 ], [ %., %87 ], [ 1, %121 ], [ -1, %125 ], [ 1, %127 ], [ -1, %131 ], [ -2, %152 ], [ 1, %170 ], [ -1, %174 ], [ 1, %200 ], [ -1, %204 ], [ -1, %.loopexit23.loopexit ], [ 1, %.loopexit23.loopexit1 ], [ %.0.ph, %.loopexit23.loopexit2 ], [ %.0.ph4, %.loopexit23.loopexit3 ], [ -2, %.loopexit23.loopexit5 ], [ -1, %.loopexit23.loopexit6 ], [ 1, %.loopexit23.loopexit7 ]*/
else if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_127_117) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_127_130 == 1'd1)))
begin
xmlXPathCmpNodesExt__loopexit23__0 = 32'd1;
end
/* xmlXPathCmpNodesExt: %.loopexit23*/
/*   %.0 = phi i32 [ -2, %0 ], [ 0, %3 ], [ 1, %26 ], [ -1, %30 ], [ 1, %5 ], [ 1, %._crit_edge73 ], [ %., %87 ], [ 1, %121 ], [ -1, %125 ], [ 1, %127 ], [ -1, %131 ], [ -2, %152 ], [ 1, %170 ], [ -1, %174 ], [ 1, %200 ], [ -1, %204 ], [ -1, %.loopexit23.loopexit ], [ 1, %.loopexit23.loopexit1 ], [ %.0.ph, %.loopexit23.loopexit2 ], [ %.0.ph4, %.loopexit23.loopexit3 ], [ -2, %.loopexit23.loopexit5 ], [ -1, %.loopexit23.loopexit6 ], [ 1, %.loopexit23.loopexit7 ]*/
else if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_131_120) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_131_134 == 1'd1)))
begin
xmlXPathCmpNodesExt__loopexit23__0 = -32'd1;
end
/* xmlXPathCmpNodesExt: %.loopexit23*/
/*   %.0 = phi i32 [ -2, %0 ], [ 0, %3 ], [ 1, %26 ], [ -1, %30 ], [ 1, %5 ], [ 1, %._crit_edge73 ], [ %., %87 ], [ 1, %121 ], [ -1, %125 ], [ 1, %127 ], [ -1, %131 ], [ -2, %152 ], [ 1, %170 ], [ -1, %174 ], [ 1, %200 ], [ -1, %204 ], [ -1, %.loopexit23.loopexit ], [ 1, %.loopexit23.loopexit1 ], [ %.0.ph, %.loopexit23.loopexit2 ], [ %.0.ph4, %.loopexit23.loopexit3 ], [ -2, %.loopexit23.loopexit5 ], [ -1, %.loopexit23.loopexit6 ], [ 1, %.loopexit23.loopexit7 ]*/
else if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_152_135) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_152_153 == 1'd0)))
begin
xmlXPathCmpNodesExt__loopexit23__0 = -32'd2;
end
/* xmlXPathCmpNodesExt: %.loopexit23*/
/*   %.0 = phi i32 [ -2, %0 ], [ 0, %3 ], [ 1, %26 ], [ -1, %30 ], [ 1, %5 ], [ 1, %._crit_edge73 ], [ %., %87 ], [ 1, %121 ], [ -1, %125 ], [ 1, %127 ], [ -1, %131 ], [ -2, %152 ], [ 1, %170 ], [ -1, %174 ], [ 1, %200 ], [ -1, %204 ], [ -1, %.loopexit23.loopexit ], [ 1, %.loopexit23.loopexit1 ], [ %.0.ph, %.loopexit23.loopexit2 ], [ %.0.ph4, %.loopexit23.loopexit3 ], [ -2, %.loopexit23.loopexit5 ], [ -1, %.loopexit23.loopexit6 ], [ 1, %.loopexit23.loopexit7 ]*/
else if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_170_155) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_170_173 == 1'd1)))
begin
xmlXPathCmpNodesExt__loopexit23__0 = 32'd1;
end
/* xmlXPathCmpNodesExt: %.loopexit23*/
/*   %.0 = phi i32 [ -2, %0 ], [ 0, %3 ], [ 1, %26 ], [ -1, %30 ], [ 1, %5 ], [ 1, %._crit_edge73 ], [ %., %87 ], [ 1, %121 ], [ -1, %125 ], [ 1, %127 ], [ -1, %131 ], [ -2, %152 ], [ 1, %170 ], [ -1, %174 ], [ 1, %200 ], [ -1, %204 ], [ -1, %.loopexit23.loopexit ], [ 1, %.loopexit23.loopexit1 ], [ %.0.ph, %.loopexit23.loopexit2 ], [ %.0.ph4, %.loopexit23.loopexit3 ], [ -2, %.loopexit23.loopexit5 ], [ -1, %.loopexit23.loopexit6 ], [ 1, %.loopexit23.loopexit7 ]*/
else if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_174_158) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_174_177 == 1'd1)))
begin
xmlXPathCmpNodesExt__loopexit23__0 = -32'd1;
end
/* xmlXPathCmpNodesExt: %.loopexit23*/
/*   %.0 = phi i32 [ -2, %0 ], [ 0, %3 ], [ 1, %26 ], [ -1, %30 ], [ 1, %5 ], [ 1, %._crit_edge73 ], [ %., %87 ], [ 1, %121 ], [ -1, %125 ], [ 1, %127 ], [ -1, %131 ], [ -2, %152 ], [ 1, %170 ], [ -1, %174 ], [ 1, %200 ], [ -1, %204 ], [ -1, %.loopexit23.loopexit ], [ 1, %.loopexit23.loopexit1 ], [ %.0.ph, %.loopexit23.loopexit2 ], [ %.0.ph4, %.loopexit23.loopexit3 ], [ -2, %.loopexit23.loopexit5 ], [ -1, %.loopexit23.loopexit6 ], [ 1, %.loopexit23.loopexit7 ]*/
else if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_200_174) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_200_203 == 1'd1)))
begin
xmlXPathCmpNodesExt__loopexit23__0 = 32'd1;
end
/* xmlXPathCmpNodesExt: %.loopexit23*/
/*   %.0 = phi i32 [ -2, %0 ], [ 0, %3 ], [ 1, %26 ], [ -1, %30 ], [ 1, %5 ], [ 1, %._crit_edge73 ], [ %., %87 ], [ 1, %121 ], [ -1, %125 ], [ 1, %127 ], [ -1, %131 ], [ -2, %152 ], [ 1, %170 ], [ -1, %174 ], [ 1, %200 ], [ -1, %204 ], [ -1, %.loopexit23.loopexit ], [ 1, %.loopexit23.loopexit1 ], [ %.0.ph, %.loopexit23.loopexit2 ], [ %.0.ph4, %.loopexit23.loopexit3 ], [ -2, %.loopexit23.loopexit5 ], [ -1, %.loopexit23.loopexit6 ], [ 1, %.loopexit23.loopexit7 ]*/
else if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_204_175) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_204_205 == 1'd1)))
begin
xmlXPathCmpNodesExt__loopexit23__0 = -32'd1;
end
/* xmlXPathCmpNodesExt: %.loopexit23*/
/*   %.0 = phi i32 [ -2, %0 ], [ 0, %3 ], [ 1, %26 ], [ -1, %30 ], [ 1, %5 ], [ 1, %._crit_edge73 ], [ %., %87 ], [ 1, %121 ], [ -1, %125 ], [ 1, %127 ], [ -1, %131 ], [ -2, %152 ], [ 1, %170 ], [ -1, %174 ], [ 1, %200 ], [ -1, %204 ], [ -1, %.loopexit23.loopexit ], [ 1, %.loopexit23.loopexit1 ], [ %.0.ph, %.loopexit23.loopexit2 ], [ %.0.ph4, %.loopexit23.loopexit3 ], [ -2, %.loopexit23.loopexit5 ], [ -1, %.loopexit23.loopexit6 ], [ 1, %.loopexit23.loopexit7 ]*/
else if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit23_loopexit_181) & (memory_controller_waitrequest == 1'd0)))
begin
xmlXPathCmpNodesExt__loopexit23__0 = -32'd1;
end
/* xmlXPathCmpNodesExt: %.loopexit23*/
/*   %.0 = phi i32 [ -2, %0 ], [ 0, %3 ], [ 1, %26 ], [ -1, %30 ], [ 1, %5 ], [ 1, %._crit_edge73 ], [ %., %87 ], [ 1, %121 ], [ -1, %125 ], [ 1, %127 ], [ -1, %131 ], [ -2, %152 ], [ 1, %170 ], [ -1, %174 ], [ 1, %200 ], [ -1, %204 ], [ -1, %.loopexit23.loopexit ], [ 1, %.loopexit23.loopexit1 ], [ %.0.ph, %.loopexit23.loopexit2 ], [ %.0.ph4, %.loopexit23.loopexit3 ], [ -2, %.loopexit23.loopexit5 ], [ -1, %.loopexit23.loopexit6 ], [ 1, %.loopexit23.loopexit7 ]*/
else if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit23_loopexit1_182) & (memory_controller_waitrequest == 1'd0)))
begin
xmlXPathCmpNodesExt__loopexit23__0 = 32'd1;
end
/* xmlXPathCmpNodesExt: %.loopexit23*/
/*   %.0 = phi i32 [ -2, %0 ], [ 0, %3 ], [ 1, %26 ], [ -1, %30 ], [ 1, %5 ], [ 1, %._crit_edge73 ], [ %., %87 ], [ 1, %121 ], [ -1, %125 ], [ 1, %127 ], [ -1, %131 ], [ -2, %152 ], [ 1, %170 ], [ -1, %174 ], [ 1, %200 ], [ -1, %204 ], [ -1, %.loopexit23.loopexit ], [ 1, %.loopexit23.loopexit1 ], [ %.0.ph, %.loopexit23.loopexit2 ], [ %.0.ph4, %.loopexit23.loopexit3 ], [ -2, %.loopexit23.loopexit5 ], [ -1, %.loopexit23.loopexit6 ], [ 1, %.loopexit23.loopexit7 ]*/
else if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit23_loopexit2_183) & (memory_controller_waitrequest == 1'd0)))
begin
xmlXPathCmpNodesExt__loopexit23__0 = xmlXPathCmpNodesExt__loopexit23_loopexit2__0_ph_reg;
end
/* xmlXPathCmpNodesExt: %.loopexit23*/
/*   %.0 = phi i32 [ -2, %0 ], [ 0, %3 ], [ 1, %26 ], [ -1, %30 ], [ 1, %5 ], [ 1, %._crit_edge73 ], [ %., %87 ], [ 1, %121 ], [ -1, %125 ], [ 1, %127 ], [ -1, %131 ], [ -2, %152 ], [ 1, %170 ], [ -1, %174 ], [ 1, %200 ], [ -1, %204 ], [ -1, %.loopexit23.loopexit ], [ 1, %.loopexit23.loopexit1 ], [ %.0.ph, %.loopexit23.loopexit2 ], [ %.0.ph4, %.loopexit23.loopexit3 ], [ -2, %.loopexit23.loopexit5 ], [ -1, %.loopexit23.loopexit6 ], [ 1, %.loopexit23.loopexit7 ]*/
else if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit23_loopexit3_184) & (memory_controller_waitrequest == 1'd0)))
begin
xmlXPathCmpNodesExt__loopexit23__0 = xmlXPathCmpNodesExt__loopexit23_loopexit3__0_ph4_reg;
end
/* xmlXPathCmpNodesExt: %.loopexit23*/
/*   %.0 = phi i32 [ -2, %0 ], [ 0, %3 ], [ 1, %26 ], [ -1, %30 ], [ 1, %5 ], [ 1, %._crit_edge73 ], [ %., %87 ], [ 1, %121 ], [ -1, %125 ], [ 1, %127 ], [ -1, %131 ], [ -2, %152 ], [ 1, %170 ], [ -1, %174 ], [ 1, %200 ], [ -1, %204 ], [ -1, %.loopexit23.loopexit ], [ 1, %.loopexit23.loopexit1 ], [ %.0.ph, %.loopexit23.loopexit2 ], [ %.0.ph4, %.loopexit23.loopexit3 ], [ -2, %.loopexit23.loopexit5 ], [ -1, %.loopexit23.loopexit6 ], [ 1, %.loopexit23.loopexit7 ]*/
else if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit23_loopexit5_185) & (memory_controller_waitrequest == 1'd0)))
begin
xmlXPathCmpNodesExt__loopexit23__0 = -32'd2;
end
/* xmlXPathCmpNodesExt: %.loopexit23*/
/*   %.0 = phi i32 [ -2, %0 ], [ 0, %3 ], [ 1, %26 ], [ -1, %30 ], [ 1, %5 ], [ 1, %._crit_edge73 ], [ %., %87 ], [ 1, %121 ], [ -1, %125 ], [ 1, %127 ], [ -1, %131 ], [ -2, %152 ], [ 1, %170 ], [ -1, %174 ], [ 1, %200 ], [ -1, %204 ], [ -1, %.loopexit23.loopexit ], [ 1, %.loopexit23.loopexit1 ], [ %.0.ph, %.loopexit23.loopexit2 ], [ %.0.ph4, %.loopexit23.loopexit3 ], [ -2, %.loopexit23.loopexit5 ], [ -1, %.loopexit23.loopexit6 ], [ 1, %.loopexit23.loopexit7 ]*/
else if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit23_loopexit6_186) & (memory_controller_waitrequest == 1'd0)))
begin
xmlXPathCmpNodesExt__loopexit23__0 = -32'd1;
end
/* xmlXPathCmpNodesExt: %.loopexit23*/
/*   %.0 = phi i32 [ -2, %0 ], [ 0, %3 ], [ 1, %26 ], [ -1, %30 ], [ 1, %5 ], [ 1, %._crit_edge73 ], [ %., %87 ], [ 1, %121 ], [ -1, %125 ], [ 1, %127 ], [ -1, %131 ], [ -2, %152 ], [ 1, %170 ], [ -1, %174 ], [ 1, %200 ], [ -1, %204 ], [ -1, %.loopexit23.loopexit ], [ 1, %.loopexit23.loopexit1 ], [ %.0.ph, %.loopexit23.loopexit2 ], [ %.0.ph4, %.loopexit23.loopexit3 ], [ -2, %.loopexit23.loopexit5 ], [ -1, %.loopexit23.loopexit6 ], [ 1, %.loopexit23.loopexit7 ]*/
else /* if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit23_loopexit7_187) & (memory_controller_waitrequest == 1'd0))) */
begin
xmlXPathCmpNodesExt__loopexit23__0 = 32'd1;
end
end
always @(posedge clk) begin
/* xmlXPathCmpNodesExt: %.loopexit23*/
/*   %.0 = phi i32 [ -2, %0 ], [ 0, %3 ], [ 1, %26 ], [ -1, %30 ], [ 1, %5 ], [ 1, %._crit_edge73 ], [ %., %87 ], [ 1, %121 ], [ -1, %125 ], [ 1, %127 ], [ -1, %131 ], [ -2, %152 ], [ 1, %170 ], [ -1, %174 ], [ 1, %200 ], [ -1, %204 ], [ -1, %.loopexit23.loopexit ], [ 1, %.loopexit23.loopexit1 ], [ %.0.ph, %.loopexit23.loopexit2 ], [ %.0.ph4, %.loopexit23.loopexit3 ], [ -2, %.loopexit23.loopexit5 ], [ -1, %.loopexit23.loopexit6 ], [ 1, %.loopexit23.loopexit7 ]*/
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_0_1) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_0_or_cond == 1'd1)))
begin
xmlXPathCmpNodesExt__loopexit23__0_reg <= xmlXPathCmpNodesExt__loopexit23__0;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt__loopexit23__0) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt__loopexit23__0_reg"); $finish; end
end
/* xmlXPathCmpNodesExt: %.loopexit23*/
/*   %.0 = phi i32 [ -2, %0 ], [ 0, %3 ], [ 1, %26 ], [ -1, %30 ], [ 1, %5 ], [ 1, %._crit_edge73 ], [ %., %87 ], [ 1, %121 ], [ -1, %125 ], [ 1, %127 ], [ -1, %131 ], [ -2, %152 ], [ 1, %170 ], [ -1, %174 ], [ 1, %200 ], [ -1, %204 ], [ -1, %.loopexit23.loopexit ], [ 1, %.loopexit23.loopexit1 ], [ %.0.ph, %.loopexit23.loopexit2 ], [ %.0.ph4, %.loopexit23.loopexit3 ], [ -2, %.loopexit23.loopexit5 ], [ -1, %.loopexit23.loopexit6 ], [ 1, %.loopexit23.loopexit7 ]*/
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_3_2) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_3_4 == 1'd1)))
begin
xmlXPathCmpNodesExt__loopexit23__0_reg <= xmlXPathCmpNodesExt__loopexit23__0;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt__loopexit23__0) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt__loopexit23__0_reg"); $finish; end
end
/* xmlXPathCmpNodesExt: %.loopexit23*/
/*   %.0 = phi i32 [ -2, %0 ], [ 0, %3 ], [ 1, %26 ], [ -1, %30 ], [ 1, %5 ], [ 1, %._crit_edge73 ], [ %., %87 ], [ 1, %121 ], [ -1, %125 ], [ 1, %127 ], [ -1, %131 ], [ -2, %152 ], [ 1, %170 ], [ -1, %174 ], [ 1, %200 ], [ -1, %204 ], [ -1, %.loopexit23.loopexit ], [ 1, %.loopexit23.loopexit1 ], [ %.0.ph, %.loopexit23.loopexit2 ], [ %.0.ph4, %.loopexit23.loopexit3 ], [ -2, %.loopexit23.loopexit5 ], [ -1, %.loopexit23.loopexit6 ], [ 1, %.loopexit23.loopexit7 ]*/
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_5_5) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_5_7 == 32'd130)))
begin
xmlXPathCmpNodesExt__loopexit23__0_reg <= xmlXPathCmpNodesExt__loopexit23__0;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt__loopexit23__0) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt__loopexit23__0_reg"); $finish; end
end
/* xmlXPathCmpNodesExt: %.loopexit23*/
/*   %.0 = phi i32 [ -2, %0 ], [ 0, %3 ], [ 1, %26 ], [ -1, %30 ], [ 1, %5 ], [ 1, %._crit_edge73 ], [ %., %87 ], [ 1, %121 ], [ -1, %125 ], [ 1, %127 ], [ -1, %131 ], [ -2, %152 ], [ 1, %170 ], [ -1, %174 ], [ 1, %200 ], [ -1, %204 ], [ -1, %.loopexit23.loopexit ], [ 1, %.loopexit23.loopexit1 ], [ %.0.ph, %.loopexit23.loopexit2 ], [ %.0.ph4, %.loopexit23.loopexit3 ], [ -2, %.loopexit23.loopexit5 ], [ -1, %.loopexit23.loopexit6 ], [ 1, %.loopexit23.loopexit7 ]*/
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_26_18) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_26_29 == 1'd1)))
begin
xmlXPathCmpNodesExt__loopexit23__0_reg <= xmlXPathCmpNodesExt__loopexit23__0;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt__loopexit23__0) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt__loopexit23__0_reg"); $finish; end
end
/* xmlXPathCmpNodesExt: %.loopexit23*/
/*   %.0 = phi i32 [ -2, %0 ], [ 0, %3 ], [ 1, %26 ], [ -1, %30 ], [ 1, %5 ], [ 1, %._crit_edge73 ], [ %., %87 ], [ 1, %121 ], [ -1, %125 ], [ 1, %127 ], [ -1, %131 ], [ -2, %152 ], [ 1, %170 ], [ -1, %174 ], [ 1, %200 ], [ -1, %204 ], [ -1, %.loopexit23.loopexit ], [ 1, %.loopexit23.loopexit1 ], [ %.0.ph, %.loopexit23.loopexit2 ], [ %.0.ph4, %.loopexit23.loopexit3 ], [ -2, %.loopexit23.loopexit5 ], [ -1, %.loopexit23.loopexit6 ], [ 1, %.loopexit23.loopexit7 ]*/
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_30_19) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_30_31 == 1'd1)))
begin
xmlXPathCmpNodesExt__loopexit23__0_reg <= xmlXPathCmpNodesExt__loopexit23__0;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt__loopexit23__0) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt__loopexit23__0_reg"); $finish; end
end
/* xmlXPathCmpNodesExt: %.loopexit23*/
/*   %.0 = phi i32 [ -2, %0 ], [ 0, %3 ], [ 1, %26 ], [ -1, %30 ], [ 1, %5 ], [ 1, %._crit_edge73 ], [ %., %87 ], [ 1, %121 ], [ -1, %125 ], [ 1, %127 ], [ -1, %131 ], [ -2, %152 ], [ 1, %170 ], [ -1, %174 ], [ 1, %200 ], [ -1, %204 ], [ -1, %.loopexit23.loopexit ], [ 1, %.loopexit23.loopexit1 ], [ %.0.ph, %.loopexit23.loopexit2 ], [ %.0.ph4, %.loopexit23.loopexit3 ], [ -2, %.loopexit23.loopexit5 ], [ -1, %.loopexit23.loopexit6 ], [ 1, %.loopexit23.loopexit7 ]*/
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB___crit_edge73_47) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt___crit_edge73_54 == 32'd130)))
begin
xmlXPathCmpNodesExt__loopexit23__0_reg <= xmlXPathCmpNodesExt__loopexit23__0;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt__loopexit23__0) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt__loopexit23__0_reg"); $finish; end
end
/* xmlXPathCmpNodesExt: %.loopexit23*/
/*   %.0 = phi i32 [ -2, %0 ], [ 0, %3 ], [ 1, %26 ], [ -1, %30 ], [ 1, %5 ], [ 1, %._crit_edge73 ], [ %., %87 ], [ 1, %121 ], [ -1, %125 ], [ 1, %127 ], [ -1, %131 ], [ -2, %152 ], [ 1, %170 ], [ -1, %174 ], [ 1, %200 ], [ -1, %204 ], [ -1, %.loopexit23.loopexit ], [ 1, %.loopexit23.loopexit1 ], [ %.0.ph, %.loopexit23.loopexit2 ], [ %.0.ph4, %.loopexit23.loopexit3 ], [ -2, %.loopexit23.loopexit5 ], [ -1, %.loopexit23.loopexit6 ], [ 1, %.loopexit23.loopexit7 ]*/
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_87_83) & (memory_controller_waitrequest == 1'd0)))
begin
xmlXPathCmpNodesExt__loopexit23__0_reg <= xmlXPathCmpNodesExt__loopexit23__0;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt__loopexit23__0) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt__loopexit23__0_reg"); $finish; end
end
/* xmlXPathCmpNodesExt: %.loopexit23*/
/*   %.0 = phi i32 [ -2, %0 ], [ 0, %3 ], [ 1, %26 ], [ -1, %30 ], [ 1, %5 ], [ 1, %._crit_edge73 ], [ %., %87 ], [ 1, %121 ], [ -1, %125 ], [ 1, %127 ], [ -1, %131 ], [ -2, %152 ], [ 1, %170 ], [ -1, %174 ], [ 1, %200 ], [ -1, %204 ], [ -1, %.loopexit23.loopexit ], [ 1, %.loopexit23.loopexit1 ], [ %.0.ph, %.loopexit23.loopexit2 ], [ %.0.ph4, %.loopexit23.loopexit3 ], [ -2, %.loopexit23.loopexit5 ], [ -1, %.loopexit23.loopexit6 ], [ 1, %.loopexit23.loopexit7 ]*/
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_121_113) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_121_124 == 1'd1)))
begin
xmlXPathCmpNodesExt__loopexit23__0_reg <= xmlXPathCmpNodesExt__loopexit23__0;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt__loopexit23__0) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt__loopexit23__0_reg"); $finish; end
end
/* xmlXPathCmpNodesExt: %.loopexit23*/
/*   %.0 = phi i32 [ -2, %0 ], [ 0, %3 ], [ 1, %26 ], [ -1, %30 ], [ 1, %5 ], [ 1, %._crit_edge73 ], [ %., %87 ], [ 1, %121 ], [ -1, %125 ], [ 1, %127 ], [ -1, %131 ], [ -2, %152 ], [ 1, %170 ], [ -1, %174 ], [ 1, %200 ], [ -1, %204 ], [ -1, %.loopexit23.loopexit ], [ 1, %.loopexit23.loopexit1 ], [ %.0.ph, %.loopexit23.loopexit2 ], [ %.0.ph4, %.loopexit23.loopexit3 ], [ -2, %.loopexit23.loopexit5 ], [ -1, %.loopexit23.loopexit6 ], [ 1, %.loopexit23.loopexit7 ]*/
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_125_114) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_125_126 == 1'd1)))
begin
xmlXPathCmpNodesExt__loopexit23__0_reg <= xmlXPathCmpNodesExt__loopexit23__0;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt__loopexit23__0) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt__loopexit23__0_reg"); $finish; end
end
/* xmlXPathCmpNodesExt: %.loopexit23*/
/*   %.0 = phi i32 [ -2, %0 ], [ 0, %3 ], [ 1, %26 ], [ -1, %30 ], [ 1, %5 ], [ 1, %._crit_edge73 ], [ %., %87 ], [ 1, %121 ], [ -1, %125 ], [ 1, %127 ], [ -1, %131 ], [ -2, %152 ], [ 1, %170 ], [ -1, %174 ], [ 1, %200 ], [ -1, %204 ], [ -1, %.loopexit23.loopexit ], [ 1, %.loopexit23.loopexit1 ], [ %.0.ph, %.loopexit23.loopexit2 ], [ %.0.ph4, %.loopexit23.loopexit3 ], [ -2, %.loopexit23.loopexit5 ], [ -1, %.loopexit23.loopexit6 ], [ 1, %.loopexit23.loopexit7 ]*/
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_127_117) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_127_130 == 1'd1)))
begin
xmlXPathCmpNodesExt__loopexit23__0_reg <= xmlXPathCmpNodesExt__loopexit23__0;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt__loopexit23__0) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt__loopexit23__0_reg"); $finish; end
end
/* xmlXPathCmpNodesExt: %.loopexit23*/
/*   %.0 = phi i32 [ -2, %0 ], [ 0, %3 ], [ 1, %26 ], [ -1, %30 ], [ 1, %5 ], [ 1, %._crit_edge73 ], [ %., %87 ], [ 1, %121 ], [ -1, %125 ], [ 1, %127 ], [ -1, %131 ], [ -2, %152 ], [ 1, %170 ], [ -1, %174 ], [ 1, %200 ], [ -1, %204 ], [ -1, %.loopexit23.loopexit ], [ 1, %.loopexit23.loopexit1 ], [ %.0.ph, %.loopexit23.loopexit2 ], [ %.0.ph4, %.loopexit23.loopexit3 ], [ -2, %.loopexit23.loopexit5 ], [ -1, %.loopexit23.loopexit6 ], [ 1, %.loopexit23.loopexit7 ]*/
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_131_120) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_131_134 == 1'd1)))
begin
xmlXPathCmpNodesExt__loopexit23__0_reg <= xmlXPathCmpNodesExt__loopexit23__0;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt__loopexit23__0) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt__loopexit23__0_reg"); $finish; end
end
/* xmlXPathCmpNodesExt: %.loopexit23*/
/*   %.0 = phi i32 [ -2, %0 ], [ 0, %3 ], [ 1, %26 ], [ -1, %30 ], [ 1, %5 ], [ 1, %._crit_edge73 ], [ %., %87 ], [ 1, %121 ], [ -1, %125 ], [ 1, %127 ], [ -1, %131 ], [ -2, %152 ], [ 1, %170 ], [ -1, %174 ], [ 1, %200 ], [ -1, %204 ], [ -1, %.loopexit23.loopexit ], [ 1, %.loopexit23.loopexit1 ], [ %.0.ph, %.loopexit23.loopexit2 ], [ %.0.ph4, %.loopexit23.loopexit3 ], [ -2, %.loopexit23.loopexit5 ], [ -1, %.loopexit23.loopexit6 ], [ 1, %.loopexit23.loopexit7 ]*/
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_152_135) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_152_153 == 1'd0)))
begin
xmlXPathCmpNodesExt__loopexit23__0_reg <= xmlXPathCmpNodesExt__loopexit23__0;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt__loopexit23__0) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt__loopexit23__0_reg"); $finish; end
end
/* xmlXPathCmpNodesExt: %.loopexit23*/
/*   %.0 = phi i32 [ -2, %0 ], [ 0, %3 ], [ 1, %26 ], [ -1, %30 ], [ 1, %5 ], [ 1, %._crit_edge73 ], [ %., %87 ], [ 1, %121 ], [ -1, %125 ], [ 1, %127 ], [ -1, %131 ], [ -2, %152 ], [ 1, %170 ], [ -1, %174 ], [ 1, %200 ], [ -1, %204 ], [ -1, %.loopexit23.loopexit ], [ 1, %.loopexit23.loopexit1 ], [ %.0.ph, %.loopexit23.loopexit2 ], [ %.0.ph4, %.loopexit23.loopexit3 ], [ -2, %.loopexit23.loopexit5 ], [ -1, %.loopexit23.loopexit6 ], [ 1, %.loopexit23.loopexit7 ]*/
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_170_155) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_170_173 == 1'd1)))
begin
xmlXPathCmpNodesExt__loopexit23__0_reg <= xmlXPathCmpNodesExt__loopexit23__0;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt__loopexit23__0) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt__loopexit23__0_reg"); $finish; end
end
/* xmlXPathCmpNodesExt: %.loopexit23*/
/*   %.0 = phi i32 [ -2, %0 ], [ 0, %3 ], [ 1, %26 ], [ -1, %30 ], [ 1, %5 ], [ 1, %._crit_edge73 ], [ %., %87 ], [ 1, %121 ], [ -1, %125 ], [ 1, %127 ], [ -1, %131 ], [ -2, %152 ], [ 1, %170 ], [ -1, %174 ], [ 1, %200 ], [ -1, %204 ], [ -1, %.loopexit23.loopexit ], [ 1, %.loopexit23.loopexit1 ], [ %.0.ph, %.loopexit23.loopexit2 ], [ %.0.ph4, %.loopexit23.loopexit3 ], [ -2, %.loopexit23.loopexit5 ], [ -1, %.loopexit23.loopexit6 ], [ 1, %.loopexit23.loopexit7 ]*/
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_174_158) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_174_177 == 1'd1)))
begin
xmlXPathCmpNodesExt__loopexit23__0_reg <= xmlXPathCmpNodesExt__loopexit23__0;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt__loopexit23__0) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt__loopexit23__0_reg"); $finish; end
end
/* xmlXPathCmpNodesExt: %.loopexit23*/
/*   %.0 = phi i32 [ -2, %0 ], [ 0, %3 ], [ 1, %26 ], [ -1, %30 ], [ 1, %5 ], [ 1, %._crit_edge73 ], [ %., %87 ], [ 1, %121 ], [ -1, %125 ], [ 1, %127 ], [ -1, %131 ], [ -2, %152 ], [ 1, %170 ], [ -1, %174 ], [ 1, %200 ], [ -1, %204 ], [ -1, %.loopexit23.loopexit ], [ 1, %.loopexit23.loopexit1 ], [ %.0.ph, %.loopexit23.loopexit2 ], [ %.0.ph4, %.loopexit23.loopexit3 ], [ -2, %.loopexit23.loopexit5 ], [ -1, %.loopexit23.loopexit6 ], [ 1, %.loopexit23.loopexit7 ]*/
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_200_174) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_200_203 == 1'd1)))
begin
xmlXPathCmpNodesExt__loopexit23__0_reg <= xmlXPathCmpNodesExt__loopexit23__0;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt__loopexit23__0) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt__loopexit23__0_reg"); $finish; end
end
/* xmlXPathCmpNodesExt: %.loopexit23*/
/*   %.0 = phi i32 [ -2, %0 ], [ 0, %3 ], [ 1, %26 ], [ -1, %30 ], [ 1, %5 ], [ 1, %._crit_edge73 ], [ %., %87 ], [ 1, %121 ], [ -1, %125 ], [ 1, %127 ], [ -1, %131 ], [ -2, %152 ], [ 1, %170 ], [ -1, %174 ], [ 1, %200 ], [ -1, %204 ], [ -1, %.loopexit23.loopexit ], [ 1, %.loopexit23.loopexit1 ], [ %.0.ph, %.loopexit23.loopexit2 ], [ %.0.ph4, %.loopexit23.loopexit3 ], [ -2, %.loopexit23.loopexit5 ], [ -1, %.loopexit23.loopexit6 ], [ 1, %.loopexit23.loopexit7 ]*/
if ((((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_204_175) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_204_205 == 1'd1)))
begin
xmlXPathCmpNodesExt__loopexit23__0_reg <= xmlXPathCmpNodesExt__loopexit23__0;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt__loopexit23__0) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt__loopexit23__0_reg"); $finish; end
end
/* xmlXPathCmpNodesExt: %.loopexit23*/
/*   %.0 = phi i32 [ -2, %0 ], [ 0, %3 ], [ 1, %26 ], [ -1, %30 ], [ 1, %5 ], [ 1, %._crit_edge73 ], [ %., %87 ], [ 1, %121 ], [ -1, %125 ], [ 1, %127 ], [ -1, %131 ], [ -2, %152 ], [ 1, %170 ], [ -1, %174 ], [ 1, %200 ], [ -1, %204 ], [ -1, %.loopexit23.loopexit ], [ 1, %.loopexit23.loopexit1 ], [ %.0.ph, %.loopexit23.loopexit2 ], [ %.0.ph4, %.loopexit23.loopexit3 ], [ -2, %.loopexit23.loopexit5 ], [ -1, %.loopexit23.loopexit6 ], [ 1, %.loopexit23.loopexit7 ]*/
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit23_loopexit_181) & (memory_controller_waitrequest == 1'd0)))
begin
xmlXPathCmpNodesExt__loopexit23__0_reg <= xmlXPathCmpNodesExt__loopexit23__0;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt__loopexit23__0) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt__loopexit23__0_reg"); $finish; end
end
/* xmlXPathCmpNodesExt: %.loopexit23*/
/*   %.0 = phi i32 [ -2, %0 ], [ 0, %3 ], [ 1, %26 ], [ -1, %30 ], [ 1, %5 ], [ 1, %._crit_edge73 ], [ %., %87 ], [ 1, %121 ], [ -1, %125 ], [ 1, %127 ], [ -1, %131 ], [ -2, %152 ], [ 1, %170 ], [ -1, %174 ], [ 1, %200 ], [ -1, %204 ], [ -1, %.loopexit23.loopexit ], [ 1, %.loopexit23.loopexit1 ], [ %.0.ph, %.loopexit23.loopexit2 ], [ %.0.ph4, %.loopexit23.loopexit3 ], [ -2, %.loopexit23.loopexit5 ], [ -1, %.loopexit23.loopexit6 ], [ 1, %.loopexit23.loopexit7 ]*/
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit23_loopexit1_182) & (memory_controller_waitrequest == 1'd0)))
begin
xmlXPathCmpNodesExt__loopexit23__0_reg <= xmlXPathCmpNodesExt__loopexit23__0;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt__loopexit23__0) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt__loopexit23__0_reg"); $finish; end
end
/* xmlXPathCmpNodesExt: %.loopexit23*/
/*   %.0 = phi i32 [ -2, %0 ], [ 0, %3 ], [ 1, %26 ], [ -1, %30 ], [ 1, %5 ], [ 1, %._crit_edge73 ], [ %., %87 ], [ 1, %121 ], [ -1, %125 ], [ 1, %127 ], [ -1, %131 ], [ -2, %152 ], [ 1, %170 ], [ -1, %174 ], [ 1, %200 ], [ -1, %204 ], [ -1, %.loopexit23.loopexit ], [ 1, %.loopexit23.loopexit1 ], [ %.0.ph, %.loopexit23.loopexit2 ], [ %.0.ph4, %.loopexit23.loopexit3 ], [ -2, %.loopexit23.loopexit5 ], [ -1, %.loopexit23.loopexit6 ], [ 1, %.loopexit23.loopexit7 ]*/
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit23_loopexit2_183) & (memory_controller_waitrequest == 1'd0)))
begin
xmlXPathCmpNodesExt__loopexit23__0_reg <= xmlXPathCmpNodesExt__loopexit23__0;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt__loopexit23__0) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt__loopexit23__0_reg"); $finish; end
end
/* xmlXPathCmpNodesExt: %.loopexit23*/
/*   %.0 = phi i32 [ -2, %0 ], [ 0, %3 ], [ 1, %26 ], [ -1, %30 ], [ 1, %5 ], [ 1, %._crit_edge73 ], [ %., %87 ], [ 1, %121 ], [ -1, %125 ], [ 1, %127 ], [ -1, %131 ], [ -2, %152 ], [ 1, %170 ], [ -1, %174 ], [ 1, %200 ], [ -1, %204 ], [ -1, %.loopexit23.loopexit ], [ 1, %.loopexit23.loopexit1 ], [ %.0.ph, %.loopexit23.loopexit2 ], [ %.0.ph4, %.loopexit23.loopexit3 ], [ -2, %.loopexit23.loopexit5 ], [ -1, %.loopexit23.loopexit6 ], [ 1, %.loopexit23.loopexit7 ]*/
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit23_loopexit3_184) & (memory_controller_waitrequest == 1'd0)))
begin
xmlXPathCmpNodesExt__loopexit23__0_reg <= xmlXPathCmpNodesExt__loopexit23__0;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt__loopexit23__0) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt__loopexit23__0_reg"); $finish; end
end
/* xmlXPathCmpNodesExt: %.loopexit23*/
/*   %.0 = phi i32 [ -2, %0 ], [ 0, %3 ], [ 1, %26 ], [ -1, %30 ], [ 1, %5 ], [ 1, %._crit_edge73 ], [ %., %87 ], [ 1, %121 ], [ -1, %125 ], [ 1, %127 ], [ -1, %131 ], [ -2, %152 ], [ 1, %170 ], [ -1, %174 ], [ 1, %200 ], [ -1, %204 ], [ -1, %.loopexit23.loopexit ], [ 1, %.loopexit23.loopexit1 ], [ %.0.ph, %.loopexit23.loopexit2 ], [ %.0.ph4, %.loopexit23.loopexit3 ], [ -2, %.loopexit23.loopexit5 ], [ -1, %.loopexit23.loopexit6 ], [ 1, %.loopexit23.loopexit7 ]*/
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit23_loopexit5_185) & (memory_controller_waitrequest == 1'd0)))
begin
xmlXPathCmpNodesExt__loopexit23__0_reg <= xmlXPathCmpNodesExt__loopexit23__0;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt__loopexit23__0) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt__loopexit23__0_reg"); $finish; end
end
/* xmlXPathCmpNodesExt: %.loopexit23*/
/*   %.0 = phi i32 [ -2, %0 ], [ 0, %3 ], [ 1, %26 ], [ -1, %30 ], [ 1, %5 ], [ 1, %._crit_edge73 ], [ %., %87 ], [ 1, %121 ], [ -1, %125 ], [ 1, %127 ], [ -1, %131 ], [ -2, %152 ], [ 1, %170 ], [ -1, %174 ], [ 1, %200 ], [ -1, %204 ], [ -1, %.loopexit23.loopexit ], [ 1, %.loopexit23.loopexit1 ], [ %.0.ph, %.loopexit23.loopexit2 ], [ %.0.ph4, %.loopexit23.loopexit3 ], [ -2, %.loopexit23.loopexit5 ], [ -1, %.loopexit23.loopexit6 ], [ 1, %.loopexit23.loopexit7 ]*/
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit23_loopexit6_186) & (memory_controller_waitrequest == 1'd0)))
begin
xmlXPathCmpNodesExt__loopexit23__0_reg <= xmlXPathCmpNodesExt__loopexit23__0;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt__loopexit23__0) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt__loopexit23__0_reg"); $finish; end
end
/* xmlXPathCmpNodesExt: %.loopexit23*/
/*   %.0 = phi i32 [ -2, %0 ], [ 0, %3 ], [ 1, %26 ], [ -1, %30 ], [ 1, %5 ], [ 1, %._crit_edge73 ], [ %., %87 ], [ 1, %121 ], [ -1, %125 ], [ 1, %127 ], [ -1, %131 ], [ -2, %152 ], [ 1, %170 ], [ -1, %174 ], [ 1, %200 ], [ -1, %204 ], [ -1, %.loopexit23.loopexit ], [ 1, %.loopexit23.loopexit1 ], [ %.0.ph, %.loopexit23.loopexit2 ], [ %.0.ph4, %.loopexit23.loopexit3 ], [ -2, %.loopexit23.loopexit5 ], [ -1, %.loopexit23.loopexit6 ], [ 1, %.loopexit23.loopexit7 ]*/
if (((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit23_loopexit7_187) & (memory_controller_waitrequest == 1'd0)))
begin
xmlXPathCmpNodesExt__loopexit23__0_reg <= xmlXPathCmpNodesExt__loopexit23__0;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt__loopexit23__0) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt__loopexit23__0_reg"); $finish; end
end
end
always @(posedge clk) begin
if ((cur_state == LEGUP_0))
begin
finish <= 1'd0;
if (reset == 1'b0 && ^(1'd0) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to finish"); $finish; end
end
/* xmlXPathCmpNodesExt: %.loopexit23*/
/*   ret i32 %.0*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit23_188))
begin
finish <= (memory_controller_waitrequest == 1'd0);
if (reset == 1'b0 && ^((memory_controller_waitrequest == 1'd0)) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to finish"); $finish; end
end
end
always @(*) begin
memory_controller_enable_a = 1'd0;
if ((cur_state == LEGUP_0))
begin
memory_controller_enable_a = 1'd0;
end
/* xmlXPathCmpNodesExt: %5*/
/*   %7 = load i32* %6, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_5_3))
begin
memory_controller_enable_a = 1'd1;
end
/* xmlXPathCmpNodesExt: %8*/
/*   %10 = load i32* %9, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_8_6))
begin
memory_controller_enable_a = 1'd1;
end
/* xmlXPathCmpNodesExt: %20*/
/*   %22 = load i32* %21, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_20_15))
begin
memory_controller_enable_a = 1'd1;
end
/* xmlXPathCmpNodesExt: %32*/
/*   %34 = load %struct.TYPE_4__** %33, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_32_20))
begin
memory_controller_enable_a = 1'd1;
end
/* xmlXPathCmpNodesExt: %.preheader*/
/*   %41 = load i32* %40, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader_27))
begin
memory_controller_enable_a = 1'd1;
end
/* xmlXPathCmpNodesExt: %.loopexit.thread*/
/*   %.pre11 = load i32* %.phi.trans.insert10, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit_thread_37))
begin
memory_controller_enable_a = 1'd1;
end
/* xmlXPathCmpNodesExt: %.loopexit.thread.thread*/
/*   %50 = load i32* %49, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit_thread_thread_41))
begin
memory_controller_enable_a = 1'd1;
end
/* xmlXPathCmpNodesExt: %55*/
/*   %57 = load %struct.TYPE_4__** %56, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_55_48))
begin
memory_controller_enable_a = 1'd1;
end
/* xmlXPathCmpNodesExt: %.preheader17*/
/*   %64 = load i32* %63, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader17_55))
begin
memory_controller_enable_a = 1'd1;
end
/* xmlXPathCmpNodesExt: %.loopexit18.thread*/
/*   %.pre = load i32* %.phi.trans.insert, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit18_thread_65))
begin
memory_controller_enable_a = 1'd1;
end
/* xmlXPathCmpNodesExt: %.loopexit18.thread.thread*/
/*   %73 = load i32* %72, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit18_thread_thread_69))
begin
memory_controller_enable_a = 1'd1;
end
/* xmlXPathCmpNodesExt: %83*/
/*   %85 = load i32* %84, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_83_80))
begin
memory_controller_enable_a = 1'd1;
end
/* xmlXPathCmpNodesExt: %._crit_edge72*/
/*   %101 = load i32* %100, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB___crit_edge72_98))
begin
memory_controller_enable_a = 1'd1;
end
/* xmlXPathCmpNodesExt: %103*/
/*   %105 = load i32* %104, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_103_101))
begin
memory_controller_enable_a = 1'd1;
end
/* xmlXPathCmpNodesExt: %115*/
/*   %117 = load i32* %116, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_115_110))
begin
memory_controller_enable_a = 1'd1;
end
/* xmlXPathCmpNodesExt: %127*/
/*   %129 = load %struct.TYPE_4__** %128, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_127_115))
begin
memory_controller_enable_a = 1'd1;
end
/* xmlXPathCmpNodesExt: %131*/
/*   %133 = load %struct.TYPE_4__** %132, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_131_118))
begin
memory_controller_enable_a = 1'd1;
end
/* xmlXPathCmpNodesExt: %.preheader32*/
/*   %163 = load %struct.TYPE_4__** %162, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader32_149))
begin
memory_controller_enable_a = 1'd1;
end
/* xmlXPathCmpNodesExt: %170*/
/*   %172 = load %struct.TYPE_4__** %171, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_170_153))
begin
memory_controller_enable_a = 1'd1;
end
/* xmlXPathCmpNodesExt: %174*/
/*   %176 = load %struct.TYPE_4__** %175, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_174_156))
begin
memory_controller_enable_a = 1'd1;
end
/* xmlXPathCmpNodesExt: %178*/
/*   %180 = load i32* %179, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_178_159))
begin
memory_controller_enable_a = 1'd1;
end
/* xmlXPathCmpNodesExt: %182*/
/*   %184 = load i32* %183, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_182_162))
begin
memory_controller_enable_a = 1'd1;
end
/* xmlXPathCmpNodesExt: %190*/
/*   %192 = load i32* %191, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_190_168))
begin
memory_controller_enable_a = 1'd1;
end
/* xmlXPathCmpNodesExt: %194*/
/*   %196 = load i32* %195, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_194_171))
begin
memory_controller_enable_a = 1'd1;
end
end
always @(*) begin
memory_controller_address_a = 1'd0;
if ((cur_state == LEGUP_0))
begin
memory_controller_address_a = 1'd0;
end
/* xmlXPathCmpNodesExt: %5*/
/*   %7 = load i32* %6, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_5_3))
begin
memory_controller_address_a = xmlXPathCmpNodesExt_5_6;
end
/* xmlXPathCmpNodesExt: %8*/
/*   %10 = load i32* %9, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_8_6))
begin
memory_controller_address_a = xmlXPathCmpNodesExt_8_9;
end
/* xmlXPathCmpNodesExt: %20*/
/*   %22 = load i32* %21, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_20_15))
begin
memory_controller_address_a = xmlXPathCmpNodesExt_20_21;
end
/* xmlXPathCmpNodesExt: %32*/
/*   %34 = load %struct.TYPE_4__** %33, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_32_20))
begin
memory_controller_address_a = xmlXPathCmpNodesExt_32_33;
end
/* xmlXPathCmpNodesExt: %.preheader*/
/*   %41 = load i32* %40, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader_27))
begin
memory_controller_address_a = xmlXPathCmpNodesExt__preheader_40;
end
/* xmlXPathCmpNodesExt: %.loopexit.thread*/
/*   %.pre11 = load i32* %.phi.trans.insert10, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit_thread_37))
begin
memory_controller_address_a = xmlXPathCmpNodesExt__loopexit_thread__phi_trans_insert10;
end
/* xmlXPathCmpNodesExt: %.loopexit.thread.thread*/
/*   %50 = load i32* %49, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit_thread_thread_41))
begin
memory_controller_address_a = xmlXPathCmpNodesExt__loopexit_thread_thread_49;
end
/* xmlXPathCmpNodesExt: %55*/
/*   %57 = load %struct.TYPE_4__** %56, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_55_48))
begin
memory_controller_address_a = xmlXPathCmpNodesExt_55_56;
end
/* xmlXPathCmpNodesExt: %.preheader17*/
/*   %64 = load i32* %63, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader17_55))
begin
memory_controller_address_a = xmlXPathCmpNodesExt__preheader17_63;
end
/* xmlXPathCmpNodesExt: %.loopexit18.thread*/
/*   %.pre = load i32* %.phi.trans.insert, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit18_thread_65))
begin
memory_controller_address_a = xmlXPathCmpNodesExt__loopexit18_thread__phi_trans_insert;
end
/* xmlXPathCmpNodesExt: %.loopexit18.thread.thread*/
/*   %73 = load i32* %72, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit18_thread_thread_69))
begin
memory_controller_address_a = xmlXPathCmpNodesExt__loopexit18_thread_thread_72;
end
/* xmlXPathCmpNodesExt: %83*/
/*   %85 = load i32* %84, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_83_80))
begin
memory_controller_address_a = xmlXPathCmpNodesExt_83_84;
end
/* xmlXPathCmpNodesExt: %._crit_edge72*/
/*   %101 = load i32* %100, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB___crit_edge72_98))
begin
memory_controller_address_a = xmlXPathCmpNodesExt___crit_edge72_100;
end
/* xmlXPathCmpNodesExt: %103*/
/*   %105 = load i32* %104, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_103_101))
begin
memory_controller_address_a = xmlXPathCmpNodesExt_103_104;
end
/* xmlXPathCmpNodesExt: %115*/
/*   %117 = load i32* %116, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_115_110))
begin
memory_controller_address_a = xmlXPathCmpNodesExt_115_116;
end
/* xmlXPathCmpNodesExt: %127*/
/*   %129 = load %struct.TYPE_4__** %128, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_127_115))
begin
memory_controller_address_a = xmlXPathCmpNodesExt_127_128;
end
/* xmlXPathCmpNodesExt: %131*/
/*   %133 = load %struct.TYPE_4__** %132, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_131_118))
begin
memory_controller_address_a = xmlXPathCmpNodesExt_131_132;
end
/* xmlXPathCmpNodesExt: %.preheader32*/
/*   %163 = load %struct.TYPE_4__** %162, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader32_149))
begin
memory_controller_address_a = xmlXPathCmpNodesExt__preheader32_162;
end
/* xmlXPathCmpNodesExt: %170*/
/*   %172 = load %struct.TYPE_4__** %171, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_170_153))
begin
memory_controller_address_a = xmlXPathCmpNodesExt_170_171;
end
/* xmlXPathCmpNodesExt: %174*/
/*   %176 = load %struct.TYPE_4__** %175, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_174_156))
begin
memory_controller_address_a = xmlXPathCmpNodesExt_174_175;
end
/* xmlXPathCmpNodesExt: %178*/
/*   %180 = load i32* %179, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_178_159))
begin
memory_controller_address_a = xmlXPathCmpNodesExt_178_179;
end
/* xmlXPathCmpNodesExt: %182*/
/*   %184 = load i32* %183, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_182_162))
begin
memory_controller_address_a = xmlXPathCmpNodesExt_182_183;
end
/* xmlXPathCmpNodesExt: %190*/
/*   %192 = load i32* %191, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_190_168))
begin
memory_controller_address_a = xmlXPathCmpNodesExt_190_191;
end
/* xmlXPathCmpNodesExt: %194*/
/*   %196 = load i32* %195, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_194_171))
begin
memory_controller_address_a = xmlXPathCmpNodesExt_194_195;
end
end
always @(*) begin
memory_controller_write_enable_a = 1'd0;
if ((cur_state == LEGUP_0))
begin
memory_controller_write_enable_a = 1'd0;
end
/* xmlXPathCmpNodesExt: %5*/
/*   %7 = load i32* %6, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_5_3))
begin
memory_controller_write_enable_a = 1'd0;
end
/* xmlXPathCmpNodesExt: %8*/
/*   %10 = load i32* %9, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_8_6))
begin
memory_controller_write_enable_a = 1'd0;
end
/* xmlXPathCmpNodesExt: %20*/
/*   %22 = load i32* %21, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_20_15))
begin
memory_controller_write_enable_a = 1'd0;
end
/* xmlXPathCmpNodesExt: %32*/
/*   %34 = load %struct.TYPE_4__** %33, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_32_20))
begin
memory_controller_write_enable_a = 1'd0;
end
/* xmlXPathCmpNodesExt: %.preheader*/
/*   %41 = load i32* %40, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader_27))
begin
memory_controller_write_enable_a = 1'd0;
end
/* xmlXPathCmpNodesExt: %.loopexit.thread*/
/*   %.pre11 = load i32* %.phi.trans.insert10, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit_thread_37))
begin
memory_controller_write_enable_a = 1'd0;
end
/* xmlXPathCmpNodesExt: %.loopexit.thread.thread*/
/*   %50 = load i32* %49, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit_thread_thread_41))
begin
memory_controller_write_enable_a = 1'd0;
end
/* xmlXPathCmpNodesExt: %55*/
/*   %57 = load %struct.TYPE_4__** %56, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_55_48))
begin
memory_controller_write_enable_a = 1'd0;
end
/* xmlXPathCmpNodesExt: %.preheader17*/
/*   %64 = load i32* %63, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader17_55))
begin
memory_controller_write_enable_a = 1'd0;
end
/* xmlXPathCmpNodesExt: %.loopexit18.thread*/
/*   %.pre = load i32* %.phi.trans.insert, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit18_thread_65))
begin
memory_controller_write_enable_a = 1'd0;
end
/* xmlXPathCmpNodesExt: %.loopexit18.thread.thread*/
/*   %73 = load i32* %72, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit18_thread_thread_69))
begin
memory_controller_write_enable_a = 1'd0;
end
/* xmlXPathCmpNodesExt: %83*/
/*   %85 = load i32* %84, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_83_80))
begin
memory_controller_write_enable_a = 1'd0;
end
/* xmlXPathCmpNodesExt: %._crit_edge72*/
/*   %101 = load i32* %100, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB___crit_edge72_98))
begin
memory_controller_write_enable_a = 1'd0;
end
/* xmlXPathCmpNodesExt: %103*/
/*   %105 = load i32* %104, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_103_101))
begin
memory_controller_write_enable_a = 1'd0;
end
/* xmlXPathCmpNodesExt: %115*/
/*   %117 = load i32* %116, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_115_110))
begin
memory_controller_write_enable_a = 1'd0;
end
/* xmlXPathCmpNodesExt: %127*/
/*   %129 = load %struct.TYPE_4__** %128, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_127_115))
begin
memory_controller_write_enable_a = 1'd0;
end
/* xmlXPathCmpNodesExt: %131*/
/*   %133 = load %struct.TYPE_4__** %132, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_131_118))
begin
memory_controller_write_enable_a = 1'd0;
end
/* xmlXPathCmpNodesExt: %.preheader32*/
/*   %163 = load %struct.TYPE_4__** %162, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader32_149))
begin
memory_controller_write_enable_a = 1'd0;
end
/* xmlXPathCmpNodesExt: %170*/
/*   %172 = load %struct.TYPE_4__** %171, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_170_153))
begin
memory_controller_write_enable_a = 1'd0;
end
/* xmlXPathCmpNodesExt: %174*/
/*   %176 = load %struct.TYPE_4__** %175, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_174_156))
begin
memory_controller_write_enable_a = 1'd0;
end
/* xmlXPathCmpNodesExt: %178*/
/*   %180 = load i32* %179, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_178_159))
begin
memory_controller_write_enable_a = 1'd0;
end
/* xmlXPathCmpNodesExt: %182*/
/*   %184 = load i32* %183, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_182_162))
begin
memory_controller_write_enable_a = 1'd0;
end
/* xmlXPathCmpNodesExt: %190*/
/*   %192 = load i32* %191, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_190_168))
begin
memory_controller_write_enable_a = 1'd0;
end
/* xmlXPathCmpNodesExt: %194*/
/*   %196 = load i32* %195, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_194_171))
begin
memory_controller_write_enable_a = 1'd0;
end
end
always @(*) begin
memory_controller_in_a = 1'd0;
if ((cur_state == LEGUP_0))
begin
memory_controller_in_a = 1'd0;
end
end
always @(*) begin
memory_controller_size_a = 1'd0;
if ((cur_state == LEGUP_0))
begin
memory_controller_size_a = 1'd0;
end
/* xmlXPathCmpNodesExt: %5*/
/*   %7 = load i32* %6, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_5_3))
begin
memory_controller_size_a = 2'd2;
end
/* xmlXPathCmpNodesExt: %8*/
/*   %10 = load i32* %9, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_8_6))
begin
memory_controller_size_a = 2'd2;
end
/* xmlXPathCmpNodesExt: %20*/
/*   %22 = load i32* %21, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_20_15))
begin
memory_controller_size_a = 2'd2;
end
/* xmlXPathCmpNodesExt: %32*/
/*   %34 = load %struct.TYPE_4__** %33, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_32_20))
begin
memory_controller_size_a = 2'd2;
end
/* xmlXPathCmpNodesExt: %.preheader*/
/*   %41 = load i32* %40, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader_27))
begin
memory_controller_size_a = 2'd2;
end
/* xmlXPathCmpNodesExt: %.loopexit.thread*/
/*   %.pre11 = load i32* %.phi.trans.insert10, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit_thread_37))
begin
memory_controller_size_a = 2'd2;
end
/* xmlXPathCmpNodesExt: %.loopexit.thread.thread*/
/*   %50 = load i32* %49, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit_thread_thread_41))
begin
memory_controller_size_a = 2'd2;
end
/* xmlXPathCmpNodesExt: %55*/
/*   %57 = load %struct.TYPE_4__** %56, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_55_48))
begin
memory_controller_size_a = 2'd2;
end
/* xmlXPathCmpNodesExt: %.preheader17*/
/*   %64 = load i32* %63, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader17_55))
begin
memory_controller_size_a = 2'd2;
end
/* xmlXPathCmpNodesExt: %.loopexit18.thread*/
/*   %.pre = load i32* %.phi.trans.insert, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit18_thread_65))
begin
memory_controller_size_a = 2'd2;
end
/* xmlXPathCmpNodesExt: %.loopexit18.thread.thread*/
/*   %73 = load i32* %72, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit18_thread_thread_69))
begin
memory_controller_size_a = 2'd2;
end
/* xmlXPathCmpNodesExt: %83*/
/*   %85 = load i32* %84, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_83_80))
begin
memory_controller_size_a = 2'd2;
end
/* xmlXPathCmpNodesExt: %._crit_edge72*/
/*   %101 = load i32* %100, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB___crit_edge72_98))
begin
memory_controller_size_a = 2'd2;
end
/* xmlXPathCmpNodesExt: %103*/
/*   %105 = load i32* %104, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_103_101))
begin
memory_controller_size_a = 2'd2;
end
/* xmlXPathCmpNodesExt: %115*/
/*   %117 = load i32* %116, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_115_110))
begin
memory_controller_size_a = 2'd2;
end
/* xmlXPathCmpNodesExt: %127*/
/*   %129 = load %struct.TYPE_4__** %128, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_127_115))
begin
memory_controller_size_a = 2'd2;
end
/* xmlXPathCmpNodesExt: %131*/
/*   %133 = load %struct.TYPE_4__** %132, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_131_118))
begin
memory_controller_size_a = 2'd2;
end
/* xmlXPathCmpNodesExt: %.preheader32*/
/*   %163 = load %struct.TYPE_4__** %162, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader32_149))
begin
memory_controller_size_a = 2'd2;
end
/* xmlXPathCmpNodesExt: %170*/
/*   %172 = load %struct.TYPE_4__** %171, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_170_153))
begin
memory_controller_size_a = 2'd2;
end
/* xmlXPathCmpNodesExt: %174*/
/*   %176 = load %struct.TYPE_4__** %175, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_174_156))
begin
memory_controller_size_a = 2'd2;
end
/* xmlXPathCmpNodesExt: %178*/
/*   %180 = load i32* %179, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_178_159))
begin
memory_controller_size_a = 2'd2;
end
/* xmlXPathCmpNodesExt: %182*/
/*   %184 = load i32* %183, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_182_162))
begin
memory_controller_size_a = 2'd2;
end
/* xmlXPathCmpNodesExt: %190*/
/*   %192 = load i32* %191, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_190_168))
begin
memory_controller_size_a = 2'd2;
end
/* xmlXPathCmpNodesExt: %194*/
/*   %196 = load i32* %195, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_194_171))
begin
memory_controller_size_a = 2'd2;
end
end
always @(*) begin
memory_controller_enable_b = 1'd0;
if ((cur_state == LEGUP_0))
begin
memory_controller_enable_b = 1'd0;
end
/* xmlXPathCmpNodesExt: %12*/
/*   %14 = load i32* %13, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_12_9))
begin
memory_controller_enable_b = 1'd1;
end
/* xmlXPathCmpNodesExt: %16*/
/*   %18 = load i32* %17, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_16_12))
begin
memory_controller_enable_b = 1'd1;
end
/* xmlXPathCmpNodesExt: %20*/
/*   %24 = load i32* %23, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_20_15))
begin
memory_controller_enable_b = 1'd1;
end
/* xmlXPathCmpNodesExt: %35*/
/*   %37 = load %struct.TYPE_4__** %36, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_35_23))
begin
memory_controller_enable_b = 1'd1;
end
/* xmlXPathCmpNodesExt: %43*/
/*   %45 = load %struct.TYPE_4__** %44, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_43_30))
begin
memory_controller_enable_b = 1'd1;
end
/* xmlXPathCmpNodesExt: %.loopexit*/
/*   %.1 = load %struct.TYPE_4__** %.1.in, align 4*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit_34))
begin
memory_controller_enable_b = 1'd1;
end
/* xmlXPathCmpNodesExt: %._crit_edge73*/
/*   %54 = load i32* %53, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB___crit_edge73_45))
begin
memory_controller_enable_b = 1'd1;
end
/* xmlXPathCmpNodesExt: %58*/
/*   %60 = load %struct.TYPE_4__** %59, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_58_51))
begin
memory_controller_enable_b = 1'd1;
end
/* xmlXPathCmpNodesExt: %66*/
/*   %68 = load %struct.TYPE_4__** %67, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_66_58))
begin
memory_controller_enable_b = 1'd1;
end
/* xmlXPathCmpNodesExt: %.loopexit18*/
/*   %.13 = load %struct.TYPE_4__** %.13.in, align 4*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit18_62))
begin
memory_controller_enable_b = 1'd1;
end
/* xmlXPathCmpNodesExt: %.preheader27*/
/*   %cur.0 = load %struct.TYPE_4__** %cur.0.in, align 4*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader27_76))
begin
memory_controller_enable_b = 1'd1;
end
/* xmlXPathCmpNodesExt: %.preheader24*/
/*   %cur.1 = load %struct.TYPE_4__** %cur.1.in, align 4*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader24_86))
begin
memory_controller_enable_b = 1'd1;
end
/* xmlXPathCmpNodesExt: %.preheader21*/
/*   %cur.2 = load %struct.TYPE_4__** %cur.2.in, align 4*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader21_93))
begin
memory_controller_enable_b = 1'd1;
end
/* xmlXPathCmpNodesExt: %107*/
/*   %109 = load i32* %108, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_107_104))
begin
memory_controller_enable_b = 1'd1;
end
/* xmlXPathCmpNodesExt: %111*/
/*   %113 = load i32* %112, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_111_107))
begin
memory_controller_enable_b = 1'd1;
end
/* xmlXPathCmpNodesExt: %115*/
/*   %119 = load i32* %118, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_115_110))
begin
memory_controller_enable_b = 1'd1;
end
/* xmlXPathCmpNodesExt: %.preheader49*/
/*   %137 = load %struct.TYPE_4__** %136, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader49_122))
begin
memory_controller_enable_b = 1'd1;
end
/* xmlXPathCmpNodesExt: %139*/
/*   %140 = load %struct.TYPE_4__** %136, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_139_126))
begin
memory_controller_enable_b = 1'd1;
end
/* xmlXPathCmpNodesExt: %.preheader45*/
/*   %146 = load %struct.TYPE_4__** %145, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader45_130))
begin
memory_controller_enable_b = 1'd1;
end
/* xmlXPathCmpNodesExt: %156*/
/*   %158 = load %struct.TYPE_4__** %157, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_156_141))
begin
memory_controller_enable_b = 1'd1;
end
/* xmlXPathCmpNodesExt: %159*/
/*   %161 = load %struct.TYPE_4__** %160, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_159_144))
begin
memory_controller_enable_b = 1'd1;
end
/* xmlXPathCmpNodesExt: %.preheader32*/
/*   %165 = load %struct.TYPE_4__** %164, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader32_149))
begin
memory_controller_enable_b = 1'd1;
end
/* xmlXPathCmpNodesExt: %186*/
/*   %188 = load i32* %187, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_186_165))
begin
memory_controller_enable_b = 1'd1;
end
/* xmlXPathCmpNodesExt: %194*/
/*   %198 = load i32* %197, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_194_171))
begin
memory_controller_enable_b = 1'd1;
end
/* xmlXPathCmpNodesExt: %.preheader29*/
/*   %cur.5 = load %struct.TYPE_4__** %cur.5.in, align 4*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader29_177))
begin
memory_controller_enable_b = 1'd1;
end
end
always @(*) begin
memory_controller_address_b = 1'd0;
if ((cur_state == LEGUP_0))
begin
memory_controller_address_b = 1'd0;
end
/* xmlXPathCmpNodesExt: %12*/
/*   %14 = load i32* %13, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_12_9))
begin
memory_controller_address_b = xmlXPathCmpNodesExt_12_13;
end
/* xmlXPathCmpNodesExt: %16*/
/*   %18 = load i32* %17, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_16_12))
begin
memory_controller_address_b = xmlXPathCmpNodesExt_16_17;
end
/* xmlXPathCmpNodesExt: %20*/
/*   %24 = load i32* %23, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_20_15))
begin
memory_controller_address_b = xmlXPathCmpNodesExt_20_23;
end
/* xmlXPathCmpNodesExt: %35*/
/*   %37 = load %struct.TYPE_4__** %36, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_35_23))
begin
memory_controller_address_b = xmlXPathCmpNodesExt_35_36;
end
/* xmlXPathCmpNodesExt: %43*/
/*   %45 = load %struct.TYPE_4__** %44, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_43_30))
begin
memory_controller_address_b = xmlXPathCmpNodesExt_43_44;
end
/* xmlXPathCmpNodesExt: %.loopexit*/
/*   %.1 = load %struct.TYPE_4__** %.1.in, align 4*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit_34))
begin
memory_controller_address_b = xmlXPathCmpNodesExt__loopexit__1_in;
end
/* xmlXPathCmpNodesExt: %._crit_edge73*/
/*   %54 = load i32* %53, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB___crit_edge73_45))
begin
memory_controller_address_b = xmlXPathCmpNodesExt___crit_edge73_53;
end
/* xmlXPathCmpNodesExt: %58*/
/*   %60 = load %struct.TYPE_4__** %59, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_58_51))
begin
memory_controller_address_b = xmlXPathCmpNodesExt_58_59;
end
/* xmlXPathCmpNodesExt: %66*/
/*   %68 = load %struct.TYPE_4__** %67, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_66_58))
begin
memory_controller_address_b = xmlXPathCmpNodesExt_66_67;
end
/* xmlXPathCmpNodesExt: %.loopexit18*/
/*   %.13 = load %struct.TYPE_4__** %.13.in, align 4*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit18_62))
begin
memory_controller_address_b = xmlXPathCmpNodesExt__loopexit18__13_in;
end
/* xmlXPathCmpNodesExt: %.preheader27*/
/*   %cur.0 = load %struct.TYPE_4__** %cur.0.in, align 4*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader27_76))
begin
memory_controller_address_b = xmlXPathCmpNodesExt__preheader27_cur_0_in;
end
/* xmlXPathCmpNodesExt: %.preheader24*/
/*   %cur.1 = load %struct.TYPE_4__** %cur.1.in, align 4*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader24_86))
begin
memory_controller_address_b = xmlXPathCmpNodesExt__preheader24_cur_1_in;
end
/* xmlXPathCmpNodesExt: %.preheader21*/
/*   %cur.2 = load %struct.TYPE_4__** %cur.2.in, align 4*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader21_93))
begin
memory_controller_address_b = xmlXPathCmpNodesExt__preheader21_cur_2_in;
end
/* xmlXPathCmpNodesExt: %107*/
/*   %109 = load i32* %108, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_107_104))
begin
memory_controller_address_b = xmlXPathCmpNodesExt_107_108;
end
/* xmlXPathCmpNodesExt: %111*/
/*   %113 = load i32* %112, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_111_107))
begin
memory_controller_address_b = xmlXPathCmpNodesExt_111_112;
end
/* xmlXPathCmpNodesExt: %115*/
/*   %119 = load i32* %118, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_115_110))
begin
memory_controller_address_b = xmlXPathCmpNodesExt_115_118;
end
/* xmlXPathCmpNodesExt: %.preheader49*/
/*   %137 = load %struct.TYPE_4__** %136, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader49_122))
begin
memory_controller_address_b = xmlXPathCmpNodesExt__preheader49_136;
end
/* xmlXPathCmpNodesExt: %139*/
/*   %140 = load %struct.TYPE_4__** %136, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_139_126))
begin
memory_controller_address_b = xmlXPathCmpNodesExt__preheader49_136_reg;
end
/* xmlXPathCmpNodesExt: %.preheader45*/
/*   %146 = load %struct.TYPE_4__** %145, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader45_130))
begin
memory_controller_address_b = xmlXPathCmpNodesExt__preheader45_145;
end
/* xmlXPathCmpNodesExt: %156*/
/*   %158 = load %struct.TYPE_4__** %157, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_156_141))
begin
memory_controller_address_b = xmlXPathCmpNodesExt_156_157;
end
/* xmlXPathCmpNodesExt: %159*/
/*   %161 = load %struct.TYPE_4__** %160, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_159_144))
begin
memory_controller_address_b = xmlXPathCmpNodesExt_159_160;
end
/* xmlXPathCmpNodesExt: %.preheader32*/
/*   %165 = load %struct.TYPE_4__** %164, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader32_149))
begin
memory_controller_address_b = xmlXPathCmpNodesExt__preheader32_164;
end
/* xmlXPathCmpNodesExt: %186*/
/*   %188 = load i32* %187, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_186_165))
begin
memory_controller_address_b = xmlXPathCmpNodesExt_186_187;
end
/* xmlXPathCmpNodesExt: %194*/
/*   %198 = load i32* %197, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_194_171))
begin
memory_controller_address_b = xmlXPathCmpNodesExt_194_197;
end
/* xmlXPathCmpNodesExt: %.preheader29*/
/*   %cur.5 = load %struct.TYPE_4__** %cur.5.in, align 4*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader29_177))
begin
memory_controller_address_b = xmlXPathCmpNodesExt__preheader29_cur_5_in;
end
end
always @(*) begin
memory_controller_write_enable_b = 1'd0;
if ((cur_state == LEGUP_0))
begin
memory_controller_write_enable_b = 1'd0;
end
/* xmlXPathCmpNodesExt: %12*/
/*   %14 = load i32* %13, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_12_9))
begin
memory_controller_write_enable_b = 1'd0;
end
/* xmlXPathCmpNodesExt: %16*/
/*   %18 = load i32* %17, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_16_12))
begin
memory_controller_write_enable_b = 1'd0;
end
/* xmlXPathCmpNodesExt: %20*/
/*   %24 = load i32* %23, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_20_15))
begin
memory_controller_write_enable_b = 1'd0;
end
/* xmlXPathCmpNodesExt: %35*/
/*   %37 = load %struct.TYPE_4__** %36, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_35_23))
begin
memory_controller_write_enable_b = 1'd0;
end
/* xmlXPathCmpNodesExt: %43*/
/*   %45 = load %struct.TYPE_4__** %44, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_43_30))
begin
memory_controller_write_enable_b = 1'd0;
end
/* xmlXPathCmpNodesExt: %.loopexit*/
/*   %.1 = load %struct.TYPE_4__** %.1.in, align 4*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit_34))
begin
memory_controller_write_enable_b = 1'd0;
end
/* xmlXPathCmpNodesExt: %._crit_edge73*/
/*   %54 = load i32* %53, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB___crit_edge73_45))
begin
memory_controller_write_enable_b = 1'd0;
end
/* xmlXPathCmpNodesExt: %58*/
/*   %60 = load %struct.TYPE_4__** %59, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_58_51))
begin
memory_controller_write_enable_b = 1'd0;
end
/* xmlXPathCmpNodesExt: %66*/
/*   %68 = load %struct.TYPE_4__** %67, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_66_58))
begin
memory_controller_write_enable_b = 1'd0;
end
/* xmlXPathCmpNodesExt: %.loopexit18*/
/*   %.13 = load %struct.TYPE_4__** %.13.in, align 4*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit18_62))
begin
memory_controller_write_enable_b = 1'd0;
end
/* xmlXPathCmpNodesExt: %.preheader27*/
/*   %cur.0 = load %struct.TYPE_4__** %cur.0.in, align 4*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader27_76))
begin
memory_controller_write_enable_b = 1'd0;
end
/* xmlXPathCmpNodesExt: %.preheader24*/
/*   %cur.1 = load %struct.TYPE_4__** %cur.1.in, align 4*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader24_86))
begin
memory_controller_write_enable_b = 1'd0;
end
/* xmlXPathCmpNodesExt: %.preheader21*/
/*   %cur.2 = load %struct.TYPE_4__** %cur.2.in, align 4*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader21_93))
begin
memory_controller_write_enable_b = 1'd0;
end
/* xmlXPathCmpNodesExt: %107*/
/*   %109 = load i32* %108, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_107_104))
begin
memory_controller_write_enable_b = 1'd0;
end
/* xmlXPathCmpNodesExt: %111*/
/*   %113 = load i32* %112, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_111_107))
begin
memory_controller_write_enable_b = 1'd0;
end
/* xmlXPathCmpNodesExt: %115*/
/*   %119 = load i32* %118, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_115_110))
begin
memory_controller_write_enable_b = 1'd0;
end
/* xmlXPathCmpNodesExt: %.preheader49*/
/*   %137 = load %struct.TYPE_4__** %136, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader49_122))
begin
memory_controller_write_enable_b = 1'd0;
end
/* xmlXPathCmpNodesExt: %139*/
/*   %140 = load %struct.TYPE_4__** %136, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_139_126))
begin
memory_controller_write_enable_b = 1'd0;
end
/* xmlXPathCmpNodesExt: %.preheader45*/
/*   %146 = load %struct.TYPE_4__** %145, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader45_130))
begin
memory_controller_write_enable_b = 1'd0;
end
/* xmlXPathCmpNodesExt: %156*/
/*   %158 = load %struct.TYPE_4__** %157, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_156_141))
begin
memory_controller_write_enable_b = 1'd0;
end
/* xmlXPathCmpNodesExt: %159*/
/*   %161 = load %struct.TYPE_4__** %160, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_159_144))
begin
memory_controller_write_enable_b = 1'd0;
end
/* xmlXPathCmpNodesExt: %.preheader32*/
/*   %165 = load %struct.TYPE_4__** %164, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader32_149))
begin
memory_controller_write_enable_b = 1'd0;
end
/* xmlXPathCmpNodesExt: %186*/
/*   %188 = load i32* %187, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_186_165))
begin
memory_controller_write_enable_b = 1'd0;
end
/* xmlXPathCmpNodesExt: %194*/
/*   %198 = load i32* %197, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_194_171))
begin
memory_controller_write_enable_b = 1'd0;
end
/* xmlXPathCmpNodesExt: %.preheader29*/
/*   %cur.5 = load %struct.TYPE_4__** %cur.5.in, align 4*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader29_177))
begin
memory_controller_write_enable_b = 1'd0;
end
end
always @(*) begin
memory_controller_in_b = 1'd0;
if ((cur_state == LEGUP_0))
begin
memory_controller_in_b = 1'd0;
end
end
always @(*) begin
memory_controller_size_b = 1'd0;
if ((cur_state == LEGUP_0))
begin
memory_controller_size_b = 1'd0;
end
/* xmlXPathCmpNodesExt: %12*/
/*   %14 = load i32* %13, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_12_9))
begin
memory_controller_size_b = 2'd2;
end
/* xmlXPathCmpNodesExt: %16*/
/*   %18 = load i32* %17, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_16_12))
begin
memory_controller_size_b = 2'd2;
end
/* xmlXPathCmpNodesExt: %20*/
/*   %24 = load i32* %23, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_20_15))
begin
memory_controller_size_b = 2'd2;
end
/* xmlXPathCmpNodesExt: %35*/
/*   %37 = load %struct.TYPE_4__** %36, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_35_23))
begin
memory_controller_size_b = 2'd2;
end
/* xmlXPathCmpNodesExt: %43*/
/*   %45 = load %struct.TYPE_4__** %44, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_43_30))
begin
memory_controller_size_b = 2'd2;
end
/* xmlXPathCmpNodesExt: %.loopexit*/
/*   %.1 = load %struct.TYPE_4__** %.1.in, align 4*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit_34))
begin
memory_controller_size_b = 2'd2;
end
/* xmlXPathCmpNodesExt: %._crit_edge73*/
/*   %54 = load i32* %53, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB___crit_edge73_45))
begin
memory_controller_size_b = 2'd2;
end
/* xmlXPathCmpNodesExt: %58*/
/*   %60 = load %struct.TYPE_4__** %59, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_58_51))
begin
memory_controller_size_b = 2'd2;
end
/* xmlXPathCmpNodesExt: %66*/
/*   %68 = load %struct.TYPE_4__** %67, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_66_58))
begin
memory_controller_size_b = 2'd2;
end
/* xmlXPathCmpNodesExt: %.loopexit18*/
/*   %.13 = load %struct.TYPE_4__** %.13.in, align 4*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit18_62))
begin
memory_controller_size_b = 2'd2;
end
/* xmlXPathCmpNodesExt: %.preheader27*/
/*   %cur.0 = load %struct.TYPE_4__** %cur.0.in, align 4*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader27_76))
begin
memory_controller_size_b = 2'd2;
end
/* xmlXPathCmpNodesExt: %.preheader24*/
/*   %cur.1 = load %struct.TYPE_4__** %cur.1.in, align 4*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader24_86))
begin
memory_controller_size_b = 2'd2;
end
/* xmlXPathCmpNodesExt: %.preheader21*/
/*   %cur.2 = load %struct.TYPE_4__** %cur.2.in, align 4*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader21_93))
begin
memory_controller_size_b = 2'd2;
end
/* xmlXPathCmpNodesExt: %107*/
/*   %109 = load i32* %108, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_107_104))
begin
memory_controller_size_b = 2'd2;
end
/* xmlXPathCmpNodesExt: %111*/
/*   %113 = load i32* %112, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_111_107))
begin
memory_controller_size_b = 2'd2;
end
/* xmlXPathCmpNodesExt: %115*/
/*   %119 = load i32* %118, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_115_110))
begin
memory_controller_size_b = 2'd2;
end
/* xmlXPathCmpNodesExt: %.preheader49*/
/*   %137 = load %struct.TYPE_4__** %136, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader49_122))
begin
memory_controller_size_b = 2'd2;
end
/* xmlXPathCmpNodesExt: %139*/
/*   %140 = load %struct.TYPE_4__** %136, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_139_126))
begin
memory_controller_size_b = 2'd2;
end
/* xmlXPathCmpNodesExt: %.preheader45*/
/*   %146 = load %struct.TYPE_4__** %145, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader45_130))
begin
memory_controller_size_b = 2'd2;
end
/* xmlXPathCmpNodesExt: %156*/
/*   %158 = load %struct.TYPE_4__** %157, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_156_141))
begin
memory_controller_size_b = 2'd2;
end
/* xmlXPathCmpNodesExt: %159*/
/*   %161 = load %struct.TYPE_4__** %160, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_159_144))
begin
memory_controller_size_b = 2'd2;
end
/* xmlXPathCmpNodesExt: %.preheader32*/
/*   %165 = load %struct.TYPE_4__** %164, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader32_149))
begin
memory_controller_size_b = 2'd2;
end
/* xmlXPathCmpNodesExt: %186*/
/*   %188 = load i32* %187, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_186_165))
begin
memory_controller_size_b = 2'd2;
end
/* xmlXPathCmpNodesExt: %194*/
/*   %198 = load i32* %197, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB_194_171))
begin
memory_controller_size_b = 2'd2;
end
/* xmlXPathCmpNodesExt: %.preheader29*/
/*   %cur.5 = load %struct.TYPE_4__** %cur.5.in, align 4*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__preheader29_177))
begin
memory_controller_size_b = 2'd2;
end
end
always @(posedge clk) begin
if ((cur_state == LEGUP_0))
begin
return_val <= 0;
if (reset == 1'b0 && ^(0) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to return_val"); $finish; end
end
/* xmlXPathCmpNodesExt: %.loopexit23*/
/*   ret i32 %.0*/
if ((cur_state == LEGUP_F_xmlXPathCmpNodesExt_BB__loopexit23_188))
begin
return_val <= xmlXPathCmpNodesExt__loopexit23__0_reg;
if (reset == 1'b0 && ^(xmlXPathCmpNodesExt__loopexit23__0_reg) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to return_val"); $finish; end
end
end

endmodule 
`timescale 1 ns / 1 ns
module main
(
	clk,
	clk2x,
	clk1x_follower,
	reset,
	start,
	finish,
	memory_controller_enable_a,
	memory_controller_address_a,
	memory_controller_write_enable_a,
	memory_controller_in_a,
	memory_controller_size_a,
	memory_controller_out_a,
	memory_controller_enable_b,
	memory_controller_address_b,
	memory_controller_write_enable_b,
	memory_controller_in_b,
	memory_controller_size_b,
	memory_controller_out_b,
	memory_controller_waitrequest,
	return_val
);

parameter [1:0] LEGUP_0 = 2'd0;
parameter [1:0] LEGUP_F_main_BB_0_1 = 2'd1;
parameter [1:0] LEGUP_F_main_BB_0_3 = 2'd3;
parameter [1:0] LEGUP_function_call_2 = 2'd2;

input  clk;
input  clk2x;
input  clk1x_follower;
input  reset;
input  start;
output reg  finish;
output reg  memory_controller_enable_a;
output reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] memory_controller_address_a;
output reg  memory_controller_write_enable_a;
output reg [`MEMORY_CONTROLLER_DATA_SIZE-1:0] memory_controller_in_a;
output reg [1:0] memory_controller_size_a;
input [`MEMORY_CONTROLLER_DATA_SIZE-1:0] memory_controller_out_a;
output reg  memory_controller_enable_b;
output reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] memory_controller_address_b;
output reg  memory_controller_write_enable_b;
output reg [`MEMORY_CONTROLLER_DATA_SIZE-1:0] memory_controller_in_b;
output reg [1:0] memory_controller_size_b;
input [`MEMORY_CONTROLLER_DATA_SIZE-1:0] memory_controller_out_b;
input  memory_controller_waitrequest;
output reg [31:0] return_val;
reg [1:0] cur_state;
reg [31:0] main_0_1;
reg [31:0] main_0_1_reg;
wire [2:0] _str_address_a;
wire  _str_write_enable_a;
wire [7:0] _str_in_a;
wire [7:0] _str_out_a;
wire [2:0] _str_address_b;
wire  _str_write_enable_b;
wire [7:0] _str_in_b;
wire [7:0] _str_out_b;
wire [4:0] _str1_address_a;
wire  _str1_write_enable_a;
wire [7:0] _str1_in_a;
wire [7:0] _str1_out_a;
wire [4:0] _str1_address_b;
wire  _str1_write_enable_b;
wire [7:0] _str1_in_b;
wire [7:0] _str1_out_b;
reg  xmlXPathCmpNodesExt_start;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] xmlXPathCmpNodesExt_arg_node1;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] xmlXPathCmpNodesExt_arg_node2;
wire  xmlXPathCmpNodesExt_memory_controller_enable_a;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] xmlXPathCmpNodesExt_memory_controller_address_a;
wire  xmlXPathCmpNodesExt_memory_controller_write_enable_a;
wire [`MEMORY_CONTROLLER_DATA_SIZE-1:0] xmlXPathCmpNodesExt_memory_controller_in_a;
reg [`MEMORY_CONTROLLER_DATA_SIZE-1:0] xmlXPathCmpNodesExt_memory_controller_out_a;
wire [1:0] xmlXPathCmpNodesExt_memory_controller_size_a;
wire  xmlXPathCmpNodesExt_memory_controller_enable_b;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] xmlXPathCmpNodesExt_memory_controller_address_b;
wire  xmlXPathCmpNodesExt_memory_controller_write_enable_b;
wire [`MEMORY_CONTROLLER_DATA_SIZE-1:0] xmlXPathCmpNodesExt_memory_controller_in_b;
reg [`MEMORY_CONTROLLER_DATA_SIZE-1:0] xmlXPathCmpNodesExt_memory_controller_out_b;
wire [1:0] xmlXPathCmpNodesExt_memory_controller_size_b;
reg  xmlXPathCmpNodesExt_memory_controller_waitrequest;
wire  xmlXPathCmpNodesExt_finish;
reg  xmlXPathCmpNodesExt_finish_final;
wire [31:0] xmlXPathCmpNodesExt_return_val;
reg  legup_function_call;
wire [15:0] legup_pthreadpoll_threadID;


xmlXPathCmpNodesExt xmlXPathCmpNodesExt_inst (
	.memory_controller_enable_a (xmlXPathCmpNodesExt_memory_controller_enable_a),
	.memory_controller_address_a (xmlXPathCmpNodesExt_memory_controller_address_a),
	.memory_controller_write_enable_a (xmlXPathCmpNodesExt_memory_controller_write_enable_a),
	.memory_controller_in_a (xmlXPathCmpNodesExt_memory_controller_in_a),
	.memory_controller_size_a (xmlXPathCmpNodesExt_memory_controller_size_a),
	.memory_controller_out_a (memory_controller_out_a[`MEMORY_CONTROLLER_DATA_SIZE-1:0]),
	.memory_controller_enable_b (xmlXPathCmpNodesExt_memory_controller_enable_b),
	.memory_controller_address_b (xmlXPathCmpNodesExt_memory_controller_address_b),
	.memory_controller_write_enable_b (xmlXPathCmpNodesExt_memory_controller_write_enable_b),
	.memory_controller_in_b (xmlXPathCmpNodesExt_memory_controller_in_b),
	.memory_controller_size_b (xmlXPathCmpNodesExt_memory_controller_size_b),
	.memory_controller_out_b (memory_controller_out_b[`MEMORY_CONTROLLER_DATA_SIZE-1:0]),
	.memory_controller_waitrequest (memory_controller_waitrequest),
	.clk (clk),
	.clk2x (clk2x),
	.clk1x_follower (clk1x_follower),
	.reset (reset),
	.start (xmlXPathCmpNodesExt_start),
	.finish (xmlXPathCmpNodesExt_finish),
	.return_val (xmlXPathCmpNodesExt_return_val),
	.arg_node1 (xmlXPathCmpNodesExt_arg_node1),
	.arg_node2 (xmlXPathCmpNodesExt_arg_node2)
);


// Local Rams


always @(posedge clk) begin
if (((cur_state == LEGUP_0) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_0;
if (reset == 1'b0 && ^(LEGUP_0) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_0) & (memory_controller_waitrequest == 1'd0)) & (start == 1'd1)))
begin
cur_state <= LEGUP_F_main_BB_0_1;
if (reset == 1'b0 && ^(LEGUP_F_main_BB_0_1) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_0) & (memory_controller_waitrequest == 1'd0)) & (start == 1'd0)))
begin
cur_state <= LEGUP_0;
if (reset == 1'b0 && ^(LEGUP_0) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_main_BB_0_1) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_main_BB_0_1;
if (reset == 1'b0 && ^(LEGUP_F_main_BB_0_1) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_main_BB_0_1) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_function_call_2;
if (reset == 1'b0 && ^(LEGUP_function_call_2) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_function_call_2) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_function_call_2;
if (reset == 1'b0 && ^(LEGUP_function_call_2) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_function_call_2) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_finish_final == 1'd1)))
begin
cur_state <= LEGUP_F_main_BB_0_3;
if (reset == 1'b0 && ^(LEGUP_F_main_BB_0_3) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_function_call_2) & (memory_controller_waitrequest == 1'd0)) & (xmlXPathCmpNodesExt_finish_final == 1'd0)))
begin
cur_state <= LEGUP_function_call_2;
if (reset == 1'b0 && ^(LEGUP_function_call_2) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_main_BB_0_3) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_main_BB_0_3;
if (reset == 1'b0 && ^(LEGUP_F_main_BB_0_3) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_main_BB_0_3) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_0;
if (reset == 1'b0 && ^(LEGUP_0) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((reset == 1'd1))
begin
cur_state <= 2'd0;
if (reset == 1'b0 && ^(2'd0) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
end
always @(*) begin
/* main: %0*/
/*   %1 = tail call i32 @xmlXPathCmpNodesExt(%struct.TYPE_4__* undef, %struct.TYPE_4__* undef)*/
begin
main_0_1 = xmlXPathCmpNodesExt_return_val;
end
end
always @(posedge clk) begin
/* main: %0*/
/*   %1 = tail call i32 @xmlXPathCmpNodesExt(%struct.TYPE_4__* undef, %struct.TYPE_4__* undef)*/
if ((cur_state == LEGUP_function_call_2))
begin
main_0_1_reg <= main_0_1;
if (reset == 1'b0 && ^(main_0_1) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to main_0_1_reg"); $finish; end
end
end
always @(posedge clk) begin
/* main: %0*/
/*   %1 = tail call i32 @xmlXPathCmpNodesExt(%struct.TYPE_4__* undef, %struct.TYPE_4__* undef)*/
if ((cur_state == LEGUP_F_main_BB_0_1))
begin
xmlXPathCmpNodesExt_start <= 1'd1;
if (reset == 1'b0 && ^(1'd1) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt_start"); $finish; end
end
/* main: %0*/
/*   %1 = tail call i32 @xmlXPathCmpNodesExt(%struct.TYPE_4__* undef, %struct.TYPE_4__* undef)*/
if ((cur_state == LEGUP_function_call_2))
begin
xmlXPathCmpNodesExt_start <= 1'd0;
if (reset == 1'b0 && ^(1'd0) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt_start"); $finish; end
end
end
always @(posedge clk) begin
/* main: %0*/
/*   %1 = tail call i32 @xmlXPathCmpNodesExt(%struct.TYPE_4__* undef, %struct.TYPE_4__* undef)*/
if ((cur_state == LEGUP_F_main_BB_0_1))
begin
xmlXPathCmpNodesExt_arg_node1 <= 0;
if (reset == 1'b0 && ^(0) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt_arg_node1"); $finish; end
end
end
always @(posedge clk) begin
/* main: %0*/
/*   %1 = tail call i32 @xmlXPathCmpNodesExt(%struct.TYPE_4__* undef, %struct.TYPE_4__* undef)*/
if ((cur_state == LEGUP_F_main_BB_0_1))
begin
xmlXPathCmpNodesExt_arg_node2 <= 0;
if (reset == 1'b0 && ^(0) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to xmlXPathCmpNodesExt_arg_node2"); $finish; end
end
end
always @(*) begin
/* main: %0*/
/*   %1 = tail call i32 @xmlXPathCmpNodesExt(%struct.TYPE_4__* undef, %struct.TYPE_4__* undef)*/
begin
xmlXPathCmpNodesExt_memory_controller_out_a = memory_controller_out_a;
end
end
always @(*) begin
/* main: %0*/
/*   %1 = tail call i32 @xmlXPathCmpNodesExt(%struct.TYPE_4__* undef, %struct.TYPE_4__* undef)*/
begin
xmlXPathCmpNodesExt_memory_controller_out_b = memory_controller_out_b;
end
end
always @(*) begin
xmlXPathCmpNodesExt_memory_controller_waitrequest = memory_controller_waitrequest;
end
always @(*) begin
xmlXPathCmpNodesExt_finish_final = xmlXPathCmpNodesExt_finish;
end
always @(*) begin
legup_function_call = 1'd0;
/* main: %0*/
/*   %1 = tail call i32 @xmlXPathCmpNodesExt(%struct.TYPE_4__* undef, %struct.TYPE_4__* undef)*/
if ((cur_state == LEGUP_function_call_2))
begin
legup_function_call = 1'd1;
end
end
always @(posedge clk) begin
if ((cur_state == LEGUP_0))
begin
finish <= 1'd0;
if (reset == 1'b0 && ^(1'd0) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to finish"); $finish; end
end
/* main: %0*/
/*   ret i32 0*/
if ((cur_state == LEGUP_F_main_BB_0_3))
begin
finish <= (memory_controller_waitrequest == 1'd0);
if (reset == 1'b0 && ^((memory_controller_waitrequest == 1'd0)) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to finish"); $finish; end
end
end
always @(*) begin
memory_controller_enable_a = 1'd0;
/* main: %0*/
/*   %1 = tail call i32 @xmlXPathCmpNodesExt(%struct.TYPE_4__* undef, %struct.TYPE_4__* undef)*/
if ((cur_state == LEGUP_function_call_2))
begin
memory_controller_enable_a = xmlXPathCmpNodesExt_memory_controller_enable_a;
end
/* main: %0*/
/*   %1 = tail call i32 @xmlXPathCmpNodesExt(%struct.TYPE_4__* undef, %struct.TYPE_4__* undef)*/
if ((cur_state == LEGUP_function_call_2))
begin
memory_controller_enable_a = xmlXPathCmpNodesExt_memory_controller_enable_a;
end
end
always @(*) begin
memory_controller_address_a = 1'd0;
/* main: %0*/
/*   %1 = tail call i32 @xmlXPathCmpNodesExt(%struct.TYPE_4__* undef, %struct.TYPE_4__* undef)*/
if ((cur_state == LEGUP_function_call_2))
begin
memory_controller_address_a[`MEMORY_CONTROLLER_ADDR_SIZE-1:0] = xmlXPathCmpNodesExt_memory_controller_address_a;
end
/* main: %0*/
/*   %1 = tail call i32 @xmlXPathCmpNodesExt(%struct.TYPE_4__* undef, %struct.TYPE_4__* undef)*/
if ((cur_state == LEGUP_function_call_2))
begin
memory_controller_address_a[`MEMORY_CONTROLLER_ADDR_SIZE-1:0] = xmlXPathCmpNodesExt_memory_controller_address_a;
end
end
always @(*) begin
memory_controller_write_enable_a = 1'd0;
/* main: %0*/
/*   %1 = tail call i32 @xmlXPathCmpNodesExt(%struct.TYPE_4__* undef, %struct.TYPE_4__* undef)*/
if ((cur_state == LEGUP_function_call_2))
begin
memory_controller_write_enable_a = xmlXPathCmpNodesExt_memory_controller_write_enable_a;
end
/* main: %0*/
/*   %1 = tail call i32 @xmlXPathCmpNodesExt(%struct.TYPE_4__* undef, %struct.TYPE_4__* undef)*/
if ((cur_state == LEGUP_function_call_2))
begin
memory_controller_write_enable_a = xmlXPathCmpNodesExt_memory_controller_write_enable_a;
end
end
always @(*) begin
memory_controller_in_a = 1'd0;
/* main: %0*/
/*   %1 = tail call i32 @xmlXPathCmpNodesExt(%struct.TYPE_4__* undef, %struct.TYPE_4__* undef)*/
if ((cur_state == LEGUP_function_call_2))
begin
memory_controller_in_a[`MEMORY_CONTROLLER_DATA_SIZE-1:0] = xmlXPathCmpNodesExt_memory_controller_in_a;
end
/* main: %0*/
/*   %1 = tail call i32 @xmlXPathCmpNodesExt(%struct.TYPE_4__* undef, %struct.TYPE_4__* undef)*/
if ((cur_state == LEGUP_function_call_2))
begin
memory_controller_in_a[`MEMORY_CONTROLLER_DATA_SIZE-1:0] = xmlXPathCmpNodesExt_memory_controller_in_a;
end
end
always @(*) begin
memory_controller_size_a = 1'd0;
/* main: %0*/
/*   %1 = tail call i32 @xmlXPathCmpNodesExt(%struct.TYPE_4__* undef, %struct.TYPE_4__* undef)*/
if ((cur_state == LEGUP_function_call_2))
begin
memory_controller_size_a[1:0] = xmlXPathCmpNodesExt_memory_controller_size_a;
end
/* main: %0*/
/*   %1 = tail call i32 @xmlXPathCmpNodesExt(%struct.TYPE_4__* undef, %struct.TYPE_4__* undef)*/
if ((cur_state == LEGUP_function_call_2))
begin
memory_controller_size_a[1:0] = xmlXPathCmpNodesExt_memory_controller_size_a;
end
end
always @(*) begin
memory_controller_enable_b = 1'd0;
/* main: %0*/
/*   %1 = tail call i32 @xmlXPathCmpNodesExt(%struct.TYPE_4__* undef, %struct.TYPE_4__* undef)*/
if ((cur_state == LEGUP_function_call_2))
begin
memory_controller_enable_b = xmlXPathCmpNodesExt_memory_controller_enable_b;
end
/* main: %0*/
/*   %1 = tail call i32 @xmlXPathCmpNodesExt(%struct.TYPE_4__* undef, %struct.TYPE_4__* undef)*/
if ((cur_state == LEGUP_function_call_2))
begin
memory_controller_enable_b = xmlXPathCmpNodesExt_memory_controller_enable_b;
end
end
always @(*) begin
memory_controller_address_b = 1'd0;
/* main: %0*/
/*   %1 = tail call i32 @xmlXPathCmpNodesExt(%struct.TYPE_4__* undef, %struct.TYPE_4__* undef)*/
if ((cur_state == LEGUP_function_call_2))
begin
memory_controller_address_b[`MEMORY_CONTROLLER_ADDR_SIZE-1:0] = xmlXPathCmpNodesExt_memory_controller_address_b;
end
/* main: %0*/
/*   %1 = tail call i32 @xmlXPathCmpNodesExt(%struct.TYPE_4__* undef, %struct.TYPE_4__* undef)*/
if ((cur_state == LEGUP_function_call_2))
begin
memory_controller_address_b[`MEMORY_CONTROLLER_ADDR_SIZE-1:0] = xmlXPathCmpNodesExt_memory_controller_address_b;
end
end
always @(*) begin
memory_controller_write_enable_b = 1'd0;
/* main: %0*/
/*   %1 = tail call i32 @xmlXPathCmpNodesExt(%struct.TYPE_4__* undef, %struct.TYPE_4__* undef)*/
if ((cur_state == LEGUP_function_call_2))
begin
memory_controller_write_enable_b = xmlXPathCmpNodesExt_memory_controller_write_enable_b;
end
/* main: %0*/
/*   %1 = tail call i32 @xmlXPathCmpNodesExt(%struct.TYPE_4__* undef, %struct.TYPE_4__* undef)*/
if ((cur_state == LEGUP_function_call_2))
begin
memory_controller_write_enable_b = xmlXPathCmpNodesExt_memory_controller_write_enable_b;
end
end
always @(*) begin
memory_controller_in_b = 1'd0;
/* main: %0*/
/*   %1 = tail call i32 @xmlXPathCmpNodesExt(%struct.TYPE_4__* undef, %struct.TYPE_4__* undef)*/
if ((cur_state == LEGUP_function_call_2))
begin
memory_controller_in_b[`MEMORY_CONTROLLER_DATA_SIZE-1:0] = xmlXPathCmpNodesExt_memory_controller_in_b;
end
/* main: %0*/
/*   %1 = tail call i32 @xmlXPathCmpNodesExt(%struct.TYPE_4__* undef, %struct.TYPE_4__* undef)*/
if ((cur_state == LEGUP_function_call_2))
begin
memory_controller_in_b[`MEMORY_CONTROLLER_DATA_SIZE-1:0] = xmlXPathCmpNodesExt_memory_controller_in_b;
end
end
always @(*) begin
memory_controller_size_b = 1'd0;
/* main: %0*/
/*   %1 = tail call i32 @xmlXPathCmpNodesExt(%struct.TYPE_4__* undef, %struct.TYPE_4__* undef)*/
if ((cur_state == LEGUP_function_call_2))
begin
memory_controller_size_b[1:0] = xmlXPathCmpNodesExt_memory_controller_size_b;
end
/* main: %0*/
/*   %1 = tail call i32 @xmlXPathCmpNodesExt(%struct.TYPE_4__* undef, %struct.TYPE_4__* undef)*/
if ((cur_state == LEGUP_function_call_2))
begin
memory_controller_size_b[1:0] = xmlXPathCmpNodesExt_memory_controller_size_b;
end
end
always @(posedge clk) begin
if ((cur_state == LEGUP_0))
begin
return_val <= 0;
if (reset == 1'b0 && ^(0) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to return_val"); $finish; end
end
/* main: %0*/
/*   ret i32 0*/
if ((cur_state == LEGUP_F_main_BB_0_3))
begin
return_val <= 32'd0;
if (reset == 1'b0 && ^(32'd0) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to return_val"); $finish; end
end
end

endmodule 
module ram_dual_port
(
	clk,
	address_a,
	address_b,
	wren_a,
	wren_b,
	data_a,
	data_b,
	byteena_a,
	byteena_b,
	q_a,
	q_b
);

parameter  width_a = 1'd0;
parameter  width_b = 1'd0;
parameter  widthad_a = 1'd0;
parameter  widthad_b = 1'd0;
parameter  numwords_a = 1'd0;
parameter  numwords_b = 1'd0;
parameter  init_file = "UNUSED.mif";
parameter  width_be_a = 1'd0;
parameter  width_be_b = 1'd0;
parameter  latency = 1;

input  clk;
input [(widthad_a-1):0] address_a;
input [(widthad_b-1):0] address_b;
output wire [(width_a-1):0] q_a;
output wire [(width_b-1):0] q_b;
reg [(width_a-1):0] q_a_wire;
reg [(width_b-1):0] q_b_wire;
input  wren_a;
input  wren_b;
input [(width_a-1):0] data_a;
input [(width_b-1):0] data_b;
// byte enable is unsupported by inferred RAMs
input [width_be_a-1:0] byteena_a;
input [width_be_b-1:0] byteena_b;

(* ramstyle = "no_rw_check", ram_init_file = init_file *) reg [width_a-1:0] ram[numwords_a-1:0];

/* synthesis translate_off */
integer i;
ALTERA_MF_MEMORY_INITIALIZATION mem ();
reg [8*256:1] ram_ver_file;
initial begin
	if (init_file == "UNUSED.mif")
    begin
		for (i = 0; i < numwords_a; i = i + 1)
			ram[i] = 0;
    end
	else
    begin
        // modelsim can't read .mif files directly. So use Altera function to
        // convert them to .ver files
        mem.convert_to_ver_file(init_file, width_a, ram_ver_file);
        $readmemh(ram_ver_file, ram);
    end
end
/* synthesis translate_on */

always @ (posedge clk)
begin // Port A
if (wren_a)
begin
    ram[address_a] <= data_a;
    q_a_wire <= {width_a{1'bX}};
end
else
    q_a_wire <= ram[address_a];
end
always @ (posedge clk)
begin // Port b
if (wren_b)
begin
    ram[address_b] <= data_b;
    q_b_wire <= {width_b{1'bX}};
end
else
    q_b_wire <= ram[address_b];
end



integer j;
reg [(width_a-1):0] q_a_reg[latency:1], q_b_reg[latency:1];

always @(*)
begin
   q_a_reg[1] <= q_a_wire;
   q_b_reg[1] <= q_b_wire;
end

always @(posedge clk)
begin
   for (j = 1; j < latency; j=j+1)
   begin
       q_a_reg[j+1] <= q_a_reg[j];
       q_b_reg[j+1] <= q_b_reg[j];
   end
end

assign q_a = q_a_reg[latency];
assign q_b = q_b_reg[latency];


endmodule
module rom_dual_port
(
	clk,
	address_a,
	address_b,
	q_a,
	q_b
);

parameter  width_a = 1'd0;
parameter  width_b = 1'd0;
parameter  widthad_a = 1'd0;
parameter  widthad_b = 1'd0;
parameter  numwords_a = 1'd0;
parameter  numwords_b = 1'd0;
parameter  init_file = "UNUSED.mif";
parameter  latency = 1;

input  clk;
input [(widthad_a-1):0] address_a;
input [(widthad_b-1):0] address_b;
output wire [(width_a-1):0] q_a;
output wire [(width_b-1):0] q_b;
reg [(width_a-1):0] q_a_wire;
reg [(width_b-1):0] q_b_wire;

(* ramstyle = "no_rw_check", ram_init_file = init_file *) reg [width_a-1:0] ram[numwords_a-1:0];

/* synthesis translate_off */
integer i;
ALTERA_MF_MEMORY_INITIALIZATION mem ();
reg [8*256:1] ram_ver_file;
initial begin
	if (init_file == "UNUSED.mif")
    begin
		for (i = 0; i < numwords_a; i = i + 1)
			ram[i] = 0;
    end
	else
    begin
        // modelsim can't read .mif files directly. So use Altera function to
        // convert them to .ver files
        mem.convert_to_ver_file(init_file, width_a, ram_ver_file);
        $readmemh(ram_ver_file, ram);
    end
end
/* synthesis translate_on */

always @ (posedge clk)
begin
    q_a_wire <= ram[address_a];
    q_b_wire <= ram[address_b];
end



integer j;
reg [(width_a-1):0] q_a_reg[latency:1], q_b_reg[latency:1];

always @(*)
begin
   q_a_reg[1] <= q_a_wire;
   q_b_reg[1] <= q_b_wire;
end

always @(posedge clk)
begin
   for (j = 1; j < latency; j=j+1)
   begin
       q_a_reg[j+1] <= q_a_reg[j];
       q_b_reg[j+1] <= q_b_reg[j];
   end
end

assign q_a = q_a_reg[latency];
assign q_b = q_b_reg[latency];


endmodule
module de2 (CLOCK_50, KEY, SW, HEX0, HEX1, HEX2, HEX3, HEX4, HEX5, HEX6, HEX7, LEDG);
    input CLOCK_50;
    output [7:0] LEDG;
    input [3:0] KEY;
    input [17:0] SW;
    output [6:0] HEX0, HEX1, HEX2, HEX3, HEX4, HEX5, HEX6, HEX7;

    wire clk = CLOCK_50;
    wire reset = ~KEY[0];
    wire go = ~KEY[1];

    wire  start;
    wire [31:0] return_val;
    wire  finish;

    reg [31:0] return_val_reg;
    
	reg [3:0] hex0, hex1, hex2, hex3, hex4, hex5, hex6, hex7;
	always @ (*) begin
		hex7 <= return_val_reg[31:28];
		hex6 <= return_val_reg[27:24];
		hex5 <= return_val_reg[23:20];
		hex4 <= return_val_reg[19:16];
		hex3 <= return_val_reg[15:12];
		hex2 <= return_val_reg[11:8];
		hex1 <= return_val_reg[7:4];
		hex0 <= return_val_reg[3:0];
	end

    hex_digits h7( .x(hex7), .hex_LEDs(HEX7));
    hex_digits h6( .x(hex6), .hex_LEDs(HEX6));
    hex_digits h5( .x(hex5), .hex_LEDs(HEX5));
    hex_digits h4( .x(hex4), .hex_LEDs(HEX4));
    hex_digits h3( .x(hex3), .hex_LEDs(HEX3));
    hex_digits h2( .x(hex2), .hex_LEDs(HEX2));
    hex_digits h1( .x(hex1), .hex_LEDs(HEX1));
    hex_digits h0( .x(hex0), .hex_LEDs(HEX0));


    top top_inst (
        .clk (clk),
        .reset (reset),
        .start (start),
        .finish (finish),
        .return_val (return_val)
    );

    parameter s_WAIT = 3'b001, s_START = 3'b010, s_EXE = 3'b011,
                s_DONE = 3'b100;

    // state registers
    reg [3:0] y_Q, Y_D;

    assign LEDG[3:0] = y_Q;

    // next state
    always @(*)
    begin
        case (y_Q)
            s_WAIT: if (go) Y_D = s_START; else Y_D = y_Q;

            s_START: Y_D = s_EXE;

            s_EXE: if (!finish) Y_D = s_EXE; else Y_D = s_DONE;

            s_DONE: Y_D = s_DONE;

            default: Y_D = 3'bxxx;
        endcase
    end

    // current state
    always @(posedge clk)
    begin
        if (reset) // synchronous clear
            y_Q <= s_WAIT;
        else
            y_Q <= Y_D;
    end

    always @(posedge clk)
        if (y_Q == s_EXE && finish)
            return_val_reg <= return_val;
        else if (y_Q == s_DONE)
            return_val_reg <= return_val_reg;
        else
            return_val_reg <= 0;


    assign start = (y_Q == s_START);
endmodule

module de4 (
	OSC_50_BANK2,
    BUTTON,
    LED,
	SEG0_D,
	SEG1_D
);
    input OSC_50_BANK2;
    input [1:0] BUTTON;
    output [6:0] SEG0_D;
    output [6:0] SEG1_D;
    output [7:0] LED;

    de2 de2_inst (
        .CLOCK_50 (OSC_50_BANK2),
        .LEDG (LED),
        .KEY (BUTTON),
        .SW (),
        .HEX0 (SEG0_D),
        .HEX1 (SEG1_D),
        .HEX2 (),
        .HEX3 (),
        .HEX4 (),
        .HEX5 (),
        .HEX6 (),
        .HEX7 ()
    );

endmodule
module hex_digits(x, hex_LEDs);
    input [3:0] x;
    output [6:0] hex_LEDs;
    
    assign hex_LEDs[0] = (~x[3] & ~x[2] & ~x[1] & x[0]) |
                            (~x[3] & x[2] & ~x[1] & ~x[0]) |
                            (x[3] & x[2] & ~x[1] & x[0]) |
                            (x[3] & ~x[2] & x[1] & x[0]);
    assign hex_LEDs[1] = (~x[3] & x[2] & ~x[1] & x[0]) |
                            (x[3] & x[1] & x[0]) |
                            (x[3] & x[2] & ~x[0]) |
                            (x[2] & x[1] & ~x[0]);
    assign hex_LEDs[2] = (x[3] & x[2] & ~x[0]) |
                            (x[3] & x[2] & x[1]) |
                            (~x[3] & ~x[2] & x[1] & ~x[0]);
    assign hex_LEDs[3] = (~x[3] & ~x[2] & ~x[1] & x[0]) | 
                            (~x[3] & x[2] & ~x[1] & ~x[0]) | 
                            (x[2] & x[1] & x[0]) | 
                            (x[3] & ~x[2] & x[1] & ~x[0]);
    assign hex_LEDs[4] = (~x[3] & x[0]) |
                            (~x[3] & x[2] & ~x[1]) |
                            (~x[2] & ~x[1] & x[0]);
    assign hex_LEDs[5] = (~x[3] & ~x[2] & x[0]) | 
                            (~x[3] & ~x[2] & x[1]) | 
                            (~x[3] & x[1] & x[0]) | 
                            (x[3] & x[2] & ~x[1] & x[0]);
    assign hex_LEDs[6] = (~x[3] & ~x[2] & ~x[1]) | 
                            (x[3] & x[2] & ~x[1] & ~x[0]) | 
                            (~x[3] & x[2] & x[1] & x[0]);
    
endmodule
`timescale 1 ns / 1 ns
module main_tb
(
);

reg  clk;
reg  reset;
reg  start;
wire [31:0] return_val;
wire  finish;


top top_inst (
	.clk (clk),
	.reset (reset),
	.start (start),
	.finish (finish),
	.return_val (return_val)
);


// Local Rams



initial 
    clk = 0;
always @(clk)
    clk <= #10 ~clk;

initial begin
//$monitor("At t=%t clk=%b %b %b %b %d", $time, clk, reset, start, finish, return_val);
@(negedge clk);
reset <= 1;
@(negedge clk);
reset <= 0;
start <= 1;

end

always@(finish) begin
    if (finish == 1) begin
        $display("At t=%t clk=%b finish=%b return_val=%d", $time, clk, finish, return_val);
        $display("Cycles: %d", ($time-50)/20);
        $finish;
    end
end

endmodule 
