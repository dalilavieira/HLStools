//----------------------------------------------------------------------------//
// Generated by LegUp High-Level Synthesis Tool Version 3.0 (http://legup.org)
// Compiled: Tue Jul 15 15:43:09 2014
// University of Toronto
// For research and academic purposes only. Commercial use is prohibited.
// Please send bugs to: legup@eecg.toronto.edu
// Date: Tue Mar 10 07:54:53 2020
//----------------------------------------------------------------------------//

`define MEMORY_CONTROLLER_ADDR_SIZE 32
`define MEMORY_CONTROLLER_DATA_SIZE 64
// Number of RAM elements: 0
`define MEMORY_CONTROLLER_TAG_SIZE 9
`define TAG_NULL `MEMORY_CONTROLLER_TAG_SIZE'd0
`define TAG_PROCESSOR `MEMORY_CONTROLLER_TAG_SIZE'd1

// Turn off warning 'ignoring unsupported system task'
// altera message_off 10175

module top
	(
		clk,
		reset,
		start,
		finish,
		return_val
	);
input clk;
input reset;
input start;
output wire finish;
output wire [31:0] return_val;
wire memory_controller_waitrequest;
wire memory_controller_enable_a;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] memory_controller_address_a;
wire memory_controller_write_enable_a;
wire [`MEMORY_CONTROLLER_DATA_SIZE-1:0] memory_controller_in_a;
wire [1:0] memory_controller_size_a;
wire [`MEMORY_CONTROLLER_DATA_SIZE-1:0] memory_controller_out_a;

wire memory_controller_enable_b;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] memory_controller_address_b;
wire memory_controller_write_enable_b;
wire [`MEMORY_CONTROLLER_DATA_SIZE-1:0] memory_controller_in_b;
wire [1:0] memory_controller_size_b;
wire [`MEMORY_CONTROLLER_DATA_SIZE-1:0] memory_controller_out_b;

assign memory_controller_waitrequest = 0;

memory_controller memory_controller_inst (
	.clk( clk ),
	.memory_controller_enable_a( memory_controller_enable_a ),
	.memory_controller_enable_b( memory_controller_enable_b ),
	.memory_controller_address_a( memory_controller_address_a ),
	.memory_controller_address_b( memory_controller_address_b ),
	.memory_controller_write_enable_a( memory_controller_write_enable_a ),
	.memory_controller_write_enable_b( memory_controller_write_enable_b ),
	.memory_controller_in_a( memory_controller_in_a ),
	.memory_controller_in_b( memory_controller_in_b ),
	.memory_controller_size_a( memory_controller_size_a ),
	.memory_controller_size_b( memory_controller_size_b ),
	.memory_controller_waitrequest( memory_controller_waitrequest ),
	.memory_controller_out_reg_a( memory_controller_out_a ),
	.memory_controller_out_reg_b( memory_controller_out_b )
);

main main_inst(
	.clk( clk ),
	.clk2x( clk2x ),
	.clk1x_follower( clk1x_follower ),
	.reset( reset ),
	.start( start ),
	.finish( finish ),
	.return_val( return_val ),
	.memory_controller_enable_a(memory_controller_enable_a),
	.memory_controller_address_a(memory_controller_address_a),
	.memory_controller_write_enable_a(memory_controller_write_enable_a),
	.memory_controller_in_a(memory_controller_in_a),
	.memory_controller_size_a(memory_controller_size_a),
	.memory_controller_out_a(memory_controller_out_a),
	.memory_controller_enable_b(memory_controller_enable_b),
	.memory_controller_address_b(memory_controller_address_b),
	.memory_controller_write_enable_b(memory_controller_write_enable_b),
	.memory_controller_in_b(memory_controller_in_b),
	.memory_controller_size_b(memory_controller_size_b),
	.memory_controller_out_b(memory_controller_out_b),
	.memory_controller_waitrequest(memory_controller_waitrequest)
);

endmodule
`timescale 1 ns / 1 ns
module memory_controller
(
	clk,
	memory_controller_address_a,
	memory_controller_address_b,
	memory_controller_enable_a,
	memory_controller_enable_b,
	memory_controller_write_enable_a,
	memory_controller_write_enable_b,
	memory_controller_in_a,
	memory_controller_in_b,
	memory_controller_size_a,
	memory_controller_size_b,
	memory_controller_waitrequest,
	memory_controller_out_reg_a,
	memory_controller_out_reg_b
);


input clk;
input memory_controller_waitrequest;
input [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] memory_controller_address_a;
input memory_controller_enable_a;
input memory_controller_write_enable_a;
input [64-1:0] memory_controller_in_a;
input [1:0] memory_controller_size_a;
output reg [64-1:0] memory_controller_out_reg_a;
reg [64-1:0] memory_controller_out_prev_a;
reg [64-1:0] memory_controller_out_a;

reg memory_controller_enable_reg_a;
input [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] memory_controller_address_b;
input memory_controller_enable_b;
input memory_controller_write_enable_b;
input [64-1:0] memory_controller_in_b;
input [1:0] memory_controller_size_b;
output reg [64-1:0] memory_controller_out_reg_b;
reg [64-1:0] memory_controller_out_prev_b;
reg [64-1:0] memory_controller_out_b;

reg memory_controller_enable_reg_b;
endmodule 
`timescale 1 ns / 1 ns
module smu7_get_profiling_clk
(
	clk,
	clk2x,
	clk1x_follower,
	reset,
	start,
	finish,
	memory_controller_enable_a,
	memory_controller_address_a,
	memory_controller_write_enable_a,
	memory_controller_in_a,
	memory_controller_size_a,
	memory_controller_out_a,
	memory_controller_enable_b,
	memory_controller_address_b,
	memory_controller_write_enable_b,
	memory_controller_in_b,
	memory_controller_size_b,
	memory_controller_out_b,
	memory_controller_waitrequest,
	return_val,
	arg_hwmgr,
	arg_level,
	arg_sclk_mask,
	arg_mclk_mask,
	arg_pcie_mask
);

parameter [6:0] LEGUP_0 = 7'd0;
parameter [6:0] LEGUP_F_smu7_get_profiling_clk_BB_0_1 = 7'd1;
parameter [6:0] LEGUP_F_smu7_get_profiling_clk_BB_0_2 = 7'd2;
parameter [6:0] LEGUP_F_smu7_get_profiling_clk_BB_0_3 = 7'd3;
parameter [6:0] LEGUP_F_smu7_get_profiling_clk_BB_0_4 = 7'd4;
parameter [6:0] LEGUP_F_smu7_get_profiling_clk_BB_0_5 = 7'd5;
parameter [6:0] LEGUP_F_smu7_get_profiling_clk_BB_6_6 = 7'd6;
parameter [6:0] LEGUP_F_smu7_get_profiling_clk_BB_6_7 = 7'd7;
parameter [6:0] LEGUP_F_smu7_get_profiling_clk_BB_6_8 = 7'd8;
parameter [6:0] LEGUP_F_smu7_get_profiling_clk_BB_6_9 = 7'd9;
parameter [6:0] LEGUP_F_smu7_get_profiling_clk_BB_6_10 = 7'd10;
parameter [6:0] LEGUP_F_smu7_get_profiling_clk_BB_14_11 = 7'd11;
parameter [6:0] LEGUP_F_smu7_get_profiling_clk_BB_14_12 = 7'd12;
parameter [6:0] LEGUP_F_smu7_get_profiling_clk_BB_14_13 = 7'd13;
parameter [6:0] LEGUP_F_smu7_get_profiling_clk_BB_14_14 = 7'd14;
parameter [6:0] LEGUP_F_smu7_get_profiling_clk_BB_14_15 = 7'd15;
parameter [6:0] LEGUP_F_smu7_get_profiling_clk_BB_14_16 = 7'd16;
parameter [6:0] LEGUP_F_smu7_get_profiling_clk_BB_14_17 = 7'd17;
parameter [6:0] LEGUP_F_smu7_get_profiling_clk_BB_14_18 = 7'd18;
parameter [6:0] LEGUP_F_smu7_get_profiling_clk_BB_14_19 = 7'd19;
parameter [6:0] LEGUP_F_smu7_get_profiling_clk_BB_14_20 = 7'd20;
parameter [6:0] LEGUP_F_smu7_get_profiling_clk_BB_14_21 = 7'd21;
parameter [6:0] LEGUP_F_smu7_get_profiling_clk_BB_14_22 = 7'd22;
parameter [6:0] LEGUP_F_smu7_get_profiling_clk_BB_14_23 = 7'd23;
parameter [6:0] LEGUP_F_smu7_get_profiling_clk_BB_14_24 = 7'd24;
parameter [6:0] LEGUP_F_smu7_get_profiling_clk_BB_14_25 = 7'd25;
parameter [6:0] LEGUP_F_smu7_get_profiling_clk_BB_14_26 = 7'd26;
parameter [6:0] LEGUP_F_smu7_get_profiling_clk_BB_14_27 = 7'd27;
parameter [6:0] LEGUP_F_smu7_get_profiling_clk_BB_14_28 = 7'd28;
parameter [6:0] LEGUP_F_smu7_get_profiling_clk_BB_14_29 = 7'd29;
parameter [6:0] LEGUP_F_smu7_get_profiling_clk_BB_14_30 = 7'd30;
parameter [6:0] LEGUP_F_smu7_get_profiling_clk_BB_14_31 = 7'd31;
parameter [6:0] LEGUP_F_smu7_get_profiling_clk_BB_14_32 = 7'd32;
parameter [6:0] LEGUP_F_smu7_get_profiling_clk_BB_14_33 = 7'd33;
parameter [6:0] LEGUP_F_smu7_get_profiling_clk_BB_14_34 = 7'd34;
parameter [6:0] LEGUP_F_smu7_get_profiling_clk_BB_14_35 = 7'd35;
parameter [6:0] LEGUP_F_smu7_get_profiling_clk_BB_14_36 = 7'd36;
parameter [6:0] LEGUP_F_smu7_get_profiling_clk_BB_14_37 = 7'd37;
parameter [6:0] LEGUP_F_smu7_get_profiling_clk_BB_14_38 = 7'd38;
parameter [6:0] LEGUP_F_smu7_get_profiling_clk_BB_14_39 = 7'd39;
parameter [6:0] LEGUP_F_smu7_get_profiling_clk_BB_14_40 = 7'd40;
parameter [6:0] LEGUP_F_smu7_get_profiling_clk_BB_14_41 = 7'd41;
parameter [6:0] LEGUP_F_smu7_get_profiling_clk_BB_14_42 = 7'd42;
parameter [6:0] LEGUP_F_smu7_get_profiling_clk_BB_14_43 = 7'd43;
parameter [6:0] LEGUP_F_smu7_get_profiling_clk_BB_14_44 = 7'd44;
parameter [6:0] LEGUP_F_smu7_get_profiling_clk_BB_14_45 = 7'd45;
parameter [6:0] LEGUP_F_smu7_get_profiling_clk_BB_14_46 = 7'd46;
parameter [6:0] LEGUP_F_smu7_get_profiling_clk_BB_14_47 = 7'd47;
parameter [6:0] LEGUP_F_smu7_get_profiling_clk_BB_14_48 = 7'd48;
parameter [6:0] LEGUP_F_smu7_get_profiling_clk_BB_14_49 = 7'd49;
parameter [6:0] LEGUP_F_smu7_get_profiling_clk_BB_28_50 = 7'd50;
parameter [6:0] LEGUP_F_smu7_get_profiling_clk_BB_28_51 = 7'd51;
parameter [6:0] LEGUP_F_smu7_get_profiling_clk_BB_28_52 = 7'd52;
parameter [6:0] LEGUP_F_smu7_get_profiling_clk_BB_28_53 = 7'd53;
parameter [6:0] LEGUP_F_smu7_get_profiling_clk_BB_28_54 = 7'd54;
parameter [6:0] LEGUP_F_smu7_get_profiling_clk_BB_28_55 = 7'd55;
parameter [6:0] LEGUP_F_smu7_get_profiling_clk_BB_28_56 = 7'd56;
parameter [6:0] LEGUP_F_smu7_get_profiling_clk_BB_28_57 = 7'd57;
parameter [6:0] LEGUP_F_smu7_get_profiling_clk_BB_28_58 = 7'd58;
parameter [6:0] LEGUP_F_smu7_get_profiling_clk_BB_28_59 = 7'd59;
parameter [6:0] LEGUP_F_smu7_get_profiling_clk_BB_28_60 = 7'd60;
parameter [6:0] LEGUP_F_smu7_get_profiling_clk_BB_28_61 = 7'd61;
parameter [6:0] LEGUP_F_smu7_get_profiling_clk_BB_28_62 = 7'd62;
parameter [6:0] LEGUP_F_smu7_get_profiling_clk_BB_28_63 = 7'd63;
parameter [6:0] LEGUP_F_smu7_get_profiling_clk_BB_28_64 = 7'd64;
parameter [6:0] LEGUP_F_smu7_get_profiling_clk_BB_28_65 = 7'd65;
parameter [6:0] LEGUP_F_smu7_get_profiling_clk_BB_28_66 = 7'd66;
parameter [6:0] LEGUP_F_smu7_get_profiling_clk_BB_28_67 = 7'd67;
parameter [6:0] LEGUP_F_smu7_get_profiling_clk_BB_28_68 = 7'd68;
parameter [6:0] LEGUP_F_smu7_get_profiling_clk_BB_28_69 = 7'd69;
parameter [6:0] LEGUP_F_smu7_get_profiling_clk_BB_28_70 = 7'd70;
parameter [6:0] LEGUP_F_smu7_get_profiling_clk_BB_28_71 = 7'd71;
parameter [6:0] LEGUP_F_smu7_get_profiling_clk_BB_28_72 = 7'd72;
parameter [6:0] LEGUP_F_smu7_get_profiling_clk_BB_28_73 = 7'd73;
parameter [6:0] LEGUP_F_smu7_get_profiling_clk_BB_28_74 = 7'd74;
parameter [6:0] LEGUP_F_smu7_get_profiling_clk_BB_28_75 = 7'd75;
parameter [6:0] LEGUP_F_smu7_get_profiling_clk_BB_28_76 = 7'd76;
parameter [6:0] LEGUP_F_smu7_get_profiling_clk_BB_28_77 = 7'd77;
parameter [6:0] LEGUP_F_smu7_get_profiling_clk_BB_28_78 = 7'd78;
parameter [6:0] LEGUP_F_smu7_get_profiling_clk_BB_28_79 = 7'd79;
parameter [6:0] LEGUP_F_smu7_get_profiling_clk_BB_28_80 = 7'd80;
parameter [6:0] LEGUP_F_smu7_get_profiling_clk_BB_28_81 = 7'd81;
parameter [6:0] LEGUP_F_smu7_get_profiling_clk_BB_28_82 = 7'd82;
parameter [6:0] LEGUP_F_smu7_get_profiling_clk_BB_28_83 = 7'd83;
parameter [6:0] LEGUP_F_smu7_get_profiling_clk_BB_34_84 = 7'd84;
parameter [6:0] LEGUP_F_smu7_get_profiling_clk_BB_34_85 = 7'd85;
parameter [6:0] LEGUP_F_smu7_get_profiling_clk_BB_34_86 = 7'd86;
parameter [6:0] LEGUP_F_smu7_get_profiling_clk_BB_34_87 = 7'd87;
parameter [6:0] LEGUP_F_smu7_get_profiling_clk_BB_34_88 = 7'd88;
parameter [6:0] LEGUP_F_smu7_get_profiling_clk_BB_40_89 = 7'd89;
parameter [6:0] LEGUP_F_smu7_get_profiling_clk_BB_42_90 = 7'd90;
parameter [6:0] LEGUP_F_smu7_get_profiling_clk_BB_42_91 = 7'd91;
parameter [6:0] LEGUP_F_smu7_get_profiling_clk_BB_42_92 = 7'd92;
parameter [6:0] LEGUP_F_smu7_get_profiling_clk_BB_42_93 = 7'd93;
parameter [6:0] LEGUP_F_smu7_get_profiling_clk_BB_42_94 = 7'd94;
parameter [6:0] LEGUP_F_smu7_get_profiling_clk_BB_46_95 = 7'd95;
parameter [6:0] LEGUP_F_smu7_get_profiling_clk_BB_46_96 = 7'd96;
parameter [6:0] LEGUP_F_smu7_get_profiling_clk_BB__loopexit6_loopexit_97 = 7'd97;
parameter [6:0] LEGUP_F_smu7_get_profiling_clk_BB__loopexit6_98 = 7'd98;
parameter [6:0] LEGUP_F_smu7_get_profiling_clk_BB_49_99 = 7'd99;
parameter [6:0] LEGUP_F_smu7_get_profiling_clk_BB_49_100 = 7'd100;
parameter [6:0] LEGUP_F_smu7_get_profiling_clk_BB_49_101 = 7'd101;
parameter [6:0] LEGUP_F_smu7_get_profiling_clk_BB_49_102 = 7'd102;
parameter [6:0] LEGUP_F_smu7_get_profiling_clk_BB_49_103 = 7'd103;
parameter [6:0] LEGUP_F_smu7_get_profiling_clk_BB_49_104 = 7'd104;
parameter [6:0] LEGUP_F_smu7_get_profiling_clk_BB_53_105 = 7'd105;
parameter [6:0] LEGUP_F_smu7_get_profiling_clk_BB_54_106 = 7'd106;
parameter [6:0] LEGUP_F_smu7_get_profiling_clk_BB_54_107 = 7'd107;
parameter [6:0] LEGUP_F_smu7_get_profiling_clk_BB_54_108 = 7'd108;
parameter [6:0] LEGUP_F_smu7_get_profiling_clk_BB_54_109 = 7'd109;
parameter [6:0] LEGUP_F_smu7_get_profiling_clk_BB_57_110 = 7'd110;
parameter [6:0] LEGUP_F_smu7_get_profiling_clk_BB__thread_111 = 7'd111;
parameter [6:0] LEGUP_F_smu7_get_profiling_clk_BB__thread_112 = 7'd112;
parameter [6:0] LEGUP_F_smu7_get_profiling_clk_BB__thread7_113 = 7'd113;
parameter [6:0] LEGUP_F_smu7_get_profiling_clk_BB__thread7_114 = 7'd114;
parameter [6:0] LEGUP_F_smu7_get_profiling_clk_BB__thread7_115 = 7'd115;
parameter [6:0] LEGUP_F_smu7_get_profiling_clk_BB__thread7_116 = 7'd116;
parameter [6:0] LEGUP_F_smu7_get_profiling_clk_BB__thread7_117 = 7'd117;
parameter [6:0] LEGUP_F_smu7_get_profiling_clk_BB_63_118 = 7'd118;

input  clk;
input  clk2x;
input  clk1x_follower;
input  reset;
input  start;
output reg  finish;
output reg  memory_controller_enable_a;
output reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] memory_controller_address_a;
output reg  memory_controller_write_enable_a;
output reg [`MEMORY_CONTROLLER_DATA_SIZE-1:0] memory_controller_in_a;
output reg [1:0] memory_controller_size_a;
input [`MEMORY_CONTROLLER_DATA_SIZE-1:0] memory_controller_out_a;
output reg  memory_controller_enable_b;
output reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] memory_controller_address_b;
output reg  memory_controller_write_enable_b;
output reg [`MEMORY_CONTROLLER_DATA_SIZE-1:0] memory_controller_in_b;
output reg [1:0] memory_controller_size_b;
input [`MEMORY_CONTROLLER_DATA_SIZE-1:0] memory_controller_out_b;
input  memory_controller_waitrequest;
output reg [31:0] return_val;
input [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] arg_hwmgr;
input [31:0] arg_level;
input [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] arg_sclk_mask;
input [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] arg_mclk_mask;
input [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] arg_pcie_mask;
reg [6:0] cur_state;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] smu7_get_profiling_clk_0_1;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] smu7_get_profiling_clk_0_1_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] smu7_get_profiling_clk_0_2;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] smu7_get_profiling_clk_0_2_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] smu7_get_profiling_clk_0_3;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] smu7_get_profiling_clk_0_3_reg;
reg [31:0] smu7_get_profiling_clk_0_4;
reg [31:0] smu7_get_profiling_clk_0_4_reg;
reg  smu7_get_profiling_clk_0_5;
reg  smu7_get_profiling_clk_0_5_reg;
reg [31:0] smu7_get_profiling_clk_6_7;
reg [31:0] smu7_get_profiling_clk_6_7_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] smu7_get_profiling_clk_6_8;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] smu7_get_profiling_clk_6_8_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] smu7_get_profiling_clk_6_9;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] smu7_get_profiling_clk_6_9_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] smu7_get_profiling_clk_6_10;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] smu7_get_profiling_clk_6_10_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] smu7_get_profiling_clk_6_11;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] smu7_get_profiling_clk_6_11_reg;
reg [31:0] smu7_get_profiling_clk_6_12;
reg [31:0] smu7_get_profiling_clk_6_12_reg;
reg  smu7_get_profiling_clk_6_13;
reg  smu7_get_profiling_clk_6_13_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] smu7_get_profiling_clk_14_15;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] smu7_get_profiling_clk_14_15_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] smu7_get_profiling_clk_14_16;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] smu7_get_profiling_clk_14_16_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] smu7_get_profiling_clk_14_17;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] smu7_get_profiling_clk_14_17_reg;
reg [31:0] smu7_get_profiling_clk_14_18;
reg [31:0] smu7_get_profiling_clk_14_18_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] smu7_get_profiling_clk_14_19;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] smu7_get_profiling_clk_14_19_reg;
reg [31:0] smu7_get_profiling_clk_14_20;
reg [31:0] smu7_get_profiling_clk_14_20_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] smu7_get_profiling_clk_14_21;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] smu7_get_profiling_clk_14_21_reg;
reg [31:0] smu7_get_profiling_clk_14_22;
reg [31:0] smu7_get_profiling_clk_14_22_reg;
reg [31:0] smu7_get_profiling_clk_14_23;
reg [31:0] smu7_get_profiling_clk_14_23_reg;
reg [31:0] smu7_get_profiling_clk_14_24;
reg [31:0] smu7_get_profiling_clk_14_24_reg;
reg [31:0] smu7_get_profiling_clk_14_25;
reg [31:0] smu7_get_profiling_clk_14_25_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] smu7_get_profiling_clk_14_26;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] smu7_get_profiling_clk_14_26_reg;
reg [31:0] smu7_get_profiling_clk_14_27;
reg [31:0] smu7_get_profiling_clk_14_27_reg;
reg [31:0] smu7_get_profiling_clk_28_storemerge;
reg [31:0] smu7_get_profiling_clk_28_storemerge_reg;
reg [31:0] smu7_get_profiling_clk_28_percentage_0;
reg [31:0] smu7_get_profiling_clk_28_percentage_0_reg;
reg [31:0] smu7_get_profiling_clk_28_tmp_mclk_0;
reg [31:0] smu7_get_profiling_clk_28_tmp_mclk_0_reg;
reg [31:0] smu7_get_profiling_clk_28_29;
reg [31:0] smu7_get_profiling_clk_28_29_reg;
reg [31:0] smu7_get_profiling_clk_28_30;
reg [31:0] smu7_get_profiling_clk_28_30_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] smu7_get_profiling_clk_28_31;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] smu7_get_profiling_clk_28_31_reg;
reg [31:0] smu7_get_profiling_clk_28_32;
reg [31:0] smu7_get_profiling_clk_28_32_reg;
reg  smu7_get_profiling_clk_28_33;
reg  smu7_get_profiling_clk_28_33_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] smu7_get_profiling_clk_34_35;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] smu7_get_profiling_clk_34_35_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] smu7_get_profiling_clk_34_36;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] smu7_get_profiling_clk_34_36_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] smu7_get_profiling_clk_34_37;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] smu7_get_profiling_clk_34_37_reg;
reg [31:0] smu7_get_profiling_clk_34_38;
reg [31:0] smu7_get_profiling_clk_34_38_reg;
reg [31:0] smu7_get_profiling_clk_34_tmp22;
reg [31:0] smu7_get_profiling_clk_34_tmp22_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] smu7_get_profiling_clk_34_39;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] smu7_get_profiling_clk_34_39_reg;
reg [31:0] smu7_get_profiling_clk_40_indvar19;
reg [31:0] smu7_get_profiling_clk_40_indvar19_reg;
reg [31:0] smu7_get_profiling_clk_40_count_0;
reg [31:0] smu7_get_profiling_clk_40_count_0_reg;
reg [31:0] smu7_get_profiling_clk_40_count_0_in;
reg [31:0] smu7_get_profiling_clk_40_count_0_in_reg;
reg  smu7_get_profiling_clk_40_41;
reg  smu7_get_profiling_clk_40_41_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] smu7_get_profiling_clk_42_43;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] smu7_get_profiling_clk_42_43_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] smu7_get_profiling_clk_42_scevgep2425;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] smu7_get_profiling_clk_42_scevgep2425_reg;
reg [31:0] smu7_get_profiling_clk_42_44;
reg [31:0] smu7_get_profiling_clk_42_44_reg;
reg  smu7_get_profiling_clk_42_45;
reg  smu7_get_profiling_clk_42_45_reg;
reg [31:0] smu7_get_profiling_clk_42_indvar_next20;
reg [31:0] smu7_get_profiling_clk_42_indvar_next20_reg;
reg [31:0] smu7_get_profiling_clk__loopexit6_tmp_sclk_0;
reg [31:0] smu7_get_profiling_clk__loopexit6_tmp_sclk_0_reg;
reg  smu7_get_profiling_clk__loopexit6_47;
reg  smu7_get_profiling_clk__loopexit6_47_reg;
reg  smu7_get_profiling_clk__loopexit6_48;
reg  smu7_get_profiling_clk__loopexit6_48_reg;
reg  smu7_get_profiling_clk__loopexit6_or_cond;
reg  smu7_get_profiling_clk__loopexit6_or_cond_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] smu7_get_profiling_clk_49_50;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] smu7_get_profiling_clk_49_50_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] smu7_get_profiling_clk_49_51;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] smu7_get_profiling_clk_49_51_reg;
reg [31:0] smu7_get_profiling_clk_49_52;
reg [31:0] smu7_get_profiling_clk_49_52_reg;
reg [31:0] smu7_get_profiling_clk_53_tmp_sclk_1;
reg [31:0] smu7_get_profiling_clk_53_tmp_sclk_1_reg;
reg [31:0] smu7_get_profiling_clk_54_55;
reg [31:0] smu7_get_profiling_clk_54_55_reg;
reg [31:0] smu7_get_profiling_clk_54_56;
reg [31:0] smu7_get_profiling_clk_54_56_reg;
reg  smu7_get_profiling_clk_57_58;
reg  smu7_get_profiling_clk_57_58_reg;
reg [31:0] smu7_get_profiling_clk__thread_tmp_sclk_42;
reg [31:0] smu7_get_profiling_clk__thread_tmp_sclk_42_reg;
reg [31:0] smu7_get_profiling_clk__thread7_tmp_sclk_41;
reg [31:0] smu7_get_profiling_clk__thread7_tmp_sclk_41_reg;
reg [31:0] smu7_get_profiling_clk__thread7_59;
reg [31:0] smu7_get_profiling_clk__thread7_59_reg;
reg [31:0] smu7_get_profiling_clk__thread7_60;
reg [31:0] smu7_get_profiling_clk__thread7_60_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] smu7_get_profiling_clk__thread7_61;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] smu7_get_profiling_clk__thread7_61_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] smu7_get_profiling_clk__thread7_62;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] smu7_get_profiling_clk__thread7_62_reg;
wire [15:0] legup_pthreadpoll_threadID;
reg [31:0] smu7_get_profiling_clk_signed_divide_32_0_op0;
reg [31:0] smu7_get_profiling_clk_signed_divide_32_0_op1;
wire [31:0] lpm_divide_smu7_get_profiling_clk_14_24_temp_out;
wire [31:0] smu7_get_profiling_clk_14_24_unused;
reg  lpm_divide_smu7_get_profiling_clk_14_24_en;
reg [31:0] lpm_divide_smu7_get_profiling_clk_14_24_out;
reg [31:0] smu7_get_profiling_clk_signed_divide_32_0;
reg  lpm_mult_smu7_get_profiling_clk_14_23_en;
reg [31:0] smu7_get_profiling_clk_14_23_stage0_reg;
reg  lpm_mult_smu7_get_profiling_clk_28_29_en;
reg [31:0] smu7_get_profiling_clk_28_29_stage0_reg;
reg  lpm_divide_smu7_get_profiling_clk_28_30_en;

/*   %24 = sdiv i32 %23, %12*/
lpm_divide lpm_divide_smu7_get_profiling_clk_14_24 (
	.quotient (lpm_divide_smu7_get_profiling_clk_14_24_temp_out),
	.remain (smu7_get_profiling_clk_14_24_unused),
	.clock (clk),
	.aclr (1'd0),
	.clken (lpm_divide_smu7_get_profiling_clk_14_24_en),
	.numer (smu7_get_profiling_clk_signed_divide_32_0_op0),
	.denom (smu7_get_profiling_clk_signed_divide_32_0_op1)
);

defparam
	lpm_divide_smu7_get_profiling_clk_14_24.lpm_pipeline = 32,
	lpm_divide_smu7_get_profiling_clk_14_24.lpm_widthn = 32,
	lpm_divide_smu7_get_profiling_clk_14_24.lpm_widthd = 32,
	lpm_divide_smu7_get_profiling_clk_14_24.lpm_drepresentation = "SIGNED",
	lpm_divide_smu7_get_profiling_clk_14_24.lpm_nrepresentation = "SIGNED",
	lpm_divide_smu7_get_profiling_clk_14_24.lpm_hint = "LPM_REMAINDERPOSITIVE=FALSE";

// Local Rams


always @(posedge clk) begin
if (((cur_state == LEGUP_0) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_0;
if (reset == 1'b0 && ^(LEGUP_0) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_0) & (memory_controller_waitrequest == 1'd0)) & (start == 1'd1)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_0_1;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_0_1) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_0) & (memory_controller_waitrequest == 1'd0)) & (start == 1'd0)))
begin
cur_state <= LEGUP_0;
if (reset == 1'b0 && ^(LEGUP_0) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_0_1) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_0_1;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_0_1) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_0_1) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_0_2;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_0_2) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_0_2) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_0_2;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_0_2) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_0_2) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_0_3;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_0_3) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_0_3) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_0_3;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_0_3) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_0_3) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_0_4;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_0_4) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_0_4) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_0_4;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_0_4) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_0_4) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_0_5;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_0_5) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_0_5) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_0_5;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_0_5) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_0_5) & (memory_controller_waitrequest == 1'd0)) & (smu7_get_profiling_clk_0_5 == 1'd1)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_63_118;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_63_118) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_0_5) & (memory_controller_waitrequest == 1'd0)) & (smu7_get_profiling_clk_0_5 == 1'd0)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_6_6;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_6_6) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_6_6) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_6_6;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_6_6) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_6_6) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_6_7;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_6_7) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_6_7) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_6_7;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_6_7) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_6_7) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_6_8;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_6_8) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_6_8) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_6_8;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_6_8) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_6_8) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_6_9;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_6_9) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_6_9) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_6_9;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_6_9) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_6_9) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_6_10;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_6_10) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_6_10) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_6_10;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_6_10) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_6_10) & (memory_controller_waitrequest == 1'd0)) & (smu7_get_profiling_clk_6_13_reg == 1'd1)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_28_50;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_28_50) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_6_10) & (memory_controller_waitrequest == 1'd0)) & (smu7_get_profiling_clk_6_13_reg == 1'd0)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_14_11;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_14_11) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_14_11) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_14_11;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_14_11) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_14_11) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_14_12;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_14_12) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_14_12) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_14_12;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_14_12) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_14_12) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_14_13;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_14_13) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_14_13) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_14_13;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_14_13) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_14_13) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_14_14;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_14_14) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_14_14) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_14_14;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_14_14) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_14_14) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_14_15;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_14_15) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_14_15) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_14_15;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_14_15) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_14_15) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_14_16;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_14_16) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_14_16) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_14_16;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_14_16) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_14_16) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_14_17;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_14_17) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_14_17) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_14_17;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_14_17) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_14_17) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_14_18;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_14_18) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_14_18) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_14_18;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_14_18) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_14_18) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_14_19;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_14_19) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_14_19) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_14_19;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_14_19) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_14_19) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_14_20;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_14_20) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_14_20) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_14_20;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_14_20) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_14_20) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_14_21;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_14_21) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_14_21) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_14_21;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_14_21) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_14_21) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_14_22;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_14_22) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_14_22) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_14_22;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_14_22) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_14_22) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_14_23;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_14_23) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_14_23) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_14_23;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_14_23) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_14_23) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_14_24;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_14_24) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_14_24) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_14_24;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_14_24) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_14_24) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_14_25;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_14_25) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_14_25) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_14_25;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_14_25) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_14_25) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_14_26;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_14_26) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_14_26) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_14_26;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_14_26) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_14_26) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_14_27;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_14_27) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_14_27) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_14_27;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_14_27) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_14_27) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_14_28;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_14_28) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_14_28) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_14_28;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_14_28) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_14_28) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_14_29;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_14_29) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_14_29) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_14_29;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_14_29) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_14_29) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_14_30;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_14_30) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_14_30) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_14_30;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_14_30) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_14_30) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_14_31;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_14_31) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_14_31) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_14_31;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_14_31) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_14_31) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_14_32;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_14_32) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_14_32) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_14_32;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_14_32) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_14_32) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_14_33;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_14_33) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_14_33) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_14_33;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_14_33) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_14_33) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_14_34;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_14_34) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_14_34) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_14_34;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_14_34) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_14_34) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_14_35;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_14_35) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_14_35) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_14_35;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_14_35) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_14_35) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_14_36;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_14_36) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_14_36) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_14_36;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_14_36) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_14_36) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_14_37;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_14_37) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_14_37) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_14_37;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_14_37) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_14_37) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_14_38;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_14_38) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_14_38) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_14_38;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_14_38) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_14_38) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_14_39;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_14_39) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_14_39) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_14_39;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_14_39) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_14_39) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_14_40;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_14_40) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_14_40) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_14_40;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_14_40) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_14_40) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_14_41;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_14_41) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_14_41) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_14_41;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_14_41) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_14_41) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_14_42;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_14_42) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_14_42) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_14_42;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_14_42) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_14_42) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_14_43;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_14_43) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_14_43) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_14_43;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_14_43) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_14_43) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_14_44;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_14_44) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_14_44) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_14_44;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_14_44) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_14_44) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_14_45;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_14_45) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_14_45) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_14_45;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_14_45) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_14_45) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_14_46;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_14_46) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_14_46) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_14_46;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_14_46) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_14_46) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_14_47;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_14_47) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_14_47) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_14_47;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_14_47) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_14_47) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_14_48;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_14_48) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_14_48) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_14_48;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_14_48) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_14_48) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_14_49;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_14_49) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_14_49) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_14_49;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_14_49) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_14_49) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_28_50;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_28_50) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_28_50) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_28_50;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_28_50) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_28_50) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_28_51;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_28_51) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_28_51) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_28_51;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_28_51) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_28_51) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_28_52;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_28_52) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_28_52) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_28_52;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_28_52) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_28_52) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_28_53;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_28_53) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_28_53) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_28_53;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_28_53) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_28_53) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_28_54;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_28_54) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_28_54) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_28_54;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_28_54) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_28_54) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_28_55;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_28_55) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_28_55) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_28_55;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_28_55) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_28_55) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_28_56;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_28_56) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_28_56) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_28_56;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_28_56) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_28_56) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_28_57;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_28_57) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_28_57) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_28_57;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_28_57) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_28_57) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_28_58;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_28_58) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_28_58) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_28_58;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_28_58) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_28_58) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_28_59;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_28_59) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_28_59) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_28_59;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_28_59) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_28_59) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_28_60;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_28_60) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_28_60) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_28_60;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_28_60) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_28_60) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_28_61;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_28_61) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_28_61) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_28_61;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_28_61) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_28_61) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_28_62;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_28_62) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_28_62) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_28_62;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_28_62) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_28_62) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_28_63;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_28_63) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_28_63) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_28_63;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_28_63) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_28_63) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_28_64;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_28_64) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_28_64) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_28_64;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_28_64) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_28_64) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_28_65;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_28_65) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_28_65) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_28_65;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_28_65) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_28_65) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_28_66;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_28_66) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_28_66) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_28_66;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_28_66) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_28_66) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_28_67;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_28_67) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_28_67) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_28_67;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_28_67) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_28_67) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_28_68;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_28_68) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_28_68) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_28_68;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_28_68) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_28_68) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_28_69;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_28_69) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_28_69) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_28_69;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_28_69) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_28_69) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_28_70;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_28_70) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_28_70) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_28_70;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_28_70) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_28_70) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_28_71;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_28_71) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_28_71) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_28_71;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_28_71) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_28_71) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_28_72;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_28_72) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_28_72) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_28_72;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_28_72) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_28_72) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_28_73;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_28_73) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_28_73) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_28_73;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_28_73) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_28_73) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_28_74;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_28_74) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_28_74) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_28_74;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_28_74) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_28_74) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_28_75;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_28_75) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_28_75) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_28_75;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_28_75) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_28_75) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_28_76;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_28_76) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_28_76) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_28_76;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_28_76) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_28_76) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_28_77;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_28_77) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_28_77) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_28_77;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_28_77) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_28_77) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_28_78;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_28_78) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_28_78) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_28_78;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_28_78) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_28_78) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_28_79;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_28_79) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_28_79) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_28_79;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_28_79) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_28_79) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_28_80;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_28_80) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_28_80) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_28_80;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_28_80) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_28_80) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_28_81;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_28_81) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_28_81) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_28_81;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_28_81) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_28_81) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_28_82;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_28_82) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_28_82) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_28_82;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_28_82) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_28_82) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_28_83;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_28_83) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_28_83) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_28_83;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_28_83) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_28_83) & (memory_controller_waitrequest == 1'd0)) & (smu7_get_profiling_clk_28_33_reg == 1'd1)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_34_84;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_34_84) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_28_83) & (memory_controller_waitrequest == 1'd0)) & (smu7_get_profiling_clk_28_33_reg == 1'd0)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_57_110;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_57_110) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_34_84) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_34_84;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_34_84) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_34_84) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_34_85;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_34_85) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_34_85) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_34_85;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_34_85) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_34_85) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_34_86;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_34_86) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_34_86) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_34_86;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_34_86) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_34_86) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_34_87;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_34_87) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_34_87) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_34_87;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_34_87) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_34_87) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_34_88;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_34_88) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_34_88) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_34_88;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_34_88) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_34_88) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_40_89;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_40_89) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_40_89) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_40_89;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_40_89) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_40_89) & (memory_controller_waitrequest == 1'd0)) & (smu7_get_profiling_clk_40_41 == 1'd1)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_42_90;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_42_90) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_40_89) & (memory_controller_waitrequest == 1'd0)) & (smu7_get_profiling_clk_40_41 == 1'd0)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB__loopexit6_loopexit_97;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB__loopexit6_loopexit_97) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_42_90) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_42_90;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_42_90) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_42_90) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_42_91;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_42_91) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_42_91) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_42_91;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_42_91) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_42_91) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_42_92;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_42_92) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_42_92) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_42_92;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_42_92) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_42_92) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_42_93;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_42_93) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_42_93) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_42_93;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_42_93) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_42_93) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_42_94;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_42_94) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_42_94) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_42_94;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_42_94) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_42_94) & (memory_controller_waitrequest == 1'd0)) & (smu7_get_profiling_clk_42_45 == 1'd1)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_40_89;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_40_89) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_42_94) & (memory_controller_waitrequest == 1'd0)) & (smu7_get_profiling_clk_42_45 == 1'd0)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_46_95;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_46_95) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_46_95) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_46_95;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_46_95) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_46_95) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_46_96;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_46_96) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_46_96) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_46_96;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_46_96) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_46_96) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB__loopexit6_98;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB__loopexit6_98) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB__loopexit6_loopexit_97) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB__loopexit6_loopexit_97;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB__loopexit6_loopexit_97) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB__loopexit6_loopexit_97) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB__loopexit6_98;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB__loopexit6_98) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB__loopexit6_98) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB__loopexit6_98;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB__loopexit6_98) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_smu7_get_profiling_clk_BB__loopexit6_98) & (memory_controller_waitrequest == 1'd0)) & (smu7_get_profiling_clk__loopexit6_or_cond == 1'd1)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_49_99;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_49_99) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_smu7_get_profiling_clk_BB__loopexit6_98) & (memory_controller_waitrequest == 1'd0)) & (smu7_get_profiling_clk__loopexit6_or_cond == 1'd0)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_53_105;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_53_105) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_49_99) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_49_99;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_49_99) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_49_99) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_49_100;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_49_100) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_49_100) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_49_100;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_49_100) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_49_100) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_49_101;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_49_101) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_49_101) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_49_101;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_49_101) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_49_101) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_49_102;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_49_102) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_49_102) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_49_102;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_49_102) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_49_102) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_49_103;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_49_103) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_49_103) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_49_103;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_49_103) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_49_103) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_49_104;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_49_104) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_49_104) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_49_104;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_49_104) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_49_104) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_53_105;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_53_105) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_53_105) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_53_105;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_53_105) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_53_105) & (memory_controller_waitrequest == 1'd0)) & (smu7_get_profiling_clk__loopexit6_48_reg == 1'd1)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_54_106;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_54_106) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_53_105) & (memory_controller_waitrequest == 1'd0)) & (smu7_get_profiling_clk__loopexit6_48_reg == 1'd0)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB__thread7_113;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB__thread7_113) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_54_106) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_54_106;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_54_106) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_54_106) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_54_107;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_54_107) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_54_107) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_54_107;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_54_107) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_54_107) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_54_108;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_54_108) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_54_108) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_54_108;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_54_108) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_54_108) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_54_109;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_54_109) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_54_109) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_54_109;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_54_109) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_54_109) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB__thread_111;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB__thread_111) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_57_110) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_57_110;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_57_110) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_57_110) & (memory_controller_waitrequest == 1'd0)) & (smu7_get_profiling_clk_57_58 == 1'd1)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB__thread_111;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB__thread_111) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_57_110) & (memory_controller_waitrequest == 1'd0)) & (smu7_get_profiling_clk_57_58 == 1'd0)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB__thread7_113;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB__thread7_113) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB__thread_111) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB__thread_111;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB__thread_111) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB__thread_111) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB__thread_112;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB__thread_112) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB__thread_112) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB__thread_112;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB__thread_112) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB__thread_112) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB__thread7_113;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB__thread7_113) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB__thread7_113) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB__thread7_113;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB__thread7_113) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB__thread7_113) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB__thread7_114;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB__thread7_114) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB__thread7_114) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB__thread7_114;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB__thread7_114) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB__thread7_114) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB__thread7_115;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB__thread7_115) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB__thread7_115) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB__thread7_115;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB__thread7_115) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB__thread7_115) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB__thread7_116;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB__thread7_116) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB__thread7_116) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB__thread7_116;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB__thread7_116) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB__thread7_116) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB__thread7_117;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB__thread7_117) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB__thread7_117) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB__thread7_117;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB__thread7_117) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB__thread7_117) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_63_118;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_63_118) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_63_118) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_smu7_get_profiling_clk_BB_63_118;
if (reset == 1'b0 && ^(LEGUP_F_smu7_get_profiling_clk_BB_63_118) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_63_118) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_0;
if (reset == 1'b0 && ^(LEGUP_0) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((reset == 1'd1))
begin
cur_state <= 7'd0;
if (reset == 1'b0 && ^(7'd0) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
end
always @(*) begin
/* smu7_get_profiling_clk: %0*/
/*   %1 = getelementptr inbounds %struct.pp_hwmgr* %hwmgr, i32 0, i32 5*/
begin
smu7_get_profiling_clk_0_1 = (arg_hwmgr + 20);
end
end
always @(posedge clk) begin
/* smu7_get_profiling_clk: %0*/
/*   %1 = getelementptr inbounds %struct.pp_hwmgr* %hwmgr, i32 0, i32 5*/
if ((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_0_1))
begin
smu7_get_profiling_clk_0_1_reg <= smu7_get_profiling_clk_0_1;
if (reset == 1'b0 && ^(smu7_get_profiling_clk_0_1) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to smu7_get_profiling_clk_0_1_reg"); $finish; end
end
end
always @(*) begin
/* smu7_get_profiling_clk: %0*/
/*   %2 = load i32** %1, align 4, !tbaa !0*/
begin
smu7_get_profiling_clk_0_2 = memory_controller_out_a[`MEMORY_CONTROLLER_ADDR_SIZE-1:0];
end
end
always @(posedge clk) begin
/* smu7_get_profiling_clk: %0*/
/*   %2 = load i32** %1, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_0_3))
begin
smu7_get_profiling_clk_0_2_reg <= smu7_get_profiling_clk_0_2;
if (reset == 1'b0 && ^(smu7_get_profiling_clk_0_2) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to smu7_get_profiling_clk_0_2_reg"); $finish; end
end
end
always @(*) begin
/* smu7_get_profiling_clk: %0*/
/*   %3 = getelementptr inbounds i32* %2, i32 1*/
begin
smu7_get_profiling_clk_0_3 = (smu7_get_profiling_clk_0_2 + (4 * 32'd1));
end
end
always @(posedge clk) begin
/* smu7_get_profiling_clk: %0*/
/*   %3 = getelementptr inbounds i32* %2, i32 1*/
if ((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_0_3))
begin
smu7_get_profiling_clk_0_3_reg <= smu7_get_profiling_clk_0_3;
if (reset == 1'b0 && ^(smu7_get_profiling_clk_0_3) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to smu7_get_profiling_clk_0_3_reg"); $finish; end
end
end
always @(*) begin
/* smu7_get_profiling_clk: %0*/
/*   %4 = load i32* %3, align 4, !tbaa !3*/
begin
smu7_get_profiling_clk_0_4 = memory_controller_out_b[31:0];
end
end
always @(posedge clk) begin
/* smu7_get_profiling_clk: %0*/
/*   %4 = load i32* %3, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_0_5))
begin
smu7_get_profiling_clk_0_4_reg <= smu7_get_profiling_clk_0_4;
if (reset == 1'b0 && ^(smu7_get_profiling_clk_0_4) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to smu7_get_profiling_clk_0_4_reg"); $finish; end
end
end
always @(*) begin
/* smu7_get_profiling_clk: %0*/
/*   %5 = icmp slt i32 %4, 1*/
begin
smu7_get_profiling_clk_0_5 = ($signed(smu7_get_profiling_clk_0_4) < $signed(32'd1));
end
end
always @(posedge clk) begin
/* smu7_get_profiling_clk: %0*/
/*   %5 = icmp slt i32 %4, 1*/
if ((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_0_5))
begin
smu7_get_profiling_clk_0_5_reg <= smu7_get_profiling_clk_0_5;
if (reset == 1'b0 && ^(smu7_get_profiling_clk_0_5) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to smu7_get_profiling_clk_0_5_reg"); $finish; end
end
end
always @(*) begin
/* smu7_get_profiling_clk: %6*/
/*   %7 = add nsw i32 %4, -1*/
begin
smu7_get_profiling_clk_6_7 = (smu7_get_profiling_clk_0_4_reg + -32'd1);
end
end
always @(posedge clk) begin
/* smu7_get_profiling_clk: %6*/
/*   %7 = add nsw i32 %4, -1*/
if ((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_6_6))
begin
smu7_get_profiling_clk_6_7_reg <= smu7_get_profiling_clk_6_7;
if (reset == 1'b0 && ^(smu7_get_profiling_clk_6_7) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to smu7_get_profiling_clk_6_7_reg"); $finish; end
end
end
always @(*) begin
/* smu7_get_profiling_clk: %6*/
/*   %8 = getelementptr inbounds i32* %2, i32 2*/
begin
smu7_get_profiling_clk_6_8 = (smu7_get_profiling_clk_0_2_reg + (4 * 32'd2));
end
end
always @(posedge clk) begin
/* smu7_get_profiling_clk: %6*/
/*   %8 = getelementptr inbounds i32* %2, i32 2*/
if ((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_6_6))
begin
smu7_get_profiling_clk_6_8_reg <= smu7_get_profiling_clk_6_8;
if (reset == 1'b0 && ^(smu7_get_profiling_clk_6_8) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to smu7_get_profiling_clk_6_8_reg"); $finish; end
end
end
always @(*) begin
/* smu7_get_profiling_clk: %6*/
/*   %9 = bitcast i32* %8 to %struct.TYPE_12__***/
begin
smu7_get_profiling_clk_6_9 = smu7_get_profiling_clk_6_8;
end
end
always @(posedge clk) begin
/* smu7_get_profiling_clk: %6*/
/*   %9 = bitcast i32* %8 to %struct.TYPE_12__***/
if ((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_6_6))
begin
smu7_get_profiling_clk_6_9_reg <= smu7_get_profiling_clk_6_9;
if (reset == 1'b0 && ^(smu7_get_profiling_clk_6_9) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to smu7_get_profiling_clk_6_9_reg"); $finish; end
end
end
always @(*) begin
/* smu7_get_profiling_clk: %6*/
/*   %10 = load %struct.TYPE_12__** %9, align 4, !tbaa !0*/
begin
smu7_get_profiling_clk_6_10 = memory_controller_out_a[`MEMORY_CONTROLLER_ADDR_SIZE-1:0];
end
end
always @(posedge clk) begin
/* smu7_get_profiling_clk: %6*/
/*   %10 = load %struct.TYPE_12__** %9, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_6_8))
begin
smu7_get_profiling_clk_6_10_reg <= smu7_get_profiling_clk_6_10;
if (reset == 1'b0 && ^(smu7_get_profiling_clk_6_10) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to smu7_get_profiling_clk_6_10_reg"); $finish; end
end
end
always @(*) begin
/* smu7_get_profiling_clk: %6*/
/*   %11 = getelementptr inbounds %struct.TYPE_12__* %10, i32 %7, i32 0*/
begin
smu7_get_profiling_clk_6_11 = (smu7_get_profiling_clk_6_10 + (4 * smu7_get_profiling_clk_6_7_reg));
end
end
always @(posedge clk) begin
/* smu7_get_profiling_clk: %6*/
/*   %11 = getelementptr inbounds %struct.TYPE_12__* %10, i32 %7, i32 0*/
if ((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_6_8))
begin
smu7_get_profiling_clk_6_11_reg <= smu7_get_profiling_clk_6_11;
if (reset == 1'b0 && ^(smu7_get_profiling_clk_6_11) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to smu7_get_profiling_clk_6_11_reg"); $finish; end
end
end
always @(*) begin
/* smu7_get_profiling_clk: %6*/
/*   %12 = load i32* %11, align 4, !tbaa !3*/
begin
smu7_get_profiling_clk_6_12 = memory_controller_out_b[31:0];
end
end
always @(posedge clk) begin
/* smu7_get_profiling_clk: %6*/
/*   %12 = load i32* %11, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_6_10))
begin
smu7_get_profiling_clk_6_12_reg <= smu7_get_profiling_clk_6_12;
if (reset == 1'b0 && ^(smu7_get_profiling_clk_6_12) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to smu7_get_profiling_clk_6_12_reg"); $finish; end
end
end
always @(*) begin
/* smu7_get_profiling_clk: %6*/
/*   %13 = icmp eq i32 %4, 1*/
begin
smu7_get_profiling_clk_6_13 = (smu7_get_profiling_clk_0_4_reg == 32'd1);
end
end
always @(posedge clk) begin
/* smu7_get_profiling_clk: %6*/
/*   %13 = icmp eq i32 %4, 1*/
if ((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_6_6))
begin
smu7_get_profiling_clk_6_13_reg <= smu7_get_profiling_clk_6_13;
if (reset == 1'b0 && ^(smu7_get_profiling_clk_6_13) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to smu7_get_profiling_clk_6_13_reg"); $finish; end
end
end
always @(*) begin
/* smu7_get_profiling_clk: %14*/
/*   %15 = getelementptr inbounds i32* %2, i32 4*/
begin
smu7_get_profiling_clk_14_15 = (smu7_get_profiling_clk_0_2_reg + (4 * 32'd4));
end
end
always @(posedge clk) begin
/* smu7_get_profiling_clk: %14*/
/*   %15 = getelementptr inbounds i32* %2, i32 4*/
if ((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_14_11))
begin
smu7_get_profiling_clk_14_15_reg <= smu7_get_profiling_clk_14_15;
if (reset == 1'b0 && ^(smu7_get_profiling_clk_14_15) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to smu7_get_profiling_clk_14_15_reg"); $finish; end
end
end
always @(*) begin
/* smu7_get_profiling_clk: %14*/
/*   %16 = getelementptr inbounds i32* %2, i32 3*/
begin
smu7_get_profiling_clk_14_16 = (smu7_get_profiling_clk_0_2_reg + (4 * 32'd3));
end
end
always @(posedge clk) begin
/* smu7_get_profiling_clk: %14*/
/*   %16 = getelementptr inbounds i32* %2, i32 3*/
if ((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_14_11))
begin
smu7_get_profiling_clk_14_16_reg <= smu7_get_profiling_clk_14_16;
if (reset == 1'b0 && ^(smu7_get_profiling_clk_14_16) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to smu7_get_profiling_clk_14_16_reg"); $finish; end
end
end
always @(*) begin
/* smu7_get_profiling_clk: %14*/
/*   %17 = bitcast i32* %15 to %struct.TYPE_12__***/
begin
smu7_get_profiling_clk_14_17 = smu7_get_profiling_clk_14_15;
end
end
always @(posedge clk) begin
/* smu7_get_profiling_clk: %14*/
/*   %17 = bitcast i32* %15 to %struct.TYPE_12__***/
if ((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_14_11))
begin
smu7_get_profiling_clk_14_17_reg <= smu7_get_profiling_clk_14_17;
if (reset == 1'b0 && ^(smu7_get_profiling_clk_14_17) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to smu7_get_profiling_clk_14_17_reg"); $finish; end
end
end
always @(*) begin
/* smu7_get_profiling_clk: %14*/
/*   %18 = load i32* %16, align 4, !tbaa !3*/
begin
smu7_get_profiling_clk_14_18 = memory_controller_out_a[31:0];
end
end
always @(posedge clk) begin
/* smu7_get_profiling_clk: %14*/
/*   %18 = load i32* %16, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_14_13))
begin
smu7_get_profiling_clk_14_18_reg <= smu7_get_profiling_clk_14_18;
if (reset == 1'b0 && ^(smu7_get_profiling_clk_14_18) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to smu7_get_profiling_clk_14_18_reg"); $finish; end
end
end
always @(*) begin
/* smu7_get_profiling_clk: %14*/
/*   %19 = load %struct.TYPE_12__** %17, align 4, !tbaa !0*/
begin
smu7_get_profiling_clk_14_19 = memory_controller_out_b[`MEMORY_CONTROLLER_ADDR_SIZE-1:0];
end
end
always @(posedge clk) begin
/* smu7_get_profiling_clk: %14*/
/*   %19 = load %struct.TYPE_12__** %17, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_14_13))
begin
smu7_get_profiling_clk_14_19_reg <= smu7_get_profiling_clk_14_19;
if (reset == 1'b0 && ^(smu7_get_profiling_clk_14_19) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to smu7_get_profiling_clk_14_19_reg"); $finish; end
end
end
always @(*) begin
/* smu7_get_profiling_clk: %14*/
/*   %20 = add nsw i32 %18, -1*/
begin
smu7_get_profiling_clk_14_20 = (smu7_get_profiling_clk_14_18 + -32'd1);
end
end
always @(posedge clk) begin
/* smu7_get_profiling_clk: %14*/
/*   %20 = add nsw i32 %18, -1*/
if ((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_14_13))
begin
smu7_get_profiling_clk_14_20_reg <= smu7_get_profiling_clk_14_20;
if (reset == 1'b0 && ^(smu7_get_profiling_clk_14_20) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to smu7_get_profiling_clk_14_20_reg"); $finish; end
end
end
always @(*) begin
/* smu7_get_profiling_clk: %14*/
/*   %21 = getelementptr inbounds %struct.TYPE_12__* %19, i32 %20, i32 0*/
begin
smu7_get_profiling_clk_14_21 = (smu7_get_profiling_clk_14_19_reg + (4 * smu7_get_profiling_clk_14_20_reg));
end
end
always @(posedge clk) begin
/* smu7_get_profiling_clk: %14*/
/*   %21 = getelementptr inbounds %struct.TYPE_12__* %19, i32 %20, i32 0*/
if ((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_14_14))
begin
smu7_get_profiling_clk_14_21_reg <= smu7_get_profiling_clk_14_21;
if (reset == 1'b0 && ^(smu7_get_profiling_clk_14_21) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to smu7_get_profiling_clk_14_21_reg"); $finish; end
end
end
always @(*) begin
/* smu7_get_profiling_clk: %14*/
/*   %22 = load i32* %21, align 4, !tbaa !3*/
begin
smu7_get_profiling_clk_14_22 = memory_controller_out_b[31:0];
end
end
always @(posedge clk) begin
/* smu7_get_profiling_clk: %14*/
/*   %22 = load i32* %21, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_14_16))
begin
smu7_get_profiling_clk_14_22_reg <= smu7_get_profiling_clk_14_22;
if (reset == 1'b0 && ^(smu7_get_profiling_clk_14_22) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to smu7_get_profiling_clk_14_22_reg"); $finish; end
end
end
always @(*) begin
smu7_get_profiling_clk_14_23 = smu7_get_profiling_clk_14_23_stage0_reg;
end
always @(posedge clk) begin
/* smu7_get_profiling_clk: %14*/
/*   %23 = mul nsw i32 %22, 100*/
if ((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_14_17))
begin
smu7_get_profiling_clk_14_23_reg <= smu7_get_profiling_clk_14_23;
if (reset == 1'b0 && ^(smu7_get_profiling_clk_14_23) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to smu7_get_profiling_clk_14_23_reg"); $finish; end
end
/* smu7_get_profiling_clk: %14*/
/*   %23 = mul nsw i32 %22, 100*/
if ((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_14_17))
begin
smu7_get_profiling_clk_14_23_reg <= smu7_get_profiling_clk_14_23;
if (reset == 1'b0 && ^(smu7_get_profiling_clk_14_23) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to smu7_get_profiling_clk_14_23_reg"); $finish; end
end
end
always @(*) begin
smu7_get_profiling_clk_14_24 = smu7_get_profiling_clk_signed_divide_32_0;
end
always @(posedge clk) begin
/* smu7_get_profiling_clk: %14*/
/*   %24 = sdiv i32 %23, %12*/
if ((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_14_49))
begin
smu7_get_profiling_clk_14_24_reg <= smu7_get_profiling_clk_14_24;
if (reset == 1'b0 && ^(smu7_get_profiling_clk_14_24) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to smu7_get_profiling_clk_14_24_reg"); $finish; end
end
/* smu7_get_profiling_clk: %14*/
/*   %24 = sdiv i32 %23, %12*/
if ((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_14_49))
begin
smu7_get_profiling_clk_14_24_reg <= smu7_get_profiling_clk_14_24;
if (reset == 1'b0 && ^(smu7_get_profiling_clk_14_24) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to smu7_get_profiling_clk_14_24_reg"); $finish; end
end
end
always @(*) begin
/* smu7_get_profiling_clk: %14*/
/*   %25 = add nsw i32 %4, -2*/
begin
smu7_get_profiling_clk_14_25 = (smu7_get_profiling_clk_0_4_reg + -32'd2);
end
end
always @(posedge clk) begin
/* smu7_get_profiling_clk: %14*/
/*   %25 = add nsw i32 %4, -2*/
if ((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_14_11))
begin
smu7_get_profiling_clk_14_25_reg <= smu7_get_profiling_clk_14_25;
if (reset == 1'b0 && ^(smu7_get_profiling_clk_14_25) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to smu7_get_profiling_clk_14_25_reg"); $finish; end
end
end
always @(*) begin
/* smu7_get_profiling_clk: %14*/
/*   %26 = getelementptr inbounds %struct.TYPE_12__* %10, i32 %25, i32 0*/
begin
smu7_get_profiling_clk_14_26 = (smu7_get_profiling_clk_6_10_reg + (4 * smu7_get_profiling_clk_14_25_reg));
end
end
always @(posedge clk) begin
/* smu7_get_profiling_clk: %14*/
/*   %26 = getelementptr inbounds %struct.TYPE_12__* %10, i32 %25, i32 0*/
if ((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_14_12))
begin
smu7_get_profiling_clk_14_26_reg <= smu7_get_profiling_clk_14_26;
if (reset == 1'b0 && ^(smu7_get_profiling_clk_14_26) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to smu7_get_profiling_clk_14_26_reg"); $finish; end
end
end
always @(*) begin
/* smu7_get_profiling_clk: %14*/
/*   %27 = load i32* %26, align 4, !tbaa !3*/
begin
smu7_get_profiling_clk_14_27 = memory_controller_out_a[31:0];
end
end
always @(posedge clk) begin
/* smu7_get_profiling_clk: %14*/
/*   %27 = load i32* %26, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_14_14))
begin
smu7_get_profiling_clk_14_27_reg <= smu7_get_profiling_clk_14_27;
if (reset == 1'b0 && ^(smu7_get_profiling_clk_14_27) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to smu7_get_profiling_clk_14_27_reg"); $finish; end
end
end
always @(*) begin
/* smu7_get_profiling_clk: %28*/
/*   %storemerge = phi i32 [ %25, %14 ], [ %7, %6 ]*/
if ((((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_6_10) & (memory_controller_waitrequest == 1'd0)) & (smu7_get_profiling_clk_6_13_reg == 1'd1)))
begin
smu7_get_profiling_clk_28_storemerge = smu7_get_profiling_clk_6_7_reg;
end
/* smu7_get_profiling_clk: %28*/
/*   %storemerge = phi i32 [ %25, %14 ], [ %7, %6 ]*/
else /* if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_14_49) & (memory_controller_waitrequest == 1'd0))) */
begin
smu7_get_profiling_clk_28_storemerge = smu7_get_profiling_clk_14_25_reg;
end
end
always @(posedge clk) begin
/* smu7_get_profiling_clk: %28*/
/*   %storemerge = phi i32 [ %25, %14 ], [ %7, %6 ]*/
if ((((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_6_10) & (memory_controller_waitrequest == 1'd0)) & (smu7_get_profiling_clk_6_13_reg == 1'd1)))
begin
smu7_get_profiling_clk_28_storemerge_reg <= smu7_get_profiling_clk_28_storemerge;
if (reset == 1'b0 && ^(smu7_get_profiling_clk_28_storemerge) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to smu7_get_profiling_clk_28_storemerge_reg"); $finish; end
end
/* smu7_get_profiling_clk: %28*/
/*   %storemerge = phi i32 [ %25, %14 ], [ %7, %6 ]*/
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_14_49) & (memory_controller_waitrequest == 1'd0)))
begin
smu7_get_profiling_clk_28_storemerge_reg <= smu7_get_profiling_clk_28_storemerge;
if (reset == 1'b0 && ^(smu7_get_profiling_clk_28_storemerge) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to smu7_get_profiling_clk_28_storemerge_reg"); $finish; end
end
end
always @(*) begin
/* smu7_get_profiling_clk: %28*/
/*   %percentage.0 = phi i32 [ %24, %14 ], [ 70, %6 ]*/
if ((((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_6_10) & (memory_controller_waitrequest == 1'd0)) & (smu7_get_profiling_clk_6_13_reg == 1'd1)))
begin
smu7_get_profiling_clk_28_percentage_0 = 32'd70;
end
/* smu7_get_profiling_clk: %28*/
/*   %percentage.0 = phi i32 [ %24, %14 ], [ 70, %6 ]*/
else /* if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_14_49) & (memory_controller_waitrequest == 1'd0))) */
begin
smu7_get_profiling_clk_28_percentage_0 = smu7_get_profiling_clk_14_24;
end
end
always @(posedge clk) begin
/* smu7_get_profiling_clk: %28*/
/*   %percentage.0 = phi i32 [ %24, %14 ], [ 70, %6 ]*/
if ((((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_6_10) & (memory_controller_waitrequest == 1'd0)) & (smu7_get_profiling_clk_6_13_reg == 1'd1)))
begin
smu7_get_profiling_clk_28_percentage_0_reg <= smu7_get_profiling_clk_28_percentage_0;
if (reset == 1'b0 && ^(smu7_get_profiling_clk_28_percentage_0) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to smu7_get_profiling_clk_28_percentage_0_reg"); $finish; end
end
/* smu7_get_profiling_clk: %28*/
/*   %percentage.0 = phi i32 [ %24, %14 ], [ 70, %6 ]*/
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_14_49) & (memory_controller_waitrequest == 1'd0)))
begin
smu7_get_profiling_clk_28_percentage_0_reg <= smu7_get_profiling_clk_28_percentage_0;
if (reset == 1'b0 && ^(smu7_get_profiling_clk_28_percentage_0) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to smu7_get_profiling_clk_28_percentage_0_reg"); $finish; end
end
end
always @(*) begin
/* smu7_get_profiling_clk: %28*/
/*   %tmp_mclk.0 = phi i32 [ %27, %14 ], [ %12, %6 ]*/
if ((((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_6_10) & (memory_controller_waitrequest == 1'd0)) & (smu7_get_profiling_clk_6_13_reg == 1'd1)))
begin
smu7_get_profiling_clk_28_tmp_mclk_0 = smu7_get_profiling_clk_6_12;
end
/* smu7_get_profiling_clk: %28*/
/*   %tmp_mclk.0 = phi i32 [ %27, %14 ], [ %12, %6 ]*/
else /* if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_14_49) & (memory_controller_waitrequest == 1'd0))) */
begin
smu7_get_profiling_clk_28_tmp_mclk_0 = smu7_get_profiling_clk_14_27_reg;
end
end
always @(posedge clk) begin
/* smu7_get_profiling_clk: %28*/
/*   %tmp_mclk.0 = phi i32 [ %27, %14 ], [ %12, %6 ]*/
if ((((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_6_10) & (memory_controller_waitrequest == 1'd0)) & (smu7_get_profiling_clk_6_13_reg == 1'd1)))
begin
smu7_get_profiling_clk_28_tmp_mclk_0_reg <= smu7_get_profiling_clk_28_tmp_mclk_0;
if (reset == 1'b0 && ^(smu7_get_profiling_clk_28_tmp_mclk_0) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to smu7_get_profiling_clk_28_tmp_mclk_0_reg"); $finish; end
end
/* smu7_get_profiling_clk: %28*/
/*   %tmp_mclk.0 = phi i32 [ %27, %14 ], [ %12, %6 ]*/
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_14_49) & (memory_controller_waitrequest == 1'd0)))
begin
smu7_get_profiling_clk_28_tmp_mclk_0_reg <= smu7_get_profiling_clk_28_tmp_mclk_0;
if (reset == 1'b0 && ^(smu7_get_profiling_clk_28_tmp_mclk_0) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to smu7_get_profiling_clk_28_tmp_mclk_0_reg"); $finish; end
end
end
always @(*) begin
smu7_get_profiling_clk_28_29 = smu7_get_profiling_clk_28_29_stage0_reg;
end
always @(posedge clk) begin
/* smu7_get_profiling_clk: %28*/
/*   %29 = mul nsw i32 %tmp_mclk.0, %percentage.0*/
if ((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_28_51))
begin
smu7_get_profiling_clk_28_29_reg <= smu7_get_profiling_clk_28_29;
if (reset == 1'b0 && ^(smu7_get_profiling_clk_28_29) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to smu7_get_profiling_clk_28_29_reg"); $finish; end
end
/* smu7_get_profiling_clk: %28*/
/*   %29 = mul nsw i32 %tmp_mclk.0, %percentage.0*/
if ((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_28_51))
begin
smu7_get_profiling_clk_28_29_reg <= smu7_get_profiling_clk_28_29;
if (reset == 1'b0 && ^(smu7_get_profiling_clk_28_29) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to smu7_get_profiling_clk_28_29_reg"); $finish; end
end
end
always @(*) begin
smu7_get_profiling_clk_28_30 = smu7_get_profiling_clk_signed_divide_32_0;
end
always @(posedge clk) begin
/* smu7_get_profiling_clk: %28*/
/*   %30 = sdiv i32 %29, 100*/
if ((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_28_83))
begin
smu7_get_profiling_clk_28_30_reg <= smu7_get_profiling_clk_28_30;
if (reset == 1'b0 && ^(smu7_get_profiling_clk_28_30) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to smu7_get_profiling_clk_28_30_reg"); $finish; end
end
/* smu7_get_profiling_clk: %28*/
/*   %30 = sdiv i32 %29, 100*/
if ((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_28_83))
begin
smu7_get_profiling_clk_28_30_reg <= smu7_get_profiling_clk_28_30;
if (reset == 1'b0 && ^(smu7_get_profiling_clk_28_30) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to smu7_get_profiling_clk_28_30_reg"); $finish; end
end
end
always @(*) begin
/* smu7_get_profiling_clk: %28*/
/*   %31 = getelementptr inbounds %struct.pp_hwmgr* %hwmgr, i32 0, i32 0*/
begin
smu7_get_profiling_clk_28_31 = arg_hwmgr;
end
end
always @(posedge clk) begin
/* smu7_get_profiling_clk: %28*/
/*   %31 = getelementptr inbounds %struct.pp_hwmgr* %hwmgr, i32 0, i32 0*/
if ((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_28_50))
begin
smu7_get_profiling_clk_28_31_reg <= smu7_get_profiling_clk_28_31;
if (reset == 1'b0 && ^(smu7_get_profiling_clk_28_31) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to smu7_get_profiling_clk_28_31_reg"); $finish; end
end
end
always @(*) begin
/* smu7_get_profiling_clk: %28*/
/*   %32 = load i32* %31, align 4, !tbaa !3*/
begin
smu7_get_profiling_clk_28_32 = memory_controller_out_a[31:0];
end
end
always @(posedge clk) begin
/* smu7_get_profiling_clk: %28*/
/*   %32 = load i32* %31, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_28_53))
begin
smu7_get_profiling_clk_28_32_reg <= smu7_get_profiling_clk_28_32;
if (reset == 1'b0 && ^(smu7_get_profiling_clk_28_32) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to smu7_get_profiling_clk_28_32_reg"); $finish; end
end
end
always @(*) begin
/* smu7_get_profiling_clk: %28*/
/*   %33 = icmp eq i32 %32, 0*/
begin
smu7_get_profiling_clk_28_33 = (smu7_get_profiling_clk_28_32 == 32'd0);
end
end
always @(posedge clk) begin
/* smu7_get_profiling_clk: %28*/
/*   %33 = icmp eq i32 %32, 0*/
if ((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_28_53))
begin
smu7_get_profiling_clk_28_33_reg <= smu7_get_profiling_clk_28_33;
if (reset == 1'b0 && ^(smu7_get_profiling_clk_28_33) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to smu7_get_profiling_clk_28_33_reg"); $finish; end
end
end
always @(*) begin
/* smu7_get_profiling_clk: %34*/
/*   %35 = getelementptr inbounds %struct.pp_hwmgr* %hwmgr, i32 0, i32 4, i32 0*/
begin
smu7_get_profiling_clk_34_35 = (arg_hwmgr + 16);
end
end
always @(posedge clk) begin
/* smu7_get_profiling_clk: %34*/
/*   %35 = getelementptr inbounds %struct.pp_hwmgr* %hwmgr, i32 0, i32 4, i32 0*/
if ((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_34_84))
begin
smu7_get_profiling_clk_34_35_reg <= smu7_get_profiling_clk_34_35;
if (reset == 1'b0 && ^(smu7_get_profiling_clk_34_35) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to smu7_get_profiling_clk_34_35_reg"); $finish; end
end
end
always @(*) begin
/* smu7_get_profiling_clk: %34*/
/*   %36 = load %struct.TYPE_15__** %35, align 4, !tbaa !0*/
begin
smu7_get_profiling_clk_34_36 = memory_controller_out_a[`MEMORY_CONTROLLER_ADDR_SIZE-1:0];
end
end
always @(posedge clk) begin
/* smu7_get_profiling_clk: %34*/
/*   %36 = load %struct.TYPE_15__** %35, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_34_86))
begin
smu7_get_profiling_clk_34_36_reg <= smu7_get_profiling_clk_34_36;
if (reset == 1'b0 && ^(smu7_get_profiling_clk_34_36) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to smu7_get_profiling_clk_34_36_reg"); $finish; end
end
end
always @(*) begin
/* smu7_get_profiling_clk: %34*/
/*   %37 = getelementptr inbounds %struct.TYPE_15__* %36, i32 0, i32 0*/
begin
smu7_get_profiling_clk_34_37 = smu7_get_profiling_clk_34_36;
end
end
always @(posedge clk) begin
/* smu7_get_profiling_clk: %34*/
/*   %37 = getelementptr inbounds %struct.TYPE_15__* %36, i32 0, i32 0*/
if ((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_34_86))
begin
smu7_get_profiling_clk_34_37_reg <= smu7_get_profiling_clk_34_37;
if (reset == 1'b0 && ^(smu7_get_profiling_clk_34_37) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to smu7_get_profiling_clk_34_37_reg"); $finish; end
end
end
always @(*) begin
/* smu7_get_profiling_clk: %34*/
/*   %38 = load i32* %37, align 4, !tbaa !3*/
begin
smu7_get_profiling_clk_34_38 = memory_controller_out_b[31:0];
end
end
always @(posedge clk) begin
/* smu7_get_profiling_clk: %34*/
/*   %38 = load i32* %37, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_34_88))
begin
smu7_get_profiling_clk_34_38_reg <= smu7_get_profiling_clk_34_38;
if (reset == 1'b0 && ^(smu7_get_profiling_clk_34_38) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to smu7_get_profiling_clk_34_38_reg"); $finish; end
end
end
always @(*) begin
/* smu7_get_profiling_clk: %34*/
/*   %tmp22 = add i32 %38, -1*/
begin
smu7_get_profiling_clk_34_tmp22 = (smu7_get_profiling_clk_34_38 + -32'd1);
end
end
always @(posedge clk) begin
/* smu7_get_profiling_clk: %34*/
/*   %tmp22 = add i32 %38, -1*/
if ((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_34_88))
begin
smu7_get_profiling_clk_34_tmp22_reg <= smu7_get_profiling_clk_34_tmp22;
if (reset == 1'b0 && ^(smu7_get_profiling_clk_34_tmp22) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to smu7_get_profiling_clk_34_tmp22_reg"); $finish; end
end
end
always @(*) begin
/* smu7_get_profiling_clk: %34*/
/*   %39 = getelementptr inbounds %struct.TYPE_15__* %36, i32 0, i32 1*/
begin
smu7_get_profiling_clk_34_39 = (smu7_get_profiling_clk_34_36 + 4);
end
end
always @(posedge clk) begin
/* smu7_get_profiling_clk: %34*/
/*   %39 = getelementptr inbounds %struct.TYPE_15__* %36, i32 0, i32 1*/
if ((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_34_86))
begin
smu7_get_profiling_clk_34_39_reg <= smu7_get_profiling_clk_34_39;
if (reset == 1'b0 && ^(smu7_get_profiling_clk_34_39) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to smu7_get_profiling_clk_34_39_reg"); $finish; end
end
end
always @(*) begin
/* smu7_get_profiling_clk: %40*/
/*   %indvar19 = phi i32 [ %indvar.next20, %42 ], [ 0, %34 ]*/
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_34_88) & (memory_controller_waitrequest == 1'd0)))
begin
smu7_get_profiling_clk_40_indvar19 = 32'd0;
end
/* smu7_get_profiling_clk: %40*/
/*   %indvar19 = phi i32 [ %indvar.next20, %42 ], [ 0, %34 ]*/
else /* if ((((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_42_94) & (memory_controller_waitrequest == 1'd0)) & (smu7_get_profiling_clk_42_45 == 1'd1))) */
begin
smu7_get_profiling_clk_40_indvar19 = smu7_get_profiling_clk_42_indvar_next20_reg;
end
end
always @(posedge clk) begin
/* smu7_get_profiling_clk: %40*/
/*   %indvar19 = phi i32 [ %indvar.next20, %42 ], [ 0, %34 ]*/
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_34_88) & (memory_controller_waitrequest == 1'd0)))
begin
smu7_get_profiling_clk_40_indvar19_reg <= smu7_get_profiling_clk_40_indvar19;
if (reset == 1'b0 && ^(smu7_get_profiling_clk_40_indvar19) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to smu7_get_profiling_clk_40_indvar19_reg"); $finish; end
end
/* smu7_get_profiling_clk: %40*/
/*   %indvar19 = phi i32 [ %indvar.next20, %42 ], [ 0, %34 ]*/
if ((((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_42_94) & (memory_controller_waitrequest == 1'd0)) & (smu7_get_profiling_clk_42_45 == 1'd1)))
begin
smu7_get_profiling_clk_40_indvar19_reg <= smu7_get_profiling_clk_40_indvar19;
if (reset == 1'b0 && ^(smu7_get_profiling_clk_40_indvar19) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to smu7_get_profiling_clk_40_indvar19_reg"); $finish; end
end
end
always @(*) begin
/* smu7_get_profiling_clk: %40*/
/*   %count.0 = sub i32 %tmp22, %indvar19*/
begin
smu7_get_profiling_clk_40_count_0 = (smu7_get_profiling_clk_34_tmp22_reg - smu7_get_profiling_clk_40_indvar19_reg);
end
end
always @(posedge clk) begin
/* smu7_get_profiling_clk: %40*/
/*   %count.0 = sub i32 %tmp22, %indvar19*/
if ((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_40_89))
begin
smu7_get_profiling_clk_40_count_0_reg <= smu7_get_profiling_clk_40_count_0;
if (reset == 1'b0 && ^(smu7_get_profiling_clk_40_count_0) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to smu7_get_profiling_clk_40_count_0_reg"); $finish; end
end
end
always @(*) begin
/* smu7_get_profiling_clk: %40*/
/*   %count.0.in = sub i32 %38, %indvar19*/
begin
smu7_get_profiling_clk_40_count_0_in = (smu7_get_profiling_clk_34_38_reg - smu7_get_profiling_clk_40_indvar19_reg);
end
end
always @(posedge clk) begin
/* smu7_get_profiling_clk: %40*/
/*   %count.0.in = sub i32 %38, %indvar19*/
if ((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_40_89))
begin
smu7_get_profiling_clk_40_count_0_in_reg <= smu7_get_profiling_clk_40_count_0_in;
if (reset == 1'b0 && ^(smu7_get_profiling_clk_40_count_0_in) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to smu7_get_profiling_clk_40_count_0_in_reg"); $finish; end
end
end
always @(*) begin
/* smu7_get_profiling_clk: %40*/
/*   %41 = icmp sgt i32 %count.0.in, 0*/
begin
smu7_get_profiling_clk_40_41 = ($signed(smu7_get_profiling_clk_40_count_0_in) > $signed(32'd0));
end
end
always @(posedge clk) begin
/* smu7_get_profiling_clk: %40*/
/*   %41 = icmp sgt i32 %count.0.in, 0*/
if ((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_40_89))
begin
smu7_get_profiling_clk_40_41_reg <= smu7_get_profiling_clk_40_41;
if (reset == 1'b0 && ^(smu7_get_profiling_clk_40_41) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to smu7_get_profiling_clk_40_41_reg"); $finish; end
end
end
always @(*) begin
/* smu7_get_profiling_clk: %42*/
/*   %43 = load %struct.TYPE_12__** %39, align 4, !tbaa !0*/
begin
smu7_get_profiling_clk_42_43 = memory_controller_out_a[`MEMORY_CONTROLLER_ADDR_SIZE-1:0];
end
end
always @(posedge clk) begin
/* smu7_get_profiling_clk: %42*/
/*   %43 = load %struct.TYPE_12__** %39, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_42_92))
begin
smu7_get_profiling_clk_42_43_reg <= smu7_get_profiling_clk_42_43;
if (reset == 1'b0 && ^(smu7_get_profiling_clk_42_43) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to smu7_get_profiling_clk_42_43_reg"); $finish; end
end
end
always @(*) begin
/* smu7_get_profiling_clk: %42*/
/*   %scevgep2425 = getelementptr inbounds %struct.TYPE_12__* %43, i32 %count.0, i32 0*/
begin
smu7_get_profiling_clk_42_scevgep2425 = (smu7_get_profiling_clk_42_43 + (4 * smu7_get_profiling_clk_40_count_0_reg));
end
end
always @(posedge clk) begin
/* smu7_get_profiling_clk: %42*/
/*   %scevgep2425 = getelementptr inbounds %struct.TYPE_12__* %43, i32 %count.0, i32 0*/
if ((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_42_92))
begin
smu7_get_profiling_clk_42_scevgep2425_reg <= smu7_get_profiling_clk_42_scevgep2425;
if (reset == 1'b0 && ^(smu7_get_profiling_clk_42_scevgep2425) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to smu7_get_profiling_clk_42_scevgep2425_reg"); $finish; end
end
end
always @(*) begin
/* smu7_get_profiling_clk: %42*/
/*   %44 = load i32* %scevgep2425, align 4, !tbaa !3*/
begin
smu7_get_profiling_clk_42_44 = memory_controller_out_b[31:0];
end
end
always @(posedge clk) begin
/* smu7_get_profiling_clk: %42*/
/*   %44 = load i32* %scevgep2425, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_42_94))
begin
smu7_get_profiling_clk_42_44_reg <= smu7_get_profiling_clk_42_44;
if (reset == 1'b0 && ^(smu7_get_profiling_clk_42_44) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to smu7_get_profiling_clk_42_44_reg"); $finish; end
end
end
always @(*) begin
/* smu7_get_profiling_clk: %42*/
/*   %45 = icmp slt i32 %30, %44*/
begin
smu7_get_profiling_clk_42_45 = ($signed(smu7_get_profiling_clk_28_30_reg) < $signed(smu7_get_profiling_clk_42_44));
end
end
always @(posedge clk) begin
/* smu7_get_profiling_clk: %42*/
/*   %45 = icmp slt i32 %30, %44*/
if ((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_42_94))
begin
smu7_get_profiling_clk_42_45_reg <= smu7_get_profiling_clk_42_45;
if (reset == 1'b0 && ^(smu7_get_profiling_clk_42_45) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to smu7_get_profiling_clk_42_45_reg"); $finish; end
end
end
always @(*) begin
/* smu7_get_profiling_clk: %42*/
/*   %indvar.next20 = add i32 %indvar19, 1*/
begin
smu7_get_profiling_clk_42_indvar_next20 = (smu7_get_profiling_clk_40_indvar19_reg + 32'd1);
end
end
always @(posedge clk) begin
/* smu7_get_profiling_clk: %42*/
/*   %indvar.next20 = add i32 %indvar19, 1*/
if ((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_42_90))
begin
smu7_get_profiling_clk_42_indvar_next20_reg <= smu7_get_profiling_clk_42_indvar_next20;
if (reset == 1'b0 && ^(smu7_get_profiling_clk_42_indvar_next20) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to smu7_get_profiling_clk_42_indvar_next20_reg"); $finish; end
end
end
always @(*) begin
/* smu7_get_profiling_clk: %.loopexit6*/
/*   %tmp_sclk.0 = phi i32 [ %44, %46 ], [ %30, %.loopexit6.loopexit ]*/
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_46_96) & (memory_controller_waitrequest == 1'd0)))
begin
smu7_get_profiling_clk__loopexit6_tmp_sclk_0 = smu7_get_profiling_clk_42_44_reg;
end
/* smu7_get_profiling_clk: %.loopexit6*/
/*   %tmp_sclk.0 = phi i32 [ %44, %46 ], [ %30, %.loopexit6.loopexit ]*/
else /* if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB__loopexit6_loopexit_97) & (memory_controller_waitrequest == 1'd0))) */
begin
smu7_get_profiling_clk__loopexit6_tmp_sclk_0 = smu7_get_profiling_clk_28_30_reg;
end
end
always @(posedge clk) begin
/* smu7_get_profiling_clk: %.loopexit6*/
/*   %tmp_sclk.0 = phi i32 [ %44, %46 ], [ %30, %.loopexit6.loopexit ]*/
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_46_96) & (memory_controller_waitrequest == 1'd0)))
begin
smu7_get_profiling_clk__loopexit6_tmp_sclk_0_reg <= smu7_get_profiling_clk__loopexit6_tmp_sclk_0;
if (reset == 1'b0 && ^(smu7_get_profiling_clk__loopexit6_tmp_sclk_0) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to smu7_get_profiling_clk__loopexit6_tmp_sclk_0_reg"); $finish; end
end
/* smu7_get_profiling_clk: %.loopexit6*/
/*   %tmp_sclk.0 = phi i32 [ %44, %46 ], [ %30, %.loopexit6.loopexit ]*/
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB__loopexit6_loopexit_97) & (memory_controller_waitrequest == 1'd0)))
begin
smu7_get_profiling_clk__loopexit6_tmp_sclk_0_reg <= smu7_get_profiling_clk__loopexit6_tmp_sclk_0;
if (reset == 1'b0 && ^(smu7_get_profiling_clk__loopexit6_tmp_sclk_0) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to smu7_get_profiling_clk__loopexit6_tmp_sclk_0_reg"); $finish; end
end
end
always @(*) begin
/* smu7_get_profiling_clk: %.loopexit6*/
/*   %47 = icmp slt i32 %count.0, 0*/
begin
smu7_get_profiling_clk__loopexit6_47 = ($signed(smu7_get_profiling_clk_40_count_0_reg) < $signed(32'd0));
end
end
always @(posedge clk) begin
/* smu7_get_profiling_clk: %.loopexit6*/
/*   %47 = icmp slt i32 %count.0, 0*/
if ((cur_state == LEGUP_F_smu7_get_profiling_clk_BB__loopexit6_98))
begin
smu7_get_profiling_clk__loopexit6_47_reg <= smu7_get_profiling_clk__loopexit6_47;
if (reset == 1'b0 && ^(smu7_get_profiling_clk__loopexit6_47) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to smu7_get_profiling_clk__loopexit6_47_reg"); $finish; end
end
end
always @(*) begin
/* smu7_get_profiling_clk: %.loopexit6*/
/*   %48 = icmp eq i32 %level, 0*/
begin
smu7_get_profiling_clk__loopexit6_48 = (arg_level == 32'd0);
end
end
always @(posedge clk) begin
/* smu7_get_profiling_clk: %.loopexit6*/
/*   %48 = icmp eq i32 %level, 0*/
if ((cur_state == LEGUP_F_smu7_get_profiling_clk_BB__loopexit6_98))
begin
smu7_get_profiling_clk__loopexit6_48_reg <= smu7_get_profiling_clk__loopexit6_48;
if (reset == 1'b0 && ^(smu7_get_profiling_clk__loopexit6_48) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to smu7_get_profiling_clk__loopexit6_48_reg"); $finish; end
end
end
always @(*) begin
/* smu7_get_profiling_clk: %.loopexit6*/
/*   %or.cond = or i1 %47, %48*/
begin
smu7_get_profiling_clk__loopexit6_or_cond = (smu7_get_profiling_clk__loopexit6_47 | smu7_get_profiling_clk__loopexit6_48);
end
end
always @(posedge clk) begin
/* smu7_get_profiling_clk: %.loopexit6*/
/*   %or.cond = or i1 %47, %48*/
if ((cur_state == LEGUP_F_smu7_get_profiling_clk_BB__loopexit6_98))
begin
smu7_get_profiling_clk__loopexit6_or_cond_reg <= smu7_get_profiling_clk__loopexit6_or_cond;
if (reset == 1'b0 && ^(smu7_get_profiling_clk__loopexit6_or_cond) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to smu7_get_profiling_clk__loopexit6_or_cond_reg"); $finish; end
end
end
always @(*) begin
/* smu7_get_profiling_clk: %49*/
/*   %50 = load %struct.TYPE_12__** %39, align 4, !tbaa !0*/
begin
smu7_get_profiling_clk_49_50 = memory_controller_out_a[`MEMORY_CONTROLLER_ADDR_SIZE-1:0];
end
end
always @(posedge clk) begin
/* smu7_get_profiling_clk: %49*/
/*   %50 = load %struct.TYPE_12__** %39, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_49_102))
begin
smu7_get_profiling_clk_49_50_reg <= smu7_get_profiling_clk_49_50;
if (reset == 1'b0 && ^(smu7_get_profiling_clk_49_50) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to smu7_get_profiling_clk_49_50_reg"); $finish; end
end
end
always @(*) begin
/* smu7_get_profiling_clk: %49*/
/*   %51 = getelementptr inbounds %struct.TYPE_12__* %50, i32 0, i32 0*/
begin
smu7_get_profiling_clk_49_51 = smu7_get_profiling_clk_49_50;
end
end
always @(posedge clk) begin
/* smu7_get_profiling_clk: %49*/
/*   %51 = getelementptr inbounds %struct.TYPE_12__* %50, i32 0, i32 0*/
if ((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_49_102))
begin
smu7_get_profiling_clk_49_51_reg <= smu7_get_profiling_clk_49_51;
if (reset == 1'b0 && ^(smu7_get_profiling_clk_49_51) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to smu7_get_profiling_clk_49_51_reg"); $finish; end
end
end
always @(*) begin
/* smu7_get_profiling_clk: %49*/
/*   %52 = load i32* %51, align 4, !tbaa !3*/
begin
smu7_get_profiling_clk_49_52 = memory_controller_out_a[31:0];
end
end
always @(posedge clk) begin
/* smu7_get_profiling_clk: %49*/
/*   %52 = load i32* %51, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_49_104))
begin
smu7_get_profiling_clk_49_52_reg <= smu7_get_profiling_clk_49_52;
if (reset == 1'b0 && ^(smu7_get_profiling_clk_49_52) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to smu7_get_profiling_clk_49_52_reg"); $finish; end
end
end
always @(*) begin
/* smu7_get_profiling_clk: %53*/
/*   %tmp_sclk.1 = phi i32 [ %52, %49 ], [ %tmp_sclk.0, %.loopexit6 ]*/
if ((((cur_state == LEGUP_F_smu7_get_profiling_clk_BB__loopexit6_98) & (memory_controller_waitrequest == 1'd0)) & (smu7_get_profiling_clk__loopexit6_or_cond == 1'd0)))
begin
smu7_get_profiling_clk_53_tmp_sclk_1 = smu7_get_profiling_clk__loopexit6_tmp_sclk_0_reg;
end
/* smu7_get_profiling_clk: %53*/
/*   %tmp_sclk.1 = phi i32 [ %52, %49 ], [ %tmp_sclk.0, %.loopexit6 ]*/
else /* if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_49_104) & (memory_controller_waitrequest == 1'd0))) */
begin
smu7_get_profiling_clk_53_tmp_sclk_1 = smu7_get_profiling_clk_49_52;
end
end
always @(posedge clk) begin
/* smu7_get_profiling_clk: %53*/
/*   %tmp_sclk.1 = phi i32 [ %52, %49 ], [ %tmp_sclk.0, %.loopexit6 ]*/
if ((((cur_state == LEGUP_F_smu7_get_profiling_clk_BB__loopexit6_98) & (memory_controller_waitrequest == 1'd0)) & (smu7_get_profiling_clk__loopexit6_or_cond == 1'd0)))
begin
smu7_get_profiling_clk_53_tmp_sclk_1_reg <= smu7_get_profiling_clk_53_tmp_sclk_1;
if (reset == 1'b0 && ^(smu7_get_profiling_clk_53_tmp_sclk_1) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to smu7_get_profiling_clk_53_tmp_sclk_1_reg"); $finish; end
end
/* smu7_get_profiling_clk: %53*/
/*   %tmp_sclk.1 = phi i32 [ %52, %49 ], [ %tmp_sclk.0, %.loopexit6 ]*/
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_49_104) & (memory_controller_waitrequest == 1'd0)))
begin
smu7_get_profiling_clk_53_tmp_sclk_1_reg <= smu7_get_profiling_clk_53_tmp_sclk_1;
if (reset == 1'b0 && ^(smu7_get_profiling_clk_53_tmp_sclk_1) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to smu7_get_profiling_clk_53_tmp_sclk_1_reg"); $finish; end
end
end
always @(*) begin
/* smu7_get_profiling_clk: %54*/
/*   %55 = load i32* %37, align 4, !tbaa !3*/
begin
smu7_get_profiling_clk_54_55 = memory_controller_out_b[31:0];
end
end
always @(posedge clk) begin
/* smu7_get_profiling_clk: %54*/
/*   %55 = load i32* %37, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_54_108))
begin
smu7_get_profiling_clk_54_55_reg <= smu7_get_profiling_clk_54_55;
if (reset == 1'b0 && ^(smu7_get_profiling_clk_54_55) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to smu7_get_profiling_clk_54_55_reg"); $finish; end
end
end
always @(*) begin
/* smu7_get_profiling_clk: %54*/
/*   %56 = add nsw i32 %55, -1*/
begin
smu7_get_profiling_clk_54_56 = (smu7_get_profiling_clk_54_55 + -32'd1);
end
end
always @(posedge clk) begin
/* smu7_get_profiling_clk: %54*/
/*   %56 = add nsw i32 %55, -1*/
if ((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_54_108))
begin
smu7_get_profiling_clk_54_56_reg <= smu7_get_profiling_clk_54_56;
if (reset == 1'b0 && ^(smu7_get_profiling_clk_54_56) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to smu7_get_profiling_clk_54_56_reg"); $finish; end
end
end
always @(*) begin
/* smu7_get_profiling_clk: %57*/
/*   %58 = icmp eq i32 %level, 0*/
begin
smu7_get_profiling_clk_57_58 = (arg_level == 32'd0);
end
end
always @(posedge clk) begin
/* smu7_get_profiling_clk: %57*/
/*   %58 = icmp eq i32 %level, 0*/
if ((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_57_110))
begin
smu7_get_profiling_clk_57_58_reg <= smu7_get_profiling_clk_57_58;
if (reset == 1'b0 && ^(smu7_get_profiling_clk_57_58) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to smu7_get_profiling_clk_57_58_reg"); $finish; end
end
end
always @(*) begin
/* smu7_get_profiling_clk: %.thread*/
/*   %tmp_sclk.42 = phi i32 [ %30, %57 ], [ %tmp_sclk.1, %54 ]*/
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_54_109) & (memory_controller_waitrequest == 1'd0)))
begin
smu7_get_profiling_clk__thread_tmp_sclk_42 = smu7_get_profiling_clk_53_tmp_sclk_1_reg;
end
/* smu7_get_profiling_clk: %.thread*/
/*   %tmp_sclk.42 = phi i32 [ %30, %57 ], [ %tmp_sclk.1, %54 ]*/
else /* if ((((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_57_110) & (memory_controller_waitrequest == 1'd0)) & (smu7_get_profiling_clk_57_58 == 1'd1))) */
begin
smu7_get_profiling_clk__thread_tmp_sclk_42 = smu7_get_profiling_clk_28_30_reg;
end
end
always @(posedge clk) begin
/* smu7_get_profiling_clk: %.thread*/
/*   %tmp_sclk.42 = phi i32 [ %30, %57 ], [ %tmp_sclk.1, %54 ]*/
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_54_109) & (memory_controller_waitrequest == 1'd0)))
begin
smu7_get_profiling_clk__thread_tmp_sclk_42_reg <= smu7_get_profiling_clk__thread_tmp_sclk_42;
if (reset == 1'b0 && ^(smu7_get_profiling_clk__thread_tmp_sclk_42) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to smu7_get_profiling_clk__thread_tmp_sclk_42_reg"); $finish; end
end
/* smu7_get_profiling_clk: %.thread*/
/*   %tmp_sclk.42 = phi i32 [ %30, %57 ], [ %tmp_sclk.1, %54 ]*/
if ((((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_57_110) & (memory_controller_waitrequest == 1'd0)) & (smu7_get_profiling_clk_57_58 == 1'd1)))
begin
smu7_get_profiling_clk__thread_tmp_sclk_42_reg <= smu7_get_profiling_clk__thread_tmp_sclk_42;
if (reset == 1'b0 && ^(smu7_get_profiling_clk__thread_tmp_sclk_42) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to smu7_get_profiling_clk__thread_tmp_sclk_42_reg"); $finish; end
end
end
always @(*) begin
/* smu7_get_profiling_clk: %.thread7*/
/*   %tmp_sclk.41 = phi i32 [ %tmp_sclk.42, %.thread ], [ %30, %57 ], [ %tmp_sclk.1, %53 ]*/
if ((((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_53_105) & (memory_controller_waitrequest == 1'd0)) & (smu7_get_profiling_clk__loopexit6_48_reg == 1'd0)))
begin
smu7_get_profiling_clk__thread7_tmp_sclk_41 = smu7_get_profiling_clk_53_tmp_sclk_1_reg;
end
/* smu7_get_profiling_clk: %.thread7*/
/*   %tmp_sclk.41 = phi i32 [ %tmp_sclk.42, %.thread ], [ %30, %57 ], [ %tmp_sclk.1, %53 ]*/
else if ((((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_57_110) & (memory_controller_waitrequest == 1'd0)) & (smu7_get_profiling_clk_57_58 == 1'd0)))
begin
smu7_get_profiling_clk__thread7_tmp_sclk_41 = smu7_get_profiling_clk_28_30_reg;
end
/* smu7_get_profiling_clk: %.thread7*/
/*   %tmp_sclk.41 = phi i32 [ %tmp_sclk.42, %.thread ], [ %30, %57 ], [ %tmp_sclk.1, %53 ]*/
else /* if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB__thread_112) & (memory_controller_waitrequest == 1'd0))) */
begin
smu7_get_profiling_clk__thread7_tmp_sclk_41 = smu7_get_profiling_clk__thread_tmp_sclk_42_reg;
end
end
always @(posedge clk) begin
/* smu7_get_profiling_clk: %.thread7*/
/*   %tmp_sclk.41 = phi i32 [ %tmp_sclk.42, %.thread ], [ %30, %57 ], [ %tmp_sclk.1, %53 ]*/
if ((((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_53_105) & (memory_controller_waitrequest == 1'd0)) & (smu7_get_profiling_clk__loopexit6_48_reg == 1'd0)))
begin
smu7_get_profiling_clk__thread7_tmp_sclk_41_reg <= smu7_get_profiling_clk__thread7_tmp_sclk_41;
if (reset == 1'b0 && ^(smu7_get_profiling_clk__thread7_tmp_sclk_41) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to smu7_get_profiling_clk__thread7_tmp_sclk_41_reg"); $finish; end
end
/* smu7_get_profiling_clk: %.thread7*/
/*   %tmp_sclk.41 = phi i32 [ %tmp_sclk.42, %.thread ], [ %30, %57 ], [ %tmp_sclk.1, %53 ]*/
if ((((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_57_110) & (memory_controller_waitrequest == 1'd0)) & (smu7_get_profiling_clk_57_58 == 1'd0)))
begin
smu7_get_profiling_clk__thread7_tmp_sclk_41_reg <= smu7_get_profiling_clk__thread7_tmp_sclk_41;
if (reset == 1'b0 && ^(smu7_get_profiling_clk__thread7_tmp_sclk_41) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to smu7_get_profiling_clk__thread7_tmp_sclk_41_reg"); $finish; end
end
/* smu7_get_profiling_clk: %.thread7*/
/*   %tmp_sclk.41 = phi i32 [ %tmp_sclk.42, %.thread ], [ %30, %57 ], [ %tmp_sclk.1, %53 ]*/
if (((cur_state == LEGUP_F_smu7_get_profiling_clk_BB__thread_112) & (memory_controller_waitrequest == 1'd0)))
begin
smu7_get_profiling_clk__thread7_tmp_sclk_41_reg <= smu7_get_profiling_clk__thread7_tmp_sclk_41;
if (reset == 1'b0 && ^(smu7_get_profiling_clk__thread7_tmp_sclk_41) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to smu7_get_profiling_clk__thread7_tmp_sclk_41_reg"); $finish; end
end
end
always @(*) begin
/* smu7_get_profiling_clk: %.thread7*/
/*   %59 = load i32* %2, align 4, !tbaa !3*/
begin
smu7_get_profiling_clk__thread7_59 = memory_controller_out_b[31:0];
end
end
always @(posedge clk) begin
/* smu7_get_profiling_clk: %.thread7*/
/*   %59 = load i32* %2, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_smu7_get_profiling_clk_BB__thread7_115))
begin
smu7_get_profiling_clk__thread7_59_reg <= smu7_get_profiling_clk__thread7_59;
if (reset == 1'b0 && ^(smu7_get_profiling_clk__thread7_59) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to smu7_get_profiling_clk__thread7_59_reg"); $finish; end
end
end
always @(*) begin
/* smu7_get_profiling_clk: %.thread7*/
/*   %60 = add nsw i32 %59, -1*/
begin
smu7_get_profiling_clk__thread7_60 = (smu7_get_profiling_clk__thread7_59 + -32'd1);
end
end
always @(posedge clk) begin
/* smu7_get_profiling_clk: %.thread7*/
/*   %60 = add nsw i32 %59, -1*/
if ((cur_state == LEGUP_F_smu7_get_profiling_clk_BB__thread7_115))
begin
smu7_get_profiling_clk__thread7_60_reg <= smu7_get_profiling_clk__thread7_60;
if (reset == 1'b0 && ^(smu7_get_profiling_clk__thread7_60) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to smu7_get_profiling_clk__thread7_60_reg"); $finish; end
end
end
always @(*) begin
/* smu7_get_profiling_clk: %.thread7*/
/*   %61 = getelementptr inbounds %struct.pp_hwmgr* %hwmgr, i32 0, i32 1*/
begin
smu7_get_profiling_clk__thread7_61 = (arg_hwmgr + 4);
end
end
always @(posedge clk) begin
/* smu7_get_profiling_clk: %.thread7*/
/*   %61 = getelementptr inbounds %struct.pp_hwmgr* %hwmgr, i32 0, i32 1*/
if ((cur_state == LEGUP_F_smu7_get_profiling_clk_BB__thread7_113))
begin
smu7_get_profiling_clk__thread7_61_reg <= smu7_get_profiling_clk__thread7_61;
if (reset == 1'b0 && ^(smu7_get_profiling_clk__thread7_61) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to smu7_get_profiling_clk__thread7_61_reg"); $finish; end
end
end
always @(*) begin
/* smu7_get_profiling_clk: %.thread7*/
/*   %62 = getelementptr inbounds %struct.pp_hwmgr* %hwmgr, i32 0, i32 2*/
begin
smu7_get_profiling_clk__thread7_62 = (arg_hwmgr + 8);
end
end
always @(posedge clk) begin
/* smu7_get_profiling_clk: %.thread7*/
/*   %62 = getelementptr inbounds %struct.pp_hwmgr* %hwmgr, i32 0, i32 2*/
if ((cur_state == LEGUP_F_smu7_get_profiling_clk_BB__thread7_113))
begin
smu7_get_profiling_clk__thread7_62_reg <= smu7_get_profiling_clk__thread7_62;
if (reset == 1'b0 && ^(smu7_get_profiling_clk__thread7_62) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to smu7_get_profiling_clk__thread7_62_reg"); $finish; end
end
end
always @(*) begin
/* smu7_get_profiling_clk: %14*/
/*   %24 = sdiv i32 %23, %12*/
if ((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_14_17))
begin
smu7_get_profiling_clk_signed_divide_32_0_op0 = smu7_get_profiling_clk_14_23;
end
/* smu7_get_profiling_clk: %28*/
/*   %30 = sdiv i32 %29, 100*/
else /* if ((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_28_51)) */
begin
smu7_get_profiling_clk_signed_divide_32_0_op0 = smu7_get_profiling_clk_28_29;
end
end
always @(*) begin
/* smu7_get_profiling_clk: %14*/
/*   %24 = sdiv i32 %23, %12*/
if ((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_14_17))
begin
smu7_get_profiling_clk_signed_divide_32_0_op1 = smu7_get_profiling_clk_6_12_reg;
end
/* smu7_get_profiling_clk: %28*/
/*   %30 = sdiv i32 %29, 100*/
else /* if ((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_28_51)) */
begin
smu7_get_profiling_clk_signed_divide_32_0_op1 = 32'd100;
end
end
always @(*) begin
lpm_divide_smu7_get_profiling_clk_14_24_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
lpm_divide_smu7_get_profiling_clk_14_24_out = lpm_divide_smu7_get_profiling_clk_14_24_temp_out;
end
always @(*) begin
smu7_get_profiling_clk_signed_divide_32_0 = lpm_divide_smu7_get_profiling_clk_14_24_out;
end
always @(*) begin
lpm_mult_smu7_get_profiling_clk_14_23_en = (memory_controller_waitrequest == 1'd0);
end
always @(posedge clk) begin
/* smu7_get_profiling_clk: %14*/
/*   %23 = mul nsw i32 %22, 100*/
if ((lpm_mult_smu7_get_profiling_clk_14_23_en == 1'd1))
begin
smu7_get_profiling_clk_14_23_stage0_reg <= (smu7_get_profiling_clk_14_22 * 32'd100);
end
end
always @(*) begin
lpm_mult_smu7_get_profiling_clk_28_29_en = (memory_controller_waitrequest == 1'd0);
end
always @(posedge clk) begin
/* smu7_get_profiling_clk: %28*/
/*   %29 = mul nsw i32 %tmp_mclk.0, %percentage.0*/
if ((lpm_mult_smu7_get_profiling_clk_28_29_en == 1'd1))
begin
smu7_get_profiling_clk_28_29_stage0_reg <= (smu7_get_profiling_clk_28_tmp_mclk_0_reg * smu7_get_profiling_clk_28_percentage_0_reg);
end
end
always @(*) begin
lpm_divide_smu7_get_profiling_clk_28_30_en = (memory_controller_waitrequest == 1'd0);
end
always @(posedge clk) begin
if ((cur_state == LEGUP_0))
begin
finish <= 1'd0;
if (reset == 1'b0 && ^(1'd0) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to finish"); $finish; end
end
/* smu7_get_profiling_clk: %63*/
/*   ret i32 0*/
if ((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_63_118))
begin
finish <= (memory_controller_waitrequest == 1'd0);
if (reset == 1'b0 && ^((memory_controller_waitrequest == 1'd0)) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to finish"); $finish; end
end
end
always @(*) begin
memory_controller_enable_a = 1'd0;
if ((cur_state == LEGUP_0))
begin
memory_controller_enable_a = 1'd0;
end
/* smu7_get_profiling_clk: %0*/
/*   %2 = load i32** %1, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_0_1))
begin
memory_controller_enable_a = 1'd1;
end
/* smu7_get_profiling_clk: %6*/
/*   %10 = load %struct.TYPE_12__** %9, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_6_6))
begin
memory_controller_enable_a = 1'd1;
end
/* smu7_get_profiling_clk: %14*/
/*   %18 = load i32* %16, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_14_11))
begin
memory_controller_enable_a = 1'd1;
end
/* smu7_get_profiling_clk: %14*/
/*   %27 = load i32* %26, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_14_12))
begin
memory_controller_enable_a = 1'd1;
end
/* smu7_get_profiling_clk: %28*/
/*   store i32 %storemerge, i32* %mclk_mask, align 4*/
if ((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_28_50))
begin
memory_controller_enable_a = 1'd1;
end
/* smu7_get_profiling_clk: %28*/
/*   %32 = load i32* %31, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_28_51))
begin
memory_controller_enable_a = 1'd1;
end
/* smu7_get_profiling_clk: %34*/
/*   %36 = load %struct.TYPE_15__** %35, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_34_84))
begin
memory_controller_enable_a = 1'd1;
end
/* smu7_get_profiling_clk: %42*/
/*   %43 = load %struct.TYPE_12__** %39, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_42_90))
begin
memory_controller_enable_a = 1'd1;
end
/* smu7_get_profiling_clk: %46*/
/*   store i32 %count.0, i32* %sclk_mask, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_46_95))
begin
memory_controller_enable_a = 1'd1;
end
/* smu7_get_profiling_clk: %49*/
/*   store i32 0, i32* %sclk_mask, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_49_99))
begin
memory_controller_enable_a = 1'd1;
end
/* smu7_get_profiling_clk: %49*/
/*   %50 = load %struct.TYPE_12__** %39, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_49_100))
begin
memory_controller_enable_a = 1'd1;
end
/* smu7_get_profiling_clk: %49*/
/*   %52 = load i32* %51, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_49_102))
begin
memory_controller_enable_a = 1'd1;
end
/* smu7_get_profiling_clk: %.thread7*/
/*   store i32 %tmp_sclk.41, i32* %61, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_smu7_get_profiling_clk_BB__thread7_116))
begin
memory_controller_enable_a = 1'd1;
end
end
always @(*) begin
memory_controller_address_a = 1'd0;
if ((cur_state == LEGUP_0))
begin
memory_controller_address_a = 1'd0;
end
/* smu7_get_profiling_clk: %0*/
/*   %2 = load i32** %1, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_0_1))
begin
memory_controller_address_a = smu7_get_profiling_clk_0_1;
end
/* smu7_get_profiling_clk: %6*/
/*   %10 = load %struct.TYPE_12__** %9, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_6_6))
begin
memory_controller_address_a = smu7_get_profiling_clk_6_9;
end
/* smu7_get_profiling_clk: %14*/
/*   %18 = load i32* %16, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_14_11))
begin
memory_controller_address_a = smu7_get_profiling_clk_14_16;
end
/* smu7_get_profiling_clk: %14*/
/*   %27 = load i32* %26, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_14_12))
begin
memory_controller_address_a = smu7_get_profiling_clk_14_26;
end
/* smu7_get_profiling_clk: %28*/
/*   store i32 %storemerge, i32* %mclk_mask, align 4*/
if ((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_28_50))
begin
memory_controller_address_a = arg_mclk_mask;
end
/* smu7_get_profiling_clk: %28*/
/*   %32 = load i32* %31, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_28_51))
begin
memory_controller_address_a = smu7_get_profiling_clk_28_31_reg;
end
/* smu7_get_profiling_clk: %34*/
/*   %36 = load %struct.TYPE_15__** %35, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_34_84))
begin
memory_controller_address_a = smu7_get_profiling_clk_34_35;
end
/* smu7_get_profiling_clk: %42*/
/*   %43 = load %struct.TYPE_12__** %39, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_42_90))
begin
memory_controller_address_a = smu7_get_profiling_clk_34_39_reg;
end
/* smu7_get_profiling_clk: %46*/
/*   store i32 %count.0, i32* %sclk_mask, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_46_95))
begin
memory_controller_address_a = arg_sclk_mask;
end
/* smu7_get_profiling_clk: %49*/
/*   store i32 0, i32* %sclk_mask, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_49_99))
begin
memory_controller_address_a = arg_sclk_mask;
end
/* smu7_get_profiling_clk: %49*/
/*   %50 = load %struct.TYPE_12__** %39, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_49_100))
begin
memory_controller_address_a = smu7_get_profiling_clk_34_39_reg;
end
/* smu7_get_profiling_clk: %49*/
/*   %52 = load i32* %51, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_49_102))
begin
memory_controller_address_a = smu7_get_profiling_clk_49_51;
end
/* smu7_get_profiling_clk: %.thread7*/
/*   store i32 %tmp_sclk.41, i32* %61, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_smu7_get_profiling_clk_BB__thread7_116))
begin
memory_controller_address_a = smu7_get_profiling_clk__thread7_61_reg;
end
end
always @(*) begin
memory_controller_write_enable_a = 1'd0;
if ((cur_state == LEGUP_0))
begin
memory_controller_write_enable_a = 1'd0;
end
/* smu7_get_profiling_clk: %0*/
/*   %2 = load i32** %1, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_0_1))
begin
memory_controller_write_enable_a = 1'd0;
end
/* smu7_get_profiling_clk: %6*/
/*   %10 = load %struct.TYPE_12__** %9, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_6_6))
begin
memory_controller_write_enable_a = 1'd0;
end
/* smu7_get_profiling_clk: %14*/
/*   %18 = load i32* %16, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_14_11))
begin
memory_controller_write_enable_a = 1'd0;
end
/* smu7_get_profiling_clk: %14*/
/*   %27 = load i32* %26, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_14_12))
begin
memory_controller_write_enable_a = 1'd0;
end
/* smu7_get_profiling_clk: %28*/
/*   store i32 %storemerge, i32* %mclk_mask, align 4*/
if ((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_28_50))
begin
memory_controller_write_enable_a = 1'd1;
end
/* smu7_get_profiling_clk: %28*/
/*   %32 = load i32* %31, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_28_51))
begin
memory_controller_write_enable_a = 1'd0;
end
/* smu7_get_profiling_clk: %34*/
/*   %36 = load %struct.TYPE_15__** %35, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_34_84))
begin
memory_controller_write_enable_a = 1'd0;
end
/* smu7_get_profiling_clk: %42*/
/*   %43 = load %struct.TYPE_12__** %39, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_42_90))
begin
memory_controller_write_enable_a = 1'd0;
end
/* smu7_get_profiling_clk: %46*/
/*   store i32 %count.0, i32* %sclk_mask, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_46_95))
begin
memory_controller_write_enable_a = 1'd1;
end
/* smu7_get_profiling_clk: %49*/
/*   store i32 0, i32* %sclk_mask, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_49_99))
begin
memory_controller_write_enable_a = 1'd1;
end
/* smu7_get_profiling_clk: %49*/
/*   %50 = load %struct.TYPE_12__** %39, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_49_100))
begin
memory_controller_write_enable_a = 1'd0;
end
/* smu7_get_profiling_clk: %49*/
/*   %52 = load i32* %51, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_49_102))
begin
memory_controller_write_enable_a = 1'd0;
end
/* smu7_get_profiling_clk: %.thread7*/
/*   store i32 %tmp_sclk.41, i32* %61, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_smu7_get_profiling_clk_BB__thread7_116))
begin
memory_controller_write_enable_a = 1'd1;
end
end
always @(*) begin
memory_controller_in_a = 1'd0;
if ((cur_state == LEGUP_0))
begin
memory_controller_in_a = 1'd0;
end
/* smu7_get_profiling_clk: %28*/
/*   store i32 %storemerge, i32* %mclk_mask, align 4*/
if ((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_28_50))
begin
memory_controller_in_a = smu7_get_profiling_clk_28_storemerge_reg;
end
/* smu7_get_profiling_clk: %46*/
/*   store i32 %count.0, i32* %sclk_mask, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_46_95))
begin
memory_controller_in_a = smu7_get_profiling_clk_40_count_0_reg;
end
/* smu7_get_profiling_clk: %49*/
/*   store i32 0, i32* %sclk_mask, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_49_99))
begin
memory_controller_in_a = 32'd0;
end
/* smu7_get_profiling_clk: %.thread7*/
/*   store i32 %tmp_sclk.41, i32* %61, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_smu7_get_profiling_clk_BB__thread7_116))
begin
memory_controller_in_a = smu7_get_profiling_clk__thread7_tmp_sclk_41_reg;
end
end
always @(*) begin
memory_controller_size_a = 1'd0;
if ((cur_state == LEGUP_0))
begin
memory_controller_size_a = 1'd0;
end
/* smu7_get_profiling_clk: %0*/
/*   %2 = load i32** %1, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_0_1))
begin
memory_controller_size_a = 2'd2;
end
/* smu7_get_profiling_clk: %6*/
/*   %10 = load %struct.TYPE_12__** %9, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_6_6))
begin
memory_controller_size_a = 2'd2;
end
/* smu7_get_profiling_clk: %14*/
/*   %18 = load i32* %16, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_14_11))
begin
memory_controller_size_a = 2'd2;
end
/* smu7_get_profiling_clk: %14*/
/*   %27 = load i32* %26, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_14_12))
begin
memory_controller_size_a = 2'd2;
end
/* smu7_get_profiling_clk: %28*/
/*   store i32 %storemerge, i32* %mclk_mask, align 4*/
if ((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_28_50))
begin
memory_controller_size_a = 2'd2;
end
/* smu7_get_profiling_clk: %28*/
/*   %32 = load i32* %31, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_28_51))
begin
memory_controller_size_a = 2'd2;
end
/* smu7_get_profiling_clk: %34*/
/*   %36 = load %struct.TYPE_15__** %35, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_34_84))
begin
memory_controller_size_a = 2'd2;
end
/* smu7_get_profiling_clk: %42*/
/*   %43 = load %struct.TYPE_12__** %39, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_42_90))
begin
memory_controller_size_a = 2'd2;
end
/* smu7_get_profiling_clk: %46*/
/*   store i32 %count.0, i32* %sclk_mask, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_46_95))
begin
memory_controller_size_a = 2'd2;
end
/* smu7_get_profiling_clk: %49*/
/*   store i32 0, i32* %sclk_mask, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_49_99))
begin
memory_controller_size_a = 2'd2;
end
/* smu7_get_profiling_clk: %49*/
/*   %50 = load %struct.TYPE_12__** %39, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_49_100))
begin
memory_controller_size_a = 2'd2;
end
/* smu7_get_profiling_clk: %49*/
/*   %52 = load i32* %51, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_49_102))
begin
memory_controller_size_a = 2'd2;
end
/* smu7_get_profiling_clk: %.thread7*/
/*   store i32 %tmp_sclk.41, i32* %61, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_smu7_get_profiling_clk_BB__thread7_116))
begin
memory_controller_size_a = 2'd2;
end
end
always @(*) begin
memory_controller_enable_b = 1'd0;
if ((cur_state == LEGUP_0))
begin
memory_controller_enable_b = 1'd0;
end
/* smu7_get_profiling_clk: %0*/
/*   %4 = load i32* %3, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_0_3))
begin
memory_controller_enable_b = 1'd1;
end
/* smu7_get_profiling_clk: %6*/
/*   %12 = load i32* %11, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_6_8))
begin
memory_controller_enable_b = 1'd1;
end
/* smu7_get_profiling_clk: %14*/
/*   %19 = load %struct.TYPE_12__** %17, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_14_11))
begin
memory_controller_enable_b = 1'd1;
end
/* smu7_get_profiling_clk: %14*/
/*   %22 = load i32* %21, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_14_14))
begin
memory_controller_enable_b = 1'd1;
end
/* smu7_get_profiling_clk: %34*/
/*   %38 = load i32* %37, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_34_86))
begin
memory_controller_enable_b = 1'd1;
end
/* smu7_get_profiling_clk: %42*/
/*   %44 = load i32* %scevgep2425, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_42_92))
begin
memory_controller_enable_b = 1'd1;
end
/* smu7_get_profiling_clk: %54*/
/*   %55 = load i32* %37, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_54_106))
begin
memory_controller_enable_b = 1'd1;
end
/* smu7_get_profiling_clk: %54*/
/*   store i32 %56, i32* %sclk_mask, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_54_108))
begin
memory_controller_enable_b = 1'd1;
end
/* smu7_get_profiling_clk: %.thread*/
/*   store i32 0, i32* %mclk_mask, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_smu7_get_profiling_clk_BB__thread_111))
begin
memory_controller_enable_b = 1'd1;
end
/* smu7_get_profiling_clk: %.thread7*/
/*   %59 = load i32* %2, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_smu7_get_profiling_clk_BB__thread7_113))
begin
memory_controller_enable_b = 1'd1;
end
/* smu7_get_profiling_clk: %.thread7*/
/*   store i32 %60, i32* %pcie_mask, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_smu7_get_profiling_clk_BB__thread7_115))
begin
memory_controller_enable_b = 1'd1;
end
/* smu7_get_profiling_clk: %.thread7*/
/*   store i32 %tmp_mclk.0, i32* %62, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_smu7_get_profiling_clk_BB__thread7_116))
begin
memory_controller_enable_b = 1'd1;
end
end
always @(*) begin
memory_controller_address_b = 1'd0;
if ((cur_state == LEGUP_0))
begin
memory_controller_address_b = 1'd0;
end
/* smu7_get_profiling_clk: %0*/
/*   %4 = load i32* %3, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_0_3))
begin
memory_controller_address_b = smu7_get_profiling_clk_0_3;
end
/* smu7_get_profiling_clk: %6*/
/*   %12 = load i32* %11, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_6_8))
begin
memory_controller_address_b = smu7_get_profiling_clk_6_11;
end
/* smu7_get_profiling_clk: %14*/
/*   %19 = load %struct.TYPE_12__** %17, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_14_11))
begin
memory_controller_address_b = smu7_get_profiling_clk_14_17;
end
/* smu7_get_profiling_clk: %14*/
/*   %22 = load i32* %21, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_14_14))
begin
memory_controller_address_b = smu7_get_profiling_clk_14_21;
end
/* smu7_get_profiling_clk: %34*/
/*   %38 = load i32* %37, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_34_86))
begin
memory_controller_address_b = smu7_get_profiling_clk_34_37;
end
/* smu7_get_profiling_clk: %42*/
/*   %44 = load i32* %scevgep2425, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_42_92))
begin
memory_controller_address_b = smu7_get_profiling_clk_42_scevgep2425;
end
/* smu7_get_profiling_clk: %54*/
/*   %55 = load i32* %37, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_54_106))
begin
memory_controller_address_b = smu7_get_profiling_clk_34_37_reg;
end
/* smu7_get_profiling_clk: %54*/
/*   store i32 %56, i32* %sclk_mask, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_54_108))
begin
memory_controller_address_b = arg_sclk_mask;
end
/* smu7_get_profiling_clk: %.thread*/
/*   store i32 0, i32* %mclk_mask, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_smu7_get_profiling_clk_BB__thread_111))
begin
memory_controller_address_b = arg_mclk_mask;
end
/* smu7_get_profiling_clk: %.thread7*/
/*   %59 = load i32* %2, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_smu7_get_profiling_clk_BB__thread7_113))
begin
memory_controller_address_b = smu7_get_profiling_clk_0_2_reg;
end
/* smu7_get_profiling_clk: %.thread7*/
/*   store i32 %60, i32* %pcie_mask, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_smu7_get_profiling_clk_BB__thread7_115))
begin
memory_controller_address_b = arg_pcie_mask;
end
/* smu7_get_profiling_clk: %.thread7*/
/*   store i32 %tmp_mclk.0, i32* %62, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_smu7_get_profiling_clk_BB__thread7_116))
begin
memory_controller_address_b = smu7_get_profiling_clk__thread7_62_reg;
end
end
always @(*) begin
memory_controller_write_enable_b = 1'd0;
if ((cur_state == LEGUP_0))
begin
memory_controller_write_enable_b = 1'd0;
end
/* smu7_get_profiling_clk: %0*/
/*   %4 = load i32* %3, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_0_3))
begin
memory_controller_write_enable_b = 1'd0;
end
/* smu7_get_profiling_clk: %6*/
/*   %12 = load i32* %11, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_6_8))
begin
memory_controller_write_enable_b = 1'd0;
end
/* smu7_get_profiling_clk: %14*/
/*   %19 = load %struct.TYPE_12__** %17, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_14_11))
begin
memory_controller_write_enable_b = 1'd0;
end
/* smu7_get_profiling_clk: %14*/
/*   %22 = load i32* %21, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_14_14))
begin
memory_controller_write_enable_b = 1'd0;
end
/* smu7_get_profiling_clk: %34*/
/*   %38 = load i32* %37, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_34_86))
begin
memory_controller_write_enable_b = 1'd0;
end
/* smu7_get_profiling_clk: %42*/
/*   %44 = load i32* %scevgep2425, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_42_92))
begin
memory_controller_write_enable_b = 1'd0;
end
/* smu7_get_profiling_clk: %54*/
/*   %55 = load i32* %37, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_54_106))
begin
memory_controller_write_enable_b = 1'd0;
end
/* smu7_get_profiling_clk: %54*/
/*   store i32 %56, i32* %sclk_mask, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_54_108))
begin
memory_controller_write_enable_b = 1'd1;
end
/* smu7_get_profiling_clk: %.thread*/
/*   store i32 0, i32* %mclk_mask, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_smu7_get_profiling_clk_BB__thread_111))
begin
memory_controller_write_enable_b = 1'd1;
end
/* smu7_get_profiling_clk: %.thread7*/
/*   %59 = load i32* %2, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_smu7_get_profiling_clk_BB__thread7_113))
begin
memory_controller_write_enable_b = 1'd0;
end
/* smu7_get_profiling_clk: %.thread7*/
/*   store i32 %60, i32* %pcie_mask, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_smu7_get_profiling_clk_BB__thread7_115))
begin
memory_controller_write_enable_b = 1'd1;
end
/* smu7_get_profiling_clk: %.thread7*/
/*   store i32 %tmp_mclk.0, i32* %62, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_smu7_get_profiling_clk_BB__thread7_116))
begin
memory_controller_write_enable_b = 1'd1;
end
end
always @(*) begin
memory_controller_in_b = 1'd0;
if ((cur_state == LEGUP_0))
begin
memory_controller_in_b = 1'd0;
end
/* smu7_get_profiling_clk: %54*/
/*   store i32 %56, i32* %sclk_mask, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_54_108))
begin
memory_controller_in_b = smu7_get_profiling_clk_54_56;
end
/* smu7_get_profiling_clk: %.thread*/
/*   store i32 0, i32* %mclk_mask, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_smu7_get_profiling_clk_BB__thread_111))
begin
memory_controller_in_b = 32'd0;
end
/* smu7_get_profiling_clk: %.thread7*/
/*   store i32 %60, i32* %pcie_mask, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_smu7_get_profiling_clk_BB__thread7_115))
begin
memory_controller_in_b = smu7_get_profiling_clk__thread7_60;
end
/* smu7_get_profiling_clk: %.thread7*/
/*   store i32 %tmp_mclk.0, i32* %62, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_smu7_get_profiling_clk_BB__thread7_116))
begin
memory_controller_in_b = smu7_get_profiling_clk_28_tmp_mclk_0_reg;
end
end
always @(*) begin
memory_controller_size_b = 1'd0;
if ((cur_state == LEGUP_0))
begin
memory_controller_size_b = 1'd0;
end
/* smu7_get_profiling_clk: %0*/
/*   %4 = load i32* %3, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_0_3))
begin
memory_controller_size_b = 2'd2;
end
/* smu7_get_profiling_clk: %6*/
/*   %12 = load i32* %11, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_6_8))
begin
memory_controller_size_b = 2'd2;
end
/* smu7_get_profiling_clk: %14*/
/*   %19 = load %struct.TYPE_12__** %17, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_14_11))
begin
memory_controller_size_b = 2'd2;
end
/* smu7_get_profiling_clk: %14*/
/*   %22 = load i32* %21, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_14_14))
begin
memory_controller_size_b = 2'd2;
end
/* smu7_get_profiling_clk: %34*/
/*   %38 = load i32* %37, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_34_86))
begin
memory_controller_size_b = 2'd2;
end
/* smu7_get_profiling_clk: %42*/
/*   %44 = load i32* %scevgep2425, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_42_92))
begin
memory_controller_size_b = 2'd2;
end
/* smu7_get_profiling_clk: %54*/
/*   %55 = load i32* %37, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_54_106))
begin
memory_controller_size_b = 2'd2;
end
/* smu7_get_profiling_clk: %54*/
/*   store i32 %56, i32* %sclk_mask, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_54_108))
begin
memory_controller_size_b = 2'd2;
end
/* smu7_get_profiling_clk: %.thread*/
/*   store i32 0, i32* %mclk_mask, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_smu7_get_profiling_clk_BB__thread_111))
begin
memory_controller_size_b = 2'd2;
end
/* smu7_get_profiling_clk: %.thread7*/
/*   %59 = load i32* %2, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_smu7_get_profiling_clk_BB__thread7_113))
begin
memory_controller_size_b = 2'd2;
end
/* smu7_get_profiling_clk: %.thread7*/
/*   store i32 %60, i32* %pcie_mask, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_smu7_get_profiling_clk_BB__thread7_115))
begin
memory_controller_size_b = 2'd2;
end
/* smu7_get_profiling_clk: %.thread7*/
/*   store i32 %tmp_mclk.0, i32* %62, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_smu7_get_profiling_clk_BB__thread7_116))
begin
memory_controller_size_b = 2'd2;
end
end
always @(posedge clk) begin
if ((cur_state == LEGUP_0))
begin
return_val <= 0;
if (reset == 1'b0 && ^(0) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to return_val"); $finish; end
end
/* smu7_get_profiling_clk: %63*/
/*   ret i32 0*/
if ((cur_state == LEGUP_F_smu7_get_profiling_clk_BB_63_118))
begin
return_val <= 32'd0;
if (reset == 1'b0 && ^(32'd0) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to return_val"); $finish; end
end
end

endmodule 
`timescale 1 ns / 1 ns
module main
(
	clk,
	clk2x,
	clk1x_follower,
	reset,
	start,
	finish,
	memory_controller_enable_a,
	memory_controller_address_a,
	memory_controller_write_enable_a,
	memory_controller_in_a,
	memory_controller_size_a,
	memory_controller_out_a,
	memory_controller_enable_b,
	memory_controller_address_b,
	memory_controller_write_enable_b,
	memory_controller_in_b,
	memory_controller_size_b,
	memory_controller_out_b,
	memory_controller_waitrequest,
	return_val
);

parameter [1:0] LEGUP_0 = 2'd0;
parameter [1:0] LEGUP_F_main_BB_0_1 = 2'd1;
parameter [1:0] LEGUP_F_main_BB_0_3 = 2'd3;
parameter [1:0] LEGUP_function_call_2 = 2'd2;

input  clk;
input  clk2x;
input  clk1x_follower;
input  reset;
input  start;
output reg  finish;
output reg  memory_controller_enable_a;
output reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] memory_controller_address_a;
output reg  memory_controller_write_enable_a;
output reg [`MEMORY_CONTROLLER_DATA_SIZE-1:0] memory_controller_in_a;
output reg [1:0] memory_controller_size_a;
input [`MEMORY_CONTROLLER_DATA_SIZE-1:0] memory_controller_out_a;
output reg  memory_controller_enable_b;
output reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] memory_controller_address_b;
output reg  memory_controller_write_enable_b;
output reg [`MEMORY_CONTROLLER_DATA_SIZE-1:0] memory_controller_in_b;
output reg [1:0] memory_controller_size_b;
input [`MEMORY_CONTROLLER_DATA_SIZE-1:0] memory_controller_out_b;
input  memory_controller_waitrequest;
output reg [31:0] return_val;
reg [1:0] cur_state;
reg [31:0] main_0_1;
reg [31:0] main_0_1_reg;
reg  smu7_get_profiling_clk_start;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] smu7_get_profiling_clk_arg_hwmgr;
reg [31:0] smu7_get_profiling_clk_arg_level;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] smu7_get_profiling_clk_arg_sclk_mask;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] smu7_get_profiling_clk_arg_mclk_mask;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] smu7_get_profiling_clk_arg_pcie_mask;
wire  smu7_get_profiling_clk_memory_controller_enable_a;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] smu7_get_profiling_clk_memory_controller_address_a;
wire  smu7_get_profiling_clk_memory_controller_write_enable_a;
wire [`MEMORY_CONTROLLER_DATA_SIZE-1:0] smu7_get_profiling_clk_memory_controller_in_a;
reg [`MEMORY_CONTROLLER_DATA_SIZE-1:0] smu7_get_profiling_clk_memory_controller_out_a;
wire [1:0] smu7_get_profiling_clk_memory_controller_size_a;
wire  smu7_get_profiling_clk_memory_controller_enable_b;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] smu7_get_profiling_clk_memory_controller_address_b;
wire  smu7_get_profiling_clk_memory_controller_write_enable_b;
wire [`MEMORY_CONTROLLER_DATA_SIZE-1:0] smu7_get_profiling_clk_memory_controller_in_b;
reg [`MEMORY_CONTROLLER_DATA_SIZE-1:0] smu7_get_profiling_clk_memory_controller_out_b;
wire [1:0] smu7_get_profiling_clk_memory_controller_size_b;
reg  smu7_get_profiling_clk_memory_controller_waitrequest;
wire  smu7_get_profiling_clk_finish;
reg  smu7_get_profiling_clk_finish_final;
wire [31:0] smu7_get_profiling_clk_return_val;
reg  legup_function_call;
wire [15:0] legup_pthreadpoll_threadID;


smu7_get_profiling_clk smu7_get_profiling_clk_inst (
	.memory_controller_enable_a (smu7_get_profiling_clk_memory_controller_enable_a),
	.memory_controller_address_a (smu7_get_profiling_clk_memory_controller_address_a),
	.memory_controller_write_enable_a (smu7_get_profiling_clk_memory_controller_write_enable_a),
	.memory_controller_in_a (smu7_get_profiling_clk_memory_controller_in_a),
	.memory_controller_size_a (smu7_get_profiling_clk_memory_controller_size_a),
	.memory_controller_out_a (memory_controller_out_a[`MEMORY_CONTROLLER_DATA_SIZE-1:0]),
	.memory_controller_enable_b (smu7_get_profiling_clk_memory_controller_enable_b),
	.memory_controller_address_b (smu7_get_profiling_clk_memory_controller_address_b),
	.memory_controller_write_enable_b (smu7_get_profiling_clk_memory_controller_write_enable_b),
	.memory_controller_in_b (smu7_get_profiling_clk_memory_controller_in_b),
	.memory_controller_size_b (smu7_get_profiling_clk_memory_controller_size_b),
	.memory_controller_out_b (memory_controller_out_b[`MEMORY_CONTROLLER_DATA_SIZE-1:0]),
	.memory_controller_waitrequest (memory_controller_waitrequest),
	.clk (clk),
	.clk2x (clk2x),
	.clk1x_follower (clk1x_follower),
	.reset (reset),
	.start (smu7_get_profiling_clk_start),
	.finish (smu7_get_profiling_clk_finish),
	.return_val (smu7_get_profiling_clk_return_val),
	.arg_hwmgr (smu7_get_profiling_clk_arg_hwmgr),
	.arg_level (smu7_get_profiling_clk_arg_level),
	.arg_sclk_mask (smu7_get_profiling_clk_arg_sclk_mask),
	.arg_mclk_mask (smu7_get_profiling_clk_arg_mclk_mask),
	.arg_pcie_mask (smu7_get_profiling_clk_arg_pcie_mask)
);


// Local Rams


always @(posedge clk) begin
if (((cur_state == LEGUP_0) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_0;
if (reset == 1'b0 && ^(LEGUP_0) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_0) & (memory_controller_waitrequest == 1'd0)) & (start == 1'd1)))
begin
cur_state <= LEGUP_F_main_BB_0_1;
if (reset == 1'b0 && ^(LEGUP_F_main_BB_0_1) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_0) & (memory_controller_waitrequest == 1'd0)) & (start == 1'd0)))
begin
cur_state <= LEGUP_0;
if (reset == 1'b0 && ^(LEGUP_0) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_main_BB_0_1) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_main_BB_0_1;
if (reset == 1'b0 && ^(LEGUP_F_main_BB_0_1) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_main_BB_0_1) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_function_call_2;
if (reset == 1'b0 && ^(LEGUP_function_call_2) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_function_call_2) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_function_call_2;
if (reset == 1'b0 && ^(LEGUP_function_call_2) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_function_call_2) & (memory_controller_waitrequest == 1'd0)) & (smu7_get_profiling_clk_finish_final == 1'd1)))
begin
cur_state <= LEGUP_F_main_BB_0_3;
if (reset == 1'b0 && ^(LEGUP_F_main_BB_0_3) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_function_call_2) & (memory_controller_waitrequest == 1'd0)) & (smu7_get_profiling_clk_finish_final == 1'd0)))
begin
cur_state <= LEGUP_function_call_2;
if (reset == 1'b0 && ^(LEGUP_function_call_2) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_main_BB_0_3) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_main_BB_0_3;
if (reset == 1'b0 && ^(LEGUP_F_main_BB_0_3) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_main_BB_0_3) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_0;
if (reset == 1'b0 && ^(LEGUP_0) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((reset == 1'd1))
begin
cur_state <= 2'd0;
if (reset == 1'b0 && ^(2'd0) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
end
always @(*) begin
/* main: %0*/
/*   %1 = tail call i32 @smu7_get_profiling_clk(%struct.pp_hwmgr* undef, i32 undef, i32* undef, i32* undef, i32* undef)*/
begin
main_0_1 = smu7_get_profiling_clk_return_val;
end
end
always @(posedge clk) begin
/* main: %0*/
/*   %1 = tail call i32 @smu7_get_profiling_clk(%struct.pp_hwmgr* undef, i32 undef, i32* undef, i32* undef, i32* undef)*/
if ((cur_state == LEGUP_function_call_2))
begin
main_0_1_reg <= main_0_1;
if (reset == 1'b0 && ^(main_0_1) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to main_0_1_reg"); $finish; end
end
end
always @(posedge clk) begin
/* main: %0*/
/*   %1 = tail call i32 @smu7_get_profiling_clk(%struct.pp_hwmgr* undef, i32 undef, i32* undef, i32* undef, i32* undef)*/
if ((cur_state == LEGUP_F_main_BB_0_1))
begin
smu7_get_profiling_clk_start <= 1'd1;
if (reset == 1'b0 && ^(1'd1) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to smu7_get_profiling_clk_start"); $finish; end
end
/* main: %0*/
/*   %1 = tail call i32 @smu7_get_profiling_clk(%struct.pp_hwmgr* undef, i32 undef, i32* undef, i32* undef, i32* undef)*/
if ((cur_state == LEGUP_function_call_2))
begin
smu7_get_profiling_clk_start <= 1'd0;
if (reset == 1'b0 && ^(1'd0) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to smu7_get_profiling_clk_start"); $finish; end
end
end
always @(posedge clk) begin
/* main: %0*/
/*   %1 = tail call i32 @smu7_get_profiling_clk(%struct.pp_hwmgr* undef, i32 undef, i32* undef, i32* undef, i32* undef)*/
if ((cur_state == LEGUP_F_main_BB_0_1))
begin
smu7_get_profiling_clk_arg_hwmgr <= 0;
if (reset == 1'b0 && ^(0) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to smu7_get_profiling_clk_arg_hwmgr"); $finish; end
end
end
always @(posedge clk) begin
/* main: %0*/
/*   %1 = tail call i32 @smu7_get_profiling_clk(%struct.pp_hwmgr* undef, i32 undef, i32* undef, i32* undef, i32* undef)*/
if ((cur_state == LEGUP_F_main_BB_0_1))
begin
smu7_get_profiling_clk_arg_level <= 0;
if (reset == 1'b0 && ^(0) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to smu7_get_profiling_clk_arg_level"); $finish; end
end
end
always @(posedge clk) begin
/* main: %0*/
/*   %1 = tail call i32 @smu7_get_profiling_clk(%struct.pp_hwmgr* undef, i32 undef, i32* undef, i32* undef, i32* undef)*/
if ((cur_state == LEGUP_F_main_BB_0_1))
begin
smu7_get_profiling_clk_arg_sclk_mask <= 0;
if (reset == 1'b0 && ^(0) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to smu7_get_profiling_clk_arg_sclk_mask"); $finish; end
end
end
always @(posedge clk) begin
/* main: %0*/
/*   %1 = tail call i32 @smu7_get_profiling_clk(%struct.pp_hwmgr* undef, i32 undef, i32* undef, i32* undef, i32* undef)*/
if ((cur_state == LEGUP_F_main_BB_0_1))
begin
smu7_get_profiling_clk_arg_mclk_mask <= 0;
if (reset == 1'b0 && ^(0) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to smu7_get_profiling_clk_arg_mclk_mask"); $finish; end
end
end
always @(posedge clk) begin
/* main: %0*/
/*   %1 = tail call i32 @smu7_get_profiling_clk(%struct.pp_hwmgr* undef, i32 undef, i32* undef, i32* undef, i32* undef)*/
if ((cur_state == LEGUP_F_main_BB_0_1))
begin
smu7_get_profiling_clk_arg_pcie_mask <= 0;
if (reset == 1'b0 && ^(0) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to smu7_get_profiling_clk_arg_pcie_mask"); $finish; end
end
end
always @(*) begin
/* main: %0*/
/*   %1 = tail call i32 @smu7_get_profiling_clk(%struct.pp_hwmgr* undef, i32 undef, i32* undef, i32* undef, i32* undef)*/
begin
smu7_get_profiling_clk_memory_controller_out_a = memory_controller_out_a;
end
end
always @(*) begin
/* main: %0*/
/*   %1 = tail call i32 @smu7_get_profiling_clk(%struct.pp_hwmgr* undef, i32 undef, i32* undef, i32* undef, i32* undef)*/
begin
smu7_get_profiling_clk_memory_controller_out_b = memory_controller_out_b;
end
end
always @(*) begin
smu7_get_profiling_clk_memory_controller_waitrequest = memory_controller_waitrequest;
end
always @(*) begin
smu7_get_profiling_clk_finish_final = smu7_get_profiling_clk_finish;
end
always @(*) begin
legup_function_call = 1'd0;
/* main: %0*/
/*   %1 = tail call i32 @smu7_get_profiling_clk(%struct.pp_hwmgr* undef, i32 undef, i32* undef, i32* undef, i32* undef)*/
if ((cur_state == LEGUP_function_call_2))
begin
legup_function_call = 1'd1;
end
end
always @(posedge clk) begin
if ((cur_state == LEGUP_0))
begin
finish <= 1'd0;
if (reset == 1'b0 && ^(1'd0) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to finish"); $finish; end
end
/* main: %0*/
/*   ret i32 0*/
if ((cur_state == LEGUP_F_main_BB_0_3))
begin
finish <= (memory_controller_waitrequest == 1'd0);
if (reset == 1'b0 && ^((memory_controller_waitrequest == 1'd0)) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to finish"); $finish; end
end
end
always @(*) begin
memory_controller_enable_a = 1'd0;
/* main: %0*/
/*   %1 = tail call i32 @smu7_get_profiling_clk(%struct.pp_hwmgr* undef, i32 undef, i32* undef, i32* undef, i32* undef)*/
if ((cur_state == LEGUP_function_call_2))
begin
memory_controller_enable_a = smu7_get_profiling_clk_memory_controller_enable_a;
end
/* main: %0*/
/*   %1 = tail call i32 @smu7_get_profiling_clk(%struct.pp_hwmgr* undef, i32 undef, i32* undef, i32* undef, i32* undef)*/
if ((cur_state == LEGUP_function_call_2))
begin
memory_controller_enable_a = smu7_get_profiling_clk_memory_controller_enable_a;
end
end
always @(*) begin
memory_controller_address_a = 1'd0;
/* main: %0*/
/*   %1 = tail call i32 @smu7_get_profiling_clk(%struct.pp_hwmgr* undef, i32 undef, i32* undef, i32* undef, i32* undef)*/
if ((cur_state == LEGUP_function_call_2))
begin
memory_controller_address_a[`MEMORY_CONTROLLER_ADDR_SIZE-1:0] = smu7_get_profiling_clk_memory_controller_address_a;
end
/* main: %0*/
/*   %1 = tail call i32 @smu7_get_profiling_clk(%struct.pp_hwmgr* undef, i32 undef, i32* undef, i32* undef, i32* undef)*/
if ((cur_state == LEGUP_function_call_2))
begin
memory_controller_address_a[`MEMORY_CONTROLLER_ADDR_SIZE-1:0] = smu7_get_profiling_clk_memory_controller_address_a;
end
end
always @(*) begin
memory_controller_write_enable_a = 1'd0;
/* main: %0*/
/*   %1 = tail call i32 @smu7_get_profiling_clk(%struct.pp_hwmgr* undef, i32 undef, i32* undef, i32* undef, i32* undef)*/
if ((cur_state == LEGUP_function_call_2))
begin
memory_controller_write_enable_a = smu7_get_profiling_clk_memory_controller_write_enable_a;
end
/* main: %0*/
/*   %1 = tail call i32 @smu7_get_profiling_clk(%struct.pp_hwmgr* undef, i32 undef, i32* undef, i32* undef, i32* undef)*/
if ((cur_state == LEGUP_function_call_2))
begin
memory_controller_write_enable_a = smu7_get_profiling_clk_memory_controller_write_enable_a;
end
end
always @(*) begin
memory_controller_in_a = 1'd0;
/* main: %0*/
/*   %1 = tail call i32 @smu7_get_profiling_clk(%struct.pp_hwmgr* undef, i32 undef, i32* undef, i32* undef, i32* undef)*/
if ((cur_state == LEGUP_function_call_2))
begin
memory_controller_in_a[`MEMORY_CONTROLLER_DATA_SIZE-1:0] = smu7_get_profiling_clk_memory_controller_in_a;
end
/* main: %0*/
/*   %1 = tail call i32 @smu7_get_profiling_clk(%struct.pp_hwmgr* undef, i32 undef, i32* undef, i32* undef, i32* undef)*/
if ((cur_state == LEGUP_function_call_2))
begin
memory_controller_in_a[`MEMORY_CONTROLLER_DATA_SIZE-1:0] = smu7_get_profiling_clk_memory_controller_in_a;
end
end
always @(*) begin
memory_controller_size_a = 1'd0;
/* main: %0*/
/*   %1 = tail call i32 @smu7_get_profiling_clk(%struct.pp_hwmgr* undef, i32 undef, i32* undef, i32* undef, i32* undef)*/
if ((cur_state == LEGUP_function_call_2))
begin
memory_controller_size_a[1:0] = smu7_get_profiling_clk_memory_controller_size_a;
end
/* main: %0*/
/*   %1 = tail call i32 @smu7_get_profiling_clk(%struct.pp_hwmgr* undef, i32 undef, i32* undef, i32* undef, i32* undef)*/
if ((cur_state == LEGUP_function_call_2))
begin
memory_controller_size_a[1:0] = smu7_get_profiling_clk_memory_controller_size_a;
end
end
always @(*) begin
memory_controller_enable_b = 1'd0;
/* main: %0*/
/*   %1 = tail call i32 @smu7_get_profiling_clk(%struct.pp_hwmgr* undef, i32 undef, i32* undef, i32* undef, i32* undef)*/
if ((cur_state == LEGUP_function_call_2))
begin
memory_controller_enable_b = smu7_get_profiling_clk_memory_controller_enable_b;
end
/* main: %0*/
/*   %1 = tail call i32 @smu7_get_profiling_clk(%struct.pp_hwmgr* undef, i32 undef, i32* undef, i32* undef, i32* undef)*/
if ((cur_state == LEGUP_function_call_2))
begin
memory_controller_enable_b = smu7_get_profiling_clk_memory_controller_enable_b;
end
end
always @(*) begin
memory_controller_address_b = 1'd0;
/* main: %0*/
/*   %1 = tail call i32 @smu7_get_profiling_clk(%struct.pp_hwmgr* undef, i32 undef, i32* undef, i32* undef, i32* undef)*/
if ((cur_state == LEGUP_function_call_2))
begin
memory_controller_address_b[`MEMORY_CONTROLLER_ADDR_SIZE-1:0] = smu7_get_profiling_clk_memory_controller_address_b;
end
/* main: %0*/
/*   %1 = tail call i32 @smu7_get_profiling_clk(%struct.pp_hwmgr* undef, i32 undef, i32* undef, i32* undef, i32* undef)*/
if ((cur_state == LEGUP_function_call_2))
begin
memory_controller_address_b[`MEMORY_CONTROLLER_ADDR_SIZE-1:0] = smu7_get_profiling_clk_memory_controller_address_b;
end
end
always @(*) begin
memory_controller_write_enable_b = 1'd0;
/* main: %0*/
/*   %1 = tail call i32 @smu7_get_profiling_clk(%struct.pp_hwmgr* undef, i32 undef, i32* undef, i32* undef, i32* undef)*/
if ((cur_state == LEGUP_function_call_2))
begin
memory_controller_write_enable_b = smu7_get_profiling_clk_memory_controller_write_enable_b;
end
/* main: %0*/
/*   %1 = tail call i32 @smu7_get_profiling_clk(%struct.pp_hwmgr* undef, i32 undef, i32* undef, i32* undef, i32* undef)*/
if ((cur_state == LEGUP_function_call_2))
begin
memory_controller_write_enable_b = smu7_get_profiling_clk_memory_controller_write_enable_b;
end
end
always @(*) begin
memory_controller_in_b = 1'd0;
/* main: %0*/
/*   %1 = tail call i32 @smu7_get_profiling_clk(%struct.pp_hwmgr* undef, i32 undef, i32* undef, i32* undef, i32* undef)*/
if ((cur_state == LEGUP_function_call_2))
begin
memory_controller_in_b[`MEMORY_CONTROLLER_DATA_SIZE-1:0] = smu7_get_profiling_clk_memory_controller_in_b;
end
/* main: %0*/
/*   %1 = tail call i32 @smu7_get_profiling_clk(%struct.pp_hwmgr* undef, i32 undef, i32* undef, i32* undef, i32* undef)*/
if ((cur_state == LEGUP_function_call_2))
begin
memory_controller_in_b[`MEMORY_CONTROLLER_DATA_SIZE-1:0] = smu7_get_profiling_clk_memory_controller_in_b;
end
end
always @(*) begin
memory_controller_size_b = 1'd0;
/* main: %0*/
/*   %1 = tail call i32 @smu7_get_profiling_clk(%struct.pp_hwmgr* undef, i32 undef, i32* undef, i32* undef, i32* undef)*/
if ((cur_state == LEGUP_function_call_2))
begin
memory_controller_size_b[1:0] = smu7_get_profiling_clk_memory_controller_size_b;
end
/* main: %0*/
/*   %1 = tail call i32 @smu7_get_profiling_clk(%struct.pp_hwmgr* undef, i32 undef, i32* undef, i32* undef, i32* undef)*/
if ((cur_state == LEGUP_function_call_2))
begin
memory_controller_size_b[1:0] = smu7_get_profiling_clk_memory_controller_size_b;
end
end
always @(posedge clk) begin
if ((cur_state == LEGUP_0))
begin
return_val <= 0;
if (reset == 1'b0 && ^(0) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to return_val"); $finish; end
end
/* main: %0*/
/*   ret i32 0*/
if ((cur_state == LEGUP_F_main_BB_0_3))
begin
return_val <= 32'd0;
if (reset == 1'b0 && ^(32'd0) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to return_val"); $finish; end
end
end

endmodule 
module ram_dual_port
(
	clk,
	address_a,
	address_b,
	wren_a,
	wren_b,
	data_a,
	data_b,
	byteena_a,
	byteena_b,
	q_a,
	q_b
);

parameter  width_a = 1'd0;
parameter  width_b = 1'd0;
parameter  widthad_a = 1'd0;
parameter  widthad_b = 1'd0;
parameter  numwords_a = 1'd0;
parameter  numwords_b = 1'd0;
parameter  init_file = "UNUSED.mif";
parameter  width_be_a = 1'd0;
parameter  width_be_b = 1'd0;
parameter  latency = 1;

input  clk;
input [(widthad_a-1):0] address_a;
input [(widthad_b-1):0] address_b;
output wire [(width_a-1):0] q_a;
output wire [(width_b-1):0] q_b;
reg [(width_a-1):0] q_a_wire;
reg [(width_b-1):0] q_b_wire;
input  wren_a;
input  wren_b;
input [(width_a-1):0] data_a;
input [(width_b-1):0] data_b;
// byte enable is unsupported by inferred RAMs
input [width_be_a-1:0] byteena_a;
input [width_be_b-1:0] byteena_b;

(* ramstyle = "no_rw_check", ram_init_file = init_file *) reg [width_a-1:0] ram[numwords_a-1:0];

/* synthesis translate_off */
integer i;
ALTERA_MF_MEMORY_INITIALIZATION mem ();
reg [8*256:1] ram_ver_file;
initial begin
	if (init_file == "UNUSED.mif")
    begin
		for (i = 0; i < numwords_a; i = i + 1)
			ram[i] = 0;
    end
	else
    begin
        // modelsim can't read .mif files directly. So use Altera function to
        // convert them to .ver files
        mem.convert_to_ver_file(init_file, width_a, ram_ver_file);
        $readmemh(ram_ver_file, ram);
    end
end
/* synthesis translate_on */

always @ (posedge clk)
begin // Port A
if (wren_a)
begin
    ram[address_a] <= data_a;
    q_a_wire <= {width_a{1'bX}};
end
else
    q_a_wire <= ram[address_a];
end
always @ (posedge clk)
begin // Port b
if (wren_b)
begin
    ram[address_b] <= data_b;
    q_b_wire <= {width_b{1'bX}};
end
else
    q_b_wire <= ram[address_b];
end



integer j;
reg [(width_a-1):0] q_a_reg[latency:1], q_b_reg[latency:1];

always @(*)
begin
   q_a_reg[1] <= q_a_wire;
   q_b_reg[1] <= q_b_wire;
end

always @(posedge clk)
begin
   for (j = 1; j < latency; j=j+1)
   begin
       q_a_reg[j+1] <= q_a_reg[j];
       q_b_reg[j+1] <= q_b_reg[j];
   end
end

assign q_a = q_a_reg[latency];
assign q_b = q_b_reg[latency];


endmodule
module rom_dual_port
(
	clk,
	address_a,
	address_b,
	q_a,
	q_b
);

parameter  width_a = 1'd0;
parameter  width_b = 1'd0;
parameter  widthad_a = 1'd0;
parameter  widthad_b = 1'd0;
parameter  numwords_a = 1'd0;
parameter  numwords_b = 1'd0;
parameter  init_file = "UNUSED.mif";
parameter  latency = 1;

input  clk;
input [(widthad_a-1):0] address_a;
input [(widthad_b-1):0] address_b;
output wire [(width_a-1):0] q_a;
output wire [(width_b-1):0] q_b;
reg [(width_a-1):0] q_a_wire;
reg [(width_b-1):0] q_b_wire;

(* ramstyle = "no_rw_check", ram_init_file = init_file *) reg [width_a-1:0] ram[numwords_a-1:0];

/* synthesis translate_off */
integer i;
ALTERA_MF_MEMORY_INITIALIZATION mem ();
reg [8*256:1] ram_ver_file;
initial begin
	if (init_file == "UNUSED.mif")
    begin
		for (i = 0; i < numwords_a; i = i + 1)
			ram[i] = 0;
    end
	else
    begin
        // modelsim can't read .mif files directly. So use Altera function to
        // convert them to .ver files
        mem.convert_to_ver_file(init_file, width_a, ram_ver_file);
        $readmemh(ram_ver_file, ram);
    end
end
/* synthesis translate_on */

always @ (posedge clk)
begin
    q_a_wire <= ram[address_a];
    q_b_wire <= ram[address_b];
end



integer j;
reg [(width_a-1):0] q_a_reg[latency:1], q_b_reg[latency:1];

always @(*)
begin
   q_a_reg[1] <= q_a_wire;
   q_b_reg[1] <= q_b_wire;
end

always @(posedge clk)
begin
   for (j = 1; j < latency; j=j+1)
   begin
       q_a_reg[j+1] <= q_a_reg[j];
       q_b_reg[j+1] <= q_b_reg[j];
   end
end

assign q_a = q_a_reg[latency];
assign q_b = q_b_reg[latency];


endmodule
module de2 (CLOCK_50, KEY, SW, HEX0, HEX1, HEX2, HEX3, HEX4, HEX5, HEX6, HEX7, LEDG);
    input CLOCK_50;
    output [7:0] LEDG;
    input [3:0] KEY;
    input [17:0] SW;
    output [6:0] HEX0, HEX1, HEX2, HEX3, HEX4, HEX5, HEX6, HEX7;

    wire clk = CLOCK_50;
    wire reset = ~KEY[0];
    wire go = ~KEY[1];

    wire  start;
    wire [31:0] return_val;
    wire  finish;

    reg [31:0] return_val_reg;
    
	reg [3:0] hex0, hex1, hex2, hex3, hex4, hex5, hex6, hex7;
	always @ (*) begin
		hex7 <= return_val_reg[31:28];
		hex6 <= return_val_reg[27:24];
		hex5 <= return_val_reg[23:20];
		hex4 <= return_val_reg[19:16];
		hex3 <= return_val_reg[15:12];
		hex2 <= return_val_reg[11:8];
		hex1 <= return_val_reg[7:4];
		hex0 <= return_val_reg[3:0];
	end

    hex_digits h7( .x(hex7), .hex_LEDs(HEX7));
    hex_digits h6( .x(hex6), .hex_LEDs(HEX6));
    hex_digits h5( .x(hex5), .hex_LEDs(HEX5));
    hex_digits h4( .x(hex4), .hex_LEDs(HEX4));
    hex_digits h3( .x(hex3), .hex_LEDs(HEX3));
    hex_digits h2( .x(hex2), .hex_LEDs(HEX2));
    hex_digits h1( .x(hex1), .hex_LEDs(HEX1));
    hex_digits h0( .x(hex0), .hex_LEDs(HEX0));


    top top_inst (
        .clk (clk),
        .reset (reset),
        .start (start),
        .finish (finish),
        .return_val (return_val)
    );

    parameter s_WAIT = 3'b001, s_START = 3'b010, s_EXE = 3'b011,
                s_DONE = 3'b100;

    // state registers
    reg [3:0] y_Q, Y_D;

    assign LEDG[3:0] = y_Q;

    // next state
    always @(*)
    begin
        case (y_Q)
            s_WAIT: if (go) Y_D = s_START; else Y_D = y_Q;

            s_START: Y_D = s_EXE;

            s_EXE: if (!finish) Y_D = s_EXE; else Y_D = s_DONE;

            s_DONE: Y_D = s_DONE;

            default: Y_D = 3'bxxx;
        endcase
    end

    // current state
    always @(posedge clk)
    begin
        if (reset) // synchronous clear
            y_Q <= s_WAIT;
        else
            y_Q <= Y_D;
    end

    always @(posedge clk)
        if (y_Q == s_EXE && finish)
            return_val_reg <= return_val;
        else if (y_Q == s_DONE)
            return_val_reg <= return_val_reg;
        else
            return_val_reg <= 0;


    assign start = (y_Q == s_START);
endmodule

module de4 (
	OSC_50_BANK2,
    BUTTON,
    LED,
	SEG0_D,
	SEG1_D
);
    input OSC_50_BANK2;
    input [1:0] BUTTON;
    output [6:0] SEG0_D;
    output [6:0] SEG1_D;
    output [7:0] LED;

    de2 de2_inst (
        .CLOCK_50 (OSC_50_BANK2),
        .LEDG (LED),
        .KEY (BUTTON),
        .SW (),
        .HEX0 (SEG0_D),
        .HEX1 (SEG1_D),
        .HEX2 (),
        .HEX3 (),
        .HEX4 (),
        .HEX5 (),
        .HEX6 (),
        .HEX7 ()
    );

endmodule
module hex_digits(x, hex_LEDs);
    input [3:0] x;
    output [6:0] hex_LEDs;
    
    assign hex_LEDs[0] = (~x[3] & ~x[2] & ~x[1] & x[0]) |
                            (~x[3] & x[2] & ~x[1] & ~x[0]) |
                            (x[3] & x[2] & ~x[1] & x[0]) |
                            (x[3] & ~x[2] & x[1] & x[0]);
    assign hex_LEDs[1] = (~x[3] & x[2] & ~x[1] & x[0]) |
                            (x[3] & x[1] & x[0]) |
                            (x[3] & x[2] & ~x[0]) |
                            (x[2] & x[1] & ~x[0]);
    assign hex_LEDs[2] = (x[3] & x[2] & ~x[0]) |
                            (x[3] & x[2] & x[1]) |
                            (~x[3] & ~x[2] & x[1] & ~x[0]);
    assign hex_LEDs[3] = (~x[3] & ~x[2] & ~x[1] & x[0]) | 
                            (~x[3] & x[2] & ~x[1] & ~x[0]) | 
                            (x[2] & x[1] & x[0]) | 
                            (x[3] & ~x[2] & x[1] & ~x[0]);
    assign hex_LEDs[4] = (~x[3] & x[0]) |
                            (~x[3] & x[2] & ~x[1]) |
                            (~x[2] & ~x[1] & x[0]);
    assign hex_LEDs[5] = (~x[3] & ~x[2] & x[0]) | 
                            (~x[3] & ~x[2] & x[1]) | 
                            (~x[3] & x[1] & x[0]) | 
                            (x[3] & x[2] & ~x[1] & x[0]);
    assign hex_LEDs[6] = (~x[3] & ~x[2] & ~x[1]) | 
                            (x[3] & x[2] & ~x[1] & ~x[0]) | 
                            (~x[3] & x[2] & x[1] & x[0]);
    
endmodule
`timescale 1 ns / 1 ns
module main_tb
(
);

reg  clk;
reg  reset;
reg  start;
wire [31:0] return_val;
wire  finish;


top top_inst (
	.clk (clk),
	.reset (reset),
	.start (start),
	.finish (finish),
	.return_val (return_val)
);


// Local Rams



initial 
    clk = 0;
always @(clk)
    clk <= #10 ~clk;

initial begin
//$monitor("At t=%t clk=%b %b %b %b %d", $time, clk, reset, start, finish, return_val);
@(negedge clk);
reset <= 1;
@(negedge clk);
reset <= 0;
start <= 1;

end

always@(finish) begin
    if (finish == 1) begin
        $display("At t=%t clk=%b finish=%b return_val=%d", $time, clk, finish, return_val);
        $display("Cycles: %d", ($time-50)/20);
        $finish;
    end
end

endmodule 
