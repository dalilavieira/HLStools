//----------------------------------------------------------------------------//
// Generated by LegUp High-Level Synthesis Tool Version 3.0 (http://legup.org)
// Compiled: Tue Jul 15 15:43:09 2014
// University of Toronto
// For research and academic purposes only. Commercial use is prohibited.
// Please send bugs to: legup@eecg.toronto.edu
// Date: Tue Mar 10 07:55:04 2020
//----------------------------------------------------------------------------//

`define MEMORY_CONTROLLER_ADDR_SIZE 32
`define MEMORY_CONTROLLER_DATA_SIZE 64
// Number of RAM elements: 0
`define MEMORY_CONTROLLER_TAG_SIZE 9
`define TAG_NULL `MEMORY_CONTROLLER_TAG_SIZE'd0
`define TAG_PROCESSOR `MEMORY_CONTROLLER_TAG_SIZE'd1

// Turn off warning 'ignoring unsupported system task'
// altera message_off 10175

module top
	(
		clk,
		reset,
		start,
		finish,
		return_val
	);
input clk;
input reset;
input start;
output wire finish;
output wire [31:0] return_val;
wire memory_controller_waitrequest;
wire memory_controller_enable_a;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] memory_controller_address_a;
wire memory_controller_write_enable_a;
wire [`MEMORY_CONTROLLER_DATA_SIZE-1:0] memory_controller_in_a;
wire [1:0] memory_controller_size_a;
wire [`MEMORY_CONTROLLER_DATA_SIZE-1:0] memory_controller_out_a;

wire memory_controller_enable_b;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] memory_controller_address_b;
wire memory_controller_write_enable_b;
wire [`MEMORY_CONTROLLER_DATA_SIZE-1:0] memory_controller_in_b;
wire [1:0] memory_controller_size_b;
wire [`MEMORY_CONTROLLER_DATA_SIZE-1:0] memory_controller_out_b;

assign memory_controller_waitrequest = 0;

memory_controller memory_controller_inst (
	.clk( clk ),
	.memory_controller_enable_a( memory_controller_enable_a ),
	.memory_controller_enable_b( memory_controller_enable_b ),
	.memory_controller_address_a( memory_controller_address_a ),
	.memory_controller_address_b( memory_controller_address_b ),
	.memory_controller_write_enable_a( memory_controller_write_enable_a ),
	.memory_controller_write_enable_b( memory_controller_write_enable_b ),
	.memory_controller_in_a( memory_controller_in_a ),
	.memory_controller_in_b( memory_controller_in_b ),
	.memory_controller_size_a( memory_controller_size_a ),
	.memory_controller_size_b( memory_controller_size_b ),
	.memory_controller_waitrequest( memory_controller_waitrequest ),
	.memory_controller_out_reg_a( memory_controller_out_a ),
	.memory_controller_out_reg_b( memory_controller_out_b )
);

main main_inst(
	.clk( clk ),
	.clk2x( clk2x ),
	.clk1x_follower( clk1x_follower ),
	.reset( reset ),
	.start( start ),
	.finish( finish ),
	.return_val( return_val ),
	.memory_controller_enable_a(memory_controller_enable_a),
	.memory_controller_address_a(memory_controller_address_a),
	.memory_controller_write_enable_a(memory_controller_write_enable_a),
	.memory_controller_in_a(memory_controller_in_a),
	.memory_controller_size_a(memory_controller_size_a),
	.memory_controller_out_a(memory_controller_out_a),
	.memory_controller_enable_b(memory_controller_enable_b),
	.memory_controller_address_b(memory_controller_address_b),
	.memory_controller_write_enable_b(memory_controller_write_enable_b),
	.memory_controller_in_b(memory_controller_in_b),
	.memory_controller_size_b(memory_controller_size_b),
	.memory_controller_out_b(memory_controller_out_b),
	.memory_controller_waitrequest(memory_controller_waitrequest)
);

endmodule
`timescale 1 ns / 1 ns
module memory_controller
(
	clk,
	memory_controller_address_a,
	memory_controller_address_b,
	memory_controller_enable_a,
	memory_controller_enable_b,
	memory_controller_write_enable_a,
	memory_controller_write_enable_b,
	memory_controller_in_a,
	memory_controller_in_b,
	memory_controller_size_a,
	memory_controller_size_b,
	memory_controller_waitrequest,
	memory_controller_out_reg_a,
	memory_controller_out_reg_b
);


input clk;
input memory_controller_waitrequest;
input [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] memory_controller_address_a;
input memory_controller_enable_a;
input memory_controller_write_enable_a;
input [64-1:0] memory_controller_in_a;
input [1:0] memory_controller_size_a;
output reg [64-1:0] memory_controller_out_reg_a;
reg [64-1:0] memory_controller_out_prev_a;
reg [64-1:0] memory_controller_out_a;

reg memory_controller_enable_reg_a;
input [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] memory_controller_address_b;
input memory_controller_enable_b;
input memory_controller_write_enable_b;
input [64-1:0] memory_controller_in_b;
input [1:0] memory_controller_size_b;
output reg [64-1:0] memory_controller_out_reg_b;
reg [64-1:0] memory_controller_out_prev_b;
reg [64-1:0] memory_controller_out_b;

reg memory_controller_enable_reg_b;
endmodule 
`timescale 1 ns / 1 ns
module touchpad_check_endpoint
(
	clk,
	clk2x,
	clk1x_follower,
	reset,
	start,
	finish,
	memory_controller_enable_a,
	memory_controller_address_a,
	memory_controller_write_enable_a,
	memory_controller_in_a,
	memory_controller_size_a,
	memory_controller_out_a,
	memory_controller_enable_b,
	memory_controller_address_b,
	memory_controller_write_enable_b,
	memory_controller_in_b,
	memory_controller_size_b,
	memory_controller_out_b,
	memory_controller_waitrequest,
	return_val,
	arg_ad714x,
	arg_idx
);

parameter [7:0] LEGUP_0 = 8'd0;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_0_1 = 8'd1;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_0_2 = 8'd2;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_0_3 = 8'd3;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_0_4 = 8'd4;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_0_5 = 8'd5;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_0_6 = 8'd6;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_0_7 = 8'd7;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_0_8 = 8'd8;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_0_9 = 8'd9;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_0_10 = 8'd10;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_0_11 = 8'd11;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_0_12 = 8'd12;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_0_13 = 8'd13;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_0_14 = 8'd14;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_0_15 = 8'd15;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_0_16 = 8'd16;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_0_17 = 8'd17;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_0_18 = 8'd18;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_0_19 = 8'd19;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_0_20 = 8'd20;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_0_21 = 8'd21;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_0_22 = 8'd22;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_0_23 = 8'd23;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_0_24 = 8'd24;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_0_25 = 8'd25;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_0_26 = 8'd26;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_0_27 = 8'd27;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_0_28 = 8'd28;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_0_29 = 8'd29;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_0_30 = 8'd30;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_0_31 = 8'd31;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_0_32 = 8'd32;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_0_33 = 8'd33;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_0_34 = 8'd34;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_0_35 = 8'd35;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_0_36 = 8'd36;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_0_37 = 8'd37;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_0_38 = 8'd38;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_0_39 = 8'd39;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_0_40 = 8'd40;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_0_41 = 8'd41;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_0_42 = 8'd42;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_0_43 = 8'd43;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_25_44 = 8'd44;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_26_45 = 8'd45;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_26_46 = 8'd46;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_26_47 = 8'd47;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_26_48 = 8'd48;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_26_49 = 8'd49;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_29_50 = 8'd50;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_30_51 = 8'd51;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_30_52 = 8'd52;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_30_53 = 8'd53;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_34_54 = 8'd54;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_34_55 = 8'd55;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_35_56 = 8'd56;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_35_57 = 8'd57;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_35_58 = 8'd58;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_35_59 = 8'd59;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_35_60 = 8'd60;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_35_61 = 8'd61;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_35_62 = 8'd62;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_35_63 = 8'd63;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_35_64 = 8'd64;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_35_65 = 8'd65;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_35_66 = 8'd66;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_35_67 = 8'd67;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_35_68 = 8'd68;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_35_69 = 8'd69;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_35_70 = 8'd70;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_35_71 = 8'd71;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_35_72 = 8'd72;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_35_73 = 8'd73;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_35_74 = 8'd74;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_35_75 = 8'd75;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_35_76 = 8'd76;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_35_77 = 8'd77;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_35_78 = 8'd78;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_35_79 = 8'd79;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_35_80 = 8'd80;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_35_81 = 8'd81;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_35_82 = 8'd82;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_35_83 = 8'd83;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_35_84 = 8'd84;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_35_85 = 8'd85;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_35_86 = 8'd86;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_35_87 = 8'd87;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_35_88 = 8'd88;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_35_89 = 8'd89;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_35_90 = 8'd90;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_35_91 = 8'd91;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_35_92 = 8'd92;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_35_93 = 8'd93;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_35_94 = 8'd94;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_51_95 = 8'd95;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_52_96 = 8'd96;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_52_97 = 8'd97;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_52_98 = 8'd98;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_52_99 = 8'd99;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_52_100 = 8'd100;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_55_101 = 8'd101;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_56_102 = 8'd102;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_56_103 = 8'd103;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_56_104 = 8'd104;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_60_105 = 8'd105;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_60_106 = 8'd106;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_61_107 = 8'd107;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_61_108 = 8'd108;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_61_109 = 8'd109;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_61_110 = 8'd110;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_61_111 = 8'd111;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_61_112 = 8'd112;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_61_113 = 8'd113;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_61_114 = 8'd114;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_61_115 = 8'd115;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_61_116 = 8'd116;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_61_117 = 8'd117;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_61_118 = 8'd118;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_61_119 = 8'd119;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_61_120 = 8'd120;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_61_121 = 8'd121;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_61_122 = 8'd122;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_61_123 = 8'd123;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_61_124 = 8'd124;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_61_125 = 8'd125;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_61_126 = 8'd126;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_61_127 = 8'd127;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_61_128 = 8'd128;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_61_129 = 8'd129;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_61_130 = 8'd130;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_61_131 = 8'd131;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_61_132 = 8'd132;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_61_133 = 8'd133;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_61_134 = 8'd134;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_61_135 = 8'd135;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_61_136 = 8'd136;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_61_137 = 8'd137;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_61_138 = 8'd138;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_61_139 = 8'd139;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_61_140 = 8'd140;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_61_141 = 8'd141;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_61_142 = 8'd142;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_61_143 = 8'd143;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_61_144 = 8'd144;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_61_145 = 8'd145;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_77_146 = 8'd146;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_78_147 = 8'd147;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_78_148 = 8'd148;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_78_149 = 8'd149;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_78_150 = 8'd150;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_78_151 = 8'd151;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_81_152 = 8'd152;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_82_153 = 8'd153;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_82_154 = 8'd154;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_82_155 = 8'd155;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_86_156 = 8'd156;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_86_157 = 8'd157;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_87_158 = 8'd158;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_87_159 = 8'd159;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_87_160 = 8'd160;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_87_161 = 8'd161;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_87_162 = 8'd162;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_87_163 = 8'd163;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_87_164 = 8'd164;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_87_165 = 8'd165;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_87_166 = 8'd166;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_87_167 = 8'd167;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_87_168 = 8'd168;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_87_169 = 8'd169;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_87_170 = 8'd170;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_87_171 = 8'd171;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_87_172 = 8'd172;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_87_173 = 8'd173;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_87_174 = 8'd174;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_87_175 = 8'd175;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_87_176 = 8'd176;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_87_177 = 8'd177;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_87_178 = 8'd178;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_87_179 = 8'd179;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_87_180 = 8'd180;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_87_181 = 8'd181;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_87_182 = 8'd182;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_87_183 = 8'd183;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_87_184 = 8'd184;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_87_185 = 8'd185;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_87_186 = 8'd186;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_87_187 = 8'd187;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_87_188 = 8'd188;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_87_189 = 8'd189;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_87_190 = 8'd190;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_87_191 = 8'd191;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_87_192 = 8'd192;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_87_193 = 8'd193;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_87_194 = 8'd194;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_87_195 = 8'd195;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_87_196 = 8'd196;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_103_197 = 8'd197;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_104_198 = 8'd198;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_104_199 = 8'd199;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_104_200 = 8'd200;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_104_201 = 8'd201;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_104_202 = 8'd202;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_107_203 = 8'd203;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_108_204 = 8'd204;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_108_205 = 8'd205;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_108_206 = 8'd206;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_112_207 = 8'd207;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_112_208 = 8'd208;
parameter [7:0] LEGUP_F_touchpad_check_endpoint_BB_113_209 = 8'd209;

input  clk;
input  clk2x;
input  clk1x_follower;
input  reset;
input  start;
output reg  finish;
output reg  memory_controller_enable_a;
output reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] memory_controller_address_a;
output reg  memory_controller_write_enable_a;
output reg [`MEMORY_CONTROLLER_DATA_SIZE-1:0] memory_controller_in_a;
output reg [1:0] memory_controller_size_a;
input [`MEMORY_CONTROLLER_DATA_SIZE-1:0] memory_controller_out_a;
output reg  memory_controller_enable_b;
output reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] memory_controller_address_b;
output reg  memory_controller_write_enable_b;
output reg [`MEMORY_CONTROLLER_DATA_SIZE-1:0] memory_controller_in_b;
output reg [1:0] memory_controller_size_b;
input [`MEMORY_CONTROLLER_DATA_SIZE-1:0] memory_controller_out_b;
input  memory_controller_waitrequest;
output reg [31:0] return_val;
input [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] arg_ad714x;
input [31:0] arg_idx;
reg [7:0] cur_state;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] touchpad_check_endpoint_0_1;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] touchpad_check_endpoint_0_1_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] touchpad_check_endpoint_0_2;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] touchpad_check_endpoint_0_2_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] touchpad_check_endpoint_0_3;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] touchpad_check_endpoint_0_3_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] touchpad_check_endpoint_0_4;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] touchpad_check_endpoint_0_4_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] touchpad_check_endpoint_0_5;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] touchpad_check_endpoint_0_5_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] touchpad_check_endpoint_0_6;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] touchpad_check_endpoint_0_6_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] touchpad_check_endpoint_0_7;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] touchpad_check_endpoint_0_7_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] touchpad_check_endpoint_0_8;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] touchpad_check_endpoint_0_8_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] touchpad_check_endpoint_0_9;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] touchpad_check_endpoint_0_9_reg;
reg [31:0] touchpad_check_endpoint_0_10;
reg [31:0] touchpad_check_endpoint_0_10_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] touchpad_check_endpoint_0_11;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] touchpad_check_endpoint_0_11_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] touchpad_check_endpoint_0_12;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] touchpad_check_endpoint_0_12_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] touchpad_check_endpoint_0_13;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] touchpad_check_endpoint_0_13_reg;
reg [31:0] touchpad_check_endpoint_0_14;
reg [31:0] touchpad_check_endpoint_0_14_reg;
reg [31:0] touchpad_check_endpoint_0_15;
reg [31:0] touchpad_check_endpoint_0_15_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] touchpad_check_endpoint_0_16;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] touchpad_check_endpoint_0_16_reg;
reg [31:0] touchpad_check_endpoint_0_17;
reg [31:0] touchpad_check_endpoint_0_17_reg;
reg [31:0] touchpad_check_endpoint_0_18;
reg [31:0] touchpad_check_endpoint_0_18_reg;
reg [31:0] touchpad_check_endpoint_0_19;
reg [31:0] touchpad_check_endpoint_0_19_reg;
reg [31:0] touchpad_check_endpoint_0_20;
reg [31:0] touchpad_check_endpoint_0_20_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] touchpad_check_endpoint_0_21;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] touchpad_check_endpoint_0_21_reg;
reg [31:0] touchpad_check_endpoint_0_22;
reg [31:0] touchpad_check_endpoint_0_22_reg;
reg  touchpad_check_endpoint_0_23;
reg  touchpad_check_endpoint_0_23_reg;
reg  touchpad_check_endpoint_0_24;
reg  touchpad_check_endpoint_0_24_reg;
reg [31:0] touchpad_check_endpoint_26_27;
reg [31:0] touchpad_check_endpoint_26_27_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] touchpad_check_endpoint_26_28;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] touchpad_check_endpoint_26_28_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] touchpad_check_endpoint_30_31;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] touchpad_check_endpoint_30_31_reg;
reg [31:0] touchpad_check_endpoint_30_32;
reg [31:0] touchpad_check_endpoint_30_32_reg;
reg  touchpad_check_endpoint_30_33;
reg  touchpad_check_endpoint_30_33_reg;
reg [31:0] touchpad_check_endpoint_35_36;
reg [31:0] touchpad_check_endpoint_35_36_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] touchpad_check_endpoint_35_37;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] touchpad_check_endpoint_35_37_reg;
reg [31:0] touchpad_check_endpoint_35_38;
reg [31:0] touchpad_check_endpoint_35_38_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] touchpad_check_endpoint_35_39;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] touchpad_check_endpoint_35_39_reg;
reg [31:0] touchpad_check_endpoint_35_40;
reg [31:0] touchpad_check_endpoint_35_40_reg;
reg [31:0] touchpad_check_endpoint_35_41;
reg [31:0] touchpad_check_endpoint_35_41_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] touchpad_check_endpoint_35_42;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] touchpad_check_endpoint_35_42_reg;
reg [31:0] touchpad_check_endpoint_35_43;
reg [31:0] touchpad_check_endpoint_35_43_reg;
reg [31:0] touchpad_check_endpoint_35_44;
reg [31:0] touchpad_check_endpoint_35_44_reg;
reg [31:0] touchpad_check_endpoint_35_45;
reg [31:0] touchpad_check_endpoint_35_45_reg;
reg [31:0] touchpad_check_endpoint_35_46;
reg [31:0] touchpad_check_endpoint_35_46_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] touchpad_check_endpoint_35_47;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] touchpad_check_endpoint_35_47_reg;
reg [31:0] touchpad_check_endpoint_35_48;
reg [31:0] touchpad_check_endpoint_35_48_reg;
reg  touchpad_check_endpoint_35_49;
reg  touchpad_check_endpoint_35_49_reg;
reg  touchpad_check_endpoint_35_50;
reg  touchpad_check_endpoint_35_50_reg;
reg [31:0] touchpad_check_endpoint_52_53;
reg [31:0] touchpad_check_endpoint_52_53_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] touchpad_check_endpoint_52_54;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] touchpad_check_endpoint_52_54_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] touchpad_check_endpoint_56_57;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] touchpad_check_endpoint_56_57_reg;
reg [31:0] touchpad_check_endpoint_56_58;
reg [31:0] touchpad_check_endpoint_56_58_reg;
reg  touchpad_check_endpoint_56_59;
reg  touchpad_check_endpoint_56_59_reg;
reg [31:0] touchpad_check_endpoint_61_62;
reg [31:0] touchpad_check_endpoint_61_62_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] touchpad_check_endpoint_61_63;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] touchpad_check_endpoint_61_63_reg;
reg [31:0] touchpad_check_endpoint_61_64;
reg [31:0] touchpad_check_endpoint_61_64_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] touchpad_check_endpoint_61_65;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] touchpad_check_endpoint_61_65_reg;
reg [31:0] touchpad_check_endpoint_61_66;
reg [31:0] touchpad_check_endpoint_61_66_reg;
reg [31:0] touchpad_check_endpoint_61_67;
reg [31:0] touchpad_check_endpoint_61_67_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] touchpad_check_endpoint_61_68;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] touchpad_check_endpoint_61_68_reg;
reg [31:0] touchpad_check_endpoint_61_69;
reg [31:0] touchpad_check_endpoint_61_69_reg;
reg [31:0] touchpad_check_endpoint_61_70;
reg [31:0] touchpad_check_endpoint_61_70_reg;
reg [31:0] touchpad_check_endpoint_61_71;
reg [31:0] touchpad_check_endpoint_61_71_reg;
reg [31:0] touchpad_check_endpoint_61_72;
reg [31:0] touchpad_check_endpoint_61_72_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] touchpad_check_endpoint_61_73;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] touchpad_check_endpoint_61_73_reg;
reg [31:0] touchpad_check_endpoint_61_74;
reg [31:0] touchpad_check_endpoint_61_74_reg;
reg  touchpad_check_endpoint_61_75;
reg  touchpad_check_endpoint_61_75_reg;
reg  touchpad_check_endpoint_61_76;
reg  touchpad_check_endpoint_61_76_reg;
reg [31:0] touchpad_check_endpoint_78_79;
reg [31:0] touchpad_check_endpoint_78_79_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] touchpad_check_endpoint_78_80;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] touchpad_check_endpoint_78_80_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] touchpad_check_endpoint_82_83;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] touchpad_check_endpoint_82_83_reg;
reg [31:0] touchpad_check_endpoint_82_84;
reg [31:0] touchpad_check_endpoint_82_84_reg;
reg  touchpad_check_endpoint_82_85;
reg  touchpad_check_endpoint_82_85_reg;
reg [31:0] touchpad_check_endpoint_87_88;
reg [31:0] touchpad_check_endpoint_87_88_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] touchpad_check_endpoint_87_89;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] touchpad_check_endpoint_87_89_reg;
reg [31:0] touchpad_check_endpoint_87_90;
reg [31:0] touchpad_check_endpoint_87_90_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] touchpad_check_endpoint_87_91;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] touchpad_check_endpoint_87_91_reg;
reg [31:0] touchpad_check_endpoint_87_92;
reg [31:0] touchpad_check_endpoint_87_92_reg;
reg [31:0] touchpad_check_endpoint_87_93;
reg [31:0] touchpad_check_endpoint_87_93_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] touchpad_check_endpoint_87_94;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] touchpad_check_endpoint_87_94_reg;
reg [31:0] touchpad_check_endpoint_87_95;
reg [31:0] touchpad_check_endpoint_87_95_reg;
reg [31:0] touchpad_check_endpoint_87_96;
reg [31:0] touchpad_check_endpoint_87_96_reg;
reg [31:0] touchpad_check_endpoint_87_97;
reg [31:0] touchpad_check_endpoint_87_97_reg;
reg [31:0] touchpad_check_endpoint_87_98;
reg [31:0] touchpad_check_endpoint_87_98_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] touchpad_check_endpoint_87_99;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] touchpad_check_endpoint_87_99_reg;
reg [31:0] touchpad_check_endpoint_87_100;
reg [31:0] touchpad_check_endpoint_87_100_reg;
reg  touchpad_check_endpoint_87_101;
reg  touchpad_check_endpoint_87_101_reg;
reg  touchpad_check_endpoint_87_102;
reg  touchpad_check_endpoint_87_102_reg;
reg [31:0] touchpad_check_endpoint_104_105;
reg [31:0] touchpad_check_endpoint_104_105_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] touchpad_check_endpoint_104_106;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] touchpad_check_endpoint_104_106_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] touchpad_check_endpoint_108_109;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] touchpad_check_endpoint_108_109_reg;
reg [31:0] touchpad_check_endpoint_108_110;
reg [31:0] touchpad_check_endpoint_108_110_reg;
reg  touchpad_check_endpoint_108_111;
reg  touchpad_check_endpoint_108_111_reg;
reg [31:0] touchpad_check_endpoint_113_114;
reg [31:0] touchpad_check_endpoint_113_114_reg;
reg [31:0] touchpad_check_endpoint_113_115;
reg [31:0] touchpad_check_endpoint_113_115_reg;
reg [31:0] touchpad_check_endpoint_113_116;
reg [31:0] touchpad_check_endpoint_113_116_reg;
reg [31:0] touchpad_check_endpoint_113_117;
reg [31:0] touchpad_check_endpoint_113_117_reg;
reg  touchpad_check_endpoint_113_118;
reg  touchpad_check_endpoint_113_118_reg;
reg [31:0] touchpad_check_endpoint_113_119;
reg [31:0] touchpad_check_endpoint_113_119_reg;
wire [15:0] legup_pthreadpoll_threadID;
reg [31:0] touchpad_check_endpoint_signed_divide_32_0_op0;
reg [31:0] touchpad_check_endpoint_signed_divide_32_0_op1;
wire [31:0] lpm_divide_touchpad_check_endpoint_0_20_temp_out;
wire [31:0] touchpad_check_endpoint_0_20_unused;
reg  lpm_divide_touchpad_check_endpoint_0_20_en;
reg [31:0] lpm_divide_touchpad_check_endpoint_0_20_out;
reg [31:0] touchpad_check_endpoint_signed_divide_32_0;
reg  lpm_mult_touchpad_check_endpoint_0_19_en;
reg [31:0] touchpad_check_endpoint_0_19_stage0_reg;
reg  lpm_mult_touchpad_check_endpoint_35_45_en;
reg [31:0] touchpad_check_endpoint_35_45_stage0_reg;
reg  lpm_divide_touchpad_check_endpoint_35_46_en;
reg  lpm_mult_touchpad_check_endpoint_61_71_en;
reg [31:0] touchpad_check_endpoint_61_71_stage0_reg;
reg  lpm_divide_touchpad_check_endpoint_61_72_en;
reg  lpm_mult_touchpad_check_endpoint_87_97_en;
reg [31:0] touchpad_check_endpoint_87_97_stage0_reg;
reg  lpm_divide_touchpad_check_endpoint_87_98_en;

/*   %20 = sdiv i32 %19, %17*/
lpm_divide lpm_divide_touchpad_check_endpoint_0_20 (
	.quotient (lpm_divide_touchpad_check_endpoint_0_20_temp_out),
	.remain (touchpad_check_endpoint_0_20_unused),
	.clock (clk),
	.aclr (1'd0),
	.clken (lpm_divide_touchpad_check_endpoint_0_20_en),
	.numer (touchpad_check_endpoint_signed_divide_32_0_op0),
	.denom (touchpad_check_endpoint_signed_divide_32_0_op1)
);

defparam
	lpm_divide_touchpad_check_endpoint_0_20.lpm_pipeline = 32,
	lpm_divide_touchpad_check_endpoint_0_20.lpm_widthn = 32,
	lpm_divide_touchpad_check_endpoint_0_20.lpm_widthd = 32,
	lpm_divide_touchpad_check_endpoint_0_20.lpm_drepresentation = "SIGNED",
	lpm_divide_touchpad_check_endpoint_0_20.lpm_nrepresentation = "SIGNED",
	lpm_divide_touchpad_check_endpoint_0_20.lpm_hint = "LPM_REMAINDERPOSITIVE=FALSE";

// Local Rams


always @(posedge clk) begin
if (((cur_state == LEGUP_0) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_0;
if (reset == 1'b0 && ^(LEGUP_0) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_0) & (memory_controller_waitrequest == 1'd0)) & (start == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_0_1;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_0_1) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_0) & (memory_controller_waitrequest == 1'd0)) & (start == 1'd0)))
begin
cur_state <= LEGUP_0;
if (reset == 1'b0 && ^(LEGUP_0) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_0_1) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_0_1;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_0_1) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_0_1) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_0_2;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_0_2) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_0_2) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_0_2;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_0_2) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_0_2) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_0_3;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_0_3) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_0_3) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_0_3;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_0_3) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_0_3) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_0_4;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_0_4) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_0_4) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_0_4;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_0_4) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_0_4) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_0_5;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_0_5) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_0_5) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_0_5;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_0_5) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_0_5) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_0_6;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_0_6) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_0_6) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_0_6;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_0_6) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_0_6) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_0_7;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_0_7) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_0_7) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_0_7;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_0_7) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_0_7) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_0_8;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_0_8) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_0_8) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_0_8;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_0_8) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_0_8) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_0_9;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_0_9) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_0_9) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_0_9;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_0_9) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_0_9) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_0_10;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_0_10) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_0_10) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_0_10;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_0_10) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_0_10) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_0_11;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_0_11) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_0_11) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_0_11;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_0_11) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_0_11) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_0_12;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_0_12) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_0_12) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_0_12;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_0_12) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_0_12) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_0_13;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_0_13) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_0_13) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_0_13;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_0_13) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_0_13) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_0_14;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_0_14) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_0_14) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_0_14;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_0_14) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_0_14) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_0_15;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_0_15) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_0_15) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_0_15;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_0_15) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_0_15) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_0_16;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_0_16) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_0_16) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_0_16;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_0_16) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_0_16) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_0_17;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_0_17) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_0_17) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_0_17;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_0_17) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_0_17) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_0_18;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_0_18) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_0_18) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_0_18;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_0_18) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_0_18) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_0_19;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_0_19) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_0_19) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_0_19;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_0_19) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_0_19) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_0_20;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_0_20) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_0_20) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_0_20;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_0_20) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_0_20) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_0_21;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_0_21) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_0_21) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_0_21;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_0_21) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_0_21) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_0_22;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_0_22) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_0_22) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_0_22;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_0_22) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_0_22) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_0_23;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_0_23) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_0_23) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_0_23;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_0_23) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_0_23) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_0_24;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_0_24) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_0_24) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_0_24;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_0_24) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_0_24) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_0_25;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_0_25) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_0_25) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_0_25;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_0_25) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_0_25) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_0_26;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_0_26) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_0_26) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_0_26;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_0_26) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_0_26) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_0_27;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_0_27) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_0_27) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_0_27;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_0_27) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_0_27) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_0_28;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_0_28) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_0_28) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_0_28;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_0_28) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_0_28) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_0_29;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_0_29) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_0_29) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_0_29;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_0_29) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_0_29) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_0_30;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_0_30) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_0_30) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_0_30;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_0_30) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_0_30) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_0_31;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_0_31) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_0_31) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_0_31;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_0_31) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_0_31) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_0_32;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_0_32) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_0_32) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_0_32;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_0_32) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_0_32) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_0_33;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_0_33) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_0_33) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_0_33;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_0_33) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_0_33) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_0_34;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_0_34) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_0_34) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_0_34;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_0_34) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_0_34) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_0_35;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_0_35) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_0_35) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_0_35;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_0_35) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_0_35) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_0_36;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_0_36) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_0_36) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_0_36;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_0_36) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_0_36) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_0_37;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_0_37) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_0_37) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_0_37;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_0_37) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_0_37) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_0_38;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_0_38) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_0_38) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_0_38;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_0_38) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_0_38) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_0_39;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_0_39) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_0_39) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_0_39;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_0_39) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_0_39) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_0_40;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_0_40) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_0_40) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_0_40;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_0_40) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_0_40) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_0_41;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_0_41) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_0_41) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_0_41;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_0_41) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_0_41) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_0_42;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_0_42) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_0_42) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_0_42;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_0_42) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_0_42) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_0_43;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_0_43) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_0_43) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_0_43;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_0_43) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_touchpad_check_endpoint_BB_0_43) & (memory_controller_waitrequest == 1'd0)) & (touchpad_check_endpoint_0_23_reg == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_25_44;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_25_44) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_touchpad_check_endpoint_BB_0_43) & (memory_controller_waitrequest == 1'd0)) & (touchpad_check_endpoint_0_23_reg == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_29_50;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_29_50) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_25_44) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_25_44;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_25_44) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_touchpad_check_endpoint_BB_25_44) & (memory_controller_waitrequest == 1'd0)) & (touchpad_check_endpoint_0_24_reg == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_35_56;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_35_56) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_touchpad_check_endpoint_BB_25_44) & (memory_controller_waitrequest == 1'd0)) & (touchpad_check_endpoint_0_24_reg == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_26_45;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_26_45) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_26_45) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_26_45;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_26_45) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_26_45) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_26_46;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_26_46) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_26_46) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_26_46;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_26_46) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_26_46) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_26_47;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_26_47) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_26_47) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_26_47;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_26_47) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_26_47) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_26_48;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_26_48) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_26_48) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_26_48;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_26_48) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_26_48) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_26_49;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_26_49) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_26_49) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_26_49;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_26_49) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_26_49) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_35_56;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_35_56) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_29_50) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_29_50;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_29_50) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_touchpad_check_endpoint_BB_29_50) & (memory_controller_waitrequest == 1'd0)) & (touchpad_check_endpoint_0_24_reg == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_30_51;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_30_51) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_touchpad_check_endpoint_BB_29_50) & (memory_controller_waitrequest == 1'd0)) & (touchpad_check_endpoint_0_24_reg == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_35_56;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_35_56) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_30_51) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_30_51;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_30_51) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_30_51) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_30_52;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_30_52) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_30_52) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_30_52;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_30_52) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_30_52) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_30_53;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_30_53) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_30_53) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_30_53;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_30_53) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_touchpad_check_endpoint_BB_30_53) & (memory_controller_waitrequest == 1'd0)) & (touchpad_check_endpoint_30_33 == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_34_54;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_34_54) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_touchpad_check_endpoint_BB_30_53) & (memory_controller_waitrequest == 1'd0)) & (touchpad_check_endpoint_30_33 == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_35_56;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_35_56) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_34_54) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_34_54;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_34_54) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_34_54) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_34_55;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_34_55) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_34_55) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_34_55;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_34_55) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_34_55) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_35_56;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_35_56) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_35_56) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_35_56;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_35_56) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_35_56) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_35_57;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_35_57) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_35_57) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_35_57;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_35_57) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_35_57) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_35_58;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_35_58) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_35_58) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_35_58;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_35_58) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_35_58) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_35_59;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_35_59) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_35_59) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_35_59;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_35_59) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_35_59) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_35_60;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_35_60) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_35_60) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_35_60;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_35_60) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_35_60) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_35_61;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_35_61) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_35_61) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_35_61;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_35_61) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_35_61) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_35_62;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_35_62) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_35_62) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_35_62;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_35_62) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_35_62) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_35_63;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_35_63) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_35_63) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_35_63;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_35_63) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_35_63) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_35_64;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_35_64) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_35_64) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_35_64;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_35_64) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_35_64) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_35_65;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_35_65) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_35_65) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_35_65;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_35_65) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_35_65) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_35_66;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_35_66) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_35_66) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_35_66;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_35_66) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_35_66) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_35_67;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_35_67) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_35_67) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_35_67;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_35_67) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_35_67) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_35_68;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_35_68) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_35_68) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_35_68;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_35_68) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_35_68) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_35_69;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_35_69) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_35_69) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_35_69;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_35_69) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_35_69) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_35_70;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_35_70) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_35_70) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_35_70;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_35_70) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_35_70) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_35_71;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_35_71) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_35_71) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_35_71;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_35_71) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_35_71) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_35_72;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_35_72) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_35_72) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_35_72;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_35_72) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_35_72) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_35_73;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_35_73) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_35_73) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_35_73;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_35_73) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_35_73) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_35_74;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_35_74) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_35_74) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_35_74;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_35_74) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_35_74) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_35_75;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_35_75) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_35_75) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_35_75;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_35_75) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_35_75) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_35_76;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_35_76) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_35_76) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_35_76;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_35_76) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_35_76) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_35_77;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_35_77) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_35_77) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_35_77;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_35_77) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_35_77) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_35_78;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_35_78) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_35_78) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_35_78;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_35_78) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_35_78) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_35_79;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_35_79) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_35_79) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_35_79;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_35_79) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_35_79) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_35_80;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_35_80) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_35_80) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_35_80;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_35_80) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_35_80) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_35_81;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_35_81) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_35_81) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_35_81;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_35_81) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_35_81) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_35_82;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_35_82) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_35_82) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_35_82;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_35_82) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_35_82) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_35_83;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_35_83) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_35_83) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_35_83;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_35_83) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_35_83) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_35_84;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_35_84) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_35_84) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_35_84;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_35_84) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_35_84) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_35_85;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_35_85) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_35_85) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_35_85;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_35_85) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_35_85) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_35_86;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_35_86) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_35_86) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_35_86;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_35_86) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_35_86) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_35_87;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_35_87) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_35_87) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_35_87;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_35_87) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_35_87) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_35_88;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_35_88) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_35_88) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_35_88;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_35_88) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_35_88) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_35_89;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_35_89) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_35_89) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_35_89;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_35_89) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_35_89) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_35_90;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_35_90) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_35_90) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_35_90;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_35_90) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_35_90) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_35_91;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_35_91) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_35_91) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_35_91;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_35_91) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_35_91) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_35_92;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_35_92) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_35_92) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_35_92;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_35_92) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_35_92) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_35_93;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_35_93) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_35_93) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_35_93;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_35_93) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_35_93) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_35_94;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_35_94) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_35_94) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_35_94;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_35_94) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_touchpad_check_endpoint_BB_35_94) & (memory_controller_waitrequest == 1'd0)) & (touchpad_check_endpoint_35_49_reg == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_51_95;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_51_95) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_touchpad_check_endpoint_BB_35_94) & (memory_controller_waitrequest == 1'd0)) & (touchpad_check_endpoint_35_49_reg == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_55_101;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_55_101) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_51_95) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_51_95;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_51_95) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_touchpad_check_endpoint_BB_51_95) & (memory_controller_waitrequest == 1'd0)) & (touchpad_check_endpoint_35_50_reg == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_61_107;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_61_107) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_touchpad_check_endpoint_BB_51_95) & (memory_controller_waitrequest == 1'd0)) & (touchpad_check_endpoint_35_50_reg == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_52_96;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_52_96) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_52_96) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_52_96;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_52_96) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_52_96) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_52_97;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_52_97) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_52_97) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_52_97;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_52_97) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_52_97) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_52_98;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_52_98) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_52_98) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_52_98;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_52_98) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_52_98) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_52_99;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_52_99) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_52_99) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_52_99;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_52_99) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_52_99) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_52_100;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_52_100) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_52_100) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_52_100;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_52_100) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_52_100) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_61_107;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_61_107) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_55_101) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_55_101;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_55_101) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_touchpad_check_endpoint_BB_55_101) & (memory_controller_waitrequest == 1'd0)) & (touchpad_check_endpoint_35_50_reg == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_56_102;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_56_102) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_touchpad_check_endpoint_BB_55_101) & (memory_controller_waitrequest == 1'd0)) & (touchpad_check_endpoint_35_50_reg == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_61_107;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_61_107) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_56_102) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_56_102;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_56_102) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_56_102) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_56_103;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_56_103) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_56_103) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_56_103;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_56_103) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_56_103) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_56_104;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_56_104) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_56_104) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_56_104;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_56_104) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_touchpad_check_endpoint_BB_56_104) & (memory_controller_waitrequest == 1'd0)) & (touchpad_check_endpoint_56_59 == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_60_105;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_60_105) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_touchpad_check_endpoint_BB_56_104) & (memory_controller_waitrequest == 1'd0)) & (touchpad_check_endpoint_56_59 == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_61_107;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_61_107) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_60_105) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_60_105;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_60_105) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_60_105) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_60_106;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_60_106) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_60_106) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_60_106;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_60_106) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_60_106) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_61_107;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_61_107) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_61_107) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_61_107;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_61_107) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_61_107) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_61_108;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_61_108) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_61_108) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_61_108;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_61_108) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_61_108) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_61_109;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_61_109) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_61_109) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_61_109;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_61_109) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_61_109) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_61_110;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_61_110) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_61_110) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_61_110;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_61_110) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_61_110) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_61_111;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_61_111) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_61_111) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_61_111;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_61_111) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_61_111) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_61_112;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_61_112) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_61_112) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_61_112;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_61_112) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_61_112) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_61_113;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_61_113) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_61_113) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_61_113;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_61_113) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_61_113) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_61_114;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_61_114) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_61_114) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_61_114;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_61_114) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_61_114) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_61_115;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_61_115) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_61_115) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_61_115;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_61_115) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_61_115) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_61_116;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_61_116) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_61_116) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_61_116;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_61_116) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_61_116) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_61_117;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_61_117) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_61_117) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_61_117;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_61_117) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_61_117) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_61_118;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_61_118) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_61_118) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_61_118;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_61_118) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_61_118) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_61_119;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_61_119) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_61_119) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_61_119;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_61_119) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_61_119) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_61_120;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_61_120) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_61_120) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_61_120;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_61_120) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_61_120) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_61_121;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_61_121) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_61_121) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_61_121;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_61_121) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_61_121) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_61_122;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_61_122) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_61_122) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_61_122;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_61_122) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_61_122) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_61_123;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_61_123) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_61_123) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_61_123;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_61_123) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_61_123) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_61_124;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_61_124) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_61_124) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_61_124;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_61_124) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_61_124) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_61_125;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_61_125) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_61_125) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_61_125;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_61_125) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_61_125) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_61_126;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_61_126) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_61_126) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_61_126;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_61_126) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_61_126) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_61_127;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_61_127) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_61_127) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_61_127;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_61_127) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_61_127) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_61_128;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_61_128) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_61_128) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_61_128;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_61_128) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_61_128) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_61_129;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_61_129) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_61_129) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_61_129;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_61_129) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_61_129) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_61_130;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_61_130) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_61_130) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_61_130;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_61_130) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_61_130) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_61_131;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_61_131) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_61_131) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_61_131;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_61_131) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_61_131) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_61_132;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_61_132) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_61_132) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_61_132;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_61_132) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_61_132) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_61_133;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_61_133) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_61_133) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_61_133;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_61_133) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_61_133) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_61_134;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_61_134) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_61_134) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_61_134;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_61_134) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_61_134) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_61_135;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_61_135) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_61_135) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_61_135;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_61_135) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_61_135) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_61_136;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_61_136) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_61_136) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_61_136;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_61_136) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_61_136) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_61_137;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_61_137) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_61_137) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_61_137;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_61_137) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_61_137) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_61_138;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_61_138) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_61_138) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_61_138;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_61_138) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_61_138) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_61_139;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_61_139) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_61_139) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_61_139;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_61_139) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_61_139) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_61_140;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_61_140) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_61_140) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_61_140;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_61_140) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_61_140) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_61_141;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_61_141) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_61_141) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_61_141;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_61_141) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_61_141) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_61_142;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_61_142) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_61_142) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_61_142;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_61_142) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_61_142) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_61_143;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_61_143) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_61_143) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_61_143;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_61_143) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_61_143) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_61_144;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_61_144) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_61_144) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_61_144;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_61_144) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_61_144) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_61_145;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_61_145) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_61_145) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_61_145;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_61_145) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_touchpad_check_endpoint_BB_61_145) & (memory_controller_waitrequest == 1'd0)) & (touchpad_check_endpoint_61_75_reg == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_77_146;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_77_146) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_touchpad_check_endpoint_BB_61_145) & (memory_controller_waitrequest == 1'd0)) & (touchpad_check_endpoint_61_75_reg == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_81_152;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_81_152) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_77_146) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_77_146;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_77_146) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_touchpad_check_endpoint_BB_77_146) & (memory_controller_waitrequest == 1'd0)) & (touchpad_check_endpoint_61_76_reg == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_87_158;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_87_158) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_touchpad_check_endpoint_BB_77_146) & (memory_controller_waitrequest == 1'd0)) & (touchpad_check_endpoint_61_76_reg == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_78_147;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_78_147) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_78_147) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_78_147;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_78_147) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_78_147) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_78_148;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_78_148) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_78_148) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_78_148;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_78_148) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_78_148) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_78_149;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_78_149) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_78_149) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_78_149;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_78_149) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_78_149) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_78_150;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_78_150) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_78_150) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_78_150;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_78_150) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_78_150) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_78_151;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_78_151) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_78_151) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_78_151;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_78_151) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_78_151) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_87_158;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_87_158) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_81_152) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_81_152;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_81_152) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_touchpad_check_endpoint_BB_81_152) & (memory_controller_waitrequest == 1'd0)) & (touchpad_check_endpoint_61_76_reg == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_82_153;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_82_153) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_touchpad_check_endpoint_BB_81_152) & (memory_controller_waitrequest == 1'd0)) & (touchpad_check_endpoint_61_76_reg == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_87_158;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_87_158) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_82_153) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_82_153;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_82_153) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_82_153) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_82_154;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_82_154) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_82_154) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_82_154;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_82_154) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_82_154) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_82_155;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_82_155) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_82_155) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_82_155;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_82_155) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_touchpad_check_endpoint_BB_82_155) & (memory_controller_waitrequest == 1'd0)) & (touchpad_check_endpoint_82_85 == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_86_156;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_86_156) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_touchpad_check_endpoint_BB_82_155) & (memory_controller_waitrequest == 1'd0)) & (touchpad_check_endpoint_82_85 == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_87_158;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_87_158) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_86_156) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_86_156;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_86_156) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_86_156) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_86_157;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_86_157) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_86_157) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_86_157;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_86_157) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_86_157) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_87_158;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_87_158) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_87_158) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_87_158;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_87_158) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_87_158) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_87_159;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_87_159) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_87_159) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_87_159;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_87_159) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_87_159) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_87_160;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_87_160) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_87_160) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_87_160;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_87_160) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_87_160) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_87_161;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_87_161) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_87_161) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_87_161;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_87_161) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_87_161) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_87_162;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_87_162) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_87_162) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_87_162;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_87_162) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_87_162) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_87_163;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_87_163) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_87_163) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_87_163;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_87_163) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_87_163) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_87_164;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_87_164) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_87_164) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_87_164;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_87_164) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_87_164) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_87_165;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_87_165) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_87_165) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_87_165;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_87_165) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_87_165) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_87_166;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_87_166) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_87_166) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_87_166;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_87_166) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_87_166) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_87_167;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_87_167) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_87_167) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_87_167;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_87_167) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_87_167) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_87_168;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_87_168) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_87_168) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_87_168;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_87_168) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_87_168) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_87_169;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_87_169) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_87_169) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_87_169;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_87_169) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_87_169) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_87_170;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_87_170) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_87_170) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_87_170;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_87_170) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_87_170) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_87_171;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_87_171) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_87_171) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_87_171;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_87_171) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_87_171) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_87_172;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_87_172) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_87_172) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_87_172;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_87_172) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_87_172) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_87_173;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_87_173) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_87_173) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_87_173;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_87_173) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_87_173) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_87_174;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_87_174) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_87_174) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_87_174;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_87_174) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_87_174) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_87_175;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_87_175) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_87_175) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_87_175;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_87_175) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_87_175) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_87_176;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_87_176) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_87_176) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_87_176;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_87_176) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_87_176) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_87_177;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_87_177) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_87_177) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_87_177;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_87_177) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_87_177) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_87_178;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_87_178) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_87_178) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_87_178;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_87_178) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_87_178) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_87_179;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_87_179) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_87_179) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_87_179;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_87_179) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_87_179) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_87_180;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_87_180) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_87_180) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_87_180;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_87_180) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_87_180) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_87_181;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_87_181) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_87_181) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_87_181;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_87_181) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_87_181) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_87_182;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_87_182) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_87_182) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_87_182;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_87_182) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_87_182) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_87_183;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_87_183) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_87_183) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_87_183;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_87_183) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_87_183) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_87_184;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_87_184) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_87_184) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_87_184;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_87_184) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_87_184) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_87_185;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_87_185) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_87_185) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_87_185;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_87_185) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_87_185) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_87_186;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_87_186) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_87_186) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_87_186;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_87_186) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_87_186) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_87_187;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_87_187) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_87_187) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_87_187;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_87_187) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_87_187) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_87_188;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_87_188) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_87_188) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_87_188;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_87_188) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_87_188) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_87_189;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_87_189) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_87_189) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_87_189;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_87_189) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_87_189) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_87_190;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_87_190) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_87_190) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_87_190;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_87_190) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_87_190) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_87_191;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_87_191) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_87_191) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_87_191;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_87_191) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_87_191) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_87_192;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_87_192) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_87_192) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_87_192;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_87_192) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_87_192) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_87_193;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_87_193) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_87_193) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_87_193;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_87_193) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_87_193) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_87_194;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_87_194) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_87_194) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_87_194;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_87_194) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_87_194) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_87_195;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_87_195) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_87_195) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_87_195;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_87_195) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_87_195) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_87_196;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_87_196) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_87_196) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_87_196;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_87_196) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_touchpad_check_endpoint_BB_87_196) & (memory_controller_waitrequest == 1'd0)) & (touchpad_check_endpoint_87_101_reg == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_103_197;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_103_197) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_touchpad_check_endpoint_BB_87_196) & (memory_controller_waitrequest == 1'd0)) & (touchpad_check_endpoint_87_101_reg == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_107_203;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_107_203) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_103_197) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_103_197;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_103_197) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_touchpad_check_endpoint_BB_103_197) & (memory_controller_waitrequest == 1'd0)) & (touchpad_check_endpoint_87_102_reg == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_113_209;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_113_209) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_touchpad_check_endpoint_BB_103_197) & (memory_controller_waitrequest == 1'd0)) & (touchpad_check_endpoint_87_102_reg == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_104_198;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_104_198) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_104_198) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_104_198;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_104_198) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_104_198) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_104_199;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_104_199) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_104_199) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_104_199;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_104_199) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_104_199) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_104_200;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_104_200) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_104_200) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_104_200;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_104_200) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_104_200) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_104_201;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_104_201) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_104_201) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_104_201;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_104_201) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_104_201) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_104_202;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_104_202) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_104_202) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_104_202;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_104_202) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_104_202) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_113_209;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_113_209) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_107_203) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_107_203;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_107_203) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_touchpad_check_endpoint_BB_107_203) & (memory_controller_waitrequest == 1'd0)) & (touchpad_check_endpoint_87_102_reg == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_108_204;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_108_204) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_touchpad_check_endpoint_BB_107_203) & (memory_controller_waitrequest == 1'd0)) & (touchpad_check_endpoint_87_102_reg == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_113_209;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_113_209) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_108_204) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_108_204;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_108_204) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_108_204) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_108_205;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_108_205) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_108_205) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_108_205;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_108_205) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_108_205) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_108_206;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_108_206) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_108_206) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_108_206;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_108_206) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_touchpad_check_endpoint_BB_108_206) & (memory_controller_waitrequest == 1'd0)) & (touchpad_check_endpoint_108_111 == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_112_207;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_112_207) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_touchpad_check_endpoint_BB_108_206) & (memory_controller_waitrequest == 1'd0)) & (touchpad_check_endpoint_108_111 == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_113_209;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_113_209) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_112_207) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_112_207;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_112_207) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_112_207) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_112_208;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_112_208) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_112_208) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_112_208;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_112_208) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_112_208) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_113_209;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_113_209) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_113_209) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_touchpad_check_endpoint_BB_113_209;
if (reset == 1'b0 && ^(LEGUP_F_touchpad_check_endpoint_BB_113_209) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_113_209) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_0;
if (reset == 1'b0 && ^(LEGUP_0) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((reset == 1'd1))
begin
cur_state <= 8'd0;
if (reset == 1'b0 && ^(8'd0) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
end
always @(*) begin
/* touchpad_check_endpoint: %0*/
/*   %1 = getelementptr inbounds %struct.ad714x_chip* %ad714x, i32 0, i32 2*/
begin
touchpad_check_endpoint_0_1 = (arg_ad714x + 8);
end
end
always @(posedge clk) begin
/* touchpad_check_endpoint: %0*/
/*   %1 = getelementptr inbounds %struct.ad714x_chip* %ad714x, i32 0, i32 2*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_0_1))
begin
touchpad_check_endpoint_0_1_reg <= touchpad_check_endpoint_0_1;
if (reset == 1'b0 && ^(touchpad_check_endpoint_0_1) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to touchpad_check_endpoint_0_1_reg"); $finish; end
end
end
always @(*) begin
/* touchpad_check_endpoint: %0*/
/*   %2 = load %struct.TYPE_3__** %1, align 4, !tbaa !0*/
begin
touchpad_check_endpoint_0_2 = memory_controller_out_a[`MEMORY_CONTROLLER_ADDR_SIZE-1:0];
end
end
always @(posedge clk) begin
/* touchpad_check_endpoint: %0*/
/*   %2 = load %struct.TYPE_3__** %1, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_0_3))
begin
touchpad_check_endpoint_0_2_reg <= touchpad_check_endpoint_0_2;
if (reset == 1'b0 && ^(touchpad_check_endpoint_0_2) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to touchpad_check_endpoint_0_2_reg"); $finish; end
end
end
always @(*) begin
/* touchpad_check_endpoint: %0*/
/*   %3 = getelementptr inbounds %struct.TYPE_3__* %2, i32 0, i32 0*/
begin
touchpad_check_endpoint_0_3 = touchpad_check_endpoint_0_2;
end
end
always @(posedge clk) begin
/* touchpad_check_endpoint: %0*/
/*   %3 = getelementptr inbounds %struct.TYPE_3__* %2, i32 0, i32 0*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_0_3))
begin
touchpad_check_endpoint_0_3_reg <= touchpad_check_endpoint_0_3;
if (reset == 1'b0 && ^(touchpad_check_endpoint_0_3) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to touchpad_check_endpoint_0_3_reg"); $finish; end
end
end
always @(*) begin
/* touchpad_check_endpoint: %0*/
/*   %4 = load %struct.ad714x_touchpad_plat** %3, align 4, !tbaa !0*/
begin
touchpad_check_endpoint_0_4 = memory_controller_out_b[`MEMORY_CONTROLLER_ADDR_SIZE-1:0];
end
end
always @(posedge clk) begin
/* touchpad_check_endpoint: %0*/
/*   %4 = load %struct.ad714x_touchpad_plat** %3, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_0_5))
begin
touchpad_check_endpoint_0_4_reg <= touchpad_check_endpoint_0_4;
if (reset == 1'b0 && ^(touchpad_check_endpoint_0_4) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to touchpad_check_endpoint_0_4_reg"); $finish; end
end
end
always @(*) begin
/* touchpad_check_endpoint: %0*/
/*   %5 = getelementptr inbounds %struct.ad714x_chip* %ad714x, i32 0, i32 1*/
begin
touchpad_check_endpoint_0_5 = (arg_ad714x + 4);
end
end
always @(posedge clk) begin
/* touchpad_check_endpoint: %0*/
/*   %5 = getelementptr inbounds %struct.ad714x_chip* %ad714x, i32 0, i32 1*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_0_1))
begin
touchpad_check_endpoint_0_5_reg <= touchpad_check_endpoint_0_5;
if (reset == 1'b0 && ^(touchpad_check_endpoint_0_5) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to touchpad_check_endpoint_0_5_reg"); $finish; end
end
end
always @(*) begin
/* touchpad_check_endpoint: %0*/
/*   %6 = load %struct.TYPE_4__** %5, align 4, !tbaa !0*/
begin
touchpad_check_endpoint_0_6 = memory_controller_out_a[`MEMORY_CONTROLLER_ADDR_SIZE-1:0];
end
end
always @(posedge clk) begin
/* touchpad_check_endpoint: %0*/
/*   %6 = load %struct.TYPE_4__** %5, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_0_10))
begin
touchpad_check_endpoint_0_6_reg <= touchpad_check_endpoint_0_6;
if (reset == 1'b0 && ^(touchpad_check_endpoint_0_6) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to touchpad_check_endpoint_0_6_reg"); $finish; end
end
end
always @(*) begin
/* touchpad_check_endpoint: %0*/
/*   %7 = getelementptr inbounds %struct.TYPE_4__* %6, i32 0, i32 0*/
begin
touchpad_check_endpoint_0_7 = touchpad_check_endpoint_0_6;
end
end
always @(posedge clk) begin
/* touchpad_check_endpoint: %0*/
/*   %7 = getelementptr inbounds %struct.TYPE_4__* %6, i32 0, i32 0*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_0_10))
begin
touchpad_check_endpoint_0_7_reg <= touchpad_check_endpoint_0_7;
if (reset == 1'b0 && ^(touchpad_check_endpoint_0_7) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to touchpad_check_endpoint_0_7_reg"); $finish; end
end
end
always @(*) begin
/* touchpad_check_endpoint: %0*/
/*   %8 = load %struct.ad714x_touchpad_drv** %7, align 4, !tbaa !0*/
begin
touchpad_check_endpoint_0_8 = memory_controller_out_b[`MEMORY_CONTROLLER_ADDR_SIZE-1:0];
end
end
always @(posedge clk) begin
/* touchpad_check_endpoint: %0*/
/*   %8 = load %struct.ad714x_touchpad_drv** %7, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_0_12))
begin
touchpad_check_endpoint_0_8_reg <= touchpad_check_endpoint_0_8;
if (reset == 1'b0 && ^(touchpad_check_endpoint_0_8) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to touchpad_check_endpoint_0_8_reg"); $finish; end
end
end
always @(*) begin
/* touchpad_check_endpoint: %0*/
/*   %9 = getelementptr inbounds %struct.ad714x_touchpad_plat* %4, i32 %idx, i32 0*/
begin
touchpad_check_endpoint_0_9 = (touchpad_check_endpoint_0_4 + (16 * arg_idx));
end
end
always @(posedge clk) begin
/* touchpad_check_endpoint: %0*/
/*   %9 = getelementptr inbounds %struct.ad714x_touchpad_plat* %4, i32 %idx, i32 0*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_0_5))
begin
touchpad_check_endpoint_0_9_reg <= touchpad_check_endpoint_0_9;
if (reset == 1'b0 && ^(touchpad_check_endpoint_0_9) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to touchpad_check_endpoint_0_9_reg"); $finish; end
end
end
always @(*) begin
/* touchpad_check_endpoint: %0*/
/*   %10 = load i32* %9, align 4, !tbaa !3*/
begin
touchpad_check_endpoint_0_10 = memory_controller_out_a[31:0];
end
end
always @(posedge clk) begin
/* touchpad_check_endpoint: %0*/
/*   %10 = load i32* %9, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_0_7))
begin
touchpad_check_endpoint_0_10_reg <= touchpad_check_endpoint_0_10;
if (reset == 1'b0 && ^(touchpad_check_endpoint_0_10) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to touchpad_check_endpoint_0_10_reg"); $finish; end
end
end
always @(*) begin
/* touchpad_check_endpoint: %0*/
/*   %11 = getelementptr inbounds %struct.ad714x_chip* %ad714x, i32 0, i32 0*/
begin
touchpad_check_endpoint_0_11 = arg_ad714x;
end
end
always @(posedge clk) begin
/* touchpad_check_endpoint: %0*/
/*   %11 = getelementptr inbounds %struct.ad714x_chip* %ad714x, i32 0, i32 0*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_0_1))
begin
touchpad_check_endpoint_0_11_reg <= touchpad_check_endpoint_0_11;
if (reset == 1'b0 && ^(touchpad_check_endpoint_0_11) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to touchpad_check_endpoint_0_11_reg"); $finish; end
end
end
always @(*) begin
/* touchpad_check_endpoint: %0*/
/*   %12 = load i32** %11, align 4, !tbaa !0*/
begin
touchpad_check_endpoint_0_12 = memory_controller_out_a[`MEMORY_CONTROLLER_ADDR_SIZE-1:0];
end
end
always @(posedge clk) begin
/* touchpad_check_endpoint: %0*/
/*   %12 = load i32** %11, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_0_6))
begin
touchpad_check_endpoint_0_12_reg <= touchpad_check_endpoint_0_12;
if (reset == 1'b0 && ^(touchpad_check_endpoint_0_12) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to touchpad_check_endpoint_0_12_reg"); $finish; end
end
end
always @(*) begin
/* touchpad_check_endpoint: %0*/
/*   %13 = getelementptr inbounds i32* %12, i32 %10*/
begin
touchpad_check_endpoint_0_13 = (touchpad_check_endpoint_0_12_reg + (4 * touchpad_check_endpoint_0_10));
end
end
always @(posedge clk) begin
/* touchpad_check_endpoint: %0*/
/*   %13 = getelementptr inbounds i32* %12, i32 %10*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_0_7))
begin
touchpad_check_endpoint_0_13_reg <= touchpad_check_endpoint_0_13;
if (reset == 1'b0 && ^(touchpad_check_endpoint_0_13) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to touchpad_check_endpoint_0_13_reg"); $finish; end
end
end
always @(*) begin
/* touchpad_check_endpoint: %0*/
/*   %14 = load i32* %13, align 4, !tbaa !4*/
begin
touchpad_check_endpoint_0_14 = memory_controller_out_b[31:0];
end
end
always @(posedge clk) begin
/* touchpad_check_endpoint: %0*/
/*   %14 = load i32* %13, align 4, !tbaa !4*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_0_9))
begin
touchpad_check_endpoint_0_14_reg <= touchpad_check_endpoint_0_14;
if (reset == 1'b0 && ^(touchpad_check_endpoint_0_14) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to touchpad_check_endpoint_0_14_reg"); $finish; end
end
end
always @(*) begin
/* touchpad_check_endpoint: %0*/
/*   %15 = add i32 %10, 1*/
begin
touchpad_check_endpoint_0_15 = (touchpad_check_endpoint_0_10 + 32'd1);
end
end
always @(posedge clk) begin
/* touchpad_check_endpoint: %0*/
/*   %15 = add i32 %10, 1*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_0_7))
begin
touchpad_check_endpoint_0_15_reg <= touchpad_check_endpoint_0_15;
if (reset == 1'b0 && ^(touchpad_check_endpoint_0_15) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to touchpad_check_endpoint_0_15_reg"); $finish; end
end
end
always @(*) begin
/* touchpad_check_endpoint: %0*/
/*   %16 = getelementptr inbounds i32* %12, i32 %15*/
begin
touchpad_check_endpoint_0_16 = (touchpad_check_endpoint_0_12_reg + (4 * touchpad_check_endpoint_0_15_reg));
end
end
always @(posedge clk) begin
/* touchpad_check_endpoint: %0*/
/*   %16 = getelementptr inbounds i32* %12, i32 %15*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_0_8))
begin
touchpad_check_endpoint_0_16_reg <= touchpad_check_endpoint_0_16;
if (reset == 1'b0 && ^(touchpad_check_endpoint_0_16) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to touchpad_check_endpoint_0_16_reg"); $finish; end
end
end
always @(*) begin
/* touchpad_check_endpoint: %0*/
/*   %17 = load i32* %16, align 4, !tbaa !4*/
begin
touchpad_check_endpoint_0_17 = memory_controller_out_b[31:0];
end
end
always @(posedge clk) begin
/* touchpad_check_endpoint: %0*/
/*   %17 = load i32* %16, align 4, !tbaa !4*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_0_10))
begin
touchpad_check_endpoint_0_17_reg <= touchpad_check_endpoint_0_17;
if (reset == 1'b0 && ^(touchpad_check_endpoint_0_17) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to touchpad_check_endpoint_0_17_reg"); $finish; end
end
end
always @(*) begin
/* touchpad_check_endpoint: %0*/
/*   %18 = sub nsw i32 %14, %17*/
begin
touchpad_check_endpoint_0_18 = (touchpad_check_endpoint_0_14_reg - touchpad_check_endpoint_0_17);
end
end
always @(posedge clk) begin
/* touchpad_check_endpoint: %0*/
/*   %18 = sub nsw i32 %14, %17*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_0_10))
begin
touchpad_check_endpoint_0_18_reg <= touchpad_check_endpoint_0_18;
if (reset == 1'b0 && ^(touchpad_check_endpoint_0_18) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to touchpad_check_endpoint_0_18_reg"); $finish; end
end
end
always @(*) begin
touchpad_check_endpoint_0_19 = touchpad_check_endpoint_0_19_stage0_reg;
end
always @(posedge clk) begin
/* touchpad_check_endpoint: %0*/
/*   %19 = mul nsw i32 %18, 100*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_0_11))
begin
touchpad_check_endpoint_0_19_reg <= touchpad_check_endpoint_0_19;
if (reset == 1'b0 && ^(touchpad_check_endpoint_0_19) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to touchpad_check_endpoint_0_19_reg"); $finish; end
end
/* touchpad_check_endpoint: %0*/
/*   %19 = mul nsw i32 %18, 100*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_0_11))
begin
touchpad_check_endpoint_0_19_reg <= touchpad_check_endpoint_0_19;
if (reset == 1'b0 && ^(touchpad_check_endpoint_0_19) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to touchpad_check_endpoint_0_19_reg"); $finish; end
end
end
always @(*) begin
touchpad_check_endpoint_0_20 = touchpad_check_endpoint_signed_divide_32_0;
end
always @(posedge clk) begin
/* touchpad_check_endpoint: %0*/
/*   %20 = sdiv i32 %19, %17*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_0_43))
begin
touchpad_check_endpoint_0_20_reg <= touchpad_check_endpoint_0_20;
if (reset == 1'b0 && ^(touchpad_check_endpoint_0_20) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to touchpad_check_endpoint_0_20_reg"); $finish; end
end
/* touchpad_check_endpoint: %0*/
/*   %20 = sdiv i32 %19, %17*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_0_43))
begin
touchpad_check_endpoint_0_20_reg <= touchpad_check_endpoint_0_20;
if (reset == 1'b0 && ^(touchpad_check_endpoint_0_20) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to touchpad_check_endpoint_0_20_reg"); $finish; end
end
/* touchpad_check_endpoint: %35*/
/*   %46 = sdiv i32 %45, %43*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_35_94))
begin
touchpad_check_endpoint_0_20_reg <= touchpad_check_endpoint_35_46;
if (reset == 1'b0 && ^(touchpad_check_endpoint_35_46) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to touchpad_check_endpoint_0_20_reg"); $finish; end
end
/* touchpad_check_endpoint: %61*/
/*   %72 = sdiv i32 %71, %69*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_61_145))
begin
touchpad_check_endpoint_0_20_reg <= touchpad_check_endpoint_61_72;
if (reset == 1'b0 && ^(touchpad_check_endpoint_61_72) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to touchpad_check_endpoint_0_20_reg"); $finish; end
end
/* touchpad_check_endpoint: %87*/
/*   %98 = sdiv i32 %97, %95*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_87_196))
begin
touchpad_check_endpoint_0_20_reg <= touchpad_check_endpoint_87_98;
if (reset == 1'b0 && ^(touchpad_check_endpoint_87_98) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to touchpad_check_endpoint_0_20_reg"); $finish; end
end
end
always @(*) begin
/* touchpad_check_endpoint: %0*/
/*   %21 = getelementptr inbounds %struct.ad714x_touchpad_drv* %8, i32 %idx, i32 0*/
begin
touchpad_check_endpoint_0_21 = (touchpad_check_endpoint_0_8 + (32 * arg_idx));
end
end
always @(posedge clk) begin
/* touchpad_check_endpoint: %0*/
/*   %21 = getelementptr inbounds %struct.ad714x_touchpad_drv* %8, i32 %idx, i32 0*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_0_12))
begin
touchpad_check_endpoint_0_21_reg <= touchpad_check_endpoint_0_21;
if (reset == 1'b0 && ^(touchpad_check_endpoint_0_21) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to touchpad_check_endpoint_0_21_reg"); $finish; end
end
end
always @(*) begin
/* touchpad_check_endpoint: %0*/
/*   %22 = load i32* %21, align 4, !tbaa !4*/
begin
touchpad_check_endpoint_0_22 = memory_controller_out_a[31:0];
end
end
always @(posedge clk) begin
/* touchpad_check_endpoint: %0*/
/*   %22 = load i32* %21, align 4, !tbaa !4*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_0_14))
begin
touchpad_check_endpoint_0_22_reg <= touchpad_check_endpoint_0_22;
if (reset == 1'b0 && ^(touchpad_check_endpoint_0_22) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to touchpad_check_endpoint_0_22_reg"); $finish; end
end
end
always @(*) begin
/* touchpad_check_endpoint: %0*/
/*   %23 = icmp eq i32 %22, 0*/
begin
touchpad_check_endpoint_0_23 = (touchpad_check_endpoint_0_22 == 32'd0);
end
end
always @(posedge clk) begin
/* touchpad_check_endpoint: %0*/
/*   %23 = icmp eq i32 %22, 0*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_0_14))
begin
touchpad_check_endpoint_0_23_reg <= touchpad_check_endpoint_0_23;
if (reset == 1'b0 && ^(touchpad_check_endpoint_0_23) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to touchpad_check_endpoint_0_23_reg"); $finish; end
end
end
always @(*) begin
/* touchpad_check_endpoint: %0*/
/*   %24 = icmp slt i32 %20, 0*/
begin
touchpad_check_endpoint_0_24 = ($signed(touchpad_check_endpoint_0_20) < $signed(32'd0));
end
end
always @(posedge clk) begin
/* touchpad_check_endpoint: %0*/
/*   %24 = icmp slt i32 %20, 0*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_0_43))
begin
touchpad_check_endpoint_0_24_reg <= touchpad_check_endpoint_0_24;
if (reset == 1'b0 && ^(touchpad_check_endpoint_0_24) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to touchpad_check_endpoint_0_24_reg"); $finish; end
end
end
always @(*) begin
/* touchpad_check_endpoint: %26*/
/*   %27 = load i32* %16, align 4, !tbaa !4*/
begin
touchpad_check_endpoint_26_27 = memory_controller_out_b[31:0];
end
end
always @(posedge clk) begin
/* touchpad_check_endpoint: %26*/
/*   %27 = load i32* %16, align 4, !tbaa !4*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_26_48))
begin
touchpad_check_endpoint_26_27_reg <= touchpad_check_endpoint_26_27;
if (reset == 1'b0 && ^(touchpad_check_endpoint_26_27) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to touchpad_check_endpoint_26_27_reg"); $finish; end
end
end
always @(*) begin
/* touchpad_check_endpoint: %26*/
/*   %28 = getelementptr inbounds %struct.ad714x_touchpad_drv* %8, i32 %idx, i32 1*/
begin
touchpad_check_endpoint_26_28 = (touchpad_check_endpoint_0_8_reg + ((32 * arg_idx) + 4));
end
end
always @(posedge clk) begin
/* touchpad_check_endpoint: %26*/
/*   %28 = getelementptr inbounds %struct.ad714x_touchpad_drv* %8, i32 %idx, i32 1*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_26_45))
begin
touchpad_check_endpoint_26_28_reg <= touchpad_check_endpoint_26_28;
if (reset == 1'b0 && ^(touchpad_check_endpoint_26_28) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to touchpad_check_endpoint_26_28_reg"); $finish; end
end
end
always @(*) begin
/* touchpad_check_endpoint: %30*/
/*   %31 = getelementptr inbounds %struct.ad714x_touchpad_drv* %8, i32 %idx, i32 1*/
begin
touchpad_check_endpoint_30_31 = (touchpad_check_endpoint_0_8_reg + ((32 * arg_idx) + 4));
end
end
always @(posedge clk) begin
/* touchpad_check_endpoint: %30*/
/*   %31 = getelementptr inbounds %struct.ad714x_touchpad_drv* %8, i32 %idx, i32 1*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_30_51))
begin
touchpad_check_endpoint_30_31_reg <= touchpad_check_endpoint_30_31;
if (reset == 1'b0 && ^(touchpad_check_endpoint_30_31) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to touchpad_check_endpoint_30_31_reg"); $finish; end
end
end
always @(*) begin
/* touchpad_check_endpoint: %30*/
/*   %32 = load i32* %31, align 4, !tbaa !4*/
begin
touchpad_check_endpoint_30_32 = memory_controller_out_a[31:0];
end
end
always @(posedge clk) begin
/* touchpad_check_endpoint: %30*/
/*   %32 = load i32* %31, align 4, !tbaa !4*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_30_53))
begin
touchpad_check_endpoint_30_32_reg <= touchpad_check_endpoint_30_32;
if (reset == 1'b0 && ^(touchpad_check_endpoint_30_32) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to touchpad_check_endpoint_30_32_reg"); $finish; end
end
end
always @(*) begin
/* touchpad_check_endpoint: %30*/
/*   %33 = icmp sgt i32 %17, %32*/
begin
touchpad_check_endpoint_30_33 = ($signed(touchpad_check_endpoint_0_17_reg) > $signed(touchpad_check_endpoint_30_32));
end
end
always @(posedge clk) begin
/* touchpad_check_endpoint: %30*/
/*   %33 = icmp sgt i32 %17, %32*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_30_53))
begin
touchpad_check_endpoint_30_33_reg <= touchpad_check_endpoint_30_33;
if (reset == 1'b0 && ^(touchpad_check_endpoint_30_33) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to touchpad_check_endpoint_30_33_reg"); $finish; end
end
end
always @(*) begin
/* touchpad_check_endpoint: %35*/
/*   %36 = phi i32 [ 0, %25 ], [ %22, %29 ], [ %22, %30 ], [ 0, %34 ], [ 1, %26 ]*/
if ((((cur_state == LEGUP_F_touchpad_check_endpoint_BB_25_44) & (memory_controller_waitrequest == 1'd0)) & (touchpad_check_endpoint_0_24_reg == 1'd1)))
begin
touchpad_check_endpoint_35_36 = 32'd0;
end
/* touchpad_check_endpoint: %35*/
/*   %36 = phi i32 [ 0, %25 ], [ %22, %29 ], [ %22, %30 ], [ 0, %34 ], [ 1, %26 ]*/
else if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_26_49) & (memory_controller_waitrequest == 1'd0)))
begin
touchpad_check_endpoint_35_36 = 32'd1;
end
/* touchpad_check_endpoint: %35*/
/*   %36 = phi i32 [ 0, %25 ], [ %22, %29 ], [ %22, %30 ], [ 0, %34 ], [ 1, %26 ]*/
else if ((((cur_state == LEGUP_F_touchpad_check_endpoint_BB_29_50) & (memory_controller_waitrequest == 1'd0)) & (touchpad_check_endpoint_0_24_reg == 1'd0)))
begin
touchpad_check_endpoint_35_36 = touchpad_check_endpoint_0_22_reg;
end
/* touchpad_check_endpoint: %35*/
/*   %36 = phi i32 [ 0, %25 ], [ %22, %29 ], [ %22, %30 ], [ 0, %34 ], [ 1, %26 ]*/
else if ((((cur_state == LEGUP_F_touchpad_check_endpoint_BB_30_53) & (memory_controller_waitrequest == 1'd0)) & (touchpad_check_endpoint_30_33 == 1'd0)))
begin
touchpad_check_endpoint_35_36 = touchpad_check_endpoint_0_22_reg;
end
/* touchpad_check_endpoint: %35*/
/*   %36 = phi i32 [ 0, %25 ], [ %22, %29 ], [ %22, %30 ], [ 0, %34 ], [ 1, %26 ]*/
else /* if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_34_55) & (memory_controller_waitrequest == 1'd0))) */
begin
touchpad_check_endpoint_35_36 = 32'd0;
end
end
always @(posedge clk) begin
/* touchpad_check_endpoint: %35*/
/*   %36 = phi i32 [ 0, %25 ], [ %22, %29 ], [ %22, %30 ], [ 0, %34 ], [ 1, %26 ]*/
if ((((cur_state == LEGUP_F_touchpad_check_endpoint_BB_25_44) & (memory_controller_waitrequest == 1'd0)) & (touchpad_check_endpoint_0_24_reg == 1'd1)))
begin
touchpad_check_endpoint_35_36_reg <= touchpad_check_endpoint_35_36;
if (reset == 1'b0 && ^(touchpad_check_endpoint_35_36) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to touchpad_check_endpoint_35_36_reg"); $finish; end
end
/* touchpad_check_endpoint: %35*/
/*   %36 = phi i32 [ 0, %25 ], [ %22, %29 ], [ %22, %30 ], [ 0, %34 ], [ 1, %26 ]*/
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_26_49) & (memory_controller_waitrequest == 1'd0)))
begin
touchpad_check_endpoint_35_36_reg <= touchpad_check_endpoint_35_36;
if (reset == 1'b0 && ^(touchpad_check_endpoint_35_36) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to touchpad_check_endpoint_35_36_reg"); $finish; end
end
/* touchpad_check_endpoint: %35*/
/*   %36 = phi i32 [ 0, %25 ], [ %22, %29 ], [ %22, %30 ], [ 0, %34 ], [ 1, %26 ]*/
if ((((cur_state == LEGUP_F_touchpad_check_endpoint_BB_29_50) & (memory_controller_waitrequest == 1'd0)) & (touchpad_check_endpoint_0_24_reg == 1'd0)))
begin
touchpad_check_endpoint_35_36_reg <= touchpad_check_endpoint_35_36;
if (reset == 1'b0 && ^(touchpad_check_endpoint_35_36) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to touchpad_check_endpoint_35_36_reg"); $finish; end
end
/* touchpad_check_endpoint: %35*/
/*   %36 = phi i32 [ 0, %25 ], [ %22, %29 ], [ %22, %30 ], [ 0, %34 ], [ 1, %26 ]*/
if ((((cur_state == LEGUP_F_touchpad_check_endpoint_BB_30_53) & (memory_controller_waitrequest == 1'd0)) & (touchpad_check_endpoint_30_33 == 1'd0)))
begin
touchpad_check_endpoint_35_36_reg <= touchpad_check_endpoint_35_36;
if (reset == 1'b0 && ^(touchpad_check_endpoint_35_36) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to touchpad_check_endpoint_35_36_reg"); $finish; end
end
/* touchpad_check_endpoint: %35*/
/*   %36 = phi i32 [ 0, %25 ], [ %22, %29 ], [ %22, %30 ], [ 0, %34 ], [ 1, %26 ]*/
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_34_55) & (memory_controller_waitrequest == 1'd0)))
begin
touchpad_check_endpoint_35_36_reg <= touchpad_check_endpoint_35_36;
if (reset == 1'b0 && ^(touchpad_check_endpoint_35_36) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to touchpad_check_endpoint_35_36_reg"); $finish; end
end
end
always @(*) begin
/* touchpad_check_endpoint: %35*/
/*   %37 = getelementptr inbounds %struct.ad714x_touchpad_plat* %4, i32 %idx, i32 1*/
begin
touchpad_check_endpoint_35_37 = (touchpad_check_endpoint_0_4_reg + ((16 * arg_idx) + 4));
end
end
always @(posedge clk) begin
/* touchpad_check_endpoint: %35*/
/*   %37 = getelementptr inbounds %struct.ad714x_touchpad_plat* %4, i32 %idx, i32 1*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_35_56))
begin
touchpad_check_endpoint_35_37_reg <= touchpad_check_endpoint_35_37;
if (reset == 1'b0 && ^(touchpad_check_endpoint_35_37) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to touchpad_check_endpoint_35_37_reg"); $finish; end
end
end
always @(*) begin
/* touchpad_check_endpoint: %35*/
/*   %38 = load i32* %37, align 4, !tbaa !3*/
begin
touchpad_check_endpoint_35_38 = memory_controller_out_a[31:0];
end
end
always @(posedge clk) begin
/* touchpad_check_endpoint: %35*/
/*   %38 = load i32* %37, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_35_58))
begin
touchpad_check_endpoint_35_38_reg <= touchpad_check_endpoint_35_38;
if (reset == 1'b0 && ^(touchpad_check_endpoint_35_38) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to touchpad_check_endpoint_35_38_reg"); $finish; end
end
end
always @(*) begin
/* touchpad_check_endpoint: %35*/
/*   %39 = getelementptr inbounds i32* %12, i32 %38*/
begin
touchpad_check_endpoint_35_39 = (touchpad_check_endpoint_0_12_reg + (4 * touchpad_check_endpoint_35_38));
end
end
always @(posedge clk) begin
/* touchpad_check_endpoint: %35*/
/*   %39 = getelementptr inbounds i32* %12, i32 %38*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_35_58))
begin
touchpad_check_endpoint_35_39_reg <= touchpad_check_endpoint_35_39;
if (reset == 1'b0 && ^(touchpad_check_endpoint_35_39) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to touchpad_check_endpoint_35_39_reg"); $finish; end
end
end
always @(*) begin
/* touchpad_check_endpoint: %35*/
/*   %40 = load i32* %39, align 4, !tbaa !4*/
begin
touchpad_check_endpoint_35_40 = memory_controller_out_b[31:0];
end
end
always @(posedge clk) begin
/* touchpad_check_endpoint: %35*/
/*   %40 = load i32* %39, align 4, !tbaa !4*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_35_60))
begin
touchpad_check_endpoint_35_40_reg <= touchpad_check_endpoint_35_40;
if (reset == 1'b0 && ^(touchpad_check_endpoint_35_40) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to touchpad_check_endpoint_35_40_reg"); $finish; end
end
end
always @(*) begin
/* touchpad_check_endpoint: %35*/
/*   %41 = add i32 %38, -1*/
begin
touchpad_check_endpoint_35_41 = (touchpad_check_endpoint_35_38 + -32'd1);
end
end
always @(posedge clk) begin
/* touchpad_check_endpoint: %35*/
/*   %41 = add i32 %38, -1*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_35_58))
begin
touchpad_check_endpoint_35_41_reg <= touchpad_check_endpoint_35_41;
if (reset == 1'b0 && ^(touchpad_check_endpoint_35_41) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to touchpad_check_endpoint_35_41_reg"); $finish; end
end
end
always @(*) begin
/* touchpad_check_endpoint: %35*/
/*   %42 = getelementptr inbounds i32* %12, i32 %41*/
begin
touchpad_check_endpoint_35_42 = (touchpad_check_endpoint_0_12_reg + (4 * touchpad_check_endpoint_35_41_reg));
end
end
always @(posedge clk) begin
/* touchpad_check_endpoint: %35*/
/*   %42 = getelementptr inbounds i32* %12, i32 %41*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_35_59))
begin
touchpad_check_endpoint_35_42_reg <= touchpad_check_endpoint_35_42;
if (reset == 1'b0 && ^(touchpad_check_endpoint_35_42) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to touchpad_check_endpoint_35_42_reg"); $finish; end
end
end
always @(*) begin
/* touchpad_check_endpoint: %35*/
/*   %43 = load i32* %42, align 4, !tbaa !4*/
begin
touchpad_check_endpoint_35_43 = memory_controller_out_a[31:0];
end
end
always @(posedge clk) begin
/* touchpad_check_endpoint: %35*/
/*   %43 = load i32* %42, align 4, !tbaa !4*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_35_61))
begin
touchpad_check_endpoint_35_43_reg <= touchpad_check_endpoint_35_43;
if (reset == 1'b0 && ^(touchpad_check_endpoint_35_43) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to touchpad_check_endpoint_35_43_reg"); $finish; end
end
end
always @(*) begin
/* touchpad_check_endpoint: %35*/
/*   %44 = sub nsw i32 %40, %43*/
begin
touchpad_check_endpoint_35_44 = (touchpad_check_endpoint_35_40_reg - touchpad_check_endpoint_35_43);
end
end
always @(posedge clk) begin
/* touchpad_check_endpoint: %35*/
/*   %44 = sub nsw i32 %40, %43*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_35_61))
begin
touchpad_check_endpoint_35_44_reg <= touchpad_check_endpoint_35_44;
if (reset == 1'b0 && ^(touchpad_check_endpoint_35_44) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to touchpad_check_endpoint_35_44_reg"); $finish; end
end
end
always @(*) begin
touchpad_check_endpoint_35_45 = touchpad_check_endpoint_35_45_stage0_reg;
end
always @(posedge clk) begin
/* touchpad_check_endpoint: %35*/
/*   %45 = mul nsw i32 %44, 100*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_35_62))
begin
touchpad_check_endpoint_35_45_reg <= touchpad_check_endpoint_35_45;
if (reset == 1'b0 && ^(touchpad_check_endpoint_35_45) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to touchpad_check_endpoint_35_45_reg"); $finish; end
end
/* touchpad_check_endpoint: %35*/
/*   %45 = mul nsw i32 %44, 100*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_35_62))
begin
touchpad_check_endpoint_35_45_reg <= touchpad_check_endpoint_35_45;
if (reset == 1'b0 && ^(touchpad_check_endpoint_35_45) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to touchpad_check_endpoint_35_45_reg"); $finish; end
end
end
always @(*) begin
touchpad_check_endpoint_35_46 = touchpad_check_endpoint_signed_divide_32_0;
end
always @(*) begin
/* touchpad_check_endpoint: %35*/
/*   %46 = sdiv i32 %45, %43*/
touchpad_check_endpoint_35_46_reg = touchpad_check_endpoint_0_20_reg;
end
always @(*) begin
/* touchpad_check_endpoint: %35*/
/*   %47 = getelementptr inbounds %struct.ad714x_touchpad_drv* %8, i32 %idx, i32 2*/
begin
touchpad_check_endpoint_35_47 = (touchpad_check_endpoint_0_8_reg + ((32 * arg_idx) + 8));
end
end
always @(posedge clk) begin
/* touchpad_check_endpoint: %35*/
/*   %47 = getelementptr inbounds %struct.ad714x_touchpad_drv* %8, i32 %idx, i32 2*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_35_56))
begin
touchpad_check_endpoint_35_47_reg <= touchpad_check_endpoint_35_47;
if (reset == 1'b0 && ^(touchpad_check_endpoint_35_47) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to touchpad_check_endpoint_35_47_reg"); $finish; end
end
end
always @(*) begin
/* touchpad_check_endpoint: %35*/
/*   %48 = load i32* %47, align 4, !tbaa !4*/
begin
touchpad_check_endpoint_35_48 = memory_controller_out_b[31:0];
end
end
always @(posedge clk) begin
/* touchpad_check_endpoint: %35*/
/*   %48 = load i32* %47, align 4, !tbaa !4*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_35_61))
begin
touchpad_check_endpoint_35_48_reg <= touchpad_check_endpoint_35_48;
if (reset == 1'b0 && ^(touchpad_check_endpoint_35_48) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to touchpad_check_endpoint_35_48_reg"); $finish; end
end
end
always @(*) begin
/* touchpad_check_endpoint: %35*/
/*   %49 = icmp eq i32 %48, 0*/
begin
touchpad_check_endpoint_35_49 = (touchpad_check_endpoint_35_48 == 32'd0);
end
end
always @(posedge clk) begin
/* touchpad_check_endpoint: %35*/
/*   %49 = icmp eq i32 %48, 0*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_35_61))
begin
touchpad_check_endpoint_35_49_reg <= touchpad_check_endpoint_35_49;
if (reset == 1'b0 && ^(touchpad_check_endpoint_35_49) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to touchpad_check_endpoint_35_49_reg"); $finish; end
end
end
always @(*) begin
/* touchpad_check_endpoint: %35*/
/*   %50 = icmp slt i32 %46, 0*/
begin
touchpad_check_endpoint_35_50 = ($signed(touchpad_check_endpoint_35_46) < $signed(32'd0));
end
end
always @(posedge clk) begin
/* touchpad_check_endpoint: %35*/
/*   %50 = icmp slt i32 %46, 0*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_35_94))
begin
touchpad_check_endpoint_35_50_reg <= touchpad_check_endpoint_35_50;
if (reset == 1'b0 && ^(touchpad_check_endpoint_35_50) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to touchpad_check_endpoint_35_50_reg"); $finish; end
end
end
always @(*) begin
/* touchpad_check_endpoint: %52*/
/*   %53 = load i32* %42, align 4, !tbaa !4*/
begin
touchpad_check_endpoint_52_53 = memory_controller_out_a[31:0];
end
end
always @(posedge clk) begin
/* touchpad_check_endpoint: %52*/
/*   %53 = load i32* %42, align 4, !tbaa !4*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_52_99))
begin
touchpad_check_endpoint_52_53_reg <= touchpad_check_endpoint_52_53;
if (reset == 1'b0 && ^(touchpad_check_endpoint_52_53) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to touchpad_check_endpoint_52_53_reg"); $finish; end
end
end
always @(*) begin
/* touchpad_check_endpoint: %52*/
/*   %54 = getelementptr inbounds %struct.ad714x_touchpad_drv* %8, i32 %idx, i32 3*/
begin
touchpad_check_endpoint_52_54 = (touchpad_check_endpoint_0_8_reg + ((32 * arg_idx) + 12));
end
end
always @(posedge clk) begin
/* touchpad_check_endpoint: %52*/
/*   %54 = getelementptr inbounds %struct.ad714x_touchpad_drv* %8, i32 %idx, i32 3*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_52_96))
begin
touchpad_check_endpoint_52_54_reg <= touchpad_check_endpoint_52_54;
if (reset == 1'b0 && ^(touchpad_check_endpoint_52_54) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to touchpad_check_endpoint_52_54_reg"); $finish; end
end
end
always @(*) begin
/* touchpad_check_endpoint: %56*/
/*   %57 = getelementptr inbounds %struct.ad714x_touchpad_drv* %8, i32 %idx, i32 3*/
begin
touchpad_check_endpoint_56_57 = (touchpad_check_endpoint_0_8_reg + ((32 * arg_idx) + 12));
end
end
always @(posedge clk) begin
/* touchpad_check_endpoint: %56*/
/*   %57 = getelementptr inbounds %struct.ad714x_touchpad_drv* %8, i32 %idx, i32 3*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_56_102))
begin
touchpad_check_endpoint_56_57_reg <= touchpad_check_endpoint_56_57;
if (reset == 1'b0 && ^(touchpad_check_endpoint_56_57) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to touchpad_check_endpoint_56_57_reg"); $finish; end
end
end
always @(*) begin
/* touchpad_check_endpoint: %56*/
/*   %58 = load i32* %57, align 4, !tbaa !4*/
begin
touchpad_check_endpoint_56_58 = memory_controller_out_b[31:0];
end
end
always @(posedge clk) begin
/* touchpad_check_endpoint: %56*/
/*   %58 = load i32* %57, align 4, !tbaa !4*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_56_104))
begin
touchpad_check_endpoint_56_58_reg <= touchpad_check_endpoint_56_58;
if (reset == 1'b0 && ^(touchpad_check_endpoint_56_58) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to touchpad_check_endpoint_56_58_reg"); $finish; end
end
end
always @(*) begin
/* touchpad_check_endpoint: %56*/
/*   %59 = icmp sgt i32 %43, %58*/
begin
touchpad_check_endpoint_56_59 = ($signed(touchpad_check_endpoint_35_43_reg) > $signed(touchpad_check_endpoint_56_58));
end
end
always @(posedge clk) begin
/* touchpad_check_endpoint: %56*/
/*   %59 = icmp sgt i32 %43, %58*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_56_104))
begin
touchpad_check_endpoint_56_59_reg <= touchpad_check_endpoint_56_59;
if (reset == 1'b0 && ^(touchpad_check_endpoint_56_59) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to touchpad_check_endpoint_56_59_reg"); $finish; end
end
end
always @(*) begin
/* touchpad_check_endpoint: %61*/
/*   %62 = phi i32 [ 0, %51 ], [ %48, %55 ], [ %48, %56 ], [ 0, %60 ], [ 1, %52 ]*/
if ((((cur_state == LEGUP_F_touchpad_check_endpoint_BB_51_95) & (memory_controller_waitrequest == 1'd0)) & (touchpad_check_endpoint_35_50_reg == 1'd1)))
begin
touchpad_check_endpoint_61_62 = 32'd0;
end
/* touchpad_check_endpoint: %61*/
/*   %62 = phi i32 [ 0, %51 ], [ %48, %55 ], [ %48, %56 ], [ 0, %60 ], [ 1, %52 ]*/
else if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_52_100) & (memory_controller_waitrequest == 1'd0)))
begin
touchpad_check_endpoint_61_62 = 32'd1;
end
/* touchpad_check_endpoint: %61*/
/*   %62 = phi i32 [ 0, %51 ], [ %48, %55 ], [ %48, %56 ], [ 0, %60 ], [ 1, %52 ]*/
else if ((((cur_state == LEGUP_F_touchpad_check_endpoint_BB_55_101) & (memory_controller_waitrequest == 1'd0)) & (touchpad_check_endpoint_35_50_reg == 1'd0)))
begin
touchpad_check_endpoint_61_62 = touchpad_check_endpoint_35_48_reg;
end
/* touchpad_check_endpoint: %61*/
/*   %62 = phi i32 [ 0, %51 ], [ %48, %55 ], [ %48, %56 ], [ 0, %60 ], [ 1, %52 ]*/
else if ((((cur_state == LEGUP_F_touchpad_check_endpoint_BB_56_104) & (memory_controller_waitrequest == 1'd0)) & (touchpad_check_endpoint_56_59 == 1'd0)))
begin
touchpad_check_endpoint_61_62 = touchpad_check_endpoint_35_48_reg;
end
/* touchpad_check_endpoint: %61*/
/*   %62 = phi i32 [ 0, %51 ], [ %48, %55 ], [ %48, %56 ], [ 0, %60 ], [ 1, %52 ]*/
else /* if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_60_106) & (memory_controller_waitrequest == 1'd0))) */
begin
touchpad_check_endpoint_61_62 = 32'd0;
end
end
always @(posedge clk) begin
/* touchpad_check_endpoint: %61*/
/*   %62 = phi i32 [ 0, %51 ], [ %48, %55 ], [ %48, %56 ], [ 0, %60 ], [ 1, %52 ]*/
if ((((cur_state == LEGUP_F_touchpad_check_endpoint_BB_51_95) & (memory_controller_waitrequest == 1'd0)) & (touchpad_check_endpoint_35_50_reg == 1'd1)))
begin
touchpad_check_endpoint_61_62_reg <= touchpad_check_endpoint_61_62;
if (reset == 1'b0 && ^(touchpad_check_endpoint_61_62) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to touchpad_check_endpoint_61_62_reg"); $finish; end
end
/* touchpad_check_endpoint: %61*/
/*   %62 = phi i32 [ 0, %51 ], [ %48, %55 ], [ %48, %56 ], [ 0, %60 ], [ 1, %52 ]*/
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_52_100) & (memory_controller_waitrequest == 1'd0)))
begin
touchpad_check_endpoint_61_62_reg <= touchpad_check_endpoint_61_62;
if (reset == 1'b0 && ^(touchpad_check_endpoint_61_62) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to touchpad_check_endpoint_61_62_reg"); $finish; end
end
/* touchpad_check_endpoint: %61*/
/*   %62 = phi i32 [ 0, %51 ], [ %48, %55 ], [ %48, %56 ], [ 0, %60 ], [ 1, %52 ]*/
if ((((cur_state == LEGUP_F_touchpad_check_endpoint_BB_55_101) & (memory_controller_waitrequest == 1'd0)) & (touchpad_check_endpoint_35_50_reg == 1'd0)))
begin
touchpad_check_endpoint_61_62_reg <= touchpad_check_endpoint_61_62;
if (reset == 1'b0 && ^(touchpad_check_endpoint_61_62) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to touchpad_check_endpoint_61_62_reg"); $finish; end
end
/* touchpad_check_endpoint: %61*/
/*   %62 = phi i32 [ 0, %51 ], [ %48, %55 ], [ %48, %56 ], [ 0, %60 ], [ 1, %52 ]*/
if ((((cur_state == LEGUP_F_touchpad_check_endpoint_BB_56_104) & (memory_controller_waitrequest == 1'd0)) & (touchpad_check_endpoint_56_59 == 1'd0)))
begin
touchpad_check_endpoint_61_62_reg <= touchpad_check_endpoint_61_62;
if (reset == 1'b0 && ^(touchpad_check_endpoint_61_62) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to touchpad_check_endpoint_61_62_reg"); $finish; end
end
/* touchpad_check_endpoint: %61*/
/*   %62 = phi i32 [ 0, %51 ], [ %48, %55 ], [ %48, %56 ], [ 0, %60 ], [ 1, %52 ]*/
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_60_106) & (memory_controller_waitrequest == 1'd0)))
begin
touchpad_check_endpoint_61_62_reg <= touchpad_check_endpoint_61_62;
if (reset == 1'b0 && ^(touchpad_check_endpoint_61_62) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to touchpad_check_endpoint_61_62_reg"); $finish; end
end
end
always @(*) begin
/* touchpad_check_endpoint: %61*/
/*   %63 = getelementptr inbounds %struct.ad714x_touchpad_plat* %4, i32 %idx, i32 2*/
begin
touchpad_check_endpoint_61_63 = (touchpad_check_endpoint_0_4_reg + ((16 * arg_idx) + 8));
end
end
always @(posedge clk) begin
/* touchpad_check_endpoint: %61*/
/*   %63 = getelementptr inbounds %struct.ad714x_touchpad_plat* %4, i32 %idx, i32 2*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_61_107))
begin
touchpad_check_endpoint_61_63_reg <= touchpad_check_endpoint_61_63;
if (reset == 1'b0 && ^(touchpad_check_endpoint_61_63) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to touchpad_check_endpoint_61_63_reg"); $finish; end
end
end
always @(*) begin
/* touchpad_check_endpoint: %61*/
/*   %64 = load i32* %63, align 4, !tbaa !3*/
begin
touchpad_check_endpoint_61_64 = memory_controller_out_b[31:0];
end
end
always @(posedge clk) begin
/* touchpad_check_endpoint: %61*/
/*   %64 = load i32* %63, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_61_109))
begin
touchpad_check_endpoint_61_64_reg <= touchpad_check_endpoint_61_64;
if (reset == 1'b0 && ^(touchpad_check_endpoint_61_64) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to touchpad_check_endpoint_61_64_reg"); $finish; end
end
end
always @(*) begin
/* touchpad_check_endpoint: %61*/
/*   %65 = getelementptr inbounds i32* %12, i32 %64*/
begin
touchpad_check_endpoint_61_65 = (touchpad_check_endpoint_0_12_reg + (4 * touchpad_check_endpoint_61_64));
end
end
always @(posedge clk) begin
/* touchpad_check_endpoint: %61*/
/*   %65 = getelementptr inbounds i32* %12, i32 %64*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_61_109))
begin
touchpad_check_endpoint_61_65_reg <= touchpad_check_endpoint_61_65;
if (reset == 1'b0 && ^(touchpad_check_endpoint_61_65) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to touchpad_check_endpoint_61_65_reg"); $finish; end
end
end
always @(*) begin
/* touchpad_check_endpoint: %61*/
/*   %66 = load i32* %65, align 4, !tbaa !4*/
begin
touchpad_check_endpoint_61_66 = memory_controller_out_a[31:0];
end
end
always @(posedge clk) begin
/* touchpad_check_endpoint: %61*/
/*   %66 = load i32* %65, align 4, !tbaa !4*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_61_111))
begin
touchpad_check_endpoint_61_66_reg <= touchpad_check_endpoint_61_66;
if (reset == 1'b0 && ^(touchpad_check_endpoint_61_66) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to touchpad_check_endpoint_61_66_reg"); $finish; end
end
end
always @(*) begin
/* touchpad_check_endpoint: %61*/
/*   %67 = add i32 %64, 1*/
begin
touchpad_check_endpoint_61_67 = (touchpad_check_endpoint_61_64 + 32'd1);
end
end
always @(posedge clk) begin
/* touchpad_check_endpoint: %61*/
/*   %67 = add i32 %64, 1*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_61_109))
begin
touchpad_check_endpoint_61_67_reg <= touchpad_check_endpoint_61_67;
if (reset == 1'b0 && ^(touchpad_check_endpoint_61_67) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to touchpad_check_endpoint_61_67_reg"); $finish; end
end
end
always @(*) begin
/* touchpad_check_endpoint: %61*/
/*   %68 = getelementptr inbounds i32* %12, i32 %67*/
begin
touchpad_check_endpoint_61_68 = (touchpad_check_endpoint_0_12_reg + (4 * touchpad_check_endpoint_61_67_reg));
end
end
always @(posedge clk) begin
/* touchpad_check_endpoint: %61*/
/*   %68 = getelementptr inbounds i32* %12, i32 %67*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_61_110))
begin
touchpad_check_endpoint_61_68_reg <= touchpad_check_endpoint_61_68;
if (reset == 1'b0 && ^(touchpad_check_endpoint_61_68) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to touchpad_check_endpoint_61_68_reg"); $finish; end
end
end
always @(*) begin
/* touchpad_check_endpoint: %61*/
/*   %69 = load i32* %68, align 4, !tbaa !4*/
begin
touchpad_check_endpoint_61_69 = memory_controller_out_a[31:0];
end
end
always @(posedge clk) begin
/* touchpad_check_endpoint: %61*/
/*   %69 = load i32* %68, align 4, !tbaa !4*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_61_112))
begin
touchpad_check_endpoint_61_69_reg <= touchpad_check_endpoint_61_69;
if (reset == 1'b0 && ^(touchpad_check_endpoint_61_69) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to touchpad_check_endpoint_61_69_reg"); $finish; end
end
end
always @(*) begin
/* touchpad_check_endpoint: %61*/
/*   %70 = sub nsw i32 %66, %69*/
begin
touchpad_check_endpoint_61_70 = (touchpad_check_endpoint_61_66_reg - touchpad_check_endpoint_61_69);
end
end
always @(posedge clk) begin
/* touchpad_check_endpoint: %61*/
/*   %70 = sub nsw i32 %66, %69*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_61_112))
begin
touchpad_check_endpoint_61_70_reg <= touchpad_check_endpoint_61_70;
if (reset == 1'b0 && ^(touchpad_check_endpoint_61_70) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to touchpad_check_endpoint_61_70_reg"); $finish; end
end
end
always @(*) begin
touchpad_check_endpoint_61_71 = touchpad_check_endpoint_61_71_stage0_reg;
end
always @(posedge clk) begin
/* touchpad_check_endpoint: %61*/
/*   %71 = mul nsw i32 %70, 100*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_61_113))
begin
touchpad_check_endpoint_61_71_reg <= touchpad_check_endpoint_61_71;
if (reset == 1'b0 && ^(touchpad_check_endpoint_61_71) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to touchpad_check_endpoint_61_71_reg"); $finish; end
end
/* touchpad_check_endpoint: %61*/
/*   %71 = mul nsw i32 %70, 100*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_61_113))
begin
touchpad_check_endpoint_61_71_reg <= touchpad_check_endpoint_61_71;
if (reset == 1'b0 && ^(touchpad_check_endpoint_61_71) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to touchpad_check_endpoint_61_71_reg"); $finish; end
end
end
always @(*) begin
touchpad_check_endpoint_61_72 = touchpad_check_endpoint_signed_divide_32_0;
end
always @(*) begin
/* touchpad_check_endpoint: %61*/
/*   %72 = sdiv i32 %71, %69*/
touchpad_check_endpoint_61_72_reg = touchpad_check_endpoint_0_20_reg;
end
always @(*) begin
/* touchpad_check_endpoint: %61*/
/*   %73 = getelementptr inbounds %struct.ad714x_touchpad_drv* %8, i32 %idx, i32 4*/
begin
touchpad_check_endpoint_61_73 = (touchpad_check_endpoint_0_8_reg + ((32 * arg_idx) + 16));
end
end
always @(posedge clk) begin
/* touchpad_check_endpoint: %61*/
/*   %73 = getelementptr inbounds %struct.ad714x_touchpad_drv* %8, i32 %idx, i32 4*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_61_107))
begin
touchpad_check_endpoint_61_73_reg <= touchpad_check_endpoint_61_73;
if (reset == 1'b0 && ^(touchpad_check_endpoint_61_73) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to touchpad_check_endpoint_61_73_reg"); $finish; end
end
end
always @(*) begin
/* touchpad_check_endpoint: %61*/
/*   %74 = load i32* %73, align 4, !tbaa !4*/
begin
touchpad_check_endpoint_61_74 = memory_controller_out_b[31:0];
end
end
always @(posedge clk) begin
/* touchpad_check_endpoint: %61*/
/*   %74 = load i32* %73, align 4, !tbaa !4*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_61_112))
begin
touchpad_check_endpoint_61_74_reg <= touchpad_check_endpoint_61_74;
if (reset == 1'b0 && ^(touchpad_check_endpoint_61_74) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to touchpad_check_endpoint_61_74_reg"); $finish; end
end
end
always @(*) begin
/* touchpad_check_endpoint: %61*/
/*   %75 = icmp eq i32 %74, 0*/
begin
touchpad_check_endpoint_61_75 = (touchpad_check_endpoint_61_74 == 32'd0);
end
end
always @(posedge clk) begin
/* touchpad_check_endpoint: %61*/
/*   %75 = icmp eq i32 %74, 0*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_61_112))
begin
touchpad_check_endpoint_61_75_reg <= touchpad_check_endpoint_61_75;
if (reset == 1'b0 && ^(touchpad_check_endpoint_61_75) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to touchpad_check_endpoint_61_75_reg"); $finish; end
end
end
always @(*) begin
/* touchpad_check_endpoint: %61*/
/*   %76 = icmp slt i32 %72, 0*/
begin
touchpad_check_endpoint_61_76 = ($signed(touchpad_check_endpoint_61_72) < $signed(32'd0));
end
end
always @(posedge clk) begin
/* touchpad_check_endpoint: %61*/
/*   %76 = icmp slt i32 %72, 0*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_61_145))
begin
touchpad_check_endpoint_61_76_reg <= touchpad_check_endpoint_61_76;
if (reset == 1'b0 && ^(touchpad_check_endpoint_61_76) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to touchpad_check_endpoint_61_76_reg"); $finish; end
end
end
always @(*) begin
/* touchpad_check_endpoint: %78*/
/*   %79 = load i32* %68, align 4, !tbaa !4*/
begin
touchpad_check_endpoint_78_79 = memory_controller_out_a[31:0];
end
end
always @(posedge clk) begin
/* touchpad_check_endpoint: %78*/
/*   %79 = load i32* %68, align 4, !tbaa !4*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_78_150))
begin
touchpad_check_endpoint_78_79_reg <= touchpad_check_endpoint_78_79;
if (reset == 1'b0 && ^(touchpad_check_endpoint_78_79) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to touchpad_check_endpoint_78_79_reg"); $finish; end
end
end
always @(*) begin
/* touchpad_check_endpoint: %78*/
/*   %80 = getelementptr inbounds %struct.ad714x_touchpad_drv* %8, i32 %idx, i32 5*/
begin
touchpad_check_endpoint_78_80 = (touchpad_check_endpoint_0_8_reg + ((32 * arg_idx) + 20));
end
end
always @(posedge clk) begin
/* touchpad_check_endpoint: %78*/
/*   %80 = getelementptr inbounds %struct.ad714x_touchpad_drv* %8, i32 %idx, i32 5*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_78_147))
begin
touchpad_check_endpoint_78_80_reg <= touchpad_check_endpoint_78_80;
if (reset == 1'b0 && ^(touchpad_check_endpoint_78_80) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to touchpad_check_endpoint_78_80_reg"); $finish; end
end
end
always @(*) begin
/* touchpad_check_endpoint: %82*/
/*   %83 = getelementptr inbounds %struct.ad714x_touchpad_drv* %8, i32 %idx, i32 5*/
begin
touchpad_check_endpoint_82_83 = (touchpad_check_endpoint_0_8_reg + ((32 * arg_idx) + 20));
end
end
always @(posedge clk) begin
/* touchpad_check_endpoint: %82*/
/*   %83 = getelementptr inbounds %struct.ad714x_touchpad_drv* %8, i32 %idx, i32 5*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_82_153))
begin
touchpad_check_endpoint_82_83_reg <= touchpad_check_endpoint_82_83;
if (reset == 1'b0 && ^(touchpad_check_endpoint_82_83) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to touchpad_check_endpoint_82_83_reg"); $finish; end
end
end
always @(*) begin
/* touchpad_check_endpoint: %82*/
/*   %84 = load i32* %83, align 4, !tbaa !4*/
begin
touchpad_check_endpoint_82_84 = memory_controller_out_a[31:0];
end
end
always @(posedge clk) begin
/* touchpad_check_endpoint: %82*/
/*   %84 = load i32* %83, align 4, !tbaa !4*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_82_155))
begin
touchpad_check_endpoint_82_84_reg <= touchpad_check_endpoint_82_84;
if (reset == 1'b0 && ^(touchpad_check_endpoint_82_84) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to touchpad_check_endpoint_82_84_reg"); $finish; end
end
end
always @(*) begin
/* touchpad_check_endpoint: %82*/
/*   %85 = icmp sgt i32 %69, %84*/
begin
touchpad_check_endpoint_82_85 = ($signed(touchpad_check_endpoint_61_69_reg) > $signed(touchpad_check_endpoint_82_84));
end
end
always @(posedge clk) begin
/* touchpad_check_endpoint: %82*/
/*   %85 = icmp sgt i32 %69, %84*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_82_155))
begin
touchpad_check_endpoint_82_85_reg <= touchpad_check_endpoint_82_85;
if (reset == 1'b0 && ^(touchpad_check_endpoint_82_85) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to touchpad_check_endpoint_82_85_reg"); $finish; end
end
end
always @(*) begin
/* touchpad_check_endpoint: %87*/
/*   %88 = phi i32 [ 0, %77 ], [ %74, %81 ], [ %74, %82 ], [ 0, %86 ], [ 1, %78 ]*/
if ((((cur_state == LEGUP_F_touchpad_check_endpoint_BB_77_146) & (memory_controller_waitrequest == 1'd0)) & (touchpad_check_endpoint_61_76_reg == 1'd1)))
begin
touchpad_check_endpoint_87_88 = 32'd0;
end
/* touchpad_check_endpoint: %87*/
/*   %88 = phi i32 [ 0, %77 ], [ %74, %81 ], [ %74, %82 ], [ 0, %86 ], [ 1, %78 ]*/
else if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_78_151) & (memory_controller_waitrequest == 1'd0)))
begin
touchpad_check_endpoint_87_88 = 32'd1;
end
/* touchpad_check_endpoint: %87*/
/*   %88 = phi i32 [ 0, %77 ], [ %74, %81 ], [ %74, %82 ], [ 0, %86 ], [ 1, %78 ]*/
else if ((((cur_state == LEGUP_F_touchpad_check_endpoint_BB_81_152) & (memory_controller_waitrequest == 1'd0)) & (touchpad_check_endpoint_61_76_reg == 1'd0)))
begin
touchpad_check_endpoint_87_88 = touchpad_check_endpoint_61_74_reg;
end
/* touchpad_check_endpoint: %87*/
/*   %88 = phi i32 [ 0, %77 ], [ %74, %81 ], [ %74, %82 ], [ 0, %86 ], [ 1, %78 ]*/
else if ((((cur_state == LEGUP_F_touchpad_check_endpoint_BB_82_155) & (memory_controller_waitrequest == 1'd0)) & (touchpad_check_endpoint_82_85 == 1'd0)))
begin
touchpad_check_endpoint_87_88 = touchpad_check_endpoint_61_74_reg;
end
/* touchpad_check_endpoint: %87*/
/*   %88 = phi i32 [ 0, %77 ], [ %74, %81 ], [ %74, %82 ], [ 0, %86 ], [ 1, %78 ]*/
else /* if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_86_157) & (memory_controller_waitrequest == 1'd0))) */
begin
touchpad_check_endpoint_87_88 = 32'd0;
end
end
always @(posedge clk) begin
/* touchpad_check_endpoint: %87*/
/*   %88 = phi i32 [ 0, %77 ], [ %74, %81 ], [ %74, %82 ], [ 0, %86 ], [ 1, %78 ]*/
if ((((cur_state == LEGUP_F_touchpad_check_endpoint_BB_77_146) & (memory_controller_waitrequest == 1'd0)) & (touchpad_check_endpoint_61_76_reg == 1'd1)))
begin
touchpad_check_endpoint_87_88_reg <= touchpad_check_endpoint_87_88;
if (reset == 1'b0 && ^(touchpad_check_endpoint_87_88) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to touchpad_check_endpoint_87_88_reg"); $finish; end
end
/* touchpad_check_endpoint: %87*/
/*   %88 = phi i32 [ 0, %77 ], [ %74, %81 ], [ %74, %82 ], [ 0, %86 ], [ 1, %78 ]*/
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_78_151) & (memory_controller_waitrequest == 1'd0)))
begin
touchpad_check_endpoint_87_88_reg <= touchpad_check_endpoint_87_88;
if (reset == 1'b0 && ^(touchpad_check_endpoint_87_88) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to touchpad_check_endpoint_87_88_reg"); $finish; end
end
/* touchpad_check_endpoint: %87*/
/*   %88 = phi i32 [ 0, %77 ], [ %74, %81 ], [ %74, %82 ], [ 0, %86 ], [ 1, %78 ]*/
if ((((cur_state == LEGUP_F_touchpad_check_endpoint_BB_81_152) & (memory_controller_waitrequest == 1'd0)) & (touchpad_check_endpoint_61_76_reg == 1'd0)))
begin
touchpad_check_endpoint_87_88_reg <= touchpad_check_endpoint_87_88;
if (reset == 1'b0 && ^(touchpad_check_endpoint_87_88) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to touchpad_check_endpoint_87_88_reg"); $finish; end
end
/* touchpad_check_endpoint: %87*/
/*   %88 = phi i32 [ 0, %77 ], [ %74, %81 ], [ %74, %82 ], [ 0, %86 ], [ 1, %78 ]*/
if ((((cur_state == LEGUP_F_touchpad_check_endpoint_BB_82_155) & (memory_controller_waitrequest == 1'd0)) & (touchpad_check_endpoint_82_85 == 1'd0)))
begin
touchpad_check_endpoint_87_88_reg <= touchpad_check_endpoint_87_88;
if (reset == 1'b0 && ^(touchpad_check_endpoint_87_88) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to touchpad_check_endpoint_87_88_reg"); $finish; end
end
/* touchpad_check_endpoint: %87*/
/*   %88 = phi i32 [ 0, %77 ], [ %74, %81 ], [ %74, %82 ], [ 0, %86 ], [ 1, %78 ]*/
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_86_157) & (memory_controller_waitrequest == 1'd0)))
begin
touchpad_check_endpoint_87_88_reg <= touchpad_check_endpoint_87_88;
if (reset == 1'b0 && ^(touchpad_check_endpoint_87_88) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to touchpad_check_endpoint_87_88_reg"); $finish; end
end
end
always @(*) begin
/* touchpad_check_endpoint: %87*/
/*   %89 = getelementptr inbounds %struct.ad714x_touchpad_plat* %4, i32 %idx, i32 3*/
begin
touchpad_check_endpoint_87_89 = (touchpad_check_endpoint_0_4_reg + ((16 * arg_idx) + 12));
end
end
always @(posedge clk) begin
/* touchpad_check_endpoint: %87*/
/*   %89 = getelementptr inbounds %struct.ad714x_touchpad_plat* %4, i32 %idx, i32 3*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_87_158))
begin
touchpad_check_endpoint_87_89_reg <= touchpad_check_endpoint_87_89;
if (reset == 1'b0 && ^(touchpad_check_endpoint_87_89) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to touchpad_check_endpoint_87_89_reg"); $finish; end
end
end
always @(*) begin
/* touchpad_check_endpoint: %87*/
/*   %90 = load i32* %89, align 4, !tbaa !3*/
begin
touchpad_check_endpoint_87_90 = memory_controller_out_a[31:0];
end
end
always @(posedge clk) begin
/* touchpad_check_endpoint: %87*/
/*   %90 = load i32* %89, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_87_160))
begin
touchpad_check_endpoint_87_90_reg <= touchpad_check_endpoint_87_90;
if (reset == 1'b0 && ^(touchpad_check_endpoint_87_90) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to touchpad_check_endpoint_87_90_reg"); $finish; end
end
end
always @(*) begin
/* touchpad_check_endpoint: %87*/
/*   %91 = getelementptr inbounds i32* %12, i32 %90*/
begin
touchpad_check_endpoint_87_91 = (touchpad_check_endpoint_0_12_reg + (4 * touchpad_check_endpoint_87_90));
end
end
always @(posedge clk) begin
/* touchpad_check_endpoint: %87*/
/*   %91 = getelementptr inbounds i32* %12, i32 %90*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_87_160))
begin
touchpad_check_endpoint_87_91_reg <= touchpad_check_endpoint_87_91;
if (reset == 1'b0 && ^(touchpad_check_endpoint_87_91) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to touchpad_check_endpoint_87_91_reg"); $finish; end
end
end
always @(*) begin
/* touchpad_check_endpoint: %87*/
/*   %92 = load i32* %91, align 4, !tbaa !4*/
begin
touchpad_check_endpoint_87_92 = memory_controller_out_b[31:0];
end
end
always @(posedge clk) begin
/* touchpad_check_endpoint: %87*/
/*   %92 = load i32* %91, align 4, !tbaa !4*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_87_162))
begin
touchpad_check_endpoint_87_92_reg <= touchpad_check_endpoint_87_92;
if (reset == 1'b0 && ^(touchpad_check_endpoint_87_92) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to touchpad_check_endpoint_87_92_reg"); $finish; end
end
end
always @(*) begin
/* touchpad_check_endpoint: %87*/
/*   %93 = add i32 %90, -1*/
begin
touchpad_check_endpoint_87_93 = (touchpad_check_endpoint_87_90 + -32'd1);
end
end
always @(posedge clk) begin
/* touchpad_check_endpoint: %87*/
/*   %93 = add i32 %90, -1*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_87_160))
begin
touchpad_check_endpoint_87_93_reg <= touchpad_check_endpoint_87_93;
if (reset == 1'b0 && ^(touchpad_check_endpoint_87_93) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to touchpad_check_endpoint_87_93_reg"); $finish; end
end
end
always @(*) begin
/* touchpad_check_endpoint: %87*/
/*   %94 = getelementptr inbounds i32* %12, i32 %93*/
begin
touchpad_check_endpoint_87_94 = (touchpad_check_endpoint_0_12_reg + (4 * touchpad_check_endpoint_87_93_reg));
end
end
always @(posedge clk) begin
/* touchpad_check_endpoint: %87*/
/*   %94 = getelementptr inbounds i32* %12, i32 %93*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_87_161))
begin
touchpad_check_endpoint_87_94_reg <= touchpad_check_endpoint_87_94;
if (reset == 1'b0 && ^(touchpad_check_endpoint_87_94) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to touchpad_check_endpoint_87_94_reg"); $finish; end
end
end
always @(*) begin
/* touchpad_check_endpoint: %87*/
/*   %95 = load i32* %94, align 4, !tbaa !4*/
begin
touchpad_check_endpoint_87_95 = memory_controller_out_a[31:0];
end
end
always @(posedge clk) begin
/* touchpad_check_endpoint: %87*/
/*   %95 = load i32* %94, align 4, !tbaa !4*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_87_163))
begin
touchpad_check_endpoint_87_95_reg <= touchpad_check_endpoint_87_95;
if (reset == 1'b0 && ^(touchpad_check_endpoint_87_95) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to touchpad_check_endpoint_87_95_reg"); $finish; end
end
end
always @(*) begin
/* touchpad_check_endpoint: %87*/
/*   %96 = sub nsw i32 %92, %95*/
begin
touchpad_check_endpoint_87_96 = (touchpad_check_endpoint_87_92_reg - touchpad_check_endpoint_87_95);
end
end
always @(posedge clk) begin
/* touchpad_check_endpoint: %87*/
/*   %96 = sub nsw i32 %92, %95*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_87_163))
begin
touchpad_check_endpoint_87_96_reg <= touchpad_check_endpoint_87_96;
if (reset == 1'b0 && ^(touchpad_check_endpoint_87_96) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to touchpad_check_endpoint_87_96_reg"); $finish; end
end
end
always @(*) begin
touchpad_check_endpoint_87_97 = touchpad_check_endpoint_87_97_stage0_reg;
end
always @(posedge clk) begin
/* touchpad_check_endpoint: %87*/
/*   %97 = mul nsw i32 %96, 100*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_87_164))
begin
touchpad_check_endpoint_87_97_reg <= touchpad_check_endpoint_87_97;
if (reset == 1'b0 && ^(touchpad_check_endpoint_87_97) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to touchpad_check_endpoint_87_97_reg"); $finish; end
end
/* touchpad_check_endpoint: %87*/
/*   %97 = mul nsw i32 %96, 100*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_87_164))
begin
touchpad_check_endpoint_87_97_reg <= touchpad_check_endpoint_87_97;
if (reset == 1'b0 && ^(touchpad_check_endpoint_87_97) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to touchpad_check_endpoint_87_97_reg"); $finish; end
end
end
always @(*) begin
touchpad_check_endpoint_87_98 = touchpad_check_endpoint_signed_divide_32_0;
end
always @(*) begin
/* touchpad_check_endpoint: %87*/
/*   %98 = sdiv i32 %97, %95*/
touchpad_check_endpoint_87_98_reg = touchpad_check_endpoint_0_20_reg;
end
always @(*) begin
/* touchpad_check_endpoint: %87*/
/*   %99 = getelementptr inbounds %struct.ad714x_touchpad_drv* %8, i32 %idx, i32 6*/
begin
touchpad_check_endpoint_87_99 = (touchpad_check_endpoint_0_8_reg + ((32 * arg_idx) + 24));
end
end
always @(posedge clk) begin
/* touchpad_check_endpoint: %87*/
/*   %99 = getelementptr inbounds %struct.ad714x_touchpad_drv* %8, i32 %idx, i32 6*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_87_158))
begin
touchpad_check_endpoint_87_99_reg <= touchpad_check_endpoint_87_99;
if (reset == 1'b0 && ^(touchpad_check_endpoint_87_99) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to touchpad_check_endpoint_87_99_reg"); $finish; end
end
end
always @(*) begin
/* touchpad_check_endpoint: %87*/
/*   %100 = load i32* %99, align 4, !tbaa !4*/
begin
touchpad_check_endpoint_87_100 = memory_controller_out_b[31:0];
end
end
always @(posedge clk) begin
/* touchpad_check_endpoint: %87*/
/*   %100 = load i32* %99, align 4, !tbaa !4*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_87_163))
begin
touchpad_check_endpoint_87_100_reg <= touchpad_check_endpoint_87_100;
if (reset == 1'b0 && ^(touchpad_check_endpoint_87_100) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to touchpad_check_endpoint_87_100_reg"); $finish; end
end
end
always @(*) begin
/* touchpad_check_endpoint: %87*/
/*   %101 = icmp eq i32 %100, 0*/
begin
touchpad_check_endpoint_87_101 = (touchpad_check_endpoint_87_100 == 32'd0);
end
end
always @(posedge clk) begin
/* touchpad_check_endpoint: %87*/
/*   %101 = icmp eq i32 %100, 0*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_87_163))
begin
touchpad_check_endpoint_87_101_reg <= touchpad_check_endpoint_87_101;
if (reset == 1'b0 && ^(touchpad_check_endpoint_87_101) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to touchpad_check_endpoint_87_101_reg"); $finish; end
end
end
always @(*) begin
/* touchpad_check_endpoint: %87*/
/*   %102 = icmp slt i32 %98, 0*/
begin
touchpad_check_endpoint_87_102 = ($signed(touchpad_check_endpoint_87_98) < $signed(32'd0));
end
end
always @(posedge clk) begin
/* touchpad_check_endpoint: %87*/
/*   %102 = icmp slt i32 %98, 0*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_87_196))
begin
touchpad_check_endpoint_87_102_reg <= touchpad_check_endpoint_87_102;
if (reset == 1'b0 && ^(touchpad_check_endpoint_87_102) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to touchpad_check_endpoint_87_102_reg"); $finish; end
end
end
always @(*) begin
/* touchpad_check_endpoint: %104*/
/*   %105 = load i32* %94, align 4, !tbaa !4*/
begin
touchpad_check_endpoint_104_105 = memory_controller_out_a[31:0];
end
end
always @(posedge clk) begin
/* touchpad_check_endpoint: %104*/
/*   %105 = load i32* %94, align 4, !tbaa !4*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_104_201))
begin
touchpad_check_endpoint_104_105_reg <= touchpad_check_endpoint_104_105;
if (reset == 1'b0 && ^(touchpad_check_endpoint_104_105) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to touchpad_check_endpoint_104_105_reg"); $finish; end
end
end
always @(*) begin
/* touchpad_check_endpoint: %104*/
/*   %106 = getelementptr inbounds %struct.ad714x_touchpad_drv* %8, i32 %idx, i32 7*/
begin
touchpad_check_endpoint_104_106 = (touchpad_check_endpoint_0_8_reg + ((32 * arg_idx) + 28));
end
end
always @(posedge clk) begin
/* touchpad_check_endpoint: %104*/
/*   %106 = getelementptr inbounds %struct.ad714x_touchpad_drv* %8, i32 %idx, i32 7*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_104_198))
begin
touchpad_check_endpoint_104_106_reg <= touchpad_check_endpoint_104_106;
if (reset == 1'b0 && ^(touchpad_check_endpoint_104_106) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to touchpad_check_endpoint_104_106_reg"); $finish; end
end
end
always @(*) begin
/* touchpad_check_endpoint: %108*/
/*   %109 = getelementptr inbounds %struct.ad714x_touchpad_drv* %8, i32 %idx, i32 7*/
begin
touchpad_check_endpoint_108_109 = (touchpad_check_endpoint_0_8_reg + ((32 * arg_idx) + 28));
end
end
always @(posedge clk) begin
/* touchpad_check_endpoint: %108*/
/*   %109 = getelementptr inbounds %struct.ad714x_touchpad_drv* %8, i32 %idx, i32 7*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_108_204))
begin
touchpad_check_endpoint_108_109_reg <= touchpad_check_endpoint_108_109;
if (reset == 1'b0 && ^(touchpad_check_endpoint_108_109) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to touchpad_check_endpoint_108_109_reg"); $finish; end
end
end
always @(*) begin
/* touchpad_check_endpoint: %108*/
/*   %110 = load i32* %109, align 4, !tbaa !4*/
begin
touchpad_check_endpoint_108_110 = memory_controller_out_b[31:0];
end
end
always @(posedge clk) begin
/* touchpad_check_endpoint: %108*/
/*   %110 = load i32* %109, align 4, !tbaa !4*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_108_206))
begin
touchpad_check_endpoint_108_110_reg <= touchpad_check_endpoint_108_110;
if (reset == 1'b0 && ^(touchpad_check_endpoint_108_110) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to touchpad_check_endpoint_108_110_reg"); $finish; end
end
end
always @(*) begin
/* touchpad_check_endpoint: %108*/
/*   %111 = icmp sgt i32 %95, %110*/
begin
touchpad_check_endpoint_108_111 = ($signed(touchpad_check_endpoint_87_95_reg) > $signed(touchpad_check_endpoint_108_110));
end
end
always @(posedge clk) begin
/* touchpad_check_endpoint: %108*/
/*   %111 = icmp sgt i32 %95, %110*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_108_206))
begin
touchpad_check_endpoint_108_111_reg <= touchpad_check_endpoint_108_111;
if (reset == 1'b0 && ^(touchpad_check_endpoint_108_111) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to touchpad_check_endpoint_108_111_reg"); $finish; end
end
end
always @(*) begin
/* touchpad_check_endpoint: %113*/
/*   %114 = phi i32 [ 0, %103 ], [ %100, %107 ], [ %100, %108 ], [ 0, %112 ], [ 1, %104 ]*/
if ((((cur_state == LEGUP_F_touchpad_check_endpoint_BB_103_197) & (memory_controller_waitrequest == 1'd0)) & (touchpad_check_endpoint_87_102_reg == 1'd1)))
begin
touchpad_check_endpoint_113_114 = 32'd0;
end
/* touchpad_check_endpoint: %113*/
/*   %114 = phi i32 [ 0, %103 ], [ %100, %107 ], [ %100, %108 ], [ 0, %112 ], [ 1, %104 ]*/
else if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_104_202) & (memory_controller_waitrequest == 1'd0)))
begin
touchpad_check_endpoint_113_114 = 32'd1;
end
/* touchpad_check_endpoint: %113*/
/*   %114 = phi i32 [ 0, %103 ], [ %100, %107 ], [ %100, %108 ], [ 0, %112 ], [ 1, %104 ]*/
else if ((((cur_state == LEGUP_F_touchpad_check_endpoint_BB_107_203) & (memory_controller_waitrequest == 1'd0)) & (touchpad_check_endpoint_87_102_reg == 1'd0)))
begin
touchpad_check_endpoint_113_114 = touchpad_check_endpoint_87_100_reg;
end
/* touchpad_check_endpoint: %113*/
/*   %114 = phi i32 [ 0, %103 ], [ %100, %107 ], [ %100, %108 ], [ 0, %112 ], [ 1, %104 ]*/
else if ((((cur_state == LEGUP_F_touchpad_check_endpoint_BB_108_206) & (memory_controller_waitrequest == 1'd0)) & (touchpad_check_endpoint_108_111 == 1'd0)))
begin
touchpad_check_endpoint_113_114 = touchpad_check_endpoint_87_100_reg;
end
/* touchpad_check_endpoint: %113*/
/*   %114 = phi i32 [ 0, %103 ], [ %100, %107 ], [ %100, %108 ], [ 0, %112 ], [ 1, %104 ]*/
else /* if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_112_208) & (memory_controller_waitrequest == 1'd0))) */
begin
touchpad_check_endpoint_113_114 = 32'd0;
end
end
always @(posedge clk) begin
/* touchpad_check_endpoint: %113*/
/*   %114 = phi i32 [ 0, %103 ], [ %100, %107 ], [ %100, %108 ], [ 0, %112 ], [ 1, %104 ]*/
if ((((cur_state == LEGUP_F_touchpad_check_endpoint_BB_103_197) & (memory_controller_waitrequest == 1'd0)) & (touchpad_check_endpoint_87_102_reg == 1'd1)))
begin
touchpad_check_endpoint_113_114_reg <= touchpad_check_endpoint_113_114;
if (reset == 1'b0 && ^(touchpad_check_endpoint_113_114) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to touchpad_check_endpoint_113_114_reg"); $finish; end
end
/* touchpad_check_endpoint: %113*/
/*   %114 = phi i32 [ 0, %103 ], [ %100, %107 ], [ %100, %108 ], [ 0, %112 ], [ 1, %104 ]*/
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_104_202) & (memory_controller_waitrequest == 1'd0)))
begin
touchpad_check_endpoint_113_114_reg <= touchpad_check_endpoint_113_114;
if (reset == 1'b0 && ^(touchpad_check_endpoint_113_114) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to touchpad_check_endpoint_113_114_reg"); $finish; end
end
/* touchpad_check_endpoint: %113*/
/*   %114 = phi i32 [ 0, %103 ], [ %100, %107 ], [ %100, %108 ], [ 0, %112 ], [ 1, %104 ]*/
if ((((cur_state == LEGUP_F_touchpad_check_endpoint_BB_107_203) & (memory_controller_waitrequest == 1'd0)) & (touchpad_check_endpoint_87_102_reg == 1'd0)))
begin
touchpad_check_endpoint_113_114_reg <= touchpad_check_endpoint_113_114;
if (reset == 1'b0 && ^(touchpad_check_endpoint_113_114) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to touchpad_check_endpoint_113_114_reg"); $finish; end
end
/* touchpad_check_endpoint: %113*/
/*   %114 = phi i32 [ 0, %103 ], [ %100, %107 ], [ %100, %108 ], [ 0, %112 ], [ 1, %104 ]*/
if ((((cur_state == LEGUP_F_touchpad_check_endpoint_BB_108_206) & (memory_controller_waitrequest == 1'd0)) & (touchpad_check_endpoint_108_111 == 1'd0)))
begin
touchpad_check_endpoint_113_114_reg <= touchpad_check_endpoint_113_114;
if (reset == 1'b0 && ^(touchpad_check_endpoint_113_114) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to touchpad_check_endpoint_113_114_reg"); $finish; end
end
/* touchpad_check_endpoint: %113*/
/*   %114 = phi i32 [ 0, %103 ], [ %100, %107 ], [ %100, %108 ], [ 0, %112 ], [ 1, %104 ]*/
if (((cur_state == LEGUP_F_touchpad_check_endpoint_BB_112_208) & (memory_controller_waitrequest == 1'd0)))
begin
touchpad_check_endpoint_113_114_reg <= touchpad_check_endpoint_113_114;
if (reset == 1'b0 && ^(touchpad_check_endpoint_113_114) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to touchpad_check_endpoint_113_114_reg"); $finish; end
end
end
always @(*) begin
/* touchpad_check_endpoint: %113*/
/*   %115 = or i32 %36, %62*/
begin
touchpad_check_endpoint_113_115 = (touchpad_check_endpoint_35_36_reg | touchpad_check_endpoint_61_62_reg);
end
end
always @(posedge clk) begin
/* touchpad_check_endpoint: %113*/
/*   %115 = or i32 %36, %62*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_113_209))
begin
touchpad_check_endpoint_113_115_reg <= touchpad_check_endpoint_113_115;
if (reset == 1'b0 && ^(touchpad_check_endpoint_113_115) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to touchpad_check_endpoint_113_115_reg"); $finish; end
end
end
always @(*) begin
/* touchpad_check_endpoint: %113*/
/*   %116 = or i32 %115, %88*/
begin
touchpad_check_endpoint_113_116 = (touchpad_check_endpoint_113_115 | touchpad_check_endpoint_87_88_reg);
end
end
always @(posedge clk) begin
/* touchpad_check_endpoint: %113*/
/*   %116 = or i32 %115, %88*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_113_209))
begin
touchpad_check_endpoint_113_116_reg <= touchpad_check_endpoint_113_116;
if (reset == 1'b0 && ^(touchpad_check_endpoint_113_116) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to touchpad_check_endpoint_113_116_reg"); $finish; end
end
end
always @(*) begin
/* touchpad_check_endpoint: %113*/
/*   %117 = or i32 %114, %116*/
begin
touchpad_check_endpoint_113_117 = (touchpad_check_endpoint_113_114_reg | touchpad_check_endpoint_113_116);
end
end
always @(posedge clk) begin
/* touchpad_check_endpoint: %113*/
/*   %117 = or i32 %114, %116*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_113_209))
begin
touchpad_check_endpoint_113_117_reg <= touchpad_check_endpoint_113_117;
if (reset == 1'b0 && ^(touchpad_check_endpoint_113_117) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to touchpad_check_endpoint_113_117_reg"); $finish; end
end
end
always @(*) begin
/* touchpad_check_endpoint: %113*/
/*   %118 = icmp ne i32 %117, 0*/
begin
touchpad_check_endpoint_113_118 = (touchpad_check_endpoint_113_117 != 32'd0);
end
end
always @(posedge clk) begin
/* touchpad_check_endpoint: %113*/
/*   %118 = icmp ne i32 %117, 0*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_113_209))
begin
touchpad_check_endpoint_113_118_reg <= touchpad_check_endpoint_113_118;
if (reset == 1'b0 && ^(touchpad_check_endpoint_113_118) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to touchpad_check_endpoint_113_118_reg"); $finish; end
end
end
always @(*) begin
/* touchpad_check_endpoint: %113*/
/*   %119 = zext i1 %118 to i32*/
begin
touchpad_check_endpoint_113_119 = touchpad_check_endpoint_113_118;
end
end
always @(posedge clk) begin
/* touchpad_check_endpoint: %113*/
/*   %119 = zext i1 %118 to i32*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_113_209))
begin
touchpad_check_endpoint_113_119_reg <= touchpad_check_endpoint_113_119;
if (reset == 1'b0 && ^(touchpad_check_endpoint_113_119) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to touchpad_check_endpoint_113_119_reg"); $finish; end
end
end
always @(*) begin
/* touchpad_check_endpoint: %0*/
/*   %20 = sdiv i32 %19, %17*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_0_11))
begin
touchpad_check_endpoint_signed_divide_32_0_op0 = touchpad_check_endpoint_0_19;
end
/* touchpad_check_endpoint: %35*/
/*   %46 = sdiv i32 %45, %43*/
else if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_35_62))
begin
touchpad_check_endpoint_signed_divide_32_0_op0 = touchpad_check_endpoint_35_45;
end
/* touchpad_check_endpoint: %61*/
/*   %72 = sdiv i32 %71, %69*/
else if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_61_113))
begin
touchpad_check_endpoint_signed_divide_32_0_op0 = touchpad_check_endpoint_61_71;
end
/* touchpad_check_endpoint: %87*/
/*   %98 = sdiv i32 %97, %95*/
else /* if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_87_164)) */
begin
touchpad_check_endpoint_signed_divide_32_0_op0 = touchpad_check_endpoint_87_97;
end
end
always @(*) begin
/* touchpad_check_endpoint: %0*/
/*   %20 = sdiv i32 %19, %17*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_0_11))
begin
touchpad_check_endpoint_signed_divide_32_0_op1 = touchpad_check_endpoint_0_17_reg;
end
/* touchpad_check_endpoint: %35*/
/*   %46 = sdiv i32 %45, %43*/
else if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_35_62))
begin
touchpad_check_endpoint_signed_divide_32_0_op1 = touchpad_check_endpoint_35_43_reg;
end
/* touchpad_check_endpoint: %61*/
/*   %72 = sdiv i32 %71, %69*/
else if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_61_113))
begin
touchpad_check_endpoint_signed_divide_32_0_op1 = touchpad_check_endpoint_61_69_reg;
end
/* touchpad_check_endpoint: %87*/
/*   %98 = sdiv i32 %97, %95*/
else /* if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_87_164)) */
begin
touchpad_check_endpoint_signed_divide_32_0_op1 = touchpad_check_endpoint_87_95_reg;
end
end
always @(*) begin
lpm_divide_touchpad_check_endpoint_0_20_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
lpm_divide_touchpad_check_endpoint_0_20_out = lpm_divide_touchpad_check_endpoint_0_20_temp_out;
end
always @(*) begin
touchpad_check_endpoint_signed_divide_32_0 = lpm_divide_touchpad_check_endpoint_0_20_out;
end
always @(*) begin
lpm_mult_touchpad_check_endpoint_0_19_en = (memory_controller_waitrequest == 1'd0);
end
always @(posedge clk) begin
/* touchpad_check_endpoint: %0*/
/*   %19 = mul nsw i32 %18, 100*/
if ((lpm_mult_touchpad_check_endpoint_0_19_en == 1'd1))
begin
touchpad_check_endpoint_0_19_stage0_reg <= (touchpad_check_endpoint_0_18 * 32'd100);
end
end
always @(*) begin
lpm_mult_touchpad_check_endpoint_35_45_en = (memory_controller_waitrequest == 1'd0);
end
always @(posedge clk) begin
/* touchpad_check_endpoint: %35*/
/*   %45 = mul nsw i32 %44, 100*/
if ((lpm_mult_touchpad_check_endpoint_35_45_en == 1'd1))
begin
touchpad_check_endpoint_35_45_stage0_reg <= (touchpad_check_endpoint_35_44 * 32'd100);
end
end
always @(*) begin
lpm_divide_touchpad_check_endpoint_35_46_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
lpm_mult_touchpad_check_endpoint_61_71_en = (memory_controller_waitrequest == 1'd0);
end
always @(posedge clk) begin
/* touchpad_check_endpoint: %61*/
/*   %71 = mul nsw i32 %70, 100*/
if ((lpm_mult_touchpad_check_endpoint_61_71_en == 1'd1))
begin
touchpad_check_endpoint_61_71_stage0_reg <= (touchpad_check_endpoint_61_70 * 32'd100);
end
end
always @(*) begin
lpm_divide_touchpad_check_endpoint_61_72_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
lpm_mult_touchpad_check_endpoint_87_97_en = (memory_controller_waitrequest == 1'd0);
end
always @(posedge clk) begin
/* touchpad_check_endpoint: %87*/
/*   %97 = mul nsw i32 %96, 100*/
if ((lpm_mult_touchpad_check_endpoint_87_97_en == 1'd1))
begin
touchpad_check_endpoint_87_97_stage0_reg <= (touchpad_check_endpoint_87_96 * 32'd100);
end
end
always @(*) begin
lpm_divide_touchpad_check_endpoint_87_98_en = (memory_controller_waitrequest == 1'd0);
end
always @(posedge clk) begin
if ((cur_state == LEGUP_0))
begin
finish <= 1'd0;
if (reset == 1'b0 && ^(1'd0) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to finish"); $finish; end
end
/* touchpad_check_endpoint: %113*/
/*   ret i32 %119*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_113_209))
begin
finish <= (memory_controller_waitrequest == 1'd0);
if (reset == 1'b0 && ^((memory_controller_waitrequest == 1'd0)) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to finish"); $finish; end
end
end
always @(*) begin
memory_controller_enable_a = 1'd0;
if ((cur_state == LEGUP_0))
begin
memory_controller_enable_a = 1'd0;
end
/* touchpad_check_endpoint: %0*/
/*   %2 = load %struct.TYPE_3__** %1, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_0_1))
begin
memory_controller_enable_a = 1'd1;
end
/* touchpad_check_endpoint: %0*/
/*   %12 = load i32** %11, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_0_4))
begin
memory_controller_enable_a = 1'd1;
end
/* touchpad_check_endpoint: %0*/
/*   %10 = load i32* %9, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_0_5))
begin
memory_controller_enable_a = 1'd1;
end
/* touchpad_check_endpoint: %0*/
/*   %6 = load %struct.TYPE_4__** %5, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_0_8))
begin
memory_controller_enable_a = 1'd1;
end
/* touchpad_check_endpoint: %0*/
/*   %22 = load i32* %21, align 4, !tbaa !4*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_0_12))
begin
memory_controller_enable_a = 1'd1;
end
/* touchpad_check_endpoint: %26*/
/*   store i32 1, i32* %21, align 4, !tbaa !4*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_26_45))
begin
memory_controller_enable_a = 1'd1;
end
/* touchpad_check_endpoint: %26*/
/*   store i32 %27, i32* %28, align 4, !tbaa !4*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_26_48))
begin
memory_controller_enable_a = 1'd1;
end
/* touchpad_check_endpoint: %30*/
/*   %32 = load i32* %31, align 4, !tbaa !4*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_30_51))
begin
memory_controller_enable_a = 1'd1;
end
/* touchpad_check_endpoint: %34*/
/*   store i32 0, i32* %21, align 4, !tbaa !4*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_34_54))
begin
memory_controller_enable_a = 1'd1;
end
/* touchpad_check_endpoint: %35*/
/*   %38 = load i32* %37, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_35_56))
begin
memory_controller_enable_a = 1'd1;
end
/* touchpad_check_endpoint: %35*/
/*   %43 = load i32* %42, align 4, !tbaa !4*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_35_59))
begin
memory_controller_enable_a = 1'd1;
end
/* touchpad_check_endpoint: %52*/
/*   %53 = load i32* %42, align 4, !tbaa !4*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_52_97))
begin
memory_controller_enable_a = 1'd1;
end
/* touchpad_check_endpoint: %61*/
/*   %66 = load i32* %65, align 4, !tbaa !4*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_61_109))
begin
memory_controller_enable_a = 1'd1;
end
/* touchpad_check_endpoint: %61*/
/*   %69 = load i32* %68, align 4, !tbaa !4*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_61_110))
begin
memory_controller_enable_a = 1'd1;
end
/* touchpad_check_endpoint: %78*/
/*   %79 = load i32* %68, align 4, !tbaa !4*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_78_148))
begin
memory_controller_enable_a = 1'd1;
end
/* touchpad_check_endpoint: %82*/
/*   %84 = load i32* %83, align 4, !tbaa !4*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_82_153))
begin
memory_controller_enable_a = 1'd1;
end
/* touchpad_check_endpoint: %87*/
/*   %90 = load i32* %89, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_87_158))
begin
memory_controller_enable_a = 1'd1;
end
/* touchpad_check_endpoint: %87*/
/*   %95 = load i32* %94, align 4, !tbaa !4*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_87_161))
begin
memory_controller_enable_a = 1'd1;
end
/* touchpad_check_endpoint: %104*/
/*   %105 = load i32* %94, align 4, !tbaa !4*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_104_199))
begin
memory_controller_enable_a = 1'd1;
end
/* touchpad_check_endpoint: %104*/
/*   store i32 %105, i32* %106, align 4, !tbaa !4*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_104_201))
begin
memory_controller_enable_a = 1'd1;
end
end
always @(*) begin
memory_controller_address_a = 1'd0;
if ((cur_state == LEGUP_0))
begin
memory_controller_address_a = 1'd0;
end
/* touchpad_check_endpoint: %0*/
/*   %2 = load %struct.TYPE_3__** %1, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_0_1))
begin
memory_controller_address_a = touchpad_check_endpoint_0_1;
end
/* touchpad_check_endpoint: %0*/
/*   %12 = load i32** %11, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_0_4))
begin
memory_controller_address_a = touchpad_check_endpoint_0_11_reg;
end
/* touchpad_check_endpoint: %0*/
/*   %10 = load i32* %9, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_0_5))
begin
memory_controller_address_a = touchpad_check_endpoint_0_9;
end
/* touchpad_check_endpoint: %0*/
/*   %6 = load %struct.TYPE_4__** %5, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_0_8))
begin
memory_controller_address_a = touchpad_check_endpoint_0_5_reg;
end
/* touchpad_check_endpoint: %0*/
/*   %22 = load i32* %21, align 4, !tbaa !4*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_0_12))
begin
memory_controller_address_a = touchpad_check_endpoint_0_21;
end
/* touchpad_check_endpoint: %26*/
/*   store i32 1, i32* %21, align 4, !tbaa !4*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_26_45))
begin
memory_controller_address_a = touchpad_check_endpoint_0_21_reg;
end
/* touchpad_check_endpoint: %26*/
/*   store i32 %27, i32* %28, align 4, !tbaa !4*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_26_48))
begin
memory_controller_address_a = touchpad_check_endpoint_26_28_reg;
end
/* touchpad_check_endpoint: %30*/
/*   %32 = load i32* %31, align 4, !tbaa !4*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_30_51))
begin
memory_controller_address_a = touchpad_check_endpoint_30_31;
end
/* touchpad_check_endpoint: %34*/
/*   store i32 0, i32* %21, align 4, !tbaa !4*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_34_54))
begin
memory_controller_address_a = touchpad_check_endpoint_0_21_reg;
end
/* touchpad_check_endpoint: %35*/
/*   %38 = load i32* %37, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_35_56))
begin
memory_controller_address_a = touchpad_check_endpoint_35_37;
end
/* touchpad_check_endpoint: %35*/
/*   %43 = load i32* %42, align 4, !tbaa !4*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_35_59))
begin
memory_controller_address_a = touchpad_check_endpoint_35_42;
end
/* touchpad_check_endpoint: %52*/
/*   %53 = load i32* %42, align 4, !tbaa !4*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_52_97))
begin
memory_controller_address_a = touchpad_check_endpoint_35_42_reg;
end
/* touchpad_check_endpoint: %61*/
/*   %66 = load i32* %65, align 4, !tbaa !4*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_61_109))
begin
memory_controller_address_a = touchpad_check_endpoint_61_65;
end
/* touchpad_check_endpoint: %61*/
/*   %69 = load i32* %68, align 4, !tbaa !4*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_61_110))
begin
memory_controller_address_a = touchpad_check_endpoint_61_68;
end
/* touchpad_check_endpoint: %78*/
/*   %79 = load i32* %68, align 4, !tbaa !4*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_78_148))
begin
memory_controller_address_a = touchpad_check_endpoint_61_68_reg;
end
/* touchpad_check_endpoint: %82*/
/*   %84 = load i32* %83, align 4, !tbaa !4*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_82_153))
begin
memory_controller_address_a = touchpad_check_endpoint_82_83;
end
/* touchpad_check_endpoint: %87*/
/*   %90 = load i32* %89, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_87_158))
begin
memory_controller_address_a = touchpad_check_endpoint_87_89;
end
/* touchpad_check_endpoint: %87*/
/*   %95 = load i32* %94, align 4, !tbaa !4*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_87_161))
begin
memory_controller_address_a = touchpad_check_endpoint_87_94;
end
/* touchpad_check_endpoint: %104*/
/*   %105 = load i32* %94, align 4, !tbaa !4*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_104_199))
begin
memory_controller_address_a = touchpad_check_endpoint_87_94_reg;
end
/* touchpad_check_endpoint: %104*/
/*   store i32 %105, i32* %106, align 4, !tbaa !4*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_104_201))
begin
memory_controller_address_a = touchpad_check_endpoint_104_106_reg;
end
end
always @(*) begin
memory_controller_write_enable_a = 1'd0;
if ((cur_state == LEGUP_0))
begin
memory_controller_write_enable_a = 1'd0;
end
/* touchpad_check_endpoint: %0*/
/*   %2 = load %struct.TYPE_3__** %1, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_0_1))
begin
memory_controller_write_enable_a = 1'd0;
end
/* touchpad_check_endpoint: %0*/
/*   %12 = load i32** %11, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_0_4))
begin
memory_controller_write_enable_a = 1'd0;
end
/* touchpad_check_endpoint: %0*/
/*   %10 = load i32* %9, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_0_5))
begin
memory_controller_write_enable_a = 1'd0;
end
/* touchpad_check_endpoint: %0*/
/*   %6 = load %struct.TYPE_4__** %5, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_0_8))
begin
memory_controller_write_enable_a = 1'd0;
end
/* touchpad_check_endpoint: %0*/
/*   %22 = load i32* %21, align 4, !tbaa !4*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_0_12))
begin
memory_controller_write_enable_a = 1'd0;
end
/* touchpad_check_endpoint: %26*/
/*   store i32 1, i32* %21, align 4, !tbaa !4*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_26_45))
begin
memory_controller_write_enable_a = 1'd1;
end
/* touchpad_check_endpoint: %26*/
/*   store i32 %27, i32* %28, align 4, !tbaa !4*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_26_48))
begin
memory_controller_write_enable_a = 1'd1;
end
/* touchpad_check_endpoint: %30*/
/*   %32 = load i32* %31, align 4, !tbaa !4*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_30_51))
begin
memory_controller_write_enable_a = 1'd0;
end
/* touchpad_check_endpoint: %34*/
/*   store i32 0, i32* %21, align 4, !tbaa !4*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_34_54))
begin
memory_controller_write_enable_a = 1'd1;
end
/* touchpad_check_endpoint: %35*/
/*   %38 = load i32* %37, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_35_56))
begin
memory_controller_write_enable_a = 1'd0;
end
/* touchpad_check_endpoint: %35*/
/*   %43 = load i32* %42, align 4, !tbaa !4*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_35_59))
begin
memory_controller_write_enable_a = 1'd0;
end
/* touchpad_check_endpoint: %52*/
/*   %53 = load i32* %42, align 4, !tbaa !4*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_52_97))
begin
memory_controller_write_enable_a = 1'd0;
end
/* touchpad_check_endpoint: %61*/
/*   %66 = load i32* %65, align 4, !tbaa !4*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_61_109))
begin
memory_controller_write_enable_a = 1'd0;
end
/* touchpad_check_endpoint: %61*/
/*   %69 = load i32* %68, align 4, !tbaa !4*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_61_110))
begin
memory_controller_write_enable_a = 1'd0;
end
/* touchpad_check_endpoint: %78*/
/*   %79 = load i32* %68, align 4, !tbaa !4*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_78_148))
begin
memory_controller_write_enable_a = 1'd0;
end
/* touchpad_check_endpoint: %82*/
/*   %84 = load i32* %83, align 4, !tbaa !4*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_82_153))
begin
memory_controller_write_enable_a = 1'd0;
end
/* touchpad_check_endpoint: %87*/
/*   %90 = load i32* %89, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_87_158))
begin
memory_controller_write_enable_a = 1'd0;
end
/* touchpad_check_endpoint: %87*/
/*   %95 = load i32* %94, align 4, !tbaa !4*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_87_161))
begin
memory_controller_write_enable_a = 1'd0;
end
/* touchpad_check_endpoint: %104*/
/*   %105 = load i32* %94, align 4, !tbaa !4*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_104_199))
begin
memory_controller_write_enable_a = 1'd0;
end
/* touchpad_check_endpoint: %104*/
/*   store i32 %105, i32* %106, align 4, !tbaa !4*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_104_201))
begin
memory_controller_write_enable_a = 1'd1;
end
end
always @(*) begin
memory_controller_in_a = 1'd0;
if ((cur_state == LEGUP_0))
begin
memory_controller_in_a = 1'd0;
end
/* touchpad_check_endpoint: %26*/
/*   store i32 1, i32* %21, align 4, !tbaa !4*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_26_45))
begin
memory_controller_in_a = 32'd1;
end
/* touchpad_check_endpoint: %26*/
/*   store i32 %27, i32* %28, align 4, !tbaa !4*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_26_48))
begin
memory_controller_in_a = touchpad_check_endpoint_26_27;
end
/* touchpad_check_endpoint: %34*/
/*   store i32 0, i32* %21, align 4, !tbaa !4*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_34_54))
begin
memory_controller_in_a = 32'd0;
end
/* touchpad_check_endpoint: %104*/
/*   store i32 %105, i32* %106, align 4, !tbaa !4*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_104_201))
begin
memory_controller_in_a = touchpad_check_endpoint_104_105;
end
end
always @(*) begin
memory_controller_size_a = 1'd0;
if ((cur_state == LEGUP_0))
begin
memory_controller_size_a = 1'd0;
end
/* touchpad_check_endpoint: %0*/
/*   %2 = load %struct.TYPE_3__** %1, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_0_1))
begin
memory_controller_size_a = 2'd2;
end
/* touchpad_check_endpoint: %0*/
/*   %12 = load i32** %11, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_0_4))
begin
memory_controller_size_a = 2'd2;
end
/* touchpad_check_endpoint: %0*/
/*   %10 = load i32* %9, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_0_5))
begin
memory_controller_size_a = 2'd2;
end
/* touchpad_check_endpoint: %0*/
/*   %6 = load %struct.TYPE_4__** %5, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_0_8))
begin
memory_controller_size_a = 2'd2;
end
/* touchpad_check_endpoint: %0*/
/*   %22 = load i32* %21, align 4, !tbaa !4*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_0_12))
begin
memory_controller_size_a = 2'd2;
end
/* touchpad_check_endpoint: %26*/
/*   store i32 1, i32* %21, align 4, !tbaa !4*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_26_45))
begin
memory_controller_size_a = 2'd2;
end
/* touchpad_check_endpoint: %26*/
/*   store i32 %27, i32* %28, align 4, !tbaa !4*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_26_48))
begin
memory_controller_size_a = 2'd2;
end
/* touchpad_check_endpoint: %30*/
/*   %32 = load i32* %31, align 4, !tbaa !4*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_30_51))
begin
memory_controller_size_a = 2'd2;
end
/* touchpad_check_endpoint: %34*/
/*   store i32 0, i32* %21, align 4, !tbaa !4*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_34_54))
begin
memory_controller_size_a = 2'd2;
end
/* touchpad_check_endpoint: %35*/
/*   %38 = load i32* %37, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_35_56))
begin
memory_controller_size_a = 2'd2;
end
/* touchpad_check_endpoint: %35*/
/*   %43 = load i32* %42, align 4, !tbaa !4*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_35_59))
begin
memory_controller_size_a = 2'd2;
end
/* touchpad_check_endpoint: %52*/
/*   %53 = load i32* %42, align 4, !tbaa !4*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_52_97))
begin
memory_controller_size_a = 2'd2;
end
/* touchpad_check_endpoint: %61*/
/*   %66 = load i32* %65, align 4, !tbaa !4*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_61_109))
begin
memory_controller_size_a = 2'd2;
end
/* touchpad_check_endpoint: %61*/
/*   %69 = load i32* %68, align 4, !tbaa !4*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_61_110))
begin
memory_controller_size_a = 2'd2;
end
/* touchpad_check_endpoint: %78*/
/*   %79 = load i32* %68, align 4, !tbaa !4*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_78_148))
begin
memory_controller_size_a = 2'd2;
end
/* touchpad_check_endpoint: %82*/
/*   %84 = load i32* %83, align 4, !tbaa !4*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_82_153))
begin
memory_controller_size_a = 2'd2;
end
/* touchpad_check_endpoint: %87*/
/*   %90 = load i32* %89, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_87_158))
begin
memory_controller_size_a = 2'd2;
end
/* touchpad_check_endpoint: %87*/
/*   %95 = load i32* %94, align 4, !tbaa !4*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_87_161))
begin
memory_controller_size_a = 2'd2;
end
/* touchpad_check_endpoint: %104*/
/*   %105 = load i32* %94, align 4, !tbaa !4*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_104_199))
begin
memory_controller_size_a = 2'd2;
end
/* touchpad_check_endpoint: %104*/
/*   store i32 %105, i32* %106, align 4, !tbaa !4*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_104_201))
begin
memory_controller_size_a = 2'd2;
end
end
always @(*) begin
memory_controller_enable_b = 1'd0;
if ((cur_state == LEGUP_0))
begin
memory_controller_enable_b = 1'd0;
end
/* touchpad_check_endpoint: %0*/
/*   %4 = load %struct.ad714x_touchpad_plat** %3, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_0_3))
begin
memory_controller_enable_b = 1'd1;
end
/* touchpad_check_endpoint: %0*/
/*   %14 = load i32* %13, align 4, !tbaa !4*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_0_7))
begin
memory_controller_enable_b = 1'd1;
end
/* touchpad_check_endpoint: %0*/
/*   %17 = load i32* %16, align 4, !tbaa !4*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_0_8))
begin
memory_controller_enable_b = 1'd1;
end
/* touchpad_check_endpoint: %0*/
/*   %8 = load %struct.ad714x_touchpad_drv** %7, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_0_10))
begin
memory_controller_enable_b = 1'd1;
end
/* touchpad_check_endpoint: %26*/
/*   %27 = load i32* %16, align 4, !tbaa !4*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_26_46))
begin
memory_controller_enable_b = 1'd1;
end
/* touchpad_check_endpoint: %35*/
/*   %40 = load i32* %39, align 4, !tbaa !4*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_35_58))
begin
memory_controller_enable_b = 1'd1;
end
/* touchpad_check_endpoint: %35*/
/*   %48 = load i32* %47, align 4, !tbaa !4*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_35_59))
begin
memory_controller_enable_b = 1'd1;
end
/* touchpad_check_endpoint: %52*/
/*   store i32 1, i32* %47, align 4, !tbaa !4*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_52_96))
begin
memory_controller_enable_b = 1'd1;
end
/* touchpad_check_endpoint: %52*/
/*   store i32 %53, i32* %54, align 4, !tbaa !4*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_52_99))
begin
memory_controller_enable_b = 1'd1;
end
/* touchpad_check_endpoint: %56*/
/*   %58 = load i32* %57, align 4, !tbaa !4*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_56_102))
begin
memory_controller_enable_b = 1'd1;
end
/* touchpad_check_endpoint: %60*/
/*   store i32 0, i32* %47, align 4, !tbaa !4*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_60_105))
begin
memory_controller_enable_b = 1'd1;
end
/* touchpad_check_endpoint: %61*/
/*   %64 = load i32* %63, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_61_107))
begin
memory_controller_enable_b = 1'd1;
end
/* touchpad_check_endpoint: %61*/
/*   %74 = load i32* %73, align 4, !tbaa !4*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_61_110))
begin
memory_controller_enable_b = 1'd1;
end
/* touchpad_check_endpoint: %78*/
/*   store i32 1, i32* %73, align 4, !tbaa !4*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_78_147))
begin
memory_controller_enable_b = 1'd1;
end
/* touchpad_check_endpoint: %78*/
/*   store i32 %79, i32* %80, align 4, !tbaa !4*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_78_150))
begin
memory_controller_enable_b = 1'd1;
end
/* touchpad_check_endpoint: %86*/
/*   store i32 0, i32* %73, align 4, !tbaa !4*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_86_156))
begin
memory_controller_enable_b = 1'd1;
end
/* touchpad_check_endpoint: %87*/
/*   %92 = load i32* %91, align 4, !tbaa !4*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_87_160))
begin
memory_controller_enable_b = 1'd1;
end
/* touchpad_check_endpoint: %87*/
/*   %100 = load i32* %99, align 4, !tbaa !4*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_87_161))
begin
memory_controller_enable_b = 1'd1;
end
/* touchpad_check_endpoint: %104*/
/*   store i32 1, i32* %99, align 4, !tbaa !4*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_104_198))
begin
memory_controller_enable_b = 1'd1;
end
/* touchpad_check_endpoint: %108*/
/*   %110 = load i32* %109, align 4, !tbaa !4*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_108_204))
begin
memory_controller_enable_b = 1'd1;
end
/* touchpad_check_endpoint: %112*/
/*   store i32 0, i32* %99, align 4, !tbaa !4*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_112_207))
begin
memory_controller_enable_b = 1'd1;
end
end
always @(*) begin
memory_controller_address_b = 1'd0;
if ((cur_state == LEGUP_0))
begin
memory_controller_address_b = 1'd0;
end
/* touchpad_check_endpoint: %0*/
/*   %4 = load %struct.ad714x_touchpad_plat** %3, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_0_3))
begin
memory_controller_address_b = touchpad_check_endpoint_0_3;
end
/* touchpad_check_endpoint: %0*/
/*   %14 = load i32* %13, align 4, !tbaa !4*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_0_7))
begin
memory_controller_address_b = touchpad_check_endpoint_0_13;
end
/* touchpad_check_endpoint: %0*/
/*   %17 = load i32* %16, align 4, !tbaa !4*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_0_8))
begin
memory_controller_address_b = touchpad_check_endpoint_0_16;
end
/* touchpad_check_endpoint: %0*/
/*   %8 = load %struct.ad714x_touchpad_drv** %7, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_0_10))
begin
memory_controller_address_b = touchpad_check_endpoint_0_7;
end
/* touchpad_check_endpoint: %26*/
/*   %27 = load i32* %16, align 4, !tbaa !4*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_26_46))
begin
memory_controller_address_b = touchpad_check_endpoint_0_16_reg;
end
/* touchpad_check_endpoint: %35*/
/*   %40 = load i32* %39, align 4, !tbaa !4*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_35_58))
begin
memory_controller_address_b = touchpad_check_endpoint_35_39;
end
/* touchpad_check_endpoint: %35*/
/*   %48 = load i32* %47, align 4, !tbaa !4*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_35_59))
begin
memory_controller_address_b = touchpad_check_endpoint_35_47_reg;
end
/* touchpad_check_endpoint: %52*/
/*   store i32 1, i32* %47, align 4, !tbaa !4*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_52_96))
begin
memory_controller_address_b = touchpad_check_endpoint_35_47_reg;
end
/* touchpad_check_endpoint: %52*/
/*   store i32 %53, i32* %54, align 4, !tbaa !4*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_52_99))
begin
memory_controller_address_b = touchpad_check_endpoint_52_54_reg;
end
/* touchpad_check_endpoint: %56*/
/*   %58 = load i32* %57, align 4, !tbaa !4*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_56_102))
begin
memory_controller_address_b = touchpad_check_endpoint_56_57;
end
/* touchpad_check_endpoint: %60*/
/*   store i32 0, i32* %47, align 4, !tbaa !4*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_60_105))
begin
memory_controller_address_b = touchpad_check_endpoint_35_47_reg;
end
/* touchpad_check_endpoint: %61*/
/*   %64 = load i32* %63, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_61_107))
begin
memory_controller_address_b = touchpad_check_endpoint_61_63;
end
/* touchpad_check_endpoint: %61*/
/*   %74 = load i32* %73, align 4, !tbaa !4*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_61_110))
begin
memory_controller_address_b = touchpad_check_endpoint_61_73_reg;
end
/* touchpad_check_endpoint: %78*/
/*   store i32 1, i32* %73, align 4, !tbaa !4*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_78_147))
begin
memory_controller_address_b = touchpad_check_endpoint_61_73_reg;
end
/* touchpad_check_endpoint: %78*/
/*   store i32 %79, i32* %80, align 4, !tbaa !4*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_78_150))
begin
memory_controller_address_b = touchpad_check_endpoint_78_80_reg;
end
/* touchpad_check_endpoint: %86*/
/*   store i32 0, i32* %73, align 4, !tbaa !4*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_86_156))
begin
memory_controller_address_b = touchpad_check_endpoint_61_73_reg;
end
/* touchpad_check_endpoint: %87*/
/*   %92 = load i32* %91, align 4, !tbaa !4*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_87_160))
begin
memory_controller_address_b = touchpad_check_endpoint_87_91;
end
/* touchpad_check_endpoint: %87*/
/*   %100 = load i32* %99, align 4, !tbaa !4*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_87_161))
begin
memory_controller_address_b = touchpad_check_endpoint_87_99_reg;
end
/* touchpad_check_endpoint: %104*/
/*   store i32 1, i32* %99, align 4, !tbaa !4*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_104_198))
begin
memory_controller_address_b = touchpad_check_endpoint_87_99_reg;
end
/* touchpad_check_endpoint: %108*/
/*   %110 = load i32* %109, align 4, !tbaa !4*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_108_204))
begin
memory_controller_address_b = touchpad_check_endpoint_108_109;
end
/* touchpad_check_endpoint: %112*/
/*   store i32 0, i32* %99, align 4, !tbaa !4*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_112_207))
begin
memory_controller_address_b = touchpad_check_endpoint_87_99_reg;
end
end
always @(*) begin
memory_controller_write_enable_b = 1'd0;
if ((cur_state == LEGUP_0))
begin
memory_controller_write_enable_b = 1'd0;
end
/* touchpad_check_endpoint: %0*/
/*   %4 = load %struct.ad714x_touchpad_plat** %3, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_0_3))
begin
memory_controller_write_enable_b = 1'd0;
end
/* touchpad_check_endpoint: %0*/
/*   %14 = load i32* %13, align 4, !tbaa !4*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_0_7))
begin
memory_controller_write_enable_b = 1'd0;
end
/* touchpad_check_endpoint: %0*/
/*   %17 = load i32* %16, align 4, !tbaa !4*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_0_8))
begin
memory_controller_write_enable_b = 1'd0;
end
/* touchpad_check_endpoint: %0*/
/*   %8 = load %struct.ad714x_touchpad_drv** %7, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_0_10))
begin
memory_controller_write_enable_b = 1'd0;
end
/* touchpad_check_endpoint: %26*/
/*   %27 = load i32* %16, align 4, !tbaa !4*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_26_46))
begin
memory_controller_write_enable_b = 1'd0;
end
/* touchpad_check_endpoint: %35*/
/*   %40 = load i32* %39, align 4, !tbaa !4*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_35_58))
begin
memory_controller_write_enable_b = 1'd0;
end
/* touchpad_check_endpoint: %35*/
/*   %48 = load i32* %47, align 4, !tbaa !4*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_35_59))
begin
memory_controller_write_enable_b = 1'd0;
end
/* touchpad_check_endpoint: %52*/
/*   store i32 1, i32* %47, align 4, !tbaa !4*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_52_96))
begin
memory_controller_write_enable_b = 1'd1;
end
/* touchpad_check_endpoint: %52*/
/*   store i32 %53, i32* %54, align 4, !tbaa !4*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_52_99))
begin
memory_controller_write_enable_b = 1'd1;
end
/* touchpad_check_endpoint: %56*/
/*   %58 = load i32* %57, align 4, !tbaa !4*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_56_102))
begin
memory_controller_write_enable_b = 1'd0;
end
/* touchpad_check_endpoint: %60*/
/*   store i32 0, i32* %47, align 4, !tbaa !4*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_60_105))
begin
memory_controller_write_enable_b = 1'd1;
end
/* touchpad_check_endpoint: %61*/
/*   %64 = load i32* %63, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_61_107))
begin
memory_controller_write_enable_b = 1'd0;
end
/* touchpad_check_endpoint: %61*/
/*   %74 = load i32* %73, align 4, !tbaa !4*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_61_110))
begin
memory_controller_write_enable_b = 1'd0;
end
/* touchpad_check_endpoint: %78*/
/*   store i32 1, i32* %73, align 4, !tbaa !4*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_78_147))
begin
memory_controller_write_enable_b = 1'd1;
end
/* touchpad_check_endpoint: %78*/
/*   store i32 %79, i32* %80, align 4, !tbaa !4*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_78_150))
begin
memory_controller_write_enable_b = 1'd1;
end
/* touchpad_check_endpoint: %86*/
/*   store i32 0, i32* %73, align 4, !tbaa !4*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_86_156))
begin
memory_controller_write_enable_b = 1'd1;
end
/* touchpad_check_endpoint: %87*/
/*   %92 = load i32* %91, align 4, !tbaa !4*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_87_160))
begin
memory_controller_write_enable_b = 1'd0;
end
/* touchpad_check_endpoint: %87*/
/*   %100 = load i32* %99, align 4, !tbaa !4*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_87_161))
begin
memory_controller_write_enable_b = 1'd0;
end
/* touchpad_check_endpoint: %104*/
/*   store i32 1, i32* %99, align 4, !tbaa !4*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_104_198))
begin
memory_controller_write_enable_b = 1'd1;
end
/* touchpad_check_endpoint: %108*/
/*   %110 = load i32* %109, align 4, !tbaa !4*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_108_204))
begin
memory_controller_write_enable_b = 1'd0;
end
/* touchpad_check_endpoint: %112*/
/*   store i32 0, i32* %99, align 4, !tbaa !4*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_112_207))
begin
memory_controller_write_enable_b = 1'd1;
end
end
always @(*) begin
memory_controller_in_b = 1'd0;
if ((cur_state == LEGUP_0))
begin
memory_controller_in_b = 1'd0;
end
/* touchpad_check_endpoint: %52*/
/*   store i32 1, i32* %47, align 4, !tbaa !4*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_52_96))
begin
memory_controller_in_b = 32'd1;
end
/* touchpad_check_endpoint: %52*/
/*   store i32 %53, i32* %54, align 4, !tbaa !4*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_52_99))
begin
memory_controller_in_b = touchpad_check_endpoint_52_53;
end
/* touchpad_check_endpoint: %60*/
/*   store i32 0, i32* %47, align 4, !tbaa !4*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_60_105))
begin
memory_controller_in_b = 32'd0;
end
/* touchpad_check_endpoint: %78*/
/*   store i32 1, i32* %73, align 4, !tbaa !4*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_78_147))
begin
memory_controller_in_b = 32'd1;
end
/* touchpad_check_endpoint: %78*/
/*   store i32 %79, i32* %80, align 4, !tbaa !4*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_78_150))
begin
memory_controller_in_b = touchpad_check_endpoint_78_79;
end
/* touchpad_check_endpoint: %86*/
/*   store i32 0, i32* %73, align 4, !tbaa !4*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_86_156))
begin
memory_controller_in_b = 32'd0;
end
/* touchpad_check_endpoint: %104*/
/*   store i32 1, i32* %99, align 4, !tbaa !4*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_104_198))
begin
memory_controller_in_b = 32'd1;
end
/* touchpad_check_endpoint: %112*/
/*   store i32 0, i32* %99, align 4, !tbaa !4*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_112_207))
begin
memory_controller_in_b = 32'd0;
end
end
always @(*) begin
memory_controller_size_b = 1'd0;
if ((cur_state == LEGUP_0))
begin
memory_controller_size_b = 1'd0;
end
/* touchpad_check_endpoint: %0*/
/*   %4 = load %struct.ad714x_touchpad_plat** %3, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_0_3))
begin
memory_controller_size_b = 2'd2;
end
/* touchpad_check_endpoint: %0*/
/*   %14 = load i32* %13, align 4, !tbaa !4*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_0_7))
begin
memory_controller_size_b = 2'd2;
end
/* touchpad_check_endpoint: %0*/
/*   %17 = load i32* %16, align 4, !tbaa !4*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_0_8))
begin
memory_controller_size_b = 2'd2;
end
/* touchpad_check_endpoint: %0*/
/*   %8 = load %struct.ad714x_touchpad_drv** %7, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_0_10))
begin
memory_controller_size_b = 2'd2;
end
/* touchpad_check_endpoint: %26*/
/*   %27 = load i32* %16, align 4, !tbaa !4*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_26_46))
begin
memory_controller_size_b = 2'd2;
end
/* touchpad_check_endpoint: %35*/
/*   %40 = load i32* %39, align 4, !tbaa !4*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_35_58))
begin
memory_controller_size_b = 2'd2;
end
/* touchpad_check_endpoint: %35*/
/*   %48 = load i32* %47, align 4, !tbaa !4*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_35_59))
begin
memory_controller_size_b = 2'd2;
end
/* touchpad_check_endpoint: %52*/
/*   store i32 1, i32* %47, align 4, !tbaa !4*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_52_96))
begin
memory_controller_size_b = 2'd2;
end
/* touchpad_check_endpoint: %52*/
/*   store i32 %53, i32* %54, align 4, !tbaa !4*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_52_99))
begin
memory_controller_size_b = 2'd2;
end
/* touchpad_check_endpoint: %56*/
/*   %58 = load i32* %57, align 4, !tbaa !4*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_56_102))
begin
memory_controller_size_b = 2'd2;
end
/* touchpad_check_endpoint: %60*/
/*   store i32 0, i32* %47, align 4, !tbaa !4*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_60_105))
begin
memory_controller_size_b = 2'd2;
end
/* touchpad_check_endpoint: %61*/
/*   %64 = load i32* %63, align 4, !tbaa !3*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_61_107))
begin
memory_controller_size_b = 2'd2;
end
/* touchpad_check_endpoint: %61*/
/*   %74 = load i32* %73, align 4, !tbaa !4*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_61_110))
begin
memory_controller_size_b = 2'd2;
end
/* touchpad_check_endpoint: %78*/
/*   store i32 1, i32* %73, align 4, !tbaa !4*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_78_147))
begin
memory_controller_size_b = 2'd2;
end
/* touchpad_check_endpoint: %78*/
/*   store i32 %79, i32* %80, align 4, !tbaa !4*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_78_150))
begin
memory_controller_size_b = 2'd2;
end
/* touchpad_check_endpoint: %86*/
/*   store i32 0, i32* %73, align 4, !tbaa !4*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_86_156))
begin
memory_controller_size_b = 2'd2;
end
/* touchpad_check_endpoint: %87*/
/*   %92 = load i32* %91, align 4, !tbaa !4*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_87_160))
begin
memory_controller_size_b = 2'd2;
end
/* touchpad_check_endpoint: %87*/
/*   %100 = load i32* %99, align 4, !tbaa !4*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_87_161))
begin
memory_controller_size_b = 2'd2;
end
/* touchpad_check_endpoint: %104*/
/*   store i32 1, i32* %99, align 4, !tbaa !4*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_104_198))
begin
memory_controller_size_b = 2'd2;
end
/* touchpad_check_endpoint: %108*/
/*   %110 = load i32* %109, align 4, !tbaa !4*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_108_204))
begin
memory_controller_size_b = 2'd2;
end
/* touchpad_check_endpoint: %112*/
/*   store i32 0, i32* %99, align 4, !tbaa !4*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_112_207))
begin
memory_controller_size_b = 2'd2;
end
end
always @(posedge clk) begin
if ((cur_state == LEGUP_0))
begin
return_val <= 0;
if (reset == 1'b0 && ^(0) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to return_val"); $finish; end
end
/* touchpad_check_endpoint: %113*/
/*   ret i32 %119*/
if ((cur_state == LEGUP_F_touchpad_check_endpoint_BB_113_209))
begin
return_val <= touchpad_check_endpoint_113_119;
if (reset == 1'b0 && ^(touchpad_check_endpoint_113_119) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to return_val"); $finish; end
end
end

endmodule 
`timescale 1 ns / 1 ns
module main
(
	clk,
	clk2x,
	clk1x_follower,
	reset,
	start,
	finish,
	memory_controller_enable_a,
	memory_controller_address_a,
	memory_controller_write_enable_a,
	memory_controller_in_a,
	memory_controller_size_a,
	memory_controller_out_a,
	memory_controller_enable_b,
	memory_controller_address_b,
	memory_controller_write_enable_b,
	memory_controller_in_b,
	memory_controller_size_b,
	memory_controller_out_b,
	memory_controller_waitrequest,
	return_val
);

parameter [1:0] LEGUP_0 = 2'd0;
parameter [1:0] LEGUP_F_main_BB_0_1 = 2'd1;
parameter [1:0] LEGUP_F_main_BB_0_3 = 2'd3;
parameter [1:0] LEGUP_function_call_2 = 2'd2;

input  clk;
input  clk2x;
input  clk1x_follower;
input  reset;
input  start;
output reg  finish;
output reg  memory_controller_enable_a;
output reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] memory_controller_address_a;
output reg  memory_controller_write_enable_a;
output reg [`MEMORY_CONTROLLER_DATA_SIZE-1:0] memory_controller_in_a;
output reg [1:0] memory_controller_size_a;
input [`MEMORY_CONTROLLER_DATA_SIZE-1:0] memory_controller_out_a;
output reg  memory_controller_enable_b;
output reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] memory_controller_address_b;
output reg  memory_controller_write_enable_b;
output reg [`MEMORY_CONTROLLER_DATA_SIZE-1:0] memory_controller_in_b;
output reg [1:0] memory_controller_size_b;
input [`MEMORY_CONTROLLER_DATA_SIZE-1:0] memory_controller_out_b;
input  memory_controller_waitrequest;
output reg [31:0] return_val;
reg [1:0] cur_state;
reg [31:0] main_0_1;
reg [31:0] main_0_1_reg;
reg  touchpad_check_endpoint_start;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] touchpad_check_endpoint_arg_ad714x;
reg [31:0] touchpad_check_endpoint_arg_idx;
wire  touchpad_check_endpoint_memory_controller_enable_a;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] touchpad_check_endpoint_memory_controller_address_a;
wire  touchpad_check_endpoint_memory_controller_write_enable_a;
wire [`MEMORY_CONTROLLER_DATA_SIZE-1:0] touchpad_check_endpoint_memory_controller_in_a;
reg [`MEMORY_CONTROLLER_DATA_SIZE-1:0] touchpad_check_endpoint_memory_controller_out_a;
wire [1:0] touchpad_check_endpoint_memory_controller_size_a;
wire  touchpad_check_endpoint_memory_controller_enable_b;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] touchpad_check_endpoint_memory_controller_address_b;
wire  touchpad_check_endpoint_memory_controller_write_enable_b;
wire [`MEMORY_CONTROLLER_DATA_SIZE-1:0] touchpad_check_endpoint_memory_controller_in_b;
reg [`MEMORY_CONTROLLER_DATA_SIZE-1:0] touchpad_check_endpoint_memory_controller_out_b;
wire [1:0] touchpad_check_endpoint_memory_controller_size_b;
reg  touchpad_check_endpoint_memory_controller_waitrequest;
wire  touchpad_check_endpoint_finish;
reg  touchpad_check_endpoint_finish_final;
wire [31:0] touchpad_check_endpoint_return_val;
reg  legup_function_call;
wire [15:0] legup_pthreadpoll_threadID;


touchpad_check_endpoint touchpad_check_endpoint_inst (
	.memory_controller_enable_a (touchpad_check_endpoint_memory_controller_enable_a),
	.memory_controller_address_a (touchpad_check_endpoint_memory_controller_address_a),
	.memory_controller_write_enable_a (touchpad_check_endpoint_memory_controller_write_enable_a),
	.memory_controller_in_a (touchpad_check_endpoint_memory_controller_in_a),
	.memory_controller_size_a (touchpad_check_endpoint_memory_controller_size_a),
	.memory_controller_out_a (memory_controller_out_a[`MEMORY_CONTROLLER_DATA_SIZE-1:0]),
	.memory_controller_enable_b (touchpad_check_endpoint_memory_controller_enable_b),
	.memory_controller_address_b (touchpad_check_endpoint_memory_controller_address_b),
	.memory_controller_write_enable_b (touchpad_check_endpoint_memory_controller_write_enable_b),
	.memory_controller_in_b (touchpad_check_endpoint_memory_controller_in_b),
	.memory_controller_size_b (touchpad_check_endpoint_memory_controller_size_b),
	.memory_controller_out_b (memory_controller_out_b[`MEMORY_CONTROLLER_DATA_SIZE-1:0]),
	.memory_controller_waitrequest (memory_controller_waitrequest),
	.clk (clk),
	.clk2x (clk2x),
	.clk1x_follower (clk1x_follower),
	.reset (reset),
	.start (touchpad_check_endpoint_start),
	.finish (touchpad_check_endpoint_finish),
	.return_val (touchpad_check_endpoint_return_val),
	.arg_ad714x (touchpad_check_endpoint_arg_ad714x),
	.arg_idx (touchpad_check_endpoint_arg_idx)
);


// Local Rams


always @(posedge clk) begin
if (((cur_state == LEGUP_0) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_0;
if (reset == 1'b0 && ^(LEGUP_0) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_0) & (memory_controller_waitrequest == 1'd0)) & (start == 1'd1)))
begin
cur_state <= LEGUP_F_main_BB_0_1;
if (reset == 1'b0 && ^(LEGUP_F_main_BB_0_1) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_0) & (memory_controller_waitrequest == 1'd0)) & (start == 1'd0)))
begin
cur_state <= LEGUP_0;
if (reset == 1'b0 && ^(LEGUP_0) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_main_BB_0_1) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_main_BB_0_1;
if (reset == 1'b0 && ^(LEGUP_F_main_BB_0_1) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_main_BB_0_1) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_function_call_2;
if (reset == 1'b0 && ^(LEGUP_function_call_2) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_function_call_2) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_function_call_2;
if (reset == 1'b0 && ^(LEGUP_function_call_2) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_function_call_2) & (memory_controller_waitrequest == 1'd0)) & (touchpad_check_endpoint_finish_final == 1'd1)))
begin
cur_state <= LEGUP_F_main_BB_0_3;
if (reset == 1'b0 && ^(LEGUP_F_main_BB_0_3) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_function_call_2) & (memory_controller_waitrequest == 1'd0)) & (touchpad_check_endpoint_finish_final == 1'd0)))
begin
cur_state <= LEGUP_function_call_2;
if (reset == 1'b0 && ^(LEGUP_function_call_2) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_main_BB_0_3) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_main_BB_0_3;
if (reset == 1'b0 && ^(LEGUP_F_main_BB_0_3) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_main_BB_0_3) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_0;
if (reset == 1'b0 && ^(LEGUP_0) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((reset == 1'd1))
begin
cur_state <= 2'd0;
if (reset == 1'b0 && ^(2'd0) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
end
always @(*) begin
/* main: %0*/
/*   %1 = tail call i32 @touchpad_check_endpoint(%struct.ad714x_chip* undef, i32 undef)*/
begin
main_0_1 = touchpad_check_endpoint_return_val;
end
end
always @(posedge clk) begin
/* main: %0*/
/*   %1 = tail call i32 @touchpad_check_endpoint(%struct.ad714x_chip* undef, i32 undef)*/
if ((cur_state == LEGUP_function_call_2))
begin
main_0_1_reg <= main_0_1;
if (reset == 1'b0 && ^(main_0_1) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to main_0_1_reg"); $finish; end
end
end
always @(posedge clk) begin
/* main: %0*/
/*   %1 = tail call i32 @touchpad_check_endpoint(%struct.ad714x_chip* undef, i32 undef)*/
if ((cur_state == LEGUP_F_main_BB_0_1))
begin
touchpad_check_endpoint_start <= 1'd1;
if (reset == 1'b0 && ^(1'd1) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to touchpad_check_endpoint_start"); $finish; end
end
/* main: %0*/
/*   %1 = tail call i32 @touchpad_check_endpoint(%struct.ad714x_chip* undef, i32 undef)*/
if ((cur_state == LEGUP_function_call_2))
begin
touchpad_check_endpoint_start <= 1'd0;
if (reset == 1'b0 && ^(1'd0) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to touchpad_check_endpoint_start"); $finish; end
end
end
always @(posedge clk) begin
/* main: %0*/
/*   %1 = tail call i32 @touchpad_check_endpoint(%struct.ad714x_chip* undef, i32 undef)*/
if ((cur_state == LEGUP_F_main_BB_0_1))
begin
touchpad_check_endpoint_arg_ad714x <= 0;
if (reset == 1'b0 && ^(0) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to touchpad_check_endpoint_arg_ad714x"); $finish; end
end
end
always @(posedge clk) begin
/* main: %0*/
/*   %1 = tail call i32 @touchpad_check_endpoint(%struct.ad714x_chip* undef, i32 undef)*/
if ((cur_state == LEGUP_F_main_BB_0_1))
begin
touchpad_check_endpoint_arg_idx <= 0;
if (reset == 1'b0 && ^(0) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to touchpad_check_endpoint_arg_idx"); $finish; end
end
end
always @(*) begin
/* main: %0*/
/*   %1 = tail call i32 @touchpad_check_endpoint(%struct.ad714x_chip* undef, i32 undef)*/
begin
touchpad_check_endpoint_memory_controller_out_a = memory_controller_out_a;
end
end
always @(*) begin
/* main: %0*/
/*   %1 = tail call i32 @touchpad_check_endpoint(%struct.ad714x_chip* undef, i32 undef)*/
begin
touchpad_check_endpoint_memory_controller_out_b = memory_controller_out_b;
end
end
always @(*) begin
touchpad_check_endpoint_memory_controller_waitrequest = memory_controller_waitrequest;
end
always @(*) begin
touchpad_check_endpoint_finish_final = touchpad_check_endpoint_finish;
end
always @(*) begin
legup_function_call = 1'd0;
/* main: %0*/
/*   %1 = tail call i32 @touchpad_check_endpoint(%struct.ad714x_chip* undef, i32 undef)*/
if ((cur_state == LEGUP_function_call_2))
begin
legup_function_call = 1'd1;
end
end
always @(posedge clk) begin
if ((cur_state == LEGUP_0))
begin
finish <= 1'd0;
if (reset == 1'b0 && ^(1'd0) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to finish"); $finish; end
end
/* main: %0*/
/*   ret i32 0*/
if ((cur_state == LEGUP_F_main_BB_0_3))
begin
finish <= (memory_controller_waitrequest == 1'd0);
if (reset == 1'b0 && ^((memory_controller_waitrequest == 1'd0)) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to finish"); $finish; end
end
end
always @(*) begin
memory_controller_enable_a = 1'd0;
/* main: %0*/
/*   %1 = tail call i32 @touchpad_check_endpoint(%struct.ad714x_chip* undef, i32 undef)*/
if ((cur_state == LEGUP_function_call_2))
begin
memory_controller_enable_a = touchpad_check_endpoint_memory_controller_enable_a;
end
/* main: %0*/
/*   %1 = tail call i32 @touchpad_check_endpoint(%struct.ad714x_chip* undef, i32 undef)*/
if ((cur_state == LEGUP_function_call_2))
begin
memory_controller_enable_a = touchpad_check_endpoint_memory_controller_enable_a;
end
end
always @(*) begin
memory_controller_address_a = 1'd0;
/* main: %0*/
/*   %1 = tail call i32 @touchpad_check_endpoint(%struct.ad714x_chip* undef, i32 undef)*/
if ((cur_state == LEGUP_function_call_2))
begin
memory_controller_address_a[`MEMORY_CONTROLLER_ADDR_SIZE-1:0] = touchpad_check_endpoint_memory_controller_address_a;
end
/* main: %0*/
/*   %1 = tail call i32 @touchpad_check_endpoint(%struct.ad714x_chip* undef, i32 undef)*/
if ((cur_state == LEGUP_function_call_2))
begin
memory_controller_address_a[`MEMORY_CONTROLLER_ADDR_SIZE-1:0] = touchpad_check_endpoint_memory_controller_address_a;
end
end
always @(*) begin
memory_controller_write_enable_a = 1'd0;
/* main: %0*/
/*   %1 = tail call i32 @touchpad_check_endpoint(%struct.ad714x_chip* undef, i32 undef)*/
if ((cur_state == LEGUP_function_call_2))
begin
memory_controller_write_enable_a = touchpad_check_endpoint_memory_controller_write_enable_a;
end
/* main: %0*/
/*   %1 = tail call i32 @touchpad_check_endpoint(%struct.ad714x_chip* undef, i32 undef)*/
if ((cur_state == LEGUP_function_call_2))
begin
memory_controller_write_enable_a = touchpad_check_endpoint_memory_controller_write_enable_a;
end
end
always @(*) begin
memory_controller_in_a = 1'd0;
/* main: %0*/
/*   %1 = tail call i32 @touchpad_check_endpoint(%struct.ad714x_chip* undef, i32 undef)*/
if ((cur_state == LEGUP_function_call_2))
begin
memory_controller_in_a[`MEMORY_CONTROLLER_DATA_SIZE-1:0] = touchpad_check_endpoint_memory_controller_in_a;
end
/* main: %0*/
/*   %1 = tail call i32 @touchpad_check_endpoint(%struct.ad714x_chip* undef, i32 undef)*/
if ((cur_state == LEGUP_function_call_2))
begin
memory_controller_in_a[`MEMORY_CONTROLLER_DATA_SIZE-1:0] = touchpad_check_endpoint_memory_controller_in_a;
end
end
always @(*) begin
memory_controller_size_a = 1'd0;
/* main: %0*/
/*   %1 = tail call i32 @touchpad_check_endpoint(%struct.ad714x_chip* undef, i32 undef)*/
if ((cur_state == LEGUP_function_call_2))
begin
memory_controller_size_a[1:0] = touchpad_check_endpoint_memory_controller_size_a;
end
/* main: %0*/
/*   %1 = tail call i32 @touchpad_check_endpoint(%struct.ad714x_chip* undef, i32 undef)*/
if ((cur_state == LEGUP_function_call_2))
begin
memory_controller_size_a[1:0] = touchpad_check_endpoint_memory_controller_size_a;
end
end
always @(*) begin
memory_controller_enable_b = 1'd0;
/* main: %0*/
/*   %1 = tail call i32 @touchpad_check_endpoint(%struct.ad714x_chip* undef, i32 undef)*/
if ((cur_state == LEGUP_function_call_2))
begin
memory_controller_enable_b = touchpad_check_endpoint_memory_controller_enable_b;
end
/* main: %0*/
/*   %1 = tail call i32 @touchpad_check_endpoint(%struct.ad714x_chip* undef, i32 undef)*/
if ((cur_state == LEGUP_function_call_2))
begin
memory_controller_enable_b = touchpad_check_endpoint_memory_controller_enable_b;
end
end
always @(*) begin
memory_controller_address_b = 1'd0;
/* main: %0*/
/*   %1 = tail call i32 @touchpad_check_endpoint(%struct.ad714x_chip* undef, i32 undef)*/
if ((cur_state == LEGUP_function_call_2))
begin
memory_controller_address_b[`MEMORY_CONTROLLER_ADDR_SIZE-1:0] = touchpad_check_endpoint_memory_controller_address_b;
end
/* main: %0*/
/*   %1 = tail call i32 @touchpad_check_endpoint(%struct.ad714x_chip* undef, i32 undef)*/
if ((cur_state == LEGUP_function_call_2))
begin
memory_controller_address_b[`MEMORY_CONTROLLER_ADDR_SIZE-1:0] = touchpad_check_endpoint_memory_controller_address_b;
end
end
always @(*) begin
memory_controller_write_enable_b = 1'd0;
/* main: %0*/
/*   %1 = tail call i32 @touchpad_check_endpoint(%struct.ad714x_chip* undef, i32 undef)*/
if ((cur_state == LEGUP_function_call_2))
begin
memory_controller_write_enable_b = touchpad_check_endpoint_memory_controller_write_enable_b;
end
/* main: %0*/
/*   %1 = tail call i32 @touchpad_check_endpoint(%struct.ad714x_chip* undef, i32 undef)*/
if ((cur_state == LEGUP_function_call_2))
begin
memory_controller_write_enable_b = touchpad_check_endpoint_memory_controller_write_enable_b;
end
end
always @(*) begin
memory_controller_in_b = 1'd0;
/* main: %0*/
/*   %1 = tail call i32 @touchpad_check_endpoint(%struct.ad714x_chip* undef, i32 undef)*/
if ((cur_state == LEGUP_function_call_2))
begin
memory_controller_in_b[`MEMORY_CONTROLLER_DATA_SIZE-1:0] = touchpad_check_endpoint_memory_controller_in_b;
end
/* main: %0*/
/*   %1 = tail call i32 @touchpad_check_endpoint(%struct.ad714x_chip* undef, i32 undef)*/
if ((cur_state == LEGUP_function_call_2))
begin
memory_controller_in_b[`MEMORY_CONTROLLER_DATA_SIZE-1:0] = touchpad_check_endpoint_memory_controller_in_b;
end
end
always @(*) begin
memory_controller_size_b = 1'd0;
/* main: %0*/
/*   %1 = tail call i32 @touchpad_check_endpoint(%struct.ad714x_chip* undef, i32 undef)*/
if ((cur_state == LEGUP_function_call_2))
begin
memory_controller_size_b[1:0] = touchpad_check_endpoint_memory_controller_size_b;
end
/* main: %0*/
/*   %1 = tail call i32 @touchpad_check_endpoint(%struct.ad714x_chip* undef, i32 undef)*/
if ((cur_state == LEGUP_function_call_2))
begin
memory_controller_size_b[1:0] = touchpad_check_endpoint_memory_controller_size_b;
end
end
always @(posedge clk) begin
if ((cur_state == LEGUP_0))
begin
return_val <= 0;
if (reset == 1'b0 && ^(0) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to return_val"); $finish; end
end
/* main: %0*/
/*   ret i32 0*/
if ((cur_state == LEGUP_F_main_BB_0_3))
begin
return_val <= 32'd0;
if (reset == 1'b0 && ^(32'd0) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to return_val"); $finish; end
end
end

endmodule 
module ram_dual_port
(
	clk,
	address_a,
	address_b,
	wren_a,
	wren_b,
	data_a,
	data_b,
	byteena_a,
	byteena_b,
	q_a,
	q_b
);

parameter  width_a = 1'd0;
parameter  width_b = 1'd0;
parameter  widthad_a = 1'd0;
parameter  widthad_b = 1'd0;
parameter  numwords_a = 1'd0;
parameter  numwords_b = 1'd0;
parameter  init_file = "UNUSED.mif";
parameter  width_be_a = 1'd0;
parameter  width_be_b = 1'd0;
parameter  latency = 1;

input  clk;
input [(widthad_a-1):0] address_a;
input [(widthad_b-1):0] address_b;
output wire [(width_a-1):0] q_a;
output wire [(width_b-1):0] q_b;
reg [(width_a-1):0] q_a_wire;
reg [(width_b-1):0] q_b_wire;
input  wren_a;
input  wren_b;
input [(width_a-1):0] data_a;
input [(width_b-1):0] data_b;
// byte enable is unsupported by inferred RAMs
input [width_be_a-1:0] byteena_a;
input [width_be_b-1:0] byteena_b;

(* ramstyle = "no_rw_check", ram_init_file = init_file *) reg [width_a-1:0] ram[numwords_a-1:0];

/* synthesis translate_off */
integer i;
ALTERA_MF_MEMORY_INITIALIZATION mem ();
reg [8*256:1] ram_ver_file;
initial begin
	if (init_file == "UNUSED.mif")
    begin
		for (i = 0; i < numwords_a; i = i + 1)
			ram[i] = 0;
    end
	else
    begin
        // modelsim can't read .mif files directly. So use Altera function to
        // convert them to .ver files
        mem.convert_to_ver_file(init_file, width_a, ram_ver_file);
        $readmemh(ram_ver_file, ram);
    end
end
/* synthesis translate_on */

always @ (posedge clk)
begin // Port A
if (wren_a)
begin
    ram[address_a] <= data_a;
    q_a_wire <= {width_a{1'bX}};
end
else
    q_a_wire <= ram[address_a];
end
always @ (posedge clk)
begin // Port b
if (wren_b)
begin
    ram[address_b] <= data_b;
    q_b_wire <= {width_b{1'bX}};
end
else
    q_b_wire <= ram[address_b];
end



integer j;
reg [(width_a-1):0] q_a_reg[latency:1], q_b_reg[latency:1];

always @(*)
begin
   q_a_reg[1] <= q_a_wire;
   q_b_reg[1] <= q_b_wire;
end

always @(posedge clk)
begin
   for (j = 1; j < latency; j=j+1)
   begin
       q_a_reg[j+1] <= q_a_reg[j];
       q_b_reg[j+1] <= q_b_reg[j];
   end
end

assign q_a = q_a_reg[latency];
assign q_b = q_b_reg[latency];


endmodule
module rom_dual_port
(
	clk,
	address_a,
	address_b,
	q_a,
	q_b
);

parameter  width_a = 1'd0;
parameter  width_b = 1'd0;
parameter  widthad_a = 1'd0;
parameter  widthad_b = 1'd0;
parameter  numwords_a = 1'd0;
parameter  numwords_b = 1'd0;
parameter  init_file = "UNUSED.mif";
parameter  latency = 1;

input  clk;
input [(widthad_a-1):0] address_a;
input [(widthad_b-1):0] address_b;
output wire [(width_a-1):0] q_a;
output wire [(width_b-1):0] q_b;
reg [(width_a-1):0] q_a_wire;
reg [(width_b-1):0] q_b_wire;

(* ramstyle = "no_rw_check", ram_init_file = init_file *) reg [width_a-1:0] ram[numwords_a-1:0];

/* synthesis translate_off */
integer i;
ALTERA_MF_MEMORY_INITIALIZATION mem ();
reg [8*256:1] ram_ver_file;
initial begin
	if (init_file == "UNUSED.mif")
    begin
		for (i = 0; i < numwords_a; i = i + 1)
			ram[i] = 0;
    end
	else
    begin
        // modelsim can't read .mif files directly. So use Altera function to
        // convert them to .ver files
        mem.convert_to_ver_file(init_file, width_a, ram_ver_file);
        $readmemh(ram_ver_file, ram);
    end
end
/* synthesis translate_on */

always @ (posedge clk)
begin
    q_a_wire <= ram[address_a];
    q_b_wire <= ram[address_b];
end



integer j;
reg [(width_a-1):0] q_a_reg[latency:1], q_b_reg[latency:1];

always @(*)
begin
   q_a_reg[1] <= q_a_wire;
   q_b_reg[1] <= q_b_wire;
end

always @(posedge clk)
begin
   for (j = 1; j < latency; j=j+1)
   begin
       q_a_reg[j+1] <= q_a_reg[j];
       q_b_reg[j+1] <= q_b_reg[j];
   end
end

assign q_a = q_a_reg[latency];
assign q_b = q_b_reg[latency];


endmodule
module de2 (CLOCK_50, KEY, SW, HEX0, HEX1, HEX2, HEX3, HEX4, HEX5, HEX6, HEX7, LEDG);
    input CLOCK_50;
    output [7:0] LEDG;
    input [3:0] KEY;
    input [17:0] SW;
    output [6:0] HEX0, HEX1, HEX2, HEX3, HEX4, HEX5, HEX6, HEX7;

    wire clk = CLOCK_50;
    wire reset = ~KEY[0];
    wire go = ~KEY[1];

    wire  start;
    wire [31:0] return_val;
    wire  finish;

    reg [31:0] return_val_reg;
    
	reg [3:0] hex0, hex1, hex2, hex3, hex4, hex5, hex6, hex7;
	always @ (*) begin
		hex7 <= return_val_reg[31:28];
		hex6 <= return_val_reg[27:24];
		hex5 <= return_val_reg[23:20];
		hex4 <= return_val_reg[19:16];
		hex3 <= return_val_reg[15:12];
		hex2 <= return_val_reg[11:8];
		hex1 <= return_val_reg[7:4];
		hex0 <= return_val_reg[3:0];
	end

    hex_digits h7( .x(hex7), .hex_LEDs(HEX7));
    hex_digits h6( .x(hex6), .hex_LEDs(HEX6));
    hex_digits h5( .x(hex5), .hex_LEDs(HEX5));
    hex_digits h4( .x(hex4), .hex_LEDs(HEX4));
    hex_digits h3( .x(hex3), .hex_LEDs(HEX3));
    hex_digits h2( .x(hex2), .hex_LEDs(HEX2));
    hex_digits h1( .x(hex1), .hex_LEDs(HEX1));
    hex_digits h0( .x(hex0), .hex_LEDs(HEX0));


    top top_inst (
        .clk (clk),
        .reset (reset),
        .start (start),
        .finish (finish),
        .return_val (return_val)
    );

    parameter s_WAIT = 3'b001, s_START = 3'b010, s_EXE = 3'b011,
                s_DONE = 3'b100;

    // state registers
    reg [3:0] y_Q, Y_D;

    assign LEDG[3:0] = y_Q;

    // next state
    always @(*)
    begin
        case (y_Q)
            s_WAIT: if (go) Y_D = s_START; else Y_D = y_Q;

            s_START: Y_D = s_EXE;

            s_EXE: if (!finish) Y_D = s_EXE; else Y_D = s_DONE;

            s_DONE: Y_D = s_DONE;

            default: Y_D = 3'bxxx;
        endcase
    end

    // current state
    always @(posedge clk)
    begin
        if (reset) // synchronous clear
            y_Q <= s_WAIT;
        else
            y_Q <= Y_D;
    end

    always @(posedge clk)
        if (y_Q == s_EXE && finish)
            return_val_reg <= return_val;
        else if (y_Q == s_DONE)
            return_val_reg <= return_val_reg;
        else
            return_val_reg <= 0;


    assign start = (y_Q == s_START);
endmodule

module de4 (
	OSC_50_BANK2,
    BUTTON,
    LED,
	SEG0_D,
	SEG1_D
);
    input OSC_50_BANK2;
    input [1:0] BUTTON;
    output [6:0] SEG0_D;
    output [6:0] SEG1_D;
    output [7:0] LED;

    de2 de2_inst (
        .CLOCK_50 (OSC_50_BANK2),
        .LEDG (LED),
        .KEY (BUTTON),
        .SW (),
        .HEX0 (SEG0_D),
        .HEX1 (SEG1_D),
        .HEX2 (),
        .HEX3 (),
        .HEX4 (),
        .HEX5 (),
        .HEX6 (),
        .HEX7 ()
    );

endmodule
module hex_digits(x, hex_LEDs);
    input [3:0] x;
    output [6:0] hex_LEDs;
    
    assign hex_LEDs[0] = (~x[3] & ~x[2] & ~x[1] & x[0]) |
                            (~x[3] & x[2] & ~x[1] & ~x[0]) |
                            (x[3] & x[2] & ~x[1] & x[0]) |
                            (x[3] & ~x[2] & x[1] & x[0]);
    assign hex_LEDs[1] = (~x[3] & x[2] & ~x[1] & x[0]) |
                            (x[3] & x[1] & x[0]) |
                            (x[3] & x[2] & ~x[0]) |
                            (x[2] & x[1] & ~x[0]);
    assign hex_LEDs[2] = (x[3] & x[2] & ~x[0]) |
                            (x[3] & x[2] & x[1]) |
                            (~x[3] & ~x[2] & x[1] & ~x[0]);
    assign hex_LEDs[3] = (~x[3] & ~x[2] & ~x[1] & x[0]) | 
                            (~x[3] & x[2] & ~x[1] & ~x[0]) | 
                            (x[2] & x[1] & x[0]) | 
                            (x[3] & ~x[2] & x[1] & ~x[0]);
    assign hex_LEDs[4] = (~x[3] & x[0]) |
                            (~x[3] & x[2] & ~x[1]) |
                            (~x[2] & ~x[1] & x[0]);
    assign hex_LEDs[5] = (~x[3] & ~x[2] & x[0]) | 
                            (~x[3] & ~x[2] & x[1]) | 
                            (~x[3] & x[1] & x[0]) | 
                            (x[3] & x[2] & ~x[1] & x[0]);
    assign hex_LEDs[6] = (~x[3] & ~x[2] & ~x[1]) | 
                            (x[3] & x[2] & ~x[1] & ~x[0]) | 
                            (~x[3] & x[2] & x[1] & x[0]);
    
endmodule
`timescale 1 ns / 1 ns
module main_tb
(
);

reg  clk;
reg  reset;
reg  start;
wire [31:0] return_val;
wire  finish;


top top_inst (
	.clk (clk),
	.reset (reset),
	.start (start),
	.finish (finish),
	.return_val (return_val)
);


// Local Rams



initial 
    clk = 0;
always @(clk)
    clk <= #10 ~clk;

initial begin
//$monitor("At t=%t clk=%b %b %b %b %d", $time, clk, reset, start, finish, return_val);
@(negedge clk);
reset <= 1;
@(negedge clk);
reset <= 0;
start <= 1;

end

always@(finish) begin
    if (finish == 1) begin
        $display("At t=%t clk=%b finish=%b return_val=%d", $time, clk, finish, return_val);
        $display("Cycles: %d", ($time-50)/20);
        $finish;
    end
end

endmodule 
