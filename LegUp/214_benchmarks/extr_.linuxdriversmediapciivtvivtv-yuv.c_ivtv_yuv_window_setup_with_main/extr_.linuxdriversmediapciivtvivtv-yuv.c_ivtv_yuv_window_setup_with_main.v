//----------------------------------------------------------------------------//
// Generated by LegUp High-Level Synthesis Tool Version 3.0 (http://legup.org)
// Compiled: Tue Jul 15 15:43:09 2014
// University of Toronto
// For research and academic purposes only. Commercial use is prohibited.
// Please send bugs to: legup@eecg.toronto.edu
// Date: Tue Mar 10 07:55:29 2020
//----------------------------------------------------------------------------//

`define MEMORY_CONTROLLER_ADDR_SIZE 32
`define MEMORY_CONTROLLER_DATA_SIZE 64
// Number of RAM elements: 0
`define MEMORY_CONTROLLER_TAG_SIZE 9
`define TAG_NULL `MEMORY_CONTROLLER_TAG_SIZE'd0
`define TAG_PROCESSOR `MEMORY_CONTROLLER_TAG_SIZE'd1

// Turn off warning 'ignoring unsupported system task'
// altera message_off 10175

module top
	(
		clk,
		reset,
		start,
		finish,
		return_val
	);
input clk;
input reset;
input start;
output wire finish;
output wire [31:0] return_val;
wire memory_controller_waitrequest;
wire memory_controller_enable_a;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] memory_controller_address_a;
wire memory_controller_write_enable_a;
wire [`MEMORY_CONTROLLER_DATA_SIZE-1:0] memory_controller_in_a;
wire [1:0] memory_controller_size_a;
wire [`MEMORY_CONTROLLER_DATA_SIZE-1:0] memory_controller_out_a;

wire memory_controller_enable_b;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] memory_controller_address_b;
wire memory_controller_write_enable_b;
wire [`MEMORY_CONTROLLER_DATA_SIZE-1:0] memory_controller_in_b;
wire [1:0] memory_controller_size_b;
wire [`MEMORY_CONTROLLER_DATA_SIZE-1:0] memory_controller_out_b;

assign memory_controller_waitrequest = 0;

memory_controller memory_controller_inst (
	.clk( clk ),
	.memory_controller_enable_a( memory_controller_enable_a ),
	.memory_controller_enable_b( memory_controller_enable_b ),
	.memory_controller_address_a( memory_controller_address_a ),
	.memory_controller_address_b( memory_controller_address_b ),
	.memory_controller_write_enable_a( memory_controller_write_enable_a ),
	.memory_controller_write_enable_b( memory_controller_write_enable_b ),
	.memory_controller_in_a( memory_controller_in_a ),
	.memory_controller_in_b( memory_controller_in_b ),
	.memory_controller_size_a( memory_controller_size_a ),
	.memory_controller_size_b( memory_controller_size_b ),
	.memory_controller_waitrequest( memory_controller_waitrequest ),
	.memory_controller_out_reg_a( memory_controller_out_a ),
	.memory_controller_out_reg_b( memory_controller_out_b )
);

main main_inst(
	.clk( clk ),
	.clk2x( clk2x ),
	.clk1x_follower( clk1x_follower ),
	.reset( reset ),
	.start( start ),
	.finish( finish ),
	.return_val( return_val ),
	.memory_controller_enable_a(memory_controller_enable_a),
	.memory_controller_address_a(memory_controller_address_a),
	.memory_controller_write_enable_a(memory_controller_write_enable_a),
	.memory_controller_in_a(memory_controller_in_a),
	.memory_controller_size_a(memory_controller_size_a),
	.memory_controller_out_a(memory_controller_out_a),
	.memory_controller_enable_b(memory_controller_enable_b),
	.memory_controller_address_b(memory_controller_address_b),
	.memory_controller_write_enable_b(memory_controller_write_enable_b),
	.memory_controller_in_b(memory_controller_in_b),
	.memory_controller_size_b(memory_controller_size_b),
	.memory_controller_out_b(memory_controller_out_b),
	.memory_controller_waitrequest(memory_controller_waitrequest)
);

endmodule
`timescale 1 ns / 1 ns
module memory_controller
(
	clk,
	memory_controller_address_a,
	memory_controller_address_b,
	memory_controller_enable_a,
	memory_controller_enable_b,
	memory_controller_write_enable_a,
	memory_controller_write_enable_b,
	memory_controller_in_a,
	memory_controller_in_b,
	memory_controller_size_a,
	memory_controller_size_b,
	memory_controller_waitrequest,
	memory_controller_out_reg_a,
	memory_controller_out_reg_b
);


input clk;
input memory_controller_waitrequest;
input [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] memory_controller_address_a;
input memory_controller_enable_a;
input memory_controller_write_enable_a;
input [64-1:0] memory_controller_in_a;
input [1:0] memory_controller_size_a;
output reg [64-1:0] memory_controller_out_reg_a;
reg [64-1:0] memory_controller_out_prev_a;
reg [64-1:0] memory_controller_out_a;

reg memory_controller_enable_reg_a;
input [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] memory_controller_address_b;
input memory_controller_enable_b;
input memory_controller_write_enable_b;
input [64-1:0] memory_controller_in_b;
input [1:0] memory_controller_size_b;
output reg [64-1:0] memory_controller_out_reg_b;
reg [64-1:0] memory_controller_out_prev_b;
reg [64-1:0] memory_controller_out_b;

reg memory_controller_enable_reg_b;
endmodule 
`timescale 1 ns / 1 ns
module ivtv_yuv_window_setup
(
	clk,
	clk2x,
	clk1x_follower,
	reset,
	start,
	finish,
	memory_controller_enable_a,
	memory_controller_address_a,
	memory_controller_write_enable_a,
	memory_controller_in_a,
	memory_controller_size_a,
	memory_controller_out_a,
	memory_controller_enable_b,
	memory_controller_address_b,
	memory_controller_write_enable_b,
	memory_controller_in_b,
	memory_controller_size_b,
	memory_controller_out_b,
	memory_controller_waitrequest,
	return_val,
	arg_itv,
	arg_f
);

parameter [8:0] LEGUP_0 = 9'd0;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_0_1 = 9'd1;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_0_2 = 9'd2;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_0_3 = 9'd3;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_4_4 = 9'd4;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_4_5 = 9'd5;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_5_6 = 9'd6;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_5_7 = 9'd7;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_5_8 = 9'd8;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_10_9 = 9'd9;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_10_10 = 9'd10;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_11_11 = 9'd11;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_11_12 = 9'd12;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_11_13 = 9'd13;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_20_14 = 9'd14;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_20_15 = 9'd15;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_20_16 = 9'd16;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_20_17 = 9'd17;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_20_18 = 9'd18;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_20_19 = 9'd19;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_20_20 = 9'd20;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_20_21 = 9'd21;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_20_22 = 9'd22;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_20_23 = 9'd23;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_20_24 = 9'd24;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_20_25 = 9'd25;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_20_26 = 9'd26;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_20_27 = 9'd27;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_20_28 = 9'd28;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_20_29 = 9'd29;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_20_30 = 9'd30;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_20_31 = 9'd31;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_20_32 = 9'd32;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_20_33 = 9'd33;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_20_34 = 9'd34;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_20_35 = 9'd35;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_20_36 = 9'd36;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_20_37 = 9'd37;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_20_38 = 9'd38;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_20_39 = 9'd39;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_20_40 = 9'd40;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_20_41 = 9'd41;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_20_42 = 9'd42;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_20_43 = 9'd43;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_20_44 = 9'd44;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_20_45 = 9'd45;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_20_46 = 9'd46;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_20_47 = 9'd47;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_20_48 = 9'd48;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_26_49 = 9'd49;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_26_50 = 9'd50;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_26_51 = 9'd51;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_26_52 = 9'd52;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_26_53 = 9'd53;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_26_54 = 9'd54;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_26_55 = 9'd55;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_26_56 = 9'd56;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_26_57 = 9'd57;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_26_58 = 9'd58;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_26_59 = 9'd59;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_26_60 = 9'd60;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_26_61 = 9'd61;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_26_62 = 9'd62;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_26_63 = 9'd63;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_26_64 = 9'd64;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_26_65 = 9'd65;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_26_66 = 9'd66;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_26_67 = 9'd67;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_26_68 = 9'd68;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_26_69 = 9'd69;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_26_70 = 9'd70;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_26_71 = 9'd71;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_26_72 = 9'd72;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_26_73 = 9'd73;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_26_74 = 9'd74;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_26_75 = 9'd75;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_26_76 = 9'd76;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_26_77 = 9'd77;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_26_78 = 9'd78;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_26_79 = 9'd79;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_26_80 = 9'd80;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_26_81 = 9'd81;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_26_82 = 9'd82;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_26_83 = 9'd83;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_36_84 = 9'd84;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_36_85 = 9'd85;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_41_86 = 9'd86;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_41_87 = 9'd87;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_41_88 = 9'd88;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_41_89 = 9'd89;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_41_90 = 9'd90;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_41_91 = 9'd91;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_41_92 = 9'd92;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_41_93 = 9'd93;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_41_94 = 9'd94;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_41_95 = 9'd95;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_41_96 = 9'd96;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_41_97 = 9'd97;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_41_98 = 9'd98;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_41_99 = 9'd99;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_41_100 = 9'd100;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_41_101 = 9'd101;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_41_102 = 9'd102;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_41_103 = 9'd103;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_41_104 = 9'd104;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_41_105 = 9'd105;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_41_106 = 9'd106;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_41_107 = 9'd107;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_41_108 = 9'd108;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_41_109 = 9'd109;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_41_110 = 9'd110;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_41_111 = 9'd111;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_41_112 = 9'd112;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_41_113 = 9'd113;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_41_114 = 9'd114;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_41_115 = 9'd115;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_41_116 = 9'd116;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_41_117 = 9'd117;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_41_118 = 9'd118;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_41_119 = 9'd119;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_41_120 = 9'd120;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_47_121 = 9'd121;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_55_122 = 9'd122;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_55_123 = 9'd123;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_55_124 = 9'd124;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_55_125 = 9'd125;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_55_126 = 9'd126;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_55_127 = 9'd127;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_55_128 = 9'd128;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_55_129 = 9'd129;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_55_130 = 9'd130;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_55_131 = 9'd131;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_55_132 = 9'd132;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_55_133 = 9'd133;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_55_134 = 9'd134;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_55_135 = 9'd135;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_55_136 = 9'd136;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_55_137 = 9'd137;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_55_138 = 9'd138;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_55_139 = 9'd139;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_55_140 = 9'd140;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_55_141 = 9'd141;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_55_142 = 9'd142;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_55_143 = 9'd143;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_55_144 = 9'd144;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_55_145 = 9'd145;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_55_146 = 9'd146;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_55_147 = 9'd147;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_55_148 = 9'd148;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_55_149 = 9'd149;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_55_150 = 9'd150;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_55_151 = 9'd151;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_55_152 = 9'd152;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_55_153 = 9'd153;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_55_154 = 9'd154;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_64_155 = 9'd155;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_64_156 = 9'd156;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_64_157 = 9'd157;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_64_158 = 9'd158;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_70_159 = 9'd159;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_72_160 = 9'd160;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_72_161 = 9'd161;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_72_162 = 9'd162;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_82_163 = 9'd163;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_82_164 = 9'd164;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_82_165 = 9'd165;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_87_166 = 9'd166;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_87_167 = 9'd167;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_87_168 = 9'd168;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_87_169 = 9'd169;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_87_170 = 9'd170;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_87_171 = 9'd171;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_87_172 = 9'd172;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_87_173 = 9'd173;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_87_174 = 9'd174;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_87_175 = 9'd175;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_87_176 = 9'd176;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_87_177 = 9'd177;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_87_178 = 9'd178;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_87_179 = 9'd179;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_87_180 = 9'd180;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_87_181 = 9'd181;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_87_182 = 9'd182;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_87_183 = 9'd183;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_87_184 = 9'd184;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_87_185 = 9'd185;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_87_186 = 9'd186;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_87_187 = 9'd187;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_87_188 = 9'd188;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_87_189 = 9'd189;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_87_190 = 9'd190;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_87_191 = 9'd191;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_87_192 = 9'd192;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_87_193 = 9'd193;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_87_194 = 9'd194;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_87_195 = 9'd195;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_87_196 = 9'd196;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_87_197 = 9'd197;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_87_198 = 9'd198;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_98_199 = 9'd199;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_98_200 = 9'd200;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_98_201 = 9'd201;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_98_202 = 9'd202;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_104_203 = 9'd203;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_106_204 = 9'd204;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_106_205 = 9'd205;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_106_206 = 9'd206;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_116_207 = 9'd207;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_116_208 = 9'd208;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_116_209 = 9'd209;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_121_210 = 9'd210;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_121_211 = 9'd211;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_121_212 = 9'd212;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_127_213 = 9'd213;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_127_214 = 9'd214;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_127_215 = 9'd215;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_127_216 = 9'd216;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_127_217 = 9'd217;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_127_218 = 9'd218;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_127_219 = 9'd219;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_134_220 = 9'd220;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_134_221 = 9'd221;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_134_222 = 9'd222;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_134_223 = 9'd223;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_134_224 = 9'd224;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_134_225 = 9'd225;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_134_226 = 9'd226;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_134_227 = 9'd227;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_134_228 = 9'd228;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_134_229 = 9'd229;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_134_230 = 9'd230;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_134_231 = 9'd231;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_134_232 = 9'd232;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_134_233 = 9'd233;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_134_234 = 9'd234;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_134_235 = 9'd235;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_134_236 = 9'd236;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_134_237 = 9'd237;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_134_238 = 9'd238;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_134_239 = 9'd239;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_134_240 = 9'd240;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_134_241 = 9'd241;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_134_242 = 9'd242;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_134_243 = 9'd243;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_134_244 = 9'd244;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_134_245 = 9'd245;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_134_246 = 9'd246;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_134_247 = 9'd247;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_134_248 = 9'd248;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_134_249 = 9'd249;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_134_250 = 9'd250;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_134_251 = 9'd251;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_134_252 = 9'd252;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_151_253 = 9'd253;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_151_254 = 9'd254;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_151_255 = 9'd255;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_151_256 = 9'd256;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_151_257 = 9'd257;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_151_258 = 9'd258;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_151_259 = 9'd259;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_151_260 = 9'd260;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_151_261 = 9'd261;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_151_262 = 9'd262;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_151_263 = 9'd263;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_151_264 = 9'd264;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_151_265 = 9'd265;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_151_266 = 9'd266;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_151_267 = 9'd267;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_151_268 = 9'd268;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_151_269 = 9'd269;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_151_270 = 9'd270;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_151_271 = 9'd271;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_151_272 = 9'd272;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_151_273 = 9'd273;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_151_274 = 9'd274;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_151_275 = 9'd275;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_151_276 = 9'd276;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_151_277 = 9'd277;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_151_278 = 9'd278;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_151_279 = 9'd279;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_151_280 = 9'd280;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_151_281 = 9'd281;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_151_282 = 9'd282;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_151_283 = 9'd283;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_151_284 = 9'd284;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_151_285 = 9'd285;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_151_286 = 9'd286;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_156_287 = 9'd287;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_156_288 = 9'd288;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_156_289 = 9'd289;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_156_290 = 9'd290;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_156_291 = 9'd291;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_156_292 = 9'd292;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_156_293 = 9'd293;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_156_294 = 9'd294;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_156_295 = 9'd295;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_156_296 = 9'd296;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_156_297 = 9'd297;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_156_298 = 9'd298;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_156_299 = 9'd299;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_156_300 = 9'd300;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_156_301 = 9'd301;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_156_302 = 9'd302;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_156_303 = 9'd303;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_156_304 = 9'd304;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_156_305 = 9'd305;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_156_306 = 9'd306;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_156_307 = 9'd307;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_156_308 = 9'd308;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_156_309 = 9'd309;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_156_310 = 9'd310;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_156_311 = 9'd311;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_156_312 = 9'd312;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_156_313 = 9'd313;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_156_314 = 9'd314;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_156_315 = 9'd315;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_156_316 = 9'd316;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_156_317 = 9'd317;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_156_318 = 9'd318;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_156_319 = 9'd319;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_159_320 = 9'd320;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_159_321 = 9'd321;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_159_322 = 9'd322;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_159_323 = 9'd323;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_159_324 = 9'd324;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_159_325 = 9'd325;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_159_326 = 9'd326;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_159_327 = 9'd327;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_159_328 = 9'd328;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_159_329 = 9'd329;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_159_330 = 9'd330;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_159_331 = 9'd331;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_159_332 = 9'd332;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_159_333 = 9'd333;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_159_334 = 9'd334;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_159_335 = 9'd335;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_159_336 = 9'd336;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_159_337 = 9'd337;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_159_338 = 9'd338;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_159_339 = 9'd339;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_159_340 = 9'd340;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_159_341 = 9'd341;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_159_342 = 9'd342;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_159_343 = 9'd343;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_159_344 = 9'd344;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_159_345 = 9'd345;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_159_346 = 9'd346;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_159_347 = 9'd347;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_159_348 = 9'd348;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_159_349 = 9'd349;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_159_350 = 9'd350;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_159_351 = 9'd351;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_159_352 = 9'd352;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_159_353 = 9'd353;
parameter [8:0] LEGUP_F_ivtv_yuv_window_setup_BB_164_354 = 9'd354;

input  clk;
input  clk2x;
input  clk1x_follower;
input  reset;
input  start;
output reg  finish;
output reg  memory_controller_enable_a;
output reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] memory_controller_address_a;
output reg  memory_controller_write_enable_a;
output reg [`MEMORY_CONTROLLER_DATA_SIZE-1:0] memory_controller_in_a;
output reg [1:0] memory_controller_size_a;
input [`MEMORY_CONTROLLER_DATA_SIZE-1:0] memory_controller_out_a;
output reg  memory_controller_enable_b;
output reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] memory_controller_address_b;
output reg  memory_controller_write_enable_b;
output reg [`MEMORY_CONTROLLER_DATA_SIZE-1:0] memory_controller_in_b;
output reg [1:0] memory_controller_size_b;
input [`MEMORY_CONTROLLER_DATA_SIZE-1:0] memory_controller_out_b;
input  memory_controller_waitrequest;
output reg [31:0] return_val;
input [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] arg_itv;
input [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] arg_f;
reg [8:0] cur_state;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] ivtv_yuv_window_setup_0_1;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] ivtv_yuv_window_setup_0_1_reg;
reg [31:0] ivtv_yuv_window_setup_0_2;
reg [31:0] ivtv_yuv_window_setup_0_2_reg;
reg  ivtv_yuv_window_setup_0_3;
reg  ivtv_yuv_window_setup_0_3_reg;
reg [31:0] ivtv_yuv_window_setup_5_6;
reg [31:0] ivtv_yuv_window_setup_5_6_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] ivtv_yuv_window_setup_5_7;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] ivtv_yuv_window_setup_5_7_reg;
reg [31:0] ivtv_yuv_window_setup_5_8;
reg [31:0] ivtv_yuv_window_setup_5_8_reg;
reg  ivtv_yuv_window_setup_5_9;
reg  ivtv_yuv_window_setup_5_9_reg;
reg [31:0] ivtv_yuv_window_setup_11_12;
reg [31:0] ivtv_yuv_window_setup_11_12_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] ivtv_yuv_window_setup_11_13;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] ivtv_yuv_window_setup_11_13_reg;
reg [31:0] ivtv_yuv_window_setup_11_14;
reg [31:0] ivtv_yuv_window_setup_11_14_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] ivtv_yuv_window_setup_11_15;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] ivtv_yuv_window_setup_11_15_reg;
reg [31:0] ivtv_yuv_window_setup_11_16;
reg [31:0] ivtv_yuv_window_setup_11_16_reg;
reg [31:0] ivtv_yuv_window_setup_11_17;
reg [31:0] ivtv_yuv_window_setup_11_17_reg;
reg [31:0] ivtv_yuv_window_setup_11_18;
reg [31:0] ivtv_yuv_window_setup_11_18_reg;
reg  ivtv_yuv_window_setup_11_19;
reg  ivtv_yuv_window_setup_11_19_reg;
reg [31:0] ivtv_yuv_window_setup_20_21;
reg [31:0] ivtv_yuv_window_setup_20_21_reg;
reg [31:0] ivtv_yuv_window_setup_20_22;
reg [31:0] ivtv_yuv_window_setup_20_22_reg;
reg [31:0] ivtv_yuv_window_setup_20_23;
reg [31:0] ivtv_yuv_window_setup_20_23_reg;
reg [31:0] ivtv_yuv_window_setup_20_24;
reg [31:0] ivtv_yuv_window_setup_20_24_reg;
reg [31:0] ivtv_yuv_window_setup_20_25;
reg [31:0] ivtv_yuv_window_setup_20_25_reg;
reg [31:0] ivtv_yuv_window_setup_26_27;
reg [31:0] ivtv_yuv_window_setup_26_27_reg;
reg [31:0] ivtv_yuv_window_setup_26_28;
reg [31:0] ivtv_yuv_window_setup_26_28_reg;
reg [31:0] ivtv_yuv_window_setup_26_29;
reg [31:0] ivtv_yuv_window_setup_26_29_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] ivtv_yuv_window_setup_26_30;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] ivtv_yuv_window_setup_26_30_reg;
reg [31:0] ivtv_yuv_window_setup_26_31;
reg [31:0] ivtv_yuv_window_setup_26_31_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] ivtv_yuv_window_setup_26_32;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] ivtv_yuv_window_setup_26_32_reg;
reg [31:0] ivtv_yuv_window_setup_26_33;
reg [31:0] ivtv_yuv_window_setup_26_33_reg;
reg [31:0] ivtv_yuv_window_setup_26_34;
reg [31:0] ivtv_yuv_window_setup_26_34_reg;
reg  ivtv_yuv_window_setup_26_35;
reg  ivtv_yuv_window_setup_26_35_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] ivtv_yuv_window_setup_36_37;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] ivtv_yuv_window_setup_36_37_reg;
reg [31:0] ivtv_yuv_window_setup_36_38;
reg [31:0] ivtv_yuv_window_setup_36_38_reg;
reg [31:0] ivtv_yuv_window_setup_36_39;
reg [31:0] ivtv_yuv_window_setup_36_39_reg;
reg  ivtv_yuv_window_setup_36_40;
reg  ivtv_yuv_window_setup_36_40_reg;
reg [31:0] ivtv_yuv_window_setup_41_42;
reg [31:0] ivtv_yuv_window_setup_41_42_reg;
reg [31:0] ivtv_yuv_window_setup_41_43;
reg [31:0] ivtv_yuv_window_setup_41_43_reg;
reg [31:0] ivtv_yuv_window_setup_41_44;
reg [31:0] ivtv_yuv_window_setup_41_44_reg;
reg [31:0] ivtv_yuv_window_setup_41_45;
reg [31:0] ivtv_yuv_window_setup_41_45_reg;
reg [31:0] ivtv_yuv_window_setup_41_46;
reg [31:0] ivtv_yuv_window_setup_41_46_reg;
reg [31:0] ivtv_yuv_window_setup_47_48;
reg [31:0] ivtv_yuv_window_setup_47_48_reg;
reg [31:0] ivtv_yuv_window_setup_47_49;
reg [31:0] ivtv_yuv_window_setup_47_49_reg;
reg [31:0] ivtv_yuv_window_setup_47_50;
reg [31:0] ivtv_yuv_window_setup_47_50_reg;
reg  ivtv_yuv_window_setup_47_51;
reg  ivtv_yuv_window_setup_47_51_reg;
reg  ivtv_yuv_window_setup_47_52;
reg  ivtv_yuv_window_setup_47_52_reg;
reg  ivtv_yuv_window_setup_47_or_cond;
reg  ivtv_yuv_window_setup_47_or_cond_reg;
reg  ivtv_yuv_window_setup_47_53;
reg  ivtv_yuv_window_setup_47_53_reg;
reg  ivtv_yuv_window_setup_47_or_cond3;
reg  ivtv_yuv_window_setup_47_or_cond3_reg;
reg  ivtv_yuv_window_setup_47_54;
reg  ivtv_yuv_window_setup_47_54_reg;
reg  ivtv_yuv_window_setup_47_or_cond4;
reg  ivtv_yuv_window_setup_47_or_cond4_reg;
reg [31:0] ivtv_yuv_window_setup_55_56;
reg [31:0] ivtv_yuv_window_setup_55_56_reg;
reg [31:0] ivtv_yuv_window_setup_55_57;
reg [31:0] ivtv_yuv_window_setup_55_57_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] ivtv_yuv_window_setup_55_58;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] ivtv_yuv_window_setup_55_58_reg;
reg [31:0] ivtv_yuv_window_setup_55_59;
reg [31:0] ivtv_yuv_window_setup_55_59_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] ivtv_yuv_window_setup_55_60;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] ivtv_yuv_window_setup_55_60_reg;
reg [31:0] ivtv_yuv_window_setup_55_61;
reg [31:0] ivtv_yuv_window_setup_55_61_reg;
reg [31:0] ivtv_yuv_window_setup_55_62;
reg [31:0] ivtv_yuv_window_setup_55_62_reg;
reg  ivtv_yuv_window_setup_55_63;
reg  ivtv_yuv_window_setup_55_63_reg;
reg [31:0] ivtv_yuv_window_setup_64_65;
reg [31:0] ivtv_yuv_window_setup_64_65_reg;
reg [31:0] ivtv_yuv_window_setup_64_66;
reg [31:0] ivtv_yuv_window_setup_64_66_reg;
reg [31:0] ivtv_yuv_window_setup_64_67;
reg [31:0] ivtv_yuv_window_setup_64_67_reg;
reg [31:0] ivtv_yuv_window_setup_64_68;
reg [31:0] ivtv_yuv_window_setup_64_68_reg;
reg [31:0] ivtv_yuv_window_setup_64_69;
reg [31:0] ivtv_yuv_window_setup_64_69_reg;
reg [31:0] ivtv_yuv_window_setup_70_71;
reg [31:0] ivtv_yuv_window_setup_70_71_reg;
reg [31:0] ivtv_yuv_window_setup_72_73;
reg [31:0] ivtv_yuv_window_setup_72_73_reg;
reg [31:0] ivtv_yuv_window_setup_72_74;
reg [31:0] ivtv_yuv_window_setup_72_74_reg;
reg [31:0] ivtv_yuv_window_setup_72_75;
reg [31:0] ivtv_yuv_window_setup_72_75_reg;
reg [31:0] ivtv_yuv_window_setup_72_76;
reg [31:0] ivtv_yuv_window_setup_72_76_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] ivtv_yuv_window_setup_72_77;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] ivtv_yuv_window_setup_72_77_reg;
reg [31:0] ivtv_yuv_window_setup_72_78;
reg [31:0] ivtv_yuv_window_setup_72_78_reg;
reg [31:0] ivtv_yuv_window_setup_72_79;
reg [31:0] ivtv_yuv_window_setup_72_79_reg;
reg [31:0] ivtv_yuv_window_setup_72_80;
reg [31:0] ivtv_yuv_window_setup_72_80_reg;
reg  ivtv_yuv_window_setup_72_81;
reg  ivtv_yuv_window_setup_72_81_reg;
reg [31:0] ivtv_yuv_window_setup_82_83;
reg [31:0] ivtv_yuv_window_setup_82_83_reg;
reg [31:0] ivtv_yuv_window_setup_82_84;
reg [31:0] ivtv_yuv_window_setup_82_84_reg;
reg [31:0] ivtv_yuv_window_setup_82_85;
reg [31:0] ivtv_yuv_window_setup_82_85_reg;
reg [31:0] ivtv_yuv_window_setup_82_86;
reg [31:0] ivtv_yuv_window_setup_82_86_reg;
reg [31:0] ivtv_yuv_window_setup_87_88;
reg [31:0] ivtv_yuv_window_setup_87_88_reg;
reg [31:0] ivtv_yuv_window_setup_87_89;
reg [31:0] ivtv_yuv_window_setup_87_89_reg;
reg [31:0] ivtv_yuv_window_setup_87_90;
reg [31:0] ivtv_yuv_window_setup_87_90_reg;
reg [31:0] ivtv_yuv_window_setup_87_91;
reg [31:0] ivtv_yuv_window_setup_87_91_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] ivtv_yuv_window_setup_87_92;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] ivtv_yuv_window_setup_87_92_reg;
reg [31:0] ivtv_yuv_window_setup_87_93;
reg [31:0] ivtv_yuv_window_setup_87_93_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] ivtv_yuv_window_setup_87_94;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] ivtv_yuv_window_setup_87_94_reg;
reg [31:0] ivtv_yuv_window_setup_87_95;
reg [31:0] ivtv_yuv_window_setup_87_95_reg;
reg [31:0] ivtv_yuv_window_setup_87_96;
reg [31:0] ivtv_yuv_window_setup_87_96_reg;
reg  ivtv_yuv_window_setup_87_97;
reg  ivtv_yuv_window_setup_87_97_reg;
reg [31:0] ivtv_yuv_window_setup_98_99;
reg [31:0] ivtv_yuv_window_setup_98_99_reg;
reg [31:0] ivtv_yuv_window_setup_98_100;
reg [31:0] ivtv_yuv_window_setup_98_100_reg;
reg [31:0] ivtv_yuv_window_setup_98_101;
reg [31:0] ivtv_yuv_window_setup_98_101_reg;
reg [31:0] ivtv_yuv_window_setup_98_102;
reg [31:0] ivtv_yuv_window_setup_98_102_reg;
reg [31:0] ivtv_yuv_window_setup_98_103;
reg [31:0] ivtv_yuv_window_setup_98_103_reg;
reg [31:0] ivtv_yuv_window_setup_104_105;
reg [31:0] ivtv_yuv_window_setup_104_105_reg;
reg [31:0] ivtv_yuv_window_setup_106_107;
reg [31:0] ivtv_yuv_window_setup_106_107_reg;
reg [31:0] ivtv_yuv_window_setup_106_108;
reg [31:0] ivtv_yuv_window_setup_106_108_reg;
reg [31:0] ivtv_yuv_window_setup_106_109;
reg [31:0] ivtv_yuv_window_setup_106_109_reg;
reg [31:0] ivtv_yuv_window_setup_106_110;
reg [31:0] ivtv_yuv_window_setup_106_110_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] ivtv_yuv_window_setup_106_111;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] ivtv_yuv_window_setup_106_111_reg;
reg [31:0] ivtv_yuv_window_setup_106_112;
reg [31:0] ivtv_yuv_window_setup_106_112_reg;
reg [31:0] ivtv_yuv_window_setup_106_113;
reg [31:0] ivtv_yuv_window_setup_106_113_reg;
reg [31:0] ivtv_yuv_window_setup_106_114;
reg [31:0] ivtv_yuv_window_setup_106_114_reg;
reg  ivtv_yuv_window_setup_106_115;
reg  ivtv_yuv_window_setup_106_115_reg;
reg [31:0] ivtv_yuv_window_setup_116_117;
reg [31:0] ivtv_yuv_window_setup_116_117_reg;
reg [31:0] ivtv_yuv_window_setup_116_118;
reg [31:0] ivtv_yuv_window_setup_116_118_reg;
reg [31:0] ivtv_yuv_window_setup_116_119;
reg [31:0] ivtv_yuv_window_setup_116_119_reg;
reg [31:0] ivtv_yuv_window_setup_116_120;
reg [31:0] ivtv_yuv_window_setup_116_120_reg;
reg [31:0] ivtv_yuv_window_setup_121_122;
reg [31:0] ivtv_yuv_window_setup_121_122_reg;
reg [31:0] ivtv_yuv_window_setup_121_123;
reg [31:0] ivtv_yuv_window_setup_121_123_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] ivtv_yuv_window_setup_121_124;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] ivtv_yuv_window_setup_121_124_reg;
reg [31:0] ivtv_yuv_window_setup_121_125;
reg [31:0] ivtv_yuv_window_setup_121_125_reg;
reg  ivtv_yuv_window_setup_121_126;
reg  ivtv_yuv_window_setup_121_126_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] ivtv_yuv_window_setup_127_128;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] ivtv_yuv_window_setup_127_128_reg;
reg [31:0] ivtv_yuv_window_setup_127_129;
reg [31:0] ivtv_yuv_window_setup_127_129_reg;
reg [31:0] ivtv_yuv_window_setup_127_130;
reg [31:0] ivtv_yuv_window_setup_127_130_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] ivtv_yuv_window_setup_127_131;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] ivtv_yuv_window_setup_127_131_reg;
reg [31:0] ivtv_yuv_window_setup_127_132;
reg [31:0] ivtv_yuv_window_setup_127_132_reg;
reg [31:0] ivtv_yuv_window_setup_127_133;
reg [31:0] ivtv_yuv_window_setup_127_133_reg;
reg [31:0] ivtv_yuv_window_setup_134_135;
reg [31:0] ivtv_yuv_window_setup_134_135_reg;
reg [31:0] ivtv_yuv_window_setup_134_136;
reg [31:0] ivtv_yuv_window_setup_134_136_reg;
reg [31:0] ivtv_yuv_window_setup_134_137;
reg [31:0] ivtv_yuv_window_setup_134_137_reg;
reg [31:0] ivtv_yuv_window_setup_134_138;
reg [31:0] ivtv_yuv_window_setup_134_138_reg;
reg [31:0] ivtv_yuv_window_setup_134_139;
reg [31:0] ivtv_yuv_window_setup_134_139_reg;
reg [31:0] ivtv_yuv_window_setup_134_140;
reg [31:0] ivtv_yuv_window_setup_134_140_reg;
reg [31:0] ivtv_yuv_window_setup_134_141;
reg [31:0] ivtv_yuv_window_setup_134_141_reg;
reg [31:0] ivtv_yuv_window_setup_134_142;
reg [31:0] ivtv_yuv_window_setup_134_142_reg;
reg [31:0] ivtv_yuv_window_setup_134_143;
reg [31:0] ivtv_yuv_window_setup_134_143_reg;
reg [31:0] ivtv_yuv_window_setup_134_144;
reg [31:0] ivtv_yuv_window_setup_134_144_reg;
reg [31:0] ivtv_yuv_window_setup_134_145;
reg [31:0] ivtv_yuv_window_setup_134_145_reg;
reg [31:0] ivtv_yuv_window_setup_134_146;
reg [31:0] ivtv_yuv_window_setup_134_146_reg;
reg [31:0] ivtv_yuv_window_setup_134_147;
reg [31:0] ivtv_yuv_window_setup_134_147_reg;
reg [31:0] ivtv_yuv_window_setup_134_148;
reg [31:0] ivtv_yuv_window_setup_134_148_reg;
reg [31:0] ivtv_yuv_window_setup_134_149;
reg [31:0] ivtv_yuv_window_setup_134_149_reg;
reg  ivtv_yuv_window_setup_134_150;
reg  ivtv_yuv_window_setup_134_150_reg;
reg [31:0] ivtv_yuv_window_setup_151_152;
reg [31:0] ivtv_yuv_window_setup_151_152_reg;
reg [31:0] ivtv_yuv_window_setup_151_153;
reg [31:0] ivtv_yuv_window_setup_151_153_reg;
reg [31:0] ivtv_yuv_window_setup_151_154;
reg [31:0] ivtv_yuv_window_setup_151_154_reg;
reg [31:0] ivtv_yuv_window_setup_151_155;
reg [31:0] ivtv_yuv_window_setup_151_155_reg;
reg [31:0] ivtv_yuv_window_setup_156_157;
reg [31:0] ivtv_yuv_window_setup_156_157_reg;
reg  ivtv_yuv_window_setup_156_158;
reg  ivtv_yuv_window_setup_156_158_reg;
reg [31:0] ivtv_yuv_window_setup_159_160;
reg [31:0] ivtv_yuv_window_setup_159_160_reg;
reg [31:0] ivtv_yuv_window_setup_159_161;
reg [31:0] ivtv_yuv_window_setup_159_161_reg;
reg [31:0] ivtv_yuv_window_setup_159_162;
reg [31:0] ivtv_yuv_window_setup_159_162_reg;
reg [31:0] ivtv_yuv_window_setup_159_163;
reg [31:0] ivtv_yuv_window_setup_159_163_reg;
wire [15:0] legup_pthreadpoll_threadID;
reg [31:0] ivtv_yuv_window_setup_signed_divide_32_0_op0;
reg [31:0] ivtv_yuv_window_setup_signed_divide_32_0_op1;
wire [31:0] lpm_divide_ivtv_yuv_window_setup_55_57_temp_out;
wire [31:0] ivtv_yuv_window_setup_55_57_unused;
reg  lpm_divide_ivtv_yuv_window_setup_55_57_en;
reg [31:0] lpm_divide_ivtv_yuv_window_setup_55_57_out;
reg [31:0] ivtv_yuv_window_setup_signed_divide_32_0;
reg  lpm_divide_ivtv_yuv_window_setup_20_21_en;
reg  lpm_divide_ivtv_yuv_window_setup_20_23_en;
reg  lpm_divide_ivtv_yuv_window_setup_26_34_en;
reg  lpm_divide_ivtv_yuv_window_setup_41_42_en;
reg  lpm_divide_ivtv_yuv_window_setup_41_44_en;
reg  lpm_mult_ivtv_yuv_window_setup_64_65_en;
reg [31:0] ivtv_yuv_window_setup_64_65_stage0_reg;
reg  lpm_mult_ivtv_yuv_window_setup_82_84_en;
reg [31:0] ivtv_yuv_window_setup_82_84_stage0_reg;
reg  lpm_divide_ivtv_yuv_window_setup_87_91_en;
reg  lpm_mult_ivtv_yuv_window_setup_98_99_en;
reg [31:0] ivtv_yuv_window_setup_98_99_stage0_reg;
reg  lpm_mult_ivtv_yuv_window_setup_116_118_en;
reg [31:0] ivtv_yuv_window_setup_116_118_stage0_reg;
reg  lpm_divide_ivtv_yuv_window_setup_134_149_en;
reg  lpm_divide_ivtv_yuv_window_setup_151_153_en;
reg  lpm_divide_ivtv_yuv_window_setup_156_157_en;
reg  lpm_divide_ivtv_yuv_window_setup_159_161_en;

/*   %57 = sdiv i32 %56, %50*/
lpm_divide lpm_divide_ivtv_yuv_window_setup_55_57 (
	.quotient (lpm_divide_ivtv_yuv_window_setup_55_57_temp_out),
	.remain (ivtv_yuv_window_setup_55_57_unused),
	.clock (clk),
	.aclr (1'd0),
	.clken (lpm_divide_ivtv_yuv_window_setup_55_57_en),
	.numer (ivtv_yuv_window_setup_signed_divide_32_0_op0),
	.denom (ivtv_yuv_window_setup_signed_divide_32_0_op1)
);

defparam
	lpm_divide_ivtv_yuv_window_setup_55_57.lpm_pipeline = 32,
	lpm_divide_ivtv_yuv_window_setup_55_57.lpm_widthn = 32,
	lpm_divide_ivtv_yuv_window_setup_55_57.lpm_widthd = 32,
	lpm_divide_ivtv_yuv_window_setup_55_57.lpm_drepresentation = "SIGNED",
	lpm_divide_ivtv_yuv_window_setup_55_57.lpm_nrepresentation = "SIGNED",
	lpm_divide_ivtv_yuv_window_setup_55_57.lpm_hint = "LPM_REMAINDERPOSITIVE=FALSE";

// Local Rams


always @(posedge clk) begin
if (((cur_state == LEGUP_0) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_0;
if (reset == 1'b0 && ^(LEGUP_0) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_0) & (memory_controller_waitrequest == 1'd0)) & (start == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_0_1;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_0_1) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_0) & (memory_controller_waitrequest == 1'd0)) & (start == 1'd0)))
begin
cur_state <= LEGUP_0;
if (reset == 1'b0 && ^(LEGUP_0) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_0_1) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_0_1;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_0_1) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_0_1) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_0_2;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_0_2) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_0_2) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_0_2;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_0_2) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_0_2) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_0_3;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_0_3) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_0_3) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_0_3;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_0_3) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_0_3) & (memory_controller_waitrequest == 1'd0)) & (ivtv_yuv_window_setup_0_3 == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_4_4;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_4_4) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_0_3) & (memory_controller_waitrequest == 1'd0)) & (ivtv_yuv_window_setup_0_3 == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_5_6;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_5_6) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_4_4) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_4_4;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_4_4) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_4_4) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_4_5;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_4_5) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_4_5) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_4_5;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_4_5) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_4_5) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_5_6;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_5_6) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_5_6) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_5_6;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_5_6) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_5_6) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_5_7;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_5_7) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_5_7) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_5_7;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_5_7) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_5_7) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_5_8;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_5_8) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_5_8) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_5_8;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_5_8) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_5_8) & (memory_controller_waitrequest == 1'd0)) & (ivtv_yuv_window_setup_5_9 == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_10_9;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_10_9) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_5_8) & (memory_controller_waitrequest == 1'd0)) & (ivtv_yuv_window_setup_5_9 == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_11_11;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_11_11) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_10_9) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_10_9;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_10_9) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_10_9) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_10_10;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_10_10) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_10_10) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_10_10;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_10_10) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_10_10) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_11_11;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_11_11) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_11_11) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_11_11;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_11_11) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_11_11) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_11_12;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_11_12) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_11_12) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_11_12;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_11_12) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_11_12) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_11_13;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_11_13) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_11_13) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_11_13;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_11_13) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_11_13) & (memory_controller_waitrequest == 1'd0)) & (ivtv_yuv_window_setup_11_19 == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_20_14;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_20_14) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_11_13) & (memory_controller_waitrequest == 1'd0)) & (ivtv_yuv_window_setup_11_19 == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_26_49;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_26_49) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_20_14) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_20_14;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_20_14) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_20_14) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_20_15;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_20_15) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_20_15) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_20_15;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_20_15) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_20_15) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_20_16;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_20_16) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_20_16) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_20_16;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_20_16) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_20_16) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_20_17;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_20_17) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_20_17) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_20_17;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_20_17) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_20_17) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_20_18;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_20_18) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_20_18) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_20_18;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_20_18) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_20_18) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_20_19;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_20_19) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_20_19) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_20_19;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_20_19) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_20_19) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_20_20;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_20_20) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_20_20) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_20_20;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_20_20) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_20_20) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_20_21;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_20_21) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_20_21) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_20_21;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_20_21) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_20_21) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_20_22;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_20_22) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_20_22) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_20_22;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_20_22) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_20_22) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_20_23;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_20_23) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_20_23) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_20_23;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_20_23) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_20_23) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_20_24;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_20_24) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_20_24) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_20_24;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_20_24) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_20_24) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_20_25;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_20_25) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_20_25) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_20_25;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_20_25) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_20_25) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_20_26;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_20_26) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_20_26) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_20_26;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_20_26) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_20_26) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_20_27;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_20_27) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_20_27) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_20_27;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_20_27) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_20_27) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_20_28;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_20_28) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_20_28) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_20_28;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_20_28) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_20_28) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_20_29;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_20_29) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_20_29) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_20_29;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_20_29) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_20_29) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_20_30;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_20_30) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_20_30) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_20_30;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_20_30) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_20_30) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_20_31;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_20_31) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_20_31) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_20_31;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_20_31) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_20_31) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_20_32;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_20_32) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_20_32) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_20_32;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_20_32) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_20_32) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_20_33;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_20_33) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_20_33) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_20_33;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_20_33) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_20_33) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_20_34;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_20_34) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_20_34) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_20_34;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_20_34) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_20_34) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_20_35;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_20_35) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_20_35) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_20_35;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_20_35) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_20_35) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_20_36;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_20_36) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_20_36) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_20_36;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_20_36) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_20_36) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_20_37;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_20_37) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_20_37) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_20_37;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_20_37) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_20_37) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_20_38;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_20_38) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_20_38) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_20_38;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_20_38) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_20_38) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_20_39;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_20_39) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_20_39) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_20_39;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_20_39) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_20_39) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_20_40;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_20_40) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_20_40) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_20_40;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_20_40) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_20_40) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_20_41;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_20_41) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_20_41) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_20_41;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_20_41) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_20_41) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_20_42;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_20_42) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_20_42) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_20_42;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_20_42) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_20_42) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_20_43;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_20_43) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_20_43) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_20_43;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_20_43) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_20_43) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_20_44;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_20_44) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_20_44) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_20_44;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_20_44) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_20_44) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_20_45;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_20_45) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_20_45) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_20_45;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_20_45) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_20_45) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_20_46;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_20_46) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_20_46) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_20_46;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_20_46) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_20_46) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_20_47;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_20_47) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_20_47) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_20_47;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_20_47) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_20_47) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_20_48;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_20_48) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_20_48) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_20_48;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_20_48) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_20_48) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_26_49;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_26_49) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_26_49) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_26_49;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_26_49) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_26_49) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_26_50;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_26_50) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_26_50) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_26_50;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_26_50) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_26_50) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_26_51;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_26_51) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_26_51) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_26_51;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_26_51) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_26_51) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_26_52;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_26_52) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_26_52) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_26_52;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_26_52) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_26_52) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_26_53;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_26_53) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_26_53) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_26_53;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_26_53) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_26_53) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_26_54;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_26_54) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_26_54) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_26_54;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_26_54) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_26_54) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_26_55;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_26_55) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_26_55) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_26_55;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_26_55) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_26_55) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_26_56;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_26_56) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_26_56) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_26_56;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_26_56) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_26_56) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_26_57;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_26_57) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_26_57) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_26_57;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_26_57) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_26_57) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_26_58;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_26_58) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_26_58) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_26_58;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_26_58) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_26_58) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_26_59;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_26_59) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_26_59) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_26_59;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_26_59) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_26_59) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_26_60;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_26_60) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_26_60) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_26_60;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_26_60) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_26_60) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_26_61;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_26_61) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_26_61) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_26_61;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_26_61) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_26_61) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_26_62;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_26_62) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_26_62) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_26_62;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_26_62) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_26_62) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_26_63;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_26_63) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_26_63) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_26_63;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_26_63) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_26_63) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_26_64;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_26_64) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_26_64) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_26_64;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_26_64) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_26_64) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_26_65;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_26_65) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_26_65) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_26_65;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_26_65) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_26_65) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_26_66;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_26_66) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_26_66) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_26_66;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_26_66) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_26_66) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_26_67;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_26_67) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_26_67) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_26_67;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_26_67) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_26_67) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_26_68;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_26_68) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_26_68) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_26_68;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_26_68) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_26_68) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_26_69;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_26_69) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_26_69) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_26_69;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_26_69) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_26_69) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_26_70;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_26_70) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_26_70) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_26_70;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_26_70) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_26_70) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_26_71;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_26_71) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_26_71) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_26_71;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_26_71) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_26_71) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_26_72;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_26_72) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_26_72) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_26_72;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_26_72) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_26_72) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_26_73;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_26_73) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_26_73) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_26_73;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_26_73) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_26_73) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_26_74;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_26_74) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_26_74) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_26_74;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_26_74) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_26_74) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_26_75;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_26_75) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_26_75) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_26_75;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_26_75) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_26_75) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_26_76;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_26_76) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_26_76) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_26_76;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_26_76) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_26_76) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_26_77;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_26_77) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_26_77) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_26_77;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_26_77) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_26_77) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_26_78;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_26_78) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_26_78) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_26_78;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_26_78) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_26_78) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_26_79;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_26_79) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_26_79) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_26_79;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_26_79) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_26_79) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_26_80;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_26_80) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_26_80) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_26_80;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_26_80) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_26_80) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_26_81;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_26_81) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_26_81) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_26_81;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_26_81) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_26_81) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_26_82;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_26_82) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_26_82) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_26_82;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_26_82) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_26_82) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_26_83;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_26_83) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_26_83) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_26_83;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_26_83) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_26_83) & (memory_controller_waitrequest == 1'd0)) & (ivtv_yuv_window_setup_26_35 == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_36_84;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_36_84) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_26_83) & (memory_controller_waitrequest == 1'd0)) & (ivtv_yuv_window_setup_26_35 == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_47_121;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_47_121) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_36_84) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_36_84;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_36_84) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_36_84) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_36_85;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_36_85) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_36_85) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_36_85;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_36_85) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_36_85) & (memory_controller_waitrequest == 1'd0)) & (ivtv_yuv_window_setup_36_40_reg == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_41_86;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_41_86) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_36_85) & (memory_controller_waitrequest == 1'd0)) & (ivtv_yuv_window_setup_36_40_reg == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_47_121;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_47_121) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_41_86) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_41_86;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_41_86) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_41_86) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_41_87;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_41_87) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_41_87) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_41_87;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_41_87) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_41_87) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_41_88;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_41_88) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_41_88) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_41_88;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_41_88) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_41_88) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_41_89;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_41_89) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_41_89) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_41_89;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_41_89) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_41_89) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_41_90;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_41_90) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_41_90) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_41_90;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_41_90) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_41_90) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_41_91;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_41_91) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_41_91) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_41_91;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_41_91) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_41_91) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_41_92;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_41_92) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_41_92) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_41_92;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_41_92) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_41_92) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_41_93;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_41_93) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_41_93) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_41_93;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_41_93) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_41_93) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_41_94;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_41_94) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_41_94) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_41_94;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_41_94) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_41_94) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_41_95;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_41_95) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_41_95) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_41_95;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_41_95) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_41_95) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_41_96;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_41_96) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_41_96) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_41_96;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_41_96) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_41_96) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_41_97;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_41_97) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_41_97) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_41_97;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_41_97) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_41_97) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_41_98;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_41_98) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_41_98) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_41_98;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_41_98) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_41_98) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_41_99;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_41_99) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_41_99) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_41_99;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_41_99) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_41_99) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_41_100;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_41_100) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_41_100) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_41_100;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_41_100) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_41_100) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_41_101;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_41_101) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_41_101) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_41_101;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_41_101) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_41_101) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_41_102;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_41_102) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_41_102) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_41_102;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_41_102) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_41_102) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_41_103;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_41_103) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_41_103) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_41_103;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_41_103) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_41_103) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_41_104;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_41_104) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_41_104) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_41_104;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_41_104) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_41_104) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_41_105;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_41_105) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_41_105) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_41_105;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_41_105) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_41_105) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_41_106;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_41_106) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_41_106) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_41_106;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_41_106) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_41_106) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_41_107;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_41_107) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_41_107) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_41_107;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_41_107) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_41_107) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_41_108;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_41_108) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_41_108) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_41_108;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_41_108) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_41_108) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_41_109;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_41_109) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_41_109) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_41_109;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_41_109) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_41_109) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_41_110;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_41_110) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_41_110) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_41_110;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_41_110) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_41_110) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_41_111;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_41_111) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_41_111) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_41_111;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_41_111) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_41_111) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_41_112;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_41_112) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_41_112) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_41_112;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_41_112) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_41_112) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_41_113;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_41_113) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_41_113) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_41_113;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_41_113) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_41_113) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_41_114;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_41_114) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_41_114) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_41_114;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_41_114) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_41_114) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_41_115;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_41_115) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_41_115) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_41_115;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_41_115) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_41_115) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_41_116;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_41_116) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_41_116) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_41_116;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_41_116) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_41_116) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_41_117;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_41_117) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_41_117) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_41_117;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_41_117) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_41_117) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_41_118;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_41_118) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_41_118) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_41_118;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_41_118) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_41_118) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_41_119;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_41_119) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_41_119) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_41_119;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_41_119) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_41_119) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_41_120;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_41_120) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_41_120) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_41_120;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_41_120) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_41_120) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_47_121;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_47_121) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_47_121) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_47_121;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_47_121) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_47_121) & (memory_controller_waitrequest == 1'd0)) & (ivtv_yuv_window_setup_47_or_cond4 == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_164_354;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_164_354) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_47_121) & (memory_controller_waitrequest == 1'd0)) & (ivtv_yuv_window_setup_47_or_cond4 == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_55_122;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_55_122) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_55_122) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_55_122;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_55_122) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_55_122) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_55_123;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_55_123) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_55_123) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_55_123;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_55_123) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_55_123) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_55_124;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_55_124) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_55_124) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_55_124;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_55_124) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_55_124) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_55_125;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_55_125) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_55_125) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_55_125;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_55_125) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_55_125) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_55_126;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_55_126) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_55_126) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_55_126;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_55_126) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_55_126) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_55_127;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_55_127) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_55_127) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_55_127;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_55_127) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_55_127) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_55_128;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_55_128) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_55_128) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_55_128;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_55_128) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_55_128) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_55_129;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_55_129) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_55_129) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_55_129;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_55_129) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_55_129) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_55_130;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_55_130) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_55_130) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_55_130;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_55_130) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_55_130) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_55_131;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_55_131) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_55_131) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_55_131;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_55_131) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_55_131) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_55_132;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_55_132) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_55_132) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_55_132;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_55_132) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_55_132) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_55_133;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_55_133) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_55_133) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_55_133;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_55_133) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_55_133) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_55_134;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_55_134) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_55_134) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_55_134;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_55_134) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_55_134) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_55_135;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_55_135) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_55_135) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_55_135;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_55_135) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_55_135) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_55_136;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_55_136) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_55_136) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_55_136;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_55_136) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_55_136) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_55_137;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_55_137) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_55_137) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_55_137;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_55_137) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_55_137) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_55_138;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_55_138) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_55_138) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_55_138;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_55_138) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_55_138) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_55_139;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_55_139) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_55_139) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_55_139;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_55_139) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_55_139) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_55_140;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_55_140) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_55_140) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_55_140;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_55_140) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_55_140) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_55_141;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_55_141) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_55_141) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_55_141;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_55_141) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_55_141) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_55_142;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_55_142) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_55_142) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_55_142;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_55_142) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_55_142) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_55_143;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_55_143) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_55_143) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_55_143;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_55_143) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_55_143) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_55_144;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_55_144) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_55_144) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_55_144;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_55_144) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_55_144) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_55_145;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_55_145) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_55_145) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_55_145;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_55_145) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_55_145) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_55_146;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_55_146) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_55_146) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_55_146;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_55_146) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_55_146) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_55_147;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_55_147) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_55_147) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_55_147;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_55_147) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_55_147) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_55_148;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_55_148) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_55_148) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_55_148;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_55_148) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_55_148) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_55_149;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_55_149) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_55_149) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_55_149;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_55_149) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_55_149) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_55_150;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_55_150) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_55_150) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_55_150;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_55_150) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_55_150) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_55_151;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_55_151) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_55_151) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_55_151;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_55_151) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_55_151) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_55_152;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_55_152) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_55_152) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_55_152;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_55_152) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_55_152) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_55_153;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_55_153) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_55_153) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_55_153;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_55_153) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_55_153) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_55_154;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_55_154) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_55_154) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_55_154;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_55_154) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_55_154) & (memory_controller_waitrequest == 1'd0)) & (ivtv_yuv_window_setup_55_63_reg == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_64_155;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_64_155) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_55_154) & (memory_controller_waitrequest == 1'd0)) & (ivtv_yuv_window_setup_55_63_reg == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_70_159;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_70_159) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_64_155) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_64_155;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_64_155) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_64_155) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_64_156;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_64_156) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_64_156) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_64_156;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_64_156) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_64_156) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_64_157;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_64_157) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_64_157) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_64_157;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_64_157) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_64_157) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_64_158;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_64_158) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_64_158) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_64_158;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_64_158) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_64_158) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_72_160;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_72_160) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_70_159) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_70_159;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_70_159) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_70_159) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_72_160;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_72_160) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_72_160) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_72_160;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_72_160) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_72_160) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_72_161;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_72_161) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_72_161) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_72_161;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_72_161) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_72_161) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_72_162;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_72_162) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_72_162) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_72_162;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_72_162) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_72_162) & (memory_controller_waitrequest == 1'd0)) & (ivtv_yuv_window_setup_72_81 == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_82_163;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_82_163) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_72_162) & (memory_controller_waitrequest == 1'd0)) & (ivtv_yuv_window_setup_72_81 == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_87_166;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_87_166) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_82_163) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_82_163;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_82_163) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_82_163) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_82_164;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_82_164) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_82_164) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_82_164;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_82_164) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_82_164) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_82_165;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_82_165) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_82_165) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_82_165;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_82_165) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_82_165) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_87_166;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_87_166) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_87_166) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_87_166;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_87_166) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_87_166) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_87_167;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_87_167) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_87_167) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_87_167;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_87_167) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_87_167) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_87_168;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_87_168) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_87_168) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_87_168;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_87_168) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_87_168) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_87_169;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_87_169) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_87_169) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_87_169;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_87_169) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_87_169) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_87_170;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_87_170) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_87_170) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_87_170;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_87_170) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_87_170) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_87_171;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_87_171) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_87_171) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_87_171;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_87_171) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_87_171) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_87_172;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_87_172) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_87_172) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_87_172;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_87_172) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_87_172) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_87_173;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_87_173) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_87_173) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_87_173;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_87_173) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_87_173) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_87_174;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_87_174) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_87_174) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_87_174;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_87_174) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_87_174) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_87_175;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_87_175) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_87_175) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_87_175;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_87_175) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_87_175) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_87_176;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_87_176) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_87_176) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_87_176;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_87_176) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_87_176) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_87_177;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_87_177) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_87_177) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_87_177;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_87_177) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_87_177) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_87_178;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_87_178) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_87_178) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_87_178;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_87_178) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_87_178) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_87_179;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_87_179) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_87_179) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_87_179;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_87_179) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_87_179) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_87_180;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_87_180) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_87_180) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_87_180;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_87_180) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_87_180) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_87_181;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_87_181) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_87_181) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_87_181;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_87_181) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_87_181) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_87_182;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_87_182) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_87_182) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_87_182;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_87_182) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_87_182) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_87_183;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_87_183) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_87_183) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_87_183;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_87_183) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_87_183) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_87_184;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_87_184) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_87_184) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_87_184;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_87_184) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_87_184) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_87_185;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_87_185) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_87_185) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_87_185;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_87_185) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_87_185) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_87_186;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_87_186) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_87_186) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_87_186;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_87_186) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_87_186) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_87_187;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_87_187) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_87_187) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_87_187;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_87_187) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_87_187) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_87_188;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_87_188) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_87_188) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_87_188;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_87_188) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_87_188) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_87_189;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_87_189) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_87_189) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_87_189;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_87_189) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_87_189) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_87_190;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_87_190) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_87_190) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_87_190;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_87_190) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_87_190) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_87_191;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_87_191) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_87_191) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_87_191;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_87_191) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_87_191) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_87_192;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_87_192) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_87_192) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_87_192;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_87_192) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_87_192) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_87_193;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_87_193) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_87_193) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_87_193;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_87_193) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_87_193) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_87_194;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_87_194) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_87_194) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_87_194;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_87_194) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_87_194) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_87_195;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_87_195) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_87_195) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_87_195;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_87_195) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_87_195) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_87_196;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_87_196) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_87_196) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_87_196;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_87_196) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_87_196) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_87_197;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_87_197) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_87_197) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_87_197;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_87_197) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_87_197) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_87_198;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_87_198) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_87_198) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_87_198;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_87_198) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_87_198) & (memory_controller_waitrequest == 1'd0)) & (ivtv_yuv_window_setup_87_97_reg == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_98_199;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_98_199) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_87_198) & (memory_controller_waitrequest == 1'd0)) & (ivtv_yuv_window_setup_87_97_reg == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_104_203;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_104_203) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_98_199) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_98_199;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_98_199) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_98_199) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_98_200;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_98_200) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_98_200) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_98_200;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_98_200) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_98_200) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_98_201;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_98_201) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_98_201) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_98_201;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_98_201) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_98_201) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_98_202;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_98_202) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_98_202) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_98_202;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_98_202) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_98_202) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_106_204;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_106_204) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_104_203) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_104_203;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_104_203) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_104_203) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_106_204;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_106_204) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_106_204) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_106_204;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_106_204) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_106_204) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_106_205;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_106_205) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_106_205) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_106_205;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_106_205) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_106_205) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_106_206;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_106_206) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_106_206) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_106_206;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_106_206) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_106_206) & (memory_controller_waitrequest == 1'd0)) & (ivtv_yuv_window_setup_106_115 == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_116_207;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_116_207) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_106_206) & (memory_controller_waitrequest == 1'd0)) & (ivtv_yuv_window_setup_106_115 == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_121_210;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_121_210) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_116_207) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_116_207;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_116_207) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_116_207) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_116_208;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_116_208) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_116_208) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_116_208;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_116_208) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_116_208) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_116_209;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_116_209) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_116_209) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_116_209;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_116_209) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_116_209) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_121_210;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_121_210) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_121_210) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_121_210;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_121_210) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_121_210) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_121_211;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_121_211) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_121_211) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_121_211;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_121_211) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_121_211) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_121_212;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_121_212) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_121_212) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_121_212;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_121_212) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_121_212) & (memory_controller_waitrequest == 1'd0)) & (ivtv_yuv_window_setup_121_126 == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_134_220;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_134_220) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_121_212) & (memory_controller_waitrequest == 1'd0)) & (ivtv_yuv_window_setup_121_126 == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_127_213;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_127_213) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_127_213) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_127_213;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_127_213) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_127_213) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_127_214;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_127_214) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_127_214) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_127_214;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_127_214) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_127_214) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_127_215;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_127_215) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_127_215) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_127_215;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_127_215) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_127_215) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_127_216;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_127_216) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_127_216) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_127_216;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_127_216) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_127_216) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_127_217;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_127_217) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_127_217) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_127_217;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_127_217) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_127_217) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_127_218;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_127_218) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_127_218) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_127_218;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_127_218) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_127_218) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_127_219;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_127_219) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_127_219) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_127_219;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_127_219) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_127_219) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_134_220;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_134_220) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_134_220) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_134_220;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_134_220) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_134_220) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_134_221;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_134_221) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_134_221) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_134_221;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_134_221) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_134_221) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_134_222;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_134_222) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_134_222) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_134_222;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_134_222) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_134_222) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_134_223;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_134_223) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_134_223) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_134_223;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_134_223) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_134_223) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_134_224;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_134_224) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_134_224) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_134_224;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_134_224) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_134_224) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_134_225;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_134_225) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_134_225) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_134_225;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_134_225) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_134_225) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_134_226;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_134_226) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_134_226) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_134_226;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_134_226) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_134_226) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_134_227;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_134_227) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_134_227) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_134_227;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_134_227) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_134_227) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_134_228;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_134_228) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_134_228) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_134_228;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_134_228) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_134_228) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_134_229;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_134_229) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_134_229) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_134_229;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_134_229) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_134_229) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_134_230;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_134_230) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_134_230) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_134_230;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_134_230) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_134_230) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_134_231;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_134_231) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_134_231) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_134_231;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_134_231) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_134_231) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_134_232;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_134_232) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_134_232) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_134_232;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_134_232) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_134_232) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_134_233;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_134_233) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_134_233) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_134_233;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_134_233) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_134_233) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_134_234;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_134_234) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_134_234) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_134_234;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_134_234) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_134_234) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_134_235;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_134_235) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_134_235) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_134_235;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_134_235) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_134_235) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_134_236;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_134_236) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_134_236) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_134_236;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_134_236) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_134_236) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_134_237;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_134_237) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_134_237) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_134_237;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_134_237) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_134_237) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_134_238;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_134_238) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_134_238) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_134_238;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_134_238) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_134_238) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_134_239;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_134_239) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_134_239) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_134_239;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_134_239) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_134_239) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_134_240;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_134_240) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_134_240) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_134_240;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_134_240) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_134_240) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_134_241;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_134_241) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_134_241) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_134_241;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_134_241) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_134_241) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_134_242;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_134_242) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_134_242) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_134_242;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_134_242) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_134_242) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_134_243;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_134_243) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_134_243) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_134_243;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_134_243) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_134_243) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_134_244;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_134_244) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_134_244) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_134_244;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_134_244) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_134_244) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_134_245;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_134_245) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_134_245) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_134_245;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_134_245) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_134_245) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_134_246;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_134_246) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_134_246) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_134_246;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_134_246) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_134_246) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_134_247;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_134_247) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_134_247) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_134_247;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_134_247) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_134_247) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_134_248;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_134_248) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_134_248) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_134_248;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_134_248) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_134_248) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_134_249;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_134_249) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_134_249) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_134_249;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_134_249) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_134_249) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_134_250;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_134_250) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_134_250) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_134_250;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_134_250) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_134_250) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_134_251;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_134_251) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_134_251) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_134_251;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_134_251) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_134_251) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_134_252;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_134_252) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_134_252) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_134_252;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_134_252) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_134_252) & (memory_controller_waitrequest == 1'd0)) & (ivtv_yuv_window_setup_134_150 == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_151_253;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_151_253) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_134_252) & (memory_controller_waitrequest == 1'd0)) & (ivtv_yuv_window_setup_134_150 == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_156_287;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_156_287) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_151_253) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_151_253;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_151_253) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_151_253) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_151_254;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_151_254) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_151_254) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_151_254;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_151_254) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_151_254) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_151_255;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_151_255) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_151_255) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_151_255;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_151_255) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_151_255) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_151_256;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_151_256) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_151_256) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_151_256;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_151_256) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_151_256) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_151_257;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_151_257) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_151_257) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_151_257;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_151_257) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_151_257) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_151_258;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_151_258) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_151_258) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_151_258;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_151_258) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_151_258) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_151_259;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_151_259) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_151_259) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_151_259;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_151_259) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_151_259) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_151_260;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_151_260) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_151_260) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_151_260;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_151_260) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_151_260) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_151_261;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_151_261) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_151_261) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_151_261;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_151_261) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_151_261) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_151_262;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_151_262) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_151_262) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_151_262;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_151_262) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_151_262) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_151_263;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_151_263) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_151_263) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_151_263;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_151_263) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_151_263) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_151_264;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_151_264) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_151_264) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_151_264;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_151_264) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_151_264) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_151_265;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_151_265) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_151_265) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_151_265;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_151_265) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_151_265) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_151_266;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_151_266) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_151_266) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_151_266;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_151_266) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_151_266) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_151_267;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_151_267) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_151_267) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_151_267;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_151_267) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_151_267) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_151_268;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_151_268) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_151_268) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_151_268;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_151_268) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_151_268) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_151_269;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_151_269) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_151_269) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_151_269;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_151_269) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_151_269) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_151_270;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_151_270) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_151_270) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_151_270;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_151_270) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_151_270) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_151_271;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_151_271) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_151_271) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_151_271;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_151_271) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_151_271) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_151_272;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_151_272) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_151_272) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_151_272;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_151_272) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_151_272) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_151_273;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_151_273) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_151_273) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_151_273;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_151_273) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_151_273) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_151_274;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_151_274) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_151_274) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_151_274;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_151_274) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_151_274) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_151_275;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_151_275) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_151_275) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_151_275;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_151_275) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_151_275) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_151_276;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_151_276) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_151_276) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_151_276;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_151_276) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_151_276) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_151_277;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_151_277) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_151_277) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_151_277;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_151_277) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_151_277) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_151_278;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_151_278) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_151_278) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_151_278;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_151_278) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_151_278) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_151_279;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_151_279) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_151_279) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_151_279;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_151_279) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_151_279) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_151_280;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_151_280) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_151_280) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_151_280;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_151_280) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_151_280) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_151_281;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_151_281) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_151_281) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_151_281;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_151_281) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_151_281) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_151_282;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_151_282) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_151_282) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_151_282;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_151_282) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_151_282) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_151_283;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_151_283) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_151_283) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_151_283;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_151_283) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_151_283) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_151_284;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_151_284) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_151_284) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_151_284;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_151_284) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_151_284) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_151_285;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_151_285) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_151_285) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_151_285;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_151_285) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_151_285) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_151_286;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_151_286) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_151_286) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_151_286;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_151_286) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_151_286) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_156_287;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_156_287) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_156_287) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_156_287;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_156_287) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_156_287) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_156_288;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_156_288) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_156_288) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_156_288;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_156_288) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_156_288) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_156_289;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_156_289) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_156_289) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_156_289;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_156_289) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_156_289) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_156_290;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_156_290) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_156_290) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_156_290;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_156_290) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_156_290) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_156_291;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_156_291) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_156_291) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_156_291;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_156_291) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_156_291) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_156_292;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_156_292) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_156_292) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_156_292;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_156_292) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_156_292) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_156_293;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_156_293) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_156_293) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_156_293;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_156_293) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_156_293) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_156_294;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_156_294) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_156_294) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_156_294;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_156_294) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_156_294) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_156_295;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_156_295) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_156_295) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_156_295;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_156_295) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_156_295) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_156_296;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_156_296) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_156_296) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_156_296;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_156_296) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_156_296) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_156_297;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_156_297) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_156_297) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_156_297;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_156_297) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_156_297) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_156_298;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_156_298) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_156_298) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_156_298;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_156_298) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_156_298) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_156_299;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_156_299) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_156_299) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_156_299;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_156_299) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_156_299) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_156_300;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_156_300) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_156_300) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_156_300;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_156_300) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_156_300) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_156_301;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_156_301) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_156_301) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_156_301;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_156_301) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_156_301) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_156_302;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_156_302) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_156_302) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_156_302;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_156_302) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_156_302) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_156_303;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_156_303) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_156_303) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_156_303;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_156_303) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_156_303) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_156_304;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_156_304) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_156_304) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_156_304;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_156_304) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_156_304) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_156_305;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_156_305) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_156_305) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_156_305;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_156_305) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_156_305) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_156_306;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_156_306) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_156_306) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_156_306;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_156_306) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_156_306) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_156_307;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_156_307) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_156_307) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_156_307;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_156_307) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_156_307) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_156_308;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_156_308) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_156_308) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_156_308;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_156_308) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_156_308) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_156_309;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_156_309) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_156_309) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_156_309;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_156_309) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_156_309) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_156_310;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_156_310) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_156_310) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_156_310;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_156_310) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_156_310) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_156_311;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_156_311) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_156_311) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_156_311;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_156_311) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_156_311) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_156_312;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_156_312) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_156_312) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_156_312;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_156_312) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_156_312) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_156_313;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_156_313) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_156_313) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_156_313;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_156_313) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_156_313) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_156_314;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_156_314) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_156_314) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_156_314;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_156_314) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_156_314) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_156_315;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_156_315) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_156_315) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_156_315;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_156_315) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_156_315) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_156_316;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_156_316) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_156_316) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_156_316;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_156_316) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_156_316) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_156_317;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_156_317) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_156_317) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_156_317;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_156_317) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_156_317) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_156_318;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_156_318) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_156_318) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_156_318;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_156_318) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_156_318) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_156_319;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_156_319) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_156_319) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_156_319;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_156_319) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_156_319) & (memory_controller_waitrequest == 1'd0)) & (ivtv_yuv_window_setup_156_158 == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_159_320;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_159_320) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_156_319) & (memory_controller_waitrequest == 1'd0)) & (ivtv_yuv_window_setup_156_158 == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_164_354;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_164_354) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_159_320) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_159_320;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_159_320) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_159_320) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_159_321;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_159_321) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_159_321) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_159_321;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_159_321) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_159_321) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_159_322;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_159_322) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_159_322) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_159_322;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_159_322) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_159_322) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_159_323;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_159_323) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_159_323) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_159_323;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_159_323) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_159_323) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_159_324;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_159_324) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_159_324) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_159_324;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_159_324) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_159_324) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_159_325;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_159_325) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_159_325) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_159_325;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_159_325) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_159_325) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_159_326;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_159_326) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_159_326) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_159_326;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_159_326) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_159_326) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_159_327;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_159_327) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_159_327) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_159_327;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_159_327) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_159_327) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_159_328;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_159_328) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_159_328) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_159_328;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_159_328) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_159_328) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_159_329;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_159_329) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_159_329) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_159_329;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_159_329) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_159_329) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_159_330;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_159_330) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_159_330) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_159_330;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_159_330) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_159_330) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_159_331;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_159_331) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_159_331) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_159_331;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_159_331) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_159_331) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_159_332;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_159_332) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_159_332) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_159_332;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_159_332) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_159_332) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_159_333;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_159_333) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_159_333) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_159_333;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_159_333) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_159_333) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_159_334;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_159_334) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_159_334) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_159_334;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_159_334) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_159_334) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_159_335;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_159_335) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_159_335) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_159_335;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_159_335) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_159_335) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_159_336;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_159_336) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_159_336) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_159_336;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_159_336) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_159_336) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_159_337;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_159_337) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_159_337) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_159_337;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_159_337) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_159_337) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_159_338;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_159_338) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_159_338) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_159_338;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_159_338) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_159_338) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_159_339;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_159_339) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_159_339) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_159_339;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_159_339) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_159_339) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_159_340;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_159_340) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_159_340) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_159_340;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_159_340) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_159_340) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_159_341;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_159_341) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_159_341) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_159_341;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_159_341) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_159_341) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_159_342;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_159_342) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_159_342) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_159_342;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_159_342) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_159_342) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_159_343;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_159_343) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_159_343) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_159_343;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_159_343) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_159_343) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_159_344;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_159_344) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_159_344) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_159_344;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_159_344) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_159_344) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_159_345;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_159_345) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_159_345) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_159_345;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_159_345) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_159_345) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_159_346;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_159_346) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_159_346) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_159_346;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_159_346) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_159_346) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_159_347;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_159_347) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_159_347) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_159_347;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_159_347) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_159_347) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_159_348;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_159_348) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_159_348) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_159_348;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_159_348) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_159_348) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_159_349;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_159_349) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_159_349) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_159_349;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_159_349) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_159_349) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_159_350;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_159_350) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_159_350) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_159_350;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_159_350) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_159_350) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_159_351;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_159_351) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_159_351) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_159_351;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_159_351) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_159_351) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_159_352;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_159_352) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_159_352) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_159_352;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_159_352) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_159_352) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_159_353;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_159_353) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_159_353) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_159_353;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_159_353) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_159_353) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_164_354;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_164_354) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_164_354) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_ivtv_yuv_window_setup_BB_164_354;
if (reset == 1'b0 && ^(LEGUP_F_ivtv_yuv_window_setup_BB_164_354) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_164_354) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_0;
if (reset == 1'b0 && ^(LEGUP_0) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((reset == 1'd1))
begin
cur_state <= 9'd0;
if (reset == 1'b0 && ^(9'd0) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
end
always @(*) begin
/* ivtv_yuv_window_setup: %0*/
/*   %1 = getelementptr inbounds %struct.yuv_frame_info* %f, i32 0, i32 0*/
begin
ivtv_yuv_window_setup_0_1 = arg_f;
end
end
always @(posedge clk) begin
/* ivtv_yuv_window_setup: %0*/
/*   %1 = getelementptr inbounds %struct.yuv_frame_info* %f, i32 0, i32 0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_0_1))
begin
ivtv_yuv_window_setup_0_1_reg <= ivtv_yuv_window_setup_0_1;
if (reset == 1'b0 && ^(ivtv_yuv_window_setup_0_1) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to ivtv_yuv_window_setup_0_1_reg"); $finish; end
end
end
always @(*) begin
/* ivtv_yuv_window_setup: %0*/
/*   %2 = load i32* %1, align 4, !tbaa !0*/
begin
ivtv_yuv_window_setup_0_2 = memory_controller_out_a[31:0];
end
end
always @(posedge clk) begin
/* ivtv_yuv_window_setup: %0*/
/*   %2 = load i32* %1, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_0_3))
begin
ivtv_yuv_window_setup_0_2_reg <= ivtv_yuv_window_setup_0_2;
if (reset == 1'b0 && ^(ivtv_yuv_window_setup_0_2) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to ivtv_yuv_window_setup_0_2_reg"); $finish; end
end
end
always @(*) begin
/* ivtv_yuv_window_setup: %0*/
/*   %3 = icmp slt i32 %2, 0*/
begin
ivtv_yuv_window_setup_0_3 = ($signed(ivtv_yuv_window_setup_0_2) < $signed(32'd0));
end
end
always @(posedge clk) begin
/* ivtv_yuv_window_setup: %0*/
/*   %3 = icmp slt i32 %2, 0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_0_3))
begin
ivtv_yuv_window_setup_0_3_reg <= ivtv_yuv_window_setup_0_3;
if (reset == 1'b0 && ^(ivtv_yuv_window_setup_0_3) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to ivtv_yuv_window_setup_0_3_reg"); $finish; end
end
end
always @(*) begin
/* ivtv_yuv_window_setup: %5*/
/*   %6 = phi i32 [ 0, %4 ], [ %2, %0 ]*/
if ((((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_0_3) & (memory_controller_waitrequest == 1'd0)) & (ivtv_yuv_window_setup_0_3 == 1'd0)))
begin
ivtv_yuv_window_setup_5_6 = ivtv_yuv_window_setup_0_2;
end
/* ivtv_yuv_window_setup: %5*/
/*   %6 = phi i32 [ 0, %4 ], [ %2, %0 ]*/
else /* if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_4_5) & (memory_controller_waitrequest == 1'd0))) */
begin
ivtv_yuv_window_setup_5_6 = 32'd0;
end
end
always @(posedge clk) begin
/* ivtv_yuv_window_setup: %5*/
/*   %6 = phi i32 [ 0, %4 ], [ %2, %0 ]*/
if ((((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_0_3) & (memory_controller_waitrequest == 1'd0)) & (ivtv_yuv_window_setup_0_3 == 1'd0)))
begin
ivtv_yuv_window_setup_5_6_reg <= ivtv_yuv_window_setup_5_6;
if (reset == 1'b0 && ^(ivtv_yuv_window_setup_5_6) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to ivtv_yuv_window_setup_5_6_reg"); $finish; end
end
/* ivtv_yuv_window_setup: %5*/
/*   %6 = phi i32 [ 0, %4 ], [ %2, %0 ]*/
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_4_5) & (memory_controller_waitrequest == 1'd0)))
begin
ivtv_yuv_window_setup_5_6_reg <= ivtv_yuv_window_setup_5_6;
if (reset == 1'b0 && ^(ivtv_yuv_window_setup_5_6) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to ivtv_yuv_window_setup_5_6_reg"); $finish; end
end
end
always @(*) begin
/* ivtv_yuv_window_setup: %5*/
/*   %7 = getelementptr inbounds %struct.yuv_frame_info* %f, i32 0, i32 1*/
begin
ivtv_yuv_window_setup_5_7 = (arg_f + 4);
end
end
always @(posedge clk) begin
/* ivtv_yuv_window_setup: %5*/
/*   %7 = getelementptr inbounds %struct.yuv_frame_info* %f, i32 0, i32 1*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_5_6))
begin
ivtv_yuv_window_setup_5_7_reg <= ivtv_yuv_window_setup_5_7;
if (reset == 1'b0 && ^(ivtv_yuv_window_setup_5_7) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to ivtv_yuv_window_setup_5_7_reg"); $finish; end
end
end
always @(*) begin
/* ivtv_yuv_window_setup: %5*/
/*   %8 = load i32* %7, align 4, !tbaa !0*/
begin
ivtv_yuv_window_setup_5_8 = memory_controller_out_a[31:0];
end
end
always @(posedge clk) begin
/* ivtv_yuv_window_setup: %5*/
/*   %8 = load i32* %7, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_5_8))
begin
ivtv_yuv_window_setup_5_8_reg <= ivtv_yuv_window_setup_5_8;
if (reset == 1'b0 && ^(ivtv_yuv_window_setup_5_8) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to ivtv_yuv_window_setup_5_8_reg"); $finish; end
end
end
always @(*) begin
/* ivtv_yuv_window_setup: %5*/
/*   %9 = icmp slt i32 %8, 0*/
begin
ivtv_yuv_window_setup_5_9 = ($signed(ivtv_yuv_window_setup_5_8) < $signed(32'd0));
end
end
always @(posedge clk) begin
/* ivtv_yuv_window_setup: %5*/
/*   %9 = icmp slt i32 %8, 0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_5_8))
begin
ivtv_yuv_window_setup_5_9_reg <= ivtv_yuv_window_setup_5_9;
if (reset == 1'b0 && ^(ivtv_yuv_window_setup_5_9) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to ivtv_yuv_window_setup_5_9_reg"); $finish; end
end
end
always @(*) begin
/* ivtv_yuv_window_setup: %11*/
/*   %12 = phi i32 [ 0, %10 ], [ %8, %5 ]*/
if ((((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_5_8) & (memory_controller_waitrequest == 1'd0)) & (ivtv_yuv_window_setup_5_9 == 1'd0)))
begin
ivtv_yuv_window_setup_11_12 = ivtv_yuv_window_setup_5_8;
end
/* ivtv_yuv_window_setup: %11*/
/*   %12 = phi i32 [ 0, %10 ], [ %8, %5 ]*/
else /* if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_10_10) & (memory_controller_waitrequest == 1'd0))) */
begin
ivtv_yuv_window_setup_11_12 = 32'd0;
end
end
always @(posedge clk) begin
/* ivtv_yuv_window_setup: %11*/
/*   %12 = phi i32 [ 0, %10 ], [ %8, %5 ]*/
if ((((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_5_8) & (memory_controller_waitrequest == 1'd0)) & (ivtv_yuv_window_setup_5_9 == 1'd0)))
begin
ivtv_yuv_window_setup_11_12_reg <= ivtv_yuv_window_setup_11_12;
if (reset == 1'b0 && ^(ivtv_yuv_window_setup_11_12) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to ivtv_yuv_window_setup_11_12_reg"); $finish; end
end
/* ivtv_yuv_window_setup: %11*/
/*   %12 = phi i32 [ 0, %10 ], [ %8, %5 ]*/
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_10_10) & (memory_controller_waitrequest == 1'd0)))
begin
ivtv_yuv_window_setup_11_12_reg <= ivtv_yuv_window_setup_11_12;
if (reset == 1'b0 && ^(ivtv_yuv_window_setup_11_12) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to ivtv_yuv_window_setup_11_12_reg"); $finish; end
end
end
always @(*) begin
/* ivtv_yuv_window_setup: %11*/
/*   %13 = getelementptr inbounds %struct.yuv_frame_info* %f, i32 0, i32 2*/
begin
ivtv_yuv_window_setup_11_13 = (arg_f + 8);
end
end
always @(posedge clk) begin
/* ivtv_yuv_window_setup: %11*/
/*   %13 = getelementptr inbounds %struct.yuv_frame_info* %f, i32 0, i32 2*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_11_11))
begin
ivtv_yuv_window_setup_11_13_reg <= ivtv_yuv_window_setup_11_13;
if (reset == 1'b0 && ^(ivtv_yuv_window_setup_11_13) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to ivtv_yuv_window_setup_11_13_reg"); $finish; end
end
end
always @(*) begin
/* ivtv_yuv_window_setup: %11*/
/*   %14 = load i32* %13, align 4, !tbaa !0*/
begin
ivtv_yuv_window_setup_11_14 = memory_controller_out_a[31:0];
end
end
always @(posedge clk) begin
/* ivtv_yuv_window_setup: %11*/
/*   %14 = load i32* %13, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_11_13))
begin
ivtv_yuv_window_setup_11_14_reg <= ivtv_yuv_window_setup_11_14;
if (reset == 1'b0 && ^(ivtv_yuv_window_setup_11_14) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to ivtv_yuv_window_setup_11_14_reg"); $finish; end
end
end
always @(*) begin
/* ivtv_yuv_window_setup: %11*/
/*   %15 = getelementptr inbounds %struct.yuv_frame_info* %f, i32 0, i32 3*/
begin
ivtv_yuv_window_setup_11_15 = (arg_f + 12);
end
end
always @(posedge clk) begin
/* ivtv_yuv_window_setup: %11*/
/*   %15 = getelementptr inbounds %struct.yuv_frame_info* %f, i32 0, i32 3*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_11_11))
begin
ivtv_yuv_window_setup_11_15_reg <= ivtv_yuv_window_setup_11_15;
if (reset == 1'b0 && ^(ivtv_yuv_window_setup_11_15) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to ivtv_yuv_window_setup_11_15_reg"); $finish; end
end
end
always @(*) begin
/* ivtv_yuv_window_setup: %11*/
/*   %16 = load i32* %15, align 4, !tbaa !0*/
begin
ivtv_yuv_window_setup_11_16 = memory_controller_out_b[31:0];
end
end
always @(posedge clk) begin
/* ivtv_yuv_window_setup: %11*/
/*   %16 = load i32* %15, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_11_13))
begin
ivtv_yuv_window_setup_11_16_reg <= ivtv_yuv_window_setup_11_16;
if (reset == 1'b0 && ^(ivtv_yuv_window_setup_11_16) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to ivtv_yuv_window_setup_11_16_reg"); $finish; end
end
end
always @(*) begin
/* ivtv_yuv_window_setup: %11*/
/*   %17 = shl nsw i32 %16, 2*/
begin
ivtv_yuv_window_setup_11_17 = (ivtv_yuv_window_setup_11_16 <<< (32'd2 % 32));
end
end
always @(posedge clk) begin
/* ivtv_yuv_window_setup: %11*/
/*   %17 = shl nsw i32 %16, 2*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_11_13))
begin
ivtv_yuv_window_setup_11_17_reg <= ivtv_yuv_window_setup_11_17;
if (reset == 1'b0 && ^(ivtv_yuv_window_setup_11_17) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to ivtv_yuv_window_setup_11_17_reg"); $finish; end
end
end
always @(*) begin
/* ivtv_yuv_window_setup: %11*/
/*   %18 = sub nsw i32 %14, %17*/
begin
ivtv_yuv_window_setup_11_18 = (ivtv_yuv_window_setup_11_14 - ivtv_yuv_window_setup_11_17);
end
end
always @(posedge clk) begin
/* ivtv_yuv_window_setup: %11*/
/*   %18 = sub nsw i32 %14, %17*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_11_13))
begin
ivtv_yuv_window_setup_11_18_reg <= ivtv_yuv_window_setup_11_18;
if (reset == 1'b0 && ^(ivtv_yuv_window_setup_11_18) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to ivtv_yuv_window_setup_11_18_reg"); $finish; end
end
end
always @(*) begin
/* ivtv_yuv_window_setup: %11*/
/*   %19 = icmp sgt i32 %18, 0*/
begin
ivtv_yuv_window_setup_11_19 = ($signed(ivtv_yuv_window_setup_11_18) > $signed(32'd0));
end
end
always @(posedge clk) begin
/* ivtv_yuv_window_setup: %11*/
/*   %19 = icmp sgt i32 %18, 0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_11_13))
begin
ivtv_yuv_window_setup_11_19_reg <= ivtv_yuv_window_setup_11_19;
if (reset == 1'b0 && ^(ivtv_yuv_window_setup_11_19) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to ivtv_yuv_window_setup_11_19_reg"); $finish; end
end
end
always @(*) begin
ivtv_yuv_window_setup_20_21 = ivtv_yuv_window_setup_signed_divide_32_0;
end
always @(posedge clk) begin
/* ivtv_yuv_window_setup: %20*/
/*   %21 = sdiv i32 %18, 2*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_20_46))
begin
ivtv_yuv_window_setup_20_21_reg <= ivtv_yuv_window_setup_20_21;
if (reset == 1'b0 && ^(ivtv_yuv_window_setup_20_21) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to ivtv_yuv_window_setup_20_21_reg"); $finish; end
end
/* ivtv_yuv_window_setup: %20*/
/*   %21 = sdiv i32 %18, 2*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_20_46))
begin
ivtv_yuv_window_setup_20_21_reg <= ivtv_yuv_window_setup_20_21;
if (reset == 1'b0 && ^(ivtv_yuv_window_setup_20_21) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to ivtv_yuv_window_setup_20_21_reg"); $finish; end
end
/* ivtv_yuv_window_setup: %20*/
/*   %23 = sdiv i32 %17, 4*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_20_47))
begin
ivtv_yuv_window_setup_20_21_reg <= ivtv_yuv_window_setup_20_23;
if (reset == 1'b0 && ^(ivtv_yuv_window_setup_20_23) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to ivtv_yuv_window_setup_20_21_reg"); $finish; end
end
/* ivtv_yuv_window_setup: %26*/
/*   %34 = sdiv i32 %31, %33*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_26_83))
begin
ivtv_yuv_window_setup_20_21_reg <= ivtv_yuv_window_setup_26_34;
if (reset == 1'b0 && ^(ivtv_yuv_window_setup_26_34) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to ivtv_yuv_window_setup_20_21_reg"); $finish; end
end
/* ivtv_yuv_window_setup: %41*/
/*   %42 = sdiv i32 %39, 2*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_41_118))
begin
ivtv_yuv_window_setup_20_21_reg <= ivtv_yuv_window_setup_41_42;
if (reset == 1'b0 && ^(ivtv_yuv_window_setup_41_42) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to ivtv_yuv_window_setup_20_21_reg"); $finish; end
end
/* ivtv_yuv_window_setup: %41*/
/*   %44 = sdiv i32 %38, 4*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_41_119))
begin
ivtv_yuv_window_setup_20_21_reg <= ivtv_yuv_window_setup_41_44;
if (reset == 1'b0 && ^(ivtv_yuv_window_setup_41_44) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to ivtv_yuv_window_setup_20_21_reg"); $finish; end
end
/* ivtv_yuv_window_setup: %134*/
/*   %149 = sdiv i32 %142, 4*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_134_252))
begin
ivtv_yuv_window_setup_20_21_reg <= ivtv_yuv_window_setup_134_149;
if (reset == 1'b0 && ^(ivtv_yuv_window_setup_134_149) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to ivtv_yuv_window_setup_20_21_reg"); $finish; end
end
/* ivtv_yuv_window_setup: %151*/
/*   %153 = sdiv i32 %152, 4*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_151_285))
begin
ivtv_yuv_window_setup_20_21_reg <= ivtv_yuv_window_setup_151_153;
if (reset == 1'b0 && ^(ivtv_yuv_window_setup_151_153) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to ivtv_yuv_window_setup_20_21_reg"); $finish; end
end
/* ivtv_yuv_window_setup: %156*/
/*   %157 = sdiv i32 %148, 4*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_156_319))
begin
ivtv_yuv_window_setup_20_21_reg <= ivtv_yuv_window_setup_156_157;
if (reset == 1'b0 && ^(ivtv_yuv_window_setup_156_157) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to ivtv_yuv_window_setup_20_21_reg"); $finish; end
end
/* ivtv_yuv_window_setup: %159*/
/*   %161 = sdiv i32 %160, 4*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_159_352))
begin
ivtv_yuv_window_setup_20_21_reg <= ivtv_yuv_window_setup_159_161;
if (reset == 1'b0 && ^(ivtv_yuv_window_setup_159_161) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to ivtv_yuv_window_setup_20_21_reg"); $finish; end
end
end
always @(*) begin
/* ivtv_yuv_window_setup: %20*/
/*   %22 = add nsw i32 %6, %21*/
begin
ivtv_yuv_window_setup_20_22 = (ivtv_yuv_window_setup_5_6_reg + ivtv_yuv_window_setup_20_21);
end
end
always @(posedge clk) begin
/* ivtv_yuv_window_setup: %20*/
/*   %22 = add nsw i32 %6, %21*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_20_46))
begin
ivtv_yuv_window_setup_20_22_reg <= ivtv_yuv_window_setup_20_22;
if (reset == 1'b0 && ^(ivtv_yuv_window_setup_20_22) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to ivtv_yuv_window_setup_20_22_reg"); $finish; end
end
end
always @(*) begin
ivtv_yuv_window_setup_20_23 = ivtv_yuv_window_setup_signed_divide_32_0;
end
always @(*) begin
/* ivtv_yuv_window_setup: %20*/
/*   %23 = sdiv i32 %17, 4*/
ivtv_yuv_window_setup_20_23_reg = ivtv_yuv_window_setup_20_21_reg;
end
always @(*) begin
/* ivtv_yuv_window_setup: %20*/
/*   %24 = and i32 %23, 1*/
begin
ivtv_yuv_window_setup_20_24 = (ivtv_yuv_window_setup_20_23 & 32'd1);
end
end
always @(posedge clk) begin
/* ivtv_yuv_window_setup: %20*/
/*   %24 = and i32 %23, 1*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_20_47))
begin
ivtv_yuv_window_setup_20_24_reg <= ivtv_yuv_window_setup_20_24;
if (reset == 1'b0 && ^(ivtv_yuv_window_setup_20_24) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to ivtv_yuv_window_setup_20_24_reg"); $finish; end
end
end
always @(*) begin
/* ivtv_yuv_window_setup: %20*/
/*   %25 = add nsw i32 %24, %23*/
begin
ivtv_yuv_window_setup_20_25 = (ivtv_yuv_window_setup_20_24 + ivtv_yuv_window_setup_20_23);
end
end
always @(posedge clk) begin
/* ivtv_yuv_window_setup: %20*/
/*   %25 = add nsw i32 %24, %23*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_20_47))
begin
ivtv_yuv_window_setup_20_25_reg <= ivtv_yuv_window_setup_20_25;
if (reset == 1'b0 && ^(ivtv_yuv_window_setup_20_25) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to ivtv_yuv_window_setup_20_25_reg"); $finish; end
end
end
always @(*) begin
/* ivtv_yuv_window_setup: %26*/
/*   %27 = phi i32 [ %22, %20 ], [ %6, %11 ]*/
if ((((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_11_13) & (memory_controller_waitrequest == 1'd0)) & (ivtv_yuv_window_setup_11_19 == 1'd0)))
begin
ivtv_yuv_window_setup_26_27 = ivtv_yuv_window_setup_5_6_reg;
end
/* ivtv_yuv_window_setup: %26*/
/*   %27 = phi i32 [ %22, %20 ], [ %6, %11 ]*/
else /* if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_20_48) & (memory_controller_waitrequest == 1'd0))) */
begin
ivtv_yuv_window_setup_26_27 = ivtv_yuv_window_setup_20_22_reg;
end
end
always @(posedge clk) begin
/* ivtv_yuv_window_setup: %26*/
/*   %27 = phi i32 [ %22, %20 ], [ %6, %11 ]*/
if ((((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_11_13) & (memory_controller_waitrequest == 1'd0)) & (ivtv_yuv_window_setup_11_19 == 1'd0)))
begin
ivtv_yuv_window_setup_26_27_reg <= ivtv_yuv_window_setup_26_27;
if (reset == 1'b0 && ^(ivtv_yuv_window_setup_26_27) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to ivtv_yuv_window_setup_26_27_reg"); $finish; end
end
/* ivtv_yuv_window_setup: %26*/
/*   %27 = phi i32 [ %22, %20 ], [ %6, %11 ]*/
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_20_48) & (memory_controller_waitrequest == 1'd0)))
begin
ivtv_yuv_window_setup_26_27_reg <= ivtv_yuv_window_setup_26_27;
if (reset == 1'b0 && ^(ivtv_yuv_window_setup_26_27) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to ivtv_yuv_window_setup_26_27_reg"); $finish; end
end
end
always @(*) begin
/* ivtv_yuv_window_setup: %26*/
/*   %28 = phi i32 [ %17, %20 ], [ %14, %11 ]*/
if ((((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_11_13) & (memory_controller_waitrequest == 1'd0)) & (ivtv_yuv_window_setup_11_19 == 1'd0)))
begin
ivtv_yuv_window_setup_26_28 = ivtv_yuv_window_setup_11_14;
end
/* ivtv_yuv_window_setup: %26*/
/*   %28 = phi i32 [ %17, %20 ], [ %14, %11 ]*/
else /* if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_20_48) & (memory_controller_waitrequest == 1'd0))) */
begin
ivtv_yuv_window_setup_26_28 = ivtv_yuv_window_setup_11_17_reg;
end
end
always @(posedge clk) begin
/* ivtv_yuv_window_setup: %26*/
/*   %28 = phi i32 [ %17, %20 ], [ %14, %11 ]*/
if ((((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_11_13) & (memory_controller_waitrequest == 1'd0)) & (ivtv_yuv_window_setup_11_19 == 1'd0)))
begin
ivtv_yuv_window_setup_26_28_reg <= ivtv_yuv_window_setup_26_28;
if (reset == 1'b0 && ^(ivtv_yuv_window_setup_26_28) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to ivtv_yuv_window_setup_26_28_reg"); $finish; end
end
/* ivtv_yuv_window_setup: %26*/
/*   %28 = phi i32 [ %17, %20 ], [ %14, %11 ]*/
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_20_48) & (memory_controller_waitrequest == 1'd0)))
begin
ivtv_yuv_window_setup_26_28_reg <= ivtv_yuv_window_setup_26_28;
if (reset == 1'b0 && ^(ivtv_yuv_window_setup_26_28) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to ivtv_yuv_window_setup_26_28_reg"); $finish; end
end
end
always @(*) begin
/* ivtv_yuv_window_setup: %26*/
/*   %29 = phi i32 [ %25, %20 ], [ %16, %11 ]*/
if ((((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_11_13) & (memory_controller_waitrequest == 1'd0)) & (ivtv_yuv_window_setup_11_19 == 1'd0)))
begin
ivtv_yuv_window_setup_26_29 = ivtv_yuv_window_setup_11_16;
end
/* ivtv_yuv_window_setup: %26*/
/*   %29 = phi i32 [ %25, %20 ], [ %16, %11 ]*/
else /* if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_20_48) & (memory_controller_waitrequest == 1'd0))) */
begin
ivtv_yuv_window_setup_26_29 = ivtv_yuv_window_setup_20_25_reg;
end
end
always @(posedge clk) begin
/* ivtv_yuv_window_setup: %26*/
/*   %29 = phi i32 [ %25, %20 ], [ %16, %11 ]*/
if ((((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_11_13) & (memory_controller_waitrequest == 1'd0)) & (ivtv_yuv_window_setup_11_19 == 1'd0)))
begin
ivtv_yuv_window_setup_26_29_reg <= ivtv_yuv_window_setup_26_29;
if (reset == 1'b0 && ^(ivtv_yuv_window_setup_26_29) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to ivtv_yuv_window_setup_26_29_reg"); $finish; end
end
/* ivtv_yuv_window_setup: %26*/
/*   %29 = phi i32 [ %25, %20 ], [ %16, %11 ]*/
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_20_48) & (memory_controller_waitrequest == 1'd0)))
begin
ivtv_yuv_window_setup_26_29_reg <= ivtv_yuv_window_setup_26_29;
if (reset == 1'b0 && ^(ivtv_yuv_window_setup_26_29) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to ivtv_yuv_window_setup_26_29_reg"); $finish; end
end
end
always @(*) begin
/* ivtv_yuv_window_setup: %26*/
/*   %30 = getelementptr inbounds %struct.yuv_frame_info* %f, i32 0, i32 4*/
begin
ivtv_yuv_window_setup_26_30 = (arg_f + 16);
end
end
always @(posedge clk) begin
/* ivtv_yuv_window_setup: %26*/
/*   %30 = getelementptr inbounds %struct.yuv_frame_info* %f, i32 0, i32 4*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_26_49))
begin
ivtv_yuv_window_setup_26_30_reg <= ivtv_yuv_window_setup_26_30;
if (reset == 1'b0 && ^(ivtv_yuv_window_setup_26_30) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to ivtv_yuv_window_setup_26_30_reg"); $finish; end
end
end
always @(*) begin
/* ivtv_yuv_window_setup: %26*/
/*   %31 = load i32* %30, align 4, !tbaa !0*/
begin
ivtv_yuv_window_setup_26_31 = memory_controller_out_a[31:0];
end
end
always @(posedge clk) begin
/* ivtv_yuv_window_setup: %26*/
/*   %31 = load i32* %30, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_26_51))
begin
ivtv_yuv_window_setup_26_31_reg <= ivtv_yuv_window_setup_26_31;
if (reset == 1'b0 && ^(ivtv_yuv_window_setup_26_31) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to ivtv_yuv_window_setup_26_31_reg"); $finish; end
end
end
always @(*) begin
/* ivtv_yuv_window_setup: %26*/
/*   %32 = getelementptr inbounds %struct.yuv_frame_info* %f, i32 0, i32 5*/
begin
ivtv_yuv_window_setup_26_32 = (arg_f + 20);
end
end
always @(posedge clk) begin
/* ivtv_yuv_window_setup: %26*/
/*   %32 = getelementptr inbounds %struct.yuv_frame_info* %f, i32 0, i32 5*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_26_49))
begin
ivtv_yuv_window_setup_26_32_reg <= ivtv_yuv_window_setup_26_32;
if (reset == 1'b0 && ^(ivtv_yuv_window_setup_26_32) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to ivtv_yuv_window_setup_26_32_reg"); $finish; end
end
end
always @(*) begin
/* ivtv_yuv_window_setup: %26*/
/*   %33 = load i32* %32, align 4, !tbaa !0*/
begin
ivtv_yuv_window_setup_26_33 = memory_controller_out_b[31:0];
end
end
always @(posedge clk) begin
/* ivtv_yuv_window_setup: %26*/
/*   %33 = load i32* %32, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_26_51))
begin
ivtv_yuv_window_setup_26_33_reg <= ivtv_yuv_window_setup_26_33;
if (reset == 1'b0 && ^(ivtv_yuv_window_setup_26_33) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to ivtv_yuv_window_setup_26_33_reg"); $finish; end
end
end
always @(*) begin
ivtv_yuv_window_setup_26_34 = ivtv_yuv_window_setup_signed_divide_32_0;
end
always @(*) begin
/* ivtv_yuv_window_setup: %26*/
/*   %34 = sdiv i32 %31, %33*/
ivtv_yuv_window_setup_26_34_reg = ivtv_yuv_window_setup_20_21_reg;
end
always @(*) begin
/* ivtv_yuv_window_setup: %26*/
/*   %35 = icmp sgt i32 %34, 1*/
begin
ivtv_yuv_window_setup_26_35 = ($signed(ivtv_yuv_window_setup_26_34) > $signed(32'd1));
end
end
always @(posedge clk) begin
/* ivtv_yuv_window_setup: %26*/
/*   %35 = icmp sgt i32 %34, 1*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_26_83))
begin
ivtv_yuv_window_setup_26_35_reg <= ivtv_yuv_window_setup_26_35;
if (reset == 1'b0 && ^(ivtv_yuv_window_setup_26_35) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to ivtv_yuv_window_setup_26_35_reg"); $finish; end
end
end
always @(*) begin
/* ivtv_yuv_window_setup: %36*/
/*   %37 = getelementptr inbounds %struct.yuv_frame_info* %f, i32 0, i32 6*/
begin
ivtv_yuv_window_setup_36_37 = (arg_f + 24);
end
end
always @(posedge clk) begin
/* ivtv_yuv_window_setup: %36*/
/*   %37 = getelementptr inbounds %struct.yuv_frame_info* %f, i32 0, i32 6*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_36_84))
begin
ivtv_yuv_window_setup_36_37_reg <= ivtv_yuv_window_setup_36_37;
if (reset == 1'b0 && ^(ivtv_yuv_window_setup_36_37) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to ivtv_yuv_window_setup_36_37_reg"); $finish; end
end
end
always @(*) begin
/* ivtv_yuv_window_setup: %36*/
/*   %38 = shl nsw i32 %33, 2*/
begin
ivtv_yuv_window_setup_36_38 = (ivtv_yuv_window_setup_26_33_reg <<< (32'd2 % 32));
end
end
always @(posedge clk) begin
/* ivtv_yuv_window_setup: %36*/
/*   %38 = shl nsw i32 %33, 2*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_36_84))
begin
ivtv_yuv_window_setup_36_38_reg <= ivtv_yuv_window_setup_36_38;
if (reset == 1'b0 && ^(ivtv_yuv_window_setup_36_38) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to ivtv_yuv_window_setup_36_38_reg"); $finish; end
end
end
always @(*) begin
/* ivtv_yuv_window_setup: %36*/
/*   %39 = sub nsw i32 %31, %38*/
begin
ivtv_yuv_window_setup_36_39 = (ivtv_yuv_window_setup_26_31_reg - ivtv_yuv_window_setup_36_38);
end
end
always @(posedge clk) begin
/* ivtv_yuv_window_setup: %36*/
/*   %39 = sub nsw i32 %31, %38*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_36_84))
begin
ivtv_yuv_window_setup_36_39_reg <= ivtv_yuv_window_setup_36_39;
if (reset == 1'b0 && ^(ivtv_yuv_window_setup_36_39) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to ivtv_yuv_window_setup_36_39_reg"); $finish; end
end
end
always @(*) begin
/* ivtv_yuv_window_setup: %36*/
/*   %40 = icmp sgt i32 %39, 0*/
begin
ivtv_yuv_window_setup_36_40 = ($signed(ivtv_yuv_window_setup_36_39) > $signed(32'd0));
end
end
always @(posedge clk) begin
/* ivtv_yuv_window_setup: %36*/
/*   %40 = icmp sgt i32 %39, 0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_36_84))
begin
ivtv_yuv_window_setup_36_40_reg <= ivtv_yuv_window_setup_36_40;
if (reset == 1'b0 && ^(ivtv_yuv_window_setup_36_40) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to ivtv_yuv_window_setup_36_40_reg"); $finish; end
end
end
always @(*) begin
ivtv_yuv_window_setup_41_42 = ivtv_yuv_window_setup_signed_divide_32_0;
end
always @(*) begin
/* ivtv_yuv_window_setup: %41*/
/*   %42 = sdiv i32 %39, 2*/
ivtv_yuv_window_setup_41_42_reg = ivtv_yuv_window_setup_20_21_reg;
end
always @(*) begin
/* ivtv_yuv_window_setup: %41*/
/*   %43 = add nsw i32 %12, %42*/
begin
ivtv_yuv_window_setup_41_43 = (ivtv_yuv_window_setup_11_12_reg + ivtv_yuv_window_setup_41_42);
end
end
always @(posedge clk) begin
/* ivtv_yuv_window_setup: %41*/
/*   %43 = add nsw i32 %12, %42*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_41_118))
begin
ivtv_yuv_window_setup_41_43_reg <= ivtv_yuv_window_setup_41_43;
if (reset == 1'b0 && ^(ivtv_yuv_window_setup_41_43) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to ivtv_yuv_window_setup_41_43_reg"); $finish; end
end
end
always @(*) begin
ivtv_yuv_window_setup_41_44 = ivtv_yuv_window_setup_signed_divide_32_0;
end
always @(*) begin
/* ivtv_yuv_window_setup: %41*/
/*   %44 = sdiv i32 %38, 4*/
ivtv_yuv_window_setup_41_44_reg = ivtv_yuv_window_setup_20_21_reg;
end
always @(*) begin
/* ivtv_yuv_window_setup: %41*/
/*   %45 = and i32 %44, 1*/
begin
ivtv_yuv_window_setup_41_45 = (ivtv_yuv_window_setup_41_44 & 32'd1);
end
end
always @(posedge clk) begin
/* ivtv_yuv_window_setup: %41*/
/*   %45 = and i32 %44, 1*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_41_119))
begin
ivtv_yuv_window_setup_41_45_reg <= ivtv_yuv_window_setup_41_45;
if (reset == 1'b0 && ^(ivtv_yuv_window_setup_41_45) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to ivtv_yuv_window_setup_41_45_reg"); $finish; end
end
end
always @(*) begin
/* ivtv_yuv_window_setup: %41*/
/*   %46 = add nsw i32 %45, %44*/
begin
ivtv_yuv_window_setup_41_46 = (ivtv_yuv_window_setup_41_45 + ivtv_yuv_window_setup_41_44);
end
end
always @(posedge clk) begin
/* ivtv_yuv_window_setup: %41*/
/*   %46 = add nsw i32 %45, %44*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_41_119))
begin
ivtv_yuv_window_setup_41_46_reg <= ivtv_yuv_window_setup_41_46;
if (reset == 1'b0 && ^(ivtv_yuv_window_setup_41_46) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to ivtv_yuv_window_setup_41_46_reg"); $finish; end
end
end
always @(*) begin
/* ivtv_yuv_window_setup: %47*/
/*   %48 = phi i32 [ %12, %36 ], [ %43, %41 ], [ %12, %26 ]*/
if ((((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_26_83) & (memory_controller_waitrequest == 1'd0)) & (ivtv_yuv_window_setup_26_35 == 1'd0)))
begin
ivtv_yuv_window_setup_47_48 = ivtv_yuv_window_setup_11_12_reg;
end
/* ivtv_yuv_window_setup: %47*/
/*   %48 = phi i32 [ %12, %36 ], [ %43, %41 ], [ %12, %26 ]*/
else if ((((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_36_85) & (memory_controller_waitrequest == 1'd0)) & (ivtv_yuv_window_setup_36_40_reg == 1'd0)))
begin
ivtv_yuv_window_setup_47_48 = ivtv_yuv_window_setup_11_12_reg;
end
/* ivtv_yuv_window_setup: %47*/
/*   %48 = phi i32 [ %12, %36 ], [ %43, %41 ], [ %12, %26 ]*/
else /* if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_41_120) & (memory_controller_waitrequest == 1'd0))) */
begin
ivtv_yuv_window_setup_47_48 = ivtv_yuv_window_setup_41_43_reg;
end
end
always @(posedge clk) begin
/* ivtv_yuv_window_setup: %47*/
/*   %48 = phi i32 [ %12, %36 ], [ %43, %41 ], [ %12, %26 ]*/
if ((((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_26_83) & (memory_controller_waitrequest == 1'd0)) & (ivtv_yuv_window_setup_26_35 == 1'd0)))
begin
ivtv_yuv_window_setup_47_48_reg <= ivtv_yuv_window_setup_47_48;
if (reset == 1'b0 && ^(ivtv_yuv_window_setup_47_48) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to ivtv_yuv_window_setup_47_48_reg"); $finish; end
end
/* ivtv_yuv_window_setup: %47*/
/*   %48 = phi i32 [ %12, %36 ], [ %43, %41 ], [ %12, %26 ]*/
if ((((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_36_85) & (memory_controller_waitrequest == 1'd0)) & (ivtv_yuv_window_setup_36_40_reg == 1'd0)))
begin
ivtv_yuv_window_setup_47_48_reg <= ivtv_yuv_window_setup_47_48;
if (reset == 1'b0 && ^(ivtv_yuv_window_setup_47_48) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to ivtv_yuv_window_setup_47_48_reg"); $finish; end
end
/* ivtv_yuv_window_setup: %47*/
/*   %48 = phi i32 [ %12, %36 ], [ %43, %41 ], [ %12, %26 ]*/
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_41_120) & (memory_controller_waitrequest == 1'd0)))
begin
ivtv_yuv_window_setup_47_48_reg <= ivtv_yuv_window_setup_47_48;
if (reset == 1'b0 && ^(ivtv_yuv_window_setup_47_48) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to ivtv_yuv_window_setup_47_48_reg"); $finish; end
end
end
always @(*) begin
/* ivtv_yuv_window_setup: %47*/
/*   %49 = phi i32 [ %31, %36 ], [ %38, %41 ], [ %31, %26 ]*/
if ((((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_26_83) & (memory_controller_waitrequest == 1'd0)) & (ivtv_yuv_window_setup_26_35 == 1'd0)))
begin
ivtv_yuv_window_setup_47_49 = ivtv_yuv_window_setup_26_31_reg;
end
/* ivtv_yuv_window_setup: %47*/
/*   %49 = phi i32 [ %31, %36 ], [ %38, %41 ], [ %31, %26 ]*/
else if ((((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_36_85) & (memory_controller_waitrequest == 1'd0)) & (ivtv_yuv_window_setup_36_40_reg == 1'd0)))
begin
ivtv_yuv_window_setup_47_49 = ivtv_yuv_window_setup_26_31_reg;
end
/* ivtv_yuv_window_setup: %47*/
/*   %49 = phi i32 [ %31, %36 ], [ %38, %41 ], [ %31, %26 ]*/
else /* if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_41_120) & (memory_controller_waitrequest == 1'd0))) */
begin
ivtv_yuv_window_setup_47_49 = ivtv_yuv_window_setup_36_38_reg;
end
end
always @(posedge clk) begin
/* ivtv_yuv_window_setup: %47*/
/*   %49 = phi i32 [ %31, %36 ], [ %38, %41 ], [ %31, %26 ]*/
if ((((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_26_83) & (memory_controller_waitrequest == 1'd0)) & (ivtv_yuv_window_setup_26_35 == 1'd0)))
begin
ivtv_yuv_window_setup_47_49_reg <= ivtv_yuv_window_setup_47_49;
if (reset == 1'b0 && ^(ivtv_yuv_window_setup_47_49) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to ivtv_yuv_window_setup_47_49_reg"); $finish; end
end
/* ivtv_yuv_window_setup: %47*/
/*   %49 = phi i32 [ %31, %36 ], [ %38, %41 ], [ %31, %26 ]*/
if ((((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_36_85) & (memory_controller_waitrequest == 1'd0)) & (ivtv_yuv_window_setup_36_40_reg == 1'd0)))
begin
ivtv_yuv_window_setup_47_49_reg <= ivtv_yuv_window_setup_47_49;
if (reset == 1'b0 && ^(ivtv_yuv_window_setup_47_49) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to ivtv_yuv_window_setup_47_49_reg"); $finish; end
end
/* ivtv_yuv_window_setup: %47*/
/*   %49 = phi i32 [ %31, %36 ], [ %38, %41 ], [ %31, %26 ]*/
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_41_120) & (memory_controller_waitrequest == 1'd0)))
begin
ivtv_yuv_window_setup_47_49_reg <= ivtv_yuv_window_setup_47_49;
if (reset == 1'b0 && ^(ivtv_yuv_window_setup_47_49) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to ivtv_yuv_window_setup_47_49_reg"); $finish; end
end
end
always @(*) begin
/* ivtv_yuv_window_setup: %47*/
/*   %50 = phi i32 [ %33, %36 ], [ %46, %41 ], [ %33, %26 ]*/
if ((((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_26_83) & (memory_controller_waitrequest == 1'd0)) & (ivtv_yuv_window_setup_26_35 == 1'd0)))
begin
ivtv_yuv_window_setup_47_50 = ivtv_yuv_window_setup_26_33_reg;
end
/* ivtv_yuv_window_setup: %47*/
/*   %50 = phi i32 [ %33, %36 ], [ %46, %41 ], [ %33, %26 ]*/
else if ((((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_36_85) & (memory_controller_waitrequest == 1'd0)) & (ivtv_yuv_window_setup_36_40_reg == 1'd0)))
begin
ivtv_yuv_window_setup_47_50 = ivtv_yuv_window_setup_26_33_reg;
end
/* ivtv_yuv_window_setup: %47*/
/*   %50 = phi i32 [ %33, %36 ], [ %46, %41 ], [ %33, %26 ]*/
else /* if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_41_120) & (memory_controller_waitrequest == 1'd0))) */
begin
ivtv_yuv_window_setup_47_50 = ivtv_yuv_window_setup_41_46_reg;
end
end
always @(posedge clk) begin
/* ivtv_yuv_window_setup: %47*/
/*   %50 = phi i32 [ %33, %36 ], [ %46, %41 ], [ %33, %26 ]*/
if ((((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_26_83) & (memory_controller_waitrequest == 1'd0)) & (ivtv_yuv_window_setup_26_35 == 1'd0)))
begin
ivtv_yuv_window_setup_47_50_reg <= ivtv_yuv_window_setup_47_50;
if (reset == 1'b0 && ^(ivtv_yuv_window_setup_47_50) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to ivtv_yuv_window_setup_47_50_reg"); $finish; end
end
/* ivtv_yuv_window_setup: %47*/
/*   %50 = phi i32 [ %33, %36 ], [ %46, %41 ], [ %33, %26 ]*/
if ((((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_36_85) & (memory_controller_waitrequest == 1'd0)) & (ivtv_yuv_window_setup_36_40_reg == 1'd0)))
begin
ivtv_yuv_window_setup_47_50_reg <= ivtv_yuv_window_setup_47_50;
if (reset == 1'b0 && ^(ivtv_yuv_window_setup_47_50) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to ivtv_yuv_window_setup_47_50_reg"); $finish; end
end
/* ivtv_yuv_window_setup: %47*/
/*   %50 = phi i32 [ %33, %36 ], [ %46, %41 ], [ %33, %26 ]*/
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_41_120) & (memory_controller_waitrequest == 1'd0)))
begin
ivtv_yuv_window_setup_47_50_reg <= ivtv_yuv_window_setup_47_50;
if (reset == 1'b0 && ^(ivtv_yuv_window_setup_47_50) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to ivtv_yuv_window_setup_47_50_reg"); $finish; end
end
end
always @(*) begin
/* ivtv_yuv_window_setup: %47*/
/*   %51 = icmp slt i32 %29, 3*/
begin
ivtv_yuv_window_setup_47_51 = ($signed(ivtv_yuv_window_setup_26_29_reg) < $signed(32'd3));
end
end
always @(posedge clk) begin
/* ivtv_yuv_window_setup: %47*/
/*   %51 = icmp slt i32 %29, 3*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_47_121))
begin
ivtv_yuv_window_setup_47_51_reg <= ivtv_yuv_window_setup_47_51;
if (reset == 1'b0 && ^(ivtv_yuv_window_setup_47_51) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to ivtv_yuv_window_setup_47_51_reg"); $finish; end
end
end
always @(*) begin
/* ivtv_yuv_window_setup: %47*/
/*   %52 = icmp slt i32 %50, 3*/
begin
ivtv_yuv_window_setup_47_52 = ($signed(ivtv_yuv_window_setup_47_50_reg) < $signed(32'd3));
end
end
always @(posedge clk) begin
/* ivtv_yuv_window_setup: %47*/
/*   %52 = icmp slt i32 %50, 3*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_47_121))
begin
ivtv_yuv_window_setup_47_52_reg <= ivtv_yuv_window_setup_47_52;
if (reset == 1'b0 && ^(ivtv_yuv_window_setup_47_52) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to ivtv_yuv_window_setup_47_52_reg"); $finish; end
end
end
always @(*) begin
/* ivtv_yuv_window_setup: %47*/
/*   %or.cond = or i1 %51, %52*/
begin
ivtv_yuv_window_setup_47_or_cond = (ivtv_yuv_window_setup_47_51 | ivtv_yuv_window_setup_47_52);
end
end
always @(posedge clk) begin
/* ivtv_yuv_window_setup: %47*/
/*   %or.cond = or i1 %51, %52*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_47_121))
begin
ivtv_yuv_window_setup_47_or_cond_reg <= ivtv_yuv_window_setup_47_or_cond;
if (reset == 1'b0 && ^(ivtv_yuv_window_setup_47_or_cond) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to ivtv_yuv_window_setup_47_or_cond_reg"); $finish; end
end
end
always @(*) begin
/* ivtv_yuv_window_setup: %47*/
/*   %53 = icmp slt i32 %28, 3*/
begin
ivtv_yuv_window_setup_47_53 = ($signed(ivtv_yuv_window_setup_26_28_reg) < $signed(32'd3));
end
end
always @(posedge clk) begin
/* ivtv_yuv_window_setup: %47*/
/*   %53 = icmp slt i32 %28, 3*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_47_121))
begin
ivtv_yuv_window_setup_47_53_reg <= ivtv_yuv_window_setup_47_53;
if (reset == 1'b0 && ^(ivtv_yuv_window_setup_47_53) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to ivtv_yuv_window_setup_47_53_reg"); $finish; end
end
end
always @(*) begin
/* ivtv_yuv_window_setup: %47*/
/*   %or.cond3 = or i1 %or.cond, %53*/
begin
ivtv_yuv_window_setup_47_or_cond3 = (ivtv_yuv_window_setup_47_or_cond | ivtv_yuv_window_setup_47_53);
end
end
always @(posedge clk) begin
/* ivtv_yuv_window_setup: %47*/
/*   %or.cond3 = or i1 %or.cond, %53*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_47_121))
begin
ivtv_yuv_window_setup_47_or_cond3_reg <= ivtv_yuv_window_setup_47_or_cond3;
if (reset == 1'b0 && ^(ivtv_yuv_window_setup_47_or_cond3) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to ivtv_yuv_window_setup_47_or_cond3_reg"); $finish; end
end
end
always @(*) begin
/* ivtv_yuv_window_setup: %47*/
/*   %54 = icmp slt i32 %49, 3*/
begin
ivtv_yuv_window_setup_47_54 = ($signed(ivtv_yuv_window_setup_47_49_reg) < $signed(32'd3));
end
end
always @(posedge clk) begin
/* ivtv_yuv_window_setup: %47*/
/*   %54 = icmp slt i32 %49, 3*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_47_121))
begin
ivtv_yuv_window_setup_47_54_reg <= ivtv_yuv_window_setup_47_54;
if (reset == 1'b0 && ^(ivtv_yuv_window_setup_47_54) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to ivtv_yuv_window_setup_47_54_reg"); $finish; end
end
end
always @(*) begin
/* ivtv_yuv_window_setup: %47*/
/*   %or.cond4 = or i1 %or.cond3, %54*/
begin
ivtv_yuv_window_setup_47_or_cond4 = (ivtv_yuv_window_setup_47_or_cond3 | ivtv_yuv_window_setup_47_54);
end
end
always @(posedge clk) begin
/* ivtv_yuv_window_setup: %47*/
/*   %or.cond4 = or i1 %or.cond3, %54*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_47_121))
begin
ivtv_yuv_window_setup_47_or_cond4_reg <= ivtv_yuv_window_setup_47_or_cond4;
if (reset == 1'b0 && ^(ivtv_yuv_window_setup_47_or_cond4) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to ivtv_yuv_window_setup_47_or_cond4_reg"); $finish; end
end
end
always @(*) begin
/* ivtv_yuv_window_setup: %55*/
/*   %56 = shl i32 %49, 16*/
begin
ivtv_yuv_window_setup_55_56 = (ivtv_yuv_window_setup_47_49_reg <<< (32'd16 % 32));
end
end
always @(posedge clk) begin
/* ivtv_yuv_window_setup: %55*/
/*   %56 = shl i32 %49, 16*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_55_122))
begin
ivtv_yuv_window_setup_55_56_reg <= ivtv_yuv_window_setup_55_56;
if (reset == 1'b0 && ^(ivtv_yuv_window_setup_55_56) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to ivtv_yuv_window_setup_55_56_reg"); $finish; end
end
end
always @(*) begin
ivtv_yuv_window_setup_55_57 = ivtv_yuv_window_setup_signed_divide_32_0;
end
always @(posedge clk) begin
/* ivtv_yuv_window_setup: %55*/
/*   %57 = sdiv i32 %56, %50*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_55_154))
begin
ivtv_yuv_window_setup_55_57_reg <= ivtv_yuv_window_setup_55_57;
if (reset == 1'b0 && ^(ivtv_yuv_window_setup_55_57) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to ivtv_yuv_window_setup_55_57_reg"); $finish; end
end
/* ivtv_yuv_window_setup: %55*/
/*   %57 = sdiv i32 %56, %50*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_55_154))
begin
ivtv_yuv_window_setup_55_57_reg <= ivtv_yuv_window_setup_55_57;
if (reset == 1'b0 && ^(ivtv_yuv_window_setup_55_57) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to ivtv_yuv_window_setup_55_57_reg"); $finish; end
end
/* ivtv_yuv_window_setup: %87*/
/*   %91 = sdiv i32 %90, %29*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_87_198))
begin
ivtv_yuv_window_setup_55_57_reg <= ivtv_yuv_window_setup_87_91;
if (reset == 1'b0 && ^(ivtv_yuv_window_setup_87_91) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to ivtv_yuv_window_setup_55_57_reg"); $finish; end
end
end
always @(*) begin
/* ivtv_yuv_window_setup: %55*/
/*   %58 = getelementptr inbounds %struct.yuv_frame_info* %f, i32 0, i32 7*/
begin
ivtv_yuv_window_setup_55_58 = (arg_f + 28);
end
end
always @(posedge clk) begin
/* ivtv_yuv_window_setup: %55*/
/*   %58 = getelementptr inbounds %struct.yuv_frame_info* %f, i32 0, i32 7*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_55_122))
begin
ivtv_yuv_window_setup_55_58_reg <= ivtv_yuv_window_setup_55_58;
if (reset == 1'b0 && ^(ivtv_yuv_window_setup_55_58) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to ivtv_yuv_window_setup_55_58_reg"); $finish; end
end
end
always @(*) begin
/* ivtv_yuv_window_setup: %55*/
/*   %59 = load i32* %58, align 4, !tbaa !0*/
begin
ivtv_yuv_window_setup_55_59 = memory_controller_out_a[31:0];
end
end
always @(posedge clk) begin
/* ivtv_yuv_window_setup: %55*/
/*   %59 = load i32* %58, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_55_124))
begin
ivtv_yuv_window_setup_55_59_reg <= ivtv_yuv_window_setup_55_59;
if (reset == 1'b0 && ^(ivtv_yuv_window_setup_55_59) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to ivtv_yuv_window_setup_55_59_reg"); $finish; end
end
end
always @(*) begin
/* ivtv_yuv_window_setup: %55*/
/*   %60 = getelementptr inbounds %struct.yuv_frame_info* %f, i32 0, i32 8*/
begin
ivtv_yuv_window_setup_55_60 = (arg_f + 32);
end
end
always @(posedge clk) begin
/* ivtv_yuv_window_setup: %55*/
/*   %60 = getelementptr inbounds %struct.yuv_frame_info* %f, i32 0, i32 8*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_55_122))
begin
ivtv_yuv_window_setup_55_60_reg <= ivtv_yuv_window_setup_55_60;
if (reset == 1'b0 && ^(ivtv_yuv_window_setup_55_60) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to ivtv_yuv_window_setup_55_60_reg"); $finish; end
end
end
always @(*) begin
/* ivtv_yuv_window_setup: %55*/
/*   %61 = load i32* %60, align 4, !tbaa !0*/
begin
ivtv_yuv_window_setup_55_61 = memory_controller_out_b[31:0];
end
end
always @(posedge clk) begin
/* ivtv_yuv_window_setup: %55*/
/*   %61 = load i32* %60, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_55_124))
begin
ivtv_yuv_window_setup_55_61_reg <= ivtv_yuv_window_setup_55_61;
if (reset == 1'b0 && ^(ivtv_yuv_window_setup_55_61) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to ivtv_yuv_window_setup_55_61_reg"); $finish; end
end
end
always @(*) begin
/* ivtv_yuv_window_setup: %55*/
/*   %62 = sub nsw i32 %59, %61*/
begin
ivtv_yuv_window_setup_55_62 = (ivtv_yuv_window_setup_55_59 - ivtv_yuv_window_setup_55_61);
end
end
always @(posedge clk) begin
/* ivtv_yuv_window_setup: %55*/
/*   %62 = sub nsw i32 %59, %61*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_55_124))
begin
ivtv_yuv_window_setup_55_62_reg <= ivtv_yuv_window_setup_55_62;
if (reset == 1'b0 && ^(ivtv_yuv_window_setup_55_62) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to ivtv_yuv_window_setup_55_62_reg"); $finish; end
end
end
always @(*) begin
/* ivtv_yuv_window_setup: %55*/
/*   %63 = icmp sgt i32 %62, 0*/
begin
ivtv_yuv_window_setup_55_63 = ($signed(ivtv_yuv_window_setup_55_62) > $signed(32'd0));
end
end
always @(posedge clk) begin
/* ivtv_yuv_window_setup: %55*/
/*   %63 = icmp sgt i32 %62, 0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_55_124))
begin
ivtv_yuv_window_setup_55_63_reg <= ivtv_yuv_window_setup_55_63;
if (reset == 1'b0 && ^(ivtv_yuv_window_setup_55_63) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to ivtv_yuv_window_setup_55_63_reg"); $finish; end
end
end
always @(*) begin
ivtv_yuv_window_setup_64_65 = ivtv_yuv_window_setup_64_65_stage0_reg;
end
always @(posedge clk) begin
/* ivtv_yuv_window_setup: %64*/
/*   %65 = mul nsw i32 %62, %57*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_64_156))
begin
ivtv_yuv_window_setup_64_65_reg <= ivtv_yuv_window_setup_64_65;
if (reset == 1'b0 && ^(ivtv_yuv_window_setup_64_65) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to ivtv_yuv_window_setup_64_65_reg"); $finish; end
end
/* ivtv_yuv_window_setup: %64*/
/*   %65 = mul nsw i32 %62, %57*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_64_156))
begin
ivtv_yuv_window_setup_64_65_reg <= ivtv_yuv_window_setup_64_65;
if (reset == 1'b0 && ^(ivtv_yuv_window_setup_64_65) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to ivtv_yuv_window_setup_64_65_reg"); $finish; end
end
end
always @(*) begin
/* ivtv_yuv_window_setup: %64*/
/*   %66 = ashr i32 %65, 16*/
begin
ivtv_yuv_window_setup_64_66 = ($signed(ivtv_yuv_window_setup_64_65) >>> 32'd16);
end
end
always @(posedge clk) begin
/* ivtv_yuv_window_setup: %64*/
/*   %66 = ashr i32 %65, 16*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_64_156))
begin
ivtv_yuv_window_setup_64_66_reg <= ivtv_yuv_window_setup_64_66;
if (reset == 1'b0 && ^(ivtv_yuv_window_setup_64_66) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to ivtv_yuv_window_setup_64_66_reg"); $finish; end
end
end
always @(*) begin
/* ivtv_yuv_window_setup: %64*/
/*   %67 = add nsw i32 %48, %66*/
begin
ivtv_yuv_window_setup_64_67 = (ivtv_yuv_window_setup_47_48_reg + ivtv_yuv_window_setup_64_66);
end
end
always @(posedge clk) begin
/* ivtv_yuv_window_setup: %64*/
/*   %67 = add nsw i32 %48, %66*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_64_156))
begin
ivtv_yuv_window_setup_64_67_reg <= ivtv_yuv_window_setup_64_67;
if (reset == 1'b0 && ^(ivtv_yuv_window_setup_64_67) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to ivtv_yuv_window_setup_64_67_reg"); $finish; end
end
end
always @(*) begin
/* ivtv_yuv_window_setup: %64*/
/*   %68 = sub nsw i32 %49, %66*/
begin
ivtv_yuv_window_setup_64_68 = (ivtv_yuv_window_setup_47_49_reg - ivtv_yuv_window_setup_64_66);
end
end
always @(posedge clk) begin
/* ivtv_yuv_window_setup: %64*/
/*   %68 = sub nsw i32 %49, %66*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_64_156))
begin
ivtv_yuv_window_setup_64_68_reg <= ivtv_yuv_window_setup_64_68;
if (reset == 1'b0 && ^(ivtv_yuv_window_setup_64_68) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to ivtv_yuv_window_setup_64_68_reg"); $finish; end
end
end
always @(*) begin
/* ivtv_yuv_window_setup: %64*/
/*   %69 = sub nsw i32 %50, %62*/
begin
ivtv_yuv_window_setup_64_69 = (ivtv_yuv_window_setup_47_50_reg - ivtv_yuv_window_setup_55_62_reg);
end
end
always @(posedge clk) begin
/* ivtv_yuv_window_setup: %64*/
/*   %69 = sub nsw i32 %50, %62*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_64_155))
begin
ivtv_yuv_window_setup_64_69_reg <= ivtv_yuv_window_setup_64_69;
if (reset == 1'b0 && ^(ivtv_yuv_window_setup_64_69) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to ivtv_yuv_window_setup_64_69_reg"); $finish; end
end
end
always @(*) begin
/* ivtv_yuv_window_setup: %70*/
/*   %71 = sub nsw i32 %61, %59*/
begin
ivtv_yuv_window_setup_70_71 = (ivtv_yuv_window_setup_55_61_reg - ivtv_yuv_window_setup_55_59_reg);
end
end
always @(posedge clk) begin
/* ivtv_yuv_window_setup: %70*/
/*   %71 = sub nsw i32 %61, %59*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_70_159))
begin
ivtv_yuv_window_setup_70_71_reg <= ivtv_yuv_window_setup_70_71;
if (reset == 1'b0 && ^(ivtv_yuv_window_setup_70_71) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to ivtv_yuv_window_setup_70_71_reg"); $finish; end
end
end
always @(*) begin
/* ivtv_yuv_window_setup: %72*/
/*   %73 = phi i32 [ %48, %70 ], [ %67, %64 ]*/
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_64_158) & (memory_controller_waitrequest == 1'd0)))
begin
ivtv_yuv_window_setup_72_73 = ivtv_yuv_window_setup_64_67_reg;
end
/* ivtv_yuv_window_setup: %72*/
/*   %73 = phi i32 [ %48, %70 ], [ %67, %64 ]*/
else /* if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_70_159) & (memory_controller_waitrequest == 1'd0))) */
begin
ivtv_yuv_window_setup_72_73 = ivtv_yuv_window_setup_47_48_reg;
end
end
always @(posedge clk) begin
/* ivtv_yuv_window_setup: %72*/
/*   %73 = phi i32 [ %48, %70 ], [ %67, %64 ]*/
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_64_158) & (memory_controller_waitrequest == 1'd0)))
begin
ivtv_yuv_window_setup_72_73_reg <= ivtv_yuv_window_setup_72_73;
if (reset == 1'b0 && ^(ivtv_yuv_window_setup_72_73) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to ivtv_yuv_window_setup_72_73_reg"); $finish; end
end
/* ivtv_yuv_window_setup: %72*/
/*   %73 = phi i32 [ %48, %70 ], [ %67, %64 ]*/
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_70_159) & (memory_controller_waitrequest == 1'd0)))
begin
ivtv_yuv_window_setup_72_73_reg <= ivtv_yuv_window_setup_72_73;
if (reset == 1'b0 && ^(ivtv_yuv_window_setup_72_73) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to ivtv_yuv_window_setup_72_73_reg"); $finish; end
end
end
always @(*) begin
/* ivtv_yuv_window_setup: %72*/
/*   %74 = phi i32 [ %49, %70 ], [ %68, %64 ]*/
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_64_158) & (memory_controller_waitrequest == 1'd0)))
begin
ivtv_yuv_window_setup_72_74 = ivtv_yuv_window_setup_64_68_reg;
end
/* ivtv_yuv_window_setup: %72*/
/*   %74 = phi i32 [ %49, %70 ], [ %68, %64 ]*/
else /* if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_70_159) & (memory_controller_waitrequest == 1'd0))) */
begin
ivtv_yuv_window_setup_72_74 = ivtv_yuv_window_setup_47_49_reg;
end
end
always @(posedge clk) begin
/* ivtv_yuv_window_setup: %72*/
/*   %74 = phi i32 [ %49, %70 ], [ %68, %64 ]*/
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_64_158) & (memory_controller_waitrequest == 1'd0)))
begin
ivtv_yuv_window_setup_72_74_reg <= ivtv_yuv_window_setup_72_74;
if (reset == 1'b0 && ^(ivtv_yuv_window_setup_72_74) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to ivtv_yuv_window_setup_72_74_reg"); $finish; end
end
/* ivtv_yuv_window_setup: %72*/
/*   %74 = phi i32 [ %49, %70 ], [ %68, %64 ]*/
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_70_159) & (memory_controller_waitrequest == 1'd0)))
begin
ivtv_yuv_window_setup_72_74_reg <= ivtv_yuv_window_setup_72_74;
if (reset == 1'b0 && ^(ivtv_yuv_window_setup_72_74) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to ivtv_yuv_window_setup_72_74_reg"); $finish; end
end
end
always @(*) begin
/* ivtv_yuv_window_setup: %72*/
/*   %75 = phi i32 [ %50, %70 ], [ %69, %64 ]*/
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_64_158) & (memory_controller_waitrequest == 1'd0)))
begin
ivtv_yuv_window_setup_72_75 = ivtv_yuv_window_setup_64_69_reg;
end
/* ivtv_yuv_window_setup: %72*/
/*   %75 = phi i32 [ %50, %70 ], [ %69, %64 ]*/
else /* if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_70_159) & (memory_controller_waitrequest == 1'd0))) */
begin
ivtv_yuv_window_setup_72_75 = ivtv_yuv_window_setup_47_50_reg;
end
end
always @(posedge clk) begin
/* ivtv_yuv_window_setup: %72*/
/*   %75 = phi i32 [ %50, %70 ], [ %69, %64 ]*/
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_64_158) & (memory_controller_waitrequest == 1'd0)))
begin
ivtv_yuv_window_setup_72_75_reg <= ivtv_yuv_window_setup_72_75;
if (reset == 1'b0 && ^(ivtv_yuv_window_setup_72_75) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to ivtv_yuv_window_setup_72_75_reg"); $finish; end
end
/* ivtv_yuv_window_setup: %72*/
/*   %75 = phi i32 [ %50, %70 ], [ %69, %64 ]*/
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_70_159) & (memory_controller_waitrequest == 1'd0)))
begin
ivtv_yuv_window_setup_72_75_reg <= ivtv_yuv_window_setup_72_75;
if (reset == 1'b0 && ^(ivtv_yuv_window_setup_72_75) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to ivtv_yuv_window_setup_72_75_reg"); $finish; end
end
end
always @(*) begin
/* ivtv_yuv_window_setup: %72*/
/*   %76 = phi i32 [ %71, %70 ], [ 0, %64 ]*/
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_64_158) & (memory_controller_waitrequest == 1'd0)))
begin
ivtv_yuv_window_setup_72_76 = 32'd0;
end
/* ivtv_yuv_window_setup: %72*/
/*   %76 = phi i32 [ %71, %70 ], [ 0, %64 ]*/
else /* if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_70_159) & (memory_controller_waitrequest == 1'd0))) */
begin
ivtv_yuv_window_setup_72_76 = ivtv_yuv_window_setup_70_71;
end
end
always @(posedge clk) begin
/* ivtv_yuv_window_setup: %72*/
/*   %76 = phi i32 [ %71, %70 ], [ 0, %64 ]*/
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_64_158) & (memory_controller_waitrequest == 1'd0)))
begin
ivtv_yuv_window_setup_72_76_reg <= ivtv_yuv_window_setup_72_76;
if (reset == 1'b0 && ^(ivtv_yuv_window_setup_72_76) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to ivtv_yuv_window_setup_72_76_reg"); $finish; end
end
/* ivtv_yuv_window_setup: %72*/
/*   %76 = phi i32 [ %71, %70 ], [ 0, %64 ]*/
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_70_159) & (memory_controller_waitrequest == 1'd0)))
begin
ivtv_yuv_window_setup_72_76_reg <= ivtv_yuv_window_setup_72_76;
if (reset == 1'b0 && ^(ivtv_yuv_window_setup_72_76) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to ivtv_yuv_window_setup_72_76_reg"); $finish; end
end
end
always @(*) begin
/* ivtv_yuv_window_setup: %72*/
/*   %77 = getelementptr inbounds %struct.yuv_frame_info* %f, i32 0, i32 9*/
begin
ivtv_yuv_window_setup_72_77 = (arg_f + 36);
end
end
always @(posedge clk) begin
/* ivtv_yuv_window_setup: %72*/
/*   %77 = getelementptr inbounds %struct.yuv_frame_info* %f, i32 0, i32 9*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_72_160))
begin
ivtv_yuv_window_setup_72_77_reg <= ivtv_yuv_window_setup_72_77;
if (reset == 1'b0 && ^(ivtv_yuv_window_setup_72_77) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to ivtv_yuv_window_setup_72_77_reg"); $finish; end
end
end
always @(*) begin
/* ivtv_yuv_window_setup: %72*/
/*   %78 = load i32* %77, align 4, !tbaa !0*/
begin
ivtv_yuv_window_setup_72_78 = memory_controller_out_a[31:0];
end
end
always @(posedge clk) begin
/* ivtv_yuv_window_setup: %72*/
/*   %78 = load i32* %77, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_72_162))
begin
ivtv_yuv_window_setup_72_78_reg <= ivtv_yuv_window_setup_72_78;
if (reset == 1'b0 && ^(ivtv_yuv_window_setup_72_78) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to ivtv_yuv_window_setup_72_78_reg"); $finish; end
end
end
always @(*) begin
/* ivtv_yuv_window_setup: %72*/
/*   %79 = add i32 %75, %76*/
begin
ivtv_yuv_window_setup_72_79 = (ivtv_yuv_window_setup_72_75_reg + ivtv_yuv_window_setup_72_76_reg);
end
end
always @(posedge clk) begin
/* ivtv_yuv_window_setup: %72*/
/*   %79 = add i32 %75, %76*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_72_160))
begin
ivtv_yuv_window_setup_72_79_reg <= ivtv_yuv_window_setup_72_79;
if (reset == 1'b0 && ^(ivtv_yuv_window_setup_72_79) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to ivtv_yuv_window_setup_72_79_reg"); $finish; end
end
end
always @(*) begin
/* ivtv_yuv_window_setup: %72*/
/*   %80 = sub i32 %79, %78*/
begin
ivtv_yuv_window_setup_72_80 = (ivtv_yuv_window_setup_72_79_reg - ivtv_yuv_window_setup_72_78);
end
end
always @(posedge clk) begin
/* ivtv_yuv_window_setup: %72*/
/*   %80 = sub i32 %79, %78*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_72_162))
begin
ivtv_yuv_window_setup_72_80_reg <= ivtv_yuv_window_setup_72_80;
if (reset == 1'b0 && ^(ivtv_yuv_window_setup_72_80) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to ivtv_yuv_window_setup_72_80_reg"); $finish; end
end
end
always @(*) begin
/* ivtv_yuv_window_setup: %72*/
/*   %81 = icmp sgt i32 %80, 0*/
begin
ivtv_yuv_window_setup_72_81 = ($signed(ivtv_yuv_window_setup_72_80) > $signed(32'd0));
end
end
always @(posedge clk) begin
/* ivtv_yuv_window_setup: %72*/
/*   %81 = icmp sgt i32 %80, 0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_72_162))
begin
ivtv_yuv_window_setup_72_81_reg <= ivtv_yuv_window_setup_72_81;
if (reset == 1'b0 && ^(ivtv_yuv_window_setup_72_81) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to ivtv_yuv_window_setup_72_81_reg"); $finish; end
end
end
always @(*) begin
/* ivtv_yuv_window_setup: %82*/
/*   %83 = sub nsw i32 %75, %80*/
begin
ivtv_yuv_window_setup_82_83 = (ivtv_yuv_window_setup_72_75_reg - ivtv_yuv_window_setup_72_80_reg);
end
end
always @(posedge clk) begin
/* ivtv_yuv_window_setup: %82*/
/*   %83 = sub nsw i32 %75, %80*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_82_163))
begin
ivtv_yuv_window_setup_82_83_reg <= ivtv_yuv_window_setup_82_83;
if (reset == 1'b0 && ^(ivtv_yuv_window_setup_82_83) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to ivtv_yuv_window_setup_82_83_reg"); $finish; end
end
end
always @(*) begin
ivtv_yuv_window_setup_82_84 = ivtv_yuv_window_setup_82_84_stage0_reg;
end
always @(posedge clk) begin
/* ivtv_yuv_window_setup: %82*/
/*   %84 = mul nsw i32 %80, %57*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_82_164))
begin
ivtv_yuv_window_setup_82_84_reg <= ivtv_yuv_window_setup_82_84;
if (reset == 1'b0 && ^(ivtv_yuv_window_setup_82_84) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to ivtv_yuv_window_setup_82_84_reg"); $finish; end
end
/* ivtv_yuv_window_setup: %82*/
/*   %84 = mul nsw i32 %80, %57*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_82_164))
begin
ivtv_yuv_window_setup_82_84_reg <= ivtv_yuv_window_setup_82_84;
if (reset == 1'b0 && ^(ivtv_yuv_window_setup_82_84) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to ivtv_yuv_window_setup_82_84_reg"); $finish; end
end
end
always @(*) begin
/* ivtv_yuv_window_setup: %82*/
/*   %85 = ashr i32 %84, 16*/
begin
ivtv_yuv_window_setup_82_85 = ($signed(ivtv_yuv_window_setup_82_84) >>> 32'd16);
end
end
always @(posedge clk) begin
/* ivtv_yuv_window_setup: %82*/
/*   %85 = ashr i32 %84, 16*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_82_164))
begin
ivtv_yuv_window_setup_82_85_reg <= ivtv_yuv_window_setup_82_85;
if (reset == 1'b0 && ^(ivtv_yuv_window_setup_82_85) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to ivtv_yuv_window_setup_82_85_reg"); $finish; end
end
end
always @(*) begin
/* ivtv_yuv_window_setup: %82*/
/*   %86 = sub nsw i32 %74, %85*/
begin
ivtv_yuv_window_setup_82_86 = (ivtv_yuv_window_setup_72_74_reg - ivtv_yuv_window_setup_82_85);
end
end
always @(posedge clk) begin
/* ivtv_yuv_window_setup: %82*/
/*   %86 = sub nsw i32 %74, %85*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_82_164))
begin
ivtv_yuv_window_setup_82_86_reg <= ivtv_yuv_window_setup_82_86;
if (reset == 1'b0 && ^(ivtv_yuv_window_setup_82_86) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to ivtv_yuv_window_setup_82_86_reg"); $finish; end
end
end
always @(*) begin
/* ivtv_yuv_window_setup: %87*/
/*   %88 = phi i32 [ %86, %82 ], [ %74, %72 ]*/
if ((((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_72_162) & (memory_controller_waitrequest == 1'd0)) & (ivtv_yuv_window_setup_72_81 == 1'd0)))
begin
ivtv_yuv_window_setup_87_88 = ivtv_yuv_window_setup_72_74_reg;
end
/* ivtv_yuv_window_setup: %87*/
/*   %88 = phi i32 [ %86, %82 ], [ %74, %72 ]*/
else /* if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_82_165) & (memory_controller_waitrequest == 1'd0))) */
begin
ivtv_yuv_window_setup_87_88 = ivtv_yuv_window_setup_82_86_reg;
end
end
always @(posedge clk) begin
/* ivtv_yuv_window_setup: %87*/
/*   %88 = phi i32 [ %86, %82 ], [ %74, %72 ]*/
if ((((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_72_162) & (memory_controller_waitrequest == 1'd0)) & (ivtv_yuv_window_setup_72_81 == 1'd0)))
begin
ivtv_yuv_window_setup_87_88_reg <= ivtv_yuv_window_setup_87_88;
if (reset == 1'b0 && ^(ivtv_yuv_window_setup_87_88) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to ivtv_yuv_window_setup_87_88_reg"); $finish; end
end
/* ivtv_yuv_window_setup: %87*/
/*   %88 = phi i32 [ %86, %82 ], [ %74, %72 ]*/
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_82_165) & (memory_controller_waitrequest == 1'd0)))
begin
ivtv_yuv_window_setup_87_88_reg <= ivtv_yuv_window_setup_87_88;
if (reset == 1'b0 && ^(ivtv_yuv_window_setup_87_88) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to ivtv_yuv_window_setup_87_88_reg"); $finish; end
end
end
always @(*) begin
/* ivtv_yuv_window_setup: %87*/
/*   %89 = phi i32 [ %83, %82 ], [ %75, %72 ]*/
if ((((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_72_162) & (memory_controller_waitrequest == 1'd0)) & (ivtv_yuv_window_setup_72_81 == 1'd0)))
begin
ivtv_yuv_window_setup_87_89 = ivtv_yuv_window_setup_72_75_reg;
end
/* ivtv_yuv_window_setup: %87*/
/*   %89 = phi i32 [ %83, %82 ], [ %75, %72 ]*/
else /* if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_82_165) & (memory_controller_waitrequest == 1'd0))) */
begin
ivtv_yuv_window_setup_87_89 = ivtv_yuv_window_setup_82_83_reg;
end
end
always @(posedge clk) begin
/* ivtv_yuv_window_setup: %87*/
/*   %89 = phi i32 [ %83, %82 ], [ %75, %72 ]*/
if ((((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_72_162) & (memory_controller_waitrequest == 1'd0)) & (ivtv_yuv_window_setup_72_81 == 1'd0)))
begin
ivtv_yuv_window_setup_87_89_reg <= ivtv_yuv_window_setup_87_89;
if (reset == 1'b0 && ^(ivtv_yuv_window_setup_87_89) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to ivtv_yuv_window_setup_87_89_reg"); $finish; end
end
/* ivtv_yuv_window_setup: %87*/
/*   %89 = phi i32 [ %83, %82 ], [ %75, %72 ]*/
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_82_165) & (memory_controller_waitrequest == 1'd0)))
begin
ivtv_yuv_window_setup_87_89_reg <= ivtv_yuv_window_setup_87_89;
if (reset == 1'b0 && ^(ivtv_yuv_window_setup_87_89) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to ivtv_yuv_window_setup_87_89_reg"); $finish; end
end
end
always @(*) begin
/* ivtv_yuv_window_setup: %87*/
/*   %90 = shl i32 %28, 16*/
begin
ivtv_yuv_window_setup_87_90 = (ivtv_yuv_window_setup_26_28_reg <<< (32'd16 % 32));
end
end
always @(posedge clk) begin
/* ivtv_yuv_window_setup: %87*/
/*   %90 = shl i32 %28, 16*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_87_166))
begin
ivtv_yuv_window_setup_87_90_reg <= ivtv_yuv_window_setup_87_90;
if (reset == 1'b0 && ^(ivtv_yuv_window_setup_87_90) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to ivtv_yuv_window_setup_87_90_reg"); $finish; end
end
end
always @(*) begin
ivtv_yuv_window_setup_87_91 = ivtv_yuv_window_setup_signed_divide_32_0;
end
always @(*) begin
/* ivtv_yuv_window_setup: %87*/
/*   %91 = sdiv i32 %90, %29*/
ivtv_yuv_window_setup_87_91_reg = ivtv_yuv_window_setup_55_57_reg;
end
always @(*) begin
/* ivtv_yuv_window_setup: %87*/
/*   %92 = getelementptr inbounds %struct.yuv_frame_info* %f, i32 0, i32 10*/
begin
ivtv_yuv_window_setup_87_92 = (arg_f + 40);
end
end
always @(posedge clk) begin
/* ivtv_yuv_window_setup: %87*/
/*   %92 = getelementptr inbounds %struct.yuv_frame_info* %f, i32 0, i32 10*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_87_166))
begin
ivtv_yuv_window_setup_87_92_reg <= ivtv_yuv_window_setup_87_92;
if (reset == 1'b0 && ^(ivtv_yuv_window_setup_87_92) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to ivtv_yuv_window_setup_87_92_reg"); $finish; end
end
end
always @(*) begin
/* ivtv_yuv_window_setup: %87*/
/*   %93 = load i32* %92, align 4, !tbaa !0*/
begin
ivtv_yuv_window_setup_87_93 = memory_controller_out_a[31:0];
end
end
always @(posedge clk) begin
/* ivtv_yuv_window_setup: %87*/
/*   %93 = load i32* %92, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_87_168))
begin
ivtv_yuv_window_setup_87_93_reg <= ivtv_yuv_window_setup_87_93;
if (reset == 1'b0 && ^(ivtv_yuv_window_setup_87_93) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to ivtv_yuv_window_setup_87_93_reg"); $finish; end
end
end
always @(*) begin
/* ivtv_yuv_window_setup: %87*/
/*   %94 = getelementptr inbounds %struct.yuv_frame_info* %f, i32 0, i32 11*/
begin
ivtv_yuv_window_setup_87_94 = (arg_f + 44);
end
end
always @(posedge clk) begin
/* ivtv_yuv_window_setup: %87*/
/*   %94 = getelementptr inbounds %struct.yuv_frame_info* %f, i32 0, i32 11*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_87_166))
begin
ivtv_yuv_window_setup_87_94_reg <= ivtv_yuv_window_setup_87_94;
if (reset == 1'b0 && ^(ivtv_yuv_window_setup_87_94) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to ivtv_yuv_window_setup_87_94_reg"); $finish; end
end
end
always @(*) begin
/* ivtv_yuv_window_setup: %87*/
/*   %95 = load i32* %94, align 4, !tbaa !0*/
begin
ivtv_yuv_window_setup_87_95 = memory_controller_out_b[31:0];
end
end
always @(posedge clk) begin
/* ivtv_yuv_window_setup: %87*/
/*   %95 = load i32* %94, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_87_168))
begin
ivtv_yuv_window_setup_87_95_reg <= ivtv_yuv_window_setup_87_95;
if (reset == 1'b0 && ^(ivtv_yuv_window_setup_87_95) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to ivtv_yuv_window_setup_87_95_reg"); $finish; end
end
end
always @(*) begin
/* ivtv_yuv_window_setup: %87*/
/*   %96 = sub nsw i32 %93, %95*/
begin
ivtv_yuv_window_setup_87_96 = (ivtv_yuv_window_setup_87_93 - ivtv_yuv_window_setup_87_95);
end
end
always @(posedge clk) begin
/* ivtv_yuv_window_setup: %87*/
/*   %96 = sub nsw i32 %93, %95*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_87_168))
begin
ivtv_yuv_window_setup_87_96_reg <= ivtv_yuv_window_setup_87_96;
if (reset == 1'b0 && ^(ivtv_yuv_window_setup_87_96) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to ivtv_yuv_window_setup_87_96_reg"); $finish; end
end
end
always @(*) begin
/* ivtv_yuv_window_setup: %87*/
/*   %97 = icmp sgt i32 %96, 0*/
begin
ivtv_yuv_window_setup_87_97 = ($signed(ivtv_yuv_window_setup_87_96) > $signed(32'd0));
end
end
always @(posedge clk) begin
/* ivtv_yuv_window_setup: %87*/
/*   %97 = icmp sgt i32 %96, 0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_87_168))
begin
ivtv_yuv_window_setup_87_97_reg <= ivtv_yuv_window_setup_87_97;
if (reset == 1'b0 && ^(ivtv_yuv_window_setup_87_97) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to ivtv_yuv_window_setup_87_97_reg"); $finish; end
end
end
always @(*) begin
ivtv_yuv_window_setup_98_99 = ivtv_yuv_window_setup_98_99_stage0_reg;
end
always @(posedge clk) begin
/* ivtv_yuv_window_setup: %98*/
/*   %99 = mul nsw i32 %96, %91*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_98_200))
begin
ivtv_yuv_window_setup_98_99_reg <= ivtv_yuv_window_setup_98_99;
if (reset == 1'b0 && ^(ivtv_yuv_window_setup_98_99) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to ivtv_yuv_window_setup_98_99_reg"); $finish; end
end
/* ivtv_yuv_window_setup: %98*/
/*   %99 = mul nsw i32 %96, %91*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_98_200))
begin
ivtv_yuv_window_setup_98_99_reg <= ivtv_yuv_window_setup_98_99;
if (reset == 1'b0 && ^(ivtv_yuv_window_setup_98_99) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to ivtv_yuv_window_setup_98_99_reg"); $finish; end
end
end
always @(*) begin
/* ivtv_yuv_window_setup: %98*/
/*   %100 = ashr i32 %99, 16*/
begin
ivtv_yuv_window_setup_98_100 = ($signed(ivtv_yuv_window_setup_98_99) >>> 32'd16);
end
end
always @(posedge clk) begin
/* ivtv_yuv_window_setup: %98*/
/*   %100 = ashr i32 %99, 16*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_98_200))
begin
ivtv_yuv_window_setup_98_100_reg <= ivtv_yuv_window_setup_98_100;
if (reset == 1'b0 && ^(ivtv_yuv_window_setup_98_100) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to ivtv_yuv_window_setup_98_100_reg"); $finish; end
end
end
always @(*) begin
/* ivtv_yuv_window_setup: %98*/
/*   %101 = add nsw i32 %27, %100*/
begin
ivtv_yuv_window_setup_98_101 = (ivtv_yuv_window_setup_26_27_reg + ivtv_yuv_window_setup_98_100);
end
end
always @(posedge clk) begin
/* ivtv_yuv_window_setup: %98*/
/*   %101 = add nsw i32 %27, %100*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_98_200))
begin
ivtv_yuv_window_setup_98_101_reg <= ivtv_yuv_window_setup_98_101;
if (reset == 1'b0 && ^(ivtv_yuv_window_setup_98_101) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to ivtv_yuv_window_setup_98_101_reg"); $finish; end
end
end
always @(*) begin
/* ivtv_yuv_window_setup: %98*/
/*   %102 = sub nsw i32 %28, %100*/
begin
ivtv_yuv_window_setup_98_102 = (ivtv_yuv_window_setup_26_28_reg - ivtv_yuv_window_setup_98_100);
end
end
always @(posedge clk) begin
/* ivtv_yuv_window_setup: %98*/
/*   %102 = sub nsw i32 %28, %100*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_98_200))
begin
ivtv_yuv_window_setup_98_102_reg <= ivtv_yuv_window_setup_98_102;
if (reset == 1'b0 && ^(ivtv_yuv_window_setup_98_102) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to ivtv_yuv_window_setup_98_102_reg"); $finish; end
end
end
always @(*) begin
/* ivtv_yuv_window_setup: %98*/
/*   %103 = sub nsw i32 %29, %96*/
begin
ivtv_yuv_window_setup_98_103 = (ivtv_yuv_window_setup_26_29_reg - ivtv_yuv_window_setup_87_96_reg);
end
end
always @(posedge clk) begin
/* ivtv_yuv_window_setup: %98*/
/*   %103 = sub nsw i32 %29, %96*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_98_199))
begin
ivtv_yuv_window_setup_98_103_reg <= ivtv_yuv_window_setup_98_103;
if (reset == 1'b0 && ^(ivtv_yuv_window_setup_98_103) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to ivtv_yuv_window_setup_98_103_reg"); $finish; end
end
end
always @(*) begin
/* ivtv_yuv_window_setup: %104*/
/*   %105 = sub nsw i32 %95, %93*/
begin
ivtv_yuv_window_setup_104_105 = (ivtv_yuv_window_setup_87_95_reg - ivtv_yuv_window_setup_87_93_reg);
end
end
always @(posedge clk) begin
/* ivtv_yuv_window_setup: %104*/
/*   %105 = sub nsw i32 %95, %93*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_104_203))
begin
ivtv_yuv_window_setup_104_105_reg <= ivtv_yuv_window_setup_104_105;
if (reset == 1'b0 && ^(ivtv_yuv_window_setup_104_105) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to ivtv_yuv_window_setup_104_105_reg"); $finish; end
end
end
always @(*) begin
/* ivtv_yuv_window_setup: %106*/
/*   %107 = phi i32 [ %27, %104 ], [ %101, %98 ]*/
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_98_202) & (memory_controller_waitrequest == 1'd0)))
begin
ivtv_yuv_window_setup_106_107 = ivtv_yuv_window_setup_98_101_reg;
end
/* ivtv_yuv_window_setup: %106*/
/*   %107 = phi i32 [ %27, %104 ], [ %101, %98 ]*/
else /* if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_104_203) & (memory_controller_waitrequest == 1'd0))) */
begin
ivtv_yuv_window_setup_106_107 = ivtv_yuv_window_setup_26_27_reg;
end
end
always @(posedge clk) begin
/* ivtv_yuv_window_setup: %106*/
/*   %107 = phi i32 [ %27, %104 ], [ %101, %98 ]*/
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_98_202) & (memory_controller_waitrequest == 1'd0)))
begin
ivtv_yuv_window_setup_106_107_reg <= ivtv_yuv_window_setup_106_107;
if (reset == 1'b0 && ^(ivtv_yuv_window_setup_106_107) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to ivtv_yuv_window_setup_106_107_reg"); $finish; end
end
/* ivtv_yuv_window_setup: %106*/
/*   %107 = phi i32 [ %27, %104 ], [ %101, %98 ]*/
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_104_203) & (memory_controller_waitrequest == 1'd0)))
begin
ivtv_yuv_window_setup_106_107_reg <= ivtv_yuv_window_setup_106_107;
if (reset == 1'b0 && ^(ivtv_yuv_window_setup_106_107) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to ivtv_yuv_window_setup_106_107_reg"); $finish; end
end
end
always @(*) begin
/* ivtv_yuv_window_setup: %106*/
/*   %108 = phi i32 [ %28, %104 ], [ %102, %98 ]*/
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_98_202) & (memory_controller_waitrequest == 1'd0)))
begin
ivtv_yuv_window_setup_106_108 = ivtv_yuv_window_setup_98_102_reg;
end
/* ivtv_yuv_window_setup: %106*/
/*   %108 = phi i32 [ %28, %104 ], [ %102, %98 ]*/
else /* if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_104_203) & (memory_controller_waitrequest == 1'd0))) */
begin
ivtv_yuv_window_setup_106_108 = ivtv_yuv_window_setup_26_28_reg;
end
end
always @(posedge clk) begin
/* ivtv_yuv_window_setup: %106*/
/*   %108 = phi i32 [ %28, %104 ], [ %102, %98 ]*/
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_98_202) & (memory_controller_waitrequest == 1'd0)))
begin
ivtv_yuv_window_setup_106_108_reg <= ivtv_yuv_window_setup_106_108;
if (reset == 1'b0 && ^(ivtv_yuv_window_setup_106_108) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to ivtv_yuv_window_setup_106_108_reg"); $finish; end
end
/* ivtv_yuv_window_setup: %106*/
/*   %108 = phi i32 [ %28, %104 ], [ %102, %98 ]*/
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_104_203) & (memory_controller_waitrequest == 1'd0)))
begin
ivtv_yuv_window_setup_106_108_reg <= ivtv_yuv_window_setup_106_108;
if (reset == 1'b0 && ^(ivtv_yuv_window_setup_106_108) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to ivtv_yuv_window_setup_106_108_reg"); $finish; end
end
end
always @(*) begin
/* ivtv_yuv_window_setup: %106*/
/*   %109 = phi i32 [ %29, %104 ], [ %103, %98 ]*/
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_98_202) & (memory_controller_waitrequest == 1'd0)))
begin
ivtv_yuv_window_setup_106_109 = ivtv_yuv_window_setup_98_103_reg;
end
/* ivtv_yuv_window_setup: %106*/
/*   %109 = phi i32 [ %29, %104 ], [ %103, %98 ]*/
else /* if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_104_203) & (memory_controller_waitrequest == 1'd0))) */
begin
ivtv_yuv_window_setup_106_109 = ivtv_yuv_window_setup_26_29_reg;
end
end
always @(posedge clk) begin
/* ivtv_yuv_window_setup: %106*/
/*   %109 = phi i32 [ %29, %104 ], [ %103, %98 ]*/
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_98_202) & (memory_controller_waitrequest == 1'd0)))
begin
ivtv_yuv_window_setup_106_109_reg <= ivtv_yuv_window_setup_106_109;
if (reset == 1'b0 && ^(ivtv_yuv_window_setup_106_109) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to ivtv_yuv_window_setup_106_109_reg"); $finish; end
end
/* ivtv_yuv_window_setup: %106*/
/*   %109 = phi i32 [ %29, %104 ], [ %103, %98 ]*/
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_104_203) & (memory_controller_waitrequest == 1'd0)))
begin
ivtv_yuv_window_setup_106_109_reg <= ivtv_yuv_window_setup_106_109;
if (reset == 1'b0 && ^(ivtv_yuv_window_setup_106_109) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to ivtv_yuv_window_setup_106_109_reg"); $finish; end
end
end
always @(*) begin
/* ivtv_yuv_window_setup: %106*/
/*   %110 = phi i32 [ %105, %104 ], [ 0, %98 ]*/
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_98_202) & (memory_controller_waitrequest == 1'd0)))
begin
ivtv_yuv_window_setup_106_110 = 32'd0;
end
/* ivtv_yuv_window_setup: %106*/
/*   %110 = phi i32 [ %105, %104 ], [ 0, %98 ]*/
else /* if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_104_203) & (memory_controller_waitrequest == 1'd0))) */
begin
ivtv_yuv_window_setup_106_110 = ivtv_yuv_window_setup_104_105;
end
end
always @(posedge clk) begin
/* ivtv_yuv_window_setup: %106*/
/*   %110 = phi i32 [ %105, %104 ], [ 0, %98 ]*/
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_98_202) & (memory_controller_waitrequest == 1'd0)))
begin
ivtv_yuv_window_setup_106_110_reg <= ivtv_yuv_window_setup_106_110;
if (reset == 1'b0 && ^(ivtv_yuv_window_setup_106_110) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to ivtv_yuv_window_setup_106_110_reg"); $finish; end
end
/* ivtv_yuv_window_setup: %106*/
/*   %110 = phi i32 [ %105, %104 ], [ 0, %98 ]*/
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_104_203) & (memory_controller_waitrequest == 1'd0)))
begin
ivtv_yuv_window_setup_106_110_reg <= ivtv_yuv_window_setup_106_110;
if (reset == 1'b0 && ^(ivtv_yuv_window_setup_106_110) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to ivtv_yuv_window_setup_106_110_reg"); $finish; end
end
end
always @(*) begin
/* ivtv_yuv_window_setup: %106*/
/*   %111 = getelementptr inbounds %struct.yuv_frame_info* %f, i32 0, i32 12*/
begin
ivtv_yuv_window_setup_106_111 = (arg_f + 48);
end
end
always @(posedge clk) begin
/* ivtv_yuv_window_setup: %106*/
/*   %111 = getelementptr inbounds %struct.yuv_frame_info* %f, i32 0, i32 12*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_106_204))
begin
ivtv_yuv_window_setup_106_111_reg <= ivtv_yuv_window_setup_106_111;
if (reset == 1'b0 && ^(ivtv_yuv_window_setup_106_111) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to ivtv_yuv_window_setup_106_111_reg"); $finish; end
end
end
always @(*) begin
/* ivtv_yuv_window_setup: %106*/
/*   %112 = load i32* %111, align 4, !tbaa !0*/
begin
ivtv_yuv_window_setup_106_112 = memory_controller_out_a[31:0];
end
end
always @(posedge clk) begin
/* ivtv_yuv_window_setup: %106*/
/*   %112 = load i32* %111, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_106_206))
begin
ivtv_yuv_window_setup_106_112_reg <= ivtv_yuv_window_setup_106_112;
if (reset == 1'b0 && ^(ivtv_yuv_window_setup_106_112) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to ivtv_yuv_window_setup_106_112_reg"); $finish; end
end
end
always @(*) begin
/* ivtv_yuv_window_setup: %106*/
/*   %113 = add i32 %109, %110*/
begin
ivtv_yuv_window_setup_106_113 = (ivtv_yuv_window_setup_106_109_reg + ivtv_yuv_window_setup_106_110_reg);
end
end
always @(posedge clk) begin
/* ivtv_yuv_window_setup: %106*/
/*   %113 = add i32 %109, %110*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_106_204))
begin
ivtv_yuv_window_setup_106_113_reg <= ivtv_yuv_window_setup_106_113;
if (reset == 1'b0 && ^(ivtv_yuv_window_setup_106_113) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to ivtv_yuv_window_setup_106_113_reg"); $finish; end
end
end
always @(*) begin
/* ivtv_yuv_window_setup: %106*/
/*   %114 = sub i32 %113, %112*/
begin
ivtv_yuv_window_setup_106_114 = (ivtv_yuv_window_setup_106_113_reg - ivtv_yuv_window_setup_106_112);
end
end
always @(posedge clk) begin
/* ivtv_yuv_window_setup: %106*/
/*   %114 = sub i32 %113, %112*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_106_206))
begin
ivtv_yuv_window_setup_106_114_reg <= ivtv_yuv_window_setup_106_114;
if (reset == 1'b0 && ^(ivtv_yuv_window_setup_106_114) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to ivtv_yuv_window_setup_106_114_reg"); $finish; end
end
end
always @(*) begin
/* ivtv_yuv_window_setup: %106*/
/*   %115 = icmp sgt i32 %114, 0*/
begin
ivtv_yuv_window_setup_106_115 = ($signed(ivtv_yuv_window_setup_106_114) > $signed(32'd0));
end
end
always @(posedge clk) begin
/* ivtv_yuv_window_setup: %106*/
/*   %115 = icmp sgt i32 %114, 0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_106_206))
begin
ivtv_yuv_window_setup_106_115_reg <= ivtv_yuv_window_setup_106_115;
if (reset == 1'b0 && ^(ivtv_yuv_window_setup_106_115) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to ivtv_yuv_window_setup_106_115_reg"); $finish; end
end
end
always @(*) begin
/* ivtv_yuv_window_setup: %116*/
/*   %117 = sub nsw i32 %109, %114*/
begin
ivtv_yuv_window_setup_116_117 = (ivtv_yuv_window_setup_106_109_reg - ivtv_yuv_window_setup_106_114_reg);
end
end
always @(posedge clk) begin
/* ivtv_yuv_window_setup: %116*/
/*   %117 = sub nsw i32 %109, %114*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_116_207))
begin
ivtv_yuv_window_setup_116_117_reg <= ivtv_yuv_window_setup_116_117;
if (reset == 1'b0 && ^(ivtv_yuv_window_setup_116_117) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to ivtv_yuv_window_setup_116_117_reg"); $finish; end
end
end
always @(*) begin
ivtv_yuv_window_setup_116_118 = ivtv_yuv_window_setup_116_118_stage0_reg;
end
always @(posedge clk) begin
/* ivtv_yuv_window_setup: %116*/
/*   %118 = mul nsw i32 %114, %91*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_116_208))
begin
ivtv_yuv_window_setup_116_118_reg <= ivtv_yuv_window_setup_116_118;
if (reset == 1'b0 && ^(ivtv_yuv_window_setup_116_118) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to ivtv_yuv_window_setup_116_118_reg"); $finish; end
end
/* ivtv_yuv_window_setup: %116*/
/*   %118 = mul nsw i32 %114, %91*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_116_208))
begin
ivtv_yuv_window_setup_116_118_reg <= ivtv_yuv_window_setup_116_118;
if (reset == 1'b0 && ^(ivtv_yuv_window_setup_116_118) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to ivtv_yuv_window_setup_116_118_reg"); $finish; end
end
end
always @(*) begin
/* ivtv_yuv_window_setup: %116*/
/*   %119 = ashr i32 %118, 16*/
begin
ivtv_yuv_window_setup_116_119 = ($signed(ivtv_yuv_window_setup_116_118) >>> 32'd16);
end
end
always @(posedge clk) begin
/* ivtv_yuv_window_setup: %116*/
/*   %119 = ashr i32 %118, 16*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_116_208))
begin
ivtv_yuv_window_setup_116_119_reg <= ivtv_yuv_window_setup_116_119;
if (reset == 1'b0 && ^(ivtv_yuv_window_setup_116_119) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to ivtv_yuv_window_setup_116_119_reg"); $finish; end
end
end
always @(*) begin
/* ivtv_yuv_window_setup: %116*/
/*   %120 = sub nsw i32 %108, %119*/
begin
ivtv_yuv_window_setup_116_120 = (ivtv_yuv_window_setup_106_108_reg - ivtv_yuv_window_setup_116_119);
end
end
always @(posedge clk) begin
/* ivtv_yuv_window_setup: %116*/
/*   %120 = sub nsw i32 %108, %119*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_116_208))
begin
ivtv_yuv_window_setup_116_120_reg <= ivtv_yuv_window_setup_116_120;
if (reset == 1'b0 && ^(ivtv_yuv_window_setup_116_120) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to ivtv_yuv_window_setup_116_120_reg"); $finish; end
end
end
always @(*) begin
/* ivtv_yuv_window_setup: %121*/
/*   %122 = phi i32 [ %120, %116 ], [ %108, %106 ]*/
if ((((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_106_206) & (memory_controller_waitrequest == 1'd0)) & (ivtv_yuv_window_setup_106_115 == 1'd0)))
begin
ivtv_yuv_window_setup_121_122 = ivtv_yuv_window_setup_106_108_reg;
end
/* ivtv_yuv_window_setup: %121*/
/*   %122 = phi i32 [ %120, %116 ], [ %108, %106 ]*/
else /* if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_116_209) & (memory_controller_waitrequest == 1'd0))) */
begin
ivtv_yuv_window_setup_121_122 = ivtv_yuv_window_setup_116_120_reg;
end
end
always @(posedge clk) begin
/* ivtv_yuv_window_setup: %121*/
/*   %122 = phi i32 [ %120, %116 ], [ %108, %106 ]*/
if ((((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_106_206) & (memory_controller_waitrequest == 1'd0)) & (ivtv_yuv_window_setup_106_115 == 1'd0)))
begin
ivtv_yuv_window_setup_121_122_reg <= ivtv_yuv_window_setup_121_122;
if (reset == 1'b0 && ^(ivtv_yuv_window_setup_121_122) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to ivtv_yuv_window_setup_121_122_reg"); $finish; end
end
/* ivtv_yuv_window_setup: %121*/
/*   %122 = phi i32 [ %120, %116 ], [ %108, %106 ]*/
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_116_209) & (memory_controller_waitrequest == 1'd0)))
begin
ivtv_yuv_window_setup_121_122_reg <= ivtv_yuv_window_setup_121_122;
if (reset == 1'b0 && ^(ivtv_yuv_window_setup_121_122) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to ivtv_yuv_window_setup_121_122_reg"); $finish; end
end
end
always @(*) begin
/* ivtv_yuv_window_setup: %121*/
/*   %123 = phi i32 [ %117, %116 ], [ %109, %106 ]*/
if ((((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_106_206) & (memory_controller_waitrequest == 1'd0)) & (ivtv_yuv_window_setup_106_115 == 1'd0)))
begin
ivtv_yuv_window_setup_121_123 = ivtv_yuv_window_setup_106_109_reg;
end
/* ivtv_yuv_window_setup: %121*/
/*   %123 = phi i32 [ %117, %116 ], [ %109, %106 ]*/
else /* if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_116_209) & (memory_controller_waitrequest == 1'd0))) */
begin
ivtv_yuv_window_setup_121_123 = ivtv_yuv_window_setup_116_117_reg;
end
end
always @(posedge clk) begin
/* ivtv_yuv_window_setup: %121*/
/*   %123 = phi i32 [ %117, %116 ], [ %109, %106 ]*/
if ((((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_106_206) & (memory_controller_waitrequest == 1'd0)) & (ivtv_yuv_window_setup_106_115 == 1'd0)))
begin
ivtv_yuv_window_setup_121_123_reg <= ivtv_yuv_window_setup_121_123;
if (reset == 1'b0 && ^(ivtv_yuv_window_setup_121_123) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to ivtv_yuv_window_setup_121_123_reg"); $finish; end
end
/* ivtv_yuv_window_setup: %121*/
/*   %123 = phi i32 [ %117, %116 ], [ %109, %106 ]*/
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_116_209) & (memory_controller_waitrequest == 1'd0)))
begin
ivtv_yuv_window_setup_121_123_reg <= ivtv_yuv_window_setup_121_123;
if (reset == 1'b0 && ^(ivtv_yuv_window_setup_121_123) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to ivtv_yuv_window_setup_121_123_reg"); $finish; end
end
end
always @(*) begin
/* ivtv_yuv_window_setup: %121*/
/*   %124 = getelementptr inbounds %struct.ivtv* %itv, i32 0, i32 0, i32 2*/
begin
ivtv_yuv_window_setup_121_124 = (arg_itv + 8);
end
end
always @(posedge clk) begin
/* ivtv_yuv_window_setup: %121*/
/*   %124 = getelementptr inbounds %struct.ivtv* %itv, i32 0, i32 0, i32 2*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_121_210))
begin
ivtv_yuv_window_setup_121_124_reg <= ivtv_yuv_window_setup_121_124;
if (reset == 1'b0 && ^(ivtv_yuv_window_setup_121_124) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to ivtv_yuv_window_setup_121_124_reg"); $finish; end
end
end
always @(*) begin
/* ivtv_yuv_window_setup: %121*/
/*   %125 = load i32* %124, align 4, !tbaa !0*/
begin
ivtv_yuv_window_setup_121_125 = memory_controller_out_a[31:0];
end
end
always @(posedge clk) begin
/* ivtv_yuv_window_setup: %121*/
/*   %125 = load i32* %124, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_121_212))
begin
ivtv_yuv_window_setup_121_125_reg <= ivtv_yuv_window_setup_121_125;
if (reset == 1'b0 && ^(ivtv_yuv_window_setup_121_125) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to ivtv_yuv_window_setup_121_125_reg"); $finish; end
end
end
always @(*) begin
/* ivtv_yuv_window_setup: %121*/
/*   %126 = icmp eq i32 %125, 0*/
begin
ivtv_yuv_window_setup_121_126 = (ivtv_yuv_window_setup_121_125 == 32'd0);
end
end
always @(posedge clk) begin
/* ivtv_yuv_window_setup: %121*/
/*   %126 = icmp eq i32 %125, 0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_121_212))
begin
ivtv_yuv_window_setup_121_126_reg <= ivtv_yuv_window_setup_121_126;
if (reset == 1'b0 && ^(ivtv_yuv_window_setup_121_126) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to ivtv_yuv_window_setup_121_126_reg"); $finish; end
end
end
always @(*) begin
/* ivtv_yuv_window_setup: %127*/
/*   %128 = getelementptr inbounds %struct.ivtv* %itv, i32 0, i32 0, i32 0*/
begin
ivtv_yuv_window_setup_127_128 = arg_itv;
end
end
always @(posedge clk) begin
/* ivtv_yuv_window_setup: %127*/
/*   %128 = getelementptr inbounds %struct.ivtv* %itv, i32 0, i32 0, i32 0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_127_213))
begin
ivtv_yuv_window_setup_127_128_reg <= ivtv_yuv_window_setup_127_128;
if (reset == 1'b0 && ^(ivtv_yuv_window_setup_127_128) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to ivtv_yuv_window_setup_127_128_reg"); $finish; end
end
end
always @(*) begin
/* ivtv_yuv_window_setup: %127*/
/*   %129 = load i32* %128, align 4, !tbaa !0*/
begin
ivtv_yuv_window_setup_127_129 = memory_controller_out_a[31:0];
end
end
always @(posedge clk) begin
/* ivtv_yuv_window_setup: %127*/
/*   %129 = load i32* %128, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_127_215))
begin
ivtv_yuv_window_setup_127_129_reg <= ivtv_yuv_window_setup_127_129;
if (reset == 1'b0 && ^(ivtv_yuv_window_setup_127_129) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to ivtv_yuv_window_setup_127_129_reg"); $finish; end
end
end
always @(*) begin
/* ivtv_yuv_window_setup: %127*/
/*   %130 = add nsw i32 %110, %129*/
begin
ivtv_yuv_window_setup_127_130 = (ivtv_yuv_window_setup_106_110_reg + ivtv_yuv_window_setup_127_129);
end
end
always @(posedge clk) begin
/* ivtv_yuv_window_setup: %127*/
/*   %130 = add nsw i32 %110, %129*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_127_215))
begin
ivtv_yuv_window_setup_127_130_reg <= ivtv_yuv_window_setup_127_130;
if (reset == 1'b0 && ^(ivtv_yuv_window_setup_127_130) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to ivtv_yuv_window_setup_127_130_reg"); $finish; end
end
end
always @(*) begin
/* ivtv_yuv_window_setup: %127*/
/*   %131 = getelementptr inbounds %struct.ivtv* %itv, i32 0, i32 0, i32 1*/
begin
ivtv_yuv_window_setup_127_131 = (arg_itv + 4);
end
end
always @(posedge clk) begin
/* ivtv_yuv_window_setup: %127*/
/*   %131 = getelementptr inbounds %struct.ivtv* %itv, i32 0, i32 0, i32 1*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_127_213))
begin
ivtv_yuv_window_setup_127_131_reg <= ivtv_yuv_window_setup_127_131;
if (reset == 1'b0 && ^(ivtv_yuv_window_setup_127_131) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to ivtv_yuv_window_setup_127_131_reg"); $finish; end
end
end
always @(*) begin
/* ivtv_yuv_window_setup: %127*/
/*   %132 = load i32* %131, align 4, !tbaa !0*/
begin
ivtv_yuv_window_setup_127_132 = memory_controller_out_a[31:0];
end
end
always @(posedge clk) begin
/* ivtv_yuv_window_setup: %127*/
/*   %132 = load i32* %131, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_127_218))
begin
ivtv_yuv_window_setup_127_132_reg <= ivtv_yuv_window_setup_127_132;
if (reset == 1'b0 && ^(ivtv_yuv_window_setup_127_132) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to ivtv_yuv_window_setup_127_132_reg"); $finish; end
end
end
always @(*) begin
/* ivtv_yuv_window_setup: %127*/
/*   %133 = add nsw i32 %76, %132*/
begin
ivtv_yuv_window_setup_127_133 = (ivtv_yuv_window_setup_72_76_reg + ivtv_yuv_window_setup_127_132);
end
end
always @(posedge clk) begin
/* ivtv_yuv_window_setup: %127*/
/*   %133 = add nsw i32 %76, %132*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_127_218))
begin
ivtv_yuv_window_setup_127_133_reg <= ivtv_yuv_window_setup_127_133;
if (reset == 1'b0 && ^(ivtv_yuv_window_setup_127_133) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to ivtv_yuv_window_setup_127_133_reg"); $finish; end
end
end
always @(*) begin
/* ivtv_yuv_window_setup: %134*/
/*   %135 = phi i32 [ %76, %121 ], [ %133, %127 ]*/
if ((((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_121_212) & (memory_controller_waitrequest == 1'd0)) & (ivtv_yuv_window_setup_121_126 == 1'd1)))
begin
ivtv_yuv_window_setup_134_135 = ivtv_yuv_window_setup_72_76_reg;
end
/* ivtv_yuv_window_setup: %134*/
/*   %135 = phi i32 [ %76, %121 ], [ %133, %127 ]*/
else /* if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_127_219) & (memory_controller_waitrequest == 1'd0))) */
begin
ivtv_yuv_window_setup_134_135 = ivtv_yuv_window_setup_127_133_reg;
end
end
always @(posedge clk) begin
/* ivtv_yuv_window_setup: %134*/
/*   %135 = phi i32 [ %76, %121 ], [ %133, %127 ]*/
if ((((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_121_212) & (memory_controller_waitrequest == 1'd0)) & (ivtv_yuv_window_setup_121_126 == 1'd1)))
begin
ivtv_yuv_window_setup_134_135_reg <= ivtv_yuv_window_setup_134_135;
if (reset == 1'b0 && ^(ivtv_yuv_window_setup_134_135) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to ivtv_yuv_window_setup_134_135_reg"); $finish; end
end
/* ivtv_yuv_window_setup: %134*/
/*   %135 = phi i32 [ %76, %121 ], [ %133, %127 ]*/
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_127_219) & (memory_controller_waitrequest == 1'd0)))
begin
ivtv_yuv_window_setup_134_135_reg <= ivtv_yuv_window_setup_134_135;
if (reset == 1'b0 && ^(ivtv_yuv_window_setup_134_135) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to ivtv_yuv_window_setup_134_135_reg"); $finish; end
end
end
always @(*) begin
/* ivtv_yuv_window_setup: %134*/
/*   %136 = phi i32 [ %110, %121 ], [ %130, %127 ]*/
if ((((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_121_212) & (memory_controller_waitrequest == 1'd0)) & (ivtv_yuv_window_setup_121_126 == 1'd1)))
begin
ivtv_yuv_window_setup_134_136 = ivtv_yuv_window_setup_106_110_reg;
end
/* ivtv_yuv_window_setup: %134*/
/*   %136 = phi i32 [ %110, %121 ], [ %130, %127 ]*/
else /* if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_127_219) & (memory_controller_waitrequest == 1'd0))) */
begin
ivtv_yuv_window_setup_134_136 = ivtv_yuv_window_setup_127_130_reg;
end
end
always @(posedge clk) begin
/* ivtv_yuv_window_setup: %134*/
/*   %136 = phi i32 [ %110, %121 ], [ %130, %127 ]*/
if ((((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_121_212) & (memory_controller_waitrequest == 1'd0)) & (ivtv_yuv_window_setup_121_126 == 1'd1)))
begin
ivtv_yuv_window_setup_134_136_reg <= ivtv_yuv_window_setup_134_136;
if (reset == 1'b0 && ^(ivtv_yuv_window_setup_134_136) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to ivtv_yuv_window_setup_134_136_reg"); $finish; end
end
/* ivtv_yuv_window_setup: %134*/
/*   %136 = phi i32 [ %110, %121 ], [ %130, %127 ]*/
if (((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_127_219) & (memory_controller_waitrequest == 1'd0)))
begin
ivtv_yuv_window_setup_134_136_reg <= ivtv_yuv_window_setup_134_136;
if (reset == 1'b0 && ^(ivtv_yuv_window_setup_134_136) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to ivtv_yuv_window_setup_134_136_reg"); $finish; end
end
end
always @(*) begin
/* ivtv_yuv_window_setup: %134*/
/*   %137 = and i32 %123, -2*/
begin
ivtv_yuv_window_setup_134_137 = (ivtv_yuv_window_setup_121_123_reg & -32'd2);
end
end
always @(posedge clk) begin
/* ivtv_yuv_window_setup: %134*/
/*   %137 = and i32 %123, -2*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_134_220))
begin
ivtv_yuv_window_setup_134_137_reg <= ivtv_yuv_window_setup_134_137;
if (reset == 1'b0 && ^(ivtv_yuv_window_setup_134_137) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to ivtv_yuv_window_setup_134_137_reg"); $finish; end
end
end
always @(*) begin
/* ivtv_yuv_window_setup: %134*/
/*   %138 = and i32 %136, -2*/
begin
ivtv_yuv_window_setup_134_138 = (ivtv_yuv_window_setup_134_136_reg & -32'd2);
end
end
always @(posedge clk) begin
/* ivtv_yuv_window_setup: %134*/
/*   %138 = and i32 %136, -2*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_134_220))
begin
ivtv_yuv_window_setup_134_138_reg <= ivtv_yuv_window_setup_134_138;
if (reset == 1'b0 && ^(ivtv_yuv_window_setup_134_138) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to ivtv_yuv_window_setup_134_138_reg"); $finish; end
end
end
always @(*) begin
/* ivtv_yuv_window_setup: %134*/
/*   %139 = and i32 %107, 1*/
begin
ivtv_yuv_window_setup_134_139 = (ivtv_yuv_window_setup_106_107_reg & 32'd1);
end
end
always @(posedge clk) begin
/* ivtv_yuv_window_setup: %134*/
/*   %139 = and i32 %107, 1*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_134_220))
begin
ivtv_yuv_window_setup_134_139_reg <= ivtv_yuv_window_setup_134_139;
if (reset == 1'b0 && ^(ivtv_yuv_window_setup_134_139) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to ivtv_yuv_window_setup_134_139_reg"); $finish; end
end
end
always @(*) begin
/* ivtv_yuv_window_setup: %134*/
/*   %140 = add nsw i32 %122, %139*/
begin
ivtv_yuv_window_setup_134_140 = (ivtv_yuv_window_setup_121_122_reg + ivtv_yuv_window_setup_134_139);
end
end
always @(posedge clk) begin
/* ivtv_yuv_window_setup: %134*/
/*   %140 = add nsw i32 %122, %139*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_134_220))
begin
ivtv_yuv_window_setup_134_140_reg <= ivtv_yuv_window_setup_134_140;
if (reset == 1'b0 && ^(ivtv_yuv_window_setup_134_140) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to ivtv_yuv_window_setup_134_140_reg"); $finish; end
end
end
always @(*) begin
/* ivtv_yuv_window_setup: %134*/
/*   %141 = and i32 %107, -2*/
begin
ivtv_yuv_window_setup_134_141 = (ivtv_yuv_window_setup_106_107_reg & -32'd2);
end
end
always @(posedge clk) begin
/* ivtv_yuv_window_setup: %134*/
/*   %141 = and i32 %107, -2*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_134_220))
begin
ivtv_yuv_window_setup_134_141_reg <= ivtv_yuv_window_setup_134_141;
if (reset == 1'b0 && ^(ivtv_yuv_window_setup_134_141) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to ivtv_yuv_window_setup_134_141_reg"); $finish; end
end
end
always @(*) begin
/* ivtv_yuv_window_setup: %134*/
/*   %142 = and i32 %140, -2*/
begin
ivtv_yuv_window_setup_134_142 = (ivtv_yuv_window_setup_134_140 & -32'd2);
end
end
always @(posedge clk) begin
/* ivtv_yuv_window_setup: %134*/
/*   %142 = and i32 %140, -2*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_134_220))
begin
ivtv_yuv_window_setup_134_142_reg <= ivtv_yuv_window_setup_134_142;
if (reset == 1'b0 && ^(ivtv_yuv_window_setup_134_142) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to ivtv_yuv_window_setup_134_142_reg"); $finish; end
end
end
always @(*) begin
/* ivtv_yuv_window_setup: %134*/
/*   %143 = and i32 %89, -2*/
begin
ivtv_yuv_window_setup_134_143 = (ivtv_yuv_window_setup_87_89_reg & -32'd2);
end
end
always @(posedge clk) begin
/* ivtv_yuv_window_setup: %134*/
/*   %143 = and i32 %89, -2*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_134_220))
begin
ivtv_yuv_window_setup_134_143_reg <= ivtv_yuv_window_setup_134_143;
if (reset == 1'b0 && ^(ivtv_yuv_window_setup_134_143) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to ivtv_yuv_window_setup_134_143_reg"); $finish; end
end
end
always @(*) begin
/* ivtv_yuv_window_setup: %134*/
/*   %144 = and i32 %135, -2*/
begin
ivtv_yuv_window_setup_134_144 = (ivtv_yuv_window_setup_134_135_reg & -32'd2);
end
end
always @(posedge clk) begin
/* ivtv_yuv_window_setup: %134*/
/*   %144 = and i32 %135, -2*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_134_220))
begin
ivtv_yuv_window_setup_134_144_reg <= ivtv_yuv_window_setup_134_144;
if (reset == 1'b0 && ^(ivtv_yuv_window_setup_134_144) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to ivtv_yuv_window_setup_134_144_reg"); $finish; end
end
end
always @(*) begin
/* ivtv_yuv_window_setup: %134*/
/*   %145 = and i32 %73, 1*/
begin
ivtv_yuv_window_setup_134_145 = (ivtv_yuv_window_setup_72_73_reg & 32'd1);
end
end
always @(posedge clk) begin
/* ivtv_yuv_window_setup: %134*/
/*   %145 = and i32 %73, 1*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_134_220))
begin
ivtv_yuv_window_setup_134_145_reg <= ivtv_yuv_window_setup_134_145;
if (reset == 1'b0 && ^(ivtv_yuv_window_setup_134_145) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to ivtv_yuv_window_setup_134_145_reg"); $finish; end
end
end
always @(*) begin
/* ivtv_yuv_window_setup: %134*/
/*   %146 = add nsw i32 %88, %145*/
begin
ivtv_yuv_window_setup_134_146 = (ivtv_yuv_window_setup_87_88_reg + ivtv_yuv_window_setup_134_145);
end
end
always @(posedge clk) begin
/* ivtv_yuv_window_setup: %134*/
/*   %146 = add nsw i32 %88, %145*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_134_220))
begin
ivtv_yuv_window_setup_134_146_reg <= ivtv_yuv_window_setup_134_146;
if (reset == 1'b0 && ^(ivtv_yuv_window_setup_134_146) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to ivtv_yuv_window_setup_134_146_reg"); $finish; end
end
end
always @(*) begin
/* ivtv_yuv_window_setup: %134*/
/*   %147 = and i32 %73, -2*/
begin
ivtv_yuv_window_setup_134_147 = (ivtv_yuv_window_setup_72_73_reg & -32'd2);
end
end
always @(posedge clk) begin
/* ivtv_yuv_window_setup: %134*/
/*   %147 = and i32 %73, -2*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_134_220))
begin
ivtv_yuv_window_setup_134_147_reg <= ivtv_yuv_window_setup_134_147;
if (reset == 1'b0 && ^(ivtv_yuv_window_setup_134_147) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to ivtv_yuv_window_setup_134_147_reg"); $finish; end
end
end
always @(*) begin
/* ivtv_yuv_window_setup: %134*/
/*   %148 = and i32 %146, -2*/
begin
ivtv_yuv_window_setup_134_148 = (ivtv_yuv_window_setup_134_146 & -32'd2);
end
end
always @(posedge clk) begin
/* ivtv_yuv_window_setup: %134*/
/*   %148 = and i32 %146, -2*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_134_220))
begin
ivtv_yuv_window_setup_134_148_reg <= ivtv_yuv_window_setup_134_148;
if (reset == 1'b0 && ^(ivtv_yuv_window_setup_134_148) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to ivtv_yuv_window_setup_134_148_reg"); $finish; end
end
end
always @(*) begin
ivtv_yuv_window_setup_134_149 = ivtv_yuv_window_setup_signed_divide_32_0;
end
always @(*) begin
/* ivtv_yuv_window_setup: %134*/
/*   %149 = sdiv i32 %142, 4*/
ivtv_yuv_window_setup_134_149_reg = ivtv_yuv_window_setup_20_21_reg;
end
always @(*) begin
/* ivtv_yuv_window_setup: %134*/
/*   %150 = icmp slt i32 %137, %149*/
begin
ivtv_yuv_window_setup_134_150 = ($signed(ivtv_yuv_window_setup_134_137_reg) < $signed(ivtv_yuv_window_setup_134_149));
end
end
always @(posedge clk) begin
/* ivtv_yuv_window_setup: %134*/
/*   %150 = icmp slt i32 %137, %149*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_134_252))
begin
ivtv_yuv_window_setup_134_150_reg <= ivtv_yuv_window_setup_134_150;
if (reset == 1'b0 && ^(ivtv_yuv_window_setup_134_150) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to ivtv_yuv_window_setup_134_150_reg"); $finish; end
end
end
always @(*) begin
/* ivtv_yuv_window_setup: %151*/
/*   %152 = and i32 %140, -4*/
begin
ivtv_yuv_window_setup_151_152 = (ivtv_yuv_window_setup_134_140_reg & -32'd4);
end
end
always @(posedge clk) begin
/* ivtv_yuv_window_setup: %151*/
/*   %152 = and i32 %140, -4*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_151_253))
begin
ivtv_yuv_window_setup_151_152_reg <= ivtv_yuv_window_setup_151_152;
if (reset == 1'b0 && ^(ivtv_yuv_window_setup_151_152) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to ivtv_yuv_window_setup_151_152_reg"); $finish; end
end
end
always @(*) begin
ivtv_yuv_window_setup_151_153 = ivtv_yuv_window_setup_signed_divide_32_0;
end
always @(*) begin
/* ivtv_yuv_window_setup: %151*/
/*   %153 = sdiv i32 %152, 4*/
ivtv_yuv_window_setup_151_153_reg = ivtv_yuv_window_setup_20_21_reg;
end
always @(*) begin
/* ivtv_yuv_window_setup: %151*/
/*   %154 = and i32 %153, 1*/
begin
ivtv_yuv_window_setup_151_154 = (ivtv_yuv_window_setup_151_153 & 32'd1);
end
end
always @(posedge clk) begin
/* ivtv_yuv_window_setup: %151*/
/*   %154 = and i32 %153, 1*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_151_285))
begin
ivtv_yuv_window_setup_151_154_reg <= ivtv_yuv_window_setup_151_154;
if (reset == 1'b0 && ^(ivtv_yuv_window_setup_151_154) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to ivtv_yuv_window_setup_151_154_reg"); $finish; end
end
end
always @(*) begin
/* ivtv_yuv_window_setup: %151*/
/*   %155 = add nsw i32 %154, %153*/
begin
ivtv_yuv_window_setup_151_155 = (ivtv_yuv_window_setup_151_154 + ivtv_yuv_window_setup_151_153);
end
end
always @(posedge clk) begin
/* ivtv_yuv_window_setup: %151*/
/*   %155 = add nsw i32 %154, %153*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_151_285))
begin
ivtv_yuv_window_setup_151_155_reg <= ivtv_yuv_window_setup_151_155;
if (reset == 1'b0 && ^(ivtv_yuv_window_setup_151_155) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to ivtv_yuv_window_setup_151_155_reg"); $finish; end
end
end
always @(*) begin
ivtv_yuv_window_setup_156_157 = ivtv_yuv_window_setup_signed_divide_32_0;
end
always @(*) begin
/* ivtv_yuv_window_setup: %156*/
/*   %157 = sdiv i32 %148, 4*/
ivtv_yuv_window_setup_156_157_reg = ivtv_yuv_window_setup_20_21_reg;
end
always @(*) begin
/* ivtv_yuv_window_setup: %156*/
/*   %158 = icmp slt i32 %143, %157*/
begin
ivtv_yuv_window_setup_156_158 = ($signed(ivtv_yuv_window_setup_134_143_reg) < $signed(ivtv_yuv_window_setup_156_157));
end
end
always @(posedge clk) begin
/* ivtv_yuv_window_setup: %156*/
/*   %158 = icmp slt i32 %143, %157*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_156_319))
begin
ivtv_yuv_window_setup_156_158_reg <= ivtv_yuv_window_setup_156_158;
if (reset == 1'b0 && ^(ivtv_yuv_window_setup_156_158) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to ivtv_yuv_window_setup_156_158_reg"); $finish; end
end
end
always @(*) begin
/* ivtv_yuv_window_setup: %159*/
/*   %160 = and i32 %146, -4*/
begin
ivtv_yuv_window_setup_159_160 = (ivtv_yuv_window_setup_134_146_reg & -32'd4);
end
end
always @(posedge clk) begin
/* ivtv_yuv_window_setup: %159*/
/*   %160 = and i32 %146, -4*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_159_320))
begin
ivtv_yuv_window_setup_159_160_reg <= ivtv_yuv_window_setup_159_160;
if (reset == 1'b0 && ^(ivtv_yuv_window_setup_159_160) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to ivtv_yuv_window_setup_159_160_reg"); $finish; end
end
end
always @(*) begin
ivtv_yuv_window_setup_159_161 = ivtv_yuv_window_setup_signed_divide_32_0;
end
always @(*) begin
/* ivtv_yuv_window_setup: %159*/
/*   %161 = sdiv i32 %160, 4*/
ivtv_yuv_window_setup_159_161_reg = ivtv_yuv_window_setup_20_21_reg;
end
always @(*) begin
/* ivtv_yuv_window_setup: %159*/
/*   %162 = and i32 %161, 1*/
begin
ivtv_yuv_window_setup_159_162 = (ivtv_yuv_window_setup_159_161 & 32'd1);
end
end
always @(posedge clk) begin
/* ivtv_yuv_window_setup: %159*/
/*   %162 = and i32 %161, 1*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_159_352))
begin
ivtv_yuv_window_setup_159_162_reg <= ivtv_yuv_window_setup_159_162;
if (reset == 1'b0 && ^(ivtv_yuv_window_setup_159_162) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to ivtv_yuv_window_setup_159_162_reg"); $finish; end
end
end
always @(*) begin
/* ivtv_yuv_window_setup: %159*/
/*   %163 = add nsw i32 %162, %161*/
begin
ivtv_yuv_window_setup_159_163 = (ivtv_yuv_window_setup_159_162 + ivtv_yuv_window_setup_159_161);
end
end
always @(posedge clk) begin
/* ivtv_yuv_window_setup: %159*/
/*   %163 = add nsw i32 %162, %161*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_159_352))
begin
ivtv_yuv_window_setup_159_163_reg <= ivtv_yuv_window_setup_159_163;
if (reset == 1'b0 && ^(ivtv_yuv_window_setup_159_163) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to ivtv_yuv_window_setup_159_163_reg"); $finish; end
end
end
always @(*) begin
/* ivtv_yuv_window_setup: %20*/
/*   %21 = sdiv i32 %18, 2*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_20_14))
begin
ivtv_yuv_window_setup_signed_divide_32_0_op0 = ivtv_yuv_window_setup_11_18_reg;
end
/* ivtv_yuv_window_setup: %20*/
/*   %23 = sdiv i32 %17, 4*/
else if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_20_15))
begin
ivtv_yuv_window_setup_signed_divide_32_0_op0 = ivtv_yuv_window_setup_11_17_reg;
end
/* ivtv_yuv_window_setup: %26*/
/*   %34 = sdiv i32 %31, %33*/
else if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_26_51))
begin
ivtv_yuv_window_setup_signed_divide_32_0_op0 = ivtv_yuv_window_setup_26_31;
end
/* ivtv_yuv_window_setup: %41*/
/*   %42 = sdiv i32 %39, 2*/
else if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_41_86))
begin
ivtv_yuv_window_setup_signed_divide_32_0_op0 = ivtv_yuv_window_setup_36_39_reg;
end
/* ivtv_yuv_window_setup: %41*/
/*   %44 = sdiv i32 %38, 4*/
else if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_41_87))
begin
ivtv_yuv_window_setup_signed_divide_32_0_op0 = ivtv_yuv_window_setup_36_38_reg;
end
/* ivtv_yuv_window_setup: %55*/
/*   %57 = sdiv i32 %56, %50*/
else if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_55_122))
begin
ivtv_yuv_window_setup_signed_divide_32_0_op0 = ivtv_yuv_window_setup_55_56;
end
/* ivtv_yuv_window_setup: %87*/
/*   %91 = sdiv i32 %90, %29*/
else if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_87_166))
begin
ivtv_yuv_window_setup_signed_divide_32_0_op0 = ivtv_yuv_window_setup_87_90;
end
/* ivtv_yuv_window_setup: %134*/
/*   %149 = sdiv i32 %142, 4*/
else if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_134_220))
begin
ivtv_yuv_window_setup_signed_divide_32_0_op0 = ivtv_yuv_window_setup_134_142;
end
/* ivtv_yuv_window_setup: %151*/
/*   %153 = sdiv i32 %152, 4*/
else if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_151_253))
begin
ivtv_yuv_window_setup_signed_divide_32_0_op0 = ivtv_yuv_window_setup_151_152;
end
/* ivtv_yuv_window_setup: %156*/
/*   %157 = sdiv i32 %148, 4*/
else if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_156_287))
begin
ivtv_yuv_window_setup_signed_divide_32_0_op0 = ivtv_yuv_window_setup_134_148_reg;
end
/* ivtv_yuv_window_setup: %159*/
/*   %161 = sdiv i32 %160, 4*/
else /* if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_159_320)) */
begin
ivtv_yuv_window_setup_signed_divide_32_0_op0 = ivtv_yuv_window_setup_159_160;
end
end
always @(*) begin
/* ivtv_yuv_window_setup: %20*/
/*   %21 = sdiv i32 %18, 2*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_20_14))
begin
ivtv_yuv_window_setup_signed_divide_32_0_op1 = 32'd2;
end
/* ivtv_yuv_window_setup: %20*/
/*   %23 = sdiv i32 %17, 4*/
else if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_20_15))
begin
ivtv_yuv_window_setup_signed_divide_32_0_op1 = 32'd4;
end
/* ivtv_yuv_window_setup: %26*/
/*   %34 = sdiv i32 %31, %33*/
else if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_26_51))
begin
ivtv_yuv_window_setup_signed_divide_32_0_op1 = ivtv_yuv_window_setup_26_33;
end
/* ivtv_yuv_window_setup: %41*/
/*   %42 = sdiv i32 %39, 2*/
else if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_41_86))
begin
ivtv_yuv_window_setup_signed_divide_32_0_op1 = 32'd2;
end
/* ivtv_yuv_window_setup: %41*/
/*   %44 = sdiv i32 %38, 4*/
else if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_41_87))
begin
ivtv_yuv_window_setup_signed_divide_32_0_op1 = 32'd4;
end
/* ivtv_yuv_window_setup: %55*/
/*   %57 = sdiv i32 %56, %50*/
else if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_55_122))
begin
ivtv_yuv_window_setup_signed_divide_32_0_op1 = ivtv_yuv_window_setup_47_50_reg;
end
/* ivtv_yuv_window_setup: %87*/
/*   %91 = sdiv i32 %90, %29*/
else if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_87_166))
begin
ivtv_yuv_window_setup_signed_divide_32_0_op1 = ivtv_yuv_window_setup_26_29_reg;
end
/* ivtv_yuv_window_setup: %134*/
/*   %149 = sdiv i32 %142, 4*/
else if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_134_220))
begin
ivtv_yuv_window_setup_signed_divide_32_0_op1 = 32'd4;
end
/* ivtv_yuv_window_setup: %151*/
/*   %153 = sdiv i32 %152, 4*/
else if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_151_253))
begin
ivtv_yuv_window_setup_signed_divide_32_0_op1 = 32'd4;
end
/* ivtv_yuv_window_setup: %156*/
/*   %157 = sdiv i32 %148, 4*/
else if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_156_287))
begin
ivtv_yuv_window_setup_signed_divide_32_0_op1 = 32'd4;
end
/* ivtv_yuv_window_setup: %159*/
/*   %161 = sdiv i32 %160, 4*/
else /* if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_159_320)) */
begin
ivtv_yuv_window_setup_signed_divide_32_0_op1 = 32'd4;
end
end
always @(*) begin
lpm_divide_ivtv_yuv_window_setup_55_57_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
lpm_divide_ivtv_yuv_window_setup_55_57_out = lpm_divide_ivtv_yuv_window_setup_55_57_temp_out;
end
always @(*) begin
ivtv_yuv_window_setup_signed_divide_32_0 = lpm_divide_ivtv_yuv_window_setup_55_57_out;
end
always @(*) begin
lpm_divide_ivtv_yuv_window_setup_20_21_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
lpm_divide_ivtv_yuv_window_setup_20_23_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
lpm_divide_ivtv_yuv_window_setup_26_34_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
lpm_divide_ivtv_yuv_window_setup_41_42_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
lpm_divide_ivtv_yuv_window_setup_41_44_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
lpm_mult_ivtv_yuv_window_setup_64_65_en = (memory_controller_waitrequest == 1'd0);
end
always @(posedge clk) begin
/* ivtv_yuv_window_setup: %64*/
/*   %65 = mul nsw i32 %62, %57*/
if ((lpm_mult_ivtv_yuv_window_setup_64_65_en == 1'd1))
begin
ivtv_yuv_window_setup_64_65_stage0_reg <= (ivtv_yuv_window_setup_55_62_reg * ivtv_yuv_window_setup_55_57_reg);
end
end
always @(*) begin
lpm_mult_ivtv_yuv_window_setup_82_84_en = (memory_controller_waitrequest == 1'd0);
end
always @(posedge clk) begin
/* ivtv_yuv_window_setup: %82*/
/*   %84 = mul nsw i32 %80, %57*/
if ((lpm_mult_ivtv_yuv_window_setup_82_84_en == 1'd1))
begin
ivtv_yuv_window_setup_82_84_stage0_reg <= (ivtv_yuv_window_setup_72_80_reg * ivtv_yuv_window_setup_55_57_reg);
end
end
always @(*) begin
lpm_divide_ivtv_yuv_window_setup_87_91_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
lpm_mult_ivtv_yuv_window_setup_98_99_en = (memory_controller_waitrequest == 1'd0);
end
always @(posedge clk) begin
/* ivtv_yuv_window_setup: %98*/
/*   %99 = mul nsw i32 %96, %91*/
if ((lpm_mult_ivtv_yuv_window_setup_98_99_en == 1'd1))
begin
ivtv_yuv_window_setup_98_99_stage0_reg <= (ivtv_yuv_window_setup_87_96_reg * ivtv_yuv_window_setup_87_91_reg);
end
end
always @(*) begin
lpm_mult_ivtv_yuv_window_setup_116_118_en = (memory_controller_waitrequest == 1'd0);
end
always @(posedge clk) begin
/* ivtv_yuv_window_setup: %116*/
/*   %118 = mul nsw i32 %114, %91*/
if ((lpm_mult_ivtv_yuv_window_setup_116_118_en == 1'd1))
begin
ivtv_yuv_window_setup_116_118_stage0_reg <= (ivtv_yuv_window_setup_106_114_reg * ivtv_yuv_window_setup_87_91_reg);
end
end
always @(*) begin
lpm_divide_ivtv_yuv_window_setup_134_149_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
lpm_divide_ivtv_yuv_window_setup_151_153_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
lpm_divide_ivtv_yuv_window_setup_156_157_en = (memory_controller_waitrequest == 1'd0);
end
always @(*) begin
lpm_divide_ivtv_yuv_window_setup_159_161_en = (memory_controller_waitrequest == 1'd0);
end
always @(posedge clk) begin
if ((cur_state == LEGUP_0))
begin
finish <= 1'd0;
if (reset == 1'b0 && ^(1'd0) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to finish"); $finish; end
end
/* ivtv_yuv_window_setup: %164*/
/*   ret i32 0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_164_354))
begin
finish <= (memory_controller_waitrequest == 1'd0);
if (reset == 1'b0 && ^((memory_controller_waitrequest == 1'd0)) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to finish"); $finish; end
end
end
always @(*) begin
memory_controller_enable_a = 1'd0;
if ((cur_state == LEGUP_0))
begin
memory_controller_enable_a = 1'd0;
end
/* ivtv_yuv_window_setup: %0*/
/*   %2 = load i32* %1, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_0_1))
begin
memory_controller_enable_a = 1'd1;
end
/* ivtv_yuv_window_setup: %4*/
/*   store i32 0, i32* %1, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_4_4))
begin
memory_controller_enable_a = 1'd1;
end
/* ivtv_yuv_window_setup: %5*/
/*   %8 = load i32* %7, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_5_6))
begin
memory_controller_enable_a = 1'd1;
end
/* ivtv_yuv_window_setup: %10*/
/*   store i32 0, i32* %7, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_10_9))
begin
memory_controller_enable_a = 1'd1;
end
/* ivtv_yuv_window_setup: %11*/
/*   %14 = load i32* %13, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_11_11))
begin
memory_controller_enable_a = 1'd1;
end
/* ivtv_yuv_window_setup: %20*/
/*   store i32 %17, i32* %13, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_20_14))
begin
memory_controller_enable_a = 1'd1;
end
/* ivtv_yuv_window_setup: %20*/
/*   store i32 %22, i32* %1, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_20_46))
begin
memory_controller_enable_a = 1'd1;
end
/* ivtv_yuv_window_setup: %26*/
/*   %31 = load i32* %30, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_26_49))
begin
memory_controller_enable_a = 1'd1;
end
/* ivtv_yuv_window_setup: %41*/
/*   store i32 %38, i32* %30, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_41_86))
begin
memory_controller_enable_a = 1'd1;
end
/* ivtv_yuv_window_setup: %41*/
/*   store i32 %43, i32* %7, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_41_118))
begin
memory_controller_enable_a = 1'd1;
end
/* ivtv_yuv_window_setup: %55*/
/*   %59 = load i32* %58, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_55_122))
begin
memory_controller_enable_a = 1'd1;
end
/* ivtv_yuv_window_setup: %64*/
/*   store i32 %67, i32* %7, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_64_156))
begin
memory_controller_enable_a = 1'd1;
end
/* ivtv_yuv_window_setup: %72*/
/*   %78 = load i32* %77, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_72_160))
begin
memory_controller_enable_a = 1'd1;
end
/* ivtv_yuv_window_setup: %82*/
/*   store i32 %86, i32* %30, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_82_164))
begin
memory_controller_enable_a = 1'd1;
end
/* ivtv_yuv_window_setup: %87*/
/*   %93 = load i32* %92, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_87_166))
begin
memory_controller_enable_a = 1'd1;
end
/* ivtv_yuv_window_setup: %98*/
/*   store i32 %101, i32* %1, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_98_200))
begin
memory_controller_enable_a = 1'd1;
end
/* ivtv_yuv_window_setup: %106*/
/*   %112 = load i32* %111, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_106_204))
begin
memory_controller_enable_a = 1'd1;
end
/* ivtv_yuv_window_setup: %116*/
/*   store i32 %120, i32* %13, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_116_208))
begin
memory_controller_enable_a = 1'd1;
end
/* ivtv_yuv_window_setup: %121*/
/*   %125 = load i32* %124, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_121_210))
begin
memory_controller_enable_a = 1'd1;
end
/* ivtv_yuv_window_setup: %127*/
/*   %129 = load i32* %128, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_127_213))
begin
memory_controller_enable_a = 1'd1;
end
/* ivtv_yuv_window_setup: %127*/
/*   %132 = load i32* %131, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_127_216))
begin
memory_controller_enable_a = 1'd1;
end
/* ivtv_yuv_window_setup: %134*/
/*   store i32 %141, i32* %1, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_134_220))
begin
memory_controller_enable_a = 1'd1;
end
/* ivtv_yuv_window_setup: %134*/
/*   store i32 %142, i32* %13, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_134_221))
begin
memory_controller_enable_a = 1'd1;
end
/* ivtv_yuv_window_setup: %134*/
/*   store i32 %147, i32* %7, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_134_222))
begin
memory_controller_enable_a = 1'd1;
end
/* ivtv_yuv_window_setup: %134*/
/*   store i32 %148, i32* %30, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_134_223))
begin
memory_controller_enable_a = 1'd1;
end
/* ivtv_yuv_window_setup: %151*/
/*   store i32 %152, i32* %13, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_151_253))
begin
memory_controller_enable_a = 1'd1;
end
/* ivtv_yuv_window_setup: %159*/
/*   store i32 %160, i32* %30, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_159_320))
begin
memory_controller_enable_a = 1'd1;
end
end
always @(*) begin
memory_controller_address_a = 1'd0;
if ((cur_state == LEGUP_0))
begin
memory_controller_address_a = 1'd0;
end
/* ivtv_yuv_window_setup: %0*/
/*   %2 = load i32* %1, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_0_1))
begin
memory_controller_address_a = ivtv_yuv_window_setup_0_1;
end
/* ivtv_yuv_window_setup: %4*/
/*   store i32 0, i32* %1, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_4_4))
begin
memory_controller_address_a = ivtv_yuv_window_setup_0_1_reg;
end
/* ivtv_yuv_window_setup: %5*/
/*   %8 = load i32* %7, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_5_6))
begin
memory_controller_address_a = ivtv_yuv_window_setup_5_7;
end
/* ivtv_yuv_window_setup: %10*/
/*   store i32 0, i32* %7, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_10_9))
begin
memory_controller_address_a = ivtv_yuv_window_setup_5_7_reg;
end
/* ivtv_yuv_window_setup: %11*/
/*   %14 = load i32* %13, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_11_11))
begin
memory_controller_address_a = ivtv_yuv_window_setup_11_13;
end
/* ivtv_yuv_window_setup: %20*/
/*   store i32 %17, i32* %13, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_20_14))
begin
memory_controller_address_a = ivtv_yuv_window_setup_11_13_reg;
end
/* ivtv_yuv_window_setup: %20*/
/*   store i32 %22, i32* %1, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_20_46))
begin
memory_controller_address_a = ivtv_yuv_window_setup_0_1_reg;
end
/* ivtv_yuv_window_setup: %26*/
/*   %31 = load i32* %30, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_26_49))
begin
memory_controller_address_a = ivtv_yuv_window_setup_26_30;
end
/* ivtv_yuv_window_setup: %41*/
/*   store i32 %38, i32* %30, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_41_86))
begin
memory_controller_address_a = ivtv_yuv_window_setup_26_30_reg;
end
/* ivtv_yuv_window_setup: %41*/
/*   store i32 %43, i32* %7, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_41_118))
begin
memory_controller_address_a = ivtv_yuv_window_setup_5_7_reg;
end
/* ivtv_yuv_window_setup: %55*/
/*   %59 = load i32* %58, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_55_122))
begin
memory_controller_address_a = ivtv_yuv_window_setup_55_58;
end
/* ivtv_yuv_window_setup: %64*/
/*   store i32 %67, i32* %7, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_64_156))
begin
memory_controller_address_a = ivtv_yuv_window_setup_5_7_reg;
end
/* ivtv_yuv_window_setup: %72*/
/*   %78 = load i32* %77, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_72_160))
begin
memory_controller_address_a = ivtv_yuv_window_setup_72_77;
end
/* ivtv_yuv_window_setup: %82*/
/*   store i32 %86, i32* %30, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_82_164))
begin
memory_controller_address_a = ivtv_yuv_window_setup_26_30_reg;
end
/* ivtv_yuv_window_setup: %87*/
/*   %93 = load i32* %92, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_87_166))
begin
memory_controller_address_a = ivtv_yuv_window_setup_87_92;
end
/* ivtv_yuv_window_setup: %98*/
/*   store i32 %101, i32* %1, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_98_200))
begin
memory_controller_address_a = ivtv_yuv_window_setup_0_1_reg;
end
/* ivtv_yuv_window_setup: %106*/
/*   %112 = load i32* %111, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_106_204))
begin
memory_controller_address_a = ivtv_yuv_window_setup_106_111;
end
/* ivtv_yuv_window_setup: %116*/
/*   store i32 %120, i32* %13, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_116_208))
begin
memory_controller_address_a = ivtv_yuv_window_setup_11_13_reg;
end
/* ivtv_yuv_window_setup: %121*/
/*   %125 = load i32* %124, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_121_210))
begin
memory_controller_address_a = ivtv_yuv_window_setup_121_124;
end
/* ivtv_yuv_window_setup: %127*/
/*   %129 = load i32* %128, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_127_213))
begin
memory_controller_address_a = ivtv_yuv_window_setup_127_128;
end
/* ivtv_yuv_window_setup: %127*/
/*   %132 = load i32* %131, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_127_216))
begin
memory_controller_address_a = ivtv_yuv_window_setup_127_131_reg;
end
/* ivtv_yuv_window_setup: %134*/
/*   store i32 %141, i32* %1, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_134_220))
begin
memory_controller_address_a = ivtv_yuv_window_setup_0_1_reg;
end
/* ivtv_yuv_window_setup: %134*/
/*   store i32 %142, i32* %13, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_134_221))
begin
memory_controller_address_a = ivtv_yuv_window_setup_11_13_reg;
end
/* ivtv_yuv_window_setup: %134*/
/*   store i32 %147, i32* %7, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_134_222))
begin
memory_controller_address_a = ivtv_yuv_window_setup_5_7_reg;
end
/* ivtv_yuv_window_setup: %134*/
/*   store i32 %148, i32* %30, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_134_223))
begin
memory_controller_address_a = ivtv_yuv_window_setup_26_30_reg;
end
/* ivtv_yuv_window_setup: %151*/
/*   store i32 %152, i32* %13, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_151_253))
begin
memory_controller_address_a = ivtv_yuv_window_setup_11_13_reg;
end
/* ivtv_yuv_window_setup: %159*/
/*   store i32 %160, i32* %30, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_159_320))
begin
memory_controller_address_a = ivtv_yuv_window_setup_26_30_reg;
end
end
always @(*) begin
memory_controller_write_enable_a = 1'd0;
if ((cur_state == LEGUP_0))
begin
memory_controller_write_enable_a = 1'd0;
end
/* ivtv_yuv_window_setup: %0*/
/*   %2 = load i32* %1, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_0_1))
begin
memory_controller_write_enable_a = 1'd0;
end
/* ivtv_yuv_window_setup: %4*/
/*   store i32 0, i32* %1, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_4_4))
begin
memory_controller_write_enable_a = 1'd1;
end
/* ivtv_yuv_window_setup: %5*/
/*   %8 = load i32* %7, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_5_6))
begin
memory_controller_write_enable_a = 1'd0;
end
/* ivtv_yuv_window_setup: %10*/
/*   store i32 0, i32* %7, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_10_9))
begin
memory_controller_write_enable_a = 1'd1;
end
/* ivtv_yuv_window_setup: %11*/
/*   %14 = load i32* %13, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_11_11))
begin
memory_controller_write_enable_a = 1'd0;
end
/* ivtv_yuv_window_setup: %20*/
/*   store i32 %17, i32* %13, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_20_14))
begin
memory_controller_write_enable_a = 1'd1;
end
/* ivtv_yuv_window_setup: %20*/
/*   store i32 %22, i32* %1, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_20_46))
begin
memory_controller_write_enable_a = 1'd1;
end
/* ivtv_yuv_window_setup: %26*/
/*   %31 = load i32* %30, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_26_49))
begin
memory_controller_write_enable_a = 1'd0;
end
/* ivtv_yuv_window_setup: %41*/
/*   store i32 %38, i32* %30, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_41_86))
begin
memory_controller_write_enable_a = 1'd1;
end
/* ivtv_yuv_window_setup: %41*/
/*   store i32 %43, i32* %7, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_41_118))
begin
memory_controller_write_enable_a = 1'd1;
end
/* ivtv_yuv_window_setup: %55*/
/*   %59 = load i32* %58, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_55_122))
begin
memory_controller_write_enable_a = 1'd0;
end
/* ivtv_yuv_window_setup: %64*/
/*   store i32 %67, i32* %7, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_64_156))
begin
memory_controller_write_enable_a = 1'd1;
end
/* ivtv_yuv_window_setup: %72*/
/*   %78 = load i32* %77, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_72_160))
begin
memory_controller_write_enable_a = 1'd0;
end
/* ivtv_yuv_window_setup: %82*/
/*   store i32 %86, i32* %30, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_82_164))
begin
memory_controller_write_enable_a = 1'd1;
end
/* ivtv_yuv_window_setup: %87*/
/*   %93 = load i32* %92, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_87_166))
begin
memory_controller_write_enable_a = 1'd0;
end
/* ivtv_yuv_window_setup: %98*/
/*   store i32 %101, i32* %1, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_98_200))
begin
memory_controller_write_enable_a = 1'd1;
end
/* ivtv_yuv_window_setup: %106*/
/*   %112 = load i32* %111, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_106_204))
begin
memory_controller_write_enable_a = 1'd0;
end
/* ivtv_yuv_window_setup: %116*/
/*   store i32 %120, i32* %13, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_116_208))
begin
memory_controller_write_enable_a = 1'd1;
end
/* ivtv_yuv_window_setup: %121*/
/*   %125 = load i32* %124, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_121_210))
begin
memory_controller_write_enable_a = 1'd0;
end
/* ivtv_yuv_window_setup: %127*/
/*   %129 = load i32* %128, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_127_213))
begin
memory_controller_write_enable_a = 1'd0;
end
/* ivtv_yuv_window_setup: %127*/
/*   %132 = load i32* %131, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_127_216))
begin
memory_controller_write_enable_a = 1'd0;
end
/* ivtv_yuv_window_setup: %134*/
/*   store i32 %141, i32* %1, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_134_220))
begin
memory_controller_write_enable_a = 1'd1;
end
/* ivtv_yuv_window_setup: %134*/
/*   store i32 %142, i32* %13, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_134_221))
begin
memory_controller_write_enable_a = 1'd1;
end
/* ivtv_yuv_window_setup: %134*/
/*   store i32 %147, i32* %7, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_134_222))
begin
memory_controller_write_enable_a = 1'd1;
end
/* ivtv_yuv_window_setup: %134*/
/*   store i32 %148, i32* %30, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_134_223))
begin
memory_controller_write_enable_a = 1'd1;
end
/* ivtv_yuv_window_setup: %151*/
/*   store i32 %152, i32* %13, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_151_253))
begin
memory_controller_write_enable_a = 1'd1;
end
/* ivtv_yuv_window_setup: %159*/
/*   store i32 %160, i32* %30, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_159_320))
begin
memory_controller_write_enable_a = 1'd1;
end
end
always @(*) begin
memory_controller_in_a = 1'd0;
if ((cur_state == LEGUP_0))
begin
memory_controller_in_a = 1'd0;
end
/* ivtv_yuv_window_setup: %4*/
/*   store i32 0, i32* %1, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_4_4))
begin
memory_controller_in_a = 32'd0;
end
/* ivtv_yuv_window_setup: %10*/
/*   store i32 0, i32* %7, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_10_9))
begin
memory_controller_in_a = 32'd0;
end
/* ivtv_yuv_window_setup: %20*/
/*   store i32 %17, i32* %13, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_20_14))
begin
memory_controller_in_a = ivtv_yuv_window_setup_11_17_reg;
end
/* ivtv_yuv_window_setup: %20*/
/*   store i32 %22, i32* %1, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_20_46))
begin
memory_controller_in_a = ivtv_yuv_window_setup_20_22;
end
/* ivtv_yuv_window_setup: %41*/
/*   store i32 %38, i32* %30, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_41_86))
begin
memory_controller_in_a = ivtv_yuv_window_setup_36_38_reg;
end
/* ivtv_yuv_window_setup: %41*/
/*   store i32 %43, i32* %7, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_41_118))
begin
memory_controller_in_a = ivtv_yuv_window_setup_41_43;
end
/* ivtv_yuv_window_setup: %64*/
/*   store i32 %67, i32* %7, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_64_156))
begin
memory_controller_in_a = ivtv_yuv_window_setup_64_67;
end
/* ivtv_yuv_window_setup: %82*/
/*   store i32 %86, i32* %30, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_82_164))
begin
memory_controller_in_a = ivtv_yuv_window_setup_82_86;
end
/* ivtv_yuv_window_setup: %98*/
/*   store i32 %101, i32* %1, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_98_200))
begin
memory_controller_in_a = ivtv_yuv_window_setup_98_101;
end
/* ivtv_yuv_window_setup: %116*/
/*   store i32 %120, i32* %13, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_116_208))
begin
memory_controller_in_a = ivtv_yuv_window_setup_116_120;
end
/* ivtv_yuv_window_setup: %134*/
/*   store i32 %141, i32* %1, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_134_220))
begin
memory_controller_in_a = ivtv_yuv_window_setup_134_141;
end
/* ivtv_yuv_window_setup: %134*/
/*   store i32 %142, i32* %13, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_134_221))
begin
memory_controller_in_a = ivtv_yuv_window_setup_134_142_reg;
end
/* ivtv_yuv_window_setup: %134*/
/*   store i32 %147, i32* %7, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_134_222))
begin
memory_controller_in_a = ivtv_yuv_window_setup_134_147_reg;
end
/* ivtv_yuv_window_setup: %134*/
/*   store i32 %148, i32* %30, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_134_223))
begin
memory_controller_in_a = ivtv_yuv_window_setup_134_148_reg;
end
/* ivtv_yuv_window_setup: %151*/
/*   store i32 %152, i32* %13, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_151_253))
begin
memory_controller_in_a = ivtv_yuv_window_setup_151_152;
end
/* ivtv_yuv_window_setup: %159*/
/*   store i32 %160, i32* %30, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_159_320))
begin
memory_controller_in_a = ivtv_yuv_window_setup_159_160;
end
end
always @(*) begin
memory_controller_size_a = 1'd0;
if ((cur_state == LEGUP_0))
begin
memory_controller_size_a = 1'd0;
end
/* ivtv_yuv_window_setup: %0*/
/*   %2 = load i32* %1, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_0_1))
begin
memory_controller_size_a = 2'd2;
end
/* ivtv_yuv_window_setup: %4*/
/*   store i32 0, i32* %1, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_4_4))
begin
memory_controller_size_a = 2'd2;
end
/* ivtv_yuv_window_setup: %5*/
/*   %8 = load i32* %7, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_5_6))
begin
memory_controller_size_a = 2'd2;
end
/* ivtv_yuv_window_setup: %10*/
/*   store i32 0, i32* %7, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_10_9))
begin
memory_controller_size_a = 2'd2;
end
/* ivtv_yuv_window_setup: %11*/
/*   %14 = load i32* %13, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_11_11))
begin
memory_controller_size_a = 2'd2;
end
/* ivtv_yuv_window_setup: %20*/
/*   store i32 %17, i32* %13, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_20_14))
begin
memory_controller_size_a = 2'd2;
end
/* ivtv_yuv_window_setup: %20*/
/*   store i32 %22, i32* %1, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_20_46))
begin
memory_controller_size_a = 2'd2;
end
/* ivtv_yuv_window_setup: %26*/
/*   %31 = load i32* %30, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_26_49))
begin
memory_controller_size_a = 2'd2;
end
/* ivtv_yuv_window_setup: %41*/
/*   store i32 %38, i32* %30, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_41_86))
begin
memory_controller_size_a = 2'd2;
end
/* ivtv_yuv_window_setup: %41*/
/*   store i32 %43, i32* %7, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_41_118))
begin
memory_controller_size_a = 2'd2;
end
/* ivtv_yuv_window_setup: %55*/
/*   %59 = load i32* %58, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_55_122))
begin
memory_controller_size_a = 2'd2;
end
/* ivtv_yuv_window_setup: %64*/
/*   store i32 %67, i32* %7, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_64_156))
begin
memory_controller_size_a = 2'd2;
end
/* ivtv_yuv_window_setup: %72*/
/*   %78 = load i32* %77, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_72_160))
begin
memory_controller_size_a = 2'd2;
end
/* ivtv_yuv_window_setup: %82*/
/*   store i32 %86, i32* %30, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_82_164))
begin
memory_controller_size_a = 2'd2;
end
/* ivtv_yuv_window_setup: %87*/
/*   %93 = load i32* %92, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_87_166))
begin
memory_controller_size_a = 2'd2;
end
/* ivtv_yuv_window_setup: %98*/
/*   store i32 %101, i32* %1, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_98_200))
begin
memory_controller_size_a = 2'd2;
end
/* ivtv_yuv_window_setup: %106*/
/*   %112 = load i32* %111, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_106_204))
begin
memory_controller_size_a = 2'd2;
end
/* ivtv_yuv_window_setup: %116*/
/*   store i32 %120, i32* %13, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_116_208))
begin
memory_controller_size_a = 2'd2;
end
/* ivtv_yuv_window_setup: %121*/
/*   %125 = load i32* %124, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_121_210))
begin
memory_controller_size_a = 2'd2;
end
/* ivtv_yuv_window_setup: %127*/
/*   %129 = load i32* %128, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_127_213))
begin
memory_controller_size_a = 2'd2;
end
/* ivtv_yuv_window_setup: %127*/
/*   %132 = load i32* %131, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_127_216))
begin
memory_controller_size_a = 2'd2;
end
/* ivtv_yuv_window_setup: %134*/
/*   store i32 %141, i32* %1, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_134_220))
begin
memory_controller_size_a = 2'd2;
end
/* ivtv_yuv_window_setup: %134*/
/*   store i32 %142, i32* %13, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_134_221))
begin
memory_controller_size_a = 2'd2;
end
/* ivtv_yuv_window_setup: %134*/
/*   store i32 %147, i32* %7, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_134_222))
begin
memory_controller_size_a = 2'd2;
end
/* ivtv_yuv_window_setup: %134*/
/*   store i32 %148, i32* %30, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_134_223))
begin
memory_controller_size_a = 2'd2;
end
/* ivtv_yuv_window_setup: %151*/
/*   store i32 %152, i32* %13, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_151_253))
begin
memory_controller_size_a = 2'd2;
end
/* ivtv_yuv_window_setup: %159*/
/*   store i32 %160, i32* %30, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_159_320))
begin
memory_controller_size_a = 2'd2;
end
end
always @(*) begin
memory_controller_enable_b = 1'd0;
if ((cur_state == LEGUP_0))
begin
memory_controller_enable_b = 1'd0;
end
/* ivtv_yuv_window_setup: %11*/
/*   %16 = load i32* %15, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_11_11))
begin
memory_controller_enable_b = 1'd1;
end
/* ivtv_yuv_window_setup: %20*/
/*   store i32 %25, i32* %15, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_20_47))
begin
memory_controller_enable_b = 1'd1;
end
/* ivtv_yuv_window_setup: %26*/
/*   %33 = load i32* %32, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_26_49))
begin
memory_controller_enable_b = 1'd1;
end
/* ivtv_yuv_window_setup: %36*/
/*   store i32 1, i32* %37, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_36_84))
begin
memory_controller_enable_b = 1'd1;
end
/* ivtv_yuv_window_setup: %41*/
/*   store i32 %46, i32* %32, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_41_119))
begin
memory_controller_enable_b = 1'd1;
end
/* ivtv_yuv_window_setup: %55*/
/*   %61 = load i32* %60, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_55_122))
begin
memory_controller_enable_b = 1'd1;
end
/* ivtv_yuv_window_setup: %64*/
/*   store i32 %68, i32* %30, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_64_156))
begin
memory_controller_enable_b = 1'd1;
end
/* ivtv_yuv_window_setup: %64*/
/*   store i32 %69, i32* %32, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_64_157))
begin
memory_controller_enable_b = 1'd1;
end
/* ivtv_yuv_window_setup: %72*/
/*   store i32 %76, i32* %60, align 4*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_72_160))
begin
memory_controller_enable_b = 1'd1;
end
/* ivtv_yuv_window_setup: %82*/
/*   store i32 %83, i32* %32, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_82_163))
begin
memory_controller_enable_b = 1'd1;
end
/* ivtv_yuv_window_setup: %87*/
/*   %95 = load i32* %94, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_87_166))
begin
memory_controller_enable_b = 1'd1;
end
/* ivtv_yuv_window_setup: %98*/
/*   store i32 %102, i32* %13, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_98_200))
begin
memory_controller_enable_b = 1'd1;
end
/* ivtv_yuv_window_setup: %98*/
/*   store i32 %103, i32* %15, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_98_201))
begin
memory_controller_enable_b = 1'd1;
end
/* ivtv_yuv_window_setup: %106*/
/*   store i32 %110, i32* %94, align 4*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_106_204))
begin
memory_controller_enable_b = 1'd1;
end
/* ivtv_yuv_window_setup: %116*/
/*   store i32 %117, i32* %15, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_116_207))
begin
memory_controller_enable_b = 1'd1;
end
/* ivtv_yuv_window_setup: %127*/
/*   store i32 %130, i32* %94, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_127_215))
begin
memory_controller_enable_b = 1'd1;
end
/* ivtv_yuv_window_setup: %127*/
/*   store i32 %133, i32* %60, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_127_218))
begin
memory_controller_enable_b = 1'd1;
end
/* ivtv_yuv_window_setup: %134*/
/*   store i32 %138, i32* %94, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_134_220))
begin
memory_controller_enable_b = 1'd1;
end
/* ivtv_yuv_window_setup: %134*/
/*   store i32 %137, i32* %15, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_134_221))
begin
memory_controller_enable_b = 1'd1;
end
/* ivtv_yuv_window_setup: %134*/
/*   store i32 %144, i32* %60, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_134_222))
begin
memory_controller_enable_b = 1'd1;
end
/* ivtv_yuv_window_setup: %134*/
/*   store i32 %143, i32* %32, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_134_223))
begin
memory_controller_enable_b = 1'd1;
end
/* ivtv_yuv_window_setup: %151*/
/*   store i32 %155, i32* %15, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_151_285))
begin
memory_controller_enable_b = 1'd1;
end
/* ivtv_yuv_window_setup: %159*/
/*   store i32 %163, i32* %32, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_159_352))
begin
memory_controller_enable_b = 1'd1;
end
end
always @(*) begin
memory_controller_address_b = 1'd0;
if ((cur_state == LEGUP_0))
begin
memory_controller_address_b = 1'd0;
end
/* ivtv_yuv_window_setup: %11*/
/*   %16 = load i32* %15, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_11_11))
begin
memory_controller_address_b = ivtv_yuv_window_setup_11_15;
end
/* ivtv_yuv_window_setup: %20*/
/*   store i32 %25, i32* %15, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_20_47))
begin
memory_controller_address_b = ivtv_yuv_window_setup_11_15_reg;
end
/* ivtv_yuv_window_setup: %26*/
/*   %33 = load i32* %32, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_26_49))
begin
memory_controller_address_b = ivtv_yuv_window_setup_26_32;
end
/* ivtv_yuv_window_setup: %36*/
/*   store i32 1, i32* %37, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_36_84))
begin
memory_controller_address_b = ivtv_yuv_window_setup_36_37;
end
/* ivtv_yuv_window_setup: %41*/
/*   store i32 %46, i32* %32, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_41_119))
begin
memory_controller_address_b = ivtv_yuv_window_setup_26_32_reg;
end
/* ivtv_yuv_window_setup: %55*/
/*   %61 = load i32* %60, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_55_122))
begin
memory_controller_address_b = ivtv_yuv_window_setup_55_60;
end
/* ivtv_yuv_window_setup: %64*/
/*   store i32 %68, i32* %30, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_64_156))
begin
memory_controller_address_b = ivtv_yuv_window_setup_26_30_reg;
end
/* ivtv_yuv_window_setup: %64*/
/*   store i32 %69, i32* %32, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_64_157))
begin
memory_controller_address_b = ivtv_yuv_window_setup_26_32_reg;
end
/* ivtv_yuv_window_setup: %72*/
/*   store i32 %76, i32* %60, align 4*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_72_160))
begin
memory_controller_address_b = ivtv_yuv_window_setup_55_60_reg;
end
/* ivtv_yuv_window_setup: %82*/
/*   store i32 %83, i32* %32, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_82_163))
begin
memory_controller_address_b = ivtv_yuv_window_setup_26_32_reg;
end
/* ivtv_yuv_window_setup: %87*/
/*   %95 = load i32* %94, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_87_166))
begin
memory_controller_address_b = ivtv_yuv_window_setup_87_94;
end
/* ivtv_yuv_window_setup: %98*/
/*   store i32 %102, i32* %13, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_98_200))
begin
memory_controller_address_b = ivtv_yuv_window_setup_11_13_reg;
end
/* ivtv_yuv_window_setup: %98*/
/*   store i32 %103, i32* %15, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_98_201))
begin
memory_controller_address_b = ivtv_yuv_window_setup_11_15_reg;
end
/* ivtv_yuv_window_setup: %106*/
/*   store i32 %110, i32* %94, align 4*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_106_204))
begin
memory_controller_address_b = ivtv_yuv_window_setup_87_94_reg;
end
/* ivtv_yuv_window_setup: %116*/
/*   store i32 %117, i32* %15, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_116_207))
begin
memory_controller_address_b = ivtv_yuv_window_setup_11_15_reg;
end
/* ivtv_yuv_window_setup: %127*/
/*   store i32 %130, i32* %94, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_127_215))
begin
memory_controller_address_b = ivtv_yuv_window_setup_87_94_reg;
end
/* ivtv_yuv_window_setup: %127*/
/*   store i32 %133, i32* %60, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_127_218))
begin
memory_controller_address_b = ivtv_yuv_window_setup_55_60_reg;
end
/* ivtv_yuv_window_setup: %134*/
/*   store i32 %138, i32* %94, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_134_220))
begin
memory_controller_address_b = ivtv_yuv_window_setup_87_94_reg;
end
/* ivtv_yuv_window_setup: %134*/
/*   store i32 %137, i32* %15, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_134_221))
begin
memory_controller_address_b = ivtv_yuv_window_setup_11_15_reg;
end
/* ivtv_yuv_window_setup: %134*/
/*   store i32 %144, i32* %60, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_134_222))
begin
memory_controller_address_b = ivtv_yuv_window_setup_55_60_reg;
end
/* ivtv_yuv_window_setup: %134*/
/*   store i32 %143, i32* %32, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_134_223))
begin
memory_controller_address_b = ivtv_yuv_window_setup_26_32_reg;
end
/* ivtv_yuv_window_setup: %151*/
/*   store i32 %155, i32* %15, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_151_285))
begin
memory_controller_address_b = ivtv_yuv_window_setup_11_15_reg;
end
/* ivtv_yuv_window_setup: %159*/
/*   store i32 %163, i32* %32, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_159_352))
begin
memory_controller_address_b = ivtv_yuv_window_setup_26_32_reg;
end
end
always @(*) begin
memory_controller_write_enable_b = 1'd0;
if ((cur_state == LEGUP_0))
begin
memory_controller_write_enable_b = 1'd0;
end
/* ivtv_yuv_window_setup: %11*/
/*   %16 = load i32* %15, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_11_11))
begin
memory_controller_write_enable_b = 1'd0;
end
/* ivtv_yuv_window_setup: %20*/
/*   store i32 %25, i32* %15, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_20_47))
begin
memory_controller_write_enable_b = 1'd1;
end
/* ivtv_yuv_window_setup: %26*/
/*   %33 = load i32* %32, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_26_49))
begin
memory_controller_write_enable_b = 1'd0;
end
/* ivtv_yuv_window_setup: %36*/
/*   store i32 1, i32* %37, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_36_84))
begin
memory_controller_write_enable_b = 1'd1;
end
/* ivtv_yuv_window_setup: %41*/
/*   store i32 %46, i32* %32, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_41_119))
begin
memory_controller_write_enable_b = 1'd1;
end
/* ivtv_yuv_window_setup: %55*/
/*   %61 = load i32* %60, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_55_122))
begin
memory_controller_write_enable_b = 1'd0;
end
/* ivtv_yuv_window_setup: %64*/
/*   store i32 %68, i32* %30, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_64_156))
begin
memory_controller_write_enable_b = 1'd1;
end
/* ivtv_yuv_window_setup: %64*/
/*   store i32 %69, i32* %32, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_64_157))
begin
memory_controller_write_enable_b = 1'd1;
end
/* ivtv_yuv_window_setup: %72*/
/*   store i32 %76, i32* %60, align 4*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_72_160))
begin
memory_controller_write_enable_b = 1'd1;
end
/* ivtv_yuv_window_setup: %82*/
/*   store i32 %83, i32* %32, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_82_163))
begin
memory_controller_write_enable_b = 1'd1;
end
/* ivtv_yuv_window_setup: %87*/
/*   %95 = load i32* %94, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_87_166))
begin
memory_controller_write_enable_b = 1'd0;
end
/* ivtv_yuv_window_setup: %98*/
/*   store i32 %102, i32* %13, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_98_200))
begin
memory_controller_write_enable_b = 1'd1;
end
/* ivtv_yuv_window_setup: %98*/
/*   store i32 %103, i32* %15, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_98_201))
begin
memory_controller_write_enable_b = 1'd1;
end
/* ivtv_yuv_window_setup: %106*/
/*   store i32 %110, i32* %94, align 4*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_106_204))
begin
memory_controller_write_enable_b = 1'd1;
end
/* ivtv_yuv_window_setup: %116*/
/*   store i32 %117, i32* %15, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_116_207))
begin
memory_controller_write_enable_b = 1'd1;
end
/* ivtv_yuv_window_setup: %127*/
/*   store i32 %130, i32* %94, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_127_215))
begin
memory_controller_write_enable_b = 1'd1;
end
/* ivtv_yuv_window_setup: %127*/
/*   store i32 %133, i32* %60, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_127_218))
begin
memory_controller_write_enable_b = 1'd1;
end
/* ivtv_yuv_window_setup: %134*/
/*   store i32 %138, i32* %94, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_134_220))
begin
memory_controller_write_enable_b = 1'd1;
end
/* ivtv_yuv_window_setup: %134*/
/*   store i32 %137, i32* %15, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_134_221))
begin
memory_controller_write_enable_b = 1'd1;
end
/* ivtv_yuv_window_setup: %134*/
/*   store i32 %144, i32* %60, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_134_222))
begin
memory_controller_write_enable_b = 1'd1;
end
/* ivtv_yuv_window_setup: %134*/
/*   store i32 %143, i32* %32, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_134_223))
begin
memory_controller_write_enable_b = 1'd1;
end
/* ivtv_yuv_window_setup: %151*/
/*   store i32 %155, i32* %15, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_151_285))
begin
memory_controller_write_enable_b = 1'd1;
end
/* ivtv_yuv_window_setup: %159*/
/*   store i32 %163, i32* %32, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_159_352))
begin
memory_controller_write_enable_b = 1'd1;
end
end
always @(*) begin
memory_controller_in_b = 1'd0;
if ((cur_state == LEGUP_0))
begin
memory_controller_in_b = 1'd0;
end
/* ivtv_yuv_window_setup: %20*/
/*   store i32 %25, i32* %15, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_20_47))
begin
memory_controller_in_b = ivtv_yuv_window_setup_20_25;
end
/* ivtv_yuv_window_setup: %36*/
/*   store i32 1, i32* %37, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_36_84))
begin
memory_controller_in_b = 32'd1;
end
/* ivtv_yuv_window_setup: %41*/
/*   store i32 %46, i32* %32, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_41_119))
begin
memory_controller_in_b = ivtv_yuv_window_setup_41_46;
end
/* ivtv_yuv_window_setup: %64*/
/*   store i32 %68, i32* %30, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_64_156))
begin
memory_controller_in_b = ivtv_yuv_window_setup_64_68;
end
/* ivtv_yuv_window_setup: %64*/
/*   store i32 %69, i32* %32, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_64_157))
begin
memory_controller_in_b = ivtv_yuv_window_setup_64_69_reg;
end
/* ivtv_yuv_window_setup: %72*/
/*   store i32 %76, i32* %60, align 4*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_72_160))
begin
memory_controller_in_b = ivtv_yuv_window_setup_72_76_reg;
end
/* ivtv_yuv_window_setup: %82*/
/*   store i32 %83, i32* %32, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_82_163))
begin
memory_controller_in_b = ivtv_yuv_window_setup_82_83;
end
/* ivtv_yuv_window_setup: %98*/
/*   store i32 %102, i32* %13, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_98_200))
begin
memory_controller_in_b = ivtv_yuv_window_setup_98_102;
end
/* ivtv_yuv_window_setup: %98*/
/*   store i32 %103, i32* %15, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_98_201))
begin
memory_controller_in_b = ivtv_yuv_window_setup_98_103_reg;
end
/* ivtv_yuv_window_setup: %106*/
/*   store i32 %110, i32* %94, align 4*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_106_204))
begin
memory_controller_in_b = ivtv_yuv_window_setup_106_110_reg;
end
/* ivtv_yuv_window_setup: %116*/
/*   store i32 %117, i32* %15, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_116_207))
begin
memory_controller_in_b = ivtv_yuv_window_setup_116_117;
end
/* ivtv_yuv_window_setup: %127*/
/*   store i32 %130, i32* %94, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_127_215))
begin
memory_controller_in_b = ivtv_yuv_window_setup_127_130;
end
/* ivtv_yuv_window_setup: %127*/
/*   store i32 %133, i32* %60, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_127_218))
begin
memory_controller_in_b = ivtv_yuv_window_setup_127_133;
end
/* ivtv_yuv_window_setup: %134*/
/*   store i32 %138, i32* %94, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_134_220))
begin
memory_controller_in_b = ivtv_yuv_window_setup_134_138;
end
/* ivtv_yuv_window_setup: %134*/
/*   store i32 %137, i32* %15, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_134_221))
begin
memory_controller_in_b = ivtv_yuv_window_setup_134_137_reg;
end
/* ivtv_yuv_window_setup: %134*/
/*   store i32 %144, i32* %60, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_134_222))
begin
memory_controller_in_b = ivtv_yuv_window_setup_134_144_reg;
end
/* ivtv_yuv_window_setup: %134*/
/*   store i32 %143, i32* %32, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_134_223))
begin
memory_controller_in_b = ivtv_yuv_window_setup_134_143_reg;
end
/* ivtv_yuv_window_setup: %151*/
/*   store i32 %155, i32* %15, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_151_285))
begin
memory_controller_in_b = ivtv_yuv_window_setup_151_155;
end
/* ivtv_yuv_window_setup: %159*/
/*   store i32 %163, i32* %32, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_159_352))
begin
memory_controller_in_b = ivtv_yuv_window_setup_159_163;
end
end
always @(*) begin
memory_controller_size_b = 1'd0;
if ((cur_state == LEGUP_0))
begin
memory_controller_size_b = 1'd0;
end
/* ivtv_yuv_window_setup: %11*/
/*   %16 = load i32* %15, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_11_11))
begin
memory_controller_size_b = 2'd2;
end
/* ivtv_yuv_window_setup: %20*/
/*   store i32 %25, i32* %15, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_20_47))
begin
memory_controller_size_b = 2'd2;
end
/* ivtv_yuv_window_setup: %26*/
/*   %33 = load i32* %32, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_26_49))
begin
memory_controller_size_b = 2'd2;
end
/* ivtv_yuv_window_setup: %36*/
/*   store i32 1, i32* %37, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_36_84))
begin
memory_controller_size_b = 2'd2;
end
/* ivtv_yuv_window_setup: %41*/
/*   store i32 %46, i32* %32, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_41_119))
begin
memory_controller_size_b = 2'd2;
end
/* ivtv_yuv_window_setup: %55*/
/*   %61 = load i32* %60, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_55_122))
begin
memory_controller_size_b = 2'd2;
end
/* ivtv_yuv_window_setup: %64*/
/*   store i32 %68, i32* %30, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_64_156))
begin
memory_controller_size_b = 2'd2;
end
/* ivtv_yuv_window_setup: %64*/
/*   store i32 %69, i32* %32, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_64_157))
begin
memory_controller_size_b = 2'd2;
end
/* ivtv_yuv_window_setup: %72*/
/*   store i32 %76, i32* %60, align 4*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_72_160))
begin
memory_controller_size_b = 2'd2;
end
/* ivtv_yuv_window_setup: %82*/
/*   store i32 %83, i32* %32, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_82_163))
begin
memory_controller_size_b = 2'd2;
end
/* ivtv_yuv_window_setup: %87*/
/*   %95 = load i32* %94, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_87_166))
begin
memory_controller_size_b = 2'd2;
end
/* ivtv_yuv_window_setup: %98*/
/*   store i32 %102, i32* %13, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_98_200))
begin
memory_controller_size_b = 2'd2;
end
/* ivtv_yuv_window_setup: %98*/
/*   store i32 %103, i32* %15, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_98_201))
begin
memory_controller_size_b = 2'd2;
end
/* ivtv_yuv_window_setup: %106*/
/*   store i32 %110, i32* %94, align 4*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_106_204))
begin
memory_controller_size_b = 2'd2;
end
/* ivtv_yuv_window_setup: %116*/
/*   store i32 %117, i32* %15, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_116_207))
begin
memory_controller_size_b = 2'd2;
end
/* ivtv_yuv_window_setup: %127*/
/*   store i32 %130, i32* %94, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_127_215))
begin
memory_controller_size_b = 2'd2;
end
/* ivtv_yuv_window_setup: %127*/
/*   store i32 %133, i32* %60, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_127_218))
begin
memory_controller_size_b = 2'd2;
end
/* ivtv_yuv_window_setup: %134*/
/*   store i32 %138, i32* %94, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_134_220))
begin
memory_controller_size_b = 2'd2;
end
/* ivtv_yuv_window_setup: %134*/
/*   store i32 %137, i32* %15, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_134_221))
begin
memory_controller_size_b = 2'd2;
end
/* ivtv_yuv_window_setup: %134*/
/*   store i32 %144, i32* %60, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_134_222))
begin
memory_controller_size_b = 2'd2;
end
/* ivtv_yuv_window_setup: %134*/
/*   store i32 %143, i32* %32, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_134_223))
begin
memory_controller_size_b = 2'd2;
end
/* ivtv_yuv_window_setup: %151*/
/*   store i32 %155, i32* %15, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_151_285))
begin
memory_controller_size_b = 2'd2;
end
/* ivtv_yuv_window_setup: %159*/
/*   store i32 %163, i32* %32, align 4, !tbaa !0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_159_352))
begin
memory_controller_size_b = 2'd2;
end
end
always @(posedge clk) begin
if ((cur_state == LEGUP_0))
begin
return_val <= 0;
if (reset == 1'b0 && ^(0) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to return_val"); $finish; end
end
/* ivtv_yuv_window_setup: %164*/
/*   ret i32 0*/
if ((cur_state == LEGUP_F_ivtv_yuv_window_setup_BB_164_354))
begin
return_val <= 32'd0;
if (reset == 1'b0 && ^(32'd0) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to return_val"); $finish; end
end
end

endmodule 
`timescale 1 ns / 1 ns
module main
(
	clk,
	clk2x,
	clk1x_follower,
	reset,
	start,
	finish,
	memory_controller_enable_a,
	memory_controller_address_a,
	memory_controller_write_enable_a,
	memory_controller_in_a,
	memory_controller_size_a,
	memory_controller_out_a,
	memory_controller_enable_b,
	memory_controller_address_b,
	memory_controller_write_enable_b,
	memory_controller_in_b,
	memory_controller_size_b,
	memory_controller_out_b,
	memory_controller_waitrequest,
	return_val
);

parameter [1:0] LEGUP_0 = 2'd0;
parameter [1:0] LEGUP_F_main_BB_0_1 = 2'd1;
parameter [1:0] LEGUP_F_main_BB_0_3 = 2'd3;
parameter [1:0] LEGUP_function_call_2 = 2'd2;

input  clk;
input  clk2x;
input  clk1x_follower;
input  reset;
input  start;
output reg  finish;
output reg  memory_controller_enable_a;
output reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] memory_controller_address_a;
output reg  memory_controller_write_enable_a;
output reg [`MEMORY_CONTROLLER_DATA_SIZE-1:0] memory_controller_in_a;
output reg [1:0] memory_controller_size_a;
input [`MEMORY_CONTROLLER_DATA_SIZE-1:0] memory_controller_out_a;
output reg  memory_controller_enable_b;
output reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] memory_controller_address_b;
output reg  memory_controller_write_enable_b;
output reg [`MEMORY_CONTROLLER_DATA_SIZE-1:0] memory_controller_in_b;
output reg [1:0] memory_controller_size_b;
input [`MEMORY_CONTROLLER_DATA_SIZE-1:0] memory_controller_out_b;
input  memory_controller_waitrequest;
output reg [31:0] return_val;
reg [1:0] cur_state;
reg [31:0] main_0_1;
reg [31:0] main_0_1_reg;
reg  ivtv_yuv_window_setup_start;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] ivtv_yuv_window_setup_arg_itv;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] ivtv_yuv_window_setup_arg_f;
wire  ivtv_yuv_window_setup_memory_controller_enable_a;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] ivtv_yuv_window_setup_memory_controller_address_a;
wire  ivtv_yuv_window_setup_memory_controller_write_enable_a;
wire [`MEMORY_CONTROLLER_DATA_SIZE-1:0] ivtv_yuv_window_setup_memory_controller_in_a;
reg [`MEMORY_CONTROLLER_DATA_SIZE-1:0] ivtv_yuv_window_setup_memory_controller_out_a;
wire [1:0] ivtv_yuv_window_setup_memory_controller_size_a;
wire  ivtv_yuv_window_setup_memory_controller_enable_b;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] ivtv_yuv_window_setup_memory_controller_address_b;
wire  ivtv_yuv_window_setup_memory_controller_write_enable_b;
wire [`MEMORY_CONTROLLER_DATA_SIZE-1:0] ivtv_yuv_window_setup_memory_controller_in_b;
reg [`MEMORY_CONTROLLER_DATA_SIZE-1:0] ivtv_yuv_window_setup_memory_controller_out_b;
wire [1:0] ivtv_yuv_window_setup_memory_controller_size_b;
reg  ivtv_yuv_window_setup_memory_controller_waitrequest;
wire  ivtv_yuv_window_setup_finish;
reg  ivtv_yuv_window_setup_finish_final;
wire [31:0] ivtv_yuv_window_setup_return_val;
reg  legup_function_call;
wire [15:0] legup_pthreadpoll_threadID;


ivtv_yuv_window_setup ivtv_yuv_window_setup_inst (
	.memory_controller_enable_a (ivtv_yuv_window_setup_memory_controller_enable_a),
	.memory_controller_address_a (ivtv_yuv_window_setup_memory_controller_address_a),
	.memory_controller_write_enable_a (ivtv_yuv_window_setup_memory_controller_write_enable_a),
	.memory_controller_in_a (ivtv_yuv_window_setup_memory_controller_in_a),
	.memory_controller_size_a (ivtv_yuv_window_setup_memory_controller_size_a),
	.memory_controller_out_a (memory_controller_out_a[`MEMORY_CONTROLLER_DATA_SIZE-1:0]),
	.memory_controller_enable_b (ivtv_yuv_window_setup_memory_controller_enable_b),
	.memory_controller_address_b (ivtv_yuv_window_setup_memory_controller_address_b),
	.memory_controller_write_enable_b (ivtv_yuv_window_setup_memory_controller_write_enable_b),
	.memory_controller_in_b (ivtv_yuv_window_setup_memory_controller_in_b),
	.memory_controller_size_b (ivtv_yuv_window_setup_memory_controller_size_b),
	.memory_controller_out_b (memory_controller_out_b[`MEMORY_CONTROLLER_DATA_SIZE-1:0]),
	.memory_controller_waitrequest (memory_controller_waitrequest),
	.clk (clk),
	.clk2x (clk2x),
	.clk1x_follower (clk1x_follower),
	.reset (reset),
	.start (ivtv_yuv_window_setup_start),
	.finish (ivtv_yuv_window_setup_finish),
	.return_val (ivtv_yuv_window_setup_return_val),
	.arg_itv (ivtv_yuv_window_setup_arg_itv),
	.arg_f (ivtv_yuv_window_setup_arg_f)
);


// Local Rams


always @(posedge clk) begin
if (((cur_state == LEGUP_0) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_0;
if (reset == 1'b0 && ^(LEGUP_0) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_0) & (memory_controller_waitrequest == 1'd0)) & (start == 1'd1)))
begin
cur_state <= LEGUP_F_main_BB_0_1;
if (reset == 1'b0 && ^(LEGUP_F_main_BB_0_1) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_0) & (memory_controller_waitrequest == 1'd0)) & (start == 1'd0)))
begin
cur_state <= LEGUP_0;
if (reset == 1'b0 && ^(LEGUP_0) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_main_BB_0_1) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_main_BB_0_1;
if (reset == 1'b0 && ^(LEGUP_F_main_BB_0_1) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_main_BB_0_1) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_function_call_2;
if (reset == 1'b0 && ^(LEGUP_function_call_2) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_function_call_2) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_function_call_2;
if (reset == 1'b0 && ^(LEGUP_function_call_2) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_function_call_2) & (memory_controller_waitrequest == 1'd0)) & (ivtv_yuv_window_setup_finish_final == 1'd1)))
begin
cur_state <= LEGUP_F_main_BB_0_3;
if (reset == 1'b0 && ^(LEGUP_F_main_BB_0_3) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_function_call_2) & (memory_controller_waitrequest == 1'd0)) & (ivtv_yuv_window_setup_finish_final == 1'd0)))
begin
cur_state <= LEGUP_function_call_2;
if (reset == 1'b0 && ^(LEGUP_function_call_2) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_main_BB_0_3) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_main_BB_0_3;
if (reset == 1'b0 && ^(LEGUP_F_main_BB_0_3) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_main_BB_0_3) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_0;
if (reset == 1'b0 && ^(LEGUP_0) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((reset == 1'd1))
begin
cur_state <= 2'd0;
if (reset == 1'b0 && ^(2'd0) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
end
always @(*) begin
/* main: %0*/
/*   %1 = tail call i32 @ivtv_yuv_window_setup(%struct.ivtv* undef, %struct.yuv_frame_info* undef)*/
begin
main_0_1 = ivtv_yuv_window_setup_return_val;
end
end
always @(posedge clk) begin
/* main: %0*/
/*   %1 = tail call i32 @ivtv_yuv_window_setup(%struct.ivtv* undef, %struct.yuv_frame_info* undef)*/
if ((cur_state == LEGUP_function_call_2))
begin
main_0_1_reg <= main_0_1;
if (reset == 1'b0 && ^(main_0_1) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to main_0_1_reg"); $finish; end
end
end
always @(posedge clk) begin
/* main: %0*/
/*   %1 = tail call i32 @ivtv_yuv_window_setup(%struct.ivtv* undef, %struct.yuv_frame_info* undef)*/
if ((cur_state == LEGUP_F_main_BB_0_1))
begin
ivtv_yuv_window_setup_start <= 1'd1;
if (reset == 1'b0 && ^(1'd1) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to ivtv_yuv_window_setup_start"); $finish; end
end
/* main: %0*/
/*   %1 = tail call i32 @ivtv_yuv_window_setup(%struct.ivtv* undef, %struct.yuv_frame_info* undef)*/
if ((cur_state == LEGUP_function_call_2))
begin
ivtv_yuv_window_setup_start <= 1'd0;
if (reset == 1'b0 && ^(1'd0) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to ivtv_yuv_window_setup_start"); $finish; end
end
end
always @(posedge clk) begin
/* main: %0*/
/*   %1 = tail call i32 @ivtv_yuv_window_setup(%struct.ivtv* undef, %struct.yuv_frame_info* undef)*/
if ((cur_state == LEGUP_F_main_BB_0_1))
begin
ivtv_yuv_window_setup_arg_itv <= 0;
if (reset == 1'b0 && ^(0) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to ivtv_yuv_window_setup_arg_itv"); $finish; end
end
end
always @(posedge clk) begin
/* main: %0*/
/*   %1 = tail call i32 @ivtv_yuv_window_setup(%struct.ivtv* undef, %struct.yuv_frame_info* undef)*/
if ((cur_state == LEGUP_F_main_BB_0_1))
begin
ivtv_yuv_window_setup_arg_f <= 0;
if (reset == 1'b0 && ^(0) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to ivtv_yuv_window_setup_arg_f"); $finish; end
end
end
always @(*) begin
/* main: %0*/
/*   %1 = tail call i32 @ivtv_yuv_window_setup(%struct.ivtv* undef, %struct.yuv_frame_info* undef)*/
begin
ivtv_yuv_window_setup_memory_controller_out_a = memory_controller_out_a;
end
end
always @(*) begin
/* main: %0*/
/*   %1 = tail call i32 @ivtv_yuv_window_setup(%struct.ivtv* undef, %struct.yuv_frame_info* undef)*/
begin
ivtv_yuv_window_setup_memory_controller_out_b = memory_controller_out_b;
end
end
always @(*) begin
ivtv_yuv_window_setup_memory_controller_waitrequest = memory_controller_waitrequest;
end
always @(*) begin
ivtv_yuv_window_setup_finish_final = ivtv_yuv_window_setup_finish;
end
always @(*) begin
legup_function_call = 1'd0;
/* main: %0*/
/*   %1 = tail call i32 @ivtv_yuv_window_setup(%struct.ivtv* undef, %struct.yuv_frame_info* undef)*/
if ((cur_state == LEGUP_function_call_2))
begin
legup_function_call = 1'd1;
end
end
always @(posedge clk) begin
if ((cur_state == LEGUP_0))
begin
finish <= 1'd0;
if (reset == 1'b0 && ^(1'd0) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to finish"); $finish; end
end
/* main: %0*/
/*   ret i32 0*/
if ((cur_state == LEGUP_F_main_BB_0_3))
begin
finish <= (memory_controller_waitrequest == 1'd0);
if (reset == 1'b0 && ^((memory_controller_waitrequest == 1'd0)) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to finish"); $finish; end
end
end
always @(*) begin
memory_controller_enable_a = 1'd0;
/* main: %0*/
/*   %1 = tail call i32 @ivtv_yuv_window_setup(%struct.ivtv* undef, %struct.yuv_frame_info* undef)*/
if ((cur_state == LEGUP_function_call_2))
begin
memory_controller_enable_a = ivtv_yuv_window_setup_memory_controller_enable_a;
end
/* main: %0*/
/*   %1 = tail call i32 @ivtv_yuv_window_setup(%struct.ivtv* undef, %struct.yuv_frame_info* undef)*/
if ((cur_state == LEGUP_function_call_2))
begin
memory_controller_enable_a = ivtv_yuv_window_setup_memory_controller_enable_a;
end
end
always @(*) begin
memory_controller_address_a = 1'd0;
/* main: %0*/
/*   %1 = tail call i32 @ivtv_yuv_window_setup(%struct.ivtv* undef, %struct.yuv_frame_info* undef)*/
if ((cur_state == LEGUP_function_call_2))
begin
memory_controller_address_a[`MEMORY_CONTROLLER_ADDR_SIZE-1:0] = ivtv_yuv_window_setup_memory_controller_address_a;
end
/* main: %0*/
/*   %1 = tail call i32 @ivtv_yuv_window_setup(%struct.ivtv* undef, %struct.yuv_frame_info* undef)*/
if ((cur_state == LEGUP_function_call_2))
begin
memory_controller_address_a[`MEMORY_CONTROLLER_ADDR_SIZE-1:0] = ivtv_yuv_window_setup_memory_controller_address_a;
end
end
always @(*) begin
memory_controller_write_enable_a = 1'd0;
/* main: %0*/
/*   %1 = tail call i32 @ivtv_yuv_window_setup(%struct.ivtv* undef, %struct.yuv_frame_info* undef)*/
if ((cur_state == LEGUP_function_call_2))
begin
memory_controller_write_enable_a = ivtv_yuv_window_setup_memory_controller_write_enable_a;
end
/* main: %0*/
/*   %1 = tail call i32 @ivtv_yuv_window_setup(%struct.ivtv* undef, %struct.yuv_frame_info* undef)*/
if ((cur_state == LEGUP_function_call_2))
begin
memory_controller_write_enable_a = ivtv_yuv_window_setup_memory_controller_write_enable_a;
end
end
always @(*) begin
memory_controller_in_a = 1'd0;
/* main: %0*/
/*   %1 = tail call i32 @ivtv_yuv_window_setup(%struct.ivtv* undef, %struct.yuv_frame_info* undef)*/
if ((cur_state == LEGUP_function_call_2))
begin
memory_controller_in_a[`MEMORY_CONTROLLER_DATA_SIZE-1:0] = ivtv_yuv_window_setup_memory_controller_in_a;
end
/* main: %0*/
/*   %1 = tail call i32 @ivtv_yuv_window_setup(%struct.ivtv* undef, %struct.yuv_frame_info* undef)*/
if ((cur_state == LEGUP_function_call_2))
begin
memory_controller_in_a[`MEMORY_CONTROLLER_DATA_SIZE-1:0] = ivtv_yuv_window_setup_memory_controller_in_a;
end
end
always @(*) begin
memory_controller_size_a = 1'd0;
/* main: %0*/
/*   %1 = tail call i32 @ivtv_yuv_window_setup(%struct.ivtv* undef, %struct.yuv_frame_info* undef)*/
if ((cur_state == LEGUP_function_call_2))
begin
memory_controller_size_a[1:0] = ivtv_yuv_window_setup_memory_controller_size_a;
end
/* main: %0*/
/*   %1 = tail call i32 @ivtv_yuv_window_setup(%struct.ivtv* undef, %struct.yuv_frame_info* undef)*/
if ((cur_state == LEGUP_function_call_2))
begin
memory_controller_size_a[1:0] = ivtv_yuv_window_setup_memory_controller_size_a;
end
end
always @(*) begin
memory_controller_enable_b = 1'd0;
/* main: %0*/
/*   %1 = tail call i32 @ivtv_yuv_window_setup(%struct.ivtv* undef, %struct.yuv_frame_info* undef)*/
if ((cur_state == LEGUP_function_call_2))
begin
memory_controller_enable_b = ivtv_yuv_window_setup_memory_controller_enable_b;
end
/* main: %0*/
/*   %1 = tail call i32 @ivtv_yuv_window_setup(%struct.ivtv* undef, %struct.yuv_frame_info* undef)*/
if ((cur_state == LEGUP_function_call_2))
begin
memory_controller_enable_b = ivtv_yuv_window_setup_memory_controller_enable_b;
end
end
always @(*) begin
memory_controller_address_b = 1'd0;
/* main: %0*/
/*   %1 = tail call i32 @ivtv_yuv_window_setup(%struct.ivtv* undef, %struct.yuv_frame_info* undef)*/
if ((cur_state == LEGUP_function_call_2))
begin
memory_controller_address_b[`MEMORY_CONTROLLER_ADDR_SIZE-1:0] = ivtv_yuv_window_setup_memory_controller_address_b;
end
/* main: %0*/
/*   %1 = tail call i32 @ivtv_yuv_window_setup(%struct.ivtv* undef, %struct.yuv_frame_info* undef)*/
if ((cur_state == LEGUP_function_call_2))
begin
memory_controller_address_b[`MEMORY_CONTROLLER_ADDR_SIZE-1:0] = ivtv_yuv_window_setup_memory_controller_address_b;
end
end
always @(*) begin
memory_controller_write_enable_b = 1'd0;
/* main: %0*/
/*   %1 = tail call i32 @ivtv_yuv_window_setup(%struct.ivtv* undef, %struct.yuv_frame_info* undef)*/
if ((cur_state == LEGUP_function_call_2))
begin
memory_controller_write_enable_b = ivtv_yuv_window_setup_memory_controller_write_enable_b;
end
/* main: %0*/
/*   %1 = tail call i32 @ivtv_yuv_window_setup(%struct.ivtv* undef, %struct.yuv_frame_info* undef)*/
if ((cur_state == LEGUP_function_call_2))
begin
memory_controller_write_enable_b = ivtv_yuv_window_setup_memory_controller_write_enable_b;
end
end
always @(*) begin
memory_controller_in_b = 1'd0;
/* main: %0*/
/*   %1 = tail call i32 @ivtv_yuv_window_setup(%struct.ivtv* undef, %struct.yuv_frame_info* undef)*/
if ((cur_state == LEGUP_function_call_2))
begin
memory_controller_in_b[`MEMORY_CONTROLLER_DATA_SIZE-1:0] = ivtv_yuv_window_setup_memory_controller_in_b;
end
/* main: %0*/
/*   %1 = tail call i32 @ivtv_yuv_window_setup(%struct.ivtv* undef, %struct.yuv_frame_info* undef)*/
if ((cur_state == LEGUP_function_call_2))
begin
memory_controller_in_b[`MEMORY_CONTROLLER_DATA_SIZE-1:0] = ivtv_yuv_window_setup_memory_controller_in_b;
end
end
always @(*) begin
memory_controller_size_b = 1'd0;
/* main: %0*/
/*   %1 = tail call i32 @ivtv_yuv_window_setup(%struct.ivtv* undef, %struct.yuv_frame_info* undef)*/
if ((cur_state == LEGUP_function_call_2))
begin
memory_controller_size_b[1:0] = ivtv_yuv_window_setup_memory_controller_size_b;
end
/* main: %0*/
/*   %1 = tail call i32 @ivtv_yuv_window_setup(%struct.ivtv* undef, %struct.yuv_frame_info* undef)*/
if ((cur_state == LEGUP_function_call_2))
begin
memory_controller_size_b[1:0] = ivtv_yuv_window_setup_memory_controller_size_b;
end
end
always @(posedge clk) begin
if ((cur_state == LEGUP_0))
begin
return_val <= 0;
if (reset == 1'b0 && ^(0) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to return_val"); $finish; end
end
/* main: %0*/
/*   ret i32 0*/
if ((cur_state == LEGUP_F_main_BB_0_3))
begin
return_val <= 32'd0;
if (reset == 1'b0 && ^(32'd0) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to return_val"); $finish; end
end
end

endmodule 
module ram_dual_port
(
	clk,
	address_a,
	address_b,
	wren_a,
	wren_b,
	data_a,
	data_b,
	byteena_a,
	byteena_b,
	q_a,
	q_b
);

parameter  width_a = 1'd0;
parameter  width_b = 1'd0;
parameter  widthad_a = 1'd0;
parameter  widthad_b = 1'd0;
parameter  numwords_a = 1'd0;
parameter  numwords_b = 1'd0;
parameter  init_file = "UNUSED.mif";
parameter  width_be_a = 1'd0;
parameter  width_be_b = 1'd0;
parameter  latency = 1;

input  clk;
input [(widthad_a-1):0] address_a;
input [(widthad_b-1):0] address_b;
output wire [(width_a-1):0] q_a;
output wire [(width_b-1):0] q_b;
reg [(width_a-1):0] q_a_wire;
reg [(width_b-1):0] q_b_wire;
input  wren_a;
input  wren_b;
input [(width_a-1):0] data_a;
input [(width_b-1):0] data_b;
// byte enable is unsupported by inferred RAMs
input [width_be_a-1:0] byteena_a;
input [width_be_b-1:0] byteena_b;

(* ramstyle = "no_rw_check", ram_init_file = init_file *) reg [width_a-1:0] ram[numwords_a-1:0];

/* synthesis translate_off */
integer i;
ALTERA_MF_MEMORY_INITIALIZATION mem ();
reg [8*256:1] ram_ver_file;
initial begin
	if (init_file == "UNUSED.mif")
    begin
		for (i = 0; i < numwords_a; i = i + 1)
			ram[i] = 0;
    end
	else
    begin
        // modelsim can't read .mif files directly. So use Altera function to
        // convert them to .ver files
        mem.convert_to_ver_file(init_file, width_a, ram_ver_file);
        $readmemh(ram_ver_file, ram);
    end
end
/* synthesis translate_on */

always @ (posedge clk)
begin // Port A
if (wren_a)
begin
    ram[address_a] <= data_a;
    q_a_wire <= {width_a{1'bX}};
end
else
    q_a_wire <= ram[address_a];
end
always @ (posedge clk)
begin // Port b
if (wren_b)
begin
    ram[address_b] <= data_b;
    q_b_wire <= {width_b{1'bX}};
end
else
    q_b_wire <= ram[address_b];
end



integer j;
reg [(width_a-1):0] q_a_reg[latency:1], q_b_reg[latency:1];

always @(*)
begin
   q_a_reg[1] <= q_a_wire;
   q_b_reg[1] <= q_b_wire;
end

always @(posedge clk)
begin
   for (j = 1; j < latency; j=j+1)
   begin
       q_a_reg[j+1] <= q_a_reg[j];
       q_b_reg[j+1] <= q_b_reg[j];
   end
end

assign q_a = q_a_reg[latency];
assign q_b = q_b_reg[latency];


endmodule
module rom_dual_port
(
	clk,
	address_a,
	address_b,
	q_a,
	q_b
);

parameter  width_a = 1'd0;
parameter  width_b = 1'd0;
parameter  widthad_a = 1'd0;
parameter  widthad_b = 1'd0;
parameter  numwords_a = 1'd0;
parameter  numwords_b = 1'd0;
parameter  init_file = "UNUSED.mif";
parameter  latency = 1;

input  clk;
input [(widthad_a-1):0] address_a;
input [(widthad_b-1):0] address_b;
output wire [(width_a-1):0] q_a;
output wire [(width_b-1):0] q_b;
reg [(width_a-1):0] q_a_wire;
reg [(width_b-1):0] q_b_wire;

(* ramstyle = "no_rw_check", ram_init_file = init_file *) reg [width_a-1:0] ram[numwords_a-1:0];

/* synthesis translate_off */
integer i;
ALTERA_MF_MEMORY_INITIALIZATION mem ();
reg [8*256:1] ram_ver_file;
initial begin
	if (init_file == "UNUSED.mif")
    begin
		for (i = 0; i < numwords_a; i = i + 1)
			ram[i] = 0;
    end
	else
    begin
        // modelsim can't read .mif files directly. So use Altera function to
        // convert them to .ver files
        mem.convert_to_ver_file(init_file, width_a, ram_ver_file);
        $readmemh(ram_ver_file, ram);
    end
end
/* synthesis translate_on */

always @ (posedge clk)
begin
    q_a_wire <= ram[address_a];
    q_b_wire <= ram[address_b];
end



integer j;
reg [(width_a-1):0] q_a_reg[latency:1], q_b_reg[latency:1];

always @(*)
begin
   q_a_reg[1] <= q_a_wire;
   q_b_reg[1] <= q_b_wire;
end

always @(posedge clk)
begin
   for (j = 1; j < latency; j=j+1)
   begin
       q_a_reg[j+1] <= q_a_reg[j];
       q_b_reg[j+1] <= q_b_reg[j];
   end
end

assign q_a = q_a_reg[latency];
assign q_b = q_b_reg[latency];


endmodule
module de2 (CLOCK_50, KEY, SW, HEX0, HEX1, HEX2, HEX3, HEX4, HEX5, HEX6, HEX7, LEDG);
    input CLOCK_50;
    output [7:0] LEDG;
    input [3:0] KEY;
    input [17:0] SW;
    output [6:0] HEX0, HEX1, HEX2, HEX3, HEX4, HEX5, HEX6, HEX7;

    wire clk = CLOCK_50;
    wire reset = ~KEY[0];
    wire go = ~KEY[1];

    wire  start;
    wire [31:0] return_val;
    wire  finish;

    reg [31:0] return_val_reg;
    
	reg [3:0] hex0, hex1, hex2, hex3, hex4, hex5, hex6, hex7;
	always @ (*) begin
		hex7 <= return_val_reg[31:28];
		hex6 <= return_val_reg[27:24];
		hex5 <= return_val_reg[23:20];
		hex4 <= return_val_reg[19:16];
		hex3 <= return_val_reg[15:12];
		hex2 <= return_val_reg[11:8];
		hex1 <= return_val_reg[7:4];
		hex0 <= return_val_reg[3:0];
	end

    hex_digits h7( .x(hex7), .hex_LEDs(HEX7));
    hex_digits h6( .x(hex6), .hex_LEDs(HEX6));
    hex_digits h5( .x(hex5), .hex_LEDs(HEX5));
    hex_digits h4( .x(hex4), .hex_LEDs(HEX4));
    hex_digits h3( .x(hex3), .hex_LEDs(HEX3));
    hex_digits h2( .x(hex2), .hex_LEDs(HEX2));
    hex_digits h1( .x(hex1), .hex_LEDs(HEX1));
    hex_digits h0( .x(hex0), .hex_LEDs(HEX0));


    top top_inst (
        .clk (clk),
        .reset (reset),
        .start (start),
        .finish (finish),
        .return_val (return_val)
    );

    parameter s_WAIT = 3'b001, s_START = 3'b010, s_EXE = 3'b011,
                s_DONE = 3'b100;

    // state registers
    reg [3:0] y_Q, Y_D;

    assign LEDG[3:0] = y_Q;

    // next state
    always @(*)
    begin
        case (y_Q)
            s_WAIT: if (go) Y_D = s_START; else Y_D = y_Q;

            s_START: Y_D = s_EXE;

            s_EXE: if (!finish) Y_D = s_EXE; else Y_D = s_DONE;

            s_DONE: Y_D = s_DONE;

            default: Y_D = 3'bxxx;
        endcase
    end

    // current state
    always @(posedge clk)
    begin
        if (reset) // synchronous clear
            y_Q <= s_WAIT;
        else
            y_Q <= Y_D;
    end

    always @(posedge clk)
        if (y_Q == s_EXE && finish)
            return_val_reg <= return_val;
        else if (y_Q == s_DONE)
            return_val_reg <= return_val_reg;
        else
            return_val_reg <= 0;


    assign start = (y_Q == s_START);
endmodule

module de4 (
	OSC_50_BANK2,
    BUTTON,
    LED,
	SEG0_D,
	SEG1_D
);
    input OSC_50_BANK2;
    input [1:0] BUTTON;
    output [6:0] SEG0_D;
    output [6:0] SEG1_D;
    output [7:0] LED;

    de2 de2_inst (
        .CLOCK_50 (OSC_50_BANK2),
        .LEDG (LED),
        .KEY (BUTTON),
        .SW (),
        .HEX0 (SEG0_D),
        .HEX1 (SEG1_D),
        .HEX2 (),
        .HEX3 (),
        .HEX4 (),
        .HEX5 (),
        .HEX6 (),
        .HEX7 ()
    );

endmodule
module hex_digits(x, hex_LEDs);
    input [3:0] x;
    output [6:0] hex_LEDs;
    
    assign hex_LEDs[0] = (~x[3] & ~x[2] & ~x[1] & x[0]) |
                            (~x[3] & x[2] & ~x[1] & ~x[0]) |
                            (x[3] & x[2] & ~x[1] & x[0]) |
                            (x[3] & ~x[2] & x[1] & x[0]);
    assign hex_LEDs[1] = (~x[3] & x[2] & ~x[1] & x[0]) |
                            (x[3] & x[1] & x[0]) |
                            (x[3] & x[2] & ~x[0]) |
                            (x[2] & x[1] & ~x[0]);
    assign hex_LEDs[2] = (x[3] & x[2] & ~x[0]) |
                            (x[3] & x[2] & x[1]) |
                            (~x[3] & ~x[2] & x[1] & ~x[0]);
    assign hex_LEDs[3] = (~x[3] & ~x[2] & ~x[1] & x[0]) | 
                            (~x[3] & x[2] & ~x[1] & ~x[0]) | 
                            (x[2] & x[1] & x[0]) | 
                            (x[3] & ~x[2] & x[1] & ~x[0]);
    assign hex_LEDs[4] = (~x[3] & x[0]) |
                            (~x[3] & x[2] & ~x[1]) |
                            (~x[2] & ~x[1] & x[0]);
    assign hex_LEDs[5] = (~x[3] & ~x[2] & x[0]) | 
                            (~x[3] & ~x[2] & x[1]) | 
                            (~x[3] & x[1] & x[0]) | 
                            (x[3] & x[2] & ~x[1] & x[0]);
    assign hex_LEDs[6] = (~x[3] & ~x[2] & ~x[1]) | 
                            (x[3] & x[2] & ~x[1] & ~x[0]) | 
                            (~x[3] & x[2] & x[1] & x[0]);
    
endmodule
`timescale 1 ns / 1 ns
module main_tb
(
);

reg  clk;
reg  reset;
reg  start;
wire [31:0] return_val;
wire  finish;


top top_inst (
	.clk (clk),
	.reset (reset),
	.start (start),
	.finish (finish),
	.return_val (return_val)
);


// Local Rams



initial 
    clk = 0;
always @(clk)
    clk <= #10 ~clk;

initial begin
//$monitor("At t=%t clk=%b %b %b %b %d", $time, clk, reset, start, finish, return_val);
@(negedge clk);
reset <= 1;
@(negedge clk);
reset <= 0;
start <= 1;

end

always@(finish) begin
    if (finish == 1) begin
        $display("At t=%t clk=%b finish=%b return_val=%d", $time, clk, finish, return_val);
        $display("Cycles: %d", ($time-50)/20);
        $finish;
    end
end

endmodule 
