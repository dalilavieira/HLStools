//----------------------------------------------------------------------------//
// Generated by LegUp High-Level Synthesis Tool Version 3.0 (http://legup.org)
// Compiled: Tue Jul 15 15:43:09 2014
// University of Toronto
// For research and academic purposes only. Commercial use is prohibited.
// Please send bugs to: legup@eecg.toronto.edu
// Date: Tue Mar 10 07:50:30 2020
//----------------------------------------------------------------------------//

`define MEMORY_CONTROLLER_ADDR_SIZE 32
`define MEMORY_CONTROLLER_DATA_SIZE 64
// Number of RAM elements: 0
`define MEMORY_CONTROLLER_TAG_SIZE 9
`define TAG_NULL `MEMORY_CONTROLLER_TAG_SIZE'd0
`define TAG_PROCESSOR `MEMORY_CONTROLLER_TAG_SIZE'd1

// Turn off warning 'ignoring unsupported system task'
// altera message_off 10175

module top
	(
		clk,
		reset,
		start,
		finish,
		return_val
	);
input clk;
input reset;
input start;
output wire finish;
output wire [31:0] return_val;
wire memory_controller_waitrequest;
wire memory_controller_enable_a;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] memory_controller_address_a;
wire memory_controller_write_enable_a;
wire [`MEMORY_CONTROLLER_DATA_SIZE-1:0] memory_controller_in_a;
wire [1:0] memory_controller_size_a;
wire [`MEMORY_CONTROLLER_DATA_SIZE-1:0] memory_controller_out_a;

wire memory_controller_enable_b;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] memory_controller_address_b;
wire memory_controller_write_enable_b;
wire [`MEMORY_CONTROLLER_DATA_SIZE-1:0] memory_controller_in_b;
wire [1:0] memory_controller_size_b;
wire [`MEMORY_CONTROLLER_DATA_SIZE-1:0] memory_controller_out_b;

assign memory_controller_waitrequest = 0;

memory_controller memory_controller_inst (
	.clk( clk ),
	.memory_controller_enable_a( memory_controller_enable_a ),
	.memory_controller_enable_b( memory_controller_enable_b ),
	.memory_controller_address_a( memory_controller_address_a ),
	.memory_controller_address_b( memory_controller_address_b ),
	.memory_controller_write_enable_a( memory_controller_write_enable_a ),
	.memory_controller_write_enable_b( memory_controller_write_enable_b ),
	.memory_controller_in_a( memory_controller_in_a ),
	.memory_controller_in_b( memory_controller_in_b ),
	.memory_controller_size_a( memory_controller_size_a ),
	.memory_controller_size_b( memory_controller_size_b ),
	.memory_controller_waitrequest( memory_controller_waitrequest ),
	.memory_controller_out_reg_a( memory_controller_out_a ),
	.memory_controller_out_reg_b( memory_controller_out_b )
);

main main_inst(
	.clk( clk ),
	.clk2x( clk2x ),
	.clk1x_follower( clk1x_follower ),
	.reset( reset ),
	.start( start ),
	.finish( finish ),
	.return_val( return_val ),
	.memory_controller_enable_a(memory_controller_enable_a),
	.memory_controller_address_a(memory_controller_address_a),
	.memory_controller_write_enable_a(memory_controller_write_enable_a),
	.memory_controller_in_a(memory_controller_in_a),
	.memory_controller_size_a(memory_controller_size_a),
	.memory_controller_out_a(memory_controller_out_a),
	.memory_controller_enable_b(memory_controller_enable_b),
	.memory_controller_address_b(memory_controller_address_b),
	.memory_controller_write_enable_b(memory_controller_write_enable_b),
	.memory_controller_in_b(memory_controller_in_b),
	.memory_controller_size_b(memory_controller_size_b),
	.memory_controller_out_b(memory_controller_out_b),
	.memory_controller_waitrequest(memory_controller_waitrequest)
);

endmodule
`timescale 1 ns / 1 ns
module memory_controller
(
	clk,
	memory_controller_address_a,
	memory_controller_address_b,
	memory_controller_enable_a,
	memory_controller_enable_b,
	memory_controller_write_enable_a,
	memory_controller_write_enable_b,
	memory_controller_in_a,
	memory_controller_in_b,
	memory_controller_size_a,
	memory_controller_size_b,
	memory_controller_waitrequest,
	memory_controller_out_reg_a,
	memory_controller_out_reg_b
);


input clk;
input memory_controller_waitrequest;
input [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] memory_controller_address_a;
input memory_controller_enable_a;
input memory_controller_write_enable_a;
input [64-1:0] memory_controller_in_a;
input [1:0] memory_controller_size_a;
output reg [64-1:0] memory_controller_out_reg_a;
reg [64-1:0] memory_controller_out_prev_a;
reg [64-1:0] memory_controller_out_a;

reg memory_controller_enable_reg_a;
input [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] memory_controller_address_b;
input memory_controller_enable_b;
input memory_controller_write_enable_b;
input [64-1:0] memory_controller_in_b;
input [1:0] memory_controller_size_b;
output reg [64-1:0] memory_controller_out_reg_b;
reg [64-1:0] memory_controller_out_prev_b;
reg [64-1:0] memory_controller_out_b;

reg memory_controller_enable_reg_b;
endmodule 
`timescale 1 ns / 1 ns
module cp50221_0212_ext_wctomb
(
	clk,
	clk2x,
	clk1x_follower,
	reset,
	start,
	finish,
	memory_controller_enable_a,
	memory_controller_address_a,
	memory_controller_write_enable_a,
	memory_controller_in_a,
	memory_controller_size_a,
	memory_controller_out_a,
	memory_controller_enable_b,
	memory_controller_address_b,
	memory_controller_write_enable_b,
	memory_controller_in_b,
	memory_controller_size_b,
	memory_controller_out_b,
	memory_controller_waitrequest,
	return_val,
	arg_conv,
	arg_r,
	arg_wc,
	arg_n
);

parameter [5:0] LEGUP_0 = 6'd0;
parameter [5:0] LEGUP_F_cp50221_0212_ext_wctomb_BB_0_1 = 6'd1;
parameter [5:0] LEGUP_F_cp50221_0212_ext_wctomb_BB_2_2 = 6'd2;
parameter [5:0] LEGUP_F_cp50221_0212_ext_wctomb_BB_4_3 = 6'd3;
parameter [5:0] LEGUP_F_cp50221_0212_ext_wctomb_BB_5_4 = 6'd4;
parameter [5:0] LEGUP_F_cp50221_0212_ext_wctomb_BB_6_5 = 6'd5;
parameter [5:0] LEGUP_F_cp50221_0212_ext_wctomb_BB_7_6 = 6'd6;
parameter [5:0] LEGUP_F_cp50221_0212_ext_wctomb_BB_9_7 = 6'd7;
parameter [5:0] LEGUP_F_cp50221_0212_ext_wctomb_BB_11_8 = 6'd8;
parameter [5:0] LEGUP_F_cp50221_0212_ext_wctomb_BB_12_9 = 6'd9;
parameter [5:0] LEGUP_F_cp50221_0212_ext_wctomb_BB_13_10 = 6'd10;
parameter [5:0] LEGUP_F_cp50221_0212_ext_wctomb_BB_14_11 = 6'd11;
parameter [5:0] LEGUP_F_cp50221_0212_ext_wctomb_BB_15_12 = 6'd12;
parameter [5:0] LEGUP_F_cp50221_0212_ext_wctomb_BB_16_13 = 6'd13;
parameter [5:0] LEGUP_F_cp50221_0212_ext_wctomb_BB_17_14 = 6'd14;
parameter [5:0] LEGUP_F_cp50221_0212_ext_wctomb_BB_18_15 = 6'd15;
parameter [5:0] LEGUP_F_cp50221_0212_ext_wctomb_BB_19_16 = 6'd16;
parameter [5:0] LEGUP_F_cp50221_0212_ext_wctomb_BB_20_17 = 6'd17;
parameter [5:0] LEGUP_F_cp50221_0212_ext_wctomb_BB_21_18 = 6'd18;
parameter [5:0] LEGUP_F_cp50221_0212_ext_wctomb_BB_22_19 = 6'd19;
parameter [5:0] LEGUP_F_cp50221_0212_ext_wctomb_BB_23_20 = 6'd20;
parameter [5:0] LEGUP_F_cp50221_0212_ext_wctomb_BB_24_21 = 6'd21;
parameter [5:0] LEGUP_F_cp50221_0212_ext_wctomb_BB_25_22 = 6'd22;
parameter [5:0] LEGUP_F_cp50221_0212_ext_wctomb_BB_27_23 = 6'd23;
parameter [5:0] LEGUP_F_cp50221_0212_ext_wctomb_BB_29_24 = 6'd24;
parameter [5:0] LEGUP_F_cp50221_0212_ext_wctomb_BB_30_25 = 6'd25;
parameter [5:0] LEGUP_F_cp50221_0212_ext_wctomb_BB_31_26 = 6'd26;
parameter [5:0] LEGUP_F_cp50221_0212_ext_wctomb_BB_32_27 = 6'd27;
parameter [5:0] LEGUP_F_cp50221_0212_ext_wctomb_BB_34_28 = 6'd28;
parameter [5:0] LEGUP_F_cp50221_0212_ext_wctomb_BB_36_29 = 6'd29;
parameter [5:0] LEGUP_F_cp50221_0212_ext_wctomb_BB_37_30 = 6'd30;
parameter [5:0] LEGUP_F_cp50221_0212_ext_wctomb_BB_38_31 = 6'd31;
parameter [5:0] LEGUP_F_cp50221_0212_ext_wctomb_BB_40_32 = 6'd32;
parameter [5:0] LEGUP_F_cp50221_0212_ext_wctomb_BB_42_33 = 6'd33;
parameter [5:0] LEGUP_F_cp50221_0212_ext_wctomb_BB_43_34 = 6'd34;
parameter [5:0] LEGUP_F_cp50221_0212_ext_wctomb_BB_44_35 = 6'd35;
parameter [5:0] LEGUP_F_cp50221_0212_ext_wctomb_BB_45_36 = 6'd36;
parameter [5:0] LEGUP_F_cp50221_0212_ext_wctomb_BB_46_37 = 6'd37;
parameter [5:0] LEGUP_F_cp50221_0212_ext_wctomb_BB_47_38 = 6'd38;
parameter [5:0] LEGUP_F_cp50221_0212_ext_wctomb_BB_48_39 = 6'd39;
parameter [5:0] LEGUP_F_cp50221_0212_ext_wctomb_BB_49_40 = 6'd40;
parameter [5:0] LEGUP_F_cp50221_0212_ext_wctomb_BB_50_41 = 6'd41;
parameter [5:0] LEGUP_F_cp50221_0212_ext_wctomb_BB_51_42 = 6'd42;
parameter [5:0] LEGUP_F_cp50221_0212_ext_wctomb_BB_53_43 = 6'd43;
parameter [5:0] LEGUP_F_cp50221_0212_ext_wctomb_BB_55_44 = 6'd44;
parameter [5:0] LEGUP_F_cp50221_0212_ext_wctomb_BB_56_45 = 6'd45;
parameter [5:0] LEGUP_F_cp50221_0212_ext_wctomb_BB_57_46 = 6'd46;
parameter [5:0] LEGUP_F_cp50221_0212_ext_wctomb_BB_58_47 = 6'd47;
parameter [5:0] LEGUP_F_cp50221_0212_ext_wctomb_BB_59_48 = 6'd48;
parameter [5:0] LEGUP_F_cp50221_0212_ext_wctomb_BB_60_49 = 6'd49;
parameter [5:0] LEGUP_F_cp50221_0212_ext_wctomb_BB_61_50 = 6'd50;
parameter [5:0] LEGUP_F_cp50221_0212_ext_wctomb_BB_63_51 = 6'd51;
parameter [5:0] LEGUP_F_cp50221_0212_ext_wctomb_BB_65_52 = 6'd52;
parameter [5:0] LEGUP_F_cp50221_0212_ext_wctomb_BB_67_53 = 6'd53;
parameter [5:0] LEGUP_F_cp50221_0212_ext_wctomb_BB_69_54 = 6'd54;
parameter [5:0] LEGUP_F_cp50221_0212_ext_wctomb_BB_69_55 = 6'd55;
parameter [5:0] LEGUP_F_cp50221_0212_ext_wctomb_BB_69_56 = 6'd56;
parameter [5:0] LEGUP_F_cp50221_0212_ext_wctomb_BB__thread_57 = 6'd57;
parameter [5:0] LEGUP_F_cp50221_0212_ext_wctomb_BB__thread_58 = 6'd58;
parameter [5:0] LEGUP_F_cp50221_0212_ext_wctomb_BB__thread24_59 = 6'd59;

input  clk;
input  clk2x;
input  clk1x_follower;
input  reset;
input  start;
output reg  finish;
output reg  memory_controller_enable_a;
output reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] memory_controller_address_a;
output reg  memory_controller_write_enable_a;
output reg [`MEMORY_CONTROLLER_DATA_SIZE-1:0] memory_controller_in_a;
output reg [1:0] memory_controller_size_a;
input [`MEMORY_CONTROLLER_DATA_SIZE-1:0] memory_controller_out_a;
output reg  memory_controller_enable_b;
output reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] memory_controller_address_b;
output reg  memory_controller_write_enable_b;
output reg [`MEMORY_CONTROLLER_DATA_SIZE-1:0] memory_controller_in_b;
output reg [1:0] memory_controller_size_b;
input [`MEMORY_CONTROLLER_DATA_SIZE-1:0] memory_controller_out_b;
input  memory_controller_waitrequest;
output reg [31:0] return_val;
input [31:0] arg_conv;
input [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] arg_r;
input [31:0] arg_wc;
input [31:0] arg_n;
reg [5:0] cur_state;
reg [31:0] cp50221_0212_ext_wctomb_0_wc_off;
reg [31:0] cp50221_0212_ext_wctomb_0_wc_off_reg;
reg  cp50221_0212_ext_wctomb_0_1;
reg  cp50221_0212_ext_wctomb_0_1_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] cp50221_0212_ext_wctomb_2_3;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] cp50221_0212_ext_wctomb_2_3_reg;
reg [31:0] cp50221_0212_ext_wctomb_7_wc_off16;
reg [31:0] cp50221_0212_ext_wctomb_7_wc_off16_reg;
reg  cp50221_0212_ext_wctomb_7_8;
reg  cp50221_0212_ext_wctomb_7_8_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] cp50221_0212_ext_wctomb_9_10;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] cp50221_0212_ext_wctomb_9_10_reg;
reg [31:0] cp50221_0212_ext_wctomb_25_wc_off17;
reg [31:0] cp50221_0212_ext_wctomb_25_wc_off17_reg;
reg  cp50221_0212_ext_wctomb_25_26;
reg  cp50221_0212_ext_wctomb_25_26_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] cp50221_0212_ext_wctomb_27_28;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] cp50221_0212_ext_wctomb_27_28_reg;
reg [31:0] cp50221_0212_ext_wctomb_32_wc_off18;
reg [31:0] cp50221_0212_ext_wctomb_32_wc_off18_reg;
reg  cp50221_0212_ext_wctomb_32_33;
reg  cp50221_0212_ext_wctomb_32_33_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] cp50221_0212_ext_wctomb_34_35;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] cp50221_0212_ext_wctomb_34_35_reg;
reg [31:0] cp50221_0212_ext_wctomb_38_wc_off19;
reg [31:0] cp50221_0212_ext_wctomb_38_wc_off19_reg;
reg  cp50221_0212_ext_wctomb_38_39;
reg  cp50221_0212_ext_wctomb_38_39_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] cp50221_0212_ext_wctomb_40_41;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] cp50221_0212_ext_wctomb_40_41_reg;
reg [31:0] cp50221_0212_ext_wctomb_51_wc_off20;
reg [31:0] cp50221_0212_ext_wctomb_51_wc_off20_reg;
reg  cp50221_0212_ext_wctomb_51_52;
reg  cp50221_0212_ext_wctomb_51_52_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] cp50221_0212_ext_wctomb_53_54;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] cp50221_0212_ext_wctomb_53_54_reg;
reg [31:0] cp50221_0212_ext_wctomb_61_wc_off21;
reg [31:0] cp50221_0212_ext_wctomb_61_wc_off21_reg;
reg  cp50221_0212_ext_wctomb_61_62;
reg  cp50221_0212_ext_wctomb_61_62_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] cp50221_0212_ext_wctomb_63_64;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] cp50221_0212_ext_wctomb_63_64_reg;
reg [31:0] cp50221_0212_ext_wctomb_65_wc_off22;
reg [31:0] cp50221_0212_ext_wctomb_65_wc_off22_reg;
reg  cp50221_0212_ext_wctomb_65_66;
reg  cp50221_0212_ext_wctomb_65_66_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] cp50221_0212_ext_wctomb_67_68;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] cp50221_0212_ext_wctomb_67_68_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] cp50221_0212_ext_wctomb_69_c_0_in;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] cp50221_0212_ext_wctomb_69_c_0_in_reg;
reg [7:0] cp50221_0212_ext_wctomb_69_c_0;
reg [7:0] cp50221_0212_ext_wctomb_69_c_0_reg;
reg  cp50221_0212_ext_wctomb_69_70;
reg  cp50221_0212_ext_wctomb_69_70_reg;
reg [7:0] cp50221_0212_ext_wctomb__thread_c_023;
reg [7:0] cp50221_0212_ext_wctomb__thread_c_023_reg;
reg [31:0] cp50221_0212_ext_wctomb__thread24__0;
reg [31:0] cp50221_0212_ext_wctomb__thread24__0_reg;
wire [15:0] legup_pthreadpoll_threadID;

// Local Rams


always @(posedge clk) begin
if (((cur_state == LEGUP_0) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_0;
if (reset == 1'b0 && ^(LEGUP_0) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_0) & (memory_controller_waitrequest == 1'd0)) & (start == 1'd1)))
begin
cur_state <= LEGUP_F_cp50221_0212_ext_wctomb_BB_0_1;
if (reset == 1'b0 && ^(LEGUP_F_cp50221_0212_ext_wctomb_BB_0_1) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_0) & (memory_controller_waitrequest == 1'd0)) & (start == 1'd0)))
begin
cur_state <= LEGUP_0;
if (reset == 1'b0 && ^(LEGUP_0) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_0_1) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_cp50221_0212_ext_wctomb_BB_0_1;
if (reset == 1'b0 && ^(LEGUP_F_cp50221_0212_ext_wctomb_BB_0_1) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_0_1) & (memory_controller_waitrequest == 1'd0)) & (cp50221_0212_ext_wctomb_0_1 == 1'd1)))
begin
cur_state <= LEGUP_F_cp50221_0212_ext_wctomb_BB_2_2;
if (reset == 1'b0 && ^(LEGUP_F_cp50221_0212_ext_wctomb_BB_2_2) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_0_1) & (memory_controller_waitrequest == 1'd0)) & (cp50221_0212_ext_wctomb_0_1 == 1'd0)))
begin
cur_state <= LEGUP_F_cp50221_0212_ext_wctomb_BB_4_3;
if (reset == 1'b0 && ^(LEGUP_F_cp50221_0212_ext_wctomb_BB_4_3) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_2_2) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_cp50221_0212_ext_wctomb_BB_2_2;
if (reset == 1'b0 && ^(LEGUP_F_cp50221_0212_ext_wctomb_BB_2_2) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_2_2) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_cp50221_0212_ext_wctomb_BB_69_54;
if (reset == 1'b0 && ^(LEGUP_F_cp50221_0212_ext_wctomb_BB_69_54) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_4_3) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_cp50221_0212_ext_wctomb_BB_4_3;
if (reset == 1'b0 && ^(LEGUP_F_cp50221_0212_ext_wctomb_BB_4_3) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_4_3) & (memory_controller_waitrequest == 1'd0)) & (arg_wc == 32'd20220)))
begin
cur_state <= LEGUP_F_cp50221_0212_ext_wctomb_BB__thread_57;
if (reset == 1'b0 && ^(LEGUP_F_cp50221_0212_ext_wctomb_BB__thread_57) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_4_3) & (memory_controller_waitrequest == 1'd0)) & (arg_wc == 32'd20724)))
begin
cur_state <= LEGUP_F_cp50221_0212_ext_wctomb_BB_5_4;
if (reset == 1'b0 && ^(LEGUP_F_cp50221_0212_ext_wctomb_BB_5_4) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_4_3) & (memory_controller_waitrequest == 1'd0)) & (arg_wc == 32'd20972)))
begin
cur_state <= LEGUP_F_cp50221_0212_ext_wctomb_BB_6_5;
if (reset == 1'b0 && ^(LEGUP_F_cp50221_0212_ext_wctomb_BB_6_5) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_4_3) & (memory_controller_waitrequest == 1'd0)) & (arg_wc != 32'd20220)) & (arg_wc != 32'd20724)) & (arg_wc != 32'd20972)))
begin
cur_state <= LEGUP_F_cp50221_0212_ext_wctomb_BB_7_6;
if (reset == 1'b0 && ^(LEGUP_F_cp50221_0212_ext_wctomb_BB_7_6) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_5_4) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_cp50221_0212_ext_wctomb_BB_5_4;
if (reset == 1'b0 && ^(LEGUP_F_cp50221_0212_ext_wctomb_BB_5_4) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_5_4) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_cp50221_0212_ext_wctomb_BB__thread_57;
if (reset == 1'b0 && ^(LEGUP_F_cp50221_0212_ext_wctomb_BB__thread_57) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_6_5) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_cp50221_0212_ext_wctomb_BB_6_5;
if (reset == 1'b0 && ^(LEGUP_F_cp50221_0212_ext_wctomb_BB_6_5) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_6_5) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_cp50221_0212_ext_wctomb_BB__thread_57;
if (reset == 1'b0 && ^(LEGUP_F_cp50221_0212_ext_wctomb_BB__thread_57) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_7_6) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_cp50221_0212_ext_wctomb_BB_7_6;
if (reset == 1'b0 && ^(LEGUP_F_cp50221_0212_ext_wctomb_BB_7_6) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_7_6) & (memory_controller_waitrequest == 1'd0)) & (cp50221_0212_ext_wctomb_7_8 == 1'd1)))
begin
cur_state <= LEGUP_F_cp50221_0212_ext_wctomb_BB_9_7;
if (reset == 1'b0 && ^(LEGUP_F_cp50221_0212_ext_wctomb_BB_9_7) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_7_6) & (memory_controller_waitrequest == 1'd0)) & (cp50221_0212_ext_wctomb_7_8 == 1'd0)))
begin
cur_state <= LEGUP_F_cp50221_0212_ext_wctomb_BB_11_8;
if (reset == 1'b0 && ^(LEGUP_F_cp50221_0212_ext_wctomb_BB_11_8) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_9_7) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_cp50221_0212_ext_wctomb_BB_9_7;
if (reset == 1'b0 && ^(LEGUP_F_cp50221_0212_ext_wctomb_BB_9_7) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_9_7) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_cp50221_0212_ext_wctomb_BB_69_54;
if (reset == 1'b0 && ^(LEGUP_F_cp50221_0212_ext_wctomb_BB_69_54) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_11_8) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_cp50221_0212_ext_wctomb_BB_11_8;
if (reset == 1'b0 && ^(LEGUP_F_cp50221_0212_ext_wctomb_BB_11_8) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_11_8) & (memory_controller_waitrequest == 1'd0)) & (arg_wc == 32'd21642)))
begin
cur_state <= LEGUP_F_cp50221_0212_ext_wctomb_BB__thread_57;
if (reset == 1'b0 && ^(LEGUP_F_cp50221_0212_ext_wctomb_BB__thread_57) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_11_8) & (memory_controller_waitrequest == 1'd0)) & (arg_wc == 32'd22361)))
begin
cur_state <= LEGUP_F_cp50221_0212_ext_wctomb_BB_12_9;
if (reset == 1'b0 && ^(LEGUP_F_cp50221_0212_ext_wctomb_BB_12_9) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_11_8) & (memory_controller_waitrequest == 1'd0)) & (arg_wc == 32'd22686)))
begin
cur_state <= LEGUP_F_cp50221_0212_ext_wctomb_BB_13_10;
if (reset == 1'b0 && ^(LEGUP_F_cp50221_0212_ext_wctomb_BB_13_10) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_11_8) & (memory_controller_waitrequest == 1'd0)) & (arg_wc == 32'd23532)))
begin
cur_state <= LEGUP_F_cp50221_0212_ext_wctomb_BB_14_11;
if (reset == 1'b0 && ^(LEGUP_F_cp50221_0212_ext_wctomb_BB_14_11) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_11_8) & (memory_controller_waitrequest == 1'd0)) & (arg_wc == 32'd23797)))
begin
cur_state <= LEGUP_F_cp50221_0212_ext_wctomb_BB_15_12;
if (reset == 1'b0 && ^(LEGUP_F_cp50221_0212_ext_wctomb_BB_15_12) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_11_8) & (memory_controller_waitrequest == 1'd0)) & (arg_wc == 32'd23891)))
begin
cur_state <= LEGUP_F_cp50221_0212_ext_wctomb_BB_16_13;
if (reset == 1'b0 && ^(LEGUP_F_cp50221_0212_ext_wctomb_BB_16_13) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_11_8) & (memory_controller_waitrequest == 1'd0)) & (arg_wc == 32'd24503)))
begin
cur_state <= LEGUP_F_cp50221_0212_ext_wctomb_BB_17_14;
if (reset == 1'b0 && ^(LEGUP_F_cp50221_0212_ext_wctomb_BB_17_14) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_11_8) & (memory_controller_waitrequest == 1'd0)) & (arg_wc == 32'd24709)))
begin
cur_state <= LEGUP_F_cp50221_0212_ext_wctomb_BB_18_15;
if (reset == 1'b0 && ^(LEGUP_F_cp50221_0212_ext_wctomb_BB_18_15) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_11_8) & (memory_controller_waitrequest == 1'd0)) & (arg_wc == 32'd24864)))
begin
cur_state <= LEGUP_F_cp50221_0212_ext_wctomb_BB_19_16;
if (reset == 1'b0 && ^(LEGUP_F_cp50221_0212_ext_wctomb_BB_19_16) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_11_8) & (memory_controller_waitrequest == 1'd0)) & (arg_wc == 32'd25934)))
begin
cur_state <= LEGUP_F_cp50221_0212_ext_wctomb_BB_20_17;
if (reset == 1'b0 && ^(LEGUP_F_cp50221_0212_ext_wctomb_BB_20_17) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_11_8) & (memory_controller_waitrequest == 1'd0)) & (arg_wc == 32'd26213)))
begin
cur_state <= LEGUP_F_cp50221_0212_ext_wctomb_BB_21_18;
if (reset == 1'b0 && ^(LEGUP_F_cp50221_0212_ext_wctomb_BB_21_18) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_11_8) & (memory_controller_waitrequest == 1'd0)) & (arg_wc == 32'd26625)))
begin
cur_state <= LEGUP_F_cp50221_0212_ext_wctomb_BB_22_19;
if (reset == 1'b0 && ^(LEGUP_F_cp50221_0212_ext_wctomb_BB_22_19) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_11_8) & (memory_controller_waitrequest == 1'd0)) & (arg_wc == 32'd27243)))
begin
cur_state <= LEGUP_F_cp50221_0212_ext_wctomb_BB_23_20;
if (reset == 1'b0 && ^(LEGUP_F_cp50221_0212_ext_wctomb_BB_23_20) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_11_8) & (memory_controller_waitrequest == 1'd0)) & (arg_wc == 32'd27362)))
begin
cur_state <= LEGUP_F_cp50221_0212_ext_wctomb_BB_24_21;
if (reset == 1'b0 && ^(LEGUP_F_cp50221_0212_ext_wctomb_BB_24_21) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((((((((((((((((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_11_8) & (memory_controller_waitrequest == 1'd0)) & (arg_wc != 32'd21642)) & (arg_wc != 32'd22361)) & (arg_wc != 32'd22686)) & (arg_wc != 32'd23532)) & (arg_wc != 32'd23797)) & (arg_wc != 32'd23891)) & (arg_wc != 32'd24503)) & (arg_wc != 32'd24709)) & (arg_wc != 32'd24864)) & (arg_wc != 32'd25934)) & (arg_wc != 32'd26213)) & (arg_wc != 32'd26625)) & (arg_wc != 32'd27243)) & (arg_wc != 32'd27362)))
begin
cur_state <= LEGUP_F_cp50221_0212_ext_wctomb_BB_25_22;
if (reset == 1'b0 && ^(LEGUP_F_cp50221_0212_ext_wctomb_BB_25_22) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_12_9) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_cp50221_0212_ext_wctomb_BB_12_9;
if (reset == 1'b0 && ^(LEGUP_F_cp50221_0212_ext_wctomb_BB_12_9) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_12_9) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_cp50221_0212_ext_wctomb_BB__thread_57;
if (reset == 1'b0 && ^(LEGUP_F_cp50221_0212_ext_wctomb_BB__thread_57) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_13_10) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_cp50221_0212_ext_wctomb_BB_13_10;
if (reset == 1'b0 && ^(LEGUP_F_cp50221_0212_ext_wctomb_BB_13_10) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_13_10) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_cp50221_0212_ext_wctomb_BB__thread_57;
if (reset == 1'b0 && ^(LEGUP_F_cp50221_0212_ext_wctomb_BB__thread_57) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_14_11) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_cp50221_0212_ext_wctomb_BB_14_11;
if (reset == 1'b0 && ^(LEGUP_F_cp50221_0212_ext_wctomb_BB_14_11) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_14_11) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_cp50221_0212_ext_wctomb_BB__thread_57;
if (reset == 1'b0 && ^(LEGUP_F_cp50221_0212_ext_wctomb_BB__thread_57) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_15_12) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_cp50221_0212_ext_wctomb_BB_15_12;
if (reset == 1'b0 && ^(LEGUP_F_cp50221_0212_ext_wctomb_BB_15_12) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_15_12) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_cp50221_0212_ext_wctomb_BB__thread_57;
if (reset == 1'b0 && ^(LEGUP_F_cp50221_0212_ext_wctomb_BB__thread_57) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_16_13) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_cp50221_0212_ext_wctomb_BB_16_13;
if (reset == 1'b0 && ^(LEGUP_F_cp50221_0212_ext_wctomb_BB_16_13) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_16_13) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_cp50221_0212_ext_wctomb_BB__thread_57;
if (reset == 1'b0 && ^(LEGUP_F_cp50221_0212_ext_wctomb_BB__thread_57) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_17_14) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_cp50221_0212_ext_wctomb_BB_17_14;
if (reset == 1'b0 && ^(LEGUP_F_cp50221_0212_ext_wctomb_BB_17_14) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_17_14) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_cp50221_0212_ext_wctomb_BB__thread_57;
if (reset == 1'b0 && ^(LEGUP_F_cp50221_0212_ext_wctomb_BB__thread_57) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_18_15) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_cp50221_0212_ext_wctomb_BB_18_15;
if (reset == 1'b0 && ^(LEGUP_F_cp50221_0212_ext_wctomb_BB_18_15) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_18_15) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_cp50221_0212_ext_wctomb_BB__thread_57;
if (reset == 1'b0 && ^(LEGUP_F_cp50221_0212_ext_wctomb_BB__thread_57) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_19_16) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_cp50221_0212_ext_wctomb_BB_19_16;
if (reset == 1'b0 && ^(LEGUP_F_cp50221_0212_ext_wctomb_BB_19_16) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_19_16) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_cp50221_0212_ext_wctomb_BB__thread_57;
if (reset == 1'b0 && ^(LEGUP_F_cp50221_0212_ext_wctomb_BB__thread_57) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_20_17) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_cp50221_0212_ext_wctomb_BB_20_17;
if (reset == 1'b0 && ^(LEGUP_F_cp50221_0212_ext_wctomb_BB_20_17) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_20_17) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_cp50221_0212_ext_wctomb_BB__thread_57;
if (reset == 1'b0 && ^(LEGUP_F_cp50221_0212_ext_wctomb_BB__thread_57) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_21_18) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_cp50221_0212_ext_wctomb_BB_21_18;
if (reset == 1'b0 && ^(LEGUP_F_cp50221_0212_ext_wctomb_BB_21_18) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_21_18) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_cp50221_0212_ext_wctomb_BB__thread_57;
if (reset == 1'b0 && ^(LEGUP_F_cp50221_0212_ext_wctomb_BB__thread_57) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_22_19) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_cp50221_0212_ext_wctomb_BB_22_19;
if (reset == 1'b0 && ^(LEGUP_F_cp50221_0212_ext_wctomb_BB_22_19) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_22_19) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_cp50221_0212_ext_wctomb_BB__thread_57;
if (reset == 1'b0 && ^(LEGUP_F_cp50221_0212_ext_wctomb_BB__thread_57) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_23_20) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_cp50221_0212_ext_wctomb_BB_23_20;
if (reset == 1'b0 && ^(LEGUP_F_cp50221_0212_ext_wctomb_BB_23_20) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_23_20) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_cp50221_0212_ext_wctomb_BB__thread_57;
if (reset == 1'b0 && ^(LEGUP_F_cp50221_0212_ext_wctomb_BB__thread_57) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_24_21) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_cp50221_0212_ext_wctomb_BB_24_21;
if (reset == 1'b0 && ^(LEGUP_F_cp50221_0212_ext_wctomb_BB_24_21) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_24_21) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_cp50221_0212_ext_wctomb_BB__thread_57;
if (reset == 1'b0 && ^(LEGUP_F_cp50221_0212_ext_wctomb_BB__thread_57) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_25_22) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_cp50221_0212_ext_wctomb_BB_25_22;
if (reset == 1'b0 && ^(LEGUP_F_cp50221_0212_ext_wctomb_BB_25_22) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_25_22) & (memory_controller_waitrequest == 1'd0)) & (cp50221_0212_ext_wctomb_25_26 == 1'd1)))
begin
cur_state <= LEGUP_F_cp50221_0212_ext_wctomb_BB_27_23;
if (reset == 1'b0 && ^(LEGUP_F_cp50221_0212_ext_wctomb_BB_27_23) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_25_22) & (memory_controller_waitrequest == 1'd0)) & (cp50221_0212_ext_wctomb_25_26 == 1'd0)))
begin
cur_state <= LEGUP_F_cp50221_0212_ext_wctomb_BB_29_24;
if (reset == 1'b0 && ^(LEGUP_F_cp50221_0212_ext_wctomb_BB_29_24) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_27_23) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_cp50221_0212_ext_wctomb_BB_27_23;
if (reset == 1'b0 && ^(LEGUP_F_cp50221_0212_ext_wctomb_BB_27_23) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_27_23) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_cp50221_0212_ext_wctomb_BB_69_54;
if (reset == 1'b0 && ^(LEGUP_F_cp50221_0212_ext_wctomb_BB_69_54) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_29_24) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_cp50221_0212_ext_wctomb_BB_29_24;
if (reset == 1'b0 && ^(LEGUP_F_cp50221_0212_ext_wctomb_BB_29_24) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_29_24) & (memory_controller_waitrequest == 1'd0)) & (arg_wc == 32'd28712)))
begin
cur_state <= LEGUP_F_cp50221_0212_ext_wctomb_BB__thread_57;
if (reset == 1'b0 && ^(LEGUP_F_cp50221_0212_ext_wctomb_BB__thread_57) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_29_24) & (memory_controller_waitrequest == 1'd0)) & (arg_wc == 32'd28859)))
begin
cur_state <= LEGUP_F_cp50221_0212_ext_wctomb_BB_30_25;
if (reset == 1'b0 && ^(LEGUP_F_cp50221_0212_ext_wctomb_BB_30_25) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_29_24) & (memory_controller_waitrequest == 1'd0)) & (arg_wc == 32'd29953)))
begin
cur_state <= LEGUP_F_cp50221_0212_ext_wctomb_BB_31_26;
if (reset == 1'b0 && ^(LEGUP_F_cp50221_0212_ext_wctomb_BB_31_26) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_29_24) & (memory_controller_waitrequest == 1'd0)) & (arg_wc != 32'd28712)) & (arg_wc != 32'd28859)) & (arg_wc != 32'd29953)))
begin
cur_state <= LEGUP_F_cp50221_0212_ext_wctomb_BB_32_27;
if (reset == 1'b0 && ^(LEGUP_F_cp50221_0212_ext_wctomb_BB_32_27) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_30_25) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_cp50221_0212_ext_wctomb_BB_30_25;
if (reset == 1'b0 && ^(LEGUP_F_cp50221_0212_ext_wctomb_BB_30_25) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_30_25) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_cp50221_0212_ext_wctomb_BB__thread_57;
if (reset == 1'b0 && ^(LEGUP_F_cp50221_0212_ext_wctomb_BB__thread_57) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_31_26) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_cp50221_0212_ext_wctomb_BB_31_26;
if (reset == 1'b0 && ^(LEGUP_F_cp50221_0212_ext_wctomb_BB_31_26) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_31_26) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_cp50221_0212_ext_wctomb_BB__thread_57;
if (reset == 1'b0 && ^(LEGUP_F_cp50221_0212_ext_wctomb_BB__thread_57) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_32_27) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_cp50221_0212_ext_wctomb_BB_32_27;
if (reset == 1'b0 && ^(LEGUP_F_cp50221_0212_ext_wctomb_BB_32_27) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_32_27) & (memory_controller_waitrequest == 1'd0)) & (cp50221_0212_ext_wctomb_32_33 == 1'd1)))
begin
cur_state <= LEGUP_F_cp50221_0212_ext_wctomb_BB_34_28;
if (reset == 1'b0 && ^(LEGUP_F_cp50221_0212_ext_wctomb_BB_34_28) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_32_27) & (memory_controller_waitrequest == 1'd0)) & (cp50221_0212_ext_wctomb_32_33 == 1'd0)))
begin
cur_state <= LEGUP_F_cp50221_0212_ext_wctomb_BB_36_29;
if (reset == 1'b0 && ^(LEGUP_F_cp50221_0212_ext_wctomb_BB_36_29) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_34_28) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_cp50221_0212_ext_wctomb_BB_34_28;
if (reset == 1'b0 && ^(LEGUP_F_cp50221_0212_ext_wctomb_BB_34_28) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_34_28) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_cp50221_0212_ext_wctomb_BB_69_54;
if (reset == 1'b0 && ^(LEGUP_F_cp50221_0212_ext_wctomb_BB_69_54) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_36_29) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_cp50221_0212_ext_wctomb_BB_36_29;
if (reset == 1'b0 && ^(LEGUP_F_cp50221_0212_ext_wctomb_BB_36_29) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_36_29) & (memory_controller_waitrequest == 1'd0)) & (arg_wc == 32'd31024)))
begin
cur_state <= LEGUP_F_cp50221_0212_ext_wctomb_BB__thread_57;
if (reset == 1'b0 && ^(LEGUP_F_cp50221_0212_ext_wctomb_BB__thread_57) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_36_29) & (memory_controller_waitrequest == 1'd0)) & (arg_wc == 32'd31463)))
begin
cur_state <= LEGUP_F_cp50221_0212_ext_wctomb_BB_37_30;
if (reset == 1'b0 && ^(LEGUP_F_cp50221_0212_ext_wctomb_BB_37_30) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_36_29) & (memory_controller_waitrequest == 1'd0)) & (arg_wc != 32'd31024)) & (arg_wc != 32'd31463)))
begin
cur_state <= LEGUP_F_cp50221_0212_ext_wctomb_BB_38_31;
if (reset == 1'b0 && ^(LEGUP_F_cp50221_0212_ext_wctomb_BB_38_31) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_37_30) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_cp50221_0212_ext_wctomb_BB_37_30;
if (reset == 1'b0 && ^(LEGUP_F_cp50221_0212_ext_wctomb_BB_37_30) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_37_30) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_cp50221_0212_ext_wctomb_BB__thread_57;
if (reset == 1'b0 && ^(LEGUP_F_cp50221_0212_ext_wctomb_BB__thread_57) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_38_31) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_cp50221_0212_ext_wctomb_BB_38_31;
if (reset == 1'b0 && ^(LEGUP_F_cp50221_0212_ext_wctomb_BB_38_31) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_38_31) & (memory_controller_waitrequest == 1'd0)) & (cp50221_0212_ext_wctomb_38_39 == 1'd1)))
begin
cur_state <= LEGUP_F_cp50221_0212_ext_wctomb_BB_40_32;
if (reset == 1'b0 && ^(LEGUP_F_cp50221_0212_ext_wctomb_BB_40_32) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_38_31) & (memory_controller_waitrequest == 1'd0)) & (cp50221_0212_ext_wctomb_38_39 == 1'd0)))
begin
cur_state <= LEGUP_F_cp50221_0212_ext_wctomb_BB_42_33;
if (reset == 1'b0 && ^(LEGUP_F_cp50221_0212_ext_wctomb_BB_42_33) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_40_32) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_cp50221_0212_ext_wctomb_BB_40_32;
if (reset == 1'b0 && ^(LEGUP_F_cp50221_0212_ext_wctomb_BB_40_32) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_40_32) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_cp50221_0212_ext_wctomb_BB_69_54;
if (reset == 1'b0 && ^(LEGUP_F_cp50221_0212_ext_wctomb_BB_69_54) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_42_33) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_cp50221_0212_ext_wctomb_BB_42_33;
if (reset == 1'b0 && ^(LEGUP_F_cp50221_0212_ext_wctomb_BB_42_33) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_42_33) & (memory_controller_waitrequest == 1'd0)) & (arg_wc == 32'd33634)))
begin
cur_state <= LEGUP_F_cp50221_0212_ext_wctomb_BB__thread_57;
if (reset == 1'b0 && ^(LEGUP_F_cp50221_0212_ext_wctomb_BB__thread_57) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_42_33) & (memory_controller_waitrequest == 1'd0)) & (arg_wc == 32'd34224)))
begin
cur_state <= LEGUP_F_cp50221_0212_ext_wctomb_BB_43_34;
if (reset == 1'b0 && ^(LEGUP_F_cp50221_0212_ext_wctomb_BB_43_34) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_42_33) & (memory_controller_waitrequest == 1'd0)) & (arg_wc == 32'd34823)))
begin
cur_state <= LEGUP_F_cp50221_0212_ext_wctomb_BB_44_35;
if (reset == 1'b0 && ^(LEGUP_F_cp50221_0212_ext_wctomb_BB_44_35) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_42_33) & (memory_controller_waitrequest == 1'd0)) & (arg_wc == 32'd35711)))
begin
cur_state <= LEGUP_F_cp50221_0212_ext_wctomb_BB_45_36;
if (reset == 1'b0 && ^(LEGUP_F_cp50221_0212_ext_wctomb_BB_45_36) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_42_33) & (memory_controller_waitrequest == 1'd0)) & (arg_wc == 32'd36084)))
begin
cur_state <= LEGUP_F_cp50221_0212_ext_wctomb_BB_46_37;
if (reset == 1'b0 && ^(LEGUP_F_cp50221_0212_ext_wctomb_BB_46_37) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_42_33) & (memory_controller_waitrequest == 1'd0)) & (arg_wc == 32'd36214)))
begin
cur_state <= LEGUP_F_cp50221_0212_ext_wctomb_BB_47_38;
if (reset == 1'b0 && ^(LEGUP_F_cp50221_0212_ext_wctomb_BB_47_38) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_42_33) & (memory_controller_waitrequest == 1'd0)) & (arg_wc == 32'd37086)))
begin
cur_state <= LEGUP_F_cp50221_0212_ext_wctomb_BB_48_39;
if (reset == 1'b0 && ^(LEGUP_F_cp50221_0212_ext_wctomb_BB_48_39) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_42_33) & (memory_controller_waitrequest == 1'd0)) & (arg_wc == 32'd37141)))
begin
cur_state <= LEGUP_F_cp50221_0212_ext_wctomb_BB_49_40;
if (reset == 1'b0 && ^(LEGUP_F_cp50221_0212_ext_wctomb_BB_49_40) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_42_33) & (memory_controller_waitrequest == 1'd0)) & (arg_wc == 32'd38290)))
begin
cur_state <= LEGUP_F_cp50221_0212_ext_wctomb_BB_50_41;
if (reset == 1'b0 && ^(LEGUP_F_cp50221_0212_ext_wctomb_BB_50_41) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((((((((((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_42_33) & (memory_controller_waitrequest == 1'd0)) & (arg_wc != 32'd33634)) & (arg_wc != 32'd34224)) & (arg_wc != 32'd34823)) & (arg_wc != 32'd35711)) & (arg_wc != 32'd36084)) & (arg_wc != 32'd36214)) & (arg_wc != 32'd37086)) & (arg_wc != 32'd37141)) & (arg_wc != 32'd38290)))
begin
cur_state <= LEGUP_F_cp50221_0212_ext_wctomb_BB_51_42;
if (reset == 1'b0 && ^(LEGUP_F_cp50221_0212_ext_wctomb_BB_51_42) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_43_34) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_cp50221_0212_ext_wctomb_BB_43_34;
if (reset == 1'b0 && ^(LEGUP_F_cp50221_0212_ext_wctomb_BB_43_34) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_43_34) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_cp50221_0212_ext_wctomb_BB__thread_57;
if (reset == 1'b0 && ^(LEGUP_F_cp50221_0212_ext_wctomb_BB__thread_57) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_44_35) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_cp50221_0212_ext_wctomb_BB_44_35;
if (reset == 1'b0 && ^(LEGUP_F_cp50221_0212_ext_wctomb_BB_44_35) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_44_35) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_cp50221_0212_ext_wctomb_BB__thread_57;
if (reset == 1'b0 && ^(LEGUP_F_cp50221_0212_ext_wctomb_BB__thread_57) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_45_36) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_cp50221_0212_ext_wctomb_BB_45_36;
if (reset == 1'b0 && ^(LEGUP_F_cp50221_0212_ext_wctomb_BB_45_36) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_45_36) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_cp50221_0212_ext_wctomb_BB__thread_57;
if (reset == 1'b0 && ^(LEGUP_F_cp50221_0212_ext_wctomb_BB__thread_57) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_46_37) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_cp50221_0212_ext_wctomb_BB_46_37;
if (reset == 1'b0 && ^(LEGUP_F_cp50221_0212_ext_wctomb_BB_46_37) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_46_37) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_cp50221_0212_ext_wctomb_BB__thread_57;
if (reset == 1'b0 && ^(LEGUP_F_cp50221_0212_ext_wctomb_BB__thread_57) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_47_38) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_cp50221_0212_ext_wctomb_BB_47_38;
if (reset == 1'b0 && ^(LEGUP_F_cp50221_0212_ext_wctomb_BB_47_38) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_47_38) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_cp50221_0212_ext_wctomb_BB__thread_57;
if (reset == 1'b0 && ^(LEGUP_F_cp50221_0212_ext_wctomb_BB__thread_57) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_48_39) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_cp50221_0212_ext_wctomb_BB_48_39;
if (reset == 1'b0 && ^(LEGUP_F_cp50221_0212_ext_wctomb_BB_48_39) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_48_39) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_cp50221_0212_ext_wctomb_BB__thread_57;
if (reset == 1'b0 && ^(LEGUP_F_cp50221_0212_ext_wctomb_BB__thread_57) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_49_40) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_cp50221_0212_ext_wctomb_BB_49_40;
if (reset == 1'b0 && ^(LEGUP_F_cp50221_0212_ext_wctomb_BB_49_40) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_49_40) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_cp50221_0212_ext_wctomb_BB__thread_57;
if (reset == 1'b0 && ^(LEGUP_F_cp50221_0212_ext_wctomb_BB__thread_57) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_50_41) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_cp50221_0212_ext_wctomb_BB_50_41;
if (reset == 1'b0 && ^(LEGUP_F_cp50221_0212_ext_wctomb_BB_50_41) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_50_41) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_cp50221_0212_ext_wctomb_BB__thread_57;
if (reset == 1'b0 && ^(LEGUP_F_cp50221_0212_ext_wctomb_BB__thread_57) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_51_42) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_cp50221_0212_ext_wctomb_BB_51_42;
if (reset == 1'b0 && ^(LEGUP_F_cp50221_0212_ext_wctomb_BB_51_42) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_51_42) & (memory_controller_waitrequest == 1'd0)) & (cp50221_0212_ext_wctomb_51_52 == 1'd1)))
begin
cur_state <= LEGUP_F_cp50221_0212_ext_wctomb_BB_53_43;
if (reset == 1'b0 && ^(LEGUP_F_cp50221_0212_ext_wctomb_BB_53_43) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_51_42) & (memory_controller_waitrequest == 1'd0)) & (cp50221_0212_ext_wctomb_51_52 == 1'd0)))
begin
cur_state <= LEGUP_F_cp50221_0212_ext_wctomb_BB_55_44;
if (reset == 1'b0 && ^(LEGUP_F_cp50221_0212_ext_wctomb_BB_55_44) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_53_43) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_cp50221_0212_ext_wctomb_BB_53_43;
if (reset == 1'b0 && ^(LEGUP_F_cp50221_0212_ext_wctomb_BB_53_43) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_53_43) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_cp50221_0212_ext_wctomb_BB_69_54;
if (reset == 1'b0 && ^(LEGUP_F_cp50221_0212_ext_wctomb_BB_69_54) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_55_44) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_cp50221_0212_ext_wctomb_BB_55_44;
if (reset == 1'b0 && ^(LEGUP_F_cp50221_0212_ext_wctomb_BB_55_44) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_55_44) & (memory_controller_waitrequest == 1'd0)) & (arg_wc == 32'd39326)))
begin
cur_state <= LEGUP_F_cp50221_0212_ext_wctomb_BB__thread_57;
if (reset == 1'b0 && ^(LEGUP_F_cp50221_0212_ext_wctomb_BB__thread_57) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_55_44) & (memory_controller_waitrequest == 1'd0)) & (arg_wc == 32'd39641)))
begin
cur_state <= LEGUP_F_cp50221_0212_ext_wctomb_BB_56_45;
if (reset == 1'b0 && ^(LEGUP_F_cp50221_0212_ext_wctomb_BB_56_45) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_55_44) & (memory_controller_waitrequest == 1'd0)) & (arg_wc == 32'd39794)))
begin
cur_state <= LEGUP_F_cp50221_0212_ext_wctomb_BB_57_46;
if (reset == 1'b0 && ^(LEGUP_F_cp50221_0212_ext_wctomb_BB_57_46) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_55_44) & (memory_controller_waitrequest == 1'd0)) & (arg_wc == 32'd40657)))
begin
cur_state <= LEGUP_F_cp50221_0212_ext_wctomb_BB_58_47;
if (reset == 1'b0 && ^(LEGUP_F_cp50221_0212_ext_wctomb_BB_58_47) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_55_44) & (memory_controller_waitrequest == 1'd0)) & (arg_wc == 32'd63785)))
begin
cur_state <= LEGUP_F_cp50221_0212_ext_wctomb_BB_59_48;
if (reset == 1'b0 && ^(LEGUP_F_cp50221_0212_ext_wctomb_BB_59_48) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_55_44) & (memory_controller_waitrequest == 1'd0)) & (arg_wc == 32'd63964)))
begin
cur_state <= LEGUP_F_cp50221_0212_ext_wctomb_BB_60_49;
if (reset == 1'b0 && ^(LEGUP_F_cp50221_0212_ext_wctomb_BB_60_49) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((((((((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_55_44) & (memory_controller_waitrequest == 1'd0)) & (arg_wc != 32'd39326)) & (arg_wc != 32'd39641)) & (arg_wc != 32'd39794)) & (arg_wc != 32'd40657)) & (arg_wc != 32'd63785)) & (arg_wc != 32'd63964)))
begin
cur_state <= LEGUP_F_cp50221_0212_ext_wctomb_BB_61_50;
if (reset == 1'b0 && ^(LEGUP_F_cp50221_0212_ext_wctomb_BB_61_50) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_56_45) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_cp50221_0212_ext_wctomb_BB_56_45;
if (reset == 1'b0 && ^(LEGUP_F_cp50221_0212_ext_wctomb_BB_56_45) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_56_45) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_cp50221_0212_ext_wctomb_BB__thread_57;
if (reset == 1'b0 && ^(LEGUP_F_cp50221_0212_ext_wctomb_BB__thread_57) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_57_46) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_cp50221_0212_ext_wctomb_BB_57_46;
if (reset == 1'b0 && ^(LEGUP_F_cp50221_0212_ext_wctomb_BB_57_46) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_57_46) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_cp50221_0212_ext_wctomb_BB__thread_57;
if (reset == 1'b0 && ^(LEGUP_F_cp50221_0212_ext_wctomb_BB__thread_57) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_58_47) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_cp50221_0212_ext_wctomb_BB_58_47;
if (reset == 1'b0 && ^(LEGUP_F_cp50221_0212_ext_wctomb_BB_58_47) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_58_47) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_cp50221_0212_ext_wctomb_BB__thread_57;
if (reset == 1'b0 && ^(LEGUP_F_cp50221_0212_ext_wctomb_BB__thread_57) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_59_48) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_cp50221_0212_ext_wctomb_BB_59_48;
if (reset == 1'b0 && ^(LEGUP_F_cp50221_0212_ext_wctomb_BB_59_48) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_59_48) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_cp50221_0212_ext_wctomb_BB__thread_57;
if (reset == 1'b0 && ^(LEGUP_F_cp50221_0212_ext_wctomb_BB__thread_57) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_60_49) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_cp50221_0212_ext_wctomb_BB_60_49;
if (reset == 1'b0 && ^(LEGUP_F_cp50221_0212_ext_wctomb_BB_60_49) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_60_49) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_cp50221_0212_ext_wctomb_BB__thread_57;
if (reset == 1'b0 && ^(LEGUP_F_cp50221_0212_ext_wctomb_BB__thread_57) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_61_50) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_cp50221_0212_ext_wctomb_BB_61_50;
if (reset == 1'b0 && ^(LEGUP_F_cp50221_0212_ext_wctomb_BB_61_50) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_61_50) & (memory_controller_waitrequest == 1'd0)) & (cp50221_0212_ext_wctomb_61_62 == 1'd1)))
begin
cur_state <= LEGUP_F_cp50221_0212_ext_wctomb_BB_63_51;
if (reset == 1'b0 && ^(LEGUP_F_cp50221_0212_ext_wctomb_BB_63_51) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_61_50) & (memory_controller_waitrequest == 1'd0)) & (cp50221_0212_ext_wctomb_61_62 == 1'd0)))
begin
cur_state <= LEGUP_F_cp50221_0212_ext_wctomb_BB_65_52;
if (reset == 1'b0 && ^(LEGUP_F_cp50221_0212_ext_wctomb_BB_65_52) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_63_51) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_cp50221_0212_ext_wctomb_BB_63_51;
if (reset == 1'b0 && ^(LEGUP_F_cp50221_0212_ext_wctomb_BB_63_51) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_63_51) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_cp50221_0212_ext_wctomb_BB_69_54;
if (reset == 1'b0 && ^(LEGUP_F_cp50221_0212_ext_wctomb_BB_69_54) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_65_52) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_cp50221_0212_ext_wctomb_BB_65_52;
if (reset == 1'b0 && ^(LEGUP_F_cp50221_0212_ext_wctomb_BB_65_52) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_65_52) & (memory_controller_waitrequest == 1'd0)) & (cp50221_0212_ext_wctomb_65_66 == 1'd1)))
begin
cur_state <= LEGUP_F_cp50221_0212_ext_wctomb_BB_67_53;
if (reset == 1'b0 && ^(LEGUP_F_cp50221_0212_ext_wctomb_BB_67_53) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_65_52) & (memory_controller_waitrequest == 1'd0)) & (cp50221_0212_ext_wctomb_65_66 == 1'd0)))
begin
cur_state <= LEGUP_F_cp50221_0212_ext_wctomb_BB__thread24_59;
if (reset == 1'b0 && ^(LEGUP_F_cp50221_0212_ext_wctomb_BB__thread24_59) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_67_53) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_cp50221_0212_ext_wctomb_BB_67_53;
if (reset == 1'b0 && ^(LEGUP_F_cp50221_0212_ext_wctomb_BB_67_53) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_67_53) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_cp50221_0212_ext_wctomb_BB_69_54;
if (reset == 1'b0 && ^(LEGUP_F_cp50221_0212_ext_wctomb_BB_69_54) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_69_54) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_cp50221_0212_ext_wctomb_BB_69_54;
if (reset == 1'b0 && ^(LEGUP_F_cp50221_0212_ext_wctomb_BB_69_54) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_69_54) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_cp50221_0212_ext_wctomb_BB_69_55;
if (reset == 1'b0 && ^(LEGUP_F_cp50221_0212_ext_wctomb_BB_69_55) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_69_55) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_cp50221_0212_ext_wctomb_BB_69_55;
if (reset == 1'b0 && ^(LEGUP_F_cp50221_0212_ext_wctomb_BB_69_55) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_69_55) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_cp50221_0212_ext_wctomb_BB_69_56;
if (reset == 1'b0 && ^(LEGUP_F_cp50221_0212_ext_wctomb_BB_69_56) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_69_56) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_cp50221_0212_ext_wctomb_BB_69_56;
if (reset == 1'b0 && ^(LEGUP_F_cp50221_0212_ext_wctomb_BB_69_56) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_69_56) & (memory_controller_waitrequest == 1'd0)) & (cp50221_0212_ext_wctomb_69_70 == 1'd1)))
begin
cur_state <= LEGUP_F_cp50221_0212_ext_wctomb_BB__thread24_59;
if (reset == 1'b0 && ^(LEGUP_F_cp50221_0212_ext_wctomb_BB__thread24_59) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_69_56) & (memory_controller_waitrequest == 1'd0)) & (cp50221_0212_ext_wctomb_69_70 == 1'd0)))
begin
cur_state <= LEGUP_F_cp50221_0212_ext_wctomb_BB__thread_57;
if (reset == 1'b0 && ^(LEGUP_F_cp50221_0212_ext_wctomb_BB__thread_57) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB__thread_57) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_cp50221_0212_ext_wctomb_BB__thread_57;
if (reset == 1'b0 && ^(LEGUP_F_cp50221_0212_ext_wctomb_BB__thread_57) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB__thread_57) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_cp50221_0212_ext_wctomb_BB__thread_58;
if (reset == 1'b0 && ^(LEGUP_F_cp50221_0212_ext_wctomb_BB__thread_58) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB__thread_58) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_cp50221_0212_ext_wctomb_BB__thread_58;
if (reset == 1'b0 && ^(LEGUP_F_cp50221_0212_ext_wctomb_BB__thread_58) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB__thread_58) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_F_cp50221_0212_ext_wctomb_BB__thread24_59;
if (reset == 1'b0 && ^(LEGUP_F_cp50221_0212_ext_wctomb_BB__thread24_59) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB__thread24_59) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_cp50221_0212_ext_wctomb_BB__thread24_59;
if (reset == 1'b0 && ^(LEGUP_F_cp50221_0212_ext_wctomb_BB__thread24_59) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB__thread24_59) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_0;
if (reset == 1'b0 && ^(LEGUP_0) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((reset == 1'd1))
begin
cur_state <= 6'd0;
if (reset == 1'b0 && ^(6'd0) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
end
always @(*) begin
/* cp50221_0212_ext_wctomb: %0*/
/*   %wc.off = add i32 %wc, -8560*/
begin
cp50221_0212_ext_wctomb_0_wc_off = (arg_wc + -32'd8560);
end
end
always @(posedge clk) begin
/* cp50221_0212_ext_wctomb: %0*/
/*   %wc.off = add i32 %wc, -8560*/
if ((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_0_1))
begin
cp50221_0212_ext_wctomb_0_wc_off_reg <= cp50221_0212_ext_wctomb_0_wc_off;
if (reset == 1'b0 && ^(cp50221_0212_ext_wctomb_0_wc_off) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cp50221_0212_ext_wctomb_0_wc_off_reg"); $finish; end
end
end
always @(*) begin
/* cp50221_0212_ext_wctomb: %0*/
/*   %1 = icmp ult i32 %wc.off, 16*/
begin
cp50221_0212_ext_wctomb_0_1 = (cp50221_0212_ext_wctomb_0_wc_off < 32'd16);
end
end
always @(posedge clk) begin
/* cp50221_0212_ext_wctomb: %0*/
/*   %1 = icmp ult i32 %wc.off, 16*/
if ((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_0_1))
begin
cp50221_0212_ext_wctomb_0_1_reg <= cp50221_0212_ext_wctomb_0_1;
if (reset == 1'b0 && ^(cp50221_0212_ext_wctomb_0_1) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cp50221_0212_ext_wctomb_0_1_reg"); $finish; end
end
end
always @(*) begin
/* cp50221_0212_ext_wctomb: %2*/
/*   %3 = getelementptr inbounds i8* null, i32 %wc.off*/
begin
cp50221_0212_ext_wctomb_2_3 = (0 + (1 * cp50221_0212_ext_wctomb_0_wc_off_reg));
end
end
always @(posedge clk) begin
/* cp50221_0212_ext_wctomb: %2*/
/*   %3 = getelementptr inbounds i8* null, i32 %wc.off*/
if ((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_2_2))
begin
cp50221_0212_ext_wctomb_2_3_reg <= cp50221_0212_ext_wctomb_2_3;
if (reset == 1'b0 && ^(cp50221_0212_ext_wctomb_2_3) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cp50221_0212_ext_wctomb_2_3_reg"); $finish; end
end
end
always @(*) begin
/* cp50221_0212_ext_wctomb: %7*/
/*   %wc.off16 = add i32 %wc, -21248*/
begin
cp50221_0212_ext_wctomb_7_wc_off16 = (arg_wc + -32'd21248);
end
end
always @(posedge clk) begin
/* cp50221_0212_ext_wctomb: %7*/
/*   %wc.off16 = add i32 %wc, -21248*/
if ((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_7_6))
begin
cp50221_0212_ext_wctomb_7_wc_off16_reg <= cp50221_0212_ext_wctomb_7_wc_off16;
if (reset == 1'b0 && ^(cp50221_0212_ext_wctomb_7_wc_off16) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cp50221_0212_ext_wctomb_7_wc_off16_reg"); $finish; end
end
end
always @(*) begin
/* cp50221_0212_ext_wctomb: %7*/
/*   %8 = icmp ult i32 %wc.off16, 40*/
begin
cp50221_0212_ext_wctomb_7_8 = (cp50221_0212_ext_wctomb_7_wc_off16 < 32'd40);
end
end
always @(posedge clk) begin
/* cp50221_0212_ext_wctomb: %7*/
/*   %8 = icmp ult i32 %wc.off16, 40*/
if ((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_7_6))
begin
cp50221_0212_ext_wctomb_7_8_reg <= cp50221_0212_ext_wctomb_7_8;
if (reset == 1'b0 && ^(cp50221_0212_ext_wctomb_7_8) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cp50221_0212_ext_wctomb_7_8_reg"); $finish; end
end
end
always @(*) begin
/* cp50221_0212_ext_wctomb: %9*/
/*   %10 = getelementptr inbounds i8* null, i32 %wc.off16*/
begin
cp50221_0212_ext_wctomb_9_10 = (0 + (1 * cp50221_0212_ext_wctomb_7_wc_off16_reg));
end
end
always @(posedge clk) begin
/* cp50221_0212_ext_wctomb: %9*/
/*   %10 = getelementptr inbounds i8* null, i32 %wc.off16*/
if ((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_9_7))
begin
cp50221_0212_ext_wctomb_9_10_reg <= cp50221_0212_ext_wctomb_9_10;
if (reset == 1'b0 && ^(cp50221_0212_ext_wctomb_9_10) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cp50221_0212_ext_wctomb_9_10_reg"); $finish; end
end
end
always @(*) begin
/* cp50221_0212_ext_wctomb: %25*/
/*   %wc.off17 = add i32 %wc, -28144*/
begin
cp50221_0212_ext_wctomb_25_wc_off17 = (arg_wc + -32'd28144);
end
end
always @(posedge clk) begin
/* cp50221_0212_ext_wctomb: %25*/
/*   %wc.off17 = add i32 %wc, -28144*/
if ((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_25_22))
begin
cp50221_0212_ext_wctomb_25_wc_off17_reg <= cp50221_0212_ext_wctomb_25_wc_off17;
if (reset == 1'b0 && ^(cp50221_0212_ext_wctomb_25_wc_off17) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cp50221_0212_ext_wctomb_25_wc_off17_reg"); $finish; end
end
end
always @(*) begin
/* cp50221_0212_ext_wctomb: %25*/
/*   %26 = icmp ult i32 %wc.off17, 16*/
begin
cp50221_0212_ext_wctomb_25_26 = (cp50221_0212_ext_wctomb_25_wc_off17 < 32'd16);
end
end
always @(posedge clk) begin
/* cp50221_0212_ext_wctomb: %25*/
/*   %26 = icmp ult i32 %wc.off17, 16*/
if ((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_25_22))
begin
cp50221_0212_ext_wctomb_25_26_reg <= cp50221_0212_ext_wctomb_25_26;
if (reset == 1'b0 && ^(cp50221_0212_ext_wctomb_25_26) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cp50221_0212_ext_wctomb_25_26_reg"); $finish; end
end
end
always @(*) begin
/* cp50221_0212_ext_wctomb: %27*/
/*   %28 = getelementptr inbounds i8* null, i32 %wc.off17*/
begin
cp50221_0212_ext_wctomb_27_28 = (0 + (1 * cp50221_0212_ext_wctomb_25_wc_off17_reg));
end
end
always @(posedge clk) begin
/* cp50221_0212_ext_wctomb: %27*/
/*   %28 = getelementptr inbounds i8* null, i32 %wc.off17*/
if ((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_27_23))
begin
cp50221_0212_ext_wctomb_27_28_reg <= cp50221_0212_ext_wctomb_27_28;
if (reset == 1'b0 && ^(cp50221_0212_ext_wctomb_27_28) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cp50221_0212_ext_wctomb_27_28_reg"); $finish; end
end
end
always @(*) begin
/* cp50221_0212_ext_wctomb: %32*/
/*   %wc.off18 = add i32 %wc, -30336*/
begin
cp50221_0212_ext_wctomb_32_wc_off18 = (arg_wc + -32'd30336);
end
end
always @(posedge clk) begin
/* cp50221_0212_ext_wctomb: %32*/
/*   %wc.off18 = add i32 %wc, -30336*/
if ((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_32_27))
begin
cp50221_0212_ext_wctomb_32_wc_off18_reg <= cp50221_0212_ext_wctomb_32_wc_off18;
if (reset == 1'b0 && ^(cp50221_0212_ext_wctomb_32_wc_off18) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cp50221_0212_ext_wctomb_32_wc_off18_reg"); $finish; end
end
end
always @(*) begin
/* cp50221_0212_ext_wctomb: %32*/
/*   %33 = icmp ult i32 %wc.off18, 32*/
begin
cp50221_0212_ext_wctomb_32_33 = (cp50221_0212_ext_wctomb_32_wc_off18 < 32'd32);
end
end
always @(posedge clk) begin
/* cp50221_0212_ext_wctomb: %32*/
/*   %33 = icmp ult i32 %wc.off18, 32*/
if ((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_32_27))
begin
cp50221_0212_ext_wctomb_32_33_reg <= cp50221_0212_ext_wctomb_32_33;
if (reset == 1'b0 && ^(cp50221_0212_ext_wctomb_32_33) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cp50221_0212_ext_wctomb_32_33_reg"); $finish; end
end
end
always @(*) begin
/* cp50221_0212_ext_wctomb: %34*/
/*   %35 = getelementptr inbounds i8* null, i32 %wc.off18*/
begin
cp50221_0212_ext_wctomb_34_35 = (0 + (1 * cp50221_0212_ext_wctomb_32_wc_off18_reg));
end
end
always @(posedge clk) begin
/* cp50221_0212_ext_wctomb: %34*/
/*   %35 = getelementptr inbounds i8* null, i32 %wc.off18*/
if ((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_34_28))
begin
cp50221_0212_ext_wctomb_34_35_reg <= cp50221_0212_ext_wctomb_34_35;
if (reset == 1'b0 && ^(cp50221_0212_ext_wctomb_34_35) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cp50221_0212_ext_wctomb_34_35_reg"); $finish; end
end
end
always @(*) begin
/* cp50221_0212_ext_wctomb: %38*/
/*   %wc.off19 = add i32 %wc, -32160*/
begin
cp50221_0212_ext_wctomb_38_wc_off19 = (arg_wc + -32'd32160);
end
end
always @(posedge clk) begin
/* cp50221_0212_ext_wctomb: %38*/
/*   %wc.off19 = add i32 %wc, -32160*/
if ((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_38_31))
begin
cp50221_0212_ext_wctomb_38_wc_off19_reg <= cp50221_0212_ext_wctomb_38_wc_off19;
if (reset == 1'b0 && ^(cp50221_0212_ext_wctomb_38_wc_off19) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cp50221_0212_ext_wctomb_38_wc_off19_reg"); $finish; end
end
end
always @(*) begin
/* cp50221_0212_ext_wctomb: %38*/
/*   %39 = icmp ult i32 %wc.off19, 56*/
begin
cp50221_0212_ext_wctomb_38_39 = (cp50221_0212_ext_wctomb_38_wc_off19 < 32'd56);
end
end
always @(posedge clk) begin
/* cp50221_0212_ext_wctomb: %38*/
/*   %39 = icmp ult i32 %wc.off19, 56*/
if ((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_38_31))
begin
cp50221_0212_ext_wctomb_38_39_reg <= cp50221_0212_ext_wctomb_38_39;
if (reset == 1'b0 && ^(cp50221_0212_ext_wctomb_38_39) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cp50221_0212_ext_wctomb_38_39_reg"); $finish; end
end
end
always @(*) begin
/* cp50221_0212_ext_wctomb: %40*/
/*   %41 = getelementptr inbounds i8* null, i32 %wc.off19*/
begin
cp50221_0212_ext_wctomb_40_41 = (0 + (1 * cp50221_0212_ext_wctomb_38_wc_off19_reg));
end
end
always @(posedge clk) begin
/* cp50221_0212_ext_wctomb: %40*/
/*   %41 = getelementptr inbounds i8* null, i32 %wc.off19*/
if ((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_40_32))
begin
cp50221_0212_ext_wctomb_40_41_reg <= cp50221_0212_ext_wctomb_40_41;
if (reset == 1'b0 && ^(cp50221_0212_ext_wctomb_40_41) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cp50221_0212_ext_wctomb_40_41_reg"); $finish; end
end
end
always @(*) begin
/* cp50221_0212_ext_wctomb: %51*/
/*   %wc.off20 = add i32 %wc, -38712*/
begin
cp50221_0212_ext_wctomb_51_wc_off20 = (arg_wc + -32'd38712);
end
end
always @(posedge clk) begin
/* cp50221_0212_ext_wctomb: %51*/
/*   %wc.off20 = add i32 %wc, -38712*/
if ((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_51_42))
begin
cp50221_0212_ext_wctomb_51_wc_off20_reg <= cp50221_0212_ext_wctomb_51_wc_off20;
if (reset == 1'b0 && ^(cp50221_0212_ext_wctomb_51_wc_off20) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cp50221_0212_ext_wctomb_51_wc_off20_reg"); $finish; end
end
end
always @(*) begin
/* cp50221_0212_ext_wctomb: %51*/
/*   %52 = icmp ult i32 %wc.off20, 32*/
begin
cp50221_0212_ext_wctomb_51_52 = (cp50221_0212_ext_wctomb_51_wc_off20 < 32'd32);
end
end
always @(posedge clk) begin
/* cp50221_0212_ext_wctomb: %51*/
/*   %52 = icmp ult i32 %wc.off20, 32*/
if ((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_51_42))
begin
cp50221_0212_ext_wctomb_51_52_reg <= cp50221_0212_ext_wctomb_51_52;
if (reset == 1'b0 && ^(cp50221_0212_ext_wctomb_51_52) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cp50221_0212_ext_wctomb_51_52_reg"); $finish; end
end
end
always @(*) begin
/* cp50221_0212_ext_wctomb: %53*/
/*   %54 = getelementptr inbounds i8* null, i32 %wc.off20*/
begin
cp50221_0212_ext_wctomb_53_54 = (0 + (1 * cp50221_0212_ext_wctomb_51_wc_off20_reg));
end
end
always @(posedge clk) begin
/* cp50221_0212_ext_wctomb: %53*/
/*   %54 = getelementptr inbounds i8* null, i32 %wc.off20*/
if ((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_53_43))
begin
cp50221_0212_ext_wctomb_53_54_reg <= cp50221_0212_ext_wctomb_53_54;
if (reset == 1'b0 && ^(cp50221_0212_ext_wctomb_53_54) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cp50221_0212_ext_wctomb_53_54_reg"); $finish; end
end
end
always @(*) begin
/* cp50221_0212_ext_wctomb: %61*/
/*   %wc.off21 = add i32 %wc, -64008*/
begin
cp50221_0212_ext_wctomb_61_wc_off21 = (arg_wc + -32'd64008);
end
end
always @(posedge clk) begin
/* cp50221_0212_ext_wctomb: %61*/
/*   %wc.off21 = add i32 %wc, -64008*/
if ((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_61_50))
begin
cp50221_0212_ext_wctomb_61_wc_off21_reg <= cp50221_0212_ext_wctomb_61_wc_off21;
if (reset == 1'b0 && ^(cp50221_0212_ext_wctomb_61_wc_off21) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cp50221_0212_ext_wctomb_61_wc_off21_reg"); $finish; end
end
end
always @(*) begin
/* cp50221_0212_ext_wctomb: %61*/
/*   %62 = icmp ult i32 %wc.off21, 40*/
begin
cp50221_0212_ext_wctomb_61_62 = (cp50221_0212_ext_wctomb_61_wc_off21 < 32'd40);
end
end
always @(posedge clk) begin
/* cp50221_0212_ext_wctomb: %61*/
/*   %62 = icmp ult i32 %wc.off21, 40*/
if ((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_61_50))
begin
cp50221_0212_ext_wctomb_61_62_reg <= cp50221_0212_ext_wctomb_61_62;
if (reset == 1'b0 && ^(cp50221_0212_ext_wctomb_61_62) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cp50221_0212_ext_wctomb_61_62_reg"); $finish; end
end
end
always @(*) begin
/* cp50221_0212_ext_wctomb: %63*/
/*   %64 = getelementptr inbounds i8* null, i32 %wc.off21*/
begin
cp50221_0212_ext_wctomb_63_64 = (0 + (1 * cp50221_0212_ext_wctomb_61_wc_off21_reg));
end
end
always @(posedge clk) begin
/* cp50221_0212_ext_wctomb: %63*/
/*   %64 = getelementptr inbounds i8* null, i32 %wc.off21*/
if ((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_63_51))
begin
cp50221_0212_ext_wctomb_63_64_reg <= cp50221_0212_ext_wctomb_63_64;
if (reset == 1'b0 && ^(cp50221_0212_ext_wctomb_63_64) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cp50221_0212_ext_wctomb_63_64_reg"); $finish; end
end
end
always @(*) begin
/* cp50221_0212_ext_wctomb: %65*/
/*   %wc.off22 = add i32 %wc, -65280*/
begin
cp50221_0212_ext_wctomb_65_wc_off22 = (arg_wc + -32'd65280);
end
end
always @(posedge clk) begin
/* cp50221_0212_ext_wctomb: %65*/
/*   %wc.off22 = add i32 %wc, -65280*/
if ((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_65_52))
begin
cp50221_0212_ext_wctomb_65_wc_off22_reg <= cp50221_0212_ext_wctomb_65_wc_off22;
if (reset == 1'b0 && ^(cp50221_0212_ext_wctomb_65_wc_off22) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cp50221_0212_ext_wctomb_65_wc_off22_reg"); $finish; end
end
end
always @(*) begin
/* cp50221_0212_ext_wctomb: %65*/
/*   %66 = icmp ult i32 %wc.off22, 8*/
begin
cp50221_0212_ext_wctomb_65_66 = (cp50221_0212_ext_wctomb_65_wc_off22 < 32'd8);
end
end
always @(posedge clk) begin
/* cp50221_0212_ext_wctomb: %65*/
/*   %66 = icmp ult i32 %wc.off22, 8*/
if ((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_65_52))
begin
cp50221_0212_ext_wctomb_65_66_reg <= cp50221_0212_ext_wctomb_65_66;
if (reset == 1'b0 && ^(cp50221_0212_ext_wctomb_65_66) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cp50221_0212_ext_wctomb_65_66_reg"); $finish; end
end
end
always @(*) begin
/* cp50221_0212_ext_wctomb: %67*/
/*   %68 = getelementptr inbounds i8* null, i32 %wc.off22*/
begin
cp50221_0212_ext_wctomb_67_68 = (0 + (1 * cp50221_0212_ext_wctomb_65_wc_off22_reg));
end
end
always @(posedge clk) begin
/* cp50221_0212_ext_wctomb: %67*/
/*   %68 = getelementptr inbounds i8* null, i32 %wc.off22*/
if ((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_67_53))
begin
cp50221_0212_ext_wctomb_67_68_reg <= cp50221_0212_ext_wctomb_67_68;
if (reset == 1'b0 && ^(cp50221_0212_ext_wctomb_67_68) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cp50221_0212_ext_wctomb_67_68_reg"); $finish; end
end
end
always @(*) begin
/* cp50221_0212_ext_wctomb: %69*/
/*   %c.0.in = phi i8* [ %3, %2 ], [ %10, %9 ], [ %28, %27 ], [ %35, %34 ], [ %41, %40 ], [ %54, %53 ], [ %64, %63 ], [ %68, %67 ]*/
if (((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_2_2) & (memory_controller_waitrequest == 1'd0)))
begin
cp50221_0212_ext_wctomb_69_c_0_in = cp50221_0212_ext_wctomb_2_3;
end
/* cp50221_0212_ext_wctomb: %69*/
/*   %c.0.in = phi i8* [ %3, %2 ], [ %10, %9 ], [ %28, %27 ], [ %35, %34 ], [ %41, %40 ], [ %54, %53 ], [ %64, %63 ], [ %68, %67 ]*/
else if (((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_9_7) & (memory_controller_waitrequest == 1'd0)))
begin
cp50221_0212_ext_wctomb_69_c_0_in = cp50221_0212_ext_wctomb_9_10;
end
/* cp50221_0212_ext_wctomb: %69*/
/*   %c.0.in = phi i8* [ %3, %2 ], [ %10, %9 ], [ %28, %27 ], [ %35, %34 ], [ %41, %40 ], [ %54, %53 ], [ %64, %63 ], [ %68, %67 ]*/
else if (((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_27_23) & (memory_controller_waitrequest == 1'd0)))
begin
cp50221_0212_ext_wctomb_69_c_0_in = cp50221_0212_ext_wctomb_27_28;
end
/* cp50221_0212_ext_wctomb: %69*/
/*   %c.0.in = phi i8* [ %3, %2 ], [ %10, %9 ], [ %28, %27 ], [ %35, %34 ], [ %41, %40 ], [ %54, %53 ], [ %64, %63 ], [ %68, %67 ]*/
else if (((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_34_28) & (memory_controller_waitrequest == 1'd0)))
begin
cp50221_0212_ext_wctomb_69_c_0_in = cp50221_0212_ext_wctomb_34_35;
end
/* cp50221_0212_ext_wctomb: %69*/
/*   %c.0.in = phi i8* [ %3, %2 ], [ %10, %9 ], [ %28, %27 ], [ %35, %34 ], [ %41, %40 ], [ %54, %53 ], [ %64, %63 ], [ %68, %67 ]*/
else if (((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_40_32) & (memory_controller_waitrequest == 1'd0)))
begin
cp50221_0212_ext_wctomb_69_c_0_in = cp50221_0212_ext_wctomb_40_41;
end
/* cp50221_0212_ext_wctomb: %69*/
/*   %c.0.in = phi i8* [ %3, %2 ], [ %10, %9 ], [ %28, %27 ], [ %35, %34 ], [ %41, %40 ], [ %54, %53 ], [ %64, %63 ], [ %68, %67 ]*/
else if (((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_53_43) & (memory_controller_waitrequest == 1'd0)))
begin
cp50221_0212_ext_wctomb_69_c_0_in = cp50221_0212_ext_wctomb_53_54;
end
/* cp50221_0212_ext_wctomb: %69*/
/*   %c.0.in = phi i8* [ %3, %2 ], [ %10, %9 ], [ %28, %27 ], [ %35, %34 ], [ %41, %40 ], [ %54, %53 ], [ %64, %63 ], [ %68, %67 ]*/
else if (((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_63_51) & (memory_controller_waitrequest == 1'd0)))
begin
cp50221_0212_ext_wctomb_69_c_0_in = cp50221_0212_ext_wctomb_63_64;
end
/* cp50221_0212_ext_wctomb: %69*/
/*   %c.0.in = phi i8* [ %3, %2 ], [ %10, %9 ], [ %28, %27 ], [ %35, %34 ], [ %41, %40 ], [ %54, %53 ], [ %64, %63 ], [ %68, %67 ]*/
else /* if (((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_67_53) & (memory_controller_waitrequest == 1'd0))) */
begin
cp50221_0212_ext_wctomb_69_c_0_in = cp50221_0212_ext_wctomb_67_68;
end
end
always @(posedge clk) begin
/* cp50221_0212_ext_wctomb: %69*/
/*   %c.0.in = phi i8* [ %3, %2 ], [ %10, %9 ], [ %28, %27 ], [ %35, %34 ], [ %41, %40 ], [ %54, %53 ], [ %64, %63 ], [ %68, %67 ]*/
if (((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_2_2) & (memory_controller_waitrequest == 1'd0)))
begin
cp50221_0212_ext_wctomb_69_c_0_in_reg <= cp50221_0212_ext_wctomb_69_c_0_in;
if (reset == 1'b0 && ^(cp50221_0212_ext_wctomb_69_c_0_in) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cp50221_0212_ext_wctomb_69_c_0_in_reg"); $finish; end
end
/* cp50221_0212_ext_wctomb: %69*/
/*   %c.0.in = phi i8* [ %3, %2 ], [ %10, %9 ], [ %28, %27 ], [ %35, %34 ], [ %41, %40 ], [ %54, %53 ], [ %64, %63 ], [ %68, %67 ]*/
if (((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_9_7) & (memory_controller_waitrequest == 1'd0)))
begin
cp50221_0212_ext_wctomb_69_c_0_in_reg <= cp50221_0212_ext_wctomb_69_c_0_in;
if (reset == 1'b0 && ^(cp50221_0212_ext_wctomb_69_c_0_in) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cp50221_0212_ext_wctomb_69_c_0_in_reg"); $finish; end
end
/* cp50221_0212_ext_wctomb: %69*/
/*   %c.0.in = phi i8* [ %3, %2 ], [ %10, %9 ], [ %28, %27 ], [ %35, %34 ], [ %41, %40 ], [ %54, %53 ], [ %64, %63 ], [ %68, %67 ]*/
if (((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_27_23) & (memory_controller_waitrequest == 1'd0)))
begin
cp50221_0212_ext_wctomb_69_c_0_in_reg <= cp50221_0212_ext_wctomb_69_c_0_in;
if (reset == 1'b0 && ^(cp50221_0212_ext_wctomb_69_c_0_in) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cp50221_0212_ext_wctomb_69_c_0_in_reg"); $finish; end
end
/* cp50221_0212_ext_wctomb: %69*/
/*   %c.0.in = phi i8* [ %3, %2 ], [ %10, %9 ], [ %28, %27 ], [ %35, %34 ], [ %41, %40 ], [ %54, %53 ], [ %64, %63 ], [ %68, %67 ]*/
if (((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_34_28) & (memory_controller_waitrequest == 1'd0)))
begin
cp50221_0212_ext_wctomb_69_c_0_in_reg <= cp50221_0212_ext_wctomb_69_c_0_in;
if (reset == 1'b0 && ^(cp50221_0212_ext_wctomb_69_c_0_in) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cp50221_0212_ext_wctomb_69_c_0_in_reg"); $finish; end
end
/* cp50221_0212_ext_wctomb: %69*/
/*   %c.0.in = phi i8* [ %3, %2 ], [ %10, %9 ], [ %28, %27 ], [ %35, %34 ], [ %41, %40 ], [ %54, %53 ], [ %64, %63 ], [ %68, %67 ]*/
if (((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_40_32) & (memory_controller_waitrequest == 1'd0)))
begin
cp50221_0212_ext_wctomb_69_c_0_in_reg <= cp50221_0212_ext_wctomb_69_c_0_in;
if (reset == 1'b0 && ^(cp50221_0212_ext_wctomb_69_c_0_in) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cp50221_0212_ext_wctomb_69_c_0_in_reg"); $finish; end
end
/* cp50221_0212_ext_wctomb: %69*/
/*   %c.0.in = phi i8* [ %3, %2 ], [ %10, %9 ], [ %28, %27 ], [ %35, %34 ], [ %41, %40 ], [ %54, %53 ], [ %64, %63 ], [ %68, %67 ]*/
if (((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_53_43) & (memory_controller_waitrequest == 1'd0)))
begin
cp50221_0212_ext_wctomb_69_c_0_in_reg <= cp50221_0212_ext_wctomb_69_c_0_in;
if (reset == 1'b0 && ^(cp50221_0212_ext_wctomb_69_c_0_in) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cp50221_0212_ext_wctomb_69_c_0_in_reg"); $finish; end
end
/* cp50221_0212_ext_wctomb: %69*/
/*   %c.0.in = phi i8* [ %3, %2 ], [ %10, %9 ], [ %28, %27 ], [ %35, %34 ], [ %41, %40 ], [ %54, %53 ], [ %64, %63 ], [ %68, %67 ]*/
if (((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_63_51) & (memory_controller_waitrequest == 1'd0)))
begin
cp50221_0212_ext_wctomb_69_c_0_in_reg <= cp50221_0212_ext_wctomb_69_c_0_in;
if (reset == 1'b0 && ^(cp50221_0212_ext_wctomb_69_c_0_in) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cp50221_0212_ext_wctomb_69_c_0_in_reg"); $finish; end
end
/* cp50221_0212_ext_wctomb: %69*/
/*   %c.0.in = phi i8* [ %3, %2 ], [ %10, %9 ], [ %28, %27 ], [ %35, %34 ], [ %41, %40 ], [ %54, %53 ], [ %64, %63 ], [ %68, %67 ]*/
if (((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_67_53) & (memory_controller_waitrequest == 1'd0)))
begin
cp50221_0212_ext_wctomb_69_c_0_in_reg <= cp50221_0212_ext_wctomb_69_c_0_in;
if (reset == 1'b0 && ^(cp50221_0212_ext_wctomb_69_c_0_in) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cp50221_0212_ext_wctomb_69_c_0_in_reg"); $finish; end
end
end
always @(*) begin
/* cp50221_0212_ext_wctomb: %69*/
/*   %c.0 = load i8* %c.0.in, align 1*/
begin
cp50221_0212_ext_wctomb_69_c_0 = memory_controller_out_a[7:0];
end
end
always @(posedge clk) begin
/* cp50221_0212_ext_wctomb: %69*/
/*   %c.0 = load i8* %c.0.in, align 1*/
if ((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_69_56))
begin
cp50221_0212_ext_wctomb_69_c_0_reg <= cp50221_0212_ext_wctomb_69_c_0;
if (reset == 1'b0 && ^(cp50221_0212_ext_wctomb_69_c_0) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cp50221_0212_ext_wctomb_69_c_0_reg"); $finish; end
end
end
always @(*) begin
/* cp50221_0212_ext_wctomb: %69*/
/*   %70 = icmp eq i8 %c.0, 0*/
begin
cp50221_0212_ext_wctomb_69_70 = (cp50221_0212_ext_wctomb_69_c_0 == 8'd0);
end
end
always @(posedge clk) begin
/* cp50221_0212_ext_wctomb: %69*/
/*   %70 = icmp eq i8 %c.0, 0*/
if ((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_69_56))
begin
cp50221_0212_ext_wctomb_69_70_reg <= cp50221_0212_ext_wctomb_69_70;
if (reset == 1'b0 && ^(cp50221_0212_ext_wctomb_69_70) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cp50221_0212_ext_wctomb_69_70_reg"); $finish; end
end
end
always @(*) begin
/* cp50221_0212_ext_wctomb: %.thread*/
/*   %c.023 = phi i8 [ %c.0, %69 ], [ 28, %5 ], [ 29, %6 ], [ 34, %12 ], [ 37, %13 ], [ 38, %14 ], [ 39, %15 ], [ 40, %16 ], [ 42, %17 ], [ 43, %18 ], [ 44, %19 ], [ 45, %20 ], [ 47, %21 ], [ 50, %22 ], [ 53, %23 ], [ 54, %24 ], [ 26, %30 ], [ 60, %31 ], [ 69, %37 ], [ 77, %43 ], [ 80, %44 ], [ 82, %45 ], [ 83, %46 ], [ 84, %47 ], [ 88, %48 ], [ 90, %49 ], [ 93, %50 ], [ 103, %56 ], [ 104, %57 ], [ 106, %58 ], [ 49, %59 ], [ 94, %60 ], [ 27, %4 ], [ 33, %11 ], [ 57, %29 ], [ 64, %36 ], [ 75, %42 ], [ 102, %55 ]*/
if ((((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_4_3) & (memory_controller_waitrequest == 1'd0)) & (arg_wc == 32'd20220)))
begin
cp50221_0212_ext_wctomb__thread_c_023 = 8'd27;
end
/* cp50221_0212_ext_wctomb: %.thread*/
/*   %c.023 = phi i8 [ %c.0, %69 ], [ 28, %5 ], [ 29, %6 ], [ 34, %12 ], [ 37, %13 ], [ 38, %14 ], [ 39, %15 ], [ 40, %16 ], [ 42, %17 ], [ 43, %18 ], [ 44, %19 ], [ 45, %20 ], [ 47, %21 ], [ 50, %22 ], [ 53, %23 ], [ 54, %24 ], [ 26, %30 ], [ 60, %31 ], [ 69, %37 ], [ 77, %43 ], [ 80, %44 ], [ 82, %45 ], [ 83, %46 ], [ 84, %47 ], [ 88, %48 ], [ 90, %49 ], [ 93, %50 ], [ 103, %56 ], [ 104, %57 ], [ 106, %58 ], [ 49, %59 ], [ 94, %60 ], [ 27, %4 ], [ 33, %11 ], [ 57, %29 ], [ 64, %36 ], [ 75, %42 ], [ 102, %55 ]*/
else if (((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_5_4) & (memory_controller_waitrequest == 1'd0)))
begin
cp50221_0212_ext_wctomb__thread_c_023 = 8'd28;
end
/* cp50221_0212_ext_wctomb: %.thread*/
/*   %c.023 = phi i8 [ %c.0, %69 ], [ 28, %5 ], [ 29, %6 ], [ 34, %12 ], [ 37, %13 ], [ 38, %14 ], [ 39, %15 ], [ 40, %16 ], [ 42, %17 ], [ 43, %18 ], [ 44, %19 ], [ 45, %20 ], [ 47, %21 ], [ 50, %22 ], [ 53, %23 ], [ 54, %24 ], [ 26, %30 ], [ 60, %31 ], [ 69, %37 ], [ 77, %43 ], [ 80, %44 ], [ 82, %45 ], [ 83, %46 ], [ 84, %47 ], [ 88, %48 ], [ 90, %49 ], [ 93, %50 ], [ 103, %56 ], [ 104, %57 ], [ 106, %58 ], [ 49, %59 ], [ 94, %60 ], [ 27, %4 ], [ 33, %11 ], [ 57, %29 ], [ 64, %36 ], [ 75, %42 ], [ 102, %55 ]*/
else if (((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_6_5) & (memory_controller_waitrequest == 1'd0)))
begin
cp50221_0212_ext_wctomb__thread_c_023 = 8'd29;
end
/* cp50221_0212_ext_wctomb: %.thread*/
/*   %c.023 = phi i8 [ %c.0, %69 ], [ 28, %5 ], [ 29, %6 ], [ 34, %12 ], [ 37, %13 ], [ 38, %14 ], [ 39, %15 ], [ 40, %16 ], [ 42, %17 ], [ 43, %18 ], [ 44, %19 ], [ 45, %20 ], [ 47, %21 ], [ 50, %22 ], [ 53, %23 ], [ 54, %24 ], [ 26, %30 ], [ 60, %31 ], [ 69, %37 ], [ 77, %43 ], [ 80, %44 ], [ 82, %45 ], [ 83, %46 ], [ 84, %47 ], [ 88, %48 ], [ 90, %49 ], [ 93, %50 ], [ 103, %56 ], [ 104, %57 ], [ 106, %58 ], [ 49, %59 ], [ 94, %60 ], [ 27, %4 ], [ 33, %11 ], [ 57, %29 ], [ 64, %36 ], [ 75, %42 ], [ 102, %55 ]*/
else if ((((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_11_8) & (memory_controller_waitrequest == 1'd0)) & (arg_wc == 32'd21642)))
begin
cp50221_0212_ext_wctomb__thread_c_023 = 8'd33;
end
/* cp50221_0212_ext_wctomb: %.thread*/
/*   %c.023 = phi i8 [ %c.0, %69 ], [ 28, %5 ], [ 29, %6 ], [ 34, %12 ], [ 37, %13 ], [ 38, %14 ], [ 39, %15 ], [ 40, %16 ], [ 42, %17 ], [ 43, %18 ], [ 44, %19 ], [ 45, %20 ], [ 47, %21 ], [ 50, %22 ], [ 53, %23 ], [ 54, %24 ], [ 26, %30 ], [ 60, %31 ], [ 69, %37 ], [ 77, %43 ], [ 80, %44 ], [ 82, %45 ], [ 83, %46 ], [ 84, %47 ], [ 88, %48 ], [ 90, %49 ], [ 93, %50 ], [ 103, %56 ], [ 104, %57 ], [ 106, %58 ], [ 49, %59 ], [ 94, %60 ], [ 27, %4 ], [ 33, %11 ], [ 57, %29 ], [ 64, %36 ], [ 75, %42 ], [ 102, %55 ]*/
else if (((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_12_9) & (memory_controller_waitrequest == 1'd0)))
begin
cp50221_0212_ext_wctomb__thread_c_023 = 8'd34;
end
/* cp50221_0212_ext_wctomb: %.thread*/
/*   %c.023 = phi i8 [ %c.0, %69 ], [ 28, %5 ], [ 29, %6 ], [ 34, %12 ], [ 37, %13 ], [ 38, %14 ], [ 39, %15 ], [ 40, %16 ], [ 42, %17 ], [ 43, %18 ], [ 44, %19 ], [ 45, %20 ], [ 47, %21 ], [ 50, %22 ], [ 53, %23 ], [ 54, %24 ], [ 26, %30 ], [ 60, %31 ], [ 69, %37 ], [ 77, %43 ], [ 80, %44 ], [ 82, %45 ], [ 83, %46 ], [ 84, %47 ], [ 88, %48 ], [ 90, %49 ], [ 93, %50 ], [ 103, %56 ], [ 104, %57 ], [ 106, %58 ], [ 49, %59 ], [ 94, %60 ], [ 27, %4 ], [ 33, %11 ], [ 57, %29 ], [ 64, %36 ], [ 75, %42 ], [ 102, %55 ]*/
else if (((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_13_10) & (memory_controller_waitrequest == 1'd0)))
begin
cp50221_0212_ext_wctomb__thread_c_023 = 8'd37;
end
/* cp50221_0212_ext_wctomb: %.thread*/
/*   %c.023 = phi i8 [ %c.0, %69 ], [ 28, %5 ], [ 29, %6 ], [ 34, %12 ], [ 37, %13 ], [ 38, %14 ], [ 39, %15 ], [ 40, %16 ], [ 42, %17 ], [ 43, %18 ], [ 44, %19 ], [ 45, %20 ], [ 47, %21 ], [ 50, %22 ], [ 53, %23 ], [ 54, %24 ], [ 26, %30 ], [ 60, %31 ], [ 69, %37 ], [ 77, %43 ], [ 80, %44 ], [ 82, %45 ], [ 83, %46 ], [ 84, %47 ], [ 88, %48 ], [ 90, %49 ], [ 93, %50 ], [ 103, %56 ], [ 104, %57 ], [ 106, %58 ], [ 49, %59 ], [ 94, %60 ], [ 27, %4 ], [ 33, %11 ], [ 57, %29 ], [ 64, %36 ], [ 75, %42 ], [ 102, %55 ]*/
else if (((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_14_11) & (memory_controller_waitrequest == 1'd0)))
begin
cp50221_0212_ext_wctomb__thread_c_023 = 8'd38;
end
/* cp50221_0212_ext_wctomb: %.thread*/
/*   %c.023 = phi i8 [ %c.0, %69 ], [ 28, %5 ], [ 29, %6 ], [ 34, %12 ], [ 37, %13 ], [ 38, %14 ], [ 39, %15 ], [ 40, %16 ], [ 42, %17 ], [ 43, %18 ], [ 44, %19 ], [ 45, %20 ], [ 47, %21 ], [ 50, %22 ], [ 53, %23 ], [ 54, %24 ], [ 26, %30 ], [ 60, %31 ], [ 69, %37 ], [ 77, %43 ], [ 80, %44 ], [ 82, %45 ], [ 83, %46 ], [ 84, %47 ], [ 88, %48 ], [ 90, %49 ], [ 93, %50 ], [ 103, %56 ], [ 104, %57 ], [ 106, %58 ], [ 49, %59 ], [ 94, %60 ], [ 27, %4 ], [ 33, %11 ], [ 57, %29 ], [ 64, %36 ], [ 75, %42 ], [ 102, %55 ]*/
else if (((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_15_12) & (memory_controller_waitrequest == 1'd0)))
begin
cp50221_0212_ext_wctomb__thread_c_023 = 8'd39;
end
/* cp50221_0212_ext_wctomb: %.thread*/
/*   %c.023 = phi i8 [ %c.0, %69 ], [ 28, %5 ], [ 29, %6 ], [ 34, %12 ], [ 37, %13 ], [ 38, %14 ], [ 39, %15 ], [ 40, %16 ], [ 42, %17 ], [ 43, %18 ], [ 44, %19 ], [ 45, %20 ], [ 47, %21 ], [ 50, %22 ], [ 53, %23 ], [ 54, %24 ], [ 26, %30 ], [ 60, %31 ], [ 69, %37 ], [ 77, %43 ], [ 80, %44 ], [ 82, %45 ], [ 83, %46 ], [ 84, %47 ], [ 88, %48 ], [ 90, %49 ], [ 93, %50 ], [ 103, %56 ], [ 104, %57 ], [ 106, %58 ], [ 49, %59 ], [ 94, %60 ], [ 27, %4 ], [ 33, %11 ], [ 57, %29 ], [ 64, %36 ], [ 75, %42 ], [ 102, %55 ]*/
else if (((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_16_13) & (memory_controller_waitrequest == 1'd0)))
begin
cp50221_0212_ext_wctomb__thread_c_023 = 8'd40;
end
/* cp50221_0212_ext_wctomb: %.thread*/
/*   %c.023 = phi i8 [ %c.0, %69 ], [ 28, %5 ], [ 29, %6 ], [ 34, %12 ], [ 37, %13 ], [ 38, %14 ], [ 39, %15 ], [ 40, %16 ], [ 42, %17 ], [ 43, %18 ], [ 44, %19 ], [ 45, %20 ], [ 47, %21 ], [ 50, %22 ], [ 53, %23 ], [ 54, %24 ], [ 26, %30 ], [ 60, %31 ], [ 69, %37 ], [ 77, %43 ], [ 80, %44 ], [ 82, %45 ], [ 83, %46 ], [ 84, %47 ], [ 88, %48 ], [ 90, %49 ], [ 93, %50 ], [ 103, %56 ], [ 104, %57 ], [ 106, %58 ], [ 49, %59 ], [ 94, %60 ], [ 27, %4 ], [ 33, %11 ], [ 57, %29 ], [ 64, %36 ], [ 75, %42 ], [ 102, %55 ]*/
else if (((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_17_14) & (memory_controller_waitrequest == 1'd0)))
begin
cp50221_0212_ext_wctomb__thread_c_023 = 8'd42;
end
/* cp50221_0212_ext_wctomb: %.thread*/
/*   %c.023 = phi i8 [ %c.0, %69 ], [ 28, %5 ], [ 29, %6 ], [ 34, %12 ], [ 37, %13 ], [ 38, %14 ], [ 39, %15 ], [ 40, %16 ], [ 42, %17 ], [ 43, %18 ], [ 44, %19 ], [ 45, %20 ], [ 47, %21 ], [ 50, %22 ], [ 53, %23 ], [ 54, %24 ], [ 26, %30 ], [ 60, %31 ], [ 69, %37 ], [ 77, %43 ], [ 80, %44 ], [ 82, %45 ], [ 83, %46 ], [ 84, %47 ], [ 88, %48 ], [ 90, %49 ], [ 93, %50 ], [ 103, %56 ], [ 104, %57 ], [ 106, %58 ], [ 49, %59 ], [ 94, %60 ], [ 27, %4 ], [ 33, %11 ], [ 57, %29 ], [ 64, %36 ], [ 75, %42 ], [ 102, %55 ]*/
else if (((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_18_15) & (memory_controller_waitrequest == 1'd0)))
begin
cp50221_0212_ext_wctomb__thread_c_023 = 8'd43;
end
/* cp50221_0212_ext_wctomb: %.thread*/
/*   %c.023 = phi i8 [ %c.0, %69 ], [ 28, %5 ], [ 29, %6 ], [ 34, %12 ], [ 37, %13 ], [ 38, %14 ], [ 39, %15 ], [ 40, %16 ], [ 42, %17 ], [ 43, %18 ], [ 44, %19 ], [ 45, %20 ], [ 47, %21 ], [ 50, %22 ], [ 53, %23 ], [ 54, %24 ], [ 26, %30 ], [ 60, %31 ], [ 69, %37 ], [ 77, %43 ], [ 80, %44 ], [ 82, %45 ], [ 83, %46 ], [ 84, %47 ], [ 88, %48 ], [ 90, %49 ], [ 93, %50 ], [ 103, %56 ], [ 104, %57 ], [ 106, %58 ], [ 49, %59 ], [ 94, %60 ], [ 27, %4 ], [ 33, %11 ], [ 57, %29 ], [ 64, %36 ], [ 75, %42 ], [ 102, %55 ]*/
else if (((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_19_16) & (memory_controller_waitrequest == 1'd0)))
begin
cp50221_0212_ext_wctomb__thread_c_023 = 8'd44;
end
/* cp50221_0212_ext_wctomb: %.thread*/
/*   %c.023 = phi i8 [ %c.0, %69 ], [ 28, %5 ], [ 29, %6 ], [ 34, %12 ], [ 37, %13 ], [ 38, %14 ], [ 39, %15 ], [ 40, %16 ], [ 42, %17 ], [ 43, %18 ], [ 44, %19 ], [ 45, %20 ], [ 47, %21 ], [ 50, %22 ], [ 53, %23 ], [ 54, %24 ], [ 26, %30 ], [ 60, %31 ], [ 69, %37 ], [ 77, %43 ], [ 80, %44 ], [ 82, %45 ], [ 83, %46 ], [ 84, %47 ], [ 88, %48 ], [ 90, %49 ], [ 93, %50 ], [ 103, %56 ], [ 104, %57 ], [ 106, %58 ], [ 49, %59 ], [ 94, %60 ], [ 27, %4 ], [ 33, %11 ], [ 57, %29 ], [ 64, %36 ], [ 75, %42 ], [ 102, %55 ]*/
else if (((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_20_17) & (memory_controller_waitrequest == 1'd0)))
begin
cp50221_0212_ext_wctomb__thread_c_023 = 8'd45;
end
/* cp50221_0212_ext_wctomb: %.thread*/
/*   %c.023 = phi i8 [ %c.0, %69 ], [ 28, %5 ], [ 29, %6 ], [ 34, %12 ], [ 37, %13 ], [ 38, %14 ], [ 39, %15 ], [ 40, %16 ], [ 42, %17 ], [ 43, %18 ], [ 44, %19 ], [ 45, %20 ], [ 47, %21 ], [ 50, %22 ], [ 53, %23 ], [ 54, %24 ], [ 26, %30 ], [ 60, %31 ], [ 69, %37 ], [ 77, %43 ], [ 80, %44 ], [ 82, %45 ], [ 83, %46 ], [ 84, %47 ], [ 88, %48 ], [ 90, %49 ], [ 93, %50 ], [ 103, %56 ], [ 104, %57 ], [ 106, %58 ], [ 49, %59 ], [ 94, %60 ], [ 27, %4 ], [ 33, %11 ], [ 57, %29 ], [ 64, %36 ], [ 75, %42 ], [ 102, %55 ]*/
else if (((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_21_18) & (memory_controller_waitrequest == 1'd0)))
begin
cp50221_0212_ext_wctomb__thread_c_023 = 8'd47;
end
/* cp50221_0212_ext_wctomb: %.thread*/
/*   %c.023 = phi i8 [ %c.0, %69 ], [ 28, %5 ], [ 29, %6 ], [ 34, %12 ], [ 37, %13 ], [ 38, %14 ], [ 39, %15 ], [ 40, %16 ], [ 42, %17 ], [ 43, %18 ], [ 44, %19 ], [ 45, %20 ], [ 47, %21 ], [ 50, %22 ], [ 53, %23 ], [ 54, %24 ], [ 26, %30 ], [ 60, %31 ], [ 69, %37 ], [ 77, %43 ], [ 80, %44 ], [ 82, %45 ], [ 83, %46 ], [ 84, %47 ], [ 88, %48 ], [ 90, %49 ], [ 93, %50 ], [ 103, %56 ], [ 104, %57 ], [ 106, %58 ], [ 49, %59 ], [ 94, %60 ], [ 27, %4 ], [ 33, %11 ], [ 57, %29 ], [ 64, %36 ], [ 75, %42 ], [ 102, %55 ]*/
else if (((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_22_19) & (memory_controller_waitrequest == 1'd0)))
begin
cp50221_0212_ext_wctomb__thread_c_023 = 8'd50;
end
/* cp50221_0212_ext_wctomb: %.thread*/
/*   %c.023 = phi i8 [ %c.0, %69 ], [ 28, %5 ], [ 29, %6 ], [ 34, %12 ], [ 37, %13 ], [ 38, %14 ], [ 39, %15 ], [ 40, %16 ], [ 42, %17 ], [ 43, %18 ], [ 44, %19 ], [ 45, %20 ], [ 47, %21 ], [ 50, %22 ], [ 53, %23 ], [ 54, %24 ], [ 26, %30 ], [ 60, %31 ], [ 69, %37 ], [ 77, %43 ], [ 80, %44 ], [ 82, %45 ], [ 83, %46 ], [ 84, %47 ], [ 88, %48 ], [ 90, %49 ], [ 93, %50 ], [ 103, %56 ], [ 104, %57 ], [ 106, %58 ], [ 49, %59 ], [ 94, %60 ], [ 27, %4 ], [ 33, %11 ], [ 57, %29 ], [ 64, %36 ], [ 75, %42 ], [ 102, %55 ]*/
else if (((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_23_20) & (memory_controller_waitrequest == 1'd0)))
begin
cp50221_0212_ext_wctomb__thread_c_023 = 8'd53;
end
/* cp50221_0212_ext_wctomb: %.thread*/
/*   %c.023 = phi i8 [ %c.0, %69 ], [ 28, %5 ], [ 29, %6 ], [ 34, %12 ], [ 37, %13 ], [ 38, %14 ], [ 39, %15 ], [ 40, %16 ], [ 42, %17 ], [ 43, %18 ], [ 44, %19 ], [ 45, %20 ], [ 47, %21 ], [ 50, %22 ], [ 53, %23 ], [ 54, %24 ], [ 26, %30 ], [ 60, %31 ], [ 69, %37 ], [ 77, %43 ], [ 80, %44 ], [ 82, %45 ], [ 83, %46 ], [ 84, %47 ], [ 88, %48 ], [ 90, %49 ], [ 93, %50 ], [ 103, %56 ], [ 104, %57 ], [ 106, %58 ], [ 49, %59 ], [ 94, %60 ], [ 27, %4 ], [ 33, %11 ], [ 57, %29 ], [ 64, %36 ], [ 75, %42 ], [ 102, %55 ]*/
else if (((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_24_21) & (memory_controller_waitrequest == 1'd0)))
begin
cp50221_0212_ext_wctomb__thread_c_023 = 8'd54;
end
/* cp50221_0212_ext_wctomb: %.thread*/
/*   %c.023 = phi i8 [ %c.0, %69 ], [ 28, %5 ], [ 29, %6 ], [ 34, %12 ], [ 37, %13 ], [ 38, %14 ], [ 39, %15 ], [ 40, %16 ], [ 42, %17 ], [ 43, %18 ], [ 44, %19 ], [ 45, %20 ], [ 47, %21 ], [ 50, %22 ], [ 53, %23 ], [ 54, %24 ], [ 26, %30 ], [ 60, %31 ], [ 69, %37 ], [ 77, %43 ], [ 80, %44 ], [ 82, %45 ], [ 83, %46 ], [ 84, %47 ], [ 88, %48 ], [ 90, %49 ], [ 93, %50 ], [ 103, %56 ], [ 104, %57 ], [ 106, %58 ], [ 49, %59 ], [ 94, %60 ], [ 27, %4 ], [ 33, %11 ], [ 57, %29 ], [ 64, %36 ], [ 75, %42 ], [ 102, %55 ]*/
else if ((((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_29_24) & (memory_controller_waitrequest == 1'd0)) & (arg_wc == 32'd28712)))
begin
cp50221_0212_ext_wctomb__thread_c_023 = 8'd57;
end
/* cp50221_0212_ext_wctomb: %.thread*/
/*   %c.023 = phi i8 [ %c.0, %69 ], [ 28, %5 ], [ 29, %6 ], [ 34, %12 ], [ 37, %13 ], [ 38, %14 ], [ 39, %15 ], [ 40, %16 ], [ 42, %17 ], [ 43, %18 ], [ 44, %19 ], [ 45, %20 ], [ 47, %21 ], [ 50, %22 ], [ 53, %23 ], [ 54, %24 ], [ 26, %30 ], [ 60, %31 ], [ 69, %37 ], [ 77, %43 ], [ 80, %44 ], [ 82, %45 ], [ 83, %46 ], [ 84, %47 ], [ 88, %48 ], [ 90, %49 ], [ 93, %50 ], [ 103, %56 ], [ 104, %57 ], [ 106, %58 ], [ 49, %59 ], [ 94, %60 ], [ 27, %4 ], [ 33, %11 ], [ 57, %29 ], [ 64, %36 ], [ 75, %42 ], [ 102, %55 ]*/
else if (((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_30_25) & (memory_controller_waitrequest == 1'd0)))
begin
cp50221_0212_ext_wctomb__thread_c_023 = 8'd26;
end
/* cp50221_0212_ext_wctomb: %.thread*/
/*   %c.023 = phi i8 [ %c.0, %69 ], [ 28, %5 ], [ 29, %6 ], [ 34, %12 ], [ 37, %13 ], [ 38, %14 ], [ 39, %15 ], [ 40, %16 ], [ 42, %17 ], [ 43, %18 ], [ 44, %19 ], [ 45, %20 ], [ 47, %21 ], [ 50, %22 ], [ 53, %23 ], [ 54, %24 ], [ 26, %30 ], [ 60, %31 ], [ 69, %37 ], [ 77, %43 ], [ 80, %44 ], [ 82, %45 ], [ 83, %46 ], [ 84, %47 ], [ 88, %48 ], [ 90, %49 ], [ 93, %50 ], [ 103, %56 ], [ 104, %57 ], [ 106, %58 ], [ 49, %59 ], [ 94, %60 ], [ 27, %4 ], [ 33, %11 ], [ 57, %29 ], [ 64, %36 ], [ 75, %42 ], [ 102, %55 ]*/
else if (((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_31_26) & (memory_controller_waitrequest == 1'd0)))
begin
cp50221_0212_ext_wctomb__thread_c_023 = 8'd60;
end
/* cp50221_0212_ext_wctomb: %.thread*/
/*   %c.023 = phi i8 [ %c.0, %69 ], [ 28, %5 ], [ 29, %6 ], [ 34, %12 ], [ 37, %13 ], [ 38, %14 ], [ 39, %15 ], [ 40, %16 ], [ 42, %17 ], [ 43, %18 ], [ 44, %19 ], [ 45, %20 ], [ 47, %21 ], [ 50, %22 ], [ 53, %23 ], [ 54, %24 ], [ 26, %30 ], [ 60, %31 ], [ 69, %37 ], [ 77, %43 ], [ 80, %44 ], [ 82, %45 ], [ 83, %46 ], [ 84, %47 ], [ 88, %48 ], [ 90, %49 ], [ 93, %50 ], [ 103, %56 ], [ 104, %57 ], [ 106, %58 ], [ 49, %59 ], [ 94, %60 ], [ 27, %4 ], [ 33, %11 ], [ 57, %29 ], [ 64, %36 ], [ 75, %42 ], [ 102, %55 ]*/
else if ((((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_36_29) & (memory_controller_waitrequest == 1'd0)) & (arg_wc == 32'd31024)))
begin
cp50221_0212_ext_wctomb__thread_c_023 = 8'd64;
end
/* cp50221_0212_ext_wctomb: %.thread*/
/*   %c.023 = phi i8 [ %c.0, %69 ], [ 28, %5 ], [ 29, %6 ], [ 34, %12 ], [ 37, %13 ], [ 38, %14 ], [ 39, %15 ], [ 40, %16 ], [ 42, %17 ], [ 43, %18 ], [ 44, %19 ], [ 45, %20 ], [ 47, %21 ], [ 50, %22 ], [ 53, %23 ], [ 54, %24 ], [ 26, %30 ], [ 60, %31 ], [ 69, %37 ], [ 77, %43 ], [ 80, %44 ], [ 82, %45 ], [ 83, %46 ], [ 84, %47 ], [ 88, %48 ], [ 90, %49 ], [ 93, %50 ], [ 103, %56 ], [ 104, %57 ], [ 106, %58 ], [ 49, %59 ], [ 94, %60 ], [ 27, %4 ], [ 33, %11 ], [ 57, %29 ], [ 64, %36 ], [ 75, %42 ], [ 102, %55 ]*/
else if (((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_37_30) & (memory_controller_waitrequest == 1'd0)))
begin
cp50221_0212_ext_wctomb__thread_c_023 = 8'd69;
end
/* cp50221_0212_ext_wctomb: %.thread*/
/*   %c.023 = phi i8 [ %c.0, %69 ], [ 28, %5 ], [ 29, %6 ], [ 34, %12 ], [ 37, %13 ], [ 38, %14 ], [ 39, %15 ], [ 40, %16 ], [ 42, %17 ], [ 43, %18 ], [ 44, %19 ], [ 45, %20 ], [ 47, %21 ], [ 50, %22 ], [ 53, %23 ], [ 54, %24 ], [ 26, %30 ], [ 60, %31 ], [ 69, %37 ], [ 77, %43 ], [ 80, %44 ], [ 82, %45 ], [ 83, %46 ], [ 84, %47 ], [ 88, %48 ], [ 90, %49 ], [ 93, %50 ], [ 103, %56 ], [ 104, %57 ], [ 106, %58 ], [ 49, %59 ], [ 94, %60 ], [ 27, %4 ], [ 33, %11 ], [ 57, %29 ], [ 64, %36 ], [ 75, %42 ], [ 102, %55 ]*/
else if ((((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_42_33) & (memory_controller_waitrequest == 1'd0)) & (arg_wc == 32'd33634)))
begin
cp50221_0212_ext_wctomb__thread_c_023 = 8'd75;
end
/* cp50221_0212_ext_wctomb: %.thread*/
/*   %c.023 = phi i8 [ %c.0, %69 ], [ 28, %5 ], [ 29, %6 ], [ 34, %12 ], [ 37, %13 ], [ 38, %14 ], [ 39, %15 ], [ 40, %16 ], [ 42, %17 ], [ 43, %18 ], [ 44, %19 ], [ 45, %20 ], [ 47, %21 ], [ 50, %22 ], [ 53, %23 ], [ 54, %24 ], [ 26, %30 ], [ 60, %31 ], [ 69, %37 ], [ 77, %43 ], [ 80, %44 ], [ 82, %45 ], [ 83, %46 ], [ 84, %47 ], [ 88, %48 ], [ 90, %49 ], [ 93, %50 ], [ 103, %56 ], [ 104, %57 ], [ 106, %58 ], [ 49, %59 ], [ 94, %60 ], [ 27, %4 ], [ 33, %11 ], [ 57, %29 ], [ 64, %36 ], [ 75, %42 ], [ 102, %55 ]*/
else if (((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_43_34) & (memory_controller_waitrequest == 1'd0)))
begin
cp50221_0212_ext_wctomb__thread_c_023 = 8'd77;
end
/* cp50221_0212_ext_wctomb: %.thread*/
/*   %c.023 = phi i8 [ %c.0, %69 ], [ 28, %5 ], [ 29, %6 ], [ 34, %12 ], [ 37, %13 ], [ 38, %14 ], [ 39, %15 ], [ 40, %16 ], [ 42, %17 ], [ 43, %18 ], [ 44, %19 ], [ 45, %20 ], [ 47, %21 ], [ 50, %22 ], [ 53, %23 ], [ 54, %24 ], [ 26, %30 ], [ 60, %31 ], [ 69, %37 ], [ 77, %43 ], [ 80, %44 ], [ 82, %45 ], [ 83, %46 ], [ 84, %47 ], [ 88, %48 ], [ 90, %49 ], [ 93, %50 ], [ 103, %56 ], [ 104, %57 ], [ 106, %58 ], [ 49, %59 ], [ 94, %60 ], [ 27, %4 ], [ 33, %11 ], [ 57, %29 ], [ 64, %36 ], [ 75, %42 ], [ 102, %55 ]*/
else if (((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_44_35) & (memory_controller_waitrequest == 1'd0)))
begin
cp50221_0212_ext_wctomb__thread_c_023 = 8'd80;
end
/* cp50221_0212_ext_wctomb: %.thread*/
/*   %c.023 = phi i8 [ %c.0, %69 ], [ 28, %5 ], [ 29, %6 ], [ 34, %12 ], [ 37, %13 ], [ 38, %14 ], [ 39, %15 ], [ 40, %16 ], [ 42, %17 ], [ 43, %18 ], [ 44, %19 ], [ 45, %20 ], [ 47, %21 ], [ 50, %22 ], [ 53, %23 ], [ 54, %24 ], [ 26, %30 ], [ 60, %31 ], [ 69, %37 ], [ 77, %43 ], [ 80, %44 ], [ 82, %45 ], [ 83, %46 ], [ 84, %47 ], [ 88, %48 ], [ 90, %49 ], [ 93, %50 ], [ 103, %56 ], [ 104, %57 ], [ 106, %58 ], [ 49, %59 ], [ 94, %60 ], [ 27, %4 ], [ 33, %11 ], [ 57, %29 ], [ 64, %36 ], [ 75, %42 ], [ 102, %55 ]*/
else if (((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_45_36) & (memory_controller_waitrequest == 1'd0)))
begin
cp50221_0212_ext_wctomb__thread_c_023 = 8'd82;
end
/* cp50221_0212_ext_wctomb: %.thread*/
/*   %c.023 = phi i8 [ %c.0, %69 ], [ 28, %5 ], [ 29, %6 ], [ 34, %12 ], [ 37, %13 ], [ 38, %14 ], [ 39, %15 ], [ 40, %16 ], [ 42, %17 ], [ 43, %18 ], [ 44, %19 ], [ 45, %20 ], [ 47, %21 ], [ 50, %22 ], [ 53, %23 ], [ 54, %24 ], [ 26, %30 ], [ 60, %31 ], [ 69, %37 ], [ 77, %43 ], [ 80, %44 ], [ 82, %45 ], [ 83, %46 ], [ 84, %47 ], [ 88, %48 ], [ 90, %49 ], [ 93, %50 ], [ 103, %56 ], [ 104, %57 ], [ 106, %58 ], [ 49, %59 ], [ 94, %60 ], [ 27, %4 ], [ 33, %11 ], [ 57, %29 ], [ 64, %36 ], [ 75, %42 ], [ 102, %55 ]*/
else if (((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_46_37) & (memory_controller_waitrequest == 1'd0)))
begin
cp50221_0212_ext_wctomb__thread_c_023 = 8'd83;
end
/* cp50221_0212_ext_wctomb: %.thread*/
/*   %c.023 = phi i8 [ %c.0, %69 ], [ 28, %5 ], [ 29, %6 ], [ 34, %12 ], [ 37, %13 ], [ 38, %14 ], [ 39, %15 ], [ 40, %16 ], [ 42, %17 ], [ 43, %18 ], [ 44, %19 ], [ 45, %20 ], [ 47, %21 ], [ 50, %22 ], [ 53, %23 ], [ 54, %24 ], [ 26, %30 ], [ 60, %31 ], [ 69, %37 ], [ 77, %43 ], [ 80, %44 ], [ 82, %45 ], [ 83, %46 ], [ 84, %47 ], [ 88, %48 ], [ 90, %49 ], [ 93, %50 ], [ 103, %56 ], [ 104, %57 ], [ 106, %58 ], [ 49, %59 ], [ 94, %60 ], [ 27, %4 ], [ 33, %11 ], [ 57, %29 ], [ 64, %36 ], [ 75, %42 ], [ 102, %55 ]*/
else if (((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_47_38) & (memory_controller_waitrequest == 1'd0)))
begin
cp50221_0212_ext_wctomb__thread_c_023 = 8'd84;
end
/* cp50221_0212_ext_wctomb: %.thread*/
/*   %c.023 = phi i8 [ %c.0, %69 ], [ 28, %5 ], [ 29, %6 ], [ 34, %12 ], [ 37, %13 ], [ 38, %14 ], [ 39, %15 ], [ 40, %16 ], [ 42, %17 ], [ 43, %18 ], [ 44, %19 ], [ 45, %20 ], [ 47, %21 ], [ 50, %22 ], [ 53, %23 ], [ 54, %24 ], [ 26, %30 ], [ 60, %31 ], [ 69, %37 ], [ 77, %43 ], [ 80, %44 ], [ 82, %45 ], [ 83, %46 ], [ 84, %47 ], [ 88, %48 ], [ 90, %49 ], [ 93, %50 ], [ 103, %56 ], [ 104, %57 ], [ 106, %58 ], [ 49, %59 ], [ 94, %60 ], [ 27, %4 ], [ 33, %11 ], [ 57, %29 ], [ 64, %36 ], [ 75, %42 ], [ 102, %55 ]*/
else if (((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_48_39) & (memory_controller_waitrequest == 1'd0)))
begin
cp50221_0212_ext_wctomb__thread_c_023 = 8'd88;
end
/* cp50221_0212_ext_wctomb: %.thread*/
/*   %c.023 = phi i8 [ %c.0, %69 ], [ 28, %5 ], [ 29, %6 ], [ 34, %12 ], [ 37, %13 ], [ 38, %14 ], [ 39, %15 ], [ 40, %16 ], [ 42, %17 ], [ 43, %18 ], [ 44, %19 ], [ 45, %20 ], [ 47, %21 ], [ 50, %22 ], [ 53, %23 ], [ 54, %24 ], [ 26, %30 ], [ 60, %31 ], [ 69, %37 ], [ 77, %43 ], [ 80, %44 ], [ 82, %45 ], [ 83, %46 ], [ 84, %47 ], [ 88, %48 ], [ 90, %49 ], [ 93, %50 ], [ 103, %56 ], [ 104, %57 ], [ 106, %58 ], [ 49, %59 ], [ 94, %60 ], [ 27, %4 ], [ 33, %11 ], [ 57, %29 ], [ 64, %36 ], [ 75, %42 ], [ 102, %55 ]*/
else if (((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_49_40) & (memory_controller_waitrequest == 1'd0)))
begin
cp50221_0212_ext_wctomb__thread_c_023 = 8'd90;
end
/* cp50221_0212_ext_wctomb: %.thread*/
/*   %c.023 = phi i8 [ %c.0, %69 ], [ 28, %5 ], [ 29, %6 ], [ 34, %12 ], [ 37, %13 ], [ 38, %14 ], [ 39, %15 ], [ 40, %16 ], [ 42, %17 ], [ 43, %18 ], [ 44, %19 ], [ 45, %20 ], [ 47, %21 ], [ 50, %22 ], [ 53, %23 ], [ 54, %24 ], [ 26, %30 ], [ 60, %31 ], [ 69, %37 ], [ 77, %43 ], [ 80, %44 ], [ 82, %45 ], [ 83, %46 ], [ 84, %47 ], [ 88, %48 ], [ 90, %49 ], [ 93, %50 ], [ 103, %56 ], [ 104, %57 ], [ 106, %58 ], [ 49, %59 ], [ 94, %60 ], [ 27, %4 ], [ 33, %11 ], [ 57, %29 ], [ 64, %36 ], [ 75, %42 ], [ 102, %55 ]*/
else if (((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_50_41) & (memory_controller_waitrequest == 1'd0)))
begin
cp50221_0212_ext_wctomb__thread_c_023 = 8'd93;
end
/* cp50221_0212_ext_wctomb: %.thread*/
/*   %c.023 = phi i8 [ %c.0, %69 ], [ 28, %5 ], [ 29, %6 ], [ 34, %12 ], [ 37, %13 ], [ 38, %14 ], [ 39, %15 ], [ 40, %16 ], [ 42, %17 ], [ 43, %18 ], [ 44, %19 ], [ 45, %20 ], [ 47, %21 ], [ 50, %22 ], [ 53, %23 ], [ 54, %24 ], [ 26, %30 ], [ 60, %31 ], [ 69, %37 ], [ 77, %43 ], [ 80, %44 ], [ 82, %45 ], [ 83, %46 ], [ 84, %47 ], [ 88, %48 ], [ 90, %49 ], [ 93, %50 ], [ 103, %56 ], [ 104, %57 ], [ 106, %58 ], [ 49, %59 ], [ 94, %60 ], [ 27, %4 ], [ 33, %11 ], [ 57, %29 ], [ 64, %36 ], [ 75, %42 ], [ 102, %55 ]*/
else if ((((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_55_44) & (memory_controller_waitrequest == 1'd0)) & (arg_wc == 32'd39326)))
begin
cp50221_0212_ext_wctomb__thread_c_023 = 8'd102;
end
/* cp50221_0212_ext_wctomb: %.thread*/
/*   %c.023 = phi i8 [ %c.0, %69 ], [ 28, %5 ], [ 29, %6 ], [ 34, %12 ], [ 37, %13 ], [ 38, %14 ], [ 39, %15 ], [ 40, %16 ], [ 42, %17 ], [ 43, %18 ], [ 44, %19 ], [ 45, %20 ], [ 47, %21 ], [ 50, %22 ], [ 53, %23 ], [ 54, %24 ], [ 26, %30 ], [ 60, %31 ], [ 69, %37 ], [ 77, %43 ], [ 80, %44 ], [ 82, %45 ], [ 83, %46 ], [ 84, %47 ], [ 88, %48 ], [ 90, %49 ], [ 93, %50 ], [ 103, %56 ], [ 104, %57 ], [ 106, %58 ], [ 49, %59 ], [ 94, %60 ], [ 27, %4 ], [ 33, %11 ], [ 57, %29 ], [ 64, %36 ], [ 75, %42 ], [ 102, %55 ]*/
else if (((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_56_45) & (memory_controller_waitrequest == 1'd0)))
begin
cp50221_0212_ext_wctomb__thread_c_023 = 8'd103;
end
/* cp50221_0212_ext_wctomb: %.thread*/
/*   %c.023 = phi i8 [ %c.0, %69 ], [ 28, %5 ], [ 29, %6 ], [ 34, %12 ], [ 37, %13 ], [ 38, %14 ], [ 39, %15 ], [ 40, %16 ], [ 42, %17 ], [ 43, %18 ], [ 44, %19 ], [ 45, %20 ], [ 47, %21 ], [ 50, %22 ], [ 53, %23 ], [ 54, %24 ], [ 26, %30 ], [ 60, %31 ], [ 69, %37 ], [ 77, %43 ], [ 80, %44 ], [ 82, %45 ], [ 83, %46 ], [ 84, %47 ], [ 88, %48 ], [ 90, %49 ], [ 93, %50 ], [ 103, %56 ], [ 104, %57 ], [ 106, %58 ], [ 49, %59 ], [ 94, %60 ], [ 27, %4 ], [ 33, %11 ], [ 57, %29 ], [ 64, %36 ], [ 75, %42 ], [ 102, %55 ]*/
else if (((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_57_46) & (memory_controller_waitrequest == 1'd0)))
begin
cp50221_0212_ext_wctomb__thread_c_023 = 8'd104;
end
/* cp50221_0212_ext_wctomb: %.thread*/
/*   %c.023 = phi i8 [ %c.0, %69 ], [ 28, %5 ], [ 29, %6 ], [ 34, %12 ], [ 37, %13 ], [ 38, %14 ], [ 39, %15 ], [ 40, %16 ], [ 42, %17 ], [ 43, %18 ], [ 44, %19 ], [ 45, %20 ], [ 47, %21 ], [ 50, %22 ], [ 53, %23 ], [ 54, %24 ], [ 26, %30 ], [ 60, %31 ], [ 69, %37 ], [ 77, %43 ], [ 80, %44 ], [ 82, %45 ], [ 83, %46 ], [ 84, %47 ], [ 88, %48 ], [ 90, %49 ], [ 93, %50 ], [ 103, %56 ], [ 104, %57 ], [ 106, %58 ], [ 49, %59 ], [ 94, %60 ], [ 27, %4 ], [ 33, %11 ], [ 57, %29 ], [ 64, %36 ], [ 75, %42 ], [ 102, %55 ]*/
else if (((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_58_47) & (memory_controller_waitrequest == 1'd0)))
begin
cp50221_0212_ext_wctomb__thread_c_023 = 8'd106;
end
/* cp50221_0212_ext_wctomb: %.thread*/
/*   %c.023 = phi i8 [ %c.0, %69 ], [ 28, %5 ], [ 29, %6 ], [ 34, %12 ], [ 37, %13 ], [ 38, %14 ], [ 39, %15 ], [ 40, %16 ], [ 42, %17 ], [ 43, %18 ], [ 44, %19 ], [ 45, %20 ], [ 47, %21 ], [ 50, %22 ], [ 53, %23 ], [ 54, %24 ], [ 26, %30 ], [ 60, %31 ], [ 69, %37 ], [ 77, %43 ], [ 80, %44 ], [ 82, %45 ], [ 83, %46 ], [ 84, %47 ], [ 88, %48 ], [ 90, %49 ], [ 93, %50 ], [ 103, %56 ], [ 104, %57 ], [ 106, %58 ], [ 49, %59 ], [ 94, %60 ], [ 27, %4 ], [ 33, %11 ], [ 57, %29 ], [ 64, %36 ], [ 75, %42 ], [ 102, %55 ]*/
else if (((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_59_48) & (memory_controller_waitrequest == 1'd0)))
begin
cp50221_0212_ext_wctomb__thread_c_023 = 8'd49;
end
/* cp50221_0212_ext_wctomb: %.thread*/
/*   %c.023 = phi i8 [ %c.0, %69 ], [ 28, %5 ], [ 29, %6 ], [ 34, %12 ], [ 37, %13 ], [ 38, %14 ], [ 39, %15 ], [ 40, %16 ], [ 42, %17 ], [ 43, %18 ], [ 44, %19 ], [ 45, %20 ], [ 47, %21 ], [ 50, %22 ], [ 53, %23 ], [ 54, %24 ], [ 26, %30 ], [ 60, %31 ], [ 69, %37 ], [ 77, %43 ], [ 80, %44 ], [ 82, %45 ], [ 83, %46 ], [ 84, %47 ], [ 88, %48 ], [ 90, %49 ], [ 93, %50 ], [ 103, %56 ], [ 104, %57 ], [ 106, %58 ], [ 49, %59 ], [ 94, %60 ], [ 27, %4 ], [ 33, %11 ], [ 57, %29 ], [ 64, %36 ], [ 75, %42 ], [ 102, %55 ]*/
else if (((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_60_49) & (memory_controller_waitrequest == 1'd0)))
begin
cp50221_0212_ext_wctomb__thread_c_023 = 8'd94;
end
/* cp50221_0212_ext_wctomb: %.thread*/
/*   %c.023 = phi i8 [ %c.0, %69 ], [ 28, %5 ], [ 29, %6 ], [ 34, %12 ], [ 37, %13 ], [ 38, %14 ], [ 39, %15 ], [ 40, %16 ], [ 42, %17 ], [ 43, %18 ], [ 44, %19 ], [ 45, %20 ], [ 47, %21 ], [ 50, %22 ], [ 53, %23 ], [ 54, %24 ], [ 26, %30 ], [ 60, %31 ], [ 69, %37 ], [ 77, %43 ], [ 80, %44 ], [ 82, %45 ], [ 83, %46 ], [ 84, %47 ], [ 88, %48 ], [ 90, %49 ], [ 93, %50 ], [ 103, %56 ], [ 104, %57 ], [ 106, %58 ], [ 49, %59 ], [ 94, %60 ], [ 27, %4 ], [ 33, %11 ], [ 57, %29 ], [ 64, %36 ], [ 75, %42 ], [ 102, %55 ]*/
else /* if ((((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_69_56) & (memory_controller_waitrequest == 1'd0)) & (cp50221_0212_ext_wctomb_69_70 == 1'd0))) */
begin
cp50221_0212_ext_wctomb__thread_c_023 = cp50221_0212_ext_wctomb_69_c_0;
end
end
always @(posedge clk) begin
/* cp50221_0212_ext_wctomb: %.thread*/
/*   %c.023 = phi i8 [ %c.0, %69 ], [ 28, %5 ], [ 29, %6 ], [ 34, %12 ], [ 37, %13 ], [ 38, %14 ], [ 39, %15 ], [ 40, %16 ], [ 42, %17 ], [ 43, %18 ], [ 44, %19 ], [ 45, %20 ], [ 47, %21 ], [ 50, %22 ], [ 53, %23 ], [ 54, %24 ], [ 26, %30 ], [ 60, %31 ], [ 69, %37 ], [ 77, %43 ], [ 80, %44 ], [ 82, %45 ], [ 83, %46 ], [ 84, %47 ], [ 88, %48 ], [ 90, %49 ], [ 93, %50 ], [ 103, %56 ], [ 104, %57 ], [ 106, %58 ], [ 49, %59 ], [ 94, %60 ], [ 27, %4 ], [ 33, %11 ], [ 57, %29 ], [ 64, %36 ], [ 75, %42 ], [ 102, %55 ]*/
if ((((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_4_3) & (memory_controller_waitrequest == 1'd0)) & (arg_wc == 32'd20220)))
begin
cp50221_0212_ext_wctomb__thread_c_023_reg <= cp50221_0212_ext_wctomb__thread_c_023;
if (reset == 1'b0 && ^(cp50221_0212_ext_wctomb__thread_c_023) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cp50221_0212_ext_wctomb__thread_c_023_reg"); $finish; end
end
/* cp50221_0212_ext_wctomb: %.thread*/
/*   %c.023 = phi i8 [ %c.0, %69 ], [ 28, %5 ], [ 29, %6 ], [ 34, %12 ], [ 37, %13 ], [ 38, %14 ], [ 39, %15 ], [ 40, %16 ], [ 42, %17 ], [ 43, %18 ], [ 44, %19 ], [ 45, %20 ], [ 47, %21 ], [ 50, %22 ], [ 53, %23 ], [ 54, %24 ], [ 26, %30 ], [ 60, %31 ], [ 69, %37 ], [ 77, %43 ], [ 80, %44 ], [ 82, %45 ], [ 83, %46 ], [ 84, %47 ], [ 88, %48 ], [ 90, %49 ], [ 93, %50 ], [ 103, %56 ], [ 104, %57 ], [ 106, %58 ], [ 49, %59 ], [ 94, %60 ], [ 27, %4 ], [ 33, %11 ], [ 57, %29 ], [ 64, %36 ], [ 75, %42 ], [ 102, %55 ]*/
if (((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_5_4) & (memory_controller_waitrequest == 1'd0)))
begin
cp50221_0212_ext_wctomb__thread_c_023_reg <= cp50221_0212_ext_wctomb__thread_c_023;
if (reset == 1'b0 && ^(cp50221_0212_ext_wctomb__thread_c_023) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cp50221_0212_ext_wctomb__thread_c_023_reg"); $finish; end
end
/* cp50221_0212_ext_wctomb: %.thread*/
/*   %c.023 = phi i8 [ %c.0, %69 ], [ 28, %5 ], [ 29, %6 ], [ 34, %12 ], [ 37, %13 ], [ 38, %14 ], [ 39, %15 ], [ 40, %16 ], [ 42, %17 ], [ 43, %18 ], [ 44, %19 ], [ 45, %20 ], [ 47, %21 ], [ 50, %22 ], [ 53, %23 ], [ 54, %24 ], [ 26, %30 ], [ 60, %31 ], [ 69, %37 ], [ 77, %43 ], [ 80, %44 ], [ 82, %45 ], [ 83, %46 ], [ 84, %47 ], [ 88, %48 ], [ 90, %49 ], [ 93, %50 ], [ 103, %56 ], [ 104, %57 ], [ 106, %58 ], [ 49, %59 ], [ 94, %60 ], [ 27, %4 ], [ 33, %11 ], [ 57, %29 ], [ 64, %36 ], [ 75, %42 ], [ 102, %55 ]*/
if (((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_6_5) & (memory_controller_waitrequest == 1'd0)))
begin
cp50221_0212_ext_wctomb__thread_c_023_reg <= cp50221_0212_ext_wctomb__thread_c_023;
if (reset == 1'b0 && ^(cp50221_0212_ext_wctomb__thread_c_023) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cp50221_0212_ext_wctomb__thread_c_023_reg"); $finish; end
end
/* cp50221_0212_ext_wctomb: %.thread*/
/*   %c.023 = phi i8 [ %c.0, %69 ], [ 28, %5 ], [ 29, %6 ], [ 34, %12 ], [ 37, %13 ], [ 38, %14 ], [ 39, %15 ], [ 40, %16 ], [ 42, %17 ], [ 43, %18 ], [ 44, %19 ], [ 45, %20 ], [ 47, %21 ], [ 50, %22 ], [ 53, %23 ], [ 54, %24 ], [ 26, %30 ], [ 60, %31 ], [ 69, %37 ], [ 77, %43 ], [ 80, %44 ], [ 82, %45 ], [ 83, %46 ], [ 84, %47 ], [ 88, %48 ], [ 90, %49 ], [ 93, %50 ], [ 103, %56 ], [ 104, %57 ], [ 106, %58 ], [ 49, %59 ], [ 94, %60 ], [ 27, %4 ], [ 33, %11 ], [ 57, %29 ], [ 64, %36 ], [ 75, %42 ], [ 102, %55 ]*/
if ((((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_11_8) & (memory_controller_waitrequest == 1'd0)) & (arg_wc == 32'd21642)))
begin
cp50221_0212_ext_wctomb__thread_c_023_reg <= cp50221_0212_ext_wctomb__thread_c_023;
if (reset == 1'b0 && ^(cp50221_0212_ext_wctomb__thread_c_023) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cp50221_0212_ext_wctomb__thread_c_023_reg"); $finish; end
end
/* cp50221_0212_ext_wctomb: %.thread*/
/*   %c.023 = phi i8 [ %c.0, %69 ], [ 28, %5 ], [ 29, %6 ], [ 34, %12 ], [ 37, %13 ], [ 38, %14 ], [ 39, %15 ], [ 40, %16 ], [ 42, %17 ], [ 43, %18 ], [ 44, %19 ], [ 45, %20 ], [ 47, %21 ], [ 50, %22 ], [ 53, %23 ], [ 54, %24 ], [ 26, %30 ], [ 60, %31 ], [ 69, %37 ], [ 77, %43 ], [ 80, %44 ], [ 82, %45 ], [ 83, %46 ], [ 84, %47 ], [ 88, %48 ], [ 90, %49 ], [ 93, %50 ], [ 103, %56 ], [ 104, %57 ], [ 106, %58 ], [ 49, %59 ], [ 94, %60 ], [ 27, %4 ], [ 33, %11 ], [ 57, %29 ], [ 64, %36 ], [ 75, %42 ], [ 102, %55 ]*/
if (((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_12_9) & (memory_controller_waitrequest == 1'd0)))
begin
cp50221_0212_ext_wctomb__thread_c_023_reg <= cp50221_0212_ext_wctomb__thread_c_023;
if (reset == 1'b0 && ^(cp50221_0212_ext_wctomb__thread_c_023) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cp50221_0212_ext_wctomb__thread_c_023_reg"); $finish; end
end
/* cp50221_0212_ext_wctomb: %.thread*/
/*   %c.023 = phi i8 [ %c.0, %69 ], [ 28, %5 ], [ 29, %6 ], [ 34, %12 ], [ 37, %13 ], [ 38, %14 ], [ 39, %15 ], [ 40, %16 ], [ 42, %17 ], [ 43, %18 ], [ 44, %19 ], [ 45, %20 ], [ 47, %21 ], [ 50, %22 ], [ 53, %23 ], [ 54, %24 ], [ 26, %30 ], [ 60, %31 ], [ 69, %37 ], [ 77, %43 ], [ 80, %44 ], [ 82, %45 ], [ 83, %46 ], [ 84, %47 ], [ 88, %48 ], [ 90, %49 ], [ 93, %50 ], [ 103, %56 ], [ 104, %57 ], [ 106, %58 ], [ 49, %59 ], [ 94, %60 ], [ 27, %4 ], [ 33, %11 ], [ 57, %29 ], [ 64, %36 ], [ 75, %42 ], [ 102, %55 ]*/
if (((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_13_10) & (memory_controller_waitrequest == 1'd0)))
begin
cp50221_0212_ext_wctomb__thread_c_023_reg <= cp50221_0212_ext_wctomb__thread_c_023;
if (reset == 1'b0 && ^(cp50221_0212_ext_wctomb__thread_c_023) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cp50221_0212_ext_wctomb__thread_c_023_reg"); $finish; end
end
/* cp50221_0212_ext_wctomb: %.thread*/
/*   %c.023 = phi i8 [ %c.0, %69 ], [ 28, %5 ], [ 29, %6 ], [ 34, %12 ], [ 37, %13 ], [ 38, %14 ], [ 39, %15 ], [ 40, %16 ], [ 42, %17 ], [ 43, %18 ], [ 44, %19 ], [ 45, %20 ], [ 47, %21 ], [ 50, %22 ], [ 53, %23 ], [ 54, %24 ], [ 26, %30 ], [ 60, %31 ], [ 69, %37 ], [ 77, %43 ], [ 80, %44 ], [ 82, %45 ], [ 83, %46 ], [ 84, %47 ], [ 88, %48 ], [ 90, %49 ], [ 93, %50 ], [ 103, %56 ], [ 104, %57 ], [ 106, %58 ], [ 49, %59 ], [ 94, %60 ], [ 27, %4 ], [ 33, %11 ], [ 57, %29 ], [ 64, %36 ], [ 75, %42 ], [ 102, %55 ]*/
if (((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_14_11) & (memory_controller_waitrequest == 1'd0)))
begin
cp50221_0212_ext_wctomb__thread_c_023_reg <= cp50221_0212_ext_wctomb__thread_c_023;
if (reset == 1'b0 && ^(cp50221_0212_ext_wctomb__thread_c_023) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cp50221_0212_ext_wctomb__thread_c_023_reg"); $finish; end
end
/* cp50221_0212_ext_wctomb: %.thread*/
/*   %c.023 = phi i8 [ %c.0, %69 ], [ 28, %5 ], [ 29, %6 ], [ 34, %12 ], [ 37, %13 ], [ 38, %14 ], [ 39, %15 ], [ 40, %16 ], [ 42, %17 ], [ 43, %18 ], [ 44, %19 ], [ 45, %20 ], [ 47, %21 ], [ 50, %22 ], [ 53, %23 ], [ 54, %24 ], [ 26, %30 ], [ 60, %31 ], [ 69, %37 ], [ 77, %43 ], [ 80, %44 ], [ 82, %45 ], [ 83, %46 ], [ 84, %47 ], [ 88, %48 ], [ 90, %49 ], [ 93, %50 ], [ 103, %56 ], [ 104, %57 ], [ 106, %58 ], [ 49, %59 ], [ 94, %60 ], [ 27, %4 ], [ 33, %11 ], [ 57, %29 ], [ 64, %36 ], [ 75, %42 ], [ 102, %55 ]*/
if (((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_15_12) & (memory_controller_waitrequest == 1'd0)))
begin
cp50221_0212_ext_wctomb__thread_c_023_reg <= cp50221_0212_ext_wctomb__thread_c_023;
if (reset == 1'b0 && ^(cp50221_0212_ext_wctomb__thread_c_023) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cp50221_0212_ext_wctomb__thread_c_023_reg"); $finish; end
end
/* cp50221_0212_ext_wctomb: %.thread*/
/*   %c.023 = phi i8 [ %c.0, %69 ], [ 28, %5 ], [ 29, %6 ], [ 34, %12 ], [ 37, %13 ], [ 38, %14 ], [ 39, %15 ], [ 40, %16 ], [ 42, %17 ], [ 43, %18 ], [ 44, %19 ], [ 45, %20 ], [ 47, %21 ], [ 50, %22 ], [ 53, %23 ], [ 54, %24 ], [ 26, %30 ], [ 60, %31 ], [ 69, %37 ], [ 77, %43 ], [ 80, %44 ], [ 82, %45 ], [ 83, %46 ], [ 84, %47 ], [ 88, %48 ], [ 90, %49 ], [ 93, %50 ], [ 103, %56 ], [ 104, %57 ], [ 106, %58 ], [ 49, %59 ], [ 94, %60 ], [ 27, %4 ], [ 33, %11 ], [ 57, %29 ], [ 64, %36 ], [ 75, %42 ], [ 102, %55 ]*/
if (((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_16_13) & (memory_controller_waitrequest == 1'd0)))
begin
cp50221_0212_ext_wctomb__thread_c_023_reg <= cp50221_0212_ext_wctomb__thread_c_023;
if (reset == 1'b0 && ^(cp50221_0212_ext_wctomb__thread_c_023) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cp50221_0212_ext_wctomb__thread_c_023_reg"); $finish; end
end
/* cp50221_0212_ext_wctomb: %.thread*/
/*   %c.023 = phi i8 [ %c.0, %69 ], [ 28, %5 ], [ 29, %6 ], [ 34, %12 ], [ 37, %13 ], [ 38, %14 ], [ 39, %15 ], [ 40, %16 ], [ 42, %17 ], [ 43, %18 ], [ 44, %19 ], [ 45, %20 ], [ 47, %21 ], [ 50, %22 ], [ 53, %23 ], [ 54, %24 ], [ 26, %30 ], [ 60, %31 ], [ 69, %37 ], [ 77, %43 ], [ 80, %44 ], [ 82, %45 ], [ 83, %46 ], [ 84, %47 ], [ 88, %48 ], [ 90, %49 ], [ 93, %50 ], [ 103, %56 ], [ 104, %57 ], [ 106, %58 ], [ 49, %59 ], [ 94, %60 ], [ 27, %4 ], [ 33, %11 ], [ 57, %29 ], [ 64, %36 ], [ 75, %42 ], [ 102, %55 ]*/
if (((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_17_14) & (memory_controller_waitrequest == 1'd0)))
begin
cp50221_0212_ext_wctomb__thread_c_023_reg <= cp50221_0212_ext_wctomb__thread_c_023;
if (reset == 1'b0 && ^(cp50221_0212_ext_wctomb__thread_c_023) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cp50221_0212_ext_wctomb__thread_c_023_reg"); $finish; end
end
/* cp50221_0212_ext_wctomb: %.thread*/
/*   %c.023 = phi i8 [ %c.0, %69 ], [ 28, %5 ], [ 29, %6 ], [ 34, %12 ], [ 37, %13 ], [ 38, %14 ], [ 39, %15 ], [ 40, %16 ], [ 42, %17 ], [ 43, %18 ], [ 44, %19 ], [ 45, %20 ], [ 47, %21 ], [ 50, %22 ], [ 53, %23 ], [ 54, %24 ], [ 26, %30 ], [ 60, %31 ], [ 69, %37 ], [ 77, %43 ], [ 80, %44 ], [ 82, %45 ], [ 83, %46 ], [ 84, %47 ], [ 88, %48 ], [ 90, %49 ], [ 93, %50 ], [ 103, %56 ], [ 104, %57 ], [ 106, %58 ], [ 49, %59 ], [ 94, %60 ], [ 27, %4 ], [ 33, %11 ], [ 57, %29 ], [ 64, %36 ], [ 75, %42 ], [ 102, %55 ]*/
if (((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_18_15) & (memory_controller_waitrequest == 1'd0)))
begin
cp50221_0212_ext_wctomb__thread_c_023_reg <= cp50221_0212_ext_wctomb__thread_c_023;
if (reset == 1'b0 && ^(cp50221_0212_ext_wctomb__thread_c_023) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cp50221_0212_ext_wctomb__thread_c_023_reg"); $finish; end
end
/* cp50221_0212_ext_wctomb: %.thread*/
/*   %c.023 = phi i8 [ %c.0, %69 ], [ 28, %5 ], [ 29, %6 ], [ 34, %12 ], [ 37, %13 ], [ 38, %14 ], [ 39, %15 ], [ 40, %16 ], [ 42, %17 ], [ 43, %18 ], [ 44, %19 ], [ 45, %20 ], [ 47, %21 ], [ 50, %22 ], [ 53, %23 ], [ 54, %24 ], [ 26, %30 ], [ 60, %31 ], [ 69, %37 ], [ 77, %43 ], [ 80, %44 ], [ 82, %45 ], [ 83, %46 ], [ 84, %47 ], [ 88, %48 ], [ 90, %49 ], [ 93, %50 ], [ 103, %56 ], [ 104, %57 ], [ 106, %58 ], [ 49, %59 ], [ 94, %60 ], [ 27, %4 ], [ 33, %11 ], [ 57, %29 ], [ 64, %36 ], [ 75, %42 ], [ 102, %55 ]*/
if (((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_19_16) & (memory_controller_waitrequest == 1'd0)))
begin
cp50221_0212_ext_wctomb__thread_c_023_reg <= cp50221_0212_ext_wctomb__thread_c_023;
if (reset == 1'b0 && ^(cp50221_0212_ext_wctomb__thread_c_023) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cp50221_0212_ext_wctomb__thread_c_023_reg"); $finish; end
end
/* cp50221_0212_ext_wctomb: %.thread*/
/*   %c.023 = phi i8 [ %c.0, %69 ], [ 28, %5 ], [ 29, %6 ], [ 34, %12 ], [ 37, %13 ], [ 38, %14 ], [ 39, %15 ], [ 40, %16 ], [ 42, %17 ], [ 43, %18 ], [ 44, %19 ], [ 45, %20 ], [ 47, %21 ], [ 50, %22 ], [ 53, %23 ], [ 54, %24 ], [ 26, %30 ], [ 60, %31 ], [ 69, %37 ], [ 77, %43 ], [ 80, %44 ], [ 82, %45 ], [ 83, %46 ], [ 84, %47 ], [ 88, %48 ], [ 90, %49 ], [ 93, %50 ], [ 103, %56 ], [ 104, %57 ], [ 106, %58 ], [ 49, %59 ], [ 94, %60 ], [ 27, %4 ], [ 33, %11 ], [ 57, %29 ], [ 64, %36 ], [ 75, %42 ], [ 102, %55 ]*/
if (((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_20_17) & (memory_controller_waitrequest == 1'd0)))
begin
cp50221_0212_ext_wctomb__thread_c_023_reg <= cp50221_0212_ext_wctomb__thread_c_023;
if (reset == 1'b0 && ^(cp50221_0212_ext_wctomb__thread_c_023) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cp50221_0212_ext_wctomb__thread_c_023_reg"); $finish; end
end
/* cp50221_0212_ext_wctomb: %.thread*/
/*   %c.023 = phi i8 [ %c.0, %69 ], [ 28, %5 ], [ 29, %6 ], [ 34, %12 ], [ 37, %13 ], [ 38, %14 ], [ 39, %15 ], [ 40, %16 ], [ 42, %17 ], [ 43, %18 ], [ 44, %19 ], [ 45, %20 ], [ 47, %21 ], [ 50, %22 ], [ 53, %23 ], [ 54, %24 ], [ 26, %30 ], [ 60, %31 ], [ 69, %37 ], [ 77, %43 ], [ 80, %44 ], [ 82, %45 ], [ 83, %46 ], [ 84, %47 ], [ 88, %48 ], [ 90, %49 ], [ 93, %50 ], [ 103, %56 ], [ 104, %57 ], [ 106, %58 ], [ 49, %59 ], [ 94, %60 ], [ 27, %4 ], [ 33, %11 ], [ 57, %29 ], [ 64, %36 ], [ 75, %42 ], [ 102, %55 ]*/
if (((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_21_18) & (memory_controller_waitrequest == 1'd0)))
begin
cp50221_0212_ext_wctomb__thread_c_023_reg <= cp50221_0212_ext_wctomb__thread_c_023;
if (reset == 1'b0 && ^(cp50221_0212_ext_wctomb__thread_c_023) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cp50221_0212_ext_wctomb__thread_c_023_reg"); $finish; end
end
/* cp50221_0212_ext_wctomb: %.thread*/
/*   %c.023 = phi i8 [ %c.0, %69 ], [ 28, %5 ], [ 29, %6 ], [ 34, %12 ], [ 37, %13 ], [ 38, %14 ], [ 39, %15 ], [ 40, %16 ], [ 42, %17 ], [ 43, %18 ], [ 44, %19 ], [ 45, %20 ], [ 47, %21 ], [ 50, %22 ], [ 53, %23 ], [ 54, %24 ], [ 26, %30 ], [ 60, %31 ], [ 69, %37 ], [ 77, %43 ], [ 80, %44 ], [ 82, %45 ], [ 83, %46 ], [ 84, %47 ], [ 88, %48 ], [ 90, %49 ], [ 93, %50 ], [ 103, %56 ], [ 104, %57 ], [ 106, %58 ], [ 49, %59 ], [ 94, %60 ], [ 27, %4 ], [ 33, %11 ], [ 57, %29 ], [ 64, %36 ], [ 75, %42 ], [ 102, %55 ]*/
if (((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_22_19) & (memory_controller_waitrequest == 1'd0)))
begin
cp50221_0212_ext_wctomb__thread_c_023_reg <= cp50221_0212_ext_wctomb__thread_c_023;
if (reset == 1'b0 && ^(cp50221_0212_ext_wctomb__thread_c_023) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cp50221_0212_ext_wctomb__thread_c_023_reg"); $finish; end
end
/* cp50221_0212_ext_wctomb: %.thread*/
/*   %c.023 = phi i8 [ %c.0, %69 ], [ 28, %5 ], [ 29, %6 ], [ 34, %12 ], [ 37, %13 ], [ 38, %14 ], [ 39, %15 ], [ 40, %16 ], [ 42, %17 ], [ 43, %18 ], [ 44, %19 ], [ 45, %20 ], [ 47, %21 ], [ 50, %22 ], [ 53, %23 ], [ 54, %24 ], [ 26, %30 ], [ 60, %31 ], [ 69, %37 ], [ 77, %43 ], [ 80, %44 ], [ 82, %45 ], [ 83, %46 ], [ 84, %47 ], [ 88, %48 ], [ 90, %49 ], [ 93, %50 ], [ 103, %56 ], [ 104, %57 ], [ 106, %58 ], [ 49, %59 ], [ 94, %60 ], [ 27, %4 ], [ 33, %11 ], [ 57, %29 ], [ 64, %36 ], [ 75, %42 ], [ 102, %55 ]*/
if (((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_23_20) & (memory_controller_waitrequest == 1'd0)))
begin
cp50221_0212_ext_wctomb__thread_c_023_reg <= cp50221_0212_ext_wctomb__thread_c_023;
if (reset == 1'b0 && ^(cp50221_0212_ext_wctomb__thread_c_023) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cp50221_0212_ext_wctomb__thread_c_023_reg"); $finish; end
end
/* cp50221_0212_ext_wctomb: %.thread*/
/*   %c.023 = phi i8 [ %c.0, %69 ], [ 28, %5 ], [ 29, %6 ], [ 34, %12 ], [ 37, %13 ], [ 38, %14 ], [ 39, %15 ], [ 40, %16 ], [ 42, %17 ], [ 43, %18 ], [ 44, %19 ], [ 45, %20 ], [ 47, %21 ], [ 50, %22 ], [ 53, %23 ], [ 54, %24 ], [ 26, %30 ], [ 60, %31 ], [ 69, %37 ], [ 77, %43 ], [ 80, %44 ], [ 82, %45 ], [ 83, %46 ], [ 84, %47 ], [ 88, %48 ], [ 90, %49 ], [ 93, %50 ], [ 103, %56 ], [ 104, %57 ], [ 106, %58 ], [ 49, %59 ], [ 94, %60 ], [ 27, %4 ], [ 33, %11 ], [ 57, %29 ], [ 64, %36 ], [ 75, %42 ], [ 102, %55 ]*/
if (((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_24_21) & (memory_controller_waitrequest == 1'd0)))
begin
cp50221_0212_ext_wctomb__thread_c_023_reg <= cp50221_0212_ext_wctomb__thread_c_023;
if (reset == 1'b0 && ^(cp50221_0212_ext_wctomb__thread_c_023) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cp50221_0212_ext_wctomb__thread_c_023_reg"); $finish; end
end
/* cp50221_0212_ext_wctomb: %.thread*/
/*   %c.023 = phi i8 [ %c.0, %69 ], [ 28, %5 ], [ 29, %6 ], [ 34, %12 ], [ 37, %13 ], [ 38, %14 ], [ 39, %15 ], [ 40, %16 ], [ 42, %17 ], [ 43, %18 ], [ 44, %19 ], [ 45, %20 ], [ 47, %21 ], [ 50, %22 ], [ 53, %23 ], [ 54, %24 ], [ 26, %30 ], [ 60, %31 ], [ 69, %37 ], [ 77, %43 ], [ 80, %44 ], [ 82, %45 ], [ 83, %46 ], [ 84, %47 ], [ 88, %48 ], [ 90, %49 ], [ 93, %50 ], [ 103, %56 ], [ 104, %57 ], [ 106, %58 ], [ 49, %59 ], [ 94, %60 ], [ 27, %4 ], [ 33, %11 ], [ 57, %29 ], [ 64, %36 ], [ 75, %42 ], [ 102, %55 ]*/
if ((((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_29_24) & (memory_controller_waitrequest == 1'd0)) & (arg_wc == 32'd28712)))
begin
cp50221_0212_ext_wctomb__thread_c_023_reg <= cp50221_0212_ext_wctomb__thread_c_023;
if (reset == 1'b0 && ^(cp50221_0212_ext_wctomb__thread_c_023) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cp50221_0212_ext_wctomb__thread_c_023_reg"); $finish; end
end
/* cp50221_0212_ext_wctomb: %.thread*/
/*   %c.023 = phi i8 [ %c.0, %69 ], [ 28, %5 ], [ 29, %6 ], [ 34, %12 ], [ 37, %13 ], [ 38, %14 ], [ 39, %15 ], [ 40, %16 ], [ 42, %17 ], [ 43, %18 ], [ 44, %19 ], [ 45, %20 ], [ 47, %21 ], [ 50, %22 ], [ 53, %23 ], [ 54, %24 ], [ 26, %30 ], [ 60, %31 ], [ 69, %37 ], [ 77, %43 ], [ 80, %44 ], [ 82, %45 ], [ 83, %46 ], [ 84, %47 ], [ 88, %48 ], [ 90, %49 ], [ 93, %50 ], [ 103, %56 ], [ 104, %57 ], [ 106, %58 ], [ 49, %59 ], [ 94, %60 ], [ 27, %4 ], [ 33, %11 ], [ 57, %29 ], [ 64, %36 ], [ 75, %42 ], [ 102, %55 ]*/
if (((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_30_25) & (memory_controller_waitrequest == 1'd0)))
begin
cp50221_0212_ext_wctomb__thread_c_023_reg <= cp50221_0212_ext_wctomb__thread_c_023;
if (reset == 1'b0 && ^(cp50221_0212_ext_wctomb__thread_c_023) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cp50221_0212_ext_wctomb__thread_c_023_reg"); $finish; end
end
/* cp50221_0212_ext_wctomb: %.thread*/
/*   %c.023 = phi i8 [ %c.0, %69 ], [ 28, %5 ], [ 29, %6 ], [ 34, %12 ], [ 37, %13 ], [ 38, %14 ], [ 39, %15 ], [ 40, %16 ], [ 42, %17 ], [ 43, %18 ], [ 44, %19 ], [ 45, %20 ], [ 47, %21 ], [ 50, %22 ], [ 53, %23 ], [ 54, %24 ], [ 26, %30 ], [ 60, %31 ], [ 69, %37 ], [ 77, %43 ], [ 80, %44 ], [ 82, %45 ], [ 83, %46 ], [ 84, %47 ], [ 88, %48 ], [ 90, %49 ], [ 93, %50 ], [ 103, %56 ], [ 104, %57 ], [ 106, %58 ], [ 49, %59 ], [ 94, %60 ], [ 27, %4 ], [ 33, %11 ], [ 57, %29 ], [ 64, %36 ], [ 75, %42 ], [ 102, %55 ]*/
if (((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_31_26) & (memory_controller_waitrequest == 1'd0)))
begin
cp50221_0212_ext_wctomb__thread_c_023_reg <= cp50221_0212_ext_wctomb__thread_c_023;
if (reset == 1'b0 && ^(cp50221_0212_ext_wctomb__thread_c_023) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cp50221_0212_ext_wctomb__thread_c_023_reg"); $finish; end
end
/* cp50221_0212_ext_wctomb: %.thread*/
/*   %c.023 = phi i8 [ %c.0, %69 ], [ 28, %5 ], [ 29, %6 ], [ 34, %12 ], [ 37, %13 ], [ 38, %14 ], [ 39, %15 ], [ 40, %16 ], [ 42, %17 ], [ 43, %18 ], [ 44, %19 ], [ 45, %20 ], [ 47, %21 ], [ 50, %22 ], [ 53, %23 ], [ 54, %24 ], [ 26, %30 ], [ 60, %31 ], [ 69, %37 ], [ 77, %43 ], [ 80, %44 ], [ 82, %45 ], [ 83, %46 ], [ 84, %47 ], [ 88, %48 ], [ 90, %49 ], [ 93, %50 ], [ 103, %56 ], [ 104, %57 ], [ 106, %58 ], [ 49, %59 ], [ 94, %60 ], [ 27, %4 ], [ 33, %11 ], [ 57, %29 ], [ 64, %36 ], [ 75, %42 ], [ 102, %55 ]*/
if ((((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_36_29) & (memory_controller_waitrequest == 1'd0)) & (arg_wc == 32'd31024)))
begin
cp50221_0212_ext_wctomb__thread_c_023_reg <= cp50221_0212_ext_wctomb__thread_c_023;
if (reset == 1'b0 && ^(cp50221_0212_ext_wctomb__thread_c_023) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cp50221_0212_ext_wctomb__thread_c_023_reg"); $finish; end
end
/* cp50221_0212_ext_wctomb: %.thread*/
/*   %c.023 = phi i8 [ %c.0, %69 ], [ 28, %5 ], [ 29, %6 ], [ 34, %12 ], [ 37, %13 ], [ 38, %14 ], [ 39, %15 ], [ 40, %16 ], [ 42, %17 ], [ 43, %18 ], [ 44, %19 ], [ 45, %20 ], [ 47, %21 ], [ 50, %22 ], [ 53, %23 ], [ 54, %24 ], [ 26, %30 ], [ 60, %31 ], [ 69, %37 ], [ 77, %43 ], [ 80, %44 ], [ 82, %45 ], [ 83, %46 ], [ 84, %47 ], [ 88, %48 ], [ 90, %49 ], [ 93, %50 ], [ 103, %56 ], [ 104, %57 ], [ 106, %58 ], [ 49, %59 ], [ 94, %60 ], [ 27, %4 ], [ 33, %11 ], [ 57, %29 ], [ 64, %36 ], [ 75, %42 ], [ 102, %55 ]*/
if (((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_37_30) & (memory_controller_waitrequest == 1'd0)))
begin
cp50221_0212_ext_wctomb__thread_c_023_reg <= cp50221_0212_ext_wctomb__thread_c_023;
if (reset == 1'b0 && ^(cp50221_0212_ext_wctomb__thread_c_023) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cp50221_0212_ext_wctomb__thread_c_023_reg"); $finish; end
end
/* cp50221_0212_ext_wctomb: %.thread*/
/*   %c.023 = phi i8 [ %c.0, %69 ], [ 28, %5 ], [ 29, %6 ], [ 34, %12 ], [ 37, %13 ], [ 38, %14 ], [ 39, %15 ], [ 40, %16 ], [ 42, %17 ], [ 43, %18 ], [ 44, %19 ], [ 45, %20 ], [ 47, %21 ], [ 50, %22 ], [ 53, %23 ], [ 54, %24 ], [ 26, %30 ], [ 60, %31 ], [ 69, %37 ], [ 77, %43 ], [ 80, %44 ], [ 82, %45 ], [ 83, %46 ], [ 84, %47 ], [ 88, %48 ], [ 90, %49 ], [ 93, %50 ], [ 103, %56 ], [ 104, %57 ], [ 106, %58 ], [ 49, %59 ], [ 94, %60 ], [ 27, %4 ], [ 33, %11 ], [ 57, %29 ], [ 64, %36 ], [ 75, %42 ], [ 102, %55 ]*/
if ((((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_42_33) & (memory_controller_waitrequest == 1'd0)) & (arg_wc == 32'd33634)))
begin
cp50221_0212_ext_wctomb__thread_c_023_reg <= cp50221_0212_ext_wctomb__thread_c_023;
if (reset == 1'b0 && ^(cp50221_0212_ext_wctomb__thread_c_023) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cp50221_0212_ext_wctomb__thread_c_023_reg"); $finish; end
end
/* cp50221_0212_ext_wctomb: %.thread*/
/*   %c.023 = phi i8 [ %c.0, %69 ], [ 28, %5 ], [ 29, %6 ], [ 34, %12 ], [ 37, %13 ], [ 38, %14 ], [ 39, %15 ], [ 40, %16 ], [ 42, %17 ], [ 43, %18 ], [ 44, %19 ], [ 45, %20 ], [ 47, %21 ], [ 50, %22 ], [ 53, %23 ], [ 54, %24 ], [ 26, %30 ], [ 60, %31 ], [ 69, %37 ], [ 77, %43 ], [ 80, %44 ], [ 82, %45 ], [ 83, %46 ], [ 84, %47 ], [ 88, %48 ], [ 90, %49 ], [ 93, %50 ], [ 103, %56 ], [ 104, %57 ], [ 106, %58 ], [ 49, %59 ], [ 94, %60 ], [ 27, %4 ], [ 33, %11 ], [ 57, %29 ], [ 64, %36 ], [ 75, %42 ], [ 102, %55 ]*/
if (((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_43_34) & (memory_controller_waitrequest == 1'd0)))
begin
cp50221_0212_ext_wctomb__thread_c_023_reg <= cp50221_0212_ext_wctomb__thread_c_023;
if (reset == 1'b0 && ^(cp50221_0212_ext_wctomb__thread_c_023) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cp50221_0212_ext_wctomb__thread_c_023_reg"); $finish; end
end
/* cp50221_0212_ext_wctomb: %.thread*/
/*   %c.023 = phi i8 [ %c.0, %69 ], [ 28, %5 ], [ 29, %6 ], [ 34, %12 ], [ 37, %13 ], [ 38, %14 ], [ 39, %15 ], [ 40, %16 ], [ 42, %17 ], [ 43, %18 ], [ 44, %19 ], [ 45, %20 ], [ 47, %21 ], [ 50, %22 ], [ 53, %23 ], [ 54, %24 ], [ 26, %30 ], [ 60, %31 ], [ 69, %37 ], [ 77, %43 ], [ 80, %44 ], [ 82, %45 ], [ 83, %46 ], [ 84, %47 ], [ 88, %48 ], [ 90, %49 ], [ 93, %50 ], [ 103, %56 ], [ 104, %57 ], [ 106, %58 ], [ 49, %59 ], [ 94, %60 ], [ 27, %4 ], [ 33, %11 ], [ 57, %29 ], [ 64, %36 ], [ 75, %42 ], [ 102, %55 ]*/
if (((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_44_35) & (memory_controller_waitrequest == 1'd0)))
begin
cp50221_0212_ext_wctomb__thread_c_023_reg <= cp50221_0212_ext_wctomb__thread_c_023;
if (reset == 1'b0 && ^(cp50221_0212_ext_wctomb__thread_c_023) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cp50221_0212_ext_wctomb__thread_c_023_reg"); $finish; end
end
/* cp50221_0212_ext_wctomb: %.thread*/
/*   %c.023 = phi i8 [ %c.0, %69 ], [ 28, %5 ], [ 29, %6 ], [ 34, %12 ], [ 37, %13 ], [ 38, %14 ], [ 39, %15 ], [ 40, %16 ], [ 42, %17 ], [ 43, %18 ], [ 44, %19 ], [ 45, %20 ], [ 47, %21 ], [ 50, %22 ], [ 53, %23 ], [ 54, %24 ], [ 26, %30 ], [ 60, %31 ], [ 69, %37 ], [ 77, %43 ], [ 80, %44 ], [ 82, %45 ], [ 83, %46 ], [ 84, %47 ], [ 88, %48 ], [ 90, %49 ], [ 93, %50 ], [ 103, %56 ], [ 104, %57 ], [ 106, %58 ], [ 49, %59 ], [ 94, %60 ], [ 27, %4 ], [ 33, %11 ], [ 57, %29 ], [ 64, %36 ], [ 75, %42 ], [ 102, %55 ]*/
if (((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_45_36) & (memory_controller_waitrequest == 1'd0)))
begin
cp50221_0212_ext_wctomb__thread_c_023_reg <= cp50221_0212_ext_wctomb__thread_c_023;
if (reset == 1'b0 && ^(cp50221_0212_ext_wctomb__thread_c_023) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cp50221_0212_ext_wctomb__thread_c_023_reg"); $finish; end
end
/* cp50221_0212_ext_wctomb: %.thread*/
/*   %c.023 = phi i8 [ %c.0, %69 ], [ 28, %5 ], [ 29, %6 ], [ 34, %12 ], [ 37, %13 ], [ 38, %14 ], [ 39, %15 ], [ 40, %16 ], [ 42, %17 ], [ 43, %18 ], [ 44, %19 ], [ 45, %20 ], [ 47, %21 ], [ 50, %22 ], [ 53, %23 ], [ 54, %24 ], [ 26, %30 ], [ 60, %31 ], [ 69, %37 ], [ 77, %43 ], [ 80, %44 ], [ 82, %45 ], [ 83, %46 ], [ 84, %47 ], [ 88, %48 ], [ 90, %49 ], [ 93, %50 ], [ 103, %56 ], [ 104, %57 ], [ 106, %58 ], [ 49, %59 ], [ 94, %60 ], [ 27, %4 ], [ 33, %11 ], [ 57, %29 ], [ 64, %36 ], [ 75, %42 ], [ 102, %55 ]*/
if (((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_46_37) & (memory_controller_waitrequest == 1'd0)))
begin
cp50221_0212_ext_wctomb__thread_c_023_reg <= cp50221_0212_ext_wctomb__thread_c_023;
if (reset == 1'b0 && ^(cp50221_0212_ext_wctomb__thread_c_023) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cp50221_0212_ext_wctomb__thread_c_023_reg"); $finish; end
end
/* cp50221_0212_ext_wctomb: %.thread*/
/*   %c.023 = phi i8 [ %c.0, %69 ], [ 28, %5 ], [ 29, %6 ], [ 34, %12 ], [ 37, %13 ], [ 38, %14 ], [ 39, %15 ], [ 40, %16 ], [ 42, %17 ], [ 43, %18 ], [ 44, %19 ], [ 45, %20 ], [ 47, %21 ], [ 50, %22 ], [ 53, %23 ], [ 54, %24 ], [ 26, %30 ], [ 60, %31 ], [ 69, %37 ], [ 77, %43 ], [ 80, %44 ], [ 82, %45 ], [ 83, %46 ], [ 84, %47 ], [ 88, %48 ], [ 90, %49 ], [ 93, %50 ], [ 103, %56 ], [ 104, %57 ], [ 106, %58 ], [ 49, %59 ], [ 94, %60 ], [ 27, %4 ], [ 33, %11 ], [ 57, %29 ], [ 64, %36 ], [ 75, %42 ], [ 102, %55 ]*/
if (((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_47_38) & (memory_controller_waitrequest == 1'd0)))
begin
cp50221_0212_ext_wctomb__thread_c_023_reg <= cp50221_0212_ext_wctomb__thread_c_023;
if (reset == 1'b0 && ^(cp50221_0212_ext_wctomb__thread_c_023) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cp50221_0212_ext_wctomb__thread_c_023_reg"); $finish; end
end
/* cp50221_0212_ext_wctomb: %.thread*/
/*   %c.023 = phi i8 [ %c.0, %69 ], [ 28, %5 ], [ 29, %6 ], [ 34, %12 ], [ 37, %13 ], [ 38, %14 ], [ 39, %15 ], [ 40, %16 ], [ 42, %17 ], [ 43, %18 ], [ 44, %19 ], [ 45, %20 ], [ 47, %21 ], [ 50, %22 ], [ 53, %23 ], [ 54, %24 ], [ 26, %30 ], [ 60, %31 ], [ 69, %37 ], [ 77, %43 ], [ 80, %44 ], [ 82, %45 ], [ 83, %46 ], [ 84, %47 ], [ 88, %48 ], [ 90, %49 ], [ 93, %50 ], [ 103, %56 ], [ 104, %57 ], [ 106, %58 ], [ 49, %59 ], [ 94, %60 ], [ 27, %4 ], [ 33, %11 ], [ 57, %29 ], [ 64, %36 ], [ 75, %42 ], [ 102, %55 ]*/
if (((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_48_39) & (memory_controller_waitrequest == 1'd0)))
begin
cp50221_0212_ext_wctomb__thread_c_023_reg <= cp50221_0212_ext_wctomb__thread_c_023;
if (reset == 1'b0 && ^(cp50221_0212_ext_wctomb__thread_c_023) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cp50221_0212_ext_wctomb__thread_c_023_reg"); $finish; end
end
/* cp50221_0212_ext_wctomb: %.thread*/
/*   %c.023 = phi i8 [ %c.0, %69 ], [ 28, %5 ], [ 29, %6 ], [ 34, %12 ], [ 37, %13 ], [ 38, %14 ], [ 39, %15 ], [ 40, %16 ], [ 42, %17 ], [ 43, %18 ], [ 44, %19 ], [ 45, %20 ], [ 47, %21 ], [ 50, %22 ], [ 53, %23 ], [ 54, %24 ], [ 26, %30 ], [ 60, %31 ], [ 69, %37 ], [ 77, %43 ], [ 80, %44 ], [ 82, %45 ], [ 83, %46 ], [ 84, %47 ], [ 88, %48 ], [ 90, %49 ], [ 93, %50 ], [ 103, %56 ], [ 104, %57 ], [ 106, %58 ], [ 49, %59 ], [ 94, %60 ], [ 27, %4 ], [ 33, %11 ], [ 57, %29 ], [ 64, %36 ], [ 75, %42 ], [ 102, %55 ]*/
if (((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_49_40) & (memory_controller_waitrequest == 1'd0)))
begin
cp50221_0212_ext_wctomb__thread_c_023_reg <= cp50221_0212_ext_wctomb__thread_c_023;
if (reset == 1'b0 && ^(cp50221_0212_ext_wctomb__thread_c_023) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cp50221_0212_ext_wctomb__thread_c_023_reg"); $finish; end
end
/* cp50221_0212_ext_wctomb: %.thread*/
/*   %c.023 = phi i8 [ %c.0, %69 ], [ 28, %5 ], [ 29, %6 ], [ 34, %12 ], [ 37, %13 ], [ 38, %14 ], [ 39, %15 ], [ 40, %16 ], [ 42, %17 ], [ 43, %18 ], [ 44, %19 ], [ 45, %20 ], [ 47, %21 ], [ 50, %22 ], [ 53, %23 ], [ 54, %24 ], [ 26, %30 ], [ 60, %31 ], [ 69, %37 ], [ 77, %43 ], [ 80, %44 ], [ 82, %45 ], [ 83, %46 ], [ 84, %47 ], [ 88, %48 ], [ 90, %49 ], [ 93, %50 ], [ 103, %56 ], [ 104, %57 ], [ 106, %58 ], [ 49, %59 ], [ 94, %60 ], [ 27, %4 ], [ 33, %11 ], [ 57, %29 ], [ 64, %36 ], [ 75, %42 ], [ 102, %55 ]*/
if (((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_50_41) & (memory_controller_waitrequest == 1'd0)))
begin
cp50221_0212_ext_wctomb__thread_c_023_reg <= cp50221_0212_ext_wctomb__thread_c_023;
if (reset == 1'b0 && ^(cp50221_0212_ext_wctomb__thread_c_023) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cp50221_0212_ext_wctomb__thread_c_023_reg"); $finish; end
end
/* cp50221_0212_ext_wctomb: %.thread*/
/*   %c.023 = phi i8 [ %c.0, %69 ], [ 28, %5 ], [ 29, %6 ], [ 34, %12 ], [ 37, %13 ], [ 38, %14 ], [ 39, %15 ], [ 40, %16 ], [ 42, %17 ], [ 43, %18 ], [ 44, %19 ], [ 45, %20 ], [ 47, %21 ], [ 50, %22 ], [ 53, %23 ], [ 54, %24 ], [ 26, %30 ], [ 60, %31 ], [ 69, %37 ], [ 77, %43 ], [ 80, %44 ], [ 82, %45 ], [ 83, %46 ], [ 84, %47 ], [ 88, %48 ], [ 90, %49 ], [ 93, %50 ], [ 103, %56 ], [ 104, %57 ], [ 106, %58 ], [ 49, %59 ], [ 94, %60 ], [ 27, %4 ], [ 33, %11 ], [ 57, %29 ], [ 64, %36 ], [ 75, %42 ], [ 102, %55 ]*/
if ((((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_55_44) & (memory_controller_waitrequest == 1'd0)) & (arg_wc == 32'd39326)))
begin
cp50221_0212_ext_wctomb__thread_c_023_reg <= cp50221_0212_ext_wctomb__thread_c_023;
if (reset == 1'b0 && ^(cp50221_0212_ext_wctomb__thread_c_023) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cp50221_0212_ext_wctomb__thread_c_023_reg"); $finish; end
end
/* cp50221_0212_ext_wctomb: %.thread*/
/*   %c.023 = phi i8 [ %c.0, %69 ], [ 28, %5 ], [ 29, %6 ], [ 34, %12 ], [ 37, %13 ], [ 38, %14 ], [ 39, %15 ], [ 40, %16 ], [ 42, %17 ], [ 43, %18 ], [ 44, %19 ], [ 45, %20 ], [ 47, %21 ], [ 50, %22 ], [ 53, %23 ], [ 54, %24 ], [ 26, %30 ], [ 60, %31 ], [ 69, %37 ], [ 77, %43 ], [ 80, %44 ], [ 82, %45 ], [ 83, %46 ], [ 84, %47 ], [ 88, %48 ], [ 90, %49 ], [ 93, %50 ], [ 103, %56 ], [ 104, %57 ], [ 106, %58 ], [ 49, %59 ], [ 94, %60 ], [ 27, %4 ], [ 33, %11 ], [ 57, %29 ], [ 64, %36 ], [ 75, %42 ], [ 102, %55 ]*/
if (((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_56_45) & (memory_controller_waitrequest == 1'd0)))
begin
cp50221_0212_ext_wctomb__thread_c_023_reg <= cp50221_0212_ext_wctomb__thread_c_023;
if (reset == 1'b0 && ^(cp50221_0212_ext_wctomb__thread_c_023) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cp50221_0212_ext_wctomb__thread_c_023_reg"); $finish; end
end
/* cp50221_0212_ext_wctomb: %.thread*/
/*   %c.023 = phi i8 [ %c.0, %69 ], [ 28, %5 ], [ 29, %6 ], [ 34, %12 ], [ 37, %13 ], [ 38, %14 ], [ 39, %15 ], [ 40, %16 ], [ 42, %17 ], [ 43, %18 ], [ 44, %19 ], [ 45, %20 ], [ 47, %21 ], [ 50, %22 ], [ 53, %23 ], [ 54, %24 ], [ 26, %30 ], [ 60, %31 ], [ 69, %37 ], [ 77, %43 ], [ 80, %44 ], [ 82, %45 ], [ 83, %46 ], [ 84, %47 ], [ 88, %48 ], [ 90, %49 ], [ 93, %50 ], [ 103, %56 ], [ 104, %57 ], [ 106, %58 ], [ 49, %59 ], [ 94, %60 ], [ 27, %4 ], [ 33, %11 ], [ 57, %29 ], [ 64, %36 ], [ 75, %42 ], [ 102, %55 ]*/
if (((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_57_46) & (memory_controller_waitrequest == 1'd0)))
begin
cp50221_0212_ext_wctomb__thread_c_023_reg <= cp50221_0212_ext_wctomb__thread_c_023;
if (reset == 1'b0 && ^(cp50221_0212_ext_wctomb__thread_c_023) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cp50221_0212_ext_wctomb__thread_c_023_reg"); $finish; end
end
/* cp50221_0212_ext_wctomb: %.thread*/
/*   %c.023 = phi i8 [ %c.0, %69 ], [ 28, %5 ], [ 29, %6 ], [ 34, %12 ], [ 37, %13 ], [ 38, %14 ], [ 39, %15 ], [ 40, %16 ], [ 42, %17 ], [ 43, %18 ], [ 44, %19 ], [ 45, %20 ], [ 47, %21 ], [ 50, %22 ], [ 53, %23 ], [ 54, %24 ], [ 26, %30 ], [ 60, %31 ], [ 69, %37 ], [ 77, %43 ], [ 80, %44 ], [ 82, %45 ], [ 83, %46 ], [ 84, %47 ], [ 88, %48 ], [ 90, %49 ], [ 93, %50 ], [ 103, %56 ], [ 104, %57 ], [ 106, %58 ], [ 49, %59 ], [ 94, %60 ], [ 27, %4 ], [ 33, %11 ], [ 57, %29 ], [ 64, %36 ], [ 75, %42 ], [ 102, %55 ]*/
if (((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_58_47) & (memory_controller_waitrequest == 1'd0)))
begin
cp50221_0212_ext_wctomb__thread_c_023_reg <= cp50221_0212_ext_wctomb__thread_c_023;
if (reset == 1'b0 && ^(cp50221_0212_ext_wctomb__thread_c_023) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cp50221_0212_ext_wctomb__thread_c_023_reg"); $finish; end
end
/* cp50221_0212_ext_wctomb: %.thread*/
/*   %c.023 = phi i8 [ %c.0, %69 ], [ 28, %5 ], [ 29, %6 ], [ 34, %12 ], [ 37, %13 ], [ 38, %14 ], [ 39, %15 ], [ 40, %16 ], [ 42, %17 ], [ 43, %18 ], [ 44, %19 ], [ 45, %20 ], [ 47, %21 ], [ 50, %22 ], [ 53, %23 ], [ 54, %24 ], [ 26, %30 ], [ 60, %31 ], [ 69, %37 ], [ 77, %43 ], [ 80, %44 ], [ 82, %45 ], [ 83, %46 ], [ 84, %47 ], [ 88, %48 ], [ 90, %49 ], [ 93, %50 ], [ 103, %56 ], [ 104, %57 ], [ 106, %58 ], [ 49, %59 ], [ 94, %60 ], [ 27, %4 ], [ 33, %11 ], [ 57, %29 ], [ 64, %36 ], [ 75, %42 ], [ 102, %55 ]*/
if (((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_59_48) & (memory_controller_waitrequest == 1'd0)))
begin
cp50221_0212_ext_wctomb__thread_c_023_reg <= cp50221_0212_ext_wctomb__thread_c_023;
if (reset == 1'b0 && ^(cp50221_0212_ext_wctomb__thread_c_023) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cp50221_0212_ext_wctomb__thread_c_023_reg"); $finish; end
end
/* cp50221_0212_ext_wctomb: %.thread*/
/*   %c.023 = phi i8 [ %c.0, %69 ], [ 28, %5 ], [ 29, %6 ], [ 34, %12 ], [ 37, %13 ], [ 38, %14 ], [ 39, %15 ], [ 40, %16 ], [ 42, %17 ], [ 43, %18 ], [ 44, %19 ], [ 45, %20 ], [ 47, %21 ], [ 50, %22 ], [ 53, %23 ], [ 54, %24 ], [ 26, %30 ], [ 60, %31 ], [ 69, %37 ], [ 77, %43 ], [ 80, %44 ], [ 82, %45 ], [ 83, %46 ], [ 84, %47 ], [ 88, %48 ], [ 90, %49 ], [ 93, %50 ], [ 103, %56 ], [ 104, %57 ], [ 106, %58 ], [ 49, %59 ], [ 94, %60 ], [ 27, %4 ], [ 33, %11 ], [ 57, %29 ], [ 64, %36 ], [ 75, %42 ], [ 102, %55 ]*/
if (((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_60_49) & (memory_controller_waitrequest == 1'd0)))
begin
cp50221_0212_ext_wctomb__thread_c_023_reg <= cp50221_0212_ext_wctomb__thread_c_023;
if (reset == 1'b0 && ^(cp50221_0212_ext_wctomb__thread_c_023) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cp50221_0212_ext_wctomb__thread_c_023_reg"); $finish; end
end
/* cp50221_0212_ext_wctomb: %.thread*/
/*   %c.023 = phi i8 [ %c.0, %69 ], [ 28, %5 ], [ 29, %6 ], [ 34, %12 ], [ 37, %13 ], [ 38, %14 ], [ 39, %15 ], [ 40, %16 ], [ 42, %17 ], [ 43, %18 ], [ 44, %19 ], [ 45, %20 ], [ 47, %21 ], [ 50, %22 ], [ 53, %23 ], [ 54, %24 ], [ 26, %30 ], [ 60, %31 ], [ 69, %37 ], [ 77, %43 ], [ 80, %44 ], [ 82, %45 ], [ 83, %46 ], [ 84, %47 ], [ 88, %48 ], [ 90, %49 ], [ 93, %50 ], [ 103, %56 ], [ 104, %57 ], [ 106, %58 ], [ 49, %59 ], [ 94, %60 ], [ 27, %4 ], [ 33, %11 ], [ 57, %29 ], [ 64, %36 ], [ 75, %42 ], [ 102, %55 ]*/
if ((((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_69_56) & (memory_controller_waitrequest == 1'd0)) & (cp50221_0212_ext_wctomb_69_70 == 1'd0)))
begin
cp50221_0212_ext_wctomb__thread_c_023_reg <= cp50221_0212_ext_wctomb__thread_c_023;
if (reset == 1'b0 && ^(cp50221_0212_ext_wctomb__thread_c_023) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cp50221_0212_ext_wctomb__thread_c_023_reg"); $finish; end
end
end
always @(*) begin
/* cp50221_0212_ext_wctomb: %.thread24*/
/*   %.0 = phi i32 [ 1, %.thread ], [ 0, %69 ], [ 0, %65 ]*/
if ((((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_65_52) & (memory_controller_waitrequest == 1'd0)) & (cp50221_0212_ext_wctomb_65_66 == 1'd0)))
begin
cp50221_0212_ext_wctomb__thread24__0 = 32'd0;
end
/* cp50221_0212_ext_wctomb: %.thread24*/
/*   %.0 = phi i32 [ 1, %.thread ], [ 0, %69 ], [ 0, %65 ]*/
else if ((((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_69_56) & (memory_controller_waitrequest == 1'd0)) & (cp50221_0212_ext_wctomb_69_70 == 1'd1)))
begin
cp50221_0212_ext_wctomb__thread24__0 = 32'd0;
end
/* cp50221_0212_ext_wctomb: %.thread24*/
/*   %.0 = phi i32 [ 1, %.thread ], [ 0, %69 ], [ 0, %65 ]*/
else /* if (((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB__thread_58) & (memory_controller_waitrequest == 1'd0))) */
begin
cp50221_0212_ext_wctomb__thread24__0 = 32'd1;
end
end
always @(posedge clk) begin
/* cp50221_0212_ext_wctomb: %.thread24*/
/*   %.0 = phi i32 [ 1, %.thread ], [ 0, %69 ], [ 0, %65 ]*/
if ((((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_65_52) & (memory_controller_waitrequest == 1'd0)) & (cp50221_0212_ext_wctomb_65_66 == 1'd0)))
begin
cp50221_0212_ext_wctomb__thread24__0_reg <= cp50221_0212_ext_wctomb__thread24__0;
if (reset == 1'b0 && ^(cp50221_0212_ext_wctomb__thread24__0) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cp50221_0212_ext_wctomb__thread24__0_reg"); $finish; end
end
/* cp50221_0212_ext_wctomb: %.thread24*/
/*   %.0 = phi i32 [ 1, %.thread ], [ 0, %69 ], [ 0, %65 ]*/
if ((((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_69_56) & (memory_controller_waitrequest == 1'd0)) & (cp50221_0212_ext_wctomb_69_70 == 1'd1)))
begin
cp50221_0212_ext_wctomb__thread24__0_reg <= cp50221_0212_ext_wctomb__thread24__0;
if (reset == 1'b0 && ^(cp50221_0212_ext_wctomb__thread24__0) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cp50221_0212_ext_wctomb__thread24__0_reg"); $finish; end
end
/* cp50221_0212_ext_wctomb: %.thread24*/
/*   %.0 = phi i32 [ 1, %.thread ], [ 0, %69 ], [ 0, %65 ]*/
if (((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB__thread_58) & (memory_controller_waitrequest == 1'd0)))
begin
cp50221_0212_ext_wctomb__thread24__0_reg <= cp50221_0212_ext_wctomb__thread24__0;
if (reset == 1'b0 && ^(cp50221_0212_ext_wctomb__thread24__0) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cp50221_0212_ext_wctomb__thread24__0_reg"); $finish; end
end
end
always @(posedge clk) begin
if ((cur_state == LEGUP_0))
begin
finish <= 1'd0;
if (reset == 1'b0 && ^(1'd0) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to finish"); $finish; end
end
/* cp50221_0212_ext_wctomb: %.thread24*/
/*   ret i32 %.0*/
if ((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB__thread24_59))
begin
finish <= (memory_controller_waitrequest == 1'd0);
if (reset == 1'b0 && ^((memory_controller_waitrequest == 1'd0)) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to finish"); $finish; end
end
end
always @(*) begin
memory_controller_enable_a = 1'd0;
if ((cur_state == LEGUP_0))
begin
memory_controller_enable_a = 1'd0;
end
/* cp50221_0212_ext_wctomb: %69*/
/*   %c.0 = load i8* %c.0.in, align 1*/
if ((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_69_54))
begin
memory_controller_enable_a = 1'd1;
end
/* cp50221_0212_ext_wctomb: %.thread*/
/*   store i8 %c.023, i8* %r, align 1, !tbaa !0*/
if ((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB__thread_57))
begin
memory_controller_enable_a = 1'd1;
end
end
always @(*) begin
memory_controller_address_a = 1'd0;
if ((cur_state == LEGUP_0))
begin
memory_controller_address_a = 1'd0;
end
/* cp50221_0212_ext_wctomb: %69*/
/*   %c.0 = load i8* %c.0.in, align 1*/
if ((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_69_54))
begin
memory_controller_address_a = cp50221_0212_ext_wctomb_69_c_0_in_reg;
end
/* cp50221_0212_ext_wctomb: %.thread*/
/*   store i8 %c.023, i8* %r, align 1, !tbaa !0*/
if ((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB__thread_57))
begin
memory_controller_address_a = arg_r;
end
end
always @(*) begin
memory_controller_write_enable_a = 1'd0;
if ((cur_state == LEGUP_0))
begin
memory_controller_write_enable_a = 1'd0;
end
/* cp50221_0212_ext_wctomb: %69*/
/*   %c.0 = load i8* %c.0.in, align 1*/
if ((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_69_54))
begin
memory_controller_write_enable_a = 1'd0;
end
/* cp50221_0212_ext_wctomb: %.thread*/
/*   store i8 %c.023, i8* %r, align 1, !tbaa !0*/
if ((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB__thread_57))
begin
memory_controller_write_enable_a = 1'd1;
end
end
always @(*) begin
memory_controller_in_a = 1'd0;
if ((cur_state == LEGUP_0))
begin
memory_controller_in_a = 1'd0;
end
/* cp50221_0212_ext_wctomb: %.thread*/
/*   store i8 %c.023, i8* %r, align 1, !tbaa !0*/
if ((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB__thread_57))
begin
memory_controller_in_a = cp50221_0212_ext_wctomb__thread_c_023_reg;
end
end
always @(*) begin
memory_controller_size_a = 1'd0;
if ((cur_state == LEGUP_0))
begin
memory_controller_size_a = 1'd0;
end
/* cp50221_0212_ext_wctomb: %69*/
/*   %c.0 = load i8* %c.0.in, align 1*/
if ((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB_69_54))
begin
memory_controller_size_a = 2'd0;
end
/* cp50221_0212_ext_wctomb: %.thread*/
/*   store i8 %c.023, i8* %r, align 1, !tbaa !0*/
if ((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB__thread_57))
begin
memory_controller_size_a = 2'd0;
end
end
always @(*) begin
memory_controller_enable_b = 1'd0;
if ((cur_state == LEGUP_0))
begin
memory_controller_enable_b = 1'd0;
end
end
always @(*) begin
memory_controller_address_b = 1'd0;
if ((cur_state == LEGUP_0))
begin
memory_controller_address_b = 1'd0;
end
end
always @(*) begin
memory_controller_write_enable_b = 1'd0;
if ((cur_state == LEGUP_0))
begin
memory_controller_write_enable_b = 1'd0;
end
end
always @(*) begin
memory_controller_in_b = 1'd0;
if ((cur_state == LEGUP_0))
begin
memory_controller_in_b = 1'd0;
end
end
always @(*) begin
memory_controller_size_b = 1'd0;
if ((cur_state == LEGUP_0))
begin
memory_controller_size_b = 1'd0;
end
end
always @(posedge clk) begin
if ((cur_state == LEGUP_0))
begin
return_val <= 0;
if (reset == 1'b0 && ^(0) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to return_val"); $finish; end
end
/* cp50221_0212_ext_wctomb: %.thread24*/
/*   ret i32 %.0*/
if ((cur_state == LEGUP_F_cp50221_0212_ext_wctomb_BB__thread24_59))
begin
return_val <= cp50221_0212_ext_wctomb__thread24__0_reg;
if (reset == 1'b0 && ^(cp50221_0212_ext_wctomb__thread24__0_reg) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to return_val"); $finish; end
end
end

endmodule 
`timescale 1 ns / 1 ns
module main
(
	clk,
	clk2x,
	clk1x_follower,
	reset,
	start,
	finish,
	memory_controller_enable_a,
	memory_controller_address_a,
	memory_controller_write_enable_a,
	memory_controller_in_a,
	memory_controller_size_a,
	memory_controller_out_a,
	memory_controller_enable_b,
	memory_controller_address_b,
	memory_controller_write_enable_b,
	memory_controller_in_b,
	memory_controller_size_b,
	memory_controller_out_b,
	memory_controller_waitrequest,
	return_val
);

parameter  LEGUP_0 = 1'd0;
parameter  LEGUP_F_main_BB_cp50221_0212_ext_wctomb_exit_1 = 1'd1;

input  clk;
input  clk2x;
input  clk1x_follower;
input  reset;
input  start;
output reg  finish;
output reg  memory_controller_enable_a;
output reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] memory_controller_address_a;
output reg  memory_controller_write_enable_a;
output reg [`MEMORY_CONTROLLER_DATA_SIZE-1:0] memory_controller_in_a;
output reg [1:0] memory_controller_size_a;
input [`MEMORY_CONTROLLER_DATA_SIZE-1:0] memory_controller_out_a;
output reg  memory_controller_enable_b;
output reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] memory_controller_address_b;
output reg  memory_controller_write_enable_b;
output reg [`MEMORY_CONTROLLER_DATA_SIZE-1:0] memory_controller_in_b;
output reg [1:0] memory_controller_size_b;
input [`MEMORY_CONTROLLER_DATA_SIZE-1:0] memory_controller_out_b;
input  memory_controller_waitrequest;
output reg [31:0] return_val;
reg  cur_state;
wire [15:0] legup_pthreadpoll_threadID;

// Local Rams


always @(posedge clk) begin
if (((cur_state == LEGUP_0) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_0;
if (reset == 1'b0 && ^(LEGUP_0) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_0) & (memory_controller_waitrequest == 1'd0)) & (start == 1'd1)))
begin
cur_state <= LEGUP_F_main_BB_cp50221_0212_ext_wctomb_exit_1;
if (reset == 1'b0 && ^(LEGUP_F_main_BB_cp50221_0212_ext_wctomb_exit_1) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((((cur_state == LEGUP_0) & (memory_controller_waitrequest == 1'd0)) & (start == 1'd0)))
begin
cur_state <= LEGUP_0;
if (reset == 1'b0 && ^(LEGUP_0) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_main_BB_cp50221_0212_ext_wctomb_exit_1) & (memory_controller_waitrequest == 1'd1)))
begin
cur_state <= LEGUP_F_main_BB_cp50221_0212_ext_wctomb_exit_1;
if (reset == 1'b0 && ^(LEGUP_F_main_BB_cp50221_0212_ext_wctomb_exit_1) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if (((cur_state == LEGUP_F_main_BB_cp50221_0212_ext_wctomb_exit_1) & (memory_controller_waitrequest == 1'd0)))
begin
cur_state <= LEGUP_0;
if (reset == 1'b0 && ^(LEGUP_0) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
if ((reset == 1'd1))
begin
cur_state <= 1'd0;
if (reset == 1'b0 && ^(1'd0) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to cur_state"); $finish; end
end
end
always @(posedge clk) begin
if ((cur_state == LEGUP_0))
begin
finish <= 1'd0;
if (reset == 1'b0 && ^(1'd0) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to finish"); $finish; end
end
/* main: %cp50221_0212_ext_wctomb.exit*/
/*   ret i32 0*/
if ((cur_state == LEGUP_F_main_BB_cp50221_0212_ext_wctomb_exit_1))
begin
finish <= (memory_controller_waitrequest == 1'd0);
if (reset == 1'b0 && ^((memory_controller_waitrequest == 1'd0)) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to finish"); $finish; end
end
end
always @(*) begin
memory_controller_enable_a = 1'd0;
if ((cur_state == LEGUP_0))
begin
memory_controller_enable_a = 1'd0;
end
end
always @(*) begin
memory_controller_address_a = 1'd0;
if ((cur_state == LEGUP_0))
begin
memory_controller_address_a = 1'd0;
end
end
always @(*) begin
memory_controller_write_enable_a = 1'd0;
if ((cur_state == LEGUP_0))
begin
memory_controller_write_enable_a = 1'd0;
end
end
always @(*) begin
memory_controller_in_a = 1'd0;
if ((cur_state == LEGUP_0))
begin
memory_controller_in_a = 1'd0;
end
end
always @(*) begin
memory_controller_size_a = 1'd0;
if ((cur_state == LEGUP_0))
begin
memory_controller_size_a = 1'd0;
end
end
always @(*) begin
memory_controller_enable_b = 1'd0;
if ((cur_state == LEGUP_0))
begin
memory_controller_enable_b = 1'd0;
end
end
always @(*) begin
memory_controller_address_b = 1'd0;
if ((cur_state == LEGUP_0))
begin
memory_controller_address_b = 1'd0;
end
end
always @(*) begin
memory_controller_write_enable_b = 1'd0;
if ((cur_state == LEGUP_0))
begin
memory_controller_write_enable_b = 1'd0;
end
end
always @(*) begin
memory_controller_in_b = 1'd0;
if ((cur_state == LEGUP_0))
begin
memory_controller_in_b = 1'd0;
end
end
always @(*) begin
memory_controller_size_b = 1'd0;
if ((cur_state == LEGUP_0))
begin
memory_controller_size_b = 1'd0;
end
end
always @(posedge clk) begin
if ((cur_state == LEGUP_0))
begin
return_val <= 0;
if (reset == 1'b0 && ^(0) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to return_val"); $finish; end
end
/* main: %cp50221_0212_ext_wctomb.exit*/
/*   ret i32 0*/
if ((cur_state == LEGUP_F_main_BB_cp50221_0212_ext_wctomb_exit_1))
begin
return_val <= 32'd0;
if (reset == 1'b0 && ^(32'd0) === 1'bX) begin $display ("ERROR: Right hand side is 'X'. Assigned to return_val"); $finish; end
end
end

endmodule 
module ram_dual_port
(
	clk,
	address_a,
	address_b,
	wren_a,
	wren_b,
	data_a,
	data_b,
	byteena_a,
	byteena_b,
	q_a,
	q_b
);

parameter  width_a = 1'd0;
parameter  width_b = 1'd0;
parameter  widthad_a = 1'd0;
parameter  widthad_b = 1'd0;
parameter  numwords_a = 1'd0;
parameter  numwords_b = 1'd0;
parameter  init_file = "UNUSED.mif";
parameter  width_be_a = 1'd0;
parameter  width_be_b = 1'd0;
parameter  latency = 1;

input  clk;
input [(widthad_a-1):0] address_a;
input [(widthad_b-1):0] address_b;
output wire [(width_a-1):0] q_a;
output wire [(width_b-1):0] q_b;
reg [(width_a-1):0] q_a_wire;
reg [(width_b-1):0] q_b_wire;
input  wren_a;
input  wren_b;
input [(width_a-1):0] data_a;
input [(width_b-1):0] data_b;
// byte enable is unsupported by inferred RAMs
input [width_be_a-1:0] byteena_a;
input [width_be_b-1:0] byteena_b;

(* ramstyle = "no_rw_check", ram_init_file = init_file *) reg [width_a-1:0] ram[numwords_a-1:0];

/* synthesis translate_off */
integer i;
ALTERA_MF_MEMORY_INITIALIZATION mem ();
reg [8*256:1] ram_ver_file;
initial begin
	if (init_file == "UNUSED.mif")
    begin
		for (i = 0; i < numwords_a; i = i + 1)
			ram[i] = 0;
    end
	else
    begin
        // modelsim can't read .mif files directly. So use Altera function to
        // convert them to .ver files
        mem.convert_to_ver_file(init_file, width_a, ram_ver_file);
        $readmemh(ram_ver_file, ram);
    end
end
/* synthesis translate_on */

always @ (posedge clk)
begin // Port A
if (wren_a)
begin
    ram[address_a] <= data_a;
    q_a_wire <= {width_a{1'bX}};
end
else
    q_a_wire <= ram[address_a];
end
always @ (posedge clk)
begin // Port b
if (wren_b)
begin
    ram[address_b] <= data_b;
    q_b_wire <= {width_b{1'bX}};
end
else
    q_b_wire <= ram[address_b];
end



integer j;
reg [(width_a-1):0] q_a_reg[latency:1], q_b_reg[latency:1];

always @(*)
begin
   q_a_reg[1] <= q_a_wire;
   q_b_reg[1] <= q_b_wire;
end

always @(posedge clk)
begin
   for (j = 1; j < latency; j=j+1)
   begin
       q_a_reg[j+1] <= q_a_reg[j];
       q_b_reg[j+1] <= q_b_reg[j];
   end
end

assign q_a = q_a_reg[latency];
assign q_b = q_b_reg[latency];


endmodule
module rom_dual_port
(
	clk,
	address_a,
	address_b,
	q_a,
	q_b
);

parameter  width_a = 1'd0;
parameter  width_b = 1'd0;
parameter  widthad_a = 1'd0;
parameter  widthad_b = 1'd0;
parameter  numwords_a = 1'd0;
parameter  numwords_b = 1'd0;
parameter  init_file = "UNUSED.mif";
parameter  latency = 1;

input  clk;
input [(widthad_a-1):0] address_a;
input [(widthad_b-1):0] address_b;
output wire [(width_a-1):0] q_a;
output wire [(width_b-1):0] q_b;
reg [(width_a-1):0] q_a_wire;
reg [(width_b-1):0] q_b_wire;

(* ramstyle = "no_rw_check", ram_init_file = init_file *) reg [width_a-1:0] ram[numwords_a-1:0];

/* synthesis translate_off */
integer i;
ALTERA_MF_MEMORY_INITIALIZATION mem ();
reg [8*256:1] ram_ver_file;
initial begin
	if (init_file == "UNUSED.mif")
    begin
		for (i = 0; i < numwords_a; i = i + 1)
			ram[i] = 0;
    end
	else
    begin
        // modelsim can't read .mif files directly. So use Altera function to
        // convert them to .ver files
        mem.convert_to_ver_file(init_file, width_a, ram_ver_file);
        $readmemh(ram_ver_file, ram);
    end
end
/* synthesis translate_on */

always @ (posedge clk)
begin
    q_a_wire <= ram[address_a];
    q_b_wire <= ram[address_b];
end



integer j;
reg [(width_a-1):0] q_a_reg[latency:1], q_b_reg[latency:1];

always @(*)
begin
   q_a_reg[1] <= q_a_wire;
   q_b_reg[1] <= q_b_wire;
end

always @(posedge clk)
begin
   for (j = 1; j < latency; j=j+1)
   begin
       q_a_reg[j+1] <= q_a_reg[j];
       q_b_reg[j+1] <= q_b_reg[j];
   end
end

assign q_a = q_a_reg[latency];
assign q_b = q_b_reg[latency];


endmodule
module de2 (CLOCK_50, KEY, SW, HEX0, HEX1, HEX2, HEX3, HEX4, HEX5, HEX6, HEX7, LEDG);
    input CLOCK_50;
    output [7:0] LEDG;
    input [3:0] KEY;
    input [17:0] SW;
    output [6:0] HEX0, HEX1, HEX2, HEX3, HEX4, HEX5, HEX6, HEX7;

    wire clk = CLOCK_50;
    wire reset = ~KEY[0];
    wire go = ~KEY[1];

    wire  start;
    wire [31:0] return_val;
    wire  finish;

    reg [31:0] return_val_reg;
    
	reg [3:0] hex0, hex1, hex2, hex3, hex4, hex5, hex6, hex7;
	always @ (*) begin
		hex7 <= return_val_reg[31:28];
		hex6 <= return_val_reg[27:24];
		hex5 <= return_val_reg[23:20];
		hex4 <= return_val_reg[19:16];
		hex3 <= return_val_reg[15:12];
		hex2 <= return_val_reg[11:8];
		hex1 <= return_val_reg[7:4];
		hex0 <= return_val_reg[3:0];
	end

    hex_digits h7( .x(hex7), .hex_LEDs(HEX7));
    hex_digits h6( .x(hex6), .hex_LEDs(HEX6));
    hex_digits h5( .x(hex5), .hex_LEDs(HEX5));
    hex_digits h4( .x(hex4), .hex_LEDs(HEX4));
    hex_digits h3( .x(hex3), .hex_LEDs(HEX3));
    hex_digits h2( .x(hex2), .hex_LEDs(HEX2));
    hex_digits h1( .x(hex1), .hex_LEDs(HEX1));
    hex_digits h0( .x(hex0), .hex_LEDs(HEX0));


    top top_inst (
        .clk (clk),
        .reset (reset),
        .start (start),
        .finish (finish),
        .return_val (return_val)
    );

    parameter s_WAIT = 3'b001, s_START = 3'b010, s_EXE = 3'b011,
                s_DONE = 3'b100;

    // state registers
    reg [3:0] y_Q, Y_D;

    assign LEDG[3:0] = y_Q;

    // next state
    always @(*)
    begin
        case (y_Q)
            s_WAIT: if (go) Y_D = s_START; else Y_D = y_Q;

            s_START: Y_D = s_EXE;

            s_EXE: if (!finish) Y_D = s_EXE; else Y_D = s_DONE;

            s_DONE: Y_D = s_DONE;

            default: Y_D = 3'bxxx;
        endcase
    end

    // current state
    always @(posedge clk)
    begin
        if (reset) // synchronous clear
            y_Q <= s_WAIT;
        else
            y_Q <= Y_D;
    end

    always @(posedge clk)
        if (y_Q == s_EXE && finish)
            return_val_reg <= return_val;
        else if (y_Q == s_DONE)
            return_val_reg <= return_val_reg;
        else
            return_val_reg <= 0;


    assign start = (y_Q == s_START);
endmodule

module de4 (
	OSC_50_BANK2,
    BUTTON,
    LED,
	SEG0_D,
	SEG1_D
);
    input OSC_50_BANK2;
    input [1:0] BUTTON;
    output [6:0] SEG0_D;
    output [6:0] SEG1_D;
    output [7:0] LED;

    de2 de2_inst (
        .CLOCK_50 (OSC_50_BANK2),
        .LEDG (LED),
        .KEY (BUTTON),
        .SW (),
        .HEX0 (SEG0_D),
        .HEX1 (SEG1_D),
        .HEX2 (),
        .HEX3 (),
        .HEX4 (),
        .HEX5 (),
        .HEX6 (),
        .HEX7 ()
    );

endmodule
module hex_digits(x, hex_LEDs);
    input [3:0] x;
    output [6:0] hex_LEDs;
    
    assign hex_LEDs[0] = (~x[3] & ~x[2] & ~x[1] & x[0]) |
                            (~x[3] & x[2] & ~x[1] & ~x[0]) |
                            (x[3] & x[2] & ~x[1] & x[0]) |
                            (x[3] & ~x[2] & x[1] & x[0]);
    assign hex_LEDs[1] = (~x[3] & x[2] & ~x[1] & x[0]) |
                            (x[3] & x[1] & x[0]) |
                            (x[3] & x[2] & ~x[0]) |
                            (x[2] & x[1] & ~x[0]);
    assign hex_LEDs[2] = (x[3] & x[2] & ~x[0]) |
                            (x[3] & x[2] & x[1]) |
                            (~x[3] & ~x[2] & x[1] & ~x[0]);
    assign hex_LEDs[3] = (~x[3] & ~x[2] & ~x[1] & x[0]) | 
                            (~x[3] & x[2] & ~x[1] & ~x[0]) | 
                            (x[2] & x[1] & x[0]) | 
                            (x[3] & ~x[2] & x[1] & ~x[0]);
    assign hex_LEDs[4] = (~x[3] & x[0]) |
                            (~x[3] & x[2] & ~x[1]) |
                            (~x[2] & ~x[1] & x[0]);
    assign hex_LEDs[5] = (~x[3] & ~x[2] & x[0]) | 
                            (~x[3] & ~x[2] & x[1]) | 
                            (~x[3] & x[1] & x[0]) | 
                            (x[3] & x[2] & ~x[1] & x[0]);
    assign hex_LEDs[6] = (~x[3] & ~x[2] & ~x[1]) | 
                            (x[3] & x[2] & ~x[1] & ~x[0]) | 
                            (~x[3] & x[2] & x[1] & x[0]);
    
endmodule
`timescale 1 ns / 1 ns
module main_tb
(
);

reg  clk;
reg  reset;
reg  start;
wire [31:0] return_val;
wire  finish;


top top_inst (
	.clk (clk),
	.reset (reset),
	.start (start),
	.finish (finish),
	.return_val (return_val)
);


// Local Rams



initial 
    clk = 0;
always @(clk)
    clk <= #10 ~clk;

initial begin
//$monitor("At t=%t clk=%b %b %b %b %d", $time, clk, reset, start, finish, return_val);
@(negedge clk);
reset <= 1;
@(negedge clk);
reset <= 0;
start <= 1;

end

always@(finish) begin
    if (finish == 1) begin
        $display("At t=%t clk=%b finish=%b return_val=%d", $time, clk, finish, return_val);
        $display("Cycles: %d", ($time-50)/20);
        $finish;
    end
end

endmodule 
