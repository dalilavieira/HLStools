// ----------------------------------------------------------------------------
// LegUp High-Level Synthesis Tool Version 7.5 (http://legupcomputing.com)
// Copyright (c) 2015-2019 LegUp Computing Inc. All Rights Reserved.
// For technical issues, please contact: support@legupcomputing.com
// For general inquiries, please contact: info@legupcomputing.com
// Date: Mon May  4 13:27:04 2020
// ----------------------------------------------------------------------------
Target FPGA: INTEL CycloneIV
Clock period constraint: 1.500000e+01ns
Start Function: main
state: LEGUP_0, basic block: BB_entry
   br label %for.cond1.preheader, !dbg !34, !MSB !37, !LSB !38, !extendFrom !37
   Transition: if (start): LEGUP_F_main_BB_for_cond1_preheader_1 default: LEGUP_0
state: LEGUP_F_main_BB_for_cond1_preheader_1, basic block: BB_for_cond1_preheader
   %i.014 = phi i32 [ 0, %entry ], [ %1, %for.inc5 ], !MSB !39, !LSB !38, !extendFrom !39 (endState: LEGUP_F_main_BB_for_cond1_preheader_1)
   br label %for.body3, !dbg !40, !MSB !37, !LSB !38, !extendFrom !37
   Transition: default: LEGUP_F_main_BB_for_body3_2
state: LEGUP_F_main_BB_for_body3_2, basic block: BB_for_body3
   %j.013 = phi i32 [ 0, %for.cond1.preheader ], [ %0, %for.body3 ], !MSB !43, !LSB !38, !extendFrom !43 (endState: LEGUP_F_main_BB_for_body3_2)
   %0 = add nsw i32 %j.013, 1, !dbg !47, !MSB !43, !LSB !38, !extendFrom !43 (endState: LEGUP_F_main_BB_for_body3_2)
   %exitcond2 = icmp eq i32 %0, 100, !dbg !40, !MSB !38, !LSB !38, !extendFrom !38 (endState: LEGUP_F_main_BB_for_body3_2)
   Transition: default: LEGUP_function_call_3
state: LEGUP_function_call_3, basic block: BB_for_body3
   %call = tail call i32 @random() #2, !dbg !44, !parents1 !46, !MSB !43, !LSB !38, !extendFrom !43 (endState: LEGUP_function_call_3)
   Transition: if (random_finish): LEGUP_F_main_BB_for_body3_4 default: LEGUP_function_call_3
state: LEGUP_F_main_BB_for_body3_4, basic block: BB_for_body3
   br i1 %exitcond2, label %for.inc5, label %for.body3, !dbg !40, !MSB !37, !LSB !38, !extendFrom !37
   Transition: if (%exitcond2): LEGUP_F_main_BB_for_inc5_5 default: LEGUP_F_main_BB_for_body3_2
state: LEGUP_F_main_BB_for_inc5_5, basic block: BB_for_inc5
   %1 = add nsw i32 %i.014, 1, !dbg !48, !MSB !49, !LSB !38, !extendFrom !49 (endState: LEGUP_F_main_BB_for_inc5_5)
   %exitcond = icmp eq i32 %1, 100, !dbg !34, !MSB !38, !LSB !38, !extendFrom !38 (endState: LEGUP_F_main_BB_for_inc5_5)
   br i1 %exitcond, label %sobel.exit, label %for.cond1.preheader, !dbg !34, !MSB !37, !LSB !38, !extendFrom !37
   Transition: if (%exitcond): LEGUP_F_main_BB_sobel_exit_6 default: LEGUP_F_main_BB_for_cond1_preheader_1
state: LEGUP_F_main_BB_sobel_exit_6, basic block: BB_sobel_exit
   ret i32 0, !dbg !50, !MSB !37, !LSB !38, !extendFrom !37
   Transition: default: LEGUP_0

Basic Block: %entry Num States: 1
Basic Block: %for.cond1.preheader Num States: 1
Basic Block: %for.body3 Num States: 3
Basic Block: %for.inc5 Num States: 1
Basic Block: %sobel.exit Num States: 1
End Function: main
--------------------------------------------------------------------------------

