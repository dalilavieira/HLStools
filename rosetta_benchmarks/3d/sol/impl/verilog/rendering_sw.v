// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="rendering_sw,hls_ip_2019_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7k160t-fbg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.702000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=39,HLS_SYN_DSP=3,HLS_SYN_FF=1316,HLS_SYN_LUT=2493,HLS_VERSION=2019_1}" *)

module rendering_sw (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        triangle_3ds_x0_address0,
        triangle_3ds_x0_ce0,
        triangle_3ds_x0_q0,
        triangle_3ds_y0_address0,
        triangle_3ds_y0_ce0,
        triangle_3ds_y0_q0,
        triangle_3ds_z0_address0,
        triangle_3ds_z0_ce0,
        triangle_3ds_z0_q0,
        triangle_3ds_x1_address0,
        triangle_3ds_x1_ce0,
        triangle_3ds_x1_q0,
        triangle_3ds_y1_address0,
        triangle_3ds_y1_ce0,
        triangle_3ds_y1_q0,
        triangle_3ds_z1_address0,
        triangle_3ds_z1_ce0,
        triangle_3ds_z1_q0,
        triangle_3ds_x2_address0,
        triangle_3ds_x2_ce0,
        triangle_3ds_x2_q0,
        triangle_3ds_y2_address0,
        triangle_3ds_y2_ce0,
        triangle_3ds_y2_q0,
        triangle_3ds_z2_address0,
        triangle_3ds_z2_ce0,
        triangle_3ds_z2_q0,
        output_r_address0,
        output_r_ce0,
        output_r_we0,
        output_r_d0
);

parameter    ap_ST_fsm_state1 = 29'd1;
parameter    ap_ST_fsm_state2 = 29'd2;
parameter    ap_ST_fsm_state3 = 29'd4;
parameter    ap_ST_fsm_state4 = 29'd8;
parameter    ap_ST_fsm_state5 = 29'd16;
parameter    ap_ST_fsm_state6 = 29'd32;
parameter    ap_ST_fsm_state7 = 29'd64;
parameter    ap_ST_fsm_state8 = 29'd128;
parameter    ap_ST_fsm_state9 = 29'd256;
parameter    ap_ST_fsm_state10 = 29'd512;
parameter    ap_ST_fsm_state11 = 29'd1024;
parameter    ap_ST_fsm_state12 = 29'd2048;
parameter    ap_ST_fsm_state13 = 29'd4096;
parameter    ap_ST_fsm_state14 = 29'd8192;
parameter    ap_ST_fsm_state15 = 29'd16384;
parameter    ap_ST_fsm_state16 = 29'd32768;
parameter    ap_ST_fsm_state17 = 29'd65536;
parameter    ap_ST_fsm_state18 = 29'd131072;
parameter    ap_ST_fsm_state19 = 29'd262144;
parameter    ap_ST_fsm_state20 = 29'd524288;
parameter    ap_ST_fsm_state21 = 29'd1048576;
parameter    ap_ST_fsm_state22 = 29'd2097152;
parameter    ap_ST_fsm_state23 = 29'd4194304;
parameter    ap_ST_fsm_state24 = 29'd8388608;
parameter    ap_ST_fsm_state25 = 29'd16777216;
parameter    ap_ST_fsm_state26 = 29'd33554432;
parameter    ap_ST_fsm_state27 = 29'd67108864;
parameter    ap_ST_fsm_state28 = 29'd134217728;
parameter    ap_ST_fsm_state29 = 29'd268435456;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [11:0] triangle_3ds_x0_address0;
output   triangle_3ds_x0_ce0;
input  [7:0] triangle_3ds_x0_q0;
output  [11:0] triangle_3ds_y0_address0;
output   triangle_3ds_y0_ce0;
input  [7:0] triangle_3ds_y0_q0;
output  [11:0] triangle_3ds_z0_address0;
output   triangle_3ds_z0_ce0;
input  [7:0] triangle_3ds_z0_q0;
output  [11:0] triangle_3ds_x1_address0;
output   triangle_3ds_x1_ce0;
input  [7:0] triangle_3ds_x1_q0;
output  [11:0] triangle_3ds_y1_address0;
output   triangle_3ds_y1_ce0;
input  [7:0] triangle_3ds_y1_q0;
output  [11:0] triangle_3ds_z1_address0;
output   triangle_3ds_z1_ce0;
input  [7:0] triangle_3ds_z1_q0;
output  [11:0] triangle_3ds_x2_address0;
output   triangle_3ds_x2_ce0;
input  [7:0] triangle_3ds_x2_q0;
output  [11:0] triangle_3ds_y2_address0;
output   triangle_3ds_y2_ce0;
input  [7:0] triangle_3ds_y2_q0;
output  [11:0] triangle_3ds_z2_address0;
output   triangle_3ds_z2_ce0;
input  [7:0] triangle_3ds_z2_q0;
output  [15:0] output_r_address0;
output   output_r_ce0;
output   output_r_we0;
output  [7:0] output_r_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg triangle_3ds_x0_ce0;
reg triangle_3ds_y0_ce0;
reg triangle_3ds_z0_ce0;
reg triangle_3ds_x1_ce0;
reg triangle_3ds_y1_ce0;
reg triangle_3ds_z1_ce0;
reg triangle_3ds_x2_ce0;
reg triangle_3ds_y2_ce0;
reg triangle_3ds_z2_ce0;

(* fsm_encoding = "none" *) reg   [28:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [11:0] i_1_fu_378_p2;
reg   [11:0] i_1_reg_1090;
wire    ap_CS_fsm_state2;
wire   [0:0] icmp_ln276_fu_372_p2;
reg   [7:0] triangle_2ds_x0_reg_1140;
wire    ap_CS_fsm_state3;
reg   [7:0] triangle_2ds_y0_reg_1146;
reg   [7:0] triangle_2ds_x1_reg_1152;
reg   [7:0] triangle_2ds_y1_reg_1158;
reg   [7:0] triangle_2ds_x2_reg_1164;
reg   [7:0] triangle_2ds_y2_reg_1176;
wire   [7:0] triangle_2ds_z_fu_463_p2;
reg   [7:0] triangle_2ds_z_reg_1188;
wire   [8:0] zext_ln24_fu_469_p1;
reg   [8:0] zext_ln24_reg_1193;
wire   [8:0] zext_ln24_1_fu_473_p1;
reg   [8:0] zext_ln24_1_reg_1200;
wire   [8:0] zext_ln24_2_fu_487_p1;
reg   [8:0] zext_ln24_2_reg_1206;
wire   [8:0] zext_ln24_3_fu_491_p1;
reg   [8:0] zext_ln24_3_reg_1212;
wire  signed [17:0] sext_ln24_1_fu_501_p1;
reg  signed [17:0] sext_ln24_1_reg_1218;
wire   [8:0] zext_ln24_4_fu_515_p1;
reg   [8:0] zext_ln24_4_reg_1223;
wire   [8:0] zext_ln24_5_fu_529_p1;
reg   [8:0] zext_ln24_5_reg_1230;
wire  signed [17:0] sext_ln24_3_fu_539_p1;
reg  signed [17:0] sext_ln24_3_reg_1236;
wire   [0:0] flag_fu_559_p2;
reg   [0:0] flag_reg_1241;
reg   [0:0] tmp_reg_1249;
wire   [7:0] max_min_2_fu_809_p3;
reg   [7:0] max_min_2_reg_1257;
wire    ap_CS_fsm_state4;
wire   [31:0] max_index_0_fu_823_p3;
reg   [31:0] max_index_0_reg_1262;
wire   [7:0] max_min_0_fu_830_p3;
reg   [7:0] max_min_0_reg_1267;
wire   [15:0] zext_ln58_fu_857_p1;
reg   [15:0] zext_ln58_reg_1272;
wire  signed [17:0] sext_ln59_fu_865_p1;
reg  signed [17:0] sext_ln59_reg_1278;
wire  signed [17:0] sext_ln59_1_fu_873_p1;
reg  signed [17:0] sext_ln59_1_reg_1283;
wire  signed [17:0] sext_ln60_fu_881_p1;
reg  signed [17:0] sext_ln60_reg_1288;
wire  signed [17:0] sext_ln60_1_fu_889_p1;
reg  signed [17:0] sext_ln60_1_reg_1293;
wire   [15:0] k_fu_902_p2;
reg   [15:0] k_reg_1301;
wire    ap_CS_fsm_state5;
wire   [7:0] x_fu_922_p2;
reg   [7:0] x_reg_1306;
wire    ap_CS_fsm_state24;
wire   [7:0] y_fu_931_p2;
reg   [7:0] y_reg_1311;
wire   [17:0] mul_ln58_fu_949_p2;
reg   [17:0] mul_ln58_reg_1316;
wire   [8:0] sub_ln58_1_fu_958_p2;
reg  signed [8:0] sub_ln58_1_reg_1321;
wire   [17:0] mul_ln59_fu_972_p2;
reg   [17:0] mul_ln59_reg_1326;
wire   [8:0] sub_ln59_3_fu_977_p2;
reg  signed [8:0] sub_ln59_3_reg_1331;
wire   [17:0] mul_ln60_fu_991_p2;
reg   [17:0] mul_ln60_reg_1336;
wire   [8:0] sub_ln60_3_fu_996_p2;
reg  signed [8:0] sub_ln60_3_reg_1341;
wire   [31:0] grp_zculling_fu_343_ap_return;
reg   [31:0] size_pixels_reg_1349;
wire    ap_CS_fsm_state27;
wire    grp_zculling_fu_343_ap_ready;
wire    grp_zculling_fu_343_ap_done;
reg   [8:0] fragment_x_address0;
reg    fragment_x_ce0;
reg    fragment_x_we0;
wire   [7:0] fragment_x_q0;
reg   [8:0] fragment_y_address0;
reg    fragment_y_ce0;
reg    fragment_y_we0;
wire   [7:0] fragment_y_q0;
reg   [8:0] fragment_z_address0;
reg    fragment_z_ce0;
reg    fragment_z_we0;
wire   [7:0] fragment_z_q0;
reg   [8:0] fragment_color_address0;
reg    fragment_color_ce0;
reg    fragment_color_we0;
wire   [7:0] fragment_color_q0;
reg   [8:0] pixels_x_address0;
reg    pixels_x_ce0;
reg    pixels_x_we0;
wire   [7:0] pixels_x_q0;
reg   [8:0] pixels_y_address0;
reg    pixels_y_ce0;
reg    pixels_y_we0;
wire   [7:0] pixels_y_q0;
reg   [8:0] pixels_color_address0;
reg    pixels_color_ce0;
reg    pixels_color_we0;
wire   [7:0] pixels_color_q0;
wire    grp_zculling_fu_343_ap_start;
wire    grp_zculling_fu_343_ap_idle;
wire   [8:0] grp_zculling_fu_343_fragments_x_address0;
wire    grp_zculling_fu_343_fragments_x_ce0;
wire   [8:0] grp_zculling_fu_343_fragments_y_address0;
wire    grp_zculling_fu_343_fragments_y_ce0;
wire   [8:0] grp_zculling_fu_343_fragments_z_address0;
wire    grp_zculling_fu_343_fragments_z_ce0;
wire   [8:0] grp_zculling_fu_343_fragments_color_address0;
wire    grp_zculling_fu_343_fragments_color_ce0;
wire   [8:0] grp_zculling_fu_343_pixels_x_address0;
wire    grp_zculling_fu_343_pixels_x_ce0;
wire    grp_zculling_fu_343_pixels_x_we0;
wire   [7:0] grp_zculling_fu_343_pixels_x_d0;
wire   [8:0] grp_zculling_fu_343_pixels_y_address0;
wire    grp_zculling_fu_343_pixels_y_ce0;
wire    grp_zculling_fu_343_pixels_y_we0;
wire   [7:0] grp_zculling_fu_343_pixels_y_d0;
wire   [8:0] grp_zculling_fu_343_pixels_color_address0;
wire    grp_zculling_fu_343_pixels_color_ce0;
wire    grp_zculling_fu_343_pixels_color_we0;
wire   [7:0] grp_zculling_fu_343_pixels_color_d0;
wire    grp_coloringFB_fu_360_ap_start;
wire    grp_coloringFB_fu_360_ap_done;
wire    grp_coloringFB_fu_360_ap_idle;
wire    grp_coloringFB_fu_360_ap_ready;
wire   [8:0] grp_coloringFB_fu_360_pixels_x_address0;
wire    grp_coloringFB_fu_360_pixels_x_ce0;
wire   [8:0] grp_coloringFB_fu_360_pixels_y_address0;
wire    grp_coloringFB_fu_360_pixels_y_ce0;
wire   [8:0] grp_coloringFB_fu_360_pixels_color_address0;
wire    grp_coloringFB_fu_360_pixels_color_ce0;
wire   [15:0] grp_coloringFB_fu_360_frame_buffer_address0;
wire    grp_coloringFB_fu_360_frame_buffer_ce0;
wire    grp_coloringFB_fu_360_frame_buffer_we0;
wire   [7:0] grp_coloringFB_fu_360_frame_buffer_d0;
reg   [11:0] i_0_reg_282;
wire    ap_CS_fsm_state29;
reg  signed [31:0] i_0_i_reg_294;
reg   [31:0] ap_phi_mux_i_0_i_be_phi_fu_322_p4;
wire    ap_CS_fsm_state25;
reg   [15:0] k_0_i_reg_306;
wire   [31:0] i_fu_1035_p2;
wire   [0:0] tmp_1_fu_1019_p3;
reg   [31:0] size_fragment_reg_330;
wire   [0:0] icmp_ln181_fu_897_p2;
reg    grp_zculling_fu_343_ap_start_reg;
wire    ap_CS_fsm_state26;
reg    grp_coloringFB_fu_360_ap_start_reg;
wire    ap_CS_fsm_state28;
wire   [63:0] zext_ln279_fu_384_p1;
wire  signed [63:0] sext_ln188_fu_1027_p1;
reg   [7:0] max_min_0_read_assi_fu_72;
reg   [7:0] max_min_2_read_assi_fu_76;
reg   [7:0] max_min_4_read_assi_fu_80;
wire   [7:0] max_min_4_fu_816_p3;
reg   [31:0] max_index_0_1_fu_84;
wire   [7:0] mul_ln121_fu_401_p1;
wire   [17:0] mul_ln121_fu_401_p2;
wire   [7:0] mul_ln121_1_fu_421_p1;
wire   [17:0] mul_ln121_1_fu_421_p2;
wire   [7:0] mul_ln121_2_fu_441_p1;
wire   [17:0] mul_ln121_2_fu_441_p2;
wire   [7:0] udiv_ln121_2_fu_447_p4;
wire   [7:0] udiv_ln121_1_fu_427_p4;
wire   [7:0] udiv_ln_fu_407_p4;
wire   [7:0] add_ln121_fu_457_p2;
wire   [8:0] sub_ln24_fu_477_p2;
wire   [8:0] sub_ln24_1_fu_495_p2;
wire  signed [8:0] mul_ln24_fu_505_p0;
wire  signed [8:0] mul_ln24_fu_505_p1;
wire   [17:0] mul_ln24_fu_505_p2;
wire   [8:0] sub_ln24_2_fu_519_p2;
wire   [8:0] sub_ln24_3_fu_533_p2;
wire  signed [8:0] mul_ln24_1_fu_543_p0;
wire  signed [8:0] mul_ln24_1_fu_543_p1;
wire   [17:0] mul_ln24_1_fu_543_p2;
wire   [16:0] trunc_ln24_fu_511_p1;
wire   [16:0] trunc_ln24_1_fu_549_p1;
wire   [17:0] cw_fu_553_p2;
wire   [7:0] select_ln153_fu_585_p3;
wire   [7:0] select_ln153_2_fu_595_p3;
wire   [0:0] icmp_ln70_fu_611_p2;
wire   [0:0] icmp_ln77_fu_623_p2;
wire   [0:0] icmp_ln68_fu_605_p2;
wire   [7:0] select_ln70_fu_616_p3;
wire   [7:0] select_ln77_fu_628_p3;
wire   [0:0] icmp_ln90_fu_649_p2;
wire   [0:0] icmp_ln97_fu_661_p2;
wire   [0:0] icmp_ln88_fu_643_p2;
wire   [7:0] select_ln90_fu_654_p3;
wire   [7:0] select_ln97_fu_666_p3;
wire   [7:0] select_ln153_1_fu_590_p3;
wire   [7:0] select_ln153_3_fu_600_p3;
wire   [0:0] icmp_ln70_1_fu_687_p2;
wire   [0:0] icmp_ln77_1_fu_699_p2;
wire   [0:0] icmp_ln68_1_fu_681_p2;
wire   [7:0] select_ln70_1_fu_692_p3;
wire   [7:0] select_ln77_1_fu_704_p3;
wire   [0:0] icmp_ln90_1_fu_725_p2;
wire   [0:0] icmp_ln97_1_fu_737_p2;
wire   [0:0] icmp_ln88_1_fu_719_p2;
wire   [7:0] select_ln90_1_fu_730_p3;
wire   [7:0] select_ln97_1_fu_742_p3;
wire   [7:0] select_ln88_fu_673_p3;
wire   [7:0] select_ln68_fu_635_p3;
wire   [8:0] zext_ln164_fu_763_p1;
wire   [8:0] zext_ln164_1_fu_767_p1;
wire   [8:0] sub_ln164_fu_771_p2;
wire   [7:0] select_ln88_1_fu_749_p3;
wire   [7:0] select_ln68_1_fu_711_p3;
wire   [8:0] zext_ln164_2_fu_781_p1;
wire   [8:0] zext_ln164_3_fu_785_p1;
wire   [8:0] sub_ln164_1_fu_789_p2;
wire  signed [8:0] mul_ln164_fu_799_p0;
wire  signed [8:0] mul_ln164_fu_799_p1;
wire   [17:0] mul_ln164_fu_799_p2;
wire   [7:0] sub_ln161_fu_757_p2;
wire  signed [31:0] sext_ln164_2_fu_805_p1;
wire   [8:0] sub_ln59_fu_861_p2;
wire   [8:0] sub_ln59_1_fu_869_p2;
wire   [8:0] sub_ln60_fu_877_p2;
wire   [8:0] sub_ln60_1_fu_885_p2;
wire   [31:0] zext_ln181_fu_893_p1;
wire   [7:0] grp_fu_908_p1;
wire   [7:0] grp_fu_913_p1;
wire   [7:0] grp_fu_908_p2;
wire   [7:0] trunc_ln183_fu_918_p1;
wire   [7:0] grp_fu_913_p2;
wire   [7:0] trunc_ln184_fu_927_p1;
wire   [8:0] zext_ln58_1_fu_936_p1;
wire   [8:0] sub_ln58_fu_940_p2;
wire  signed [8:0] mul_ln58_fu_949_p0;
wire  signed [8:0] mul_ln58_fu_949_p1;
wire   [8:0] zext_ln58_2_fu_954_p1;
wire   [8:0] sub_ln59_2_fu_963_p2;
wire  signed [8:0] mul_ln59_fu_972_p0;
wire  signed [8:0] mul_ln59_fu_972_p1;
wire   [8:0] sub_ln60_2_fu_982_p2;
wire  signed [8:0] mul_ln60_fu_991_p0;
wire  signed [8:0] mul_ln60_fu_991_p1;
wire  signed [17:0] grp_fu_1042_p3;
wire  signed [17:0] grp_fu_1049_p3;
wire   [17:0] or_ln62_fu_1010_p2;
wire  signed [17:0] grp_fu_1056_p3;
wire   [17:0] or_ln62_1_fu_1014_p2;
wire  signed [8:0] grp_fu_1042_p1;
wire  signed [8:0] grp_fu_1049_p1;
wire  signed [8:0] grp_fu_1056_p1;
reg    grp_fu_908_ap_start;
wire    grp_fu_908_ap_done;
reg    grp_fu_913_ap_start;
wire    grp_fu_913_ap_done;
reg   [28:0] ap_NS_fsm;
wire   [17:0] mul_ln121_1_fu_421_p10;
wire   [17:0] mul_ln121_2_fu_441_p10;
wire   [17:0] mul_ln121_fu_401_p10;

// power-on initialization
initial begin
#0 ap_CS_fsm = 29'd1;
#0 grp_zculling_fu_343_ap_start_reg = 1'b0;
#0 grp_coloringFB_fu_360_ap_start_reg = 1'b0;
end

rendering_sw_fragment_x #(
    .DataWidth( 8 ),
    .AddressRange( 500 ),
    .AddressWidth( 9 ))
fragment_x_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(fragment_x_address0),
    .ce0(fragment_x_ce0),
    .we0(fragment_x_we0),
    .d0(x_reg_1306),
    .q0(fragment_x_q0)
);

rendering_sw_fragment_x #(
    .DataWidth( 8 ),
    .AddressRange( 500 ),
    .AddressWidth( 9 ))
fragment_y_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(fragment_y_address0),
    .ce0(fragment_y_ce0),
    .we0(fragment_y_we0),
    .d0(y_reg_1311),
    .q0(fragment_y_q0)
);

rendering_sw_fragment_x #(
    .DataWidth( 8 ),
    .AddressRange( 500 ),
    .AddressWidth( 9 ))
fragment_z_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(fragment_z_address0),
    .ce0(fragment_z_ce0),
    .we0(fragment_z_we0),
    .d0(triangle_2ds_z_reg_1188),
    .q0(fragment_z_q0)
);

rendering_sw_fragment_x #(
    .DataWidth( 8 ),
    .AddressRange( 500 ),
    .AddressWidth( 9 ))
fragment_color_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(fragment_color_address0),
    .ce0(fragment_color_ce0),
    .we0(fragment_color_we0),
    .d0(8'd100),
    .q0(fragment_color_q0)
);

rendering_sw_fragment_x #(
    .DataWidth( 8 ),
    .AddressRange( 500 ),
    .AddressWidth( 9 ))
pixels_x_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(pixels_x_address0),
    .ce0(pixels_x_ce0),
    .we0(pixels_x_we0),
    .d0(grp_zculling_fu_343_pixels_x_d0),
    .q0(pixels_x_q0)
);

rendering_sw_fragment_x #(
    .DataWidth( 8 ),
    .AddressRange( 500 ),
    .AddressWidth( 9 ))
pixels_y_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(pixels_y_address0),
    .ce0(pixels_y_ce0),
    .we0(pixels_y_we0),
    .d0(grp_zculling_fu_343_pixels_y_d0),
    .q0(pixels_y_q0)
);

rendering_sw_fragment_x #(
    .DataWidth( 8 ),
    .AddressRange( 500 ),
    .AddressWidth( 9 ))
pixels_color_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(pixels_color_address0),
    .ce0(pixels_color_ce0),
    .we0(pixels_color_we0),
    .d0(grp_zculling_fu_343_pixels_color_d0),
    .q0(pixels_color_q0)
);

zculling grp_zculling_fu_343(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_zculling_fu_343_ap_start),
    .ap_done(grp_zculling_fu_343_ap_done),
    .ap_idle(grp_zculling_fu_343_ap_idle),
    .ap_ready(grp_zculling_fu_343_ap_ready),
    .counter(i_0_reg_282),
    .fragments_x_address0(grp_zculling_fu_343_fragments_x_address0),
    .fragments_x_ce0(grp_zculling_fu_343_fragments_x_ce0),
    .fragments_x_q0(fragment_x_q0),
    .fragments_y_address0(grp_zculling_fu_343_fragments_y_address0),
    .fragments_y_ce0(grp_zculling_fu_343_fragments_y_ce0),
    .fragments_y_q0(fragment_y_q0),
    .fragments_z_address0(grp_zculling_fu_343_fragments_z_address0),
    .fragments_z_ce0(grp_zculling_fu_343_fragments_z_ce0),
    .fragments_z_q0(fragment_z_q0),
    .fragments_color_address0(grp_zculling_fu_343_fragments_color_address0),
    .fragments_color_ce0(grp_zculling_fu_343_fragments_color_ce0),
    .fragments_color_q0(fragment_color_q0),
    .size(size_fragment_reg_330),
    .pixels_x_address0(grp_zculling_fu_343_pixels_x_address0),
    .pixels_x_ce0(grp_zculling_fu_343_pixels_x_ce0),
    .pixels_x_we0(grp_zculling_fu_343_pixels_x_we0),
    .pixels_x_d0(grp_zculling_fu_343_pixels_x_d0),
    .pixels_y_address0(grp_zculling_fu_343_pixels_y_address0),
    .pixels_y_ce0(grp_zculling_fu_343_pixels_y_ce0),
    .pixels_y_we0(grp_zculling_fu_343_pixels_y_we0),
    .pixels_y_d0(grp_zculling_fu_343_pixels_y_d0),
    .pixels_color_address0(grp_zculling_fu_343_pixels_color_address0),
    .pixels_color_ce0(grp_zculling_fu_343_pixels_color_ce0),
    .pixels_color_we0(grp_zculling_fu_343_pixels_color_we0),
    .pixels_color_d0(grp_zculling_fu_343_pixels_color_d0),
    .ap_return(grp_zculling_fu_343_ap_return)
);

coloringFB grp_coloringFB_fu_360(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_coloringFB_fu_360_ap_start),
    .ap_done(grp_coloringFB_fu_360_ap_done),
    .ap_idle(grp_coloringFB_fu_360_ap_idle),
    .ap_ready(grp_coloringFB_fu_360_ap_ready),
    .counter(i_0_reg_282),
    .size_pixels(size_pixels_reg_1349),
    .pixels_x_address0(grp_coloringFB_fu_360_pixels_x_address0),
    .pixels_x_ce0(grp_coloringFB_fu_360_pixels_x_ce0),
    .pixels_x_q0(pixels_x_q0),
    .pixels_y_address0(grp_coloringFB_fu_360_pixels_y_address0),
    .pixels_y_ce0(grp_coloringFB_fu_360_pixels_y_ce0),
    .pixels_y_q0(pixels_y_q0),
    .pixels_color_address0(grp_coloringFB_fu_360_pixels_color_address0),
    .pixels_color_ce0(grp_coloringFB_fu_360_pixels_color_ce0),
    .pixels_color_q0(pixels_color_q0),
    .frame_buffer_address0(grp_coloringFB_fu_360_frame_buffer_address0),
    .frame_buffer_ce0(grp_coloringFB_fu_360_frame_buffer_ce0),
    .frame_buffer_we0(grp_coloringFB_fu_360_frame_buffer_we0),
    .frame_buffer_d0(grp_coloringFB_fu_360_frame_buffer_d0)
);

rendering_sw_urem_16ns_8ns_8_20_seq_1 #(
    .ID( 1 ),
    .NUM_STAGE( 20 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
rendering_sw_urem_16ns_8ns_8_20_seq_1_U17(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_908_ap_start),
    .done(grp_fu_908_ap_done),
    .din0(k_0_i_reg_306),
    .din1(grp_fu_908_p1),
    .ce(1'b1),
    .dout(grp_fu_908_p2)
);

rendering_sw_udiv_16ns_8ns_8_20_seq_1 #(
    .ID( 1 ),
    .NUM_STAGE( 20 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
rendering_sw_udiv_16ns_8ns_8_20_seq_1_U18(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_913_ap_start),
    .done(grp_fu_913_ap_done),
    .din0(k_0_i_reg_306),
    .din1(grp_fu_913_p1),
    .ce(1'b1),
    .dout(grp_fu_913_p2)
);

rendering_sw_mac_mulsub_9s_9s_18ns_18_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 9 ),
    .din2_WIDTH( 18 ),
    .dout_WIDTH( 18 ))
rendering_sw_mac_mulsub_9s_9s_18ns_18_1_1_U19(
    .din0(sub_ln58_1_reg_1321),
    .din1(grp_fu_1042_p1),
    .din2(mul_ln58_reg_1316),
    .dout(grp_fu_1042_p3)
);

rendering_sw_mac_mulsub_9s_9s_18ns_18_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 9 ),
    .din2_WIDTH( 18 ),
    .dout_WIDTH( 18 ))
rendering_sw_mac_mulsub_9s_9s_18ns_18_1_1_U20(
    .din0(sub_ln59_3_reg_1331),
    .din1(grp_fu_1049_p1),
    .din2(mul_ln59_reg_1326),
    .dout(grp_fu_1049_p3)
);

rendering_sw_mac_mulsub_9s_9s_18ns_18_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 9 ),
    .din2_WIDTH( 18 ),
    .dout_WIDTH( 18 ))
rendering_sw_mac_mulsub_9s_9s_18ns_18_1_1_U21(
    .din0(sub_ln60_3_reg_1341),
    .din1(grp_fu_1056_p1),
    .din2(mul_ln60_reg_1336),
    .dout(grp_fu_1056_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_coloringFB_fu_360_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state28)) begin
            grp_coloringFB_fu_360_ap_start_reg <= 1'b1;
        end else if ((grp_coloringFB_fu_360_ap_ready == 1'b1)) begin
            grp_coloringFB_fu_360_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_zculling_fu_343_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state26)) begin
            grp_zculling_fu_343_ap_start_reg <= 1'b1;
        end else if ((grp_zculling_fu_343_ap_ready == 1'b1)) begin
            grp_zculling_fu_343_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        i_0_i_reg_294 <= ap_phi_mux_i_0_i_be_phi_fu_322_p4;
    end else if (((1'b1 == ap_CS_fsm_state4) & (flag_reg_1241 == 1'd0))) begin
        i_0_i_reg_294 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_coloringFB_fu_360_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state29))) begin
        i_0_reg_282 <= i_1_reg_1090;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        i_0_reg_282 <= 12'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        k_0_i_reg_306 <= k_reg_1301;
    end else if (((1'b1 == ap_CS_fsm_state4) & (flag_reg_1241 == 1'd0))) begin
        k_0_i_reg_306 <= 16'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln181_fu_897_p2 == 1'd0))) begin
        size_fragment_reg_330 <= i_0_i_reg_294;
    end else if (((1'b1 == ap_CS_fsm_state4) & (flag_reg_1241 == 1'd1))) begin
        size_fragment_reg_330 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        flag_reg_1241 <= flag_fu_559_p2;
        sext_ln24_1_reg_1218 <= sext_ln24_1_fu_501_p1;
        sext_ln24_3_reg_1236 <= sext_ln24_3_fu_539_p1;
        tmp_reg_1249 <= cw_fu_553_p2[32'd17];
        triangle_2ds_x0_reg_1140 <= triangle_3ds_x0_q0;
        triangle_2ds_x1_reg_1152 <= triangle_3ds_x1_q0;
        triangle_2ds_x2_reg_1164 <= triangle_3ds_x2_q0;
        triangle_2ds_y0_reg_1146 <= triangle_3ds_y0_q0;
        triangle_2ds_y1_reg_1158 <= triangle_3ds_y1_q0;
        triangle_2ds_y2_reg_1176 <= triangle_3ds_y2_q0;
        triangle_2ds_z_reg_1188 <= triangle_2ds_z_fu_463_p2;
        zext_ln24_1_reg_1200[7 : 0] <= zext_ln24_1_fu_473_p1[7 : 0];
        zext_ln24_2_reg_1206[7 : 0] <= zext_ln24_2_fu_487_p1[7 : 0];
        zext_ln24_3_reg_1212[7 : 0] <= zext_ln24_3_fu_491_p1[7 : 0];
        zext_ln24_4_reg_1223[7 : 0] <= zext_ln24_4_fu_515_p1[7 : 0];
        zext_ln24_5_reg_1230[7 : 0] <= zext_ln24_5_fu_529_p1[7 : 0];
        zext_ln24_reg_1193[7 : 0] <= zext_ln24_fu_469_p1[7 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        i_1_reg_1090 <= i_1_fu_378_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        k_reg_1301 <= k_fu_902_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        max_index_0_1_fu_84 <= max_index_0_fu_823_p3;
        max_index_0_reg_1262 <= max_index_0_fu_823_p3;
        max_min_0_read_assi_fu_72 <= max_min_0_fu_830_p3;
        max_min_0_reg_1267 <= max_min_0_fu_830_p3;
        max_min_2_read_assi_fu_76 <= max_min_2_fu_809_p3;
        max_min_2_reg_1257 <= max_min_2_fu_809_p3;
        max_min_4_read_assi_fu_80 <= max_min_4_fu_816_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        mul_ln58_reg_1316 <= mul_ln58_fu_949_p2;
        mul_ln59_reg_1326 <= mul_ln59_fu_972_p2;
        mul_ln60_reg_1336 <= mul_ln60_fu_991_p2;
        sub_ln58_1_reg_1321 <= sub_ln58_1_fu_958_p2;
        sub_ln59_3_reg_1331 <= sub_ln59_3_fu_977_p2;
        sub_ln60_3_reg_1341 <= sub_ln60_3_fu_996_p2;
        x_reg_1306 <= x_fu_922_p2;
        y_reg_1311 <= y_fu_931_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (flag_reg_1241 == 1'd0))) begin
        sext_ln59_1_reg_1283 <= sext_ln59_1_fu_873_p1;
        sext_ln59_reg_1278 <= sext_ln59_fu_865_p1;
        sext_ln60_1_reg_1293 <= sext_ln60_1_fu_889_p1;
        sext_ln60_reg_1288 <= sext_ln60_fu_881_p1;
        zext_ln58_reg_1272[7 : 0] <= zext_ln58_fu_857_p1[7 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((grp_zculling_fu_343_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state27))) begin
        size_pixels_reg_1349 <= grp_zculling_fu_343_ap_return;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln276_fu_372_p2 == 1'd1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        if ((tmp_1_fu_1019_p3 == 1'd1)) begin
            ap_phi_mux_i_0_i_be_phi_fu_322_p4 = i_0_i_reg_294;
        end else if ((tmp_1_fu_1019_p3 == 1'd0)) begin
            ap_phi_mux_i_0_i_be_phi_fu_322_p4 = i_fu_1035_p2;
        end else begin
            ap_phi_mux_i_0_i_be_phi_fu_322_p4 = 'bx;
        end
    end else begin
        ap_phi_mux_i_0_i_be_phi_fu_322_p4 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln276_fu_372_p2 == 1'd1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        fragment_color_address0 = sext_ln188_fu_1027_p1;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        fragment_color_address0 = grp_zculling_fu_343_fragments_color_address0;
    end else begin
        fragment_color_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        fragment_color_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        fragment_color_ce0 = grp_zculling_fu_343_fragments_color_ce0;
    end else begin
        fragment_color_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state25) & (tmp_1_fu_1019_p3 == 1'd0))) begin
        fragment_color_we0 = 1'b1;
    end else begin
        fragment_color_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        fragment_x_address0 = sext_ln188_fu_1027_p1;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        fragment_x_address0 = grp_zculling_fu_343_fragments_x_address0;
    end else begin
        fragment_x_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        fragment_x_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        fragment_x_ce0 = grp_zculling_fu_343_fragments_x_ce0;
    end else begin
        fragment_x_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state25) & (tmp_1_fu_1019_p3 == 1'd0))) begin
        fragment_x_we0 = 1'b1;
    end else begin
        fragment_x_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        fragment_y_address0 = sext_ln188_fu_1027_p1;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        fragment_y_address0 = grp_zculling_fu_343_fragments_y_address0;
    end else begin
        fragment_y_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        fragment_y_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        fragment_y_ce0 = grp_zculling_fu_343_fragments_y_ce0;
    end else begin
        fragment_y_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state25) & (tmp_1_fu_1019_p3 == 1'd0))) begin
        fragment_y_we0 = 1'b1;
    end else begin
        fragment_y_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        fragment_z_address0 = sext_ln188_fu_1027_p1;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        fragment_z_address0 = grp_zculling_fu_343_fragments_z_address0;
    end else begin
        fragment_z_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        fragment_z_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        fragment_z_ce0 = grp_zculling_fu_343_fragments_z_ce0;
    end else begin
        fragment_z_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state25) & (tmp_1_fu_1019_p3 == 1'd0))) begin
        fragment_z_we0 = 1'b1;
    end else begin
        fragment_z_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln181_fu_897_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        grp_fu_908_ap_start = 1'b1;
    end else begin
        grp_fu_908_ap_start = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln181_fu_897_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        grp_fu_913_ap_start = 1'b1;
    end else begin
        grp_fu_913_ap_start = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        pixels_color_address0 = grp_coloringFB_fu_360_pixels_color_address0;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        pixels_color_address0 = grp_zculling_fu_343_pixels_color_address0;
    end else begin
        pixels_color_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        pixels_color_ce0 = grp_coloringFB_fu_360_pixels_color_ce0;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        pixels_color_ce0 = grp_zculling_fu_343_pixels_color_ce0;
    end else begin
        pixels_color_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        pixels_color_we0 = grp_zculling_fu_343_pixels_color_we0;
    end else begin
        pixels_color_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        pixels_x_address0 = grp_coloringFB_fu_360_pixels_x_address0;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        pixels_x_address0 = grp_zculling_fu_343_pixels_x_address0;
    end else begin
        pixels_x_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        pixels_x_ce0 = grp_coloringFB_fu_360_pixels_x_ce0;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        pixels_x_ce0 = grp_zculling_fu_343_pixels_x_ce0;
    end else begin
        pixels_x_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        pixels_x_we0 = grp_zculling_fu_343_pixels_x_we0;
    end else begin
        pixels_x_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        pixels_y_address0 = grp_coloringFB_fu_360_pixels_y_address0;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        pixels_y_address0 = grp_zculling_fu_343_pixels_y_address0;
    end else begin
        pixels_y_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        pixels_y_ce0 = grp_coloringFB_fu_360_pixels_y_ce0;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        pixels_y_ce0 = grp_zculling_fu_343_pixels_y_ce0;
    end else begin
        pixels_y_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        pixels_y_we0 = grp_zculling_fu_343_pixels_y_we0;
    end else begin
        pixels_y_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        triangle_3ds_x0_ce0 = 1'b1;
    end else begin
        triangle_3ds_x0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        triangle_3ds_x1_ce0 = 1'b1;
    end else begin
        triangle_3ds_x1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        triangle_3ds_x2_ce0 = 1'b1;
    end else begin
        triangle_3ds_x2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        triangle_3ds_y0_ce0 = 1'b1;
    end else begin
        triangle_3ds_y0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        triangle_3ds_y1_ce0 = 1'b1;
    end else begin
        triangle_3ds_y1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        triangle_3ds_y2_ce0 = 1'b1;
    end else begin
        triangle_3ds_y2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        triangle_3ds_z0_ce0 = 1'b1;
    end else begin
        triangle_3ds_z0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        triangle_3ds_z1_ce0 = 1'b1;
    end else begin
        triangle_3ds_z1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        triangle_3ds_z2_ce0 = 1'b1;
    end else begin
        triangle_3ds_z2_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln276_fu_372_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if (((1'b1 == ap_CS_fsm_state4) & (flag_reg_1241 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end
        end
        ap_ST_fsm_state5 : begin
            if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln181_fu_897_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            if (((grp_zculling_fu_343_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state27))) begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            if (((grp_coloringFB_fu_360_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state29))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln121_fu_457_p2 = (udiv_ln121_2_fu_447_p4 + udiv_ln121_1_fu_427_p4);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign cw_fu_553_p2 = (mul_ln24_fu_505_p2 - mul_ln24_1_fu_543_p2);

assign flag_fu_559_p2 = ((trunc_ln24_fu_511_p1 == trunc_ln24_1_fu_549_p1) ? 1'b1 : 1'b0);

assign grp_coloringFB_fu_360_ap_start = grp_coloringFB_fu_360_ap_start_reg;

assign grp_fu_1042_p1 = sext_ln24_3_reg_1236;

assign grp_fu_1049_p1 = sext_ln59_1_reg_1283;

assign grp_fu_1056_p1 = sext_ln60_1_reg_1293;

assign grp_fu_908_p1 = zext_ln58_reg_1272;

assign grp_fu_913_p1 = zext_ln58_reg_1272;

assign grp_zculling_fu_343_ap_start = grp_zculling_fu_343_ap_start_reg;

assign i_1_fu_378_p2 = (i_0_reg_282 + 12'd1);

assign i_fu_1035_p2 = ($signed(i_0_i_reg_294) + $signed(32'd1));

assign icmp_ln181_fu_897_p2 = (($signed(zext_ln181_fu_893_p1) < $signed(max_index_0_reg_1262)) ? 1'b1 : 1'b0);

assign icmp_ln276_fu_372_p2 = ((i_0_reg_282 == 12'd3192) ? 1'b1 : 1'b0);

assign icmp_ln68_1_fu_681_p2 = ((select_ln153_1_fu_590_p3 < select_ln153_3_fu_600_p3) ? 1'b1 : 1'b0);

assign icmp_ln68_fu_605_p2 = ((select_ln153_fu_585_p3 < select_ln153_2_fu_595_p3) ? 1'b1 : 1'b0);

assign icmp_ln70_1_fu_687_p2 = ((select_ln153_1_fu_590_p3 < triangle_2ds_y2_reg_1176) ? 1'b1 : 1'b0);

assign icmp_ln70_fu_611_p2 = ((select_ln153_fu_585_p3 < triangle_2ds_x2_reg_1164) ? 1'b1 : 1'b0);

assign icmp_ln77_1_fu_699_p2 = ((select_ln153_3_fu_600_p3 < triangle_2ds_y2_reg_1176) ? 1'b1 : 1'b0);

assign icmp_ln77_fu_623_p2 = ((select_ln153_2_fu_595_p3 < triangle_2ds_x2_reg_1164) ? 1'b1 : 1'b0);

assign icmp_ln88_1_fu_719_p2 = ((select_ln153_1_fu_590_p3 > select_ln153_3_fu_600_p3) ? 1'b1 : 1'b0);

assign icmp_ln88_fu_643_p2 = ((select_ln153_fu_585_p3 > select_ln153_2_fu_595_p3) ? 1'b1 : 1'b0);

assign icmp_ln90_1_fu_725_p2 = ((select_ln153_1_fu_590_p3 > triangle_2ds_y2_reg_1176) ? 1'b1 : 1'b0);

assign icmp_ln90_fu_649_p2 = ((select_ln153_fu_585_p3 > triangle_2ds_x2_reg_1164) ? 1'b1 : 1'b0);

assign icmp_ln97_1_fu_737_p2 = ((select_ln153_3_fu_600_p3 > triangle_2ds_y2_reg_1176) ? 1'b1 : 1'b0);

assign icmp_ln97_fu_661_p2 = ((select_ln153_2_fu_595_p3 > triangle_2ds_x2_reg_1164) ? 1'b1 : 1'b0);

assign k_fu_902_p2 = (k_0_i_reg_306 + 16'd1);

assign max_index_0_fu_823_p3 = ((flag_reg_1241[0:0] === 1'b1) ? max_index_0_1_fu_84 : sext_ln164_2_fu_805_p1);

assign max_min_0_fu_830_p3 = ((flag_reg_1241[0:0] === 1'b1) ? max_min_0_read_assi_fu_72 : select_ln68_fu_635_p3);

assign max_min_2_fu_809_p3 = ((flag_reg_1241[0:0] === 1'b1) ? max_min_2_read_assi_fu_76 : select_ln68_1_fu_711_p3);

assign max_min_4_fu_816_p3 = ((flag_reg_1241[0:0] === 1'b1) ? max_min_4_read_assi_fu_80 : sub_ln161_fu_757_p2);

assign mul_ln121_1_fu_421_p1 = mul_ln121_1_fu_421_p10;

assign mul_ln121_1_fu_421_p10 = triangle_3ds_z1_q0;

assign mul_ln121_1_fu_421_p2 = (18'd342 * mul_ln121_1_fu_421_p1);

assign mul_ln121_2_fu_441_p1 = mul_ln121_2_fu_441_p10;

assign mul_ln121_2_fu_441_p10 = triangle_3ds_z2_q0;

assign mul_ln121_2_fu_441_p2 = (18'd342 * mul_ln121_2_fu_441_p1);

assign mul_ln121_fu_401_p1 = mul_ln121_fu_401_p10;

assign mul_ln121_fu_401_p10 = triangle_3ds_z0_q0;

assign mul_ln121_fu_401_p2 = (18'd342 * mul_ln121_fu_401_p1);

assign mul_ln164_fu_799_p0 = sub_ln164_fu_771_p2;

assign mul_ln164_fu_799_p1 = sub_ln164_1_fu_789_p2;

assign mul_ln164_fu_799_p2 = ($signed(mul_ln164_fu_799_p0) * $signed(mul_ln164_fu_799_p1));

assign mul_ln24_1_fu_543_p0 = sub_ln24_2_fu_519_p2;

assign mul_ln24_1_fu_543_p1 = sub_ln24_3_fu_533_p2;

assign mul_ln24_1_fu_543_p2 = ($signed(mul_ln24_1_fu_543_p0) * $signed(mul_ln24_1_fu_543_p1));

assign mul_ln24_fu_505_p0 = sub_ln24_fu_477_p2;

assign mul_ln24_fu_505_p1 = sub_ln24_1_fu_495_p2;

assign mul_ln24_fu_505_p2 = ($signed(mul_ln24_fu_505_p0) * $signed(mul_ln24_fu_505_p1));

assign mul_ln58_fu_949_p0 = sub_ln58_fu_940_p2;

assign mul_ln58_fu_949_p1 = sext_ln24_1_reg_1218;

assign mul_ln58_fu_949_p2 = ($signed(mul_ln58_fu_949_p0) * $signed(mul_ln58_fu_949_p1));

assign mul_ln59_fu_972_p0 = sub_ln59_2_fu_963_p2;

assign mul_ln59_fu_972_p1 = sext_ln59_reg_1278;

assign mul_ln59_fu_972_p2 = ($signed(mul_ln59_fu_972_p0) * $signed(mul_ln59_fu_972_p1));

assign mul_ln60_fu_991_p0 = sext_ln60_reg_1288;

assign mul_ln60_fu_991_p1 = sub_ln60_2_fu_982_p2;

assign mul_ln60_fu_991_p2 = ($signed(mul_ln60_fu_991_p0) * $signed(mul_ln60_fu_991_p1));

assign or_ln62_1_fu_1014_p2 = (or_ln62_fu_1010_p2 | grp_fu_1056_p3);

assign or_ln62_fu_1010_p2 = (grp_fu_1049_p3 | grp_fu_1042_p3);

assign output_r_address0 = grp_coloringFB_fu_360_frame_buffer_address0;

assign output_r_ce0 = grp_coloringFB_fu_360_frame_buffer_ce0;

assign output_r_d0 = grp_coloringFB_fu_360_frame_buffer_d0;

assign output_r_we0 = grp_coloringFB_fu_360_frame_buffer_we0;

assign select_ln153_1_fu_590_p3 = ((tmp_reg_1249[0:0] === 1'b1) ? triangle_2ds_y1_reg_1158 : triangle_2ds_y0_reg_1146);

assign select_ln153_2_fu_595_p3 = ((tmp_reg_1249[0:0] === 1'b1) ? triangle_2ds_x0_reg_1140 : triangle_2ds_x1_reg_1152);

assign select_ln153_3_fu_600_p3 = ((tmp_reg_1249[0:0] === 1'b1) ? triangle_2ds_y0_reg_1146 : triangle_2ds_y1_reg_1158);

assign select_ln153_fu_585_p3 = ((tmp_reg_1249[0:0] === 1'b1) ? triangle_2ds_x1_reg_1152 : triangle_2ds_x0_reg_1140);

assign select_ln68_1_fu_711_p3 = ((icmp_ln68_1_fu_681_p2[0:0] === 1'b1) ? select_ln70_1_fu_692_p3 : select_ln77_1_fu_704_p3);

assign select_ln68_fu_635_p3 = ((icmp_ln68_fu_605_p2[0:0] === 1'b1) ? select_ln70_fu_616_p3 : select_ln77_fu_628_p3);

assign select_ln70_1_fu_692_p3 = ((icmp_ln70_1_fu_687_p2[0:0] === 1'b1) ? select_ln153_1_fu_590_p3 : triangle_2ds_y2_reg_1176);

assign select_ln70_fu_616_p3 = ((icmp_ln70_fu_611_p2[0:0] === 1'b1) ? select_ln153_fu_585_p3 : triangle_2ds_x2_reg_1164);

assign select_ln77_1_fu_704_p3 = ((icmp_ln77_1_fu_699_p2[0:0] === 1'b1) ? select_ln153_3_fu_600_p3 : triangle_2ds_y2_reg_1176);

assign select_ln77_fu_628_p3 = ((icmp_ln77_fu_623_p2[0:0] === 1'b1) ? select_ln153_2_fu_595_p3 : triangle_2ds_x2_reg_1164);

assign select_ln88_1_fu_749_p3 = ((icmp_ln88_1_fu_719_p2[0:0] === 1'b1) ? select_ln90_1_fu_730_p3 : select_ln97_1_fu_742_p3);

assign select_ln88_fu_673_p3 = ((icmp_ln88_fu_643_p2[0:0] === 1'b1) ? select_ln90_fu_654_p3 : select_ln97_fu_666_p3);

assign select_ln90_1_fu_730_p3 = ((icmp_ln90_1_fu_725_p2[0:0] === 1'b1) ? select_ln153_1_fu_590_p3 : triangle_2ds_y2_reg_1176);

assign select_ln90_fu_654_p3 = ((icmp_ln90_fu_649_p2[0:0] === 1'b1) ? select_ln153_fu_585_p3 : triangle_2ds_x2_reg_1164);

assign select_ln97_1_fu_742_p3 = ((icmp_ln97_1_fu_737_p2[0:0] === 1'b1) ? select_ln153_3_fu_600_p3 : triangle_2ds_y2_reg_1176);

assign select_ln97_fu_666_p3 = ((icmp_ln97_fu_661_p2[0:0] === 1'b1) ? select_ln153_2_fu_595_p3 : triangle_2ds_x2_reg_1164);

assign sext_ln164_2_fu_805_p1 = $signed(mul_ln164_fu_799_p2);

assign sext_ln188_fu_1027_p1 = i_0_i_reg_294;

assign sext_ln24_1_fu_501_p1 = $signed(sub_ln24_1_fu_495_p2);

assign sext_ln24_3_fu_539_p1 = $signed(sub_ln24_3_fu_533_p2);

assign sext_ln59_1_fu_873_p1 = $signed(sub_ln59_1_fu_869_p2);

assign sext_ln59_fu_865_p1 = $signed(sub_ln59_fu_861_p2);

assign sext_ln60_1_fu_889_p1 = $signed(sub_ln60_1_fu_885_p2);

assign sext_ln60_fu_881_p1 = $signed(sub_ln60_fu_877_p2);

assign sub_ln161_fu_757_p2 = (select_ln88_fu_673_p3 - select_ln68_fu_635_p3);

assign sub_ln164_1_fu_789_p2 = (zext_ln164_2_fu_781_p1 - zext_ln164_3_fu_785_p1);

assign sub_ln164_fu_771_p2 = (zext_ln164_fu_763_p1 - zext_ln164_1_fu_767_p1);

assign sub_ln24_1_fu_495_p2 = (zext_ln24_2_fu_487_p1 - zext_ln24_3_fu_491_p1);

assign sub_ln24_2_fu_519_p2 = (zext_ln24_4_fu_515_p1 - zext_ln24_3_fu_491_p1);

assign sub_ln24_3_fu_533_p2 = (zext_ln24_5_fu_529_p1 - zext_ln24_1_fu_473_p1);

assign sub_ln24_fu_477_p2 = (zext_ln24_fu_469_p1 - zext_ln24_1_fu_473_p1);

assign sub_ln58_1_fu_958_p2 = (zext_ln58_2_fu_954_p1 - zext_ln24_3_reg_1212);

assign sub_ln58_fu_940_p2 = (zext_ln58_1_fu_936_p1 - zext_ln24_1_reg_1200);

assign sub_ln59_1_fu_869_p2 = (zext_ln24_reg_1193 - zext_ln24_5_reg_1230);

assign sub_ln59_2_fu_963_p2 = (zext_ln58_1_fu_936_p1 - zext_ln24_5_reg_1230);

assign sub_ln59_3_fu_977_p2 = (zext_ln58_2_fu_954_p1 - zext_ln24_2_reg_1206);

assign sub_ln59_fu_861_p2 = (zext_ln24_4_reg_1223 - zext_ln24_2_reg_1206);

assign sub_ln60_1_fu_885_p2 = (zext_ln24_1_reg_1200 - zext_ln24_reg_1193);

assign sub_ln60_2_fu_982_p2 = (zext_ln58_1_fu_936_p1 - zext_ln24_reg_1193);

assign sub_ln60_3_fu_996_p2 = (zext_ln58_2_fu_954_p1 - zext_ln24_4_reg_1223);

assign sub_ln60_fu_877_p2 = (zext_ln24_3_reg_1212 - zext_ln24_4_reg_1223);

assign tmp_1_fu_1019_p3 = or_ln62_1_fu_1014_p2[32'd17];

assign triangle_2ds_z_fu_463_p2 = (udiv_ln_fu_407_p4 + add_ln121_fu_457_p2);

assign triangle_3ds_x0_address0 = zext_ln279_fu_384_p1;

assign triangle_3ds_x1_address0 = zext_ln279_fu_384_p1;

assign triangle_3ds_x2_address0 = zext_ln279_fu_384_p1;

assign triangle_3ds_y0_address0 = zext_ln279_fu_384_p1;

assign triangle_3ds_y1_address0 = zext_ln279_fu_384_p1;

assign triangle_3ds_y2_address0 = zext_ln279_fu_384_p1;

assign triangle_3ds_z0_address0 = zext_ln279_fu_384_p1;

assign triangle_3ds_z1_address0 = zext_ln279_fu_384_p1;

assign triangle_3ds_z2_address0 = zext_ln279_fu_384_p1;

assign trunc_ln183_fu_918_p1 = grp_fu_908_p2[7:0];

assign trunc_ln184_fu_927_p1 = grp_fu_913_p2[7:0];

assign trunc_ln24_1_fu_549_p1 = mul_ln24_1_fu_543_p2[16:0];

assign trunc_ln24_fu_511_p1 = mul_ln24_fu_505_p2[16:0];

assign udiv_ln121_1_fu_427_p4 = {{mul_ln121_1_fu_421_p2[17:10]}};

assign udiv_ln121_2_fu_447_p4 = {{mul_ln121_2_fu_441_p2[17:10]}};

assign udiv_ln_fu_407_p4 = {{mul_ln121_fu_401_p2[17:10]}};

assign x_fu_922_p2 = (max_min_0_reg_1267 + trunc_ln183_fu_918_p1);

assign y_fu_931_p2 = (max_min_2_reg_1257 + trunc_ln184_fu_927_p1);

assign zext_ln164_1_fu_767_p1 = select_ln68_fu_635_p3;

assign zext_ln164_2_fu_781_p1 = select_ln88_1_fu_749_p3;

assign zext_ln164_3_fu_785_p1 = select_ln68_1_fu_711_p3;

assign zext_ln164_fu_763_p1 = select_ln88_fu_673_p3;

assign zext_ln181_fu_893_p1 = k_0_i_reg_306;

assign zext_ln24_1_fu_473_p1 = triangle_3ds_x0_q0;

assign zext_ln24_2_fu_487_p1 = triangle_3ds_y1_q0;

assign zext_ln24_3_fu_491_p1 = triangle_3ds_y0_q0;

assign zext_ln24_4_fu_515_p1 = triangle_3ds_y2_q0;

assign zext_ln24_5_fu_529_p1 = triangle_3ds_x1_q0;

assign zext_ln24_fu_469_p1 = triangle_3ds_x2_q0;

assign zext_ln279_fu_384_p1 = i_0_reg_282;

assign zext_ln58_1_fu_936_p1 = x_fu_922_p2;

assign zext_ln58_2_fu_954_p1 = y_fu_931_p2;

assign zext_ln58_fu_857_p1 = max_min_4_fu_816_p3;

always @ (posedge ap_clk) begin
    zext_ln24_reg_1193[8] <= 1'b0;
    zext_ln24_1_reg_1200[8] <= 1'b0;
    zext_ln24_2_reg_1206[8] <= 1'b0;
    zext_ln24_3_reg_1212[8] <= 1'b0;
    zext_ln24_4_reg_1223[8] <= 1'b0;
    zext_ln24_5_reg_1230[8] <= 1'b0;
    zext_ln58_reg_1272[15:8] <= 8'b00000000;
end

endmodule //rendering_sw
