// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _tensor_weight_x_HH_
#define _tensor_weight_x_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "optical_flow_sw_fadd_32ns_32ns_32_4_full_dsp_1.h"
#include "optical_flow_sw_fmul_32ns_32ns_32_3_max_dsp_1.h"
#include "tensor_weight_y_acc_val.h"

namespace ap_rtl {

struct tensor_weight_x : public sc_module {
    // Port declarations 29
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<19> > tensor_0_val_address0;
    sc_out< sc_logic > tensor_0_val_ce0;
    sc_out< sc_logic > tensor_0_val_we0;
    sc_out< sc_lv<32> > tensor_0_val_d0;
    sc_out< sc_lv<19> > tensor_1_val_address0;
    sc_out< sc_logic > tensor_1_val_ce0;
    sc_out< sc_logic > tensor_1_val_we0;
    sc_out< sc_lv<32> > tensor_1_val_d0;
    sc_out< sc_lv<19> > tensor_3_val_address0;
    sc_out< sc_logic > tensor_3_val_ce0;
    sc_out< sc_logic > tensor_3_val_we0;
    sc_out< sc_lv<32> > tensor_3_val_d0;
    sc_out< sc_lv<19> > tensor_4_val_address0;
    sc_out< sc_logic > tensor_4_val_ce0;
    sc_out< sc_logic > tensor_4_val_we0;
    sc_out< sc_lv<32> > tensor_4_val_d0;
    sc_out< sc_lv<19> > tensor_5_val_address0;
    sc_out< sc_logic > tensor_5_val_ce0;
    sc_out< sc_logic > tensor_5_val_we0;
    sc_out< sc_lv<32> > tensor_5_val_d0;
    sc_out< sc_lv<22> > tensor_y_val_address0;
    sc_out< sc_logic > tensor_y_val_ce0;
    sc_in< sc_lv<32> > tensor_y_val_q0;
    sc_signal< sc_logic > ap_var_for_const0;


    // Module declarations
    tensor_weight_x(sc_module_name name);
    SC_HAS_PROCESS(tensor_weight_x);

    ~tensor_weight_x();

    sc_trace_file* mVcdFile;

    tensor_weight_y_acc_val* acc_val_U;
    optical_flow_sw_fadd_32ns_32ns_32_4_full_dsp_1<1,4,32,32,32>* optical_flow_sw_fadd_32ns_32ns_32_4_full_dsp_1_U46;
    optical_flow_sw_fmul_32ns_32ns_32_3_max_dsp_1<1,3,32,32,32>* optical_flow_sw_fmul_32ns_32ns_32_3_max_dsp_1_U47;
    sc_signal< sc_lv<20> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<32> > acc_val_q0;
    sc_signal< sc_lv<32> > reg_295;
    sc_signal< sc_logic > ap_CS_fsm_state12;
    sc_signal< sc_logic > ap_CS_fsm_state18;
    sc_signal< sc_lv<9> > r_fu_307_p2;
    sc_signal< sc_lv<9> > r_reg_541;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<20> > zext_ln187_fu_321_p1;
    sc_signal< sc_lv<20> > zext_ln187_reg_546;
    sc_signal< sc_lv<1> > icmp_ln185_fu_301_p2;
    sc_signal< sc_lv<11> > c_fu_331_p2;
    sc_signal< sc_lv<11> > c_reg_555;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<3> > k_fu_343_p2;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<1> > or_ln194_fu_378_p2;
    sc_signal< sc_lv<1> > or_ln194_reg_568;
    sc_signal< sc_lv<1> > icmp_ln190_fu_337_p2;
    sc_signal< sc_lv<2> > i_fu_394_p2;
    sc_signal< sc_lv<2> > i_reg_575;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<23> > sub_ln200_1_fu_435_p2;
    sc_signal< sc_lv<23> > sub_ln200_1_reg_580;
    sc_signal< sc_lv<1> > icmp_ln196_fu_388_p2;
    sc_signal< sc_lv<32> > select_ln7_fu_447_p3;
    sc_signal< sc_lv<32> > select_ln7_reg_585;
    sc_signal< sc_lv<1> > icmp_ln204_fu_455_p2;
    sc_signal< sc_lv<1> > icmp_ln204_reg_590;
    sc_signal< sc_lv<20> > add_ln206_1_fu_471_p2;
    sc_signal< sc_lv<20> > add_ln206_1_reg_594;
    sc_signal< sc_lv<3> > component_fu_482_p2;
    sc_signal< sc_lv<3> > component_reg_602;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<1> > icmp_ln198_fu_476_p2;
    sc_signal< sc_lv<32> > tensor_y_val_load_reg_612;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_lv<3> > acc_val_addr_13_reg_617;
    sc_signal< sc_logic > ap_CS_fsm_state11;
    sc_signal< sc_lv<32> > grp_fu_291_p2;
    sc_signal< sc_lv<32> > tmp_reg_622;
    sc_signal< sc_lv<32> > grp_fu_287_p2;
    sc_signal< sc_lv<32> > tmp_2_reg_627;
    sc_signal< sc_logic > ap_CS_fsm_state16;
    sc_signal< sc_lv<64> > zext_ln206_1_fu_507_p1;
    sc_signal< sc_lv<64> > zext_ln206_1_reg_632;
    sc_signal< sc_logic > ap_CS_fsm_state19;
    sc_signal< sc_lv<3> > acc_val_address0;
    sc_signal< sc_logic > acc_val_ce0;
    sc_signal< sc_logic > acc_val_we0;
    sc_signal< sc_lv<32> > acc_val_d0;
    sc_signal< sc_lv<3> > acc_val_address1;
    sc_signal< sc_logic > acc_val_ce1;
    sc_signal< sc_lv<32> > acc_val_q1;
    sc_signal< sc_lv<9> > r_0_reg_230;
    sc_signal< sc_lv<1> > icmp_ln187_fu_325_p2;
    sc_signal< sc_lv<11> > c_0_reg_241;
    sc_signal< sc_logic > ap_CS_fsm_state20;
    sc_signal< sc_lv<3> > k_0_reg_253;
    sc_signal< sc_lv<2> > i_0_reg_264;
    sc_signal< sc_lv<3> > component_0_reg_275;
    sc_signal< sc_logic > ap_CS_fsm_state17;
    sc_signal< sc_lv<64> > zext_ln192_fu_349_p1;
    sc_signal< sc_lv<64> > zext_ln200_4_fu_497_p1;
    sc_signal< sc_lv<64> > zext_ln200_1_fu_502_p1;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_logic > ap_CS_fsm_state13;
    sc_signal< sc_logic > ap_CS_fsm_state10;
    sc_signal< sc_lv<19> > tmp_8_fu_313_p3;
    sc_signal< sc_lv<10> > tmp_7_fu_354_p4;
    sc_signal< sc_lv<1> > tmp_9_fu_370_p3;
    sc_signal< sc_lv<1> > icmp_ln194_fu_364_p2;
    sc_signal< sc_lv<11> > zext_ln196_fu_384_p1;
    sc_signal< sc_lv<11> > sub_ln200_fu_400_p2;
    sc_signal< sc_lv<20> > zext_ln200_fu_406_p1;
    sc_signal< sc_lv<20> > add_ln200_fu_410_p2;
    sc_signal< sc_lv<21> > tmp_10_fu_423_p3;
    sc_signal< sc_lv<23> > p_shl_cast_fu_415_p3;
    sc_signal< sc_lv<23> > zext_ln200_2_fu_431_p1;
    sc_signal< sc_lv<1> > icmp_ln7_fu_441_p2;
    sc_signal< sc_lv<11> > add_ln206_fu_461_p2;
    sc_signal< sc_lv<20> > zext_ln206_fu_467_p1;
    sc_signal< sc_lv<23> > zext_ln200_3_fu_488_p1;
    sc_signal< sc_lv<23> > add_ln200_1_fu_492_p2;
    sc_signal< sc_lv<20> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<20> ap_ST_fsm_state1;
    static const sc_lv<20> ap_ST_fsm_state2;
    static const sc_lv<20> ap_ST_fsm_state3;
    static const sc_lv<20> ap_ST_fsm_state4;
    static const sc_lv<20> ap_ST_fsm_state5;
    static const sc_lv<20> ap_ST_fsm_state6;
    static const sc_lv<20> ap_ST_fsm_state7;
    static const sc_lv<20> ap_ST_fsm_state8;
    static const sc_lv<20> ap_ST_fsm_state9;
    static const sc_lv<20> ap_ST_fsm_state10;
    static const sc_lv<20> ap_ST_fsm_state11;
    static const sc_lv<20> ap_ST_fsm_state12;
    static const sc_lv<20> ap_ST_fsm_state13;
    static const sc_lv<20> ap_ST_fsm_state14;
    static const sc_lv<20> ap_ST_fsm_state15;
    static const sc_lv<20> ap_ST_fsm_state16;
    static const sc_lv<20> ap_ST_fsm_state17;
    static const sc_lv<20> ap_ST_fsm_state18;
    static const sc_lv<20> ap_ST_fsm_state19;
    static const sc_lv<20> ap_ST_fsm_state20;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_B;
    static const sc_lv<32> ap_const_lv32_11;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<32> ap_const_lv32_F;
    static const sc_lv<32> ap_const_lv32_12;
    static const sc_lv<9> ap_const_lv9_0;
    static const sc_lv<32> ap_const_lv32_13;
    static const sc_lv<11> ap_const_lv11_0;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<32> ap_const_lv32_10;
    static const sc_lv<64> ap_const_lv64_0;
    static const sc_lv<64> ap_const_lv64_1;
    static const sc_lv<64> ap_const_lv64_3;
    static const sc_lv<64> ap_const_lv64_4;
    static const sc_lv<64> ap_const_lv64_5;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_C;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<9> ap_const_lv9_1B4;
    static const sc_lv<9> ap_const_lv9_1;
    static const sc_lv<10> ap_const_lv10_0;
    static const sc_lv<11> ap_const_lv11_401;
    static const sc_lv<11> ap_const_lv11_1;
    static const sc_lv<3> ap_const_lv3_6;
    static const sc_lv<3> ap_const_lv3_1;
    static const sc_lv<2> ap_const_lv2_3;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<32> ap_const_lv32_3EB3DD98;
    static const sc_lv<32> ap_const_lv32_3EA60AA6;
    static const sc_lv<11> ap_const_lv11_7FF;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_acc_val_address0();
    void thread_acc_val_address1();
    void thread_acc_val_ce0();
    void thread_acc_val_ce1();
    void thread_acc_val_d0();
    void thread_acc_val_we0();
    void thread_add_ln200_1_fu_492_p2();
    void thread_add_ln200_fu_410_p2();
    void thread_add_ln206_1_fu_471_p2();
    void thread_add_ln206_fu_461_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state11();
    void thread_ap_CS_fsm_state12();
    void thread_ap_CS_fsm_state13();
    void thread_ap_CS_fsm_state16();
    void thread_ap_CS_fsm_state17();
    void thread_ap_CS_fsm_state18();
    void thread_ap_CS_fsm_state19();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state20();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state9();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_c_fu_331_p2();
    void thread_component_fu_482_p2();
    void thread_i_fu_394_p2();
    void thread_icmp_ln185_fu_301_p2();
    void thread_icmp_ln187_fu_325_p2();
    void thread_icmp_ln190_fu_337_p2();
    void thread_icmp_ln194_fu_364_p2();
    void thread_icmp_ln196_fu_388_p2();
    void thread_icmp_ln198_fu_476_p2();
    void thread_icmp_ln204_fu_455_p2();
    void thread_icmp_ln7_fu_441_p2();
    void thread_k_fu_343_p2();
    void thread_or_ln194_fu_378_p2();
    void thread_p_shl_cast_fu_415_p3();
    void thread_r_fu_307_p2();
    void thread_select_ln7_fu_447_p3();
    void thread_sub_ln200_1_fu_435_p2();
    void thread_sub_ln200_fu_400_p2();
    void thread_tensor_0_val_address0();
    void thread_tensor_0_val_ce0();
    void thread_tensor_0_val_d0();
    void thread_tensor_0_val_we0();
    void thread_tensor_1_val_address0();
    void thread_tensor_1_val_ce0();
    void thread_tensor_1_val_d0();
    void thread_tensor_1_val_we0();
    void thread_tensor_3_val_address0();
    void thread_tensor_3_val_ce0();
    void thread_tensor_3_val_d0();
    void thread_tensor_3_val_we0();
    void thread_tensor_4_val_address0();
    void thread_tensor_4_val_ce0();
    void thread_tensor_4_val_d0();
    void thread_tensor_4_val_we0();
    void thread_tensor_5_val_address0();
    void thread_tensor_5_val_ce0();
    void thread_tensor_5_val_d0();
    void thread_tensor_5_val_we0();
    void thread_tensor_y_val_address0();
    void thread_tensor_y_val_ce0();
    void thread_tmp_10_fu_423_p3();
    void thread_tmp_7_fu_354_p4();
    void thread_tmp_8_fu_313_p3();
    void thread_tmp_9_fu_370_p3();
    void thread_zext_ln187_fu_321_p1();
    void thread_zext_ln192_fu_349_p1();
    void thread_zext_ln196_fu_384_p1();
    void thread_zext_ln200_1_fu_502_p1();
    void thread_zext_ln200_2_fu_431_p1();
    void thread_zext_ln200_3_fu_488_p1();
    void thread_zext_ln200_4_fu_497_p1();
    void thread_zext_ln200_fu_406_p1();
    void thread_zext_ln206_1_fu_507_p1();
    void thread_zext_ln206_fu_467_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
