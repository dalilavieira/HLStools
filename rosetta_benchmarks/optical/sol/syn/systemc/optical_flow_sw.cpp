// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "optical_flow_sw.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic optical_flow_sw::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic optical_flow_sw::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<53> optical_flow_sw::ap_ST_fsm_state1 = "1";
const sc_lv<53> optical_flow_sw::ap_ST_fsm_state2 = "10";
const sc_lv<53> optical_flow_sw::ap_ST_fsm_state3 = "100";
const sc_lv<53> optical_flow_sw::ap_ST_fsm_state4 = "1000";
const sc_lv<53> optical_flow_sw::ap_ST_fsm_state5 = "10000";
const sc_lv<53> optical_flow_sw::ap_ST_fsm_state6 = "100000";
const sc_lv<53> optical_flow_sw::ap_ST_fsm_state7 = "1000000";
const sc_lv<53> optical_flow_sw::ap_ST_fsm_state8 = "10000000";
const sc_lv<53> optical_flow_sw::ap_ST_fsm_state9 = "100000000";
const sc_lv<53> optical_flow_sw::ap_ST_fsm_state10 = "1000000000";
const sc_lv<53> optical_flow_sw::ap_ST_fsm_state11 = "10000000000";
const sc_lv<53> optical_flow_sw::ap_ST_fsm_state12 = "100000000000";
const sc_lv<53> optical_flow_sw::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<53> optical_flow_sw::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<53> optical_flow_sw::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<53> optical_flow_sw::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<53> optical_flow_sw::ap_ST_fsm_state17 = "10000000000000000";
const sc_lv<53> optical_flow_sw::ap_ST_fsm_state18 = "100000000000000000";
const sc_lv<53> optical_flow_sw::ap_ST_fsm_state19 = "1000000000000000000";
const sc_lv<53> optical_flow_sw::ap_ST_fsm_state20 = "10000000000000000000";
const sc_lv<53> optical_flow_sw::ap_ST_fsm_state21 = "100000000000000000000";
const sc_lv<53> optical_flow_sw::ap_ST_fsm_state22 = "1000000000000000000000";
const sc_lv<53> optical_flow_sw::ap_ST_fsm_state23 = "10000000000000000000000";
const sc_lv<53> optical_flow_sw::ap_ST_fsm_state24 = "100000000000000000000000";
const sc_lv<53> optical_flow_sw::ap_ST_fsm_state25 = "1000000000000000000000000";
const sc_lv<53> optical_flow_sw::ap_ST_fsm_state26 = "10000000000000000000000000";
const sc_lv<53> optical_flow_sw::ap_ST_fsm_state27 = "100000000000000000000000000";
const sc_lv<53> optical_flow_sw::ap_ST_fsm_state28 = "1000000000000000000000000000";
const sc_lv<53> optical_flow_sw::ap_ST_fsm_state29 = "10000000000000000000000000000";
const sc_lv<53> optical_flow_sw::ap_ST_fsm_state30 = "100000000000000000000000000000";
const sc_lv<53> optical_flow_sw::ap_ST_fsm_state31 = "1000000000000000000000000000000";
const sc_lv<53> optical_flow_sw::ap_ST_fsm_state32 = "10000000000000000000000000000000";
const sc_lv<53> optical_flow_sw::ap_ST_fsm_state33 = "100000000000000000000000000000000";
const sc_lv<53> optical_flow_sw::ap_ST_fsm_state34 = "1000000000000000000000000000000000";
const sc_lv<53> optical_flow_sw::ap_ST_fsm_state35 = "10000000000000000000000000000000000";
const sc_lv<53> optical_flow_sw::ap_ST_fsm_state36 = "100000000000000000000000000000000000";
const sc_lv<53> optical_flow_sw::ap_ST_fsm_state37 = "1000000000000000000000000000000000000";
const sc_lv<53> optical_flow_sw::ap_ST_fsm_state38 = "10000000000000000000000000000000000000";
const sc_lv<53> optical_flow_sw::ap_ST_fsm_state39 = "100000000000000000000000000000000000000";
const sc_lv<53> optical_flow_sw::ap_ST_fsm_state40 = "1000000000000000000000000000000000000000";
const sc_lv<53> optical_flow_sw::ap_ST_fsm_state41 = "10000000000000000000000000000000000000000";
const sc_lv<53> optical_flow_sw::ap_ST_fsm_state42 = "100000000000000000000000000000000000000000";
const sc_lv<53> optical_flow_sw::ap_ST_fsm_state43 = "1000000000000000000000000000000000000000000";
const sc_lv<53> optical_flow_sw::ap_ST_fsm_state44 = "10000000000000000000000000000000000000000000";
const sc_lv<53> optical_flow_sw::ap_ST_fsm_state45 = "100000000000000000000000000000000000000000000";
const sc_lv<53> optical_flow_sw::ap_ST_fsm_state46 = "1000000000000000000000000000000000000000000000";
const sc_lv<53> optical_flow_sw::ap_ST_fsm_state47 = "10000000000000000000000000000000000000000000000";
const sc_lv<53> optical_flow_sw::ap_ST_fsm_state48 = "100000000000000000000000000000000000000000000000";
const sc_lv<53> optical_flow_sw::ap_ST_fsm_state49 = "1000000000000000000000000000000000000000000000000";
const sc_lv<53> optical_flow_sw::ap_ST_fsm_state50 = "10000000000000000000000000000000000000000000000000";
const sc_lv<53> optical_flow_sw::ap_ST_fsm_state51 = "100000000000000000000000000000000000000000000000000";
const sc_lv<53> optical_flow_sw::ap_ST_fsm_state52 = "1000000000000000000000000000000000000000000000000000";
const sc_lv<53> optical_flow_sw::ap_ST_fsm_state53 = "10000000000000000000000000000000000000000000000000000";
const sc_lv<32> optical_flow_sw::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> optical_flow_sw::ap_const_lv32_8 = "1000";
const sc_lv<32> optical_flow_sw::ap_const_lv32_C = "1100";
const sc_lv<32> optical_flow_sw::ap_const_lv32_10 = "10000";
const sc_lv<32> optical_flow_sw::ap_const_lv32_14 = "10100";
const sc_lv<32> optical_flow_sw::ap_const_lv32_18 = "11000";
const sc_lv<32> optical_flow_sw::ap_const_lv32_2B = "101011";
const sc_lv<32> optical_flow_sw::ap_const_lv32_2 = "10";
const sc_lv<1> optical_flow_sw::ap_const_lv1_0 = "0";
const sc_lv<32> optical_flow_sw::ap_const_lv32_3 = "11";
const sc_lv<32> optical_flow_sw::ap_const_lv32_4 = "100";
const sc_lv<32> optical_flow_sw::ap_const_lv32_5 = "101";
const sc_lv<32> optical_flow_sw::ap_const_lv32_9 = "1001";
const sc_lv<32> optical_flow_sw::ap_const_lv32_D = "1101";
const sc_lv<32> optical_flow_sw::ap_const_lv32_13 = "10011";
const sc_lv<32> optical_flow_sw::ap_const_lv32_15 = "10101";
const sc_lv<32> optical_flow_sw::ap_const_lv32_21 = "100001";
const sc_lv<32> optical_flow_sw::ap_const_lv32_26 = "100110";
const sc_lv<32> optical_flow_sw::ap_const_lv32_27 = "100111";
const sc_lv<32> optical_flow_sw::ap_const_lv32_28 = "101000";
const sc_lv<32> optical_flow_sw::ap_const_lv32_2C = "101100";
const sc_lv<32> optical_flow_sw::ap_const_lv32_2D = "101101";
const sc_lv<32> optical_flow_sw::ap_const_lv32_2E = "101110";
const sc_lv<9> optical_flow_sw::ap_const_lv9_0 = "000000000";
const sc_lv<32> optical_flow_sw::ap_const_lv32_1 = "1";
const sc_lv<1> optical_flow_sw::ap_const_lv1_1 = "1";
const sc_lv<32> optical_flow_sw::ap_const_lv32_22 = "100010";
const sc_lv<11> optical_flow_sw::ap_const_lv11_0 = "00000000000";
const sc_lv<32> optical_flow_sw::ap_const_lv32_25 = "100101";
const sc_lv<32> optical_flow_sw::ap_const_lv32_2F = "101111";
const sc_lv<32> optical_flow_sw::ap_const_lv32_33 = "110011";
const sc_lv<32> optical_flow_sw::ap_const_lv32_34 = "110100";
const sc_lv<32> optical_flow_sw::ap_const_lv32_23 = "100011";
const sc_lv<32> optical_flow_sw::ap_const_lv32_24 = "100100";
const sc_lv<32> optical_flow_sw::ap_const_lv32_30 = "110000";
const sc_lv<32> optical_flow_sw::ap_const_lv32_31 = "110001";
const sc_lv<32> optical_flow_sw::ap_const_lv32_32 = "110010";
const sc_lv<32> optical_flow_sw::ap_const_lv32_11 = "10001";
const sc_lv<32> optical_flow_sw::ap_const_lv32_C1000000 = "11000001000000000000000000000000";
const sc_lv<32> optical_flow_sw::ap_const_lv32_41000000 = "1000001000000000000000000000000";
const sc_lv<32> optical_flow_sw::ap_const_lv32_6 = "110";
const sc_lv<32> optical_flow_sw::ap_const_lv32_A = "1010";
const sc_lv<32> optical_flow_sw::ap_const_lv32_E = "1110";
const sc_lv<32> optical_flow_sw::ap_const_lv32_29 = "101001";
const sc_lv<32> optical_flow_sw::ap_const_lv32_2A = "101010";
const sc_lv<32> optical_flow_sw::ap_const_lv32_41400000 = "1000001010000000000000000000000";
const sc_lv<32> optical_flow_sw::ap_const_lv32_19 = "11001";
const sc_lv<9> optical_flow_sw::ap_const_lv9_1B4 = "110110100";
const sc_lv<9> optical_flow_sw::ap_const_lv9_1 = "1";
const sc_lv<10> optical_flow_sw::ap_const_lv10_0 = "0000000000";
const sc_lv<11> optical_flow_sw::ap_const_lv11_400 = "10000000000";
const sc_lv<11> optical_flow_sw::ap_const_lv11_1 = "1";
const sc_lv<32> optical_flow_sw::ap_const_lv32_80000000 = "10000000000000000000000000000000";
const sc_lv<3> optical_flow_sw::ap_const_lv3_0 = "000";
const sc_lv<23> optical_flow_sw::ap_const_lv23_1 = "1";
const sc_lv<23> optical_flow_sw::ap_const_lv23_2 = "10";
const sc_lv<23> optical_flow_sw::ap_const_lv23_3 = "11";
const sc_lv<23> optical_flow_sw::ap_const_lv23_4 = "100";
const sc_lv<23> optical_flow_sw::ap_const_lv23_5 = "101";
const bool optical_flow_sw::ap_const_boolean_1 = true;

optical_flow_sw::optical_flow_sw(sc_module_name name) : sc_module(name), mVcdFile(0) {
    gradient_x_U = new optical_flow_sw_gradient_x("gradient_x_U");
    gradient_x_U->clk(ap_clk);
    gradient_x_U->reset(ap_rst);
    gradient_x_U->address0(gradient_x_address0);
    gradient_x_U->ce0(gradient_x_ce0);
    gradient_x_U->we0(gradient_x_we0);
    gradient_x_U->d0(grp_gradient_xy_calc_fu_356_gradient_x_d0);
    gradient_x_U->q0(gradient_x_q0);
    gradient_y_U = new optical_flow_sw_gradient_x("gradient_y_U");
    gradient_y_U->clk(ap_clk);
    gradient_y_U->reset(ap_rst);
    gradient_y_U->address0(gradient_y_address0);
    gradient_y_U->ce0(gradient_y_ce0);
    gradient_y_U->we0(gradient_y_we0);
    gradient_y_U->d0(grp_gradient_xy_calc_fu_356_gradient_y_d0);
    gradient_y_U->q0(gradient_y_q0);
    gradient_z_U = new optical_flow_sw_gradient_x("gradient_z_U");
    gradient_z_U->clk(ap_clk);
    gradient_z_U->reset(ap_rst);
    gradient_z_U->address0(gradient_z_address0);
    gradient_z_U->ce0(gradient_z_ce0);
    gradient_z_U->we0(gradient_z_we0);
    gradient_z_U->d0(tmp_6_i_reg_750);
    gradient_z_U->q0(gradient_z_q0);
    y_filtered_x_U = new optical_flow_sw_gradient_x("y_filtered_x_U");
    y_filtered_x_U->clk(ap_clk);
    y_filtered_x_U->reset(ap_rst);
    y_filtered_x_U->address0(y_filtered_x_address0);
    y_filtered_x_U->ce0(y_filtered_x_ce0);
    y_filtered_x_U->we0(y_filtered_x_we0);
    y_filtered_x_U->d0(grp_gradient_weight_y_fu_368_filt_grad_x_d0);
    y_filtered_x_U->q0(y_filtered_x_q0);
    y_filtered_y_U = new optical_flow_sw_gradient_x("y_filtered_y_U");
    y_filtered_y_U->clk(ap_clk);
    y_filtered_y_U->reset(ap_rst);
    y_filtered_y_U->address0(y_filtered_y_address0);
    y_filtered_y_U->ce0(y_filtered_y_ce0);
    y_filtered_y_U->we0(y_filtered_y_we0);
    y_filtered_y_U->d0(grp_gradient_weight_y_fu_368_filt_grad_y_d0);
    y_filtered_y_U->q0(y_filtered_y_q0);
    y_filtered_z_U = new optical_flow_sw_gradient_x("y_filtered_z_U");
    y_filtered_z_U->clk(ap_clk);
    y_filtered_z_U->reset(ap_rst);
    y_filtered_z_U->address0(y_filtered_z_address0);
    y_filtered_z_U->ce0(y_filtered_z_ce0);
    y_filtered_z_U->we0(y_filtered_z_we0);
    y_filtered_z_U->d0(grp_gradient_weight_y_fu_368_filt_grad_z_d0);
    y_filtered_z_U->q0(y_filtered_z_q0);
    filtered_gradient_x_U = new optical_flow_sw_gradient_x("filtered_gradient_x_U");
    filtered_gradient_x_U->clk(ap_clk);
    filtered_gradient_x_U->reset(ap_rst);
    filtered_gradient_x_U->address0(filtered_gradient_x_address0);
    filtered_gradient_x_U->ce0(filtered_gradient_x_ce0);
    filtered_gradient_x_U->we0(filtered_gradient_x_we0);
    filtered_gradient_x_U->d0(grp_gradient_weight_x_fu_386_filt_grad_x_d0);
    filtered_gradient_x_U->q0(filtered_gradient_x_q0);
    filtered_gradient_y_U = new optical_flow_sw_gradient_x("filtered_gradient_y_U");
    filtered_gradient_y_U->clk(ap_clk);
    filtered_gradient_y_U->reset(ap_rst);
    filtered_gradient_y_U->address0(filtered_gradient_y_address0);
    filtered_gradient_y_U->ce0(filtered_gradient_y_ce0);
    filtered_gradient_y_U->we0(filtered_gradient_y_we0);
    filtered_gradient_y_U->d0(grp_gradient_weight_x_fu_386_filt_grad_y_d0);
    filtered_gradient_y_U->q0(filtered_gradient_y_q0);
    filtered_gradient_z_U = new optical_flow_sw_gradient_x("filtered_gradient_z_U");
    filtered_gradient_z_U->clk(ap_clk);
    filtered_gradient_z_U->reset(ap_rst);
    filtered_gradient_z_U->address0(filtered_gradient_z_address0);
    filtered_gradient_z_U->ce0(filtered_gradient_z_ce0);
    filtered_gradient_z_U->we0(filtered_gradient_z_we0);
    filtered_gradient_z_U->d0(grp_gradient_weight_x_fu_386_filt_grad_z_d0);
    filtered_gradient_z_U->q0(filtered_gradient_z_q0);
    out_product_val_U = new optical_flow_sw_out_product_val("out_product_val_U");
    out_product_val_U->clk(ap_clk);
    out_product_val_U->reset(ap_rst);
    out_product_val_U->address0(out_product_val_address0);
    out_product_val_U->ce0(out_product_val_ce0);
    out_product_val_U->we0(out_product_val_we0);
    out_product_val_U->d0(out_product_val_d0);
    out_product_val_U->q0(out_product_val_q0);
    out_product_val_U->address1(out_product_val_address1);
    out_product_val_U->ce1(out_product_val_ce1);
    out_product_val_U->we1(out_product_val_we1);
    out_product_val_U->d1(out_product_val_d1);
    tensor_y_val_U = new optical_flow_sw_out_product_val("tensor_y_val_U");
    tensor_y_val_U->clk(ap_clk);
    tensor_y_val_U->reset(ap_rst);
    tensor_y_val_U->address0(tensor_y_val_address0);
    tensor_y_val_U->ce0(tensor_y_val_ce0);
    tensor_y_val_U->we0(tensor_y_val_we0);
    tensor_y_val_U->d0(grp_tensor_weight_y_fu_404_tensor_y_val_2_d0);
    tensor_y_val_U->q0(tensor_y_val_q0);
    tensor_y_val_U->address1(grp_tensor_weight_y_fu_404_tensor_y_val_2_address1);
    tensor_y_val_U->ce1(tensor_y_val_ce1);
    tensor_y_val_U->we1(tensor_y_val_we1);
    tensor_y_val_U->d1(grp_tensor_weight_y_fu_404_tensor_y_val_2_d1);
    tensor_val_0_U = new optical_flow_sw_gradient_x("tensor_val_0_U");
    tensor_val_0_U->clk(ap_clk);
    tensor_val_0_U->reset(ap_rst);
    tensor_val_0_U->address0(tensor_val_0_address0);
    tensor_val_0_U->ce0(tensor_val_0_ce0);
    tensor_val_0_U->we0(tensor_val_0_we0);
    tensor_val_0_U->d0(grp_tensor_weight_x_fu_412_tensor_0_val_d0);
    tensor_val_0_U->q0(tensor_val_0_q0);
    tensor_val_1_U = new optical_flow_sw_gradient_x("tensor_val_1_U");
    tensor_val_1_U->clk(ap_clk);
    tensor_val_1_U->reset(ap_rst);
    tensor_val_1_U->address0(tensor_val_1_address0);
    tensor_val_1_U->ce0(tensor_val_1_ce0);
    tensor_val_1_U->we0(tensor_val_1_we0);
    tensor_val_1_U->d0(grp_tensor_weight_x_fu_412_tensor_1_val_d0);
    tensor_val_1_U->q0(tensor_val_1_q0);
    tensor_val_3_U = new optical_flow_sw_gradient_x("tensor_val_3_U");
    tensor_val_3_U->clk(ap_clk);
    tensor_val_3_U->reset(ap_rst);
    tensor_val_3_U->address0(tensor_val_3_address0);
    tensor_val_3_U->ce0(tensor_val_3_ce0);
    tensor_val_3_U->we0(tensor_val_3_we0);
    tensor_val_3_U->d0(grp_tensor_weight_x_fu_412_tensor_3_val_d0);
    tensor_val_3_U->q0(tensor_val_3_q0);
    tensor_val_4_U = new optical_flow_sw_gradient_x("tensor_val_4_U");
    tensor_val_4_U->clk(ap_clk);
    tensor_val_4_U->reset(ap_rst);
    tensor_val_4_U->address0(tensor_val_4_address0);
    tensor_val_4_U->ce0(tensor_val_4_ce0);
    tensor_val_4_U->we0(tensor_val_4_we0);
    tensor_val_4_U->d0(grp_tensor_weight_x_fu_412_tensor_4_val_d0);
    tensor_val_4_U->q0(tensor_val_4_q0);
    tensor_val_5_U = new optical_flow_sw_gradient_x("tensor_val_5_U");
    tensor_val_5_U->clk(ap_clk);
    tensor_val_5_U->reset(ap_rst);
    tensor_val_5_U->address0(tensor_val_5_address0);
    tensor_val_5_U->ce0(tensor_val_5_ce0);
    tensor_val_5_U->we0(tensor_val_5_we0);
    tensor_val_5_U->d0(grp_tensor_weight_x_fu_412_tensor_5_val_d0);
    tensor_val_5_U->q0(tensor_val_5_q0);
    grp_flow_calc_fu_338 = new flow_calc("grp_flow_calc_fu_338");
    grp_flow_calc_fu_338->ap_clk(ap_clk);
    grp_flow_calc_fu_338->ap_rst(ap_rst);
    grp_flow_calc_fu_338->ap_start(grp_flow_calc_fu_338_ap_start);
    grp_flow_calc_fu_338->ap_done(grp_flow_calc_fu_338_ap_done);
    grp_flow_calc_fu_338->ap_idle(grp_flow_calc_fu_338_ap_idle);
    grp_flow_calc_fu_338->ap_ready(grp_flow_calc_fu_338_ap_ready);
    grp_flow_calc_fu_338->output_x_address0(grp_flow_calc_fu_338_output_x_address0);
    grp_flow_calc_fu_338->output_x_ce0(grp_flow_calc_fu_338_output_x_ce0);
    grp_flow_calc_fu_338->output_x_we0(grp_flow_calc_fu_338_output_x_we0);
    grp_flow_calc_fu_338->output_x_d0(grp_flow_calc_fu_338_output_x_d0);
    grp_flow_calc_fu_338->output_y_address0(grp_flow_calc_fu_338_output_y_address0);
    grp_flow_calc_fu_338->output_y_ce0(grp_flow_calc_fu_338_output_y_ce0);
    grp_flow_calc_fu_338->output_y_we0(grp_flow_calc_fu_338_output_y_we0);
    grp_flow_calc_fu_338->output_y_d0(grp_flow_calc_fu_338_output_y_d0);
    grp_flow_calc_fu_338->tensor_val_0_address0(grp_flow_calc_fu_338_tensor_val_0_address0);
    grp_flow_calc_fu_338->tensor_val_0_ce0(grp_flow_calc_fu_338_tensor_val_0_ce0);
    grp_flow_calc_fu_338->tensor_val_0_q0(tensor_val_0_q0);
    grp_flow_calc_fu_338->tensor_val_1_address0(grp_flow_calc_fu_338_tensor_val_1_address0);
    grp_flow_calc_fu_338->tensor_val_1_ce0(grp_flow_calc_fu_338_tensor_val_1_ce0);
    grp_flow_calc_fu_338->tensor_val_1_q0(tensor_val_1_q0);
    grp_flow_calc_fu_338->tensor_val_3_address0(grp_flow_calc_fu_338_tensor_val_3_address0);
    grp_flow_calc_fu_338->tensor_val_3_ce0(grp_flow_calc_fu_338_tensor_val_3_ce0);
    grp_flow_calc_fu_338->tensor_val_3_q0(tensor_val_3_q0);
    grp_flow_calc_fu_338->tensor_val_5_address0(grp_flow_calc_fu_338_tensor_val_5_address0);
    grp_flow_calc_fu_338->tensor_val_5_ce0(grp_flow_calc_fu_338_tensor_val_5_ce0);
    grp_flow_calc_fu_338->tensor_val_5_q0(tensor_val_5_q0);
    grp_flow_calc_fu_338->tensor_val_4_address0(grp_flow_calc_fu_338_tensor_val_4_address0);
    grp_flow_calc_fu_338->tensor_val_4_ce0(grp_flow_calc_fu_338_tensor_val_4_ce0);
    grp_flow_calc_fu_338->tensor_val_4_q0(tensor_val_4_q0);
    grp_gradient_xy_calc_fu_356 = new gradient_xy_calc("grp_gradient_xy_calc_fu_356");
    grp_gradient_xy_calc_fu_356->ap_clk(ap_clk);
    grp_gradient_xy_calc_fu_356->ap_rst(ap_rst);
    grp_gradient_xy_calc_fu_356->ap_start(grp_gradient_xy_calc_fu_356_ap_start);
    grp_gradient_xy_calc_fu_356->ap_done(grp_gradient_xy_calc_fu_356_ap_done);
    grp_gradient_xy_calc_fu_356->ap_idle(grp_gradient_xy_calc_fu_356_ap_idle);
    grp_gradient_xy_calc_fu_356->ap_ready(grp_gradient_xy_calc_fu_356_ap_ready);
    grp_gradient_xy_calc_fu_356->frame_address0(grp_gradient_xy_calc_fu_356_frame_address0);
    grp_gradient_xy_calc_fu_356->frame_ce0(grp_gradient_xy_calc_fu_356_frame_ce0);
    grp_gradient_xy_calc_fu_356->frame_q0(frame2_q0);
    grp_gradient_xy_calc_fu_356->frame_address1(grp_gradient_xy_calc_fu_356_frame_address1);
    grp_gradient_xy_calc_fu_356->frame_ce1(grp_gradient_xy_calc_fu_356_frame_ce1);
    grp_gradient_xy_calc_fu_356->frame_q1(frame2_q1);
    grp_gradient_xy_calc_fu_356->gradient_x_address0(grp_gradient_xy_calc_fu_356_gradient_x_address0);
    grp_gradient_xy_calc_fu_356->gradient_x_ce0(grp_gradient_xy_calc_fu_356_gradient_x_ce0);
    grp_gradient_xy_calc_fu_356->gradient_x_we0(grp_gradient_xy_calc_fu_356_gradient_x_we0);
    grp_gradient_xy_calc_fu_356->gradient_x_d0(grp_gradient_xy_calc_fu_356_gradient_x_d0);
    grp_gradient_xy_calc_fu_356->gradient_y_address0(grp_gradient_xy_calc_fu_356_gradient_y_address0);
    grp_gradient_xy_calc_fu_356->gradient_y_ce0(grp_gradient_xy_calc_fu_356_gradient_y_ce0);
    grp_gradient_xy_calc_fu_356->gradient_y_we0(grp_gradient_xy_calc_fu_356_gradient_y_we0);
    grp_gradient_xy_calc_fu_356->gradient_y_d0(grp_gradient_xy_calc_fu_356_gradient_y_d0);
    grp_gradient_weight_y_fu_368 = new gradient_weight_y("grp_gradient_weight_y_fu_368");
    grp_gradient_weight_y_fu_368->ap_clk(ap_clk);
    grp_gradient_weight_y_fu_368->ap_rst(ap_rst);
    grp_gradient_weight_y_fu_368->ap_start(grp_gradient_weight_y_fu_368_ap_start);
    grp_gradient_weight_y_fu_368->ap_done(grp_gradient_weight_y_fu_368_ap_done);
    grp_gradient_weight_y_fu_368->ap_idle(grp_gradient_weight_y_fu_368_ap_idle);
    grp_gradient_weight_y_fu_368->ap_ready(grp_gradient_weight_y_fu_368_ap_ready);
    grp_gradient_weight_y_fu_368->filt_grad_x_address0(grp_gradient_weight_y_fu_368_filt_grad_x_address0);
    grp_gradient_weight_y_fu_368->filt_grad_x_ce0(grp_gradient_weight_y_fu_368_filt_grad_x_ce0);
    grp_gradient_weight_y_fu_368->filt_grad_x_we0(grp_gradient_weight_y_fu_368_filt_grad_x_we0);
    grp_gradient_weight_y_fu_368->filt_grad_x_d0(grp_gradient_weight_y_fu_368_filt_grad_x_d0);
    grp_gradient_weight_y_fu_368->filt_grad_y_address0(grp_gradient_weight_y_fu_368_filt_grad_y_address0);
    grp_gradient_weight_y_fu_368->filt_grad_y_ce0(grp_gradient_weight_y_fu_368_filt_grad_y_ce0);
    grp_gradient_weight_y_fu_368->filt_grad_y_we0(grp_gradient_weight_y_fu_368_filt_grad_y_we0);
    grp_gradient_weight_y_fu_368->filt_grad_y_d0(grp_gradient_weight_y_fu_368_filt_grad_y_d0);
    grp_gradient_weight_y_fu_368->filt_grad_z_address0(grp_gradient_weight_y_fu_368_filt_grad_z_address0);
    grp_gradient_weight_y_fu_368->filt_grad_z_ce0(grp_gradient_weight_y_fu_368_filt_grad_z_ce0);
    grp_gradient_weight_y_fu_368->filt_grad_z_we0(grp_gradient_weight_y_fu_368_filt_grad_z_we0);
    grp_gradient_weight_y_fu_368->filt_grad_z_d0(grp_gradient_weight_y_fu_368_filt_grad_z_d0);
    grp_gradient_weight_y_fu_368->gradient_x_address0(grp_gradient_weight_y_fu_368_gradient_x_address0);
    grp_gradient_weight_y_fu_368->gradient_x_ce0(grp_gradient_weight_y_fu_368_gradient_x_ce0);
    grp_gradient_weight_y_fu_368->gradient_x_q0(gradient_x_q0);
    grp_gradient_weight_y_fu_368->gradient_y_address0(grp_gradient_weight_y_fu_368_gradient_y_address0);
    grp_gradient_weight_y_fu_368->gradient_y_ce0(grp_gradient_weight_y_fu_368_gradient_y_ce0);
    grp_gradient_weight_y_fu_368->gradient_y_q0(gradient_y_q0);
    grp_gradient_weight_y_fu_368->gradient_z_address0(grp_gradient_weight_y_fu_368_gradient_z_address0);
    grp_gradient_weight_y_fu_368->gradient_z_ce0(grp_gradient_weight_y_fu_368_gradient_z_ce0);
    grp_gradient_weight_y_fu_368->gradient_z_q0(gradient_z_q0);
    grp_gradient_weight_x_fu_386 = new gradient_weight_x("grp_gradient_weight_x_fu_386");
    grp_gradient_weight_x_fu_386->ap_clk(ap_clk);
    grp_gradient_weight_x_fu_386->ap_rst(ap_rst);
    grp_gradient_weight_x_fu_386->ap_start(grp_gradient_weight_x_fu_386_ap_start);
    grp_gradient_weight_x_fu_386->ap_done(grp_gradient_weight_x_fu_386_ap_done);
    grp_gradient_weight_x_fu_386->ap_idle(grp_gradient_weight_x_fu_386_ap_idle);
    grp_gradient_weight_x_fu_386->ap_ready(grp_gradient_weight_x_fu_386_ap_ready);
    grp_gradient_weight_x_fu_386->filt_grad_x_address0(grp_gradient_weight_x_fu_386_filt_grad_x_address0);
    grp_gradient_weight_x_fu_386->filt_grad_x_ce0(grp_gradient_weight_x_fu_386_filt_grad_x_ce0);
    grp_gradient_weight_x_fu_386->filt_grad_x_we0(grp_gradient_weight_x_fu_386_filt_grad_x_we0);
    grp_gradient_weight_x_fu_386->filt_grad_x_d0(grp_gradient_weight_x_fu_386_filt_grad_x_d0);
    grp_gradient_weight_x_fu_386->filt_grad_y_address0(grp_gradient_weight_x_fu_386_filt_grad_y_address0);
    grp_gradient_weight_x_fu_386->filt_grad_y_ce0(grp_gradient_weight_x_fu_386_filt_grad_y_ce0);
    grp_gradient_weight_x_fu_386->filt_grad_y_we0(grp_gradient_weight_x_fu_386_filt_grad_y_we0);
    grp_gradient_weight_x_fu_386->filt_grad_y_d0(grp_gradient_weight_x_fu_386_filt_grad_y_d0);
    grp_gradient_weight_x_fu_386->filt_grad_z_address0(grp_gradient_weight_x_fu_386_filt_grad_z_address0);
    grp_gradient_weight_x_fu_386->filt_grad_z_ce0(grp_gradient_weight_x_fu_386_filt_grad_z_ce0);
    grp_gradient_weight_x_fu_386->filt_grad_z_we0(grp_gradient_weight_x_fu_386_filt_grad_z_we0);
    grp_gradient_weight_x_fu_386->filt_grad_z_d0(grp_gradient_weight_x_fu_386_filt_grad_z_d0);
    grp_gradient_weight_x_fu_386->y_filtered_x_address0(grp_gradient_weight_x_fu_386_y_filtered_x_address0);
    grp_gradient_weight_x_fu_386->y_filtered_x_ce0(grp_gradient_weight_x_fu_386_y_filtered_x_ce0);
    grp_gradient_weight_x_fu_386->y_filtered_x_q0(y_filtered_x_q0);
    grp_gradient_weight_x_fu_386->y_filtered_y_address0(grp_gradient_weight_x_fu_386_y_filtered_y_address0);
    grp_gradient_weight_x_fu_386->y_filtered_y_ce0(grp_gradient_weight_x_fu_386_y_filtered_y_ce0);
    grp_gradient_weight_x_fu_386->y_filtered_y_q0(y_filtered_y_q0);
    grp_gradient_weight_x_fu_386->y_filtered_z_address0(grp_gradient_weight_x_fu_386_y_filtered_z_address0);
    grp_gradient_weight_x_fu_386->y_filtered_z_ce0(grp_gradient_weight_x_fu_386_y_filtered_z_ce0);
    grp_gradient_weight_x_fu_386->y_filtered_z_q0(y_filtered_z_q0);
    grp_tensor_weight_y_fu_404 = new tensor_weight_y("grp_tensor_weight_y_fu_404");
    grp_tensor_weight_y_fu_404->ap_clk(ap_clk);
    grp_tensor_weight_y_fu_404->ap_rst(ap_rst);
    grp_tensor_weight_y_fu_404->ap_start(grp_tensor_weight_y_fu_404_ap_start);
    grp_tensor_weight_y_fu_404->ap_done(grp_tensor_weight_y_fu_404_ap_done);
    grp_tensor_weight_y_fu_404->ap_idle(grp_tensor_weight_y_fu_404_ap_idle);
    grp_tensor_weight_y_fu_404->ap_ready(grp_tensor_weight_y_fu_404_ap_ready);
    grp_tensor_weight_y_fu_404->tensor_y_val_2_address0(grp_tensor_weight_y_fu_404_tensor_y_val_2_address0);
    grp_tensor_weight_y_fu_404->tensor_y_val_2_ce0(grp_tensor_weight_y_fu_404_tensor_y_val_2_ce0);
    grp_tensor_weight_y_fu_404->tensor_y_val_2_we0(grp_tensor_weight_y_fu_404_tensor_y_val_2_we0);
    grp_tensor_weight_y_fu_404->tensor_y_val_2_d0(grp_tensor_weight_y_fu_404_tensor_y_val_2_d0);
    grp_tensor_weight_y_fu_404->tensor_y_val_2_address1(grp_tensor_weight_y_fu_404_tensor_y_val_2_address1);
    grp_tensor_weight_y_fu_404->tensor_y_val_2_ce1(grp_tensor_weight_y_fu_404_tensor_y_val_2_ce1);
    grp_tensor_weight_y_fu_404->tensor_y_val_2_we1(grp_tensor_weight_y_fu_404_tensor_y_val_2_we1);
    grp_tensor_weight_y_fu_404->tensor_y_val_2_d1(grp_tensor_weight_y_fu_404_tensor_y_val_2_d1);
    grp_tensor_weight_y_fu_404->out_product_val_address0(grp_tensor_weight_y_fu_404_out_product_val_address0);
    grp_tensor_weight_y_fu_404->out_product_val_ce0(grp_tensor_weight_y_fu_404_out_product_val_ce0);
    grp_tensor_weight_y_fu_404->out_product_val_q0(out_product_val_q0);
    grp_tensor_weight_x_fu_412 = new tensor_weight_x("grp_tensor_weight_x_fu_412");
    grp_tensor_weight_x_fu_412->ap_clk(ap_clk);
    grp_tensor_weight_x_fu_412->ap_rst(ap_rst);
    grp_tensor_weight_x_fu_412->ap_start(grp_tensor_weight_x_fu_412_ap_start);
    grp_tensor_weight_x_fu_412->ap_done(grp_tensor_weight_x_fu_412_ap_done);
    grp_tensor_weight_x_fu_412->ap_idle(grp_tensor_weight_x_fu_412_ap_idle);
    grp_tensor_weight_x_fu_412->ap_ready(grp_tensor_weight_x_fu_412_ap_ready);
    grp_tensor_weight_x_fu_412->tensor_0_val_address0(grp_tensor_weight_x_fu_412_tensor_0_val_address0);
    grp_tensor_weight_x_fu_412->tensor_0_val_ce0(grp_tensor_weight_x_fu_412_tensor_0_val_ce0);
    grp_tensor_weight_x_fu_412->tensor_0_val_we0(grp_tensor_weight_x_fu_412_tensor_0_val_we0);
    grp_tensor_weight_x_fu_412->tensor_0_val_d0(grp_tensor_weight_x_fu_412_tensor_0_val_d0);
    grp_tensor_weight_x_fu_412->tensor_1_val_address0(grp_tensor_weight_x_fu_412_tensor_1_val_address0);
    grp_tensor_weight_x_fu_412->tensor_1_val_ce0(grp_tensor_weight_x_fu_412_tensor_1_val_ce0);
    grp_tensor_weight_x_fu_412->tensor_1_val_we0(grp_tensor_weight_x_fu_412_tensor_1_val_we0);
    grp_tensor_weight_x_fu_412->tensor_1_val_d0(grp_tensor_weight_x_fu_412_tensor_1_val_d0);
    grp_tensor_weight_x_fu_412->tensor_3_val_address0(grp_tensor_weight_x_fu_412_tensor_3_val_address0);
    grp_tensor_weight_x_fu_412->tensor_3_val_ce0(grp_tensor_weight_x_fu_412_tensor_3_val_ce0);
    grp_tensor_weight_x_fu_412->tensor_3_val_we0(grp_tensor_weight_x_fu_412_tensor_3_val_we0);
    grp_tensor_weight_x_fu_412->tensor_3_val_d0(grp_tensor_weight_x_fu_412_tensor_3_val_d0);
    grp_tensor_weight_x_fu_412->tensor_4_val_address0(grp_tensor_weight_x_fu_412_tensor_4_val_address0);
    grp_tensor_weight_x_fu_412->tensor_4_val_ce0(grp_tensor_weight_x_fu_412_tensor_4_val_ce0);
    grp_tensor_weight_x_fu_412->tensor_4_val_we0(grp_tensor_weight_x_fu_412_tensor_4_val_we0);
    grp_tensor_weight_x_fu_412->tensor_4_val_d0(grp_tensor_weight_x_fu_412_tensor_4_val_d0);
    grp_tensor_weight_x_fu_412->tensor_5_val_address0(grp_tensor_weight_x_fu_412_tensor_5_val_address0);
    grp_tensor_weight_x_fu_412->tensor_5_val_ce0(grp_tensor_weight_x_fu_412_tensor_5_val_ce0);
    grp_tensor_weight_x_fu_412->tensor_5_val_we0(grp_tensor_weight_x_fu_412_tensor_5_val_we0);
    grp_tensor_weight_x_fu_412->tensor_5_val_d0(grp_tensor_weight_x_fu_412_tensor_5_val_d0);
    grp_tensor_weight_x_fu_412->tensor_y_val_address0(grp_tensor_weight_x_fu_412_tensor_y_val_address0);
    grp_tensor_weight_x_fu_412->tensor_y_val_ce0(grp_tensor_weight_x_fu_412_tensor_y_val_ce0);
    grp_tensor_weight_x_fu_412->tensor_y_val_q0(tensor_y_val_q0);
    optical_flow_sw_fadd_32ns_32ns_32_4_full_dsp_1_U73 = new optical_flow_sw_fadd_32ns_32ns_32_4_full_dsp_1<1,4,32,32,32>("optical_flow_sw_fadd_32ns_32ns_32_4_full_dsp_1_U73");
    optical_flow_sw_fadd_32ns_32ns_32_4_full_dsp_1_U73->clk(ap_clk);
    optical_flow_sw_fadd_32ns_32ns_32_4_full_dsp_1_U73->reset(ap_rst);
    optical_flow_sw_fadd_32ns_32ns_32_4_full_dsp_1_U73->din0(grp_fu_428_p0);
    optical_flow_sw_fadd_32ns_32ns_32_4_full_dsp_1_U73->din1(grp_fu_428_p1);
    optical_flow_sw_fadd_32ns_32ns_32_4_full_dsp_1_U73->ce(ap_var_for_const0);
    optical_flow_sw_fadd_32ns_32ns_32_4_full_dsp_1_U73->dout(grp_fu_428_p2);
    optical_flow_sw_fmul_32ns_32ns_32_3_max_dsp_1_U74 = new optical_flow_sw_fmul_32ns_32ns_32_3_max_dsp_1<1,3,32,32,32>("optical_flow_sw_fmul_32ns_32ns_32_3_max_dsp_1_U74");
    optical_flow_sw_fmul_32ns_32ns_32_3_max_dsp_1_U74->clk(ap_clk);
    optical_flow_sw_fmul_32ns_32ns_32_3_max_dsp_1_U74->reset(ap_rst);
    optical_flow_sw_fmul_32ns_32ns_32_3_max_dsp_1_U74->din0(grp_fu_433_p0);
    optical_flow_sw_fmul_32ns_32ns_32_3_max_dsp_1_U74->din1(grp_fu_433_p1);
    optical_flow_sw_fmul_32ns_32ns_32_3_max_dsp_1_U74->ce(ap_var_for_const0);
    optical_flow_sw_fmul_32ns_32ns_32_3_max_dsp_1_U74->dout(grp_fu_433_p2);
    optical_flow_sw_fmul_32ns_32ns_32_3_max_dsp_1_U75 = new optical_flow_sw_fmul_32ns_32ns_32_3_max_dsp_1<1,3,32,32,32>("optical_flow_sw_fmul_32ns_32ns_32_3_max_dsp_1_U75");
    optical_flow_sw_fmul_32ns_32ns_32_3_max_dsp_1_U75->clk(ap_clk);
    optical_flow_sw_fmul_32ns_32ns_32_3_max_dsp_1_U75->reset(ap_rst);
    optical_flow_sw_fmul_32ns_32ns_32_3_max_dsp_1_U75->din0(grp_fu_440_p0);
    optical_flow_sw_fmul_32ns_32ns_32_3_max_dsp_1_U75->din1(grad_y_reg_805);
    optical_flow_sw_fmul_32ns_32ns_32_3_max_dsp_1_U75->ce(ap_var_for_const0);
    optical_flow_sw_fmul_32ns_32ns_32_3_max_dsp_1_U75->dout(grp_fu_440_p2);
    optical_flow_sw_fmul_32ns_32ns_32_3_max_dsp_1_U76 = new optical_flow_sw_fmul_32ns_32ns_32_3_max_dsp_1<1,3,32,32,32>("optical_flow_sw_fmul_32ns_32ns_32_3_max_dsp_1_U76");
    optical_flow_sw_fmul_32ns_32ns_32_3_max_dsp_1_U76->clk(ap_clk);
    optical_flow_sw_fmul_32ns_32ns_32_3_max_dsp_1_U76->reset(ap_rst);
    optical_flow_sw_fmul_32ns_32ns_32_3_max_dsp_1_U76->din0(grad_x_reg_797);
    optical_flow_sw_fmul_32ns_32ns_32_3_max_dsp_1_U76->din1(grad_z_reg_812);
    optical_flow_sw_fmul_32ns_32ns_32_3_max_dsp_1_U76->ce(ap_var_for_const0);
    optical_flow_sw_fmul_32ns_32ns_32_3_max_dsp_1_U76->dout(grp_fu_444_p2);
    optical_flow_sw_fmul_32ns_32ns_32_3_max_dsp_1_U77 = new optical_flow_sw_fmul_32ns_32ns_32_3_max_dsp_1<1,3,32,32,32>("optical_flow_sw_fmul_32ns_32ns_32_3_max_dsp_1_U77");
    optical_flow_sw_fmul_32ns_32ns_32_3_max_dsp_1_U77->clk(ap_clk);
    optical_flow_sw_fmul_32ns_32ns_32_3_max_dsp_1_U77->reset(ap_rst);
    optical_flow_sw_fmul_32ns_32ns_32_3_max_dsp_1_U77->din0(grad_y_reg_805);
    optical_flow_sw_fmul_32ns_32ns_32_3_max_dsp_1_U77->din1(grad_z_reg_812);
    optical_flow_sw_fmul_32ns_32ns_32_3_max_dsp_1_U77->ce(ap_var_for_const0);
    optical_flow_sw_fmul_32ns_32ns_32_3_max_dsp_1_U77->dout(grp_fu_448_p2);
    optical_flow_sw_fdiv_32ns_32ns_32_9_1_U78 = new optical_flow_sw_fdiv_32ns_32ns_32_9_1<1,9,32,32,32>("optical_flow_sw_fdiv_32ns_32ns_32_9_1_U78");
    optical_flow_sw_fdiv_32ns_32ns_32_9_1_U78->clk(ap_clk);
    optical_flow_sw_fdiv_32ns_32ns_32_9_1_U78->reset(ap_rst);
    optical_flow_sw_fdiv_32ns_32ns_32_9_1_U78->din0(reg_457);
    optical_flow_sw_fdiv_32ns_32ns_32_9_1_U78->din1(ap_var_for_const1);
    optical_flow_sw_fdiv_32ns_32ns_32_9_1_U78->ce(ap_var_for_const0);
    optical_flow_sw_fdiv_32ns_32ns_32_9_1_U78->dout(grp_fu_452_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_add_ln136_fu_573_p2);
    sensitive << ( zext_ln134_reg_763 );
    sensitive << ( zext_ln136_fu_569_p1 );

    SC_METHOD(thread_add_ln144_1_fu_635_p2);
    sensitive << ( sub_ln144_reg_825 );

    SC_METHOD(thread_add_ln144_2_fu_645_p2);
    sensitive << ( sub_ln144_reg_825 );

    SC_METHOD(thread_add_ln144_3_fu_655_p2);
    sensitive << ( sub_ln144_reg_825 );

    SC_METHOD(thread_add_ln144_fu_625_p2);
    sensitive << ( sub_ln144_reg_825 );

    SC_METHOD(thread_add_ln55_fu_509_p2);
    sensitive << ( zext_ln53_reg_673 );
    sensitive << ( zext_ln55_fu_505_p1 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state13);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state14);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state15);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state17);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state18);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state20);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state21);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state22);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state25);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state26);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state34);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state35);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state36);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state37);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state38);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state39);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state40);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state41);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state42);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state43);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state44);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state45);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state46);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state47);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state48);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state49);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state50);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state51);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state52);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state53);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( grp_flow_calc_fu_338_ap_done );
    sensitive << ( ap_CS_fsm_state53 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( grp_flow_calc_fu_338_ap_done );
    sensitive << ( ap_CS_fsm_state53 );

    SC_METHOD(thread_bitcast_ln60_1_fu_528_p1);
    sensitive << ( xor_ln60_fu_522_p2 );

    SC_METHOD(thread_bitcast_ln60_fu_519_p1);
    sensitive << ( frame4_load_reg_740 );

    SC_METHOD(thread_c_1_fu_563_p2);
    sensitive << ( c_0_i9_reg_327 );

    SC_METHOD(thread_c_fu_499_p2);
    sensitive << ( c_0_i_reg_305 );

    SC_METHOD(thread_filtered_gradient_x_address0);
    sensitive << ( ap_CS_fsm_state40 );
    sensitive << ( grp_gradient_weight_x_fu_386_filt_grad_x_address0 );
    sensitive << ( ap_CS_fsm_state38 );
    sensitive << ( zext_ln136_1_fu_578_p1 );

    SC_METHOD(thread_filtered_gradient_x_ce0);
    sensitive << ( ap_CS_fsm_state40 );
    sensitive << ( grp_gradient_weight_x_fu_386_filt_grad_x_ce0 );
    sensitive << ( ap_CS_fsm_state38 );

    SC_METHOD(thread_filtered_gradient_x_we0);
    sensitive << ( grp_gradient_weight_x_fu_386_filt_grad_x_we0 );
    sensitive << ( ap_CS_fsm_state38 );

    SC_METHOD(thread_filtered_gradient_y_address0);
    sensitive << ( ap_CS_fsm_state40 );
    sensitive << ( grp_gradient_weight_x_fu_386_filt_grad_y_address0 );
    sensitive << ( ap_CS_fsm_state38 );
    sensitive << ( zext_ln136_1_fu_578_p1 );

    SC_METHOD(thread_filtered_gradient_y_ce0);
    sensitive << ( ap_CS_fsm_state40 );
    sensitive << ( grp_gradient_weight_x_fu_386_filt_grad_y_ce0 );
    sensitive << ( ap_CS_fsm_state38 );

    SC_METHOD(thread_filtered_gradient_y_we0);
    sensitive << ( grp_gradient_weight_x_fu_386_filt_grad_y_we0 );
    sensitive << ( ap_CS_fsm_state38 );

    SC_METHOD(thread_filtered_gradient_z_address0);
    sensitive << ( ap_CS_fsm_state40 );
    sensitive << ( grp_gradient_weight_x_fu_386_filt_grad_z_address0 );
    sensitive << ( ap_CS_fsm_state38 );
    sensitive << ( zext_ln136_1_fu_578_p1 );

    SC_METHOD(thread_filtered_gradient_z_ce0);
    sensitive << ( ap_CS_fsm_state40 );
    sensitive << ( grp_gradient_weight_x_fu_386_filt_grad_z_ce0 );
    sensitive << ( ap_CS_fsm_state38 );

    SC_METHOD(thread_filtered_gradient_z_we0);
    sensitive << ( grp_gradient_weight_x_fu_386_filt_grad_z_we0 );
    sensitive << ( ap_CS_fsm_state38 );

    SC_METHOD(thread_frame0_address0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( zext_ln55_1_fu_514_p1 );

    SC_METHOD(thread_frame0_ce0);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_frame1_address0);
    sensitive << ( zext_ln55_1_reg_686 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_frame1_ce0);
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_frame2_address0);
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( zext_ln55_1_reg_686 );
    sensitive << ( grp_gradient_xy_calc_fu_356_frame_address0 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_frame2_address1);
    sensitive << ( grp_gradient_xy_calc_fu_356_frame_address1 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_frame2_ce0);
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( grp_gradient_xy_calc_fu_356_frame_ce0 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_frame2_ce1);
    sensitive << ( grp_gradient_xy_calc_fu_356_frame_ce1 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_frame3_address0);
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( zext_ln55_1_reg_686 );

    SC_METHOD(thread_frame3_ce0);
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_frame4_address0);
    sensitive << ( zext_ln55_1_reg_686 );
    sensitive << ( ap_CS_fsm_state20 );

    SC_METHOD(thread_frame4_ce0);
    sensitive << ( ap_CS_fsm_state20 );

    SC_METHOD(thread_gradient_x_address0);
    sensitive << ( grp_gradient_xy_calc_fu_356_gradient_x_address0 );
    sensitive << ( grp_gradient_weight_y_fu_368_gradient_x_address0 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state36 );

    SC_METHOD(thread_gradient_x_ce0);
    sensitive << ( grp_gradient_xy_calc_fu_356_gradient_x_ce0 );
    sensitive << ( grp_gradient_weight_y_fu_368_gradient_x_ce0 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state36 );

    SC_METHOD(thread_gradient_x_we0);
    sensitive << ( grp_gradient_xy_calc_fu_356_gradient_x_we0 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_gradient_y_address0);
    sensitive << ( grp_gradient_xy_calc_fu_356_gradient_y_address0 );
    sensitive << ( grp_gradient_weight_y_fu_368_gradient_y_address0 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state36 );

    SC_METHOD(thread_gradient_y_ce0);
    sensitive << ( grp_gradient_xy_calc_fu_356_gradient_y_ce0 );
    sensitive << ( grp_gradient_weight_y_fu_368_gradient_y_ce0 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state36 );

    SC_METHOD(thread_gradient_y_we0);
    sensitive << ( grp_gradient_xy_calc_fu_356_gradient_y_we0 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_gradient_z_address0);
    sensitive << ( zext_ln55_1_reg_686 );
    sensitive << ( grp_gradient_weight_y_fu_368_gradient_z_address0 );
    sensitive << ( ap_CS_fsm_state35 );
    sensitive << ( ap_CS_fsm_state36 );

    SC_METHOD(thread_gradient_z_ce0);
    sensitive << ( grp_gradient_weight_y_fu_368_gradient_z_ce0 );
    sensitive << ( ap_CS_fsm_state35 );
    sensitive << ( ap_CS_fsm_state36 );

    SC_METHOD(thread_gradient_z_we0);
    sensitive << ( ap_CS_fsm_state35 );

    SC_METHOD(thread_grp_flow_calc_fu_338_ap_start);
    sensitive << ( grp_flow_calc_fu_338_ap_start_reg );

    SC_METHOD(thread_grp_fu_428_p0);
    sensitive << ( reg_457 );
    sensitive << ( frame0_load_reg_705 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( ap_CS_fsm_state18 );

    SC_METHOD(thread_grp_fu_428_p1);
    sensitive << ( reg_463 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( bitcast_ln60_1_fu_528_p1 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( ap_CS_fsm_state18 );

    SC_METHOD(thread_grp_fu_433_p0);
    sensitive << ( frame1_load_reg_710 );
    sensitive << ( frame2_load_reg_720 );
    sensitive << ( frame3_load_reg_730 );
    sensitive << ( grad_x_reg_797 );
    sensitive << ( grad_z_reg_812 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state42 );
    sensitive << ( ap_CS_fsm_state43 );

    SC_METHOD(thread_grp_fu_433_p1);
    sensitive << ( grad_x_reg_797 );
    sensitive << ( grad_z_reg_812 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state42 );
    sensitive << ( ap_CS_fsm_state43 );

    SC_METHOD(thread_grp_fu_440_p0);
    sensitive << ( grad_x_reg_797 );
    sensitive << ( grad_y_reg_805 );
    sensitive << ( ap_CS_fsm_state42 );
    sensitive << ( ap_CS_fsm_state43 );

    SC_METHOD(thread_grp_gradient_weight_x_fu_386_ap_start);
    sensitive << ( grp_gradient_weight_x_fu_386_ap_start_reg );

    SC_METHOD(thread_grp_gradient_weight_y_fu_368_ap_start);
    sensitive << ( grp_gradient_weight_y_fu_368_ap_start_reg );

    SC_METHOD(thread_grp_gradient_xy_calc_fu_356_ap_start);
    sensitive << ( grp_gradient_xy_calc_fu_356_ap_start_reg );

    SC_METHOD(thread_grp_tensor_weight_x_fu_412_ap_start);
    sensitive << ( grp_tensor_weight_x_fu_412_ap_start_reg );

    SC_METHOD(thread_grp_tensor_weight_y_fu_404_ap_start);
    sensitive << ( grp_tensor_weight_y_fu_404_ap_start_reg );

    SC_METHOD(thread_icmp_ln132_fu_533_p2);
    sensitive << ( ap_CS_fsm_state39 );
    sensitive << ( r_0_i7_reg_316 );

    SC_METHOD(thread_icmp_ln134_fu_557_p2);
    sensitive << ( ap_CS_fsm_state40 );
    sensitive << ( c_0_i9_reg_327 );

    SC_METHOD(thread_icmp_ln51_fu_469_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( r_0_i_reg_294 );

    SC_METHOD(thread_icmp_ln53_fu_493_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( c_0_i_reg_305 );

    SC_METHOD(thread_or_ln144_fu_614_p2);
    sensitive << ( sub_ln144_fu_603_p2 );

    SC_METHOD(thread_out_product_val_address0);
    sensitive << ( ap_CS_fsm_state45 );
    sensitive << ( ap_CS_fsm_state46 );
    sensitive << ( ap_CS_fsm_state47 );
    sensitive << ( grp_tensor_weight_y_fu_404_out_product_val_address0 );
    sensitive << ( ap_CS_fsm_state49 );
    sensitive << ( zext_ln144_1_fu_609_p1 );
    sensitive << ( zext_ln144_3_fu_630_p1 );
    sensitive << ( zext_ln144_5_fu_650_p1 );

    SC_METHOD(thread_out_product_val_address1);
    sensitive << ( ap_CS_fsm_state45 );
    sensitive << ( ap_CS_fsm_state46 );
    sensitive << ( ap_CS_fsm_state47 );
    sensitive << ( zext_ln144_2_fu_620_p1 );
    sensitive << ( zext_ln144_4_fu_640_p1 );
    sensitive << ( zext_ln144_6_fu_660_p1 );

    SC_METHOD(thread_out_product_val_ce0);
    sensitive << ( ap_CS_fsm_state45 );
    sensitive << ( ap_CS_fsm_state46 );
    sensitive << ( ap_CS_fsm_state47 );
    sensitive << ( grp_tensor_weight_y_fu_404_out_product_val_ce0 );
    sensitive << ( ap_CS_fsm_state48 );
    sensitive << ( ap_CS_fsm_state49 );

    SC_METHOD(thread_out_product_val_ce1);
    sensitive << ( ap_CS_fsm_state45 );
    sensitive << ( ap_CS_fsm_state46 );
    sensitive << ( ap_CS_fsm_state47 );
    sensitive << ( ap_CS_fsm_state48 );

    SC_METHOD(thread_out_product_val_d0);
    sensitive << ( reg_463 );
    sensitive << ( ap_CS_fsm_state45 );
    sensitive << ( tmp_4_i_reg_843 );
    sensitive << ( tmp_6_i1_reg_853 );
    sensitive << ( ap_CS_fsm_state46 );
    sensitive << ( ap_CS_fsm_state47 );

    SC_METHOD(thread_out_product_val_d1);
    sensitive << ( tmp_3_i1_reg_820 );
    sensitive << ( ap_CS_fsm_state45 );
    sensitive << ( tmp_5_i1_reg_848 );
    sensitive << ( tmp_7_i_reg_858 );
    sensitive << ( ap_CS_fsm_state46 );
    sensitive << ( ap_CS_fsm_state47 );

    SC_METHOD(thread_out_product_val_we0);
    sensitive << ( ap_CS_fsm_state45 );
    sensitive << ( ap_CS_fsm_state46 );
    sensitive << ( ap_CS_fsm_state47 );

    SC_METHOD(thread_out_product_val_we1);
    sensitive << ( ap_CS_fsm_state45 );
    sensitive << ( ap_CS_fsm_state46 );
    sensitive << ( ap_CS_fsm_state47 );

    SC_METHOD(thread_outputs_x_address0);
    sensitive << ( grp_flow_calc_fu_338_output_x_address0 );
    sensitive << ( ap_CS_fsm_state53 );

    SC_METHOD(thread_outputs_x_ce0);
    sensitive << ( grp_flow_calc_fu_338_output_x_ce0 );
    sensitive << ( ap_CS_fsm_state53 );

    SC_METHOD(thread_outputs_x_d0);
    sensitive << ( grp_flow_calc_fu_338_output_x_d0 );
    sensitive << ( ap_CS_fsm_state53 );

    SC_METHOD(thread_outputs_x_we0);
    sensitive << ( grp_flow_calc_fu_338_output_x_we0 );
    sensitive << ( ap_CS_fsm_state53 );

    SC_METHOD(thread_outputs_y_address0);
    sensitive << ( grp_flow_calc_fu_338_output_y_address0 );
    sensitive << ( ap_CS_fsm_state53 );

    SC_METHOD(thread_outputs_y_ce0);
    sensitive << ( grp_flow_calc_fu_338_output_y_ce0 );
    sensitive << ( ap_CS_fsm_state53 );

    SC_METHOD(thread_outputs_y_d0);
    sensitive << ( grp_flow_calc_fu_338_output_y_d0 );
    sensitive << ( ap_CS_fsm_state53 );

    SC_METHOD(thread_outputs_y_we0);
    sensitive << ( grp_flow_calc_fu_338_output_y_we0 );
    sensitive << ( ap_CS_fsm_state53 );

    SC_METHOD(thread_p_shl_cast_fu_585_p3);
    sensitive << ( add_ln136_reg_776 );

    SC_METHOD(thread_r_1_fu_539_p2);
    sensitive << ( r_0_i7_reg_316 );

    SC_METHOD(thread_r_fu_475_p2);
    sensitive << ( r_0_i_reg_294 );

    SC_METHOD(thread_sub_ln144_fu_603_p2);
    sensitive << ( p_shl_cast_fu_585_p3 );
    sensitive << ( zext_ln144_fu_599_p1 );

    SC_METHOD(thread_tensor_val_0_address0);
    sensitive << ( grp_flow_calc_fu_338_tensor_val_0_address0 );
    sensitive << ( grp_tensor_weight_x_fu_412_tensor_0_val_address0 );
    sensitive << ( ap_CS_fsm_state53 );
    sensitive << ( ap_CS_fsm_state51 );

    SC_METHOD(thread_tensor_val_0_ce0);
    sensitive << ( grp_flow_calc_fu_338_tensor_val_0_ce0 );
    sensitive << ( grp_tensor_weight_x_fu_412_tensor_0_val_ce0 );
    sensitive << ( ap_CS_fsm_state53 );
    sensitive << ( ap_CS_fsm_state51 );

    SC_METHOD(thread_tensor_val_0_we0);
    sensitive << ( grp_tensor_weight_x_fu_412_tensor_0_val_we0 );
    sensitive << ( ap_CS_fsm_state51 );

    SC_METHOD(thread_tensor_val_1_address0);
    sensitive << ( grp_flow_calc_fu_338_tensor_val_1_address0 );
    sensitive << ( grp_tensor_weight_x_fu_412_tensor_1_val_address0 );
    sensitive << ( ap_CS_fsm_state53 );
    sensitive << ( ap_CS_fsm_state51 );

    SC_METHOD(thread_tensor_val_1_ce0);
    sensitive << ( grp_flow_calc_fu_338_tensor_val_1_ce0 );
    sensitive << ( grp_tensor_weight_x_fu_412_tensor_1_val_ce0 );
    sensitive << ( ap_CS_fsm_state53 );
    sensitive << ( ap_CS_fsm_state51 );

    SC_METHOD(thread_tensor_val_1_we0);
    sensitive << ( grp_tensor_weight_x_fu_412_tensor_1_val_we0 );
    sensitive << ( ap_CS_fsm_state51 );

    SC_METHOD(thread_tensor_val_3_address0);
    sensitive << ( grp_flow_calc_fu_338_tensor_val_3_address0 );
    sensitive << ( grp_tensor_weight_x_fu_412_tensor_3_val_address0 );
    sensitive << ( ap_CS_fsm_state53 );
    sensitive << ( ap_CS_fsm_state51 );

    SC_METHOD(thread_tensor_val_3_ce0);
    sensitive << ( grp_flow_calc_fu_338_tensor_val_3_ce0 );
    sensitive << ( grp_tensor_weight_x_fu_412_tensor_3_val_ce0 );
    sensitive << ( ap_CS_fsm_state53 );
    sensitive << ( ap_CS_fsm_state51 );

    SC_METHOD(thread_tensor_val_3_we0);
    sensitive << ( grp_tensor_weight_x_fu_412_tensor_3_val_we0 );
    sensitive << ( ap_CS_fsm_state51 );

    SC_METHOD(thread_tensor_val_4_address0);
    sensitive << ( grp_flow_calc_fu_338_tensor_val_4_address0 );
    sensitive << ( grp_tensor_weight_x_fu_412_tensor_4_val_address0 );
    sensitive << ( ap_CS_fsm_state53 );
    sensitive << ( ap_CS_fsm_state51 );

    SC_METHOD(thread_tensor_val_4_ce0);
    sensitive << ( grp_flow_calc_fu_338_tensor_val_4_ce0 );
    sensitive << ( grp_tensor_weight_x_fu_412_tensor_4_val_ce0 );
    sensitive << ( ap_CS_fsm_state53 );
    sensitive << ( ap_CS_fsm_state51 );

    SC_METHOD(thread_tensor_val_4_we0);
    sensitive << ( grp_tensor_weight_x_fu_412_tensor_4_val_we0 );
    sensitive << ( ap_CS_fsm_state51 );

    SC_METHOD(thread_tensor_val_5_address0);
    sensitive << ( grp_flow_calc_fu_338_tensor_val_5_address0 );
    sensitive << ( grp_tensor_weight_x_fu_412_tensor_5_val_address0 );
    sensitive << ( ap_CS_fsm_state53 );
    sensitive << ( ap_CS_fsm_state51 );

    SC_METHOD(thread_tensor_val_5_ce0);
    sensitive << ( grp_flow_calc_fu_338_tensor_val_5_ce0 );
    sensitive << ( grp_tensor_weight_x_fu_412_tensor_5_val_ce0 );
    sensitive << ( ap_CS_fsm_state53 );
    sensitive << ( ap_CS_fsm_state51 );

    SC_METHOD(thread_tensor_val_5_we0);
    sensitive << ( grp_tensor_weight_x_fu_412_tensor_5_val_we0 );
    sensitive << ( ap_CS_fsm_state51 );

    SC_METHOD(thread_tensor_y_val_address0);
    sensitive << ( grp_tensor_weight_y_fu_404_tensor_y_val_2_address0 );
    sensitive << ( grp_tensor_weight_x_fu_412_tensor_y_val_address0 );
    sensitive << ( ap_CS_fsm_state49 );
    sensitive << ( ap_CS_fsm_state51 );

    SC_METHOD(thread_tensor_y_val_ce0);
    sensitive << ( grp_tensor_weight_y_fu_404_tensor_y_val_2_ce0 );
    sensitive << ( grp_tensor_weight_x_fu_412_tensor_y_val_ce0 );
    sensitive << ( ap_CS_fsm_state49 );
    sensitive << ( ap_CS_fsm_state51 );

    SC_METHOD(thread_tensor_y_val_ce1);
    sensitive << ( grp_tensor_weight_y_fu_404_tensor_y_val_2_ce1 );
    sensitive << ( ap_CS_fsm_state49 );

    SC_METHOD(thread_tensor_y_val_we0);
    sensitive << ( grp_tensor_weight_y_fu_404_tensor_y_val_2_we0 );
    sensitive << ( ap_CS_fsm_state49 );

    SC_METHOD(thread_tensor_y_val_we1);
    sensitive << ( grp_tensor_weight_y_fu_404_tensor_y_val_2_we1 );
    sensitive << ( ap_CS_fsm_state49 );

    SC_METHOD(thread_tmp_11_fu_592_p3);
    sensitive << ( add_ln136_reg_776 );

    SC_METHOD(thread_tmp_fu_481_p3);
    sensitive << ( r_0_i_reg_294 );

    SC_METHOD(thread_tmp_s_fu_545_p3);
    sensitive << ( r_0_i7_reg_316 );

    SC_METHOD(thread_xor_ln60_fu_522_p2);
    sensitive << ( bitcast_ln60_fu_519_p1 );

    SC_METHOD(thread_y_filtered_x_address0);
    sensitive << ( grp_gradient_weight_y_fu_368_filt_grad_x_address0 );
    sensitive << ( grp_gradient_weight_x_fu_386_y_filtered_x_address0 );
    sensitive << ( ap_CS_fsm_state38 );
    sensitive << ( ap_CS_fsm_state36 );

    SC_METHOD(thread_y_filtered_x_ce0);
    sensitive << ( grp_gradient_weight_y_fu_368_filt_grad_x_ce0 );
    sensitive << ( grp_gradient_weight_x_fu_386_y_filtered_x_ce0 );
    sensitive << ( ap_CS_fsm_state38 );
    sensitive << ( ap_CS_fsm_state36 );

    SC_METHOD(thread_y_filtered_x_we0);
    sensitive << ( grp_gradient_weight_y_fu_368_filt_grad_x_we0 );
    sensitive << ( ap_CS_fsm_state36 );

    SC_METHOD(thread_y_filtered_y_address0);
    sensitive << ( grp_gradient_weight_y_fu_368_filt_grad_y_address0 );
    sensitive << ( grp_gradient_weight_x_fu_386_y_filtered_y_address0 );
    sensitive << ( ap_CS_fsm_state38 );
    sensitive << ( ap_CS_fsm_state36 );

    SC_METHOD(thread_y_filtered_y_ce0);
    sensitive << ( grp_gradient_weight_y_fu_368_filt_grad_y_ce0 );
    sensitive << ( grp_gradient_weight_x_fu_386_y_filtered_y_ce0 );
    sensitive << ( ap_CS_fsm_state38 );
    sensitive << ( ap_CS_fsm_state36 );

    SC_METHOD(thread_y_filtered_y_we0);
    sensitive << ( grp_gradient_weight_y_fu_368_filt_grad_y_we0 );
    sensitive << ( ap_CS_fsm_state36 );

    SC_METHOD(thread_y_filtered_z_address0);
    sensitive << ( grp_gradient_weight_y_fu_368_filt_grad_z_address0 );
    sensitive << ( grp_gradient_weight_x_fu_386_y_filtered_z_address0 );
    sensitive << ( ap_CS_fsm_state38 );
    sensitive << ( ap_CS_fsm_state36 );

    SC_METHOD(thread_y_filtered_z_ce0);
    sensitive << ( grp_gradient_weight_y_fu_368_filt_grad_z_ce0 );
    sensitive << ( grp_gradient_weight_x_fu_386_y_filtered_z_ce0 );
    sensitive << ( ap_CS_fsm_state38 );
    sensitive << ( ap_CS_fsm_state36 );

    SC_METHOD(thread_y_filtered_z_we0);
    sensitive << ( grp_gradient_weight_y_fu_368_filt_grad_z_we0 );
    sensitive << ( ap_CS_fsm_state36 );

    SC_METHOD(thread_zext_ln134_fu_553_p1);
    sensitive << ( tmp_s_fu_545_p3 );

    SC_METHOD(thread_zext_ln136_1_fu_578_p1);
    sensitive << ( add_ln136_fu_573_p2 );

    SC_METHOD(thread_zext_ln136_fu_569_p1);
    sensitive << ( c_0_i9_reg_327 );

    SC_METHOD(thread_zext_ln144_1_fu_609_p1);
    sensitive << ( sub_ln144_fu_603_p2 );

    SC_METHOD(thread_zext_ln144_2_fu_620_p1);
    sensitive << ( or_ln144_fu_614_p2 );

    SC_METHOD(thread_zext_ln144_3_fu_630_p1);
    sensitive << ( add_ln144_fu_625_p2 );

    SC_METHOD(thread_zext_ln144_4_fu_640_p1);
    sensitive << ( add_ln144_1_fu_635_p2 );

    SC_METHOD(thread_zext_ln144_5_fu_650_p1);
    sensitive << ( add_ln144_2_fu_645_p2 );

    SC_METHOD(thread_zext_ln144_6_fu_660_p1);
    sensitive << ( add_ln144_3_fu_655_p2 );

    SC_METHOD(thread_zext_ln144_fu_599_p1);
    sensitive << ( tmp_11_fu_592_p3 );

    SC_METHOD(thread_zext_ln53_fu_489_p1);
    sensitive << ( tmp_fu_481_p3 );

    SC_METHOD(thread_zext_ln55_1_fu_514_p1);
    sensitive << ( add_ln55_fu_509_p2 );

    SC_METHOD(thread_zext_ln55_fu_505_p1);
    sensitive << ( c_0_i_reg_305 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( icmp_ln51_fu_469_p2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( icmp_ln53_fu_493_p2 );
    sensitive << ( ap_CS_fsm_state39 );
    sensitive << ( icmp_ln132_fu_533_p2 );
    sensitive << ( ap_CS_fsm_state40 );
    sensitive << ( icmp_ln134_fu_557_p2 );
    sensitive << ( grp_flow_calc_fu_338_ap_done );
    sensitive << ( grp_gradient_xy_calc_fu_356_ap_done );
    sensitive << ( grp_gradient_weight_y_fu_368_ap_done );
    sensitive << ( grp_gradient_weight_x_fu_386_ap_done );
    sensitive << ( grp_tensor_weight_y_fu_404_ap_done );
    sensitive << ( grp_tensor_weight_x_fu_412_ap_done );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state38 );
    sensitive << ( ap_CS_fsm_state53 );
    sensitive << ( ap_CS_fsm_state36 );
    sensitive << ( ap_CS_fsm_state49 );
    sensitive << ( ap_CS_fsm_state51 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    SC_THREAD(thread_ap_var_for_const1);

    ap_CS_fsm = "00000000000000000000000000000000000000000000000000001";
    grp_flow_calc_fu_338_ap_start_reg = SC_LOGIC_0;
    grp_gradient_xy_calc_fu_356_ap_start_reg = SC_LOGIC_0;
    grp_gradient_weight_y_fu_368_ap_start_reg = SC_LOGIC_0;
    grp_gradient_weight_x_fu_386_ap_start_reg = SC_LOGIC_0;
    grp_tensor_weight_y_fu_404_ap_start_reg = SC_LOGIC_0;
    grp_tensor_weight_x_fu_412_ap_start_reg = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "optical_flow_sw_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, frame0_address0, "(port)frame0_address0");
    sc_trace(mVcdFile, frame0_ce0, "(port)frame0_ce0");
    sc_trace(mVcdFile, frame0_q0, "(port)frame0_q0");
    sc_trace(mVcdFile, frame1_address0, "(port)frame1_address0");
    sc_trace(mVcdFile, frame1_ce0, "(port)frame1_ce0");
    sc_trace(mVcdFile, frame1_q0, "(port)frame1_q0");
    sc_trace(mVcdFile, frame2_address0, "(port)frame2_address0");
    sc_trace(mVcdFile, frame2_ce0, "(port)frame2_ce0");
    sc_trace(mVcdFile, frame2_q0, "(port)frame2_q0");
    sc_trace(mVcdFile, frame2_address1, "(port)frame2_address1");
    sc_trace(mVcdFile, frame2_ce1, "(port)frame2_ce1");
    sc_trace(mVcdFile, frame2_q1, "(port)frame2_q1");
    sc_trace(mVcdFile, frame3_address0, "(port)frame3_address0");
    sc_trace(mVcdFile, frame3_ce0, "(port)frame3_ce0");
    sc_trace(mVcdFile, frame3_q0, "(port)frame3_q0");
    sc_trace(mVcdFile, frame4_address0, "(port)frame4_address0");
    sc_trace(mVcdFile, frame4_ce0, "(port)frame4_ce0");
    sc_trace(mVcdFile, frame4_q0, "(port)frame4_q0");
    sc_trace(mVcdFile, outputs_x_address0, "(port)outputs_x_address0");
    sc_trace(mVcdFile, outputs_x_ce0, "(port)outputs_x_ce0");
    sc_trace(mVcdFile, outputs_x_we0, "(port)outputs_x_we0");
    sc_trace(mVcdFile, outputs_x_d0, "(port)outputs_x_d0");
    sc_trace(mVcdFile, outputs_y_address0, "(port)outputs_y_address0");
    sc_trace(mVcdFile, outputs_y_ce0, "(port)outputs_y_ce0");
    sc_trace(mVcdFile, outputs_y_we0, "(port)outputs_y_we0");
    sc_trace(mVcdFile, outputs_y_d0, "(port)outputs_y_d0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, gradient_x_address0, "gradient_x_address0");
    sc_trace(mVcdFile, gradient_x_ce0, "gradient_x_ce0");
    sc_trace(mVcdFile, gradient_x_we0, "gradient_x_we0");
    sc_trace(mVcdFile, gradient_x_q0, "gradient_x_q0");
    sc_trace(mVcdFile, gradient_y_address0, "gradient_y_address0");
    sc_trace(mVcdFile, gradient_y_ce0, "gradient_y_ce0");
    sc_trace(mVcdFile, gradient_y_we0, "gradient_y_we0");
    sc_trace(mVcdFile, gradient_y_q0, "gradient_y_q0");
    sc_trace(mVcdFile, gradient_z_address0, "gradient_z_address0");
    sc_trace(mVcdFile, gradient_z_ce0, "gradient_z_ce0");
    sc_trace(mVcdFile, gradient_z_we0, "gradient_z_we0");
    sc_trace(mVcdFile, gradient_z_q0, "gradient_z_q0");
    sc_trace(mVcdFile, y_filtered_x_address0, "y_filtered_x_address0");
    sc_trace(mVcdFile, y_filtered_x_ce0, "y_filtered_x_ce0");
    sc_trace(mVcdFile, y_filtered_x_we0, "y_filtered_x_we0");
    sc_trace(mVcdFile, y_filtered_x_q0, "y_filtered_x_q0");
    sc_trace(mVcdFile, y_filtered_y_address0, "y_filtered_y_address0");
    sc_trace(mVcdFile, y_filtered_y_ce0, "y_filtered_y_ce0");
    sc_trace(mVcdFile, y_filtered_y_we0, "y_filtered_y_we0");
    sc_trace(mVcdFile, y_filtered_y_q0, "y_filtered_y_q0");
    sc_trace(mVcdFile, y_filtered_z_address0, "y_filtered_z_address0");
    sc_trace(mVcdFile, y_filtered_z_ce0, "y_filtered_z_ce0");
    sc_trace(mVcdFile, y_filtered_z_we0, "y_filtered_z_we0");
    sc_trace(mVcdFile, y_filtered_z_q0, "y_filtered_z_q0");
    sc_trace(mVcdFile, filtered_gradient_x_address0, "filtered_gradient_x_address0");
    sc_trace(mVcdFile, filtered_gradient_x_ce0, "filtered_gradient_x_ce0");
    sc_trace(mVcdFile, filtered_gradient_x_we0, "filtered_gradient_x_we0");
    sc_trace(mVcdFile, filtered_gradient_x_q0, "filtered_gradient_x_q0");
    sc_trace(mVcdFile, filtered_gradient_y_address0, "filtered_gradient_y_address0");
    sc_trace(mVcdFile, filtered_gradient_y_ce0, "filtered_gradient_y_ce0");
    sc_trace(mVcdFile, filtered_gradient_y_we0, "filtered_gradient_y_we0");
    sc_trace(mVcdFile, filtered_gradient_y_q0, "filtered_gradient_y_q0");
    sc_trace(mVcdFile, filtered_gradient_z_address0, "filtered_gradient_z_address0");
    sc_trace(mVcdFile, filtered_gradient_z_ce0, "filtered_gradient_z_ce0");
    sc_trace(mVcdFile, filtered_gradient_z_we0, "filtered_gradient_z_we0");
    sc_trace(mVcdFile, filtered_gradient_z_q0, "filtered_gradient_z_q0");
    sc_trace(mVcdFile, out_product_val_address0, "out_product_val_address0");
    sc_trace(mVcdFile, out_product_val_ce0, "out_product_val_ce0");
    sc_trace(mVcdFile, out_product_val_we0, "out_product_val_we0");
    sc_trace(mVcdFile, out_product_val_d0, "out_product_val_d0");
    sc_trace(mVcdFile, out_product_val_q0, "out_product_val_q0");
    sc_trace(mVcdFile, out_product_val_address1, "out_product_val_address1");
    sc_trace(mVcdFile, out_product_val_ce1, "out_product_val_ce1");
    sc_trace(mVcdFile, out_product_val_we1, "out_product_val_we1");
    sc_trace(mVcdFile, out_product_val_d1, "out_product_val_d1");
    sc_trace(mVcdFile, tensor_y_val_address0, "tensor_y_val_address0");
    sc_trace(mVcdFile, tensor_y_val_ce0, "tensor_y_val_ce0");
    sc_trace(mVcdFile, tensor_y_val_we0, "tensor_y_val_we0");
    sc_trace(mVcdFile, tensor_y_val_q0, "tensor_y_val_q0");
    sc_trace(mVcdFile, tensor_y_val_ce1, "tensor_y_val_ce1");
    sc_trace(mVcdFile, tensor_y_val_we1, "tensor_y_val_we1");
    sc_trace(mVcdFile, tensor_val_0_address0, "tensor_val_0_address0");
    sc_trace(mVcdFile, tensor_val_0_ce0, "tensor_val_0_ce0");
    sc_trace(mVcdFile, tensor_val_0_we0, "tensor_val_0_we0");
    sc_trace(mVcdFile, tensor_val_0_q0, "tensor_val_0_q0");
    sc_trace(mVcdFile, tensor_val_1_address0, "tensor_val_1_address0");
    sc_trace(mVcdFile, tensor_val_1_ce0, "tensor_val_1_ce0");
    sc_trace(mVcdFile, tensor_val_1_we0, "tensor_val_1_we0");
    sc_trace(mVcdFile, tensor_val_1_q0, "tensor_val_1_q0");
    sc_trace(mVcdFile, tensor_val_3_address0, "tensor_val_3_address0");
    sc_trace(mVcdFile, tensor_val_3_ce0, "tensor_val_3_ce0");
    sc_trace(mVcdFile, tensor_val_3_we0, "tensor_val_3_we0");
    sc_trace(mVcdFile, tensor_val_3_q0, "tensor_val_3_q0");
    sc_trace(mVcdFile, tensor_val_4_address0, "tensor_val_4_address0");
    sc_trace(mVcdFile, tensor_val_4_ce0, "tensor_val_4_ce0");
    sc_trace(mVcdFile, tensor_val_4_we0, "tensor_val_4_we0");
    sc_trace(mVcdFile, tensor_val_4_q0, "tensor_val_4_q0");
    sc_trace(mVcdFile, tensor_val_5_address0, "tensor_val_5_address0");
    sc_trace(mVcdFile, tensor_val_5_ce0, "tensor_val_5_ce0");
    sc_trace(mVcdFile, tensor_val_5_we0, "tensor_val_5_we0");
    sc_trace(mVcdFile, tensor_val_5_q0, "tensor_val_5_q0");
    sc_trace(mVcdFile, grp_fu_428_p2, "grp_fu_428_p2");
    sc_trace(mVcdFile, reg_457, "reg_457");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, ap_CS_fsm_state13, "ap_CS_fsm_state13");
    sc_trace(mVcdFile, ap_CS_fsm_state17, "ap_CS_fsm_state17");
    sc_trace(mVcdFile, ap_CS_fsm_state21, "ap_CS_fsm_state21");
    sc_trace(mVcdFile, ap_CS_fsm_state25, "ap_CS_fsm_state25");
    sc_trace(mVcdFile, grp_fu_433_p2, "grp_fu_433_p2");
    sc_trace(mVcdFile, reg_463, "reg_463");
    sc_trace(mVcdFile, ap_CS_fsm_state44, "ap_CS_fsm_state44");
    sc_trace(mVcdFile, r_fu_475_p2, "r_fu_475_p2");
    sc_trace(mVcdFile, r_reg_668, "r_reg_668");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, zext_ln53_fu_489_p1, "zext_ln53_fu_489_p1");
    sc_trace(mVcdFile, zext_ln53_reg_673, "zext_ln53_reg_673");
    sc_trace(mVcdFile, icmp_ln51_fu_469_p2, "icmp_ln51_fu_469_p2");
    sc_trace(mVcdFile, c_fu_499_p2, "c_fu_499_p2");
    sc_trace(mVcdFile, c_reg_681, "c_reg_681");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, zext_ln55_1_fu_514_p1, "zext_ln55_1_fu_514_p1");
    sc_trace(mVcdFile, zext_ln55_1_reg_686, "zext_ln55_1_reg_686");
    sc_trace(mVcdFile, icmp_ln53_fu_493_p2, "icmp_ln53_fu_493_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, frame0_load_reg_705, "frame0_load_reg_705");
    sc_trace(mVcdFile, frame1_load_reg_710, "frame1_load_reg_710");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, frame2_load_reg_720, "frame2_load_reg_720");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, frame3_load_reg_730, "frame3_load_reg_730");
    sc_trace(mVcdFile, ap_CS_fsm_state14, "ap_CS_fsm_state14");
    sc_trace(mVcdFile, ap_CS_fsm_state20, "ap_CS_fsm_state20");
    sc_trace(mVcdFile, frame4_load_reg_740, "frame4_load_reg_740");
    sc_trace(mVcdFile, bitcast_ln60_1_fu_528_p1, "bitcast_ln60_1_fu_528_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state22, "ap_CS_fsm_state22");
    sc_trace(mVcdFile, grp_fu_452_p2, "grp_fu_452_p2");
    sc_trace(mVcdFile, tmp_6_i_reg_750, "tmp_6_i_reg_750");
    sc_trace(mVcdFile, ap_CS_fsm_state34, "ap_CS_fsm_state34");
    sc_trace(mVcdFile, r_1_fu_539_p2, "r_1_fu_539_p2");
    sc_trace(mVcdFile, r_1_reg_758, "r_1_reg_758");
    sc_trace(mVcdFile, ap_CS_fsm_state39, "ap_CS_fsm_state39");
    sc_trace(mVcdFile, zext_ln134_fu_553_p1, "zext_ln134_fu_553_p1");
    sc_trace(mVcdFile, zext_ln134_reg_763, "zext_ln134_reg_763");
    sc_trace(mVcdFile, icmp_ln132_fu_533_p2, "icmp_ln132_fu_533_p2");
    sc_trace(mVcdFile, c_1_fu_563_p2, "c_1_fu_563_p2");
    sc_trace(mVcdFile, c_1_reg_771, "c_1_reg_771");
    sc_trace(mVcdFile, ap_CS_fsm_state40, "ap_CS_fsm_state40");
    sc_trace(mVcdFile, add_ln136_fu_573_p2, "add_ln136_fu_573_p2");
    sc_trace(mVcdFile, add_ln136_reg_776, "add_ln136_reg_776");
    sc_trace(mVcdFile, icmp_ln134_fu_557_p2, "icmp_ln134_fu_557_p2");
    sc_trace(mVcdFile, grad_x_reg_797, "grad_x_reg_797");
    sc_trace(mVcdFile, ap_CS_fsm_state41, "ap_CS_fsm_state41");
    sc_trace(mVcdFile, grad_y_reg_805, "grad_y_reg_805");
    sc_trace(mVcdFile, grad_z_reg_812, "grad_z_reg_812");
    sc_trace(mVcdFile, grp_fu_440_p2, "grp_fu_440_p2");
    sc_trace(mVcdFile, tmp_3_i1_reg_820, "tmp_3_i1_reg_820");
    sc_trace(mVcdFile, sub_ln144_fu_603_p2, "sub_ln144_fu_603_p2");
    sc_trace(mVcdFile, sub_ln144_reg_825, "sub_ln144_reg_825");
    sc_trace(mVcdFile, ap_CS_fsm_state45, "ap_CS_fsm_state45");
    sc_trace(mVcdFile, tmp_4_i_reg_843, "tmp_4_i_reg_843");
    sc_trace(mVcdFile, tmp_5_i1_reg_848, "tmp_5_i1_reg_848");
    sc_trace(mVcdFile, grp_fu_444_p2, "grp_fu_444_p2");
    sc_trace(mVcdFile, tmp_6_i1_reg_853, "tmp_6_i1_reg_853");
    sc_trace(mVcdFile, grp_fu_448_p2, "grp_fu_448_p2");
    sc_trace(mVcdFile, tmp_7_i_reg_858, "tmp_7_i_reg_858");
    sc_trace(mVcdFile, ap_CS_fsm_state46, "ap_CS_fsm_state46");
    sc_trace(mVcdFile, ap_CS_fsm_state47, "ap_CS_fsm_state47");
    sc_trace(mVcdFile, grp_flow_calc_fu_338_ap_start, "grp_flow_calc_fu_338_ap_start");
    sc_trace(mVcdFile, grp_flow_calc_fu_338_ap_done, "grp_flow_calc_fu_338_ap_done");
    sc_trace(mVcdFile, grp_flow_calc_fu_338_ap_idle, "grp_flow_calc_fu_338_ap_idle");
    sc_trace(mVcdFile, grp_flow_calc_fu_338_ap_ready, "grp_flow_calc_fu_338_ap_ready");
    sc_trace(mVcdFile, grp_flow_calc_fu_338_output_x_address0, "grp_flow_calc_fu_338_output_x_address0");
    sc_trace(mVcdFile, grp_flow_calc_fu_338_output_x_ce0, "grp_flow_calc_fu_338_output_x_ce0");
    sc_trace(mVcdFile, grp_flow_calc_fu_338_output_x_we0, "grp_flow_calc_fu_338_output_x_we0");
    sc_trace(mVcdFile, grp_flow_calc_fu_338_output_x_d0, "grp_flow_calc_fu_338_output_x_d0");
    sc_trace(mVcdFile, grp_flow_calc_fu_338_output_y_address0, "grp_flow_calc_fu_338_output_y_address0");
    sc_trace(mVcdFile, grp_flow_calc_fu_338_output_y_ce0, "grp_flow_calc_fu_338_output_y_ce0");
    sc_trace(mVcdFile, grp_flow_calc_fu_338_output_y_we0, "grp_flow_calc_fu_338_output_y_we0");
    sc_trace(mVcdFile, grp_flow_calc_fu_338_output_y_d0, "grp_flow_calc_fu_338_output_y_d0");
    sc_trace(mVcdFile, grp_flow_calc_fu_338_tensor_val_0_address0, "grp_flow_calc_fu_338_tensor_val_0_address0");
    sc_trace(mVcdFile, grp_flow_calc_fu_338_tensor_val_0_ce0, "grp_flow_calc_fu_338_tensor_val_0_ce0");
    sc_trace(mVcdFile, grp_flow_calc_fu_338_tensor_val_1_address0, "grp_flow_calc_fu_338_tensor_val_1_address0");
    sc_trace(mVcdFile, grp_flow_calc_fu_338_tensor_val_1_ce0, "grp_flow_calc_fu_338_tensor_val_1_ce0");
    sc_trace(mVcdFile, grp_flow_calc_fu_338_tensor_val_3_address0, "grp_flow_calc_fu_338_tensor_val_3_address0");
    sc_trace(mVcdFile, grp_flow_calc_fu_338_tensor_val_3_ce0, "grp_flow_calc_fu_338_tensor_val_3_ce0");
    sc_trace(mVcdFile, grp_flow_calc_fu_338_tensor_val_5_address0, "grp_flow_calc_fu_338_tensor_val_5_address0");
    sc_trace(mVcdFile, grp_flow_calc_fu_338_tensor_val_5_ce0, "grp_flow_calc_fu_338_tensor_val_5_ce0");
    sc_trace(mVcdFile, grp_flow_calc_fu_338_tensor_val_4_address0, "grp_flow_calc_fu_338_tensor_val_4_address0");
    sc_trace(mVcdFile, grp_flow_calc_fu_338_tensor_val_4_ce0, "grp_flow_calc_fu_338_tensor_val_4_ce0");
    sc_trace(mVcdFile, grp_gradient_xy_calc_fu_356_ap_start, "grp_gradient_xy_calc_fu_356_ap_start");
    sc_trace(mVcdFile, grp_gradient_xy_calc_fu_356_ap_done, "grp_gradient_xy_calc_fu_356_ap_done");
    sc_trace(mVcdFile, grp_gradient_xy_calc_fu_356_ap_idle, "grp_gradient_xy_calc_fu_356_ap_idle");
    sc_trace(mVcdFile, grp_gradient_xy_calc_fu_356_ap_ready, "grp_gradient_xy_calc_fu_356_ap_ready");
    sc_trace(mVcdFile, grp_gradient_xy_calc_fu_356_frame_address0, "grp_gradient_xy_calc_fu_356_frame_address0");
    sc_trace(mVcdFile, grp_gradient_xy_calc_fu_356_frame_ce0, "grp_gradient_xy_calc_fu_356_frame_ce0");
    sc_trace(mVcdFile, grp_gradient_xy_calc_fu_356_frame_address1, "grp_gradient_xy_calc_fu_356_frame_address1");
    sc_trace(mVcdFile, grp_gradient_xy_calc_fu_356_frame_ce1, "grp_gradient_xy_calc_fu_356_frame_ce1");
    sc_trace(mVcdFile, grp_gradient_xy_calc_fu_356_gradient_x_address0, "grp_gradient_xy_calc_fu_356_gradient_x_address0");
    sc_trace(mVcdFile, grp_gradient_xy_calc_fu_356_gradient_x_ce0, "grp_gradient_xy_calc_fu_356_gradient_x_ce0");
    sc_trace(mVcdFile, grp_gradient_xy_calc_fu_356_gradient_x_we0, "grp_gradient_xy_calc_fu_356_gradient_x_we0");
    sc_trace(mVcdFile, grp_gradient_xy_calc_fu_356_gradient_x_d0, "grp_gradient_xy_calc_fu_356_gradient_x_d0");
    sc_trace(mVcdFile, grp_gradient_xy_calc_fu_356_gradient_y_address0, "grp_gradient_xy_calc_fu_356_gradient_y_address0");
    sc_trace(mVcdFile, grp_gradient_xy_calc_fu_356_gradient_y_ce0, "grp_gradient_xy_calc_fu_356_gradient_y_ce0");
    sc_trace(mVcdFile, grp_gradient_xy_calc_fu_356_gradient_y_we0, "grp_gradient_xy_calc_fu_356_gradient_y_we0");
    sc_trace(mVcdFile, grp_gradient_xy_calc_fu_356_gradient_y_d0, "grp_gradient_xy_calc_fu_356_gradient_y_d0");
    sc_trace(mVcdFile, grp_gradient_weight_y_fu_368_ap_start, "grp_gradient_weight_y_fu_368_ap_start");
    sc_trace(mVcdFile, grp_gradient_weight_y_fu_368_ap_done, "grp_gradient_weight_y_fu_368_ap_done");
    sc_trace(mVcdFile, grp_gradient_weight_y_fu_368_ap_idle, "grp_gradient_weight_y_fu_368_ap_idle");
    sc_trace(mVcdFile, grp_gradient_weight_y_fu_368_ap_ready, "grp_gradient_weight_y_fu_368_ap_ready");
    sc_trace(mVcdFile, grp_gradient_weight_y_fu_368_filt_grad_x_address0, "grp_gradient_weight_y_fu_368_filt_grad_x_address0");
    sc_trace(mVcdFile, grp_gradient_weight_y_fu_368_filt_grad_x_ce0, "grp_gradient_weight_y_fu_368_filt_grad_x_ce0");
    sc_trace(mVcdFile, grp_gradient_weight_y_fu_368_filt_grad_x_we0, "grp_gradient_weight_y_fu_368_filt_grad_x_we0");
    sc_trace(mVcdFile, grp_gradient_weight_y_fu_368_filt_grad_x_d0, "grp_gradient_weight_y_fu_368_filt_grad_x_d0");
    sc_trace(mVcdFile, grp_gradient_weight_y_fu_368_filt_grad_y_address0, "grp_gradient_weight_y_fu_368_filt_grad_y_address0");
    sc_trace(mVcdFile, grp_gradient_weight_y_fu_368_filt_grad_y_ce0, "grp_gradient_weight_y_fu_368_filt_grad_y_ce0");
    sc_trace(mVcdFile, grp_gradient_weight_y_fu_368_filt_grad_y_we0, "grp_gradient_weight_y_fu_368_filt_grad_y_we0");
    sc_trace(mVcdFile, grp_gradient_weight_y_fu_368_filt_grad_y_d0, "grp_gradient_weight_y_fu_368_filt_grad_y_d0");
    sc_trace(mVcdFile, grp_gradient_weight_y_fu_368_filt_grad_z_address0, "grp_gradient_weight_y_fu_368_filt_grad_z_address0");
    sc_trace(mVcdFile, grp_gradient_weight_y_fu_368_filt_grad_z_ce0, "grp_gradient_weight_y_fu_368_filt_grad_z_ce0");
    sc_trace(mVcdFile, grp_gradient_weight_y_fu_368_filt_grad_z_we0, "grp_gradient_weight_y_fu_368_filt_grad_z_we0");
    sc_trace(mVcdFile, grp_gradient_weight_y_fu_368_filt_grad_z_d0, "grp_gradient_weight_y_fu_368_filt_grad_z_d0");
    sc_trace(mVcdFile, grp_gradient_weight_y_fu_368_gradient_x_address0, "grp_gradient_weight_y_fu_368_gradient_x_address0");
    sc_trace(mVcdFile, grp_gradient_weight_y_fu_368_gradient_x_ce0, "grp_gradient_weight_y_fu_368_gradient_x_ce0");
    sc_trace(mVcdFile, grp_gradient_weight_y_fu_368_gradient_y_address0, "grp_gradient_weight_y_fu_368_gradient_y_address0");
    sc_trace(mVcdFile, grp_gradient_weight_y_fu_368_gradient_y_ce0, "grp_gradient_weight_y_fu_368_gradient_y_ce0");
    sc_trace(mVcdFile, grp_gradient_weight_y_fu_368_gradient_z_address0, "grp_gradient_weight_y_fu_368_gradient_z_address0");
    sc_trace(mVcdFile, grp_gradient_weight_y_fu_368_gradient_z_ce0, "grp_gradient_weight_y_fu_368_gradient_z_ce0");
    sc_trace(mVcdFile, grp_gradient_weight_x_fu_386_ap_start, "grp_gradient_weight_x_fu_386_ap_start");
    sc_trace(mVcdFile, grp_gradient_weight_x_fu_386_ap_done, "grp_gradient_weight_x_fu_386_ap_done");
    sc_trace(mVcdFile, grp_gradient_weight_x_fu_386_ap_idle, "grp_gradient_weight_x_fu_386_ap_idle");
    sc_trace(mVcdFile, grp_gradient_weight_x_fu_386_ap_ready, "grp_gradient_weight_x_fu_386_ap_ready");
    sc_trace(mVcdFile, grp_gradient_weight_x_fu_386_filt_grad_x_address0, "grp_gradient_weight_x_fu_386_filt_grad_x_address0");
    sc_trace(mVcdFile, grp_gradient_weight_x_fu_386_filt_grad_x_ce0, "grp_gradient_weight_x_fu_386_filt_grad_x_ce0");
    sc_trace(mVcdFile, grp_gradient_weight_x_fu_386_filt_grad_x_we0, "grp_gradient_weight_x_fu_386_filt_grad_x_we0");
    sc_trace(mVcdFile, grp_gradient_weight_x_fu_386_filt_grad_x_d0, "grp_gradient_weight_x_fu_386_filt_grad_x_d0");
    sc_trace(mVcdFile, grp_gradient_weight_x_fu_386_filt_grad_y_address0, "grp_gradient_weight_x_fu_386_filt_grad_y_address0");
    sc_trace(mVcdFile, grp_gradient_weight_x_fu_386_filt_grad_y_ce0, "grp_gradient_weight_x_fu_386_filt_grad_y_ce0");
    sc_trace(mVcdFile, grp_gradient_weight_x_fu_386_filt_grad_y_we0, "grp_gradient_weight_x_fu_386_filt_grad_y_we0");
    sc_trace(mVcdFile, grp_gradient_weight_x_fu_386_filt_grad_y_d0, "grp_gradient_weight_x_fu_386_filt_grad_y_d0");
    sc_trace(mVcdFile, grp_gradient_weight_x_fu_386_filt_grad_z_address0, "grp_gradient_weight_x_fu_386_filt_grad_z_address0");
    sc_trace(mVcdFile, grp_gradient_weight_x_fu_386_filt_grad_z_ce0, "grp_gradient_weight_x_fu_386_filt_grad_z_ce0");
    sc_trace(mVcdFile, grp_gradient_weight_x_fu_386_filt_grad_z_we0, "grp_gradient_weight_x_fu_386_filt_grad_z_we0");
    sc_trace(mVcdFile, grp_gradient_weight_x_fu_386_filt_grad_z_d0, "grp_gradient_weight_x_fu_386_filt_grad_z_d0");
    sc_trace(mVcdFile, grp_gradient_weight_x_fu_386_y_filtered_x_address0, "grp_gradient_weight_x_fu_386_y_filtered_x_address0");
    sc_trace(mVcdFile, grp_gradient_weight_x_fu_386_y_filtered_x_ce0, "grp_gradient_weight_x_fu_386_y_filtered_x_ce0");
    sc_trace(mVcdFile, grp_gradient_weight_x_fu_386_y_filtered_y_address0, "grp_gradient_weight_x_fu_386_y_filtered_y_address0");
    sc_trace(mVcdFile, grp_gradient_weight_x_fu_386_y_filtered_y_ce0, "grp_gradient_weight_x_fu_386_y_filtered_y_ce0");
    sc_trace(mVcdFile, grp_gradient_weight_x_fu_386_y_filtered_z_address0, "grp_gradient_weight_x_fu_386_y_filtered_z_address0");
    sc_trace(mVcdFile, grp_gradient_weight_x_fu_386_y_filtered_z_ce0, "grp_gradient_weight_x_fu_386_y_filtered_z_ce0");
    sc_trace(mVcdFile, grp_tensor_weight_y_fu_404_ap_start, "grp_tensor_weight_y_fu_404_ap_start");
    sc_trace(mVcdFile, grp_tensor_weight_y_fu_404_ap_done, "grp_tensor_weight_y_fu_404_ap_done");
    sc_trace(mVcdFile, grp_tensor_weight_y_fu_404_ap_idle, "grp_tensor_weight_y_fu_404_ap_idle");
    sc_trace(mVcdFile, grp_tensor_weight_y_fu_404_ap_ready, "grp_tensor_weight_y_fu_404_ap_ready");
    sc_trace(mVcdFile, grp_tensor_weight_y_fu_404_tensor_y_val_2_address0, "grp_tensor_weight_y_fu_404_tensor_y_val_2_address0");
    sc_trace(mVcdFile, grp_tensor_weight_y_fu_404_tensor_y_val_2_ce0, "grp_tensor_weight_y_fu_404_tensor_y_val_2_ce0");
    sc_trace(mVcdFile, grp_tensor_weight_y_fu_404_tensor_y_val_2_we0, "grp_tensor_weight_y_fu_404_tensor_y_val_2_we0");
    sc_trace(mVcdFile, grp_tensor_weight_y_fu_404_tensor_y_val_2_d0, "grp_tensor_weight_y_fu_404_tensor_y_val_2_d0");
    sc_trace(mVcdFile, grp_tensor_weight_y_fu_404_tensor_y_val_2_address1, "grp_tensor_weight_y_fu_404_tensor_y_val_2_address1");
    sc_trace(mVcdFile, grp_tensor_weight_y_fu_404_tensor_y_val_2_ce1, "grp_tensor_weight_y_fu_404_tensor_y_val_2_ce1");
    sc_trace(mVcdFile, grp_tensor_weight_y_fu_404_tensor_y_val_2_we1, "grp_tensor_weight_y_fu_404_tensor_y_val_2_we1");
    sc_trace(mVcdFile, grp_tensor_weight_y_fu_404_tensor_y_val_2_d1, "grp_tensor_weight_y_fu_404_tensor_y_val_2_d1");
    sc_trace(mVcdFile, grp_tensor_weight_y_fu_404_out_product_val_address0, "grp_tensor_weight_y_fu_404_out_product_val_address0");
    sc_trace(mVcdFile, grp_tensor_weight_y_fu_404_out_product_val_ce0, "grp_tensor_weight_y_fu_404_out_product_val_ce0");
    sc_trace(mVcdFile, grp_tensor_weight_x_fu_412_ap_start, "grp_tensor_weight_x_fu_412_ap_start");
    sc_trace(mVcdFile, grp_tensor_weight_x_fu_412_ap_done, "grp_tensor_weight_x_fu_412_ap_done");
    sc_trace(mVcdFile, grp_tensor_weight_x_fu_412_ap_idle, "grp_tensor_weight_x_fu_412_ap_idle");
    sc_trace(mVcdFile, grp_tensor_weight_x_fu_412_ap_ready, "grp_tensor_weight_x_fu_412_ap_ready");
    sc_trace(mVcdFile, grp_tensor_weight_x_fu_412_tensor_0_val_address0, "grp_tensor_weight_x_fu_412_tensor_0_val_address0");
    sc_trace(mVcdFile, grp_tensor_weight_x_fu_412_tensor_0_val_ce0, "grp_tensor_weight_x_fu_412_tensor_0_val_ce0");
    sc_trace(mVcdFile, grp_tensor_weight_x_fu_412_tensor_0_val_we0, "grp_tensor_weight_x_fu_412_tensor_0_val_we0");
    sc_trace(mVcdFile, grp_tensor_weight_x_fu_412_tensor_0_val_d0, "grp_tensor_weight_x_fu_412_tensor_0_val_d0");
    sc_trace(mVcdFile, grp_tensor_weight_x_fu_412_tensor_1_val_address0, "grp_tensor_weight_x_fu_412_tensor_1_val_address0");
    sc_trace(mVcdFile, grp_tensor_weight_x_fu_412_tensor_1_val_ce0, "grp_tensor_weight_x_fu_412_tensor_1_val_ce0");
    sc_trace(mVcdFile, grp_tensor_weight_x_fu_412_tensor_1_val_we0, "grp_tensor_weight_x_fu_412_tensor_1_val_we0");
    sc_trace(mVcdFile, grp_tensor_weight_x_fu_412_tensor_1_val_d0, "grp_tensor_weight_x_fu_412_tensor_1_val_d0");
    sc_trace(mVcdFile, grp_tensor_weight_x_fu_412_tensor_3_val_address0, "grp_tensor_weight_x_fu_412_tensor_3_val_address0");
    sc_trace(mVcdFile, grp_tensor_weight_x_fu_412_tensor_3_val_ce0, "grp_tensor_weight_x_fu_412_tensor_3_val_ce0");
    sc_trace(mVcdFile, grp_tensor_weight_x_fu_412_tensor_3_val_we0, "grp_tensor_weight_x_fu_412_tensor_3_val_we0");
    sc_trace(mVcdFile, grp_tensor_weight_x_fu_412_tensor_3_val_d0, "grp_tensor_weight_x_fu_412_tensor_3_val_d0");
    sc_trace(mVcdFile, grp_tensor_weight_x_fu_412_tensor_4_val_address0, "grp_tensor_weight_x_fu_412_tensor_4_val_address0");
    sc_trace(mVcdFile, grp_tensor_weight_x_fu_412_tensor_4_val_ce0, "grp_tensor_weight_x_fu_412_tensor_4_val_ce0");
    sc_trace(mVcdFile, grp_tensor_weight_x_fu_412_tensor_4_val_we0, "grp_tensor_weight_x_fu_412_tensor_4_val_we0");
    sc_trace(mVcdFile, grp_tensor_weight_x_fu_412_tensor_4_val_d0, "grp_tensor_weight_x_fu_412_tensor_4_val_d0");
    sc_trace(mVcdFile, grp_tensor_weight_x_fu_412_tensor_5_val_address0, "grp_tensor_weight_x_fu_412_tensor_5_val_address0");
    sc_trace(mVcdFile, grp_tensor_weight_x_fu_412_tensor_5_val_ce0, "grp_tensor_weight_x_fu_412_tensor_5_val_ce0");
    sc_trace(mVcdFile, grp_tensor_weight_x_fu_412_tensor_5_val_we0, "grp_tensor_weight_x_fu_412_tensor_5_val_we0");
    sc_trace(mVcdFile, grp_tensor_weight_x_fu_412_tensor_5_val_d0, "grp_tensor_weight_x_fu_412_tensor_5_val_d0");
    sc_trace(mVcdFile, grp_tensor_weight_x_fu_412_tensor_y_val_address0, "grp_tensor_weight_x_fu_412_tensor_y_val_address0");
    sc_trace(mVcdFile, grp_tensor_weight_x_fu_412_tensor_y_val_ce0, "grp_tensor_weight_x_fu_412_tensor_y_val_ce0");
    sc_trace(mVcdFile, r_0_i_reg_294, "r_0_i_reg_294");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, c_0_i_reg_305, "c_0_i_reg_305");
    sc_trace(mVcdFile, ap_CS_fsm_state35, "ap_CS_fsm_state35");
    sc_trace(mVcdFile, r_0_i7_reg_316, "r_0_i7_reg_316");
    sc_trace(mVcdFile, ap_CS_fsm_state38, "ap_CS_fsm_state38");
    sc_trace(mVcdFile, c_0_i9_reg_327, "c_0_i9_reg_327");
    sc_trace(mVcdFile, ap_CS_fsm_state48, "ap_CS_fsm_state48");
    sc_trace(mVcdFile, grp_flow_calc_fu_338_ap_start_reg, "grp_flow_calc_fu_338_ap_start_reg");
    sc_trace(mVcdFile, ap_CS_fsm_state52, "ap_CS_fsm_state52");
    sc_trace(mVcdFile, ap_CS_fsm_state53, "ap_CS_fsm_state53");
    sc_trace(mVcdFile, grp_gradient_xy_calc_fu_356_ap_start_reg, "grp_gradient_xy_calc_fu_356_ap_start_reg");
    sc_trace(mVcdFile, grp_gradient_weight_y_fu_368_ap_start_reg, "grp_gradient_weight_y_fu_368_ap_start_reg");
    sc_trace(mVcdFile, ap_CS_fsm_state36, "ap_CS_fsm_state36");
    sc_trace(mVcdFile, grp_gradient_weight_x_fu_386_ap_start_reg, "grp_gradient_weight_x_fu_386_ap_start_reg");
    sc_trace(mVcdFile, ap_CS_fsm_state37, "ap_CS_fsm_state37");
    sc_trace(mVcdFile, grp_tensor_weight_y_fu_404_ap_start_reg, "grp_tensor_weight_y_fu_404_ap_start_reg");
    sc_trace(mVcdFile, ap_CS_fsm_state49, "ap_CS_fsm_state49");
    sc_trace(mVcdFile, grp_tensor_weight_x_fu_412_ap_start_reg, "grp_tensor_weight_x_fu_412_ap_start_reg");
    sc_trace(mVcdFile, ap_CS_fsm_state50, "ap_CS_fsm_state50");
    sc_trace(mVcdFile, ap_CS_fsm_state51, "ap_CS_fsm_state51");
    sc_trace(mVcdFile, zext_ln136_1_fu_578_p1, "zext_ln136_1_fu_578_p1");
    sc_trace(mVcdFile, zext_ln144_1_fu_609_p1, "zext_ln144_1_fu_609_p1");
    sc_trace(mVcdFile, zext_ln144_2_fu_620_p1, "zext_ln144_2_fu_620_p1");
    sc_trace(mVcdFile, zext_ln144_3_fu_630_p1, "zext_ln144_3_fu_630_p1");
    sc_trace(mVcdFile, zext_ln144_4_fu_640_p1, "zext_ln144_4_fu_640_p1");
    sc_trace(mVcdFile, zext_ln144_5_fu_650_p1, "zext_ln144_5_fu_650_p1");
    sc_trace(mVcdFile, zext_ln144_6_fu_660_p1, "zext_ln144_6_fu_660_p1");
    sc_trace(mVcdFile, grp_fu_428_p0, "grp_fu_428_p0");
    sc_trace(mVcdFile, grp_fu_428_p1, "grp_fu_428_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state18, "ap_CS_fsm_state18");
    sc_trace(mVcdFile, grp_fu_433_p0, "grp_fu_433_p0");
    sc_trace(mVcdFile, grp_fu_433_p1, "grp_fu_433_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, ap_CS_fsm_state15, "ap_CS_fsm_state15");
    sc_trace(mVcdFile, ap_CS_fsm_state42, "ap_CS_fsm_state42");
    sc_trace(mVcdFile, ap_CS_fsm_state43, "ap_CS_fsm_state43");
    sc_trace(mVcdFile, grp_fu_440_p0, "grp_fu_440_p0");
    sc_trace(mVcdFile, ap_CS_fsm_state26, "ap_CS_fsm_state26");
    sc_trace(mVcdFile, tmp_fu_481_p3, "tmp_fu_481_p3");
    sc_trace(mVcdFile, zext_ln55_fu_505_p1, "zext_ln55_fu_505_p1");
    sc_trace(mVcdFile, add_ln55_fu_509_p2, "add_ln55_fu_509_p2");
    sc_trace(mVcdFile, bitcast_ln60_fu_519_p1, "bitcast_ln60_fu_519_p1");
    sc_trace(mVcdFile, xor_ln60_fu_522_p2, "xor_ln60_fu_522_p2");
    sc_trace(mVcdFile, tmp_s_fu_545_p3, "tmp_s_fu_545_p3");
    sc_trace(mVcdFile, zext_ln136_fu_569_p1, "zext_ln136_fu_569_p1");
    sc_trace(mVcdFile, tmp_11_fu_592_p3, "tmp_11_fu_592_p3");
    sc_trace(mVcdFile, p_shl_cast_fu_585_p3, "p_shl_cast_fu_585_p3");
    sc_trace(mVcdFile, zext_ln144_fu_599_p1, "zext_ln144_fu_599_p1");
    sc_trace(mVcdFile, or_ln144_fu_614_p2, "or_ln144_fu_614_p2");
    sc_trace(mVcdFile, add_ln144_fu_625_p2, "add_ln144_fu_625_p2");
    sc_trace(mVcdFile, add_ln144_1_fu_635_p2, "add_ln144_1_fu_635_p2");
    sc_trace(mVcdFile, add_ln144_2_fu_645_p2, "add_ln144_2_fu_645_p2");
    sc_trace(mVcdFile, add_ln144_3_fu_655_p2, "add_ln144_3_fu_655_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
    mHdltvinHandle.open("optical_flow_sw.hdltvin.dat");
    mHdltvoutHandle.open("optical_flow_sw.hdltvout.dat");
}

optical_flow_sw::~optical_flow_sw() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete gradient_x_U;
    delete gradient_y_U;
    delete gradient_z_U;
    delete y_filtered_x_U;
    delete y_filtered_y_U;
    delete y_filtered_z_U;
    delete filtered_gradient_x_U;
    delete filtered_gradient_y_U;
    delete filtered_gradient_z_U;
    delete out_product_val_U;
    delete tensor_y_val_U;
    delete tensor_val_0_U;
    delete tensor_val_1_U;
    delete tensor_val_3_U;
    delete tensor_val_4_U;
    delete tensor_val_5_U;
    delete grp_flow_calc_fu_338;
    delete grp_gradient_xy_calc_fu_356;
    delete grp_gradient_weight_y_fu_368;
    delete grp_gradient_weight_x_fu_386;
    delete grp_tensor_weight_y_fu_404;
    delete grp_tensor_weight_x_fu_412;
    delete optical_flow_sw_fadd_32ns_32ns_32_4_full_dsp_1_U73;
    delete optical_flow_sw_fmul_32ns_32ns_32_3_max_dsp_1_U74;
    delete optical_flow_sw_fmul_32ns_32ns_32_3_max_dsp_1_U75;
    delete optical_flow_sw_fmul_32ns_32ns_32_3_max_dsp_1_U76;
    delete optical_flow_sw_fmul_32ns_32ns_32_3_max_dsp_1_U77;
    delete optical_flow_sw_fdiv_32ns_32ns_32_9_1_U78;
}

void optical_flow_sw::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void optical_flow_sw::thread_ap_var_for_const1() {
    ap_var_for_const1 = ap_const_lv32_41400000;
}

void optical_flow_sw::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln132_fu_533_p2.read()))) {
        c_0_i9_reg_327 = ap_const_lv11_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state48.read())) {
        c_0_i9_reg_327 = c_1_reg_771.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(icmp_ln51_fu_469_p2.read(), ap_const_lv1_0))) {
        c_0_i_reg_305 = ap_const_lv11_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read())) {
        c_0_i_reg_305 = c_reg_681.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_flow_calc_fu_338_ap_start_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state52.read())) {
            grp_flow_calc_fu_338_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_flow_calc_fu_338_ap_ready.read())) {
            grp_flow_calc_fu_338_ap_start_reg = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_gradient_weight_x_fu_386_ap_start_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state37.read())) {
            grp_gradient_weight_x_fu_386_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_gradient_weight_x_fu_386_ap_ready.read())) {
            grp_gradient_weight_x_fu_386_ap_start_reg = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_gradient_weight_y_fu_368_ap_start_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
             esl_seteq<1,1,1>(icmp_ln51_fu_469_p2.read(), ap_const_lv1_1))) {
            grp_gradient_weight_y_fu_368_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_gradient_weight_y_fu_368_ap_ready.read())) {
            grp_gradient_weight_y_fu_368_ap_start_reg = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_gradient_xy_calc_fu_356_ap_start_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
             esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
            grp_gradient_xy_calc_fu_356_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_gradient_xy_calc_fu_356_ap_ready.read())) {
            grp_gradient_xy_calc_fu_356_ap_start_reg = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_tensor_weight_x_fu_412_ap_start_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state50.read())) {
            grp_tensor_weight_x_fu_412_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_tensor_weight_x_fu_412_ap_ready.read())) {
            grp_tensor_weight_x_fu_412_ap_start_reg = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_tensor_weight_y_fu_404_ap_start_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read()) && 
             esl_seteq<1,1,1>(icmp_ln132_fu_533_p2.read(), ap_const_lv1_1))) {
            grp_tensor_weight_y_fu_404_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_tensor_weight_y_fu_404_ap_ready.read())) {
            grp_tensor_weight_y_fu_404_ap_start_reg = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state40.read()) && 
         esl_seteq<1,1,1>(icmp_ln134_fu_557_p2.read(), ap_const_lv1_1))) {
        r_0_i7_reg_316 = r_1_reg_758.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read()) && 
                esl_seteq<1,1,1>(grp_gradient_weight_x_fu_386_ap_done.read(), ap_const_logic_1))) {
        r_0_i7_reg_316 = ap_const_lv9_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(icmp_ln53_fu_493_p2.read(), ap_const_lv1_1))) {
        r_0_i_reg_294 = r_reg_668.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(grp_gradient_xy_calc_fu_356_ap_done.read(), ap_const_logic_1))) {
        r_0_i_reg_294 = ap_const_lv9_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state40.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln134_fu_557_p2.read()))) {
        add_ln136_reg_776 = add_ln136_fu_573_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state40.read())) {
        c_1_reg_771 = c_1_fu_563_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        c_reg_681 = c_fu_499_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        frame0_load_reg_705 = frame0_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        frame1_load_reg_710 = frame1_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        frame2_load_reg_720 = frame2_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        frame3_load_reg_730 = frame3_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read())) {
        frame4_load_reg_740 = frame4_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read())) {
        grad_x_reg_797 = filtered_gradient_x_q0.read();
        grad_y_reg_805 = filtered_gradient_y_q0.read();
        grad_z_reg_812 = filtered_gradient_z_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read())) {
        r_1_reg_758 = r_1_fu_539_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        r_reg_668 = r_fu_475_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read()))) {
        reg_457 = grp_fu_428_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state44.read()))) {
        reg_463 = grp_fu_433_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state45.read())) {
        sub_ln144_reg_825 = sub_ln144_fu_603_p2.read();
        tmp_4_i_reg_843 = grp_fu_433_p2.read();
        tmp_5_i1_reg_848 = grp_fu_440_p2.read();
        tmp_6_i1_reg_853 = grp_fu_444_p2.read();
        tmp_7_i_reg_858 = grp_fu_448_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state44.read())) {
        tmp_3_i1_reg_820 = grp_fu_440_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read())) {
        tmp_6_i_reg_750 = grp_fu_452_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln132_fu_533_p2.read()))) {
        zext_ln134_reg_763 = zext_ln134_fu_553_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(icmp_ln51_fu_469_p2.read(), ap_const_lv1_0))) {
        zext_ln53_reg_673 = zext_ln53_fu_489_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln53_fu_493_p2.read()))) {
        zext_ln55_1_reg_686 = zext_ln55_1_fu_514_p1.read();
    }
}

void optical_flow_sw::thread_add_ln136_fu_573_p2() {
    add_ln136_fu_573_p2 = (!zext_ln136_fu_569_p1.read().is_01() || !zext_ln134_reg_763.read().is_01())? sc_lv<20>(): (sc_biguint<20>(zext_ln136_fu_569_p1.read()) + sc_biguint<20>(zext_ln134_reg_763.read()));
}

void optical_flow_sw::thread_add_ln144_1_fu_635_p2() {
    add_ln144_1_fu_635_p2 = (!sub_ln144_reg_825.read().is_01() || !ap_const_lv23_3.is_01())? sc_lv<23>(): (sc_biguint<23>(sub_ln144_reg_825.read()) + sc_biguint<23>(ap_const_lv23_3));
}

void optical_flow_sw::thread_add_ln144_2_fu_645_p2() {
    add_ln144_2_fu_645_p2 = (!sub_ln144_reg_825.read().is_01() || !ap_const_lv23_4.is_01())? sc_lv<23>(): (sc_biguint<23>(sub_ln144_reg_825.read()) + sc_biguint<23>(ap_const_lv23_4));
}

void optical_flow_sw::thread_add_ln144_3_fu_655_p2() {
    add_ln144_3_fu_655_p2 = (!sub_ln144_reg_825.read().is_01() || !ap_const_lv23_5.is_01())? sc_lv<23>(): (sc_biguint<23>(sub_ln144_reg_825.read()) + sc_biguint<23>(ap_const_lv23_5));
}

void optical_flow_sw::thread_add_ln144_fu_625_p2() {
    add_ln144_fu_625_p2 = (!sub_ln144_reg_825.read().is_01() || !ap_const_lv23_2.is_01())? sc_lv<23>(): (sc_biguint<23>(sub_ln144_reg_825.read()) + sc_biguint<23>(ap_const_lv23_2));
}

void optical_flow_sw::thread_add_ln55_fu_509_p2() {
    add_ln55_fu_509_p2 = (!zext_ln53_reg_673.read().is_01() || !zext_ln55_fu_505_p1.read().is_01())? sc_lv<20>(): (sc_biguint<20>(zext_ln53_reg_673.read()) + sc_biguint<20>(zext_ln55_fu_505_p1.read()));
}

void optical_flow_sw::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void optical_flow_sw::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void optical_flow_sw::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void optical_flow_sw::thread_ap_CS_fsm_state13() {
    ap_CS_fsm_state13 = ap_CS_fsm.read()[12];
}

void optical_flow_sw::thread_ap_CS_fsm_state14() {
    ap_CS_fsm_state14 = ap_CS_fsm.read()[13];
}

void optical_flow_sw::thread_ap_CS_fsm_state15() {
    ap_CS_fsm_state15 = ap_CS_fsm.read()[14];
}

void optical_flow_sw::thread_ap_CS_fsm_state17() {
    ap_CS_fsm_state17 = ap_CS_fsm.read()[16];
}

void optical_flow_sw::thread_ap_CS_fsm_state18() {
    ap_CS_fsm_state18 = ap_CS_fsm.read()[17];
}

void optical_flow_sw::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void optical_flow_sw::thread_ap_CS_fsm_state20() {
    ap_CS_fsm_state20 = ap_CS_fsm.read()[19];
}

void optical_flow_sw::thread_ap_CS_fsm_state21() {
    ap_CS_fsm_state21 = ap_CS_fsm.read()[20];
}

void optical_flow_sw::thread_ap_CS_fsm_state22() {
    ap_CS_fsm_state22 = ap_CS_fsm.read()[21];
}

void optical_flow_sw::thread_ap_CS_fsm_state25() {
    ap_CS_fsm_state25 = ap_CS_fsm.read()[24];
}

void optical_flow_sw::thread_ap_CS_fsm_state26() {
    ap_CS_fsm_state26 = ap_CS_fsm.read()[25];
}

void optical_flow_sw::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void optical_flow_sw::thread_ap_CS_fsm_state34() {
    ap_CS_fsm_state34 = ap_CS_fsm.read()[33];
}

void optical_flow_sw::thread_ap_CS_fsm_state35() {
    ap_CS_fsm_state35 = ap_CS_fsm.read()[34];
}

void optical_flow_sw::thread_ap_CS_fsm_state36() {
    ap_CS_fsm_state36 = ap_CS_fsm.read()[35];
}

void optical_flow_sw::thread_ap_CS_fsm_state37() {
    ap_CS_fsm_state37 = ap_CS_fsm.read()[36];
}

void optical_flow_sw::thread_ap_CS_fsm_state38() {
    ap_CS_fsm_state38 = ap_CS_fsm.read()[37];
}

void optical_flow_sw::thread_ap_CS_fsm_state39() {
    ap_CS_fsm_state39 = ap_CS_fsm.read()[38];
}

void optical_flow_sw::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void optical_flow_sw::thread_ap_CS_fsm_state40() {
    ap_CS_fsm_state40 = ap_CS_fsm.read()[39];
}

void optical_flow_sw::thread_ap_CS_fsm_state41() {
    ap_CS_fsm_state41 = ap_CS_fsm.read()[40];
}

void optical_flow_sw::thread_ap_CS_fsm_state42() {
    ap_CS_fsm_state42 = ap_CS_fsm.read()[41];
}

void optical_flow_sw::thread_ap_CS_fsm_state43() {
    ap_CS_fsm_state43 = ap_CS_fsm.read()[42];
}

void optical_flow_sw::thread_ap_CS_fsm_state44() {
    ap_CS_fsm_state44 = ap_CS_fsm.read()[43];
}

void optical_flow_sw::thread_ap_CS_fsm_state45() {
    ap_CS_fsm_state45 = ap_CS_fsm.read()[44];
}

void optical_flow_sw::thread_ap_CS_fsm_state46() {
    ap_CS_fsm_state46 = ap_CS_fsm.read()[45];
}

void optical_flow_sw::thread_ap_CS_fsm_state47() {
    ap_CS_fsm_state47 = ap_CS_fsm.read()[46];
}

void optical_flow_sw::thread_ap_CS_fsm_state48() {
    ap_CS_fsm_state48 = ap_CS_fsm.read()[47];
}

void optical_flow_sw::thread_ap_CS_fsm_state49() {
    ap_CS_fsm_state49 = ap_CS_fsm.read()[48];
}

void optical_flow_sw::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void optical_flow_sw::thread_ap_CS_fsm_state50() {
    ap_CS_fsm_state50 = ap_CS_fsm.read()[49];
}

void optical_flow_sw::thread_ap_CS_fsm_state51() {
    ap_CS_fsm_state51 = ap_CS_fsm.read()[50];
}

void optical_flow_sw::thread_ap_CS_fsm_state52() {
    ap_CS_fsm_state52 = ap_CS_fsm.read()[51];
}

void optical_flow_sw::thread_ap_CS_fsm_state53() {
    ap_CS_fsm_state53 = ap_CS_fsm.read()[52];
}

void optical_flow_sw::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void optical_flow_sw::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void optical_flow_sw::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void optical_flow_sw::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state53.read()) && 
         esl_seteq<1,1,1>(grp_flow_calc_fu_338_ap_done.read(), ap_const_logic_1))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void optical_flow_sw::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void optical_flow_sw::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state53.read()) && 
         esl_seteq<1,1,1>(grp_flow_calc_fu_338_ap_done.read(), ap_const_logic_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void optical_flow_sw::thread_bitcast_ln60_1_fu_528_p1() {
    bitcast_ln60_1_fu_528_p1 = xor_ln60_fu_522_p2.read();
}

void optical_flow_sw::thread_bitcast_ln60_fu_519_p1() {
    bitcast_ln60_fu_519_p1 = frame4_load_reg_740.read();
}

void optical_flow_sw::thread_c_1_fu_563_p2() {
    c_1_fu_563_p2 = (!c_0_i9_reg_327.read().is_01() || !ap_const_lv11_1.is_01())? sc_lv<11>(): (sc_biguint<11>(c_0_i9_reg_327.read()) + sc_biguint<11>(ap_const_lv11_1));
}

void optical_flow_sw::thread_c_fu_499_p2() {
    c_fu_499_p2 = (!c_0_i_reg_305.read().is_01() || !ap_const_lv11_1.is_01())? sc_lv<11>(): (sc_biguint<11>(c_0_i_reg_305.read()) + sc_biguint<11>(ap_const_lv11_1));
}

void optical_flow_sw::thread_filtered_gradient_x_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state40.read())) {
        filtered_gradient_x_address0 =  (sc_lv<19>) (zext_ln136_1_fu_578_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read())) {
        filtered_gradient_x_address0 = grp_gradient_weight_x_fu_386_filt_grad_x_address0.read();
    } else {
        filtered_gradient_x_address0 =  (sc_lv<19>) ("XXXXXXXXXXXXXXXXXXX");
    }
}

void optical_flow_sw::thread_filtered_gradient_x_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state40.read())) {
        filtered_gradient_x_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read())) {
        filtered_gradient_x_ce0 = grp_gradient_weight_x_fu_386_filt_grad_x_ce0.read();
    } else {
        filtered_gradient_x_ce0 = ap_const_logic_0;
    }
}

void optical_flow_sw::thread_filtered_gradient_x_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read())) {
        filtered_gradient_x_we0 = grp_gradient_weight_x_fu_386_filt_grad_x_we0.read();
    } else {
        filtered_gradient_x_we0 = ap_const_logic_0;
    }
}

void optical_flow_sw::thread_filtered_gradient_y_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state40.read())) {
        filtered_gradient_y_address0 =  (sc_lv<19>) (zext_ln136_1_fu_578_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read())) {
        filtered_gradient_y_address0 = grp_gradient_weight_x_fu_386_filt_grad_y_address0.read();
    } else {
        filtered_gradient_y_address0 =  (sc_lv<19>) ("XXXXXXXXXXXXXXXXXXX");
    }
}

void optical_flow_sw::thread_filtered_gradient_y_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state40.read())) {
        filtered_gradient_y_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read())) {
        filtered_gradient_y_ce0 = grp_gradient_weight_x_fu_386_filt_grad_y_ce0.read();
    } else {
        filtered_gradient_y_ce0 = ap_const_logic_0;
    }
}

void optical_flow_sw::thread_filtered_gradient_y_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read())) {
        filtered_gradient_y_we0 = grp_gradient_weight_x_fu_386_filt_grad_y_we0.read();
    } else {
        filtered_gradient_y_we0 = ap_const_logic_0;
    }
}

void optical_flow_sw::thread_filtered_gradient_z_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state40.read())) {
        filtered_gradient_z_address0 =  (sc_lv<19>) (zext_ln136_1_fu_578_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read())) {
        filtered_gradient_z_address0 = grp_gradient_weight_x_fu_386_filt_grad_z_address0.read();
    } else {
        filtered_gradient_z_address0 =  (sc_lv<19>) ("XXXXXXXXXXXXXXXXXXX");
    }
}

void optical_flow_sw::thread_filtered_gradient_z_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state40.read())) {
        filtered_gradient_z_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read())) {
        filtered_gradient_z_ce0 = grp_gradient_weight_x_fu_386_filt_grad_z_ce0.read();
    } else {
        filtered_gradient_z_ce0 = ap_const_logic_0;
    }
}

void optical_flow_sw::thread_filtered_gradient_z_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read())) {
        filtered_gradient_z_we0 = grp_gradient_weight_x_fu_386_filt_grad_z_we0.read();
    } else {
        filtered_gradient_z_we0 = ap_const_logic_0;
    }
}

void optical_flow_sw::thread_frame0_address0() {
    frame0_address0 =  (sc_lv<19>) (zext_ln55_1_fu_514_p1.read());
}

void optical_flow_sw::thread_frame0_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        frame0_ce0 = ap_const_logic_1;
    } else {
        frame0_ce0 = ap_const_logic_0;
    }
}

void optical_flow_sw::thread_frame1_address0() {
    frame1_address0 =  (sc_lv<19>) (zext_ln55_1_reg_686.read());
}

void optical_flow_sw::thread_frame1_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        frame1_ce0 = ap_const_logic_1;
    } else {
        frame1_ce0 = ap_const_logic_0;
    }
}

void optical_flow_sw::thread_frame2_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        frame2_address0 =  (sc_lv<19>) (zext_ln55_1_reg_686.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        frame2_address0 = grp_gradient_xy_calc_fu_356_frame_address0.read();
    } else {
        frame2_address0 =  (sc_lv<19>) ("XXXXXXXXXXXXXXXXXXX");
    }
}

void optical_flow_sw::thread_frame2_address1() {
    frame2_address1 = grp_gradient_xy_calc_fu_356_frame_address1.read();
}

void optical_flow_sw::thread_frame2_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        frame2_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        frame2_ce0 = grp_gradient_xy_calc_fu_356_frame_ce0.read();
    } else {
        frame2_ce0 = ap_const_logic_0;
    }
}

void optical_flow_sw::thread_frame2_ce1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        frame2_ce1 = grp_gradient_xy_calc_fu_356_frame_ce1.read();
    } else {
        frame2_ce1 = ap_const_logic_0;
    }
}

void optical_flow_sw::thread_frame3_address0() {
    frame3_address0 =  (sc_lv<19>) (zext_ln55_1_reg_686.read());
}

void optical_flow_sw::thread_frame3_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        frame3_ce0 = ap_const_logic_1;
    } else {
        frame3_ce0 = ap_const_logic_0;
    }
}

void optical_flow_sw::thread_frame4_address0() {
    frame4_address0 =  (sc_lv<19>) (zext_ln55_1_reg_686.read());
}

void optical_flow_sw::thread_frame4_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) {
        frame4_ce0 = ap_const_logic_1;
    } else {
        frame4_ce0 = ap_const_logic_0;
    }
}

void optical_flow_sw::thread_gradient_x_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read())) {
        gradient_x_address0 = grp_gradient_weight_y_fu_368_gradient_x_address0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        gradient_x_address0 = grp_gradient_xy_calc_fu_356_gradient_x_address0.read();
    } else {
        gradient_x_address0 =  (sc_lv<19>) ("XXXXXXXXXXXXXXXXXXX");
    }
}

void optical_flow_sw::thread_gradient_x_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read())) {
        gradient_x_ce0 = grp_gradient_weight_y_fu_368_gradient_x_ce0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        gradient_x_ce0 = grp_gradient_xy_calc_fu_356_gradient_x_ce0.read();
    } else {
        gradient_x_ce0 = ap_const_logic_0;
    }
}

void optical_flow_sw::thread_gradient_x_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        gradient_x_we0 = grp_gradient_xy_calc_fu_356_gradient_x_we0.read();
    } else {
        gradient_x_we0 = ap_const_logic_0;
    }
}

void optical_flow_sw::thread_gradient_y_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read())) {
        gradient_y_address0 = grp_gradient_weight_y_fu_368_gradient_y_address0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        gradient_y_address0 = grp_gradient_xy_calc_fu_356_gradient_y_address0.read();
    } else {
        gradient_y_address0 =  (sc_lv<19>) ("XXXXXXXXXXXXXXXXXXX");
    }
}

void optical_flow_sw::thread_gradient_y_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read())) {
        gradient_y_ce0 = grp_gradient_weight_y_fu_368_gradient_y_ce0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        gradient_y_ce0 = grp_gradient_xy_calc_fu_356_gradient_y_ce0.read();
    } else {
        gradient_y_ce0 = ap_const_logic_0;
    }
}

void optical_flow_sw::thread_gradient_y_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        gradient_y_we0 = grp_gradient_xy_calc_fu_356_gradient_y_we0.read();
    } else {
        gradient_y_we0 = ap_const_logic_0;
    }
}

void optical_flow_sw::thread_gradient_z_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read())) {
        gradient_z_address0 =  (sc_lv<19>) (zext_ln55_1_reg_686.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read())) {
        gradient_z_address0 = grp_gradient_weight_y_fu_368_gradient_z_address0.read();
    } else {
        gradient_z_address0 =  (sc_lv<19>) ("XXXXXXXXXXXXXXXXXXX");
    }
}

void optical_flow_sw::thread_gradient_z_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read())) {
        gradient_z_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read())) {
        gradient_z_ce0 = grp_gradient_weight_y_fu_368_gradient_z_ce0.read();
    } else {
        gradient_z_ce0 = ap_const_logic_0;
    }
}

void optical_flow_sw::thread_gradient_z_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read())) {
        gradient_z_we0 = ap_const_logic_1;
    } else {
        gradient_z_we0 = ap_const_logic_0;
    }
}

void optical_flow_sw::thread_grp_flow_calc_fu_338_ap_start() {
    grp_flow_calc_fu_338_ap_start = grp_flow_calc_fu_338_ap_start_reg.read();
}

void optical_flow_sw::thread_grp_fu_428_p0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()))) {
        grp_fu_428_p0 = reg_457.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        grp_fu_428_p0 = frame0_load_reg_705.read();
    } else {
        grp_fu_428_p0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void optical_flow_sw::thread_grp_fu_428_p1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())) {
        grp_fu_428_p1 = bitcast_ln60_1_fu_528_p1.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()))) {
        grp_fu_428_p1 = reg_463.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        grp_fu_428_p1 = ap_const_lv32_0;
    } else {
        grp_fu_428_p1 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void optical_flow_sw::thread_grp_fu_433_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state43.read())) {
        grp_fu_433_p0 = grad_z_reg_812.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state42.read())) {
        grp_fu_433_p0 = grad_x_reg_797.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        grp_fu_433_p0 = frame3_load_reg_730.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        grp_fu_433_p0 = frame2_load_reg_720.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        grp_fu_433_p0 = frame1_load_reg_710.read();
    } else {
        grp_fu_433_p0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void optical_flow_sw::thread_grp_fu_433_p1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state43.read())) {
        grp_fu_433_p1 = grad_z_reg_812.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state42.read())) {
        grp_fu_433_p1 = grad_x_reg_797.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        grp_fu_433_p1 = ap_const_lv32_41000000;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        grp_fu_433_p1 = ap_const_lv32_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        grp_fu_433_p1 = ap_const_lv32_C1000000;
    } else {
        grp_fu_433_p1 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void optical_flow_sw::thread_grp_fu_440_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state43.read())) {
        grp_fu_440_p0 = grad_x_reg_797.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state42.read())) {
        grp_fu_440_p0 = grad_y_reg_805.read();
    } else {
        grp_fu_440_p0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void optical_flow_sw::thread_grp_gradient_weight_x_fu_386_ap_start() {
    grp_gradient_weight_x_fu_386_ap_start = grp_gradient_weight_x_fu_386_ap_start_reg.read();
}

void optical_flow_sw::thread_grp_gradient_weight_y_fu_368_ap_start() {
    grp_gradient_weight_y_fu_368_ap_start = grp_gradient_weight_y_fu_368_ap_start_reg.read();
}

void optical_flow_sw::thread_grp_gradient_xy_calc_fu_356_ap_start() {
    grp_gradient_xy_calc_fu_356_ap_start = grp_gradient_xy_calc_fu_356_ap_start_reg.read();
}

void optical_flow_sw::thread_grp_tensor_weight_x_fu_412_ap_start() {
    grp_tensor_weight_x_fu_412_ap_start = grp_tensor_weight_x_fu_412_ap_start_reg.read();
}

void optical_flow_sw::thread_grp_tensor_weight_y_fu_404_ap_start() {
    grp_tensor_weight_y_fu_404_ap_start = grp_tensor_weight_y_fu_404_ap_start_reg.read();
}

void optical_flow_sw::thread_icmp_ln132_fu_533_p2() {
    icmp_ln132_fu_533_p2 = (!r_0_i7_reg_316.read().is_01() || !ap_const_lv9_1B4.is_01())? sc_lv<1>(): sc_lv<1>(r_0_i7_reg_316.read() == ap_const_lv9_1B4);
}

void optical_flow_sw::thread_icmp_ln134_fu_557_p2() {
    icmp_ln134_fu_557_p2 = (!c_0_i9_reg_327.read().is_01() || !ap_const_lv11_400.is_01())? sc_lv<1>(): sc_lv<1>(c_0_i9_reg_327.read() == ap_const_lv11_400);
}

void optical_flow_sw::thread_icmp_ln51_fu_469_p2() {
    icmp_ln51_fu_469_p2 = (!r_0_i_reg_294.read().is_01() || !ap_const_lv9_1B4.is_01())? sc_lv<1>(): sc_lv<1>(r_0_i_reg_294.read() == ap_const_lv9_1B4);
}

void optical_flow_sw::thread_icmp_ln53_fu_493_p2() {
    icmp_ln53_fu_493_p2 = (!c_0_i_reg_305.read().is_01() || !ap_const_lv11_400.is_01())? sc_lv<1>(): sc_lv<1>(c_0_i_reg_305.read() == ap_const_lv11_400);
}

void optical_flow_sw::thread_or_ln144_fu_614_p2() {
    or_ln144_fu_614_p2 = (sub_ln144_fu_603_p2.read() | ap_const_lv23_1);
}

void optical_flow_sw::thread_out_product_val_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read())) {
        out_product_val_address0 =  (sc_lv<22>) (zext_ln144_5_fu_650_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state46.read())) {
        out_product_val_address0 =  (sc_lv<22>) (zext_ln144_3_fu_630_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state45.read())) {
        out_product_val_address0 =  (sc_lv<22>) (zext_ln144_1_fu_609_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state49.read())) {
        out_product_val_address0 = grp_tensor_weight_y_fu_404_out_product_val_address0.read();
    } else {
        out_product_val_address0 =  (sc_lv<22>) ("XXXXXXXXXXXXXXXXXXXXXX");
    }
}

void optical_flow_sw::thread_out_product_val_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read())) {
        out_product_val_address1 =  (sc_lv<22>) (zext_ln144_6_fu_660_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state46.read())) {
        out_product_val_address1 =  (sc_lv<22>) (zext_ln144_4_fu_640_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state45.read())) {
        out_product_val_address1 =  (sc_lv<22>) (zext_ln144_2_fu_620_p1.read());
    } else {
        out_product_val_address1 =  (sc_lv<22>) ("XXXXXXXXXXXXXXXXXXXXXX");
    }
}

void optical_flow_sw::thread_out_product_val_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state45.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state46.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state48.read()))) {
        out_product_val_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state49.read())) {
        out_product_val_ce0 = grp_tensor_weight_y_fu_404_out_product_val_ce0.read();
    } else {
        out_product_val_ce0 = ap_const_logic_0;
    }
}

void optical_flow_sw::thread_out_product_val_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state45.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state46.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state48.read()))) {
        out_product_val_ce1 = ap_const_logic_1;
    } else {
        out_product_val_ce1 = ap_const_logic_0;
    }
}

void optical_flow_sw::thread_out_product_val_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read())) {
        out_product_val_d0 = tmp_6_i1_reg_853.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state46.read())) {
        out_product_val_d0 = tmp_4_i_reg_843.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state45.read())) {
        out_product_val_d0 = reg_463.read();
    } else {
        out_product_val_d0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void optical_flow_sw::thread_out_product_val_d1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read())) {
        out_product_val_d1 = tmp_7_i_reg_858.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state46.read())) {
        out_product_val_d1 = tmp_5_i1_reg_848.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state45.read())) {
        out_product_val_d1 = tmp_3_i1_reg_820.read();
    } else {
        out_product_val_d1 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void optical_flow_sw::thread_out_product_val_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state45.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state46.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read()))) {
        out_product_val_we0 = ap_const_logic_1;
    } else {
        out_product_val_we0 = ap_const_logic_0;
    }
}

void optical_flow_sw::thread_out_product_val_we1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state45.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state46.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read()))) {
        out_product_val_we1 = ap_const_logic_1;
    } else {
        out_product_val_we1 = ap_const_logic_0;
    }
}

void optical_flow_sw::thread_outputs_x_address0() {
    outputs_x_address0 = grp_flow_calc_fu_338_output_x_address0.read();
}

void optical_flow_sw::thread_outputs_x_ce0() {
    outputs_x_ce0 = grp_flow_calc_fu_338_output_x_ce0.read();
}

void optical_flow_sw::thread_outputs_x_d0() {
    outputs_x_d0 = grp_flow_calc_fu_338_output_x_d0.read();
}

void optical_flow_sw::thread_outputs_x_we0() {
    outputs_x_we0 = grp_flow_calc_fu_338_output_x_we0.read();
}

void optical_flow_sw::thread_outputs_y_address0() {
    outputs_y_address0 = grp_flow_calc_fu_338_output_y_address0.read();
}

void optical_flow_sw::thread_outputs_y_ce0() {
    outputs_y_ce0 = grp_flow_calc_fu_338_output_y_ce0.read();
}

void optical_flow_sw::thread_outputs_y_d0() {
    outputs_y_d0 = grp_flow_calc_fu_338_output_y_d0.read();
}

void optical_flow_sw::thread_outputs_y_we0() {
    outputs_y_we0 = grp_flow_calc_fu_338_output_y_we0.read();
}

void optical_flow_sw::thread_p_shl_cast_fu_585_p3() {
    p_shl_cast_fu_585_p3 = esl_concat<20,3>(add_ln136_reg_776.read(), ap_const_lv3_0);
}

void optical_flow_sw::thread_r_1_fu_539_p2() {
    r_1_fu_539_p2 = (!r_0_i7_reg_316.read().is_01() || !ap_const_lv9_1.is_01())? sc_lv<9>(): (sc_biguint<9>(r_0_i7_reg_316.read()) + sc_biguint<9>(ap_const_lv9_1));
}

void optical_flow_sw::thread_r_fu_475_p2() {
    r_fu_475_p2 = (!r_0_i_reg_294.read().is_01() || !ap_const_lv9_1.is_01())? sc_lv<9>(): (sc_biguint<9>(r_0_i_reg_294.read()) + sc_biguint<9>(ap_const_lv9_1));
}

void optical_flow_sw::thread_sub_ln144_fu_603_p2() {
    sub_ln144_fu_603_p2 = (!p_shl_cast_fu_585_p3.read().is_01() || !zext_ln144_fu_599_p1.read().is_01())? sc_lv<23>(): (sc_biguint<23>(p_shl_cast_fu_585_p3.read()) - sc_biguint<23>(zext_ln144_fu_599_p1.read()));
}

void optical_flow_sw::thread_tensor_val_0_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state51.read())) {
        tensor_val_0_address0 = grp_tensor_weight_x_fu_412_tensor_0_val_address0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state53.read())) {
        tensor_val_0_address0 = grp_flow_calc_fu_338_tensor_val_0_address0.read();
    } else {
        tensor_val_0_address0 =  (sc_lv<19>) ("XXXXXXXXXXXXXXXXXXX");
    }
}

void optical_flow_sw::thread_tensor_val_0_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state51.read())) {
        tensor_val_0_ce0 = grp_tensor_weight_x_fu_412_tensor_0_val_ce0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state53.read())) {
        tensor_val_0_ce0 = grp_flow_calc_fu_338_tensor_val_0_ce0.read();
    } else {
        tensor_val_0_ce0 = ap_const_logic_0;
    }
}

void optical_flow_sw::thread_tensor_val_0_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state51.read())) {
        tensor_val_0_we0 = grp_tensor_weight_x_fu_412_tensor_0_val_we0.read();
    } else {
        tensor_val_0_we0 = ap_const_logic_0;
    }
}

void optical_flow_sw::thread_tensor_val_1_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state51.read())) {
        tensor_val_1_address0 = grp_tensor_weight_x_fu_412_tensor_1_val_address0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state53.read())) {
        tensor_val_1_address0 = grp_flow_calc_fu_338_tensor_val_1_address0.read();
    } else {
        tensor_val_1_address0 =  (sc_lv<19>) ("XXXXXXXXXXXXXXXXXXX");
    }
}

void optical_flow_sw::thread_tensor_val_1_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state51.read())) {
        tensor_val_1_ce0 = grp_tensor_weight_x_fu_412_tensor_1_val_ce0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state53.read())) {
        tensor_val_1_ce0 = grp_flow_calc_fu_338_tensor_val_1_ce0.read();
    } else {
        tensor_val_1_ce0 = ap_const_logic_0;
    }
}

void optical_flow_sw::thread_tensor_val_1_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state51.read())) {
        tensor_val_1_we0 = grp_tensor_weight_x_fu_412_tensor_1_val_we0.read();
    } else {
        tensor_val_1_we0 = ap_const_logic_0;
    }
}

void optical_flow_sw::thread_tensor_val_3_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state51.read())) {
        tensor_val_3_address0 = grp_tensor_weight_x_fu_412_tensor_3_val_address0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state53.read())) {
        tensor_val_3_address0 = grp_flow_calc_fu_338_tensor_val_3_address0.read();
    } else {
        tensor_val_3_address0 =  (sc_lv<19>) ("XXXXXXXXXXXXXXXXXXX");
    }
}

void optical_flow_sw::thread_tensor_val_3_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state51.read())) {
        tensor_val_3_ce0 = grp_tensor_weight_x_fu_412_tensor_3_val_ce0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state53.read())) {
        tensor_val_3_ce0 = grp_flow_calc_fu_338_tensor_val_3_ce0.read();
    } else {
        tensor_val_3_ce0 = ap_const_logic_0;
    }
}

void optical_flow_sw::thread_tensor_val_3_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state51.read())) {
        tensor_val_3_we0 = grp_tensor_weight_x_fu_412_tensor_3_val_we0.read();
    } else {
        tensor_val_3_we0 = ap_const_logic_0;
    }
}

void optical_flow_sw::thread_tensor_val_4_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state51.read())) {
        tensor_val_4_address0 = grp_tensor_weight_x_fu_412_tensor_4_val_address0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state53.read())) {
        tensor_val_4_address0 = grp_flow_calc_fu_338_tensor_val_4_address0.read();
    } else {
        tensor_val_4_address0 =  (sc_lv<19>) ("XXXXXXXXXXXXXXXXXXX");
    }
}

void optical_flow_sw::thread_tensor_val_4_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state51.read())) {
        tensor_val_4_ce0 = grp_tensor_weight_x_fu_412_tensor_4_val_ce0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state53.read())) {
        tensor_val_4_ce0 = grp_flow_calc_fu_338_tensor_val_4_ce0.read();
    } else {
        tensor_val_4_ce0 = ap_const_logic_0;
    }
}

void optical_flow_sw::thread_tensor_val_4_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state51.read())) {
        tensor_val_4_we0 = grp_tensor_weight_x_fu_412_tensor_4_val_we0.read();
    } else {
        tensor_val_4_we0 = ap_const_logic_0;
    }
}

void optical_flow_sw::thread_tensor_val_5_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state51.read())) {
        tensor_val_5_address0 = grp_tensor_weight_x_fu_412_tensor_5_val_address0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state53.read())) {
        tensor_val_5_address0 = grp_flow_calc_fu_338_tensor_val_5_address0.read();
    } else {
        tensor_val_5_address0 =  (sc_lv<19>) ("XXXXXXXXXXXXXXXXXXX");
    }
}

void optical_flow_sw::thread_tensor_val_5_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state51.read())) {
        tensor_val_5_ce0 = grp_tensor_weight_x_fu_412_tensor_5_val_ce0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state53.read())) {
        tensor_val_5_ce0 = grp_flow_calc_fu_338_tensor_val_5_ce0.read();
    } else {
        tensor_val_5_ce0 = ap_const_logic_0;
    }
}

void optical_flow_sw::thread_tensor_val_5_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state51.read())) {
        tensor_val_5_we0 = grp_tensor_weight_x_fu_412_tensor_5_val_we0.read();
    } else {
        tensor_val_5_we0 = ap_const_logic_0;
    }
}

void optical_flow_sw::thread_tensor_y_val_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state51.read())) {
        tensor_y_val_address0 = grp_tensor_weight_x_fu_412_tensor_y_val_address0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state49.read())) {
        tensor_y_val_address0 = grp_tensor_weight_y_fu_404_tensor_y_val_2_address0.read();
    } else {
        tensor_y_val_address0 =  (sc_lv<22>) ("XXXXXXXXXXXXXXXXXXXXXX");
    }
}

void optical_flow_sw::thread_tensor_y_val_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state51.read())) {
        tensor_y_val_ce0 = grp_tensor_weight_x_fu_412_tensor_y_val_ce0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state49.read())) {
        tensor_y_val_ce0 = grp_tensor_weight_y_fu_404_tensor_y_val_2_ce0.read();
    } else {
        tensor_y_val_ce0 = ap_const_logic_0;
    }
}

void optical_flow_sw::thread_tensor_y_val_ce1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state49.read())) {
        tensor_y_val_ce1 = grp_tensor_weight_y_fu_404_tensor_y_val_2_ce1.read();
    } else {
        tensor_y_val_ce1 = ap_const_logic_0;
    }
}

void optical_flow_sw::thread_tensor_y_val_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state49.read())) {
        tensor_y_val_we0 = grp_tensor_weight_y_fu_404_tensor_y_val_2_we0.read();
    } else {
        tensor_y_val_we0 = ap_const_logic_0;
    }
}

void optical_flow_sw::thread_tensor_y_val_we1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state49.read())) {
        tensor_y_val_we1 = grp_tensor_weight_y_fu_404_tensor_y_val_2_we1.read();
    } else {
        tensor_y_val_we1 = ap_const_logic_0;
    }
}

void optical_flow_sw::thread_tmp_11_fu_592_p3() {
    tmp_11_fu_592_p3 = esl_concat<20,1>(add_ln136_reg_776.read(), ap_const_lv1_0);
}

void optical_flow_sw::thread_tmp_fu_481_p3() {
    tmp_fu_481_p3 = esl_concat<9,10>(r_0_i_reg_294.read(), ap_const_lv10_0);
}

void optical_flow_sw::thread_tmp_s_fu_545_p3() {
    tmp_s_fu_545_p3 = esl_concat<9,10>(r_0_i7_reg_316.read(), ap_const_lv10_0);
}

void optical_flow_sw::thread_xor_ln60_fu_522_p2() {
    xor_ln60_fu_522_p2 = (bitcast_ln60_fu_519_p1.read() ^ ap_const_lv32_80000000);
}

void optical_flow_sw::thread_y_filtered_x_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read())) {
        y_filtered_x_address0 = grp_gradient_weight_x_fu_386_y_filtered_x_address0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read())) {
        y_filtered_x_address0 = grp_gradient_weight_y_fu_368_filt_grad_x_address0.read();
    } else {
        y_filtered_x_address0 =  (sc_lv<19>) ("XXXXXXXXXXXXXXXXXXX");
    }
}

void optical_flow_sw::thread_y_filtered_x_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read())) {
        y_filtered_x_ce0 = grp_gradient_weight_x_fu_386_y_filtered_x_ce0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read())) {
        y_filtered_x_ce0 = grp_gradient_weight_y_fu_368_filt_grad_x_ce0.read();
    } else {
        y_filtered_x_ce0 = ap_const_logic_0;
    }
}

void optical_flow_sw::thread_y_filtered_x_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read())) {
        y_filtered_x_we0 = grp_gradient_weight_y_fu_368_filt_grad_x_we0.read();
    } else {
        y_filtered_x_we0 = ap_const_logic_0;
    }
}

void optical_flow_sw::thread_y_filtered_y_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read())) {
        y_filtered_y_address0 = grp_gradient_weight_x_fu_386_y_filtered_y_address0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read())) {
        y_filtered_y_address0 = grp_gradient_weight_y_fu_368_filt_grad_y_address0.read();
    } else {
        y_filtered_y_address0 =  (sc_lv<19>) ("XXXXXXXXXXXXXXXXXXX");
    }
}

void optical_flow_sw::thread_y_filtered_y_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read())) {
        y_filtered_y_ce0 = grp_gradient_weight_x_fu_386_y_filtered_y_ce0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read())) {
        y_filtered_y_ce0 = grp_gradient_weight_y_fu_368_filt_grad_y_ce0.read();
    } else {
        y_filtered_y_ce0 = ap_const_logic_0;
    }
}

void optical_flow_sw::thread_y_filtered_y_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read())) {
        y_filtered_y_we0 = grp_gradient_weight_y_fu_368_filt_grad_y_we0.read();
    } else {
        y_filtered_y_we0 = ap_const_logic_0;
    }
}

void optical_flow_sw::thread_y_filtered_z_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read())) {
        y_filtered_z_address0 = grp_gradient_weight_x_fu_386_y_filtered_z_address0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read())) {
        y_filtered_z_address0 = grp_gradient_weight_y_fu_368_filt_grad_z_address0.read();
    } else {
        y_filtered_z_address0 =  (sc_lv<19>) ("XXXXXXXXXXXXXXXXXXX");
    }
}

void optical_flow_sw::thread_y_filtered_z_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read())) {
        y_filtered_z_ce0 = grp_gradient_weight_x_fu_386_y_filtered_z_ce0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read())) {
        y_filtered_z_ce0 = grp_gradient_weight_y_fu_368_filt_grad_z_ce0.read();
    } else {
        y_filtered_z_ce0 = ap_const_logic_0;
    }
}

void optical_flow_sw::thread_y_filtered_z_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read())) {
        y_filtered_z_we0 = grp_gradient_weight_y_fu_368_filt_grad_z_we0.read();
    } else {
        y_filtered_z_we0 = ap_const_logic_0;
    }
}

void optical_flow_sw::thread_zext_ln134_fu_553_p1() {
    zext_ln134_fu_553_p1 = esl_zext<20,19>(tmp_s_fu_545_p3.read());
}

void optical_flow_sw::thread_zext_ln136_1_fu_578_p1() {
    zext_ln136_1_fu_578_p1 = esl_zext<64,20>(add_ln136_fu_573_p2.read());
}

void optical_flow_sw::thread_zext_ln136_fu_569_p1() {
    zext_ln136_fu_569_p1 = esl_zext<20,11>(c_0_i9_reg_327.read());
}

void optical_flow_sw::thread_zext_ln144_1_fu_609_p1() {
    zext_ln144_1_fu_609_p1 = esl_zext<64,23>(sub_ln144_fu_603_p2.read());
}

void optical_flow_sw::thread_zext_ln144_2_fu_620_p1() {
    zext_ln144_2_fu_620_p1 = esl_zext<64,23>(or_ln144_fu_614_p2.read());
}

void optical_flow_sw::thread_zext_ln144_3_fu_630_p1() {
    zext_ln144_3_fu_630_p1 = esl_zext<64,23>(add_ln144_fu_625_p2.read());
}

void optical_flow_sw::thread_zext_ln144_4_fu_640_p1() {
    zext_ln144_4_fu_640_p1 = esl_zext<64,23>(add_ln144_1_fu_635_p2.read());
}

void optical_flow_sw::thread_zext_ln144_5_fu_650_p1() {
    zext_ln144_5_fu_650_p1 = esl_zext<64,23>(add_ln144_2_fu_645_p2.read());
}

void optical_flow_sw::thread_zext_ln144_6_fu_660_p1() {
    zext_ln144_6_fu_660_p1 = esl_zext<64,23>(add_ln144_3_fu_655_p2.read());
}

void optical_flow_sw::thread_zext_ln144_fu_599_p1() {
    zext_ln144_fu_599_p1 = esl_zext<23,21>(tmp_11_fu_592_p3.read());
}

void optical_flow_sw::thread_zext_ln53_fu_489_p1() {
    zext_ln53_fu_489_p1 = esl_zext<20,19>(tmp_fu_481_p3.read());
}

void optical_flow_sw::thread_zext_ln55_1_fu_514_p1() {
    zext_ln55_1_fu_514_p1 = esl_zext<64,20>(add_ln55_fu_509_p2.read());
}

void optical_flow_sw::thread_zext_ln55_fu_505_p1() {
    zext_ln55_fu_505_p1 = esl_zext<20,11>(c_0_i_reg_305.read());
}

void optical_flow_sw::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(grp_gradient_xy_calc_fu_356_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state2;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(icmp_ln51_fu_469_p2.read(), ap_const_lv1_0))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_state36;
            }
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(icmp_ln53_fu_493_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state12;
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state13;
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_fsm_state14;
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_fsm_state15;
            break;
        case 16384 : 
            ap_NS_fsm = ap_ST_fsm_state16;
            break;
        case 32768 : 
            ap_NS_fsm = ap_ST_fsm_state17;
            break;
        case 65536 : 
            ap_NS_fsm = ap_ST_fsm_state18;
            break;
        case 131072 : 
            ap_NS_fsm = ap_ST_fsm_state19;
            break;
        case 262144 : 
            ap_NS_fsm = ap_ST_fsm_state20;
            break;
        case 524288 : 
            ap_NS_fsm = ap_ST_fsm_state21;
            break;
        case 1048576 : 
            ap_NS_fsm = ap_ST_fsm_state22;
            break;
        case 2097152 : 
            ap_NS_fsm = ap_ST_fsm_state23;
            break;
        case 4194304 : 
            ap_NS_fsm = ap_ST_fsm_state24;
            break;
        case 8388608 : 
            ap_NS_fsm = ap_ST_fsm_state25;
            break;
        case 16777216 : 
            ap_NS_fsm = ap_ST_fsm_state26;
            break;
        case 33554432 : 
            ap_NS_fsm = ap_ST_fsm_state27;
            break;
        case 67108864 : 
            ap_NS_fsm = ap_ST_fsm_state28;
            break;
        case 134217728 : 
            ap_NS_fsm = ap_ST_fsm_state29;
            break;
        case 268435456 : 
            ap_NS_fsm = ap_ST_fsm_state30;
            break;
        case 536870912 : 
            ap_NS_fsm = ap_ST_fsm_state31;
            break;
        case 1073741824 : 
            ap_NS_fsm = ap_ST_fsm_state32;
            break;
        case 2147483648 : 
            ap_NS_fsm = ap_ST_fsm_state33;
            break;
        case 4294967296 : 
            ap_NS_fsm = ap_ST_fsm_state34;
            break;
        case 8589934592 : 
            ap_NS_fsm = ap_ST_fsm_state35;
            break;
        case 17179869184 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 34359738368 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read()) && esl_seteq<1,1,1>(grp_gradient_weight_y_fu_368_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state37;
            } else {
                ap_NS_fsm = ap_ST_fsm_state36;
            }
            break;
        case 68719476736 : 
            ap_NS_fsm = ap_ST_fsm_state38;
            break;
        case 137438953472 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read()) && esl_seteq<1,1,1>(grp_gradient_weight_x_fu_386_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state39;
            } else {
                ap_NS_fsm = ap_ST_fsm_state38;
            }
            break;
        case 274877906944 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln132_fu_533_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state40;
            } else {
                ap_NS_fsm = ap_ST_fsm_state49;
            }
            break;
        case 549755813888 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state40.read()) && esl_seteq<1,1,1>(icmp_ln134_fu_557_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state39;
            } else {
                ap_NS_fsm = ap_ST_fsm_state41;
            }
            break;
        case 1099511627776 : 
            ap_NS_fsm = ap_ST_fsm_state42;
            break;
        case 2199023255552 : 
            ap_NS_fsm = ap_ST_fsm_state43;
            break;
        case 4398046511104 : 
            ap_NS_fsm = ap_ST_fsm_state44;
            break;
        case 8796093022208 : 
            ap_NS_fsm = ap_ST_fsm_state45;
            break;
        case 17592186044416 : 
            ap_NS_fsm = ap_ST_fsm_state46;
            break;
        case 35184372088832 : 
            ap_NS_fsm = ap_ST_fsm_state47;
            break;
        case 70368744177664 : 
            ap_NS_fsm = ap_ST_fsm_state48;
            break;
        case 140737488355328 : 
            ap_NS_fsm = ap_ST_fsm_state40;
            break;
        case 281474976710656 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state49.read()) && esl_seteq<1,1,1>(grp_tensor_weight_y_fu_404_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state50;
            } else {
                ap_NS_fsm = ap_ST_fsm_state49;
            }
            break;
        case 562949953421312 : 
            ap_NS_fsm = ap_ST_fsm_state51;
            break;
        case 1125899906842624 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state51.read()) && esl_seteq<1,1,1>(grp_tensor_weight_x_fu_412_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state52;
            } else {
                ap_NS_fsm = ap_ST_fsm_state51;
            }
            break;
        case 2251799813685248 : 
            ap_NS_fsm = ap_ST_fsm_state53;
            break;
        case 4503599627370496 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state53.read()) && esl_seteq<1,1,1>(grp_flow_calc_fu_338_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state53;
            }
            break;
        default : 
            ap_NS_fsm =  (sc_lv<53>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
            break;
    }
}

void optical_flow_sw::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"frame0_address0\" :  \"" << frame0_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"frame0_ce0\" :  \"" << frame0_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"frame0_q0\" :  \"" << frame0_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"frame1_address0\" :  \"" << frame1_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"frame1_ce0\" :  \"" << frame1_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"frame1_q0\" :  \"" << frame1_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"frame2_address0\" :  \"" << frame2_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"frame2_ce0\" :  \"" << frame2_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"frame2_q0\" :  \"" << frame2_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"frame2_address1\" :  \"" << frame2_address1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"frame2_ce1\" :  \"" << frame2_ce1.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"frame2_q1\" :  \"" << frame2_q1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"frame3_address0\" :  \"" << frame3_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"frame3_ce0\" :  \"" << frame3_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"frame3_q0\" :  \"" << frame3_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"frame4_address0\" :  \"" << frame4_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"frame4_ce0\" :  \"" << frame4_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"frame4_q0\" :  \"" << frame4_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"outputs_x_address0\" :  \"" << outputs_x_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"outputs_x_ce0\" :  \"" << outputs_x_ce0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"outputs_x_we0\" :  \"" << outputs_x_we0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"outputs_x_d0\" :  \"" << outputs_x_d0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"outputs_y_address0\" :  \"" << outputs_y_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"outputs_y_ce0\" :  \"" << outputs_y_ce0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"outputs_y_we0\" :  \"" << outputs_y_we0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"outputs_y_d0\" :  \"" << outputs_y_d0.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

