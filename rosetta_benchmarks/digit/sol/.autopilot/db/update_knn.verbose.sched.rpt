

================================================================
== Vivado HLS Report for 'update_knn'
================================================================
* Date:           Wed Jun 24 13:47:46 2020

* Version:        2019.1 (Build 2552052 on Fri May 24 15:28:33 MDT 2019)
* Project:        digit
* Solution:       sol
* Product family: kintex7
* Target device:  xc7k160t-fbg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|     8.449|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |   22|   22|   22|   22|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-----------------+-----+-----+----------+-----------+-----------+------+----------+
        |                 |  Latency  | Iteration|  Initiation Interval  | Trip |          |
        |    Loop Name    | min | max |  Latency |  achieved |   target  | Count| Pipelined|
        +-----------------+-----+-----+----------+-----------+-----------+------+----------+
        |- Loop 1         |   16|   16|         4|          -|          -|     4|    no    |
        |- FIND_MAX_DIST  |    3|    3|         1|          -|          -|     3|    no    |
        +-----------------+-----+-----+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 7
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 6 
3 --> 4 
4 --> 5 
5 --> 2 
6 --> 6 7 
7 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.06>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%label_read = call i4 @_ssdm_op_Read.ap_auto.i4(i4 %label_r)"   --->   Operation 8 'read' 'label_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%labels_2_read_1 = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %labels_2_read)"   --->   Operation 9 'read' 'labels_2_read_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%labels_1_read_1 = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %labels_1_read)"   --->   Operation 10 'read' 'labels_1_read_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%labels_0_read_1 = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %labels_0_read)"   --->   Operation 11 'read' 'labels_0_read_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%dists_2_read_1 = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %dists_2_read)"   --->   Operation 12 'read' 'dists_2_read_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%dists_2_read_3 = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %dists_2_read_5)"   --->   Operation 13 'read' 'dists_2_read_3' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%dists_1_read_1 = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %dists_1_read)"   --->   Operation 14 'read' 'dists_1_read_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%dists_1_read_3 = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %dists_1_read_5)"   --->   Operation 15 'read' 'dists_1_read_3' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%dists_0_read_1 = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %dists_0_read)"   --->   Operation 16 'read' 'dists_0_read_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%dists_0_read_3 = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %dists_0_read_5)"   --->   Operation 17 'read' 'dists_0_read_3' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%test_inst_offset_rea = call i13 @_ssdm_op_Read.ap_auto.i13(i13 %test_inst_offset)"   --->   Operation 18 'read' 'test_inst_offset_rea' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%train_inst_offset_re = call i17 @_ssdm_op_Read.ap_auto.i17(i17 %train_inst_offset)"   --->   Operation 19 'read' 'train_inst_offset_re' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%label_cast = zext i4 %label_read to i32"   --->   Operation 20 'zext' 'label_cast' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (1.06ns)   --->   "br label %1" [digitrec_sw.cpp:33]   --->   Operation 21 'br' <Predicate = true> <Delay = 1.06>

State 2 <SV = 1> <Delay = 4.17>
ST_2 : Operation 22 [1/1] (0.00ns)   --->   "%dists_0_0 = phi i9 [ 0, %0 ], [ %dist, %2 ]"   --->   Operation 22 'phi' 'dists_0_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 23 [1/1] (0.00ns)   --->   "%i_0 = phi i3 [ 0, %0 ], [ %i, %2 ]"   --->   Operation 23 'phi' 'i_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 24 [1/1] (0.86ns)   --->   "%icmp_ln33 = icmp eq i3 %i_0, -4" [digitrec_sw.cpp:33]   --->   Operation 24 'icmp' 'icmp_ln33' <Predicate = true> <Delay = 0.86> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 25 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 4, i64 4, i64 4)"   --->   Operation 25 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 26 [1/1] (1.16ns)   --->   "%i = add i3 %i_0, 1" [digitrec_sw.cpp:33]   --->   Operation 26 'add' 'i' <Predicate = true> <Delay = 1.16> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.00> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 27 [1/1] (0.00ns)   --->   "br i1 %icmp_ln33, label %.preheader.preheader, label %2" [digitrec_sw.cpp:33]   --->   Operation 27 'br' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 28 [1/1] (0.00ns)   --->   "%zext_ln35 = zext i3 %i_0 to i17" [digitrec_sw.cpp:35]   --->   Operation 28 'zext' 'zext_ln35' <Predicate = (!icmp_ln33)> <Delay = 0.00>
ST_2 : Operation 29 [1/1] (0.00ns)   --->   "%zext_ln35_1 = zext i3 %i_0 to i13" [digitrec_sw.cpp:35]   --->   Operation 29 'zext' 'zext_ln35_1' <Predicate = (!icmp_ln33)> <Delay = 0.00>
ST_2 : Operation 30 [1/1] (1.45ns)   --->   "%add_ln35 = add i13 %test_inst_offset_rea, %zext_ln35_1" [digitrec_sw.cpp:35]   --->   Operation 30 'add' 'add_ln35' <Predicate = (!icmp_ln33)> <Delay = 1.45> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.00> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 31 [1/1] (0.00ns)   --->   "%zext_ln35_2 = zext i13 %add_ln35 to i64" [digitrec_sw.cpp:35]   --->   Operation 31 'zext' 'zext_ln35_2' <Predicate = (!icmp_ln33)> <Delay = 0.00>
ST_2 : Operation 32 [1/1] (0.00ns)   --->   "%test_inst_addr = getelementptr [8000 x i64]* %test_inst, i64 0, i64 %zext_ln35_2" [digitrec_sw.cpp:35]   --->   Operation 32 'getelementptr' 'test_inst_addr' <Predicate = (!icmp_ln33)> <Delay = 0.00>
ST_2 : Operation 33 [2/2] (2.66ns)   --->   "%test_inst_load = load i64* %test_inst_addr, align 8" [digitrec_sw.cpp:35]   --->   Operation 33 'load' 'test_inst_load' <Predicate = (!icmp_ln33)> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 72000> <RAM>
ST_2 : Operation 34 [1/1] (1.50ns)   --->   "%add_ln35_1 = add i17 %train_inst_offset_re, %zext_ln35" [digitrec_sw.cpp:35]   --->   Operation 34 'add' 'add_ln35_1' <Predicate = (!icmp_ln33)> <Delay = 1.50> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.00> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 35 [1/1] (0.00ns)   --->   "%zext_ln35_3 = zext i17 %add_ln35_1 to i64" [digitrec_sw.cpp:35]   --->   Operation 35 'zext' 'zext_ln35_3' <Predicate = (!icmp_ln33)> <Delay = 0.00>
ST_2 : Operation 36 [1/1] (0.00ns)   --->   "%train_inst_addr = getelementptr [72000 x i64]* %train_inst, i64 0, i64 %zext_ln35_3" [digitrec_sw.cpp:35]   --->   Operation 36 'getelementptr' 'train_inst_addr' <Predicate = (!icmp_ln33)> <Delay = 0.00>
ST_2 : Operation 37 [2/2] (2.66ns)   --->   "%train_inst_load = load i64* %train_inst_addr, align 8" [digitrec_sw.cpp:35]   --->   Operation 37 'load' 'train_inst_load' <Predicate = (!icmp_ln33)> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 72000> <RAM>
ST_2 : Operation 38 [1/1] (0.00ns)   --->   "%zext_ln33 = zext i9 %dists_0_0 to i32" [digitrec_sw.cpp:33]   --->   Operation 38 'zext' 'zext_ln33' <Predicate = (icmp_ln33)> <Delay = 0.00>
ST_2 : Operation 39 [1/1] (1.06ns)   --->   "br label %.preheader" [digitrec_sw.cpp:48]   --->   Operation 39 'br' <Predicate = (icmp_ln33)> <Delay = 1.06>

State 3 <SV = 2> <Delay = 7.29>
ST_3 : Operation 40 [1/2] (2.66ns)   --->   "%test_inst_load = load i64* %test_inst_addr, align 8" [digitrec_sw.cpp:35]   --->   Operation 40 'load' 'test_inst_load' <Predicate = true> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 72000> <RAM>
ST_3 : Operation 41 [1/2] (2.66ns)   --->   "%train_inst_load = load i64* %train_inst_addr, align 8" [digitrec_sw.cpp:35]   --->   Operation 41 'load' 'train_inst_load' <Predicate = true> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 72000> <RAM>
ST_3 : Operation 42 [1/1] (0.68ns)   --->   "%diff = xor i64 %train_inst_load, %test_inst_load" [digitrec_sw.cpp:35]   --->   Operation 42 'xor' 'diff' <Predicate = true> <Delay = 0.68> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.68> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 43 [1/1] (0.00ns)   --->   "%tmp = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %diff, i32 63)" [digitrec_sw.cpp:20->digitrec_sw.cpp:36]   --->   Operation 43 'bitselect' 'tmp' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 44 [1/1] (0.00ns)   --->   "%tmp_1 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %diff, i32 61)" [digitrec_sw.cpp:20->digitrec_sw.cpp:36]   --->   Operation 44 'bitselect' 'tmp_1' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 45 [1/1] (0.00ns)   --->   "%tmp_2 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %diff, i32 59)" [digitrec_sw.cpp:20->digitrec_sw.cpp:36]   --->   Operation 45 'bitselect' 'tmp_2' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 46 [1/1] (0.00ns)   --->   "%tmp_3 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %diff, i32 57)" [digitrec_sw.cpp:20->digitrec_sw.cpp:36]   --->   Operation 46 'bitselect' 'tmp_3' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 47 [1/1] (0.00ns)   --->   "%tmp_4 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %diff, i32 55)" [digitrec_sw.cpp:20->digitrec_sw.cpp:36]   --->   Operation 47 'bitselect' 'tmp_4' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 48 [1/1] (0.00ns)   --->   "%tmp_5 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %diff, i32 53)" [digitrec_sw.cpp:20->digitrec_sw.cpp:36]   --->   Operation 48 'bitselect' 'tmp_5' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 49 [1/1] (0.00ns)   --->   "%tmp_6 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %diff, i32 51)" [digitrec_sw.cpp:20->digitrec_sw.cpp:36]   --->   Operation 49 'bitselect' 'tmp_6' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 50 [1/1] (0.00ns)   --->   "%tmp_7 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %diff, i32 49)" [digitrec_sw.cpp:20->digitrec_sw.cpp:36]   --->   Operation 50 'bitselect' 'tmp_7' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 51 [1/1] (0.00ns)   --->   "%tmp_8 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %diff, i32 47)" [digitrec_sw.cpp:20->digitrec_sw.cpp:36]   --->   Operation 51 'bitselect' 'tmp_8' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 52 [1/1] (0.00ns)   --->   "%tmp_9 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %diff, i32 45)" [digitrec_sw.cpp:20->digitrec_sw.cpp:36]   --->   Operation 52 'bitselect' 'tmp_9' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 53 [1/1] (0.00ns)   --->   "%tmp_10 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %diff, i32 43)" [digitrec_sw.cpp:20->digitrec_sw.cpp:36]   --->   Operation 53 'bitselect' 'tmp_10' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 54 [1/1] (0.00ns)   --->   "%tmp_11 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %diff, i32 41)" [digitrec_sw.cpp:20->digitrec_sw.cpp:36]   --->   Operation 54 'bitselect' 'tmp_11' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 55 [1/1] (0.00ns)   --->   "%tmp_12 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %diff, i32 39)" [digitrec_sw.cpp:20->digitrec_sw.cpp:36]   --->   Operation 55 'bitselect' 'tmp_12' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 56 [1/1] (0.00ns)   --->   "%tmp_13 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %diff, i32 37)" [digitrec_sw.cpp:20->digitrec_sw.cpp:36]   --->   Operation 56 'bitselect' 'tmp_13' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 57 [1/1] (0.00ns)   --->   "%tmp_14 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %diff, i32 35)" [digitrec_sw.cpp:20->digitrec_sw.cpp:36]   --->   Operation 57 'bitselect' 'tmp_14' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 58 [1/1] (0.00ns)   --->   "%tmp_15 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %diff, i32 33)" [digitrec_sw.cpp:20->digitrec_sw.cpp:36]   --->   Operation 58 'bitselect' 'tmp_15' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 59 [1/1] (0.00ns)   --->   "%tmp_16 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %diff, i32 31)" [digitrec_sw.cpp:20->digitrec_sw.cpp:36]   --->   Operation 59 'bitselect' 'tmp_16' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 60 [1/1] (0.00ns)   --->   "%tmp_17 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %diff, i32 29)" [digitrec_sw.cpp:20->digitrec_sw.cpp:36]   --->   Operation 60 'bitselect' 'tmp_17' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 61 [1/1] (0.00ns)   --->   "%tmp_18 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %diff, i32 27)" [digitrec_sw.cpp:20->digitrec_sw.cpp:36]   --->   Operation 61 'bitselect' 'tmp_18' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 62 [1/1] (0.00ns)   --->   "%tmp_19 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %diff, i32 25)" [digitrec_sw.cpp:20->digitrec_sw.cpp:36]   --->   Operation 62 'bitselect' 'tmp_19' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 63 [1/1] (0.00ns)   --->   "%tmp_20 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %diff, i32 23)" [digitrec_sw.cpp:20->digitrec_sw.cpp:36]   --->   Operation 63 'bitselect' 'tmp_20' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 64 [1/1] (0.00ns)   --->   "%tmp_21 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %diff, i32 21)" [digitrec_sw.cpp:20->digitrec_sw.cpp:36]   --->   Operation 64 'bitselect' 'tmp_21' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 65 [1/1] (0.00ns)   --->   "%tmp_22 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %diff, i32 19)" [digitrec_sw.cpp:20->digitrec_sw.cpp:36]   --->   Operation 65 'bitselect' 'tmp_22' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 66 [1/1] (0.00ns)   --->   "%tmp_23 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %diff, i32 17)" [digitrec_sw.cpp:20->digitrec_sw.cpp:36]   --->   Operation 66 'bitselect' 'tmp_23' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 67 [1/1] (0.00ns)   --->   "%tmp_24 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %diff, i32 15)" [digitrec_sw.cpp:20->digitrec_sw.cpp:36]   --->   Operation 67 'bitselect' 'tmp_24' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 68 [1/1] (0.00ns)   --->   "%tmp_25 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %diff, i32 13)" [digitrec_sw.cpp:20->digitrec_sw.cpp:36]   --->   Operation 68 'bitselect' 'tmp_25' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 69 [1/1] (0.00ns)   --->   "%tmp_26 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %diff, i32 11)" [digitrec_sw.cpp:20->digitrec_sw.cpp:36]   --->   Operation 69 'bitselect' 'tmp_26' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 70 [1/1] (0.00ns)   --->   "%tmp_27 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %diff, i32 9)" [digitrec_sw.cpp:20->digitrec_sw.cpp:36]   --->   Operation 70 'bitselect' 'tmp_27' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 71 [1/1] (0.00ns)   --->   "%tmp_28 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %diff, i32 7)" [digitrec_sw.cpp:20->digitrec_sw.cpp:36]   --->   Operation 71 'bitselect' 'tmp_28' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 72 [1/1] (0.00ns)   --->   "%tmp_29 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %diff, i32 5)" [digitrec_sw.cpp:20->digitrec_sw.cpp:36]   --->   Operation 72 'bitselect' 'tmp_29' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 73 [1/1] (0.00ns)   --->   "%tmp_30 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %diff, i32 3)" [digitrec_sw.cpp:20->digitrec_sw.cpp:36]   --->   Operation 73 'bitselect' 'tmp_30' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 74 [1/1] (0.00ns)   --->   "%tmp_31 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %diff, i32 1)" [digitrec_sw.cpp:20->digitrec_sw.cpp:36]   --->   Operation 74 'bitselect' 'tmp_31' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 75 [1/1] (0.00ns)   --->   "%and_ln = call i63 @_ssdm_op_BitConcatenate.i63.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1(i1 %tmp, i1 false, i1 %tmp_1, i1 false, i1 %tmp_2, i1 false, i1 %tmp_3, i1 false, i1 %tmp_4, i1 false, i1 %tmp_5, i1 false, i1 %tmp_6, i1 false, i1 %tmp_7, i1 false, i1 %tmp_8, i1 false, i1 %tmp_9, i1 false, i1 %tmp_10, i1 false, i1 %tmp_11, i1 false, i1 %tmp_12, i1 false, i1 %tmp_13, i1 false, i1 %tmp_14, i1 false, i1 %tmp_15, i1 false, i1 %tmp_16, i1 false, i1 %tmp_17, i1 false, i1 %tmp_18, i1 false, i1 %tmp_19, i1 false, i1 %tmp_20, i1 false, i1 %tmp_21, i1 false, i1 %tmp_22, i1 false, i1 %tmp_23, i1 false, i1 %tmp_24, i1 false, i1 %tmp_25, i1 false, i1 %tmp_26, i1 false, i1 %tmp_27, i1 false, i1 %tmp_28, i1 false, i1 %tmp_29, i1 false, i1 %tmp_30, i1 false, i1 %tmp_31)" [digitrec_sw.cpp:20->digitrec_sw.cpp:36]   --->   Operation 75 'bitconcatenate' 'and_ln' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 76 [1/1] (0.00ns)   --->   "%zext_ln20 = zext i63 %and_ln to i64" [digitrec_sw.cpp:20->digitrec_sw.cpp:36]   --->   Operation 76 'zext' 'zext_ln20' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 77 [1/1] (1.98ns)   --->   "%sub_ln20 = sub i64 %diff, %zext_ln20" [digitrec_sw.cpp:20->digitrec_sw.cpp:36]   --->   Operation 77 'sub' 'sub_ln20' <Predicate = true> <Delay = 1.98> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.00> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 78 [1/1] (0.00ns)   --->   "%trunc_ln21 = trunc i64 %sub_ln20 to i2" [digitrec_sw.cpp:21->digitrec_sw.cpp:36]   --->   Operation 78 'trunc' 'trunc_ln21' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 79 [1/1] (0.00ns)   --->   "%tmp_s = call i2 @_ssdm_op_PartSelect.i2.i64.i32.i32(i64 %sub_ln20, i32 60, i32 61)" [digitrec_sw.cpp:21->digitrec_sw.cpp:36]   --->   Operation 79 'partselect' 'tmp_s' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 80 [1/1] (0.00ns)   --->   "%tmp_32 = call i2 @_ssdm_op_PartSelect.i2.i64.i32.i32(i64 %sub_ln20, i32 56, i32 57)" [digitrec_sw.cpp:21->digitrec_sw.cpp:36]   --->   Operation 80 'partselect' 'tmp_32' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 81 [1/1] (0.00ns)   --->   "%tmp_33 = call i2 @_ssdm_op_PartSelect.i2.i64.i32.i32(i64 %sub_ln20, i32 52, i32 53)" [digitrec_sw.cpp:21->digitrec_sw.cpp:36]   --->   Operation 81 'partselect' 'tmp_33' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 82 [1/1] (0.00ns)   --->   "%tmp_34 = call i2 @_ssdm_op_PartSelect.i2.i64.i32.i32(i64 %sub_ln20, i32 48, i32 49)" [digitrec_sw.cpp:21->digitrec_sw.cpp:36]   --->   Operation 82 'partselect' 'tmp_34' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 83 [1/1] (0.00ns)   --->   "%tmp_35 = call i2 @_ssdm_op_PartSelect.i2.i64.i32.i32(i64 %sub_ln20, i32 44, i32 45)" [digitrec_sw.cpp:21->digitrec_sw.cpp:36]   --->   Operation 83 'partselect' 'tmp_35' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 84 [1/1] (0.00ns)   --->   "%tmp_36 = call i2 @_ssdm_op_PartSelect.i2.i64.i32.i32(i64 %sub_ln20, i32 40, i32 41)" [digitrec_sw.cpp:21->digitrec_sw.cpp:36]   --->   Operation 84 'partselect' 'tmp_36' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 85 [1/1] (0.00ns)   --->   "%tmp_37 = call i2 @_ssdm_op_PartSelect.i2.i64.i32.i32(i64 %sub_ln20, i32 36, i32 37)" [digitrec_sw.cpp:21->digitrec_sw.cpp:36]   --->   Operation 85 'partselect' 'tmp_37' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 86 [1/1] (0.00ns)   --->   "%tmp_38 = call i2 @_ssdm_op_PartSelect.i2.i64.i32.i32(i64 %sub_ln20, i32 32, i32 33)" [digitrec_sw.cpp:21->digitrec_sw.cpp:36]   --->   Operation 86 'partselect' 'tmp_38' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 87 [1/1] (0.00ns)   --->   "%tmp_39 = call i2 @_ssdm_op_PartSelect.i2.i64.i32.i32(i64 %sub_ln20, i32 28, i32 29)" [digitrec_sw.cpp:21->digitrec_sw.cpp:36]   --->   Operation 87 'partselect' 'tmp_39' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 88 [1/1] (0.00ns)   --->   "%tmp_40 = call i2 @_ssdm_op_PartSelect.i2.i64.i32.i32(i64 %sub_ln20, i32 24, i32 25)" [digitrec_sw.cpp:21->digitrec_sw.cpp:36]   --->   Operation 88 'partselect' 'tmp_40' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 89 [1/1] (0.00ns)   --->   "%tmp_41 = call i2 @_ssdm_op_PartSelect.i2.i64.i32.i32(i64 %sub_ln20, i32 20, i32 21)" [digitrec_sw.cpp:21->digitrec_sw.cpp:36]   --->   Operation 89 'partselect' 'tmp_41' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 90 [1/1] (0.00ns)   --->   "%tmp_42 = call i2 @_ssdm_op_PartSelect.i2.i64.i32.i32(i64 %sub_ln20, i32 16, i32 17)" [digitrec_sw.cpp:21->digitrec_sw.cpp:36]   --->   Operation 90 'partselect' 'tmp_42' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 91 [1/1] (0.00ns)   --->   "%tmp_43 = call i2 @_ssdm_op_PartSelect.i2.i64.i32.i32(i64 %sub_ln20, i32 12, i32 13)" [digitrec_sw.cpp:21->digitrec_sw.cpp:36]   --->   Operation 91 'partselect' 'tmp_43' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 92 [1/1] (0.00ns)   --->   "%tmp_44 = call i2 @_ssdm_op_PartSelect.i2.i64.i32.i32(i64 %sub_ln20, i32 8, i32 9)" [digitrec_sw.cpp:21->digitrec_sw.cpp:36]   --->   Operation 92 'partselect' 'tmp_44' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 93 [1/1] (0.00ns)   --->   "%tmp_45 = call i2 @_ssdm_op_PartSelect.i2.i64.i32.i32(i64 %sub_ln20, i32 4, i32 5)" [digitrec_sw.cpp:21->digitrec_sw.cpp:36]   --->   Operation 93 'partselect' 'tmp_45' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 94 [1/1] (0.00ns)   --->   "%and_ln1 = call i62 @_ssdm_op_BitConcatenate.i62.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2(i2 %tmp_s, i2 0, i2 %tmp_32, i2 0, i2 %tmp_33, i2 0, i2 %tmp_34, i2 0, i2 %tmp_35, i2 0, i2 %tmp_36, i2 0, i2 %tmp_37, i2 0, i2 %tmp_38, i2 0, i2 %tmp_39, i2 0, i2 %tmp_40, i2 0, i2 %tmp_41, i2 0, i2 %tmp_42, i2 0, i2 %tmp_43, i2 0, i2 %tmp_44, i2 0, i2 %tmp_45, i2 0, i2 %trunc_ln21)" [digitrec_sw.cpp:21->digitrec_sw.cpp:36]   --->   Operation 94 'bitconcatenate' 'and_ln1' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 95 [1/1] (0.00ns)   --->   "%zext_ln21 = zext i62 %and_ln1 to i63" [digitrec_sw.cpp:21->digitrec_sw.cpp:36]   --->   Operation 95 'zext' 'zext_ln21' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 96 [1/1] (0.00ns)   --->   "%trunc_ln21_2 = call i2 @_ssdm_op_PartSelect.i2.i64.i32.i32(i64 %sub_ln20, i32 2, i32 3)" [digitrec_sw.cpp:21->digitrec_sw.cpp:36]   --->   Operation 96 'partselect' 'trunc_ln21_2' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 97 [1/1] (0.00ns)   --->   "%tmp_46 = call i2 @_ssdm_op_PartSelect.i2.i64.i32.i32(i64 %sub_ln20, i32 62, i32 63)" [digitrec_sw.cpp:21->digitrec_sw.cpp:36]   --->   Operation 97 'partselect' 'tmp_46' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 98 [1/1] (0.00ns)   --->   "%tmp_47 = call i2 @_ssdm_op_PartSelect.i2.i64.i32.i32(i64 %sub_ln20, i32 58, i32 59)" [digitrec_sw.cpp:21->digitrec_sw.cpp:36]   --->   Operation 98 'partselect' 'tmp_47' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 99 [1/1] (0.00ns)   --->   "%tmp_48 = call i2 @_ssdm_op_PartSelect.i2.i64.i32.i32(i64 %sub_ln20, i32 54, i32 55)" [digitrec_sw.cpp:21->digitrec_sw.cpp:36]   --->   Operation 99 'partselect' 'tmp_48' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 100 [1/1] (0.00ns)   --->   "%tmp_49 = call i2 @_ssdm_op_PartSelect.i2.i64.i32.i32(i64 %sub_ln20, i32 50, i32 51)" [digitrec_sw.cpp:21->digitrec_sw.cpp:36]   --->   Operation 100 'partselect' 'tmp_49' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 101 [1/1] (0.00ns)   --->   "%tmp_50 = call i2 @_ssdm_op_PartSelect.i2.i64.i32.i32(i64 %sub_ln20, i32 46, i32 47)" [digitrec_sw.cpp:21->digitrec_sw.cpp:36]   --->   Operation 101 'partselect' 'tmp_50' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 102 [1/1] (0.00ns)   --->   "%tmp_51 = call i2 @_ssdm_op_PartSelect.i2.i64.i32.i32(i64 %sub_ln20, i32 42, i32 43)" [digitrec_sw.cpp:21->digitrec_sw.cpp:36]   --->   Operation 102 'partselect' 'tmp_51' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 103 [1/1] (0.00ns)   --->   "%tmp_52 = call i2 @_ssdm_op_PartSelect.i2.i64.i32.i32(i64 %sub_ln20, i32 38, i32 39)" [digitrec_sw.cpp:21->digitrec_sw.cpp:36]   --->   Operation 103 'partselect' 'tmp_52' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 104 [1/1] (0.00ns)   --->   "%tmp_53 = call i2 @_ssdm_op_PartSelect.i2.i64.i32.i32(i64 %sub_ln20, i32 34, i32 35)" [digitrec_sw.cpp:21->digitrec_sw.cpp:36]   --->   Operation 104 'partselect' 'tmp_53' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 105 [1/1] (0.00ns)   --->   "%tmp_54 = call i2 @_ssdm_op_PartSelect.i2.i64.i32.i32(i64 %sub_ln20, i32 30, i32 31)" [digitrec_sw.cpp:21->digitrec_sw.cpp:36]   --->   Operation 105 'partselect' 'tmp_54' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 106 [1/1] (0.00ns)   --->   "%tmp_55 = call i2 @_ssdm_op_PartSelect.i2.i64.i32.i32(i64 %sub_ln20, i32 26, i32 27)" [digitrec_sw.cpp:21->digitrec_sw.cpp:36]   --->   Operation 106 'partselect' 'tmp_55' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 107 [1/1] (0.00ns)   --->   "%tmp_56 = call i2 @_ssdm_op_PartSelect.i2.i64.i32.i32(i64 %sub_ln20, i32 22, i32 23)" [digitrec_sw.cpp:21->digitrec_sw.cpp:36]   --->   Operation 107 'partselect' 'tmp_56' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 108 [1/1] (0.00ns)   --->   "%tmp_57 = call i2 @_ssdm_op_PartSelect.i2.i64.i32.i32(i64 %sub_ln20, i32 18, i32 19)" [digitrec_sw.cpp:21->digitrec_sw.cpp:36]   --->   Operation 108 'partselect' 'tmp_57' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 109 [1/1] (0.00ns)   --->   "%tmp_58 = call i2 @_ssdm_op_PartSelect.i2.i64.i32.i32(i64 %sub_ln20, i32 14, i32 15)" [digitrec_sw.cpp:21->digitrec_sw.cpp:36]   --->   Operation 109 'partselect' 'tmp_58' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 110 [1/1] (0.00ns)   --->   "%tmp_59 = call i2 @_ssdm_op_PartSelect.i2.i64.i32.i32(i64 %sub_ln20, i32 10, i32 11)" [digitrec_sw.cpp:21->digitrec_sw.cpp:36]   --->   Operation 110 'partselect' 'tmp_59' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 111 [1/1] (0.00ns)   --->   "%tmp_60 = call i2 @_ssdm_op_PartSelect.i2.i64.i32.i32(i64 %sub_ln20, i32 6, i32 7)" [digitrec_sw.cpp:21->digitrec_sw.cpp:36]   --->   Operation 111 'partselect' 'tmp_60' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 112 [1/1] (0.00ns)   --->   "%and_ln21_1 = call i62 @_ssdm_op_BitConcatenate.i62.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2(i2 %tmp_46, i2 0, i2 %tmp_47, i2 0, i2 %tmp_48, i2 0, i2 %tmp_49, i2 0, i2 %tmp_50, i2 0, i2 %tmp_51, i2 0, i2 %tmp_52, i2 0, i2 %tmp_53, i2 0, i2 %tmp_54, i2 0, i2 %tmp_55, i2 0, i2 %tmp_56, i2 0, i2 %tmp_57, i2 0, i2 %tmp_58, i2 0, i2 %tmp_59, i2 0, i2 %tmp_60, i2 0, i2 %trunc_ln21_2)" [digitrec_sw.cpp:21->digitrec_sw.cpp:36]   --->   Operation 112 'bitconcatenate' 'and_ln21_1' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 113 [1/1] (0.00ns)   --->   "%zext_ln21_1 = zext i62 %and_ln21_1 to i63" [digitrec_sw.cpp:21->digitrec_sw.cpp:36]   --->   Operation 113 'zext' 'zext_ln21_1' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 114 [1/1] (1.96ns)   --->   "%add_ln21 = add i62 %and_ln21_1, %and_ln1" [digitrec_sw.cpp:21->digitrec_sw.cpp:36]   --->   Operation 114 'add' 'add_ln21' <Predicate = true> <Delay = 1.96> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.00> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 115 [1/1] (1.96ns)   --->   "%add_ln21_1 = add i63 %zext_ln21, %zext_ln21_1" [digitrec_sw.cpp:21->digitrec_sw.cpp:36]   --->   Operation 115 'add' 'add_ln21_1' <Predicate = true> <Delay = 1.96> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.00> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 116 [1/1] (0.00ns)   --->   "%tmp_61 = call i59 @_ssdm_op_PartSelect.i59.i63.i32.i32(i63 %add_ln21_1, i32 4, i32 62)" [digitrec_sw.cpp:22->digitrec_sw.cpp:36]   --->   Operation 116 'partselect' 'tmp_61' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 117 [1/1] (0.00ns)   --->   "%trunc_ln1 = call i4 @_ssdm_op_PartSelect.i4.i62.i32.i32(i62 %add_ln21, i32 4, i32 7)" [digitrec_sw.cpp:22->digitrec_sw.cpp:36]   --->   Operation 117 'partselect' 'trunc_ln1' <Predicate = true> <Delay = 0.00>

State 4 <SV = 3> <Delay = 8.44>
ST_4 : Operation 118 [1/1] (0.00ns)   --->   "%zext_ln22 = zext i2 %trunc_ln21_2 to i4" [digitrec_sw.cpp:22->digitrec_sw.cpp:36]   --->   Operation 118 'zext' 'zext_ln22' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 119 [1/1] (0.00ns)   --->   "%zext_ln22_1 = zext i2 %trunc_ln21 to i4" [digitrec_sw.cpp:22->digitrec_sw.cpp:36]   --->   Operation 119 'zext' 'zext_ln22_1' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 120 [1/1] (0.00ns)   --->   "%trunc_ln21_3 = call i60 @_ssdm_op_BitConcatenate.i60.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2(i2 0, i2 %tmp_47, i2 0, i2 %tmp_48, i2 0, i2 %tmp_49, i2 0, i2 %tmp_50, i2 0, i2 %tmp_51, i2 0, i2 %tmp_52, i2 0, i2 %tmp_53, i2 0, i2 %tmp_54, i2 0, i2 %tmp_55, i2 0, i2 %tmp_56, i2 0, i2 %tmp_57, i2 0, i2 %tmp_58, i2 0, i2 %tmp_59, i2 0, i2 %tmp_60, i2 0, i2 %trunc_ln21_2)" [digitrec_sw.cpp:21->digitrec_sw.cpp:36]   --->   Operation 120 'bitconcatenate' 'trunc_ln21_3' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 121 [1/1] (0.00ns)   --->   "%trunc_ln21_4 = call i60 @_ssdm_op_BitConcatenate.i60.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2(i2 0, i2 %tmp_32, i2 0, i2 %tmp_33, i2 0, i2 %tmp_34, i2 0, i2 %tmp_35, i2 0, i2 %tmp_36, i2 0, i2 %tmp_37, i2 0, i2 %tmp_38, i2 0, i2 %tmp_39, i2 0, i2 %tmp_40, i2 0, i2 %tmp_41, i2 0, i2 %tmp_42, i2 0, i2 %tmp_43, i2 0, i2 %tmp_44, i2 0, i2 %tmp_45, i2 0, i2 %trunc_ln21)" [digitrec_sw.cpp:21->digitrec_sw.cpp:36]   --->   Operation 121 'bitconcatenate' 'trunc_ln21_4' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 122 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln22 = add i60 %trunc_ln21_3, %trunc_ln21_4" [digitrec_sw.cpp:22->digitrec_sw.cpp:36]   --->   Operation 122 'add' 'add_ln22' <Predicate = true> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.17> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 123 [1/1] (0.00ns)   --->   "%zext_ln22_3 = zext i59 %tmp_61 to i60" [digitrec_sw.cpp:22->digitrec_sw.cpp:36]   --->   Operation 123 'zext' 'zext_ln22_3' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 124 [1/1] (3.19ns) (root node of TernaryAdder)   --->   "%add_ln22_1 = add i60 %add_ln22, %zext_ln22_3" [digitrec_sw.cpp:22->digitrec_sw.cpp:36]   --->   Operation 124 'add' 'add_ln22_1' <Predicate = true> <Delay = 3.19> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.17> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 125 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln22_3 = add i4 %zext_ln22_1, %trunc_ln1" [digitrec_sw.cpp:22->digitrec_sw.cpp:36]   --->   Operation 125 'add' 'add_ln22_3' <Predicate = true> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.17> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 126 [1/1] (2.12ns) (root node of TernaryAdder)   --->   "%add_ln22_2 = add i4 %add_ln22_3, %zext_ln22" [digitrec_sw.cpp:22->digitrec_sw.cpp:36]   --->   Operation 126 'add' 'add_ln22_2' <Predicate = true> <Delay = 2.12> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.17> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 127 [1/1] (0.00ns)   --->   "%tmp_62 = call i4 @_ssdm_op_PartSelect.i4.i60.i32.i32(i60 %add_ln22_1, i32 56, i32 59)" [digitrec_sw.cpp:22->digitrec_sw.cpp:36]   --->   Operation 127 'partselect' 'tmp_62' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 128 [1/1] (0.00ns)   --->   "%tmp_63 = call i4 @_ssdm_op_PartSelect.i4.i60.i32.i32(i60 %add_ln22_1, i32 48, i32 51)" [digitrec_sw.cpp:22->digitrec_sw.cpp:36]   --->   Operation 128 'partselect' 'tmp_63' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 129 [1/1] (0.00ns)   --->   "%tmp_64 = call i4 @_ssdm_op_PartSelect.i4.i60.i32.i32(i60 %add_ln22_1, i32 40, i32 43)" [digitrec_sw.cpp:22->digitrec_sw.cpp:36]   --->   Operation 129 'partselect' 'tmp_64' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 130 [1/1] (0.00ns)   --->   "%tmp_65 = call i4 @_ssdm_op_PartSelect.i4.i60.i32.i32(i60 %add_ln22_1, i32 32, i32 35)" [digitrec_sw.cpp:22->digitrec_sw.cpp:36]   --->   Operation 130 'partselect' 'tmp_65' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 131 [1/1] (0.00ns)   --->   "%tmp_66 = call i4 @_ssdm_op_PartSelect.i4.i60.i32.i32(i60 %add_ln22_1, i32 24, i32 27)" [digitrec_sw.cpp:22->digitrec_sw.cpp:36]   --->   Operation 131 'partselect' 'tmp_66' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 132 [1/1] (0.00ns)   --->   "%tmp_67 = call i4 @_ssdm_op_PartSelect.i4.i60.i32.i32(i60 %add_ln22_1, i32 16, i32 19)" [digitrec_sw.cpp:22->digitrec_sw.cpp:36]   --->   Operation 132 'partselect' 'tmp_67' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 133 [1/1] (0.00ns)   --->   "%tmp_68 = call i4 @_ssdm_op_PartSelect.i4.i60.i32.i32(i60 %add_ln22_1, i32 8, i32 11)" [digitrec_sw.cpp:22->digitrec_sw.cpp:36]   --->   Operation 133 'partselect' 'tmp_68' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 134 [1/1] (0.00ns)   --->   "%trunc_ln22 = trunc i60 %add_ln22_1 to i4" [digitrec_sw.cpp:22->digitrec_sw.cpp:36]   --->   Operation 134 'trunc' 'trunc_ln22' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 135 [1/1] (0.00ns)   --->   "%x_assign_3 = call i60 @_ssdm_op_BitConcatenate.i60.i4.i4.i4.i4.i4.i4.i4.i4.i4.i4.i4.i4.i4.i4.i4(i4 %tmp_62, i4 0, i4 %tmp_63, i4 0, i4 %tmp_64, i4 0, i4 %tmp_65, i4 0, i4 %tmp_66, i4 0, i4 %tmp_67, i4 0, i4 %tmp_68, i4 0, i4 %trunc_ln22)" [digitrec_sw.cpp:22->digitrec_sw.cpp:36]   --->   Operation 135 'bitconcatenate' 'x_assign_3' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 136 [1/1] (0.00ns)   --->   "%zext_ln22_2 = zext i60 %x_assign_3 to i61" [digitrec_sw.cpp:22->digitrec_sw.cpp:36]   --->   Operation 136 'zext' 'zext_ln22_2' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 137 [1/1] (0.00ns)   --->   "%lshr_ln = call i52 @_ssdm_op_BitConcatenate.i52.i4.i4.i4.i4.i4.i4.i4.i4.i4.i4.i4.i4.i4(i4 %tmp_62, i4 0, i4 %tmp_63, i4 0, i4 %tmp_64, i4 0, i4 %tmp_65, i4 0, i4 %tmp_66, i4 0, i4 %tmp_67, i4 0, i4 %tmp_68)" [digitrec_sw.cpp:23->digitrec_sw.cpp:36]   --->   Operation 137 'bitconcatenate' 'lshr_ln' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 138 [1/1] (0.00ns)   --->   "%zext_ln23_1 = zext i52 %lshr_ln to i60" [digitrec_sw.cpp:23->digitrec_sw.cpp:36]   --->   Operation 138 'zext' 'zext_ln23_1' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 139 [1/1] (0.00ns)   --->   "%zext_ln23 = zext i52 %lshr_ln to i61" [digitrec_sw.cpp:23->digitrec_sw.cpp:36]   --->   Operation 139 'zext' 'zext_ln23' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 140 [1/1] (1.93ns)   --->   "%add_ln23 = add i60 %zext_ln23_1, %x_assign_3" [digitrec_sw.cpp:23->digitrec_sw.cpp:36]   --->   Operation 140 'add' 'add_ln23' <Predicate = true> <Delay = 1.93> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.00> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 141 [1/1] (1.93ns)   --->   "%add_ln23_1 = add i61 %zext_ln22_2, %zext_ln23" [digitrec_sw.cpp:23->digitrec_sw.cpp:36]   --->   Operation 141 'add' 'add_ln23_1' <Predicate = true> <Delay = 1.93> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.00> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 142 [1/1] (0.00ns)   --->   "%lshr_ln1 = call i45 @_ssdm_op_PartSelect.i45.i61.i32.i32(i61 %add_ln23_1, i32 16, i32 60)" [digitrec_sw.cpp:24->digitrec_sw.cpp:36]   --->   Operation 142 'partselect' 'lshr_ln1' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 143 [1/1] (0.00ns)   --->   "%zext_ln24 = zext i45 %lshr_ln1 to i61" [digitrec_sw.cpp:24->digitrec_sw.cpp:36]   --->   Operation 143 'zext' 'zext_ln24' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 144 [1/1] (0.00ns)   --->   "%trunc_ln26_1 = call i7 @_ssdm_op_PartSelect.i7.i60.i32.i32(i60 %add_ln23, i32 16, i32 22)" [digitrec_sw.cpp:26->digitrec_sw.cpp:36]   --->   Operation 144 'partselect' 'trunc_ln26_1' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 145 [1/1] (1.94ns)   --->   "%add_ln24 = add i61 %add_ln23_1, %zext_ln24" [digitrec_sw.cpp:24->digitrec_sw.cpp:36]   --->   Operation 145 'add' 'add_ln24' <Predicate = true> <Delay = 1.94> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.00> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 146 [1/1] (0.00ns)   --->   "%trunc_ln26_2 = call i7 @_ssdm_op_PartSelect.i7.i61.i32.i32(i61 %add_ln24, i32 32, i32 38)" [digitrec_sw.cpp:26->digitrec_sw.cpp:36]   --->   Operation 146 'partselect' 'trunc_ln26_2' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 147 [1/1] (1.37ns)   --->   "%add_ln26_2 = add i7 %trunc_ln26_1, %trunc_ln26_2" [digitrec_sw.cpp:26->digitrec_sw.cpp:36]   --->   Operation 147 'add' 'add_ln26_2' <Predicate = true> <Delay = 1.37> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.00> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 5 <SV = 4> <Delay = 3.75>
ST_5 : Operation 148 [1/1] (0.00ns)   --->   "%zext_ln26 = zext i4 %add_ln22_2 to i7" [digitrec_sw.cpp:26->digitrec_sw.cpp:36]   --->   Operation 148 'zext' 'zext_ln26' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 149 [1/1] (0.00ns)   --->   "%trunc_ln2 = call i7 @_ssdm_op_BitConcatenate.i7.i3.i4(i3 0, i4 %tmp_68)" [digitrec_sw.cpp:26->digitrec_sw.cpp:36]   --->   Operation 149 'bitconcatenate' 'trunc_ln2' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 150 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln26_1 = add i7 %trunc_ln2, %zext_ln26" [digitrec_sw.cpp:26->digitrec_sw.cpp:36]   --->   Operation 150 'add' 'add_ln26_1' <Predicate = true> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.17> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_5 : Operation 151 [1/1] (2.35ns) (root node of TernaryAdder)   --->   "%add_ln26 = add i7 %add_ln26_2, %add_ln26_1" [digitrec_sw.cpp:26->digitrec_sw.cpp:36]   --->   Operation 151 'add' 'add_ln26' <Predicate = true> <Delay = 2.35> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.17> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_5 : Operation 152 [1/1] (0.00ns)   --->   "%zext_ln26_1 = zext i7 %add_ln26 to i9" [digitrec_sw.cpp:26->digitrec_sw.cpp:36]   --->   Operation 152 'zext' 'zext_ln26_1' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 153 [1/1] (1.40ns)   --->   "%dist = add i9 %zext_ln26_1, %dists_0_0" [digitrec_sw.cpp:36]   --->   Operation 153 'add' 'dist' <Predicate = true> <Delay = 1.40> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.00> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 154 [1/1] (0.00ns)   --->   "br label %1" [digitrec_sw.cpp:33]   --->   Operation 154 'br' <Predicate = true> <Delay = 0.00>

State 6 <SV = 2> <Delay = 3.32>
ST_6 : Operation 155 [1/1] (0.00ns)   --->   "%max_dist_0 = phi i32 [ %select_ln45, %._crit_edge ], [ 0, %.preheader.preheader ]" [digitrec_sw.cpp:45]   --->   Operation 155 'phi' 'max_dist_0' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 156 [1/1] (0.00ns)   --->   "%max_dist_id_0 = phi i32 [ %select_ln45_1, %._crit_edge ], [ 4, %.preheader.preheader ]" [digitrec_sw.cpp:45]   --->   Operation 156 'phi' 'max_dist_id_0' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 157 [1/1] (0.00ns)   --->   "%max_dist_id = phi i2 [ %k, %._crit_edge ], [ 0, %.preheader.preheader ]"   --->   Operation 157 'phi' 'max_dist_id' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 158 [1/1] (0.00ns)   --->   "%zext_ln48 = zext i2 %max_dist_id to i32" [digitrec_sw.cpp:48]   --->   Operation 158 'zext' 'zext_ln48' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 159 [1/1] (0.64ns)   --->   "%icmp_ln43 = icmp eq i2 %max_dist_id, -1" [digitrec_sw.cpp:43]   --->   Operation 159 'icmp' 'icmp_ln43' <Predicate = true> <Delay = 0.64> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 160 [1/1] (0.00ns)   --->   "%empty_15 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 3, i64 3, i64 3)"   --->   Operation 160 'speclooptripcount' 'empty_15' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 161 [1/1] (1.00ns)   --->   "%k = add i2 %max_dist_id, 1" [digitrec_sw.cpp:43]   --->   Operation 161 'add' 'k' <Predicate = true> <Delay = 1.00> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.00> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 162 [1/1] (0.00ns)   --->   "br i1 %icmp_ln43, label %3, label %._crit_edge" [digitrec_sw.cpp:43]   --->   Operation 162 'br' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 163 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([14 x i8]* @p_str) nounwind" [digitrec_sw.cpp:44]   --->   Operation 163 'specloopname' <Predicate = (!icmp_ln43)> <Delay = 0.00>
ST_6 : Operation 164 [1/1] (1.14ns)   --->   "%max_dist = call i32 @_ssdm_op_Mux.ap_auto.3i32.i2(i32 %dists_0_read_1, i32 %dists_1_read_1, i32 %dists_2_read_1, i2 %max_dist_id)" [digitrec_sw.cpp:45]   --->   Operation 164 'mux' 'max_dist' <Predicate = (!icmp_ln43)> <Delay = 1.14> <Core = "MuxnS">   --->   Core 31 'MuxnS' <Latency = 0> <II = 1> <Delay = 1.26> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 165 [1/1] (1.54ns)   --->   "%icmp_ln45 = icmp sgt i32 %max_dist, %max_dist_0" [digitrec_sw.cpp:45]   --->   Operation 165 'icmp' 'icmp_ln45' <Predicate = (!icmp_ln43)> <Delay = 1.54> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 166 [1/1] (0.63ns)   --->   "%select_ln45 = select i1 %icmp_ln45, i32 %max_dist, i32 %max_dist_0" [digitrec_sw.cpp:45]   --->   Operation 166 'select' 'select_ln45' <Predicate = (!icmp_ln43)> <Delay = 0.63> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.63> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_6 : Operation 167 [1/1] (0.63ns)   --->   "%select_ln45_1 = select i1 %icmp_ln45, i32 %zext_ln48, i32 %max_dist_id_0" [digitrec_sw.cpp:45]   --->   Operation 167 'select' 'select_ln45_1' <Predicate = (!icmp_ln43)> <Delay = 0.63> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.63> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_6 : Operation 168 [1/1] (0.00ns)   --->   "br label %.preheader" [digitrec_sw.cpp:43]   --->   Operation 168 'br' <Predicate = (!icmp_ln43)> <Delay = 0.00>
ST_6 : Operation 169 [1/1] (1.54ns)   --->   "%icmp_ln53 = icmp slt i32 %zext_ln33, %max_dist_0" [digitrec_sw.cpp:53]   --->   Operation 169 'icmp' 'icmp_ln53' <Predicate = (icmp_ln43)> <Delay = 1.54> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 170 [1/1] (1.06ns)   --->   "br i1 %icmp_ln53, label %branch0, label %._crit_edge1" [digitrec_sw.cpp:53]   --->   Operation 170 'br' <Predicate = (icmp_ln43)> <Delay = 1.06>
ST_6 : Operation 171 [1/1] (0.00ns)   --->   "%trunc_ln55 = trunc i32 %max_dist_id_0 to i2" [digitrec_sw.cpp:55]   --->   Operation 171 'trunc' 'trunc_ln55' <Predicate = (icmp_ln43 & icmp_ln53)> <Delay = 0.00>
ST_6 : Operation 172 [1/1] (1.26ns)   --->   "%write_flag = call i1 @_ssdm_op_Mux.ap_auto.4i1.i2(i1 true, i1 false, i1 false, i1 false, i2 %trunc_ln55)" [digitrec_sw.cpp:55]   --->   Operation 172 'mux' 'write_flag' <Predicate = (icmp_ln43 & icmp_ln53)> <Delay = 1.26> <Core = "MuxnS">   --->   Core 31 'MuxnS' <Latency = 0> <II = 1> <Delay = 1.26> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 173 [1/1] (1.26ns)   --->   "%write_flag7 = call i1 @_ssdm_op_Mux.ap_auto.4i1.i2(i1 false, i1 false, i1 true, i1 true, i2 %trunc_ln55)" [digitrec_sw.cpp:55]   --->   Operation 173 'mux' 'write_flag7' <Predicate = (icmp_ln43 & icmp_ln53)> <Delay = 1.26> <Core = "MuxnS">   --->   Core 31 'MuxnS' <Latency = 0> <II = 1> <Delay = 1.26> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 174 [1/1] (1.26ns)   --->   "%write_flag4 = call i1 @_ssdm_op_Mux.ap_auto.4i1.i2(i1 false, i1 true, i1 false, i1 false, i2 %trunc_ln55)" [digitrec_sw.cpp:55]   --->   Operation 174 'mux' 'write_flag4' <Predicate = (icmp_ln43 & icmp_ln53)> <Delay = 1.26> <Core = "MuxnS">   --->   Core 31 'MuxnS' <Latency = 0> <II = 1> <Delay = 1.26> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 175 [1/1] (1.06ns)   --->   "switch i2 %trunc_ln55, label %branch5 [
    i2 0, label %._crit_edge1
    i2 1, label %branch4
  ]" [digitrec_sw.cpp:56]   --->   Operation 175 'switch' <Predicate = (icmp_ln43 & icmp_ln53)> <Delay = 1.06>
ST_6 : Operation 176 [1/1] (1.06ns)   --->   "br label %._crit_edge1" [digitrec_sw.cpp:56]   --->   Operation 176 'br' <Predicate = (icmp_ln43 & icmp_ln53 & trunc_ln55 == 1)> <Delay = 1.06>
ST_6 : Operation 177 [1/1] (1.06ns)   --->   "br label %._crit_edge1" [digitrec_sw.cpp:56]   --->   Operation 177 'br' <Predicate = (icmp_ln43 & icmp_ln53 & trunc_ln55 != 0 & trunc_ln55 != 1)> <Delay = 1.06>

State 7 <SV = 3> <Delay = 0.63>
ST_7 : Operation 178 [1/1] (0.00ns)   --->   "%write_flag4_1 = phi i1 [ %write_flag4, %branch5 ], [ %write_flag4, %branch4 ], [ %write_flag4, %branch0 ], [ false, %3 ]" [digitrec_sw.cpp:55]   --->   Operation 178 'phi' 'write_flag4_1' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 179 [1/1] (0.00ns)   --->   "%write_flag7_1 = phi i1 [ %write_flag7, %branch5 ], [ %write_flag7, %branch4 ], [ %write_flag7, %branch0 ], [ false, %3 ]" [digitrec_sw.cpp:55]   --->   Operation 179 'phi' 'write_flag7_1' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 180 [1/1] (0.00ns)   --->   "%write_flag_1 = phi i1 [ %write_flag, %branch5 ], [ %write_flag, %branch4 ], [ %write_flag, %branch0 ], [ false, %3 ]" [digitrec_sw.cpp:55]   --->   Operation 180 'phi' 'write_flag_1' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 181 [1/1] (0.00ns)   --->   "%phi_ln59 = phi i32 [ %label_cast, %branch5 ], [ %labels_2_read_1, %branch4 ], [ %labels_2_read_1, %branch0 ], [ %labels_2_read_1, %3 ]" [digitrec_sw.cpp:59]   --->   Operation 181 'phi' 'phi_ln59' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 182 [1/1] (0.00ns)   --->   "%phi_ln59_1 = phi i32 [ %labels_1_read_1, %branch5 ], [ %label_cast, %branch4 ], [ %labels_1_read_1, %branch0 ], [ %labels_1_read_1, %3 ]" [digitrec_sw.cpp:59]   --->   Operation 182 'phi' 'phi_ln59_1' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 183 [1/1] (0.00ns)   --->   "%phi_ln59_2 = phi i32 [ %labels_0_read_1, %branch5 ], [ %labels_0_read_1, %branch4 ], [ %label_cast, %branch0 ], [ %labels_0_read_1, %3 ]" [digitrec_sw.cpp:59]   --->   Operation 183 'phi' 'phi_ln59_2' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 184 [1/1] (0.63ns)   --->   "%select_ln59 = select i1 %write_flag_1, i32 %zext_ln33, i32 %dists_0_read_3" [digitrec_sw.cpp:59]   --->   Operation 184 'select' 'select_ln59' <Predicate = true> <Delay = 0.63> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.63> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_7 : Operation 185 [1/1] (0.63ns)   --->   "%select_ln59_1 = select i1 %write_flag4_1, i32 %zext_ln33, i32 %dists_1_read_3" [digitrec_sw.cpp:59]   --->   Operation 185 'select' 'select_ln59_1' <Predicate = true> <Delay = 0.63> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.63> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_7 : Operation 186 [1/1] (0.63ns)   --->   "%select_ln59_2 = select i1 %write_flag7_1, i32 %zext_ln33, i32 %dists_2_read_3" [digitrec_sw.cpp:59]   --->   Operation 186 'select' 'select_ln59_2' <Predicate = true> <Delay = 0.63> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.63> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_7 : Operation 187 [1/1] (0.00ns)   --->   "%mrv = insertvalue { i32, i32, i32, i32, i32, i32 } undef, i32 %phi_ln59_2, 0" [digitrec_sw.cpp:59]   --->   Operation 187 'insertvalue' 'mrv' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 188 [1/1] (0.00ns)   --->   "%mrv_s = insertvalue { i32, i32, i32, i32, i32, i32 } %mrv, i32 %phi_ln59_1, 1" [digitrec_sw.cpp:59]   --->   Operation 188 'insertvalue' 'mrv_s' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 189 [1/1] (0.00ns)   --->   "%mrv_1 = insertvalue { i32, i32, i32, i32, i32, i32 } %mrv_s, i32 %phi_ln59, 2" [digitrec_sw.cpp:59]   --->   Operation 189 'insertvalue' 'mrv_1' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 190 [1/1] (0.00ns)   --->   "%mrv_3 = insertvalue { i32, i32, i32, i32, i32, i32 } %mrv_1, i32 %select_ln59, 3" [digitrec_sw.cpp:59]   --->   Operation 190 'insertvalue' 'mrv_3' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 191 [1/1] (0.00ns)   --->   "%mrv_4 = insertvalue { i32, i32, i32, i32, i32, i32 } %mrv_3, i32 %select_ln59_1, 4" [digitrec_sw.cpp:59]   --->   Operation 191 'insertvalue' 'mrv_4' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 192 [1/1] (0.00ns)   --->   "%mrv_5 = insertvalue { i32, i32, i32, i32, i32, i32 } %mrv_4, i32 %select_ln59_2, 5" [digitrec_sw.cpp:59]   --->   Operation 192 'insertvalue' 'mrv_5' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 193 [1/1] (0.00ns)   --->   "ret { i32, i32, i32, i32, i32, i32 } %mrv_5" [digitrec_sw.cpp:59]   --->   Operation 193 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 1.06ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('dist') with incoming values : ('dist', digitrec_sw.cpp:36) [30]  (1.06 ns)

 <State 2>: 4.17ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', digitrec_sw.cpp:33) [31]  (0 ns)
	'add' operation ('add_ln35_1', digitrec_sw.cpp:35) [43]  (1.51 ns)
	'getelementptr' operation ('train_inst_addr', digitrec_sw.cpp:35) [45]  (0 ns)
	'load' operation ('train_inst_load', digitrec_sw.cpp:35) on array 'train_inst' [46]  (2.66 ns)

 <State 3>: 7.3ns
The critical path consists of the following:
	'load' operation ('test_inst_load', digitrec_sw.cpp:35) on array 'test_inst' [42]  (2.66 ns)
	'xor' operation ('diff', digitrec_sw.cpp:35) [47]  (0.688 ns)
	'sub' operation ('x', digitrec_sw.cpp:20->digitrec_sw.cpp:36) [82]  (1.99 ns)
	'add' operation ('add_ln21', digitrec_sw.cpp:21->digitrec_sw.cpp:36) [123]  (1.96 ns)

 <State 4>: 8.45ns
The critical path consists of the following:
	'add' operation ('add_ln22', digitrec_sw.cpp:22->digitrec_sw.cpp:36) [125]  (0 ns)
	'add' operation ('add_ln22_1', digitrec_sw.cpp:22->digitrec_sw.cpp:36) [129]  (3.19 ns)
	'add' operation ('x', digitrec_sw.cpp:23->digitrec_sw.cpp:36) [148]  (1.94 ns)
	'add' operation ('x', digitrec_sw.cpp:24->digitrec_sw.cpp:36) [152]  (1.95 ns)
	'add' operation ('add_ln26_2', digitrec_sw.cpp:26->digitrec_sw.cpp:36) [155]  (1.37 ns)

 <State 5>: 3.76ns
The critical path consists of the following:
	'add' operation ('add_ln26_1', digitrec_sw.cpp:26->digitrec_sw.cpp:36) [154]  (0 ns)
	'add' operation ('add_ln26', digitrec_sw.cpp:26->digitrec_sw.cpp:36) [156]  (2.35 ns)
	'add' operation ('dist', digitrec_sw.cpp:36) [158]  (1.4 ns)

 <State 6>: 3.32ns
The critical path consists of the following:
	'phi' operation ('k') with incoming values : ('k', digitrec_sw.cpp:43) [166]  (0 ns)
	'mux' operation ('max_dist', digitrec_sw.cpp:45) [174]  (1.14 ns)
	'icmp' operation ('icmp_ln45', digitrec_sw.cpp:45) [175]  (1.55 ns)
	'select' operation ('select_ln45', digitrec_sw.cpp:45) [176]  (0.631 ns)

 <State 7>: 0.631ns
The critical path consists of the following:
	'phi' operation ('write_flag4_1', digitrec_sw.cpp:55) with incoming values : ('write_flag4', digitrec_sw.cpp:55) [193]  (0 ns)
	'select' operation ('dists[1]', digitrec_sw.cpp:59) [200]  (0.631 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
