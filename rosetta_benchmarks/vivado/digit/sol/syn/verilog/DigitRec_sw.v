// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="DigitRec_sw,hls_ip_2019_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7k160t-fbg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.448786,HLS_SYN_LAT=864088001,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=1385,HLS_SYN_LUT=1760,HLS_VERSION=2019_1}" *)

module DigitRec_sw (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        training_set_address0,
        training_set_ce0,
        training_set_q0,
        test_set_address0,
        test_set_ce0,
        test_set_q0,
        results_address0,
        results_ce0,
        results_we0,
        results_d0
);

parameter    ap_ST_fsm_state1 = 10'd1;
parameter    ap_ST_fsm_state2 = 10'd2;
parameter    ap_ST_fsm_state3 = 10'd4;
parameter    ap_ST_fsm_state4 = 10'd8;
parameter    ap_ST_fsm_state5 = 10'd16;
parameter    ap_ST_fsm_state6 = 10'd32;
parameter    ap_ST_fsm_state7 = 10'd64;
parameter    ap_ST_fsm_state8 = 10'd128;
parameter    ap_ST_fsm_state9 = 10'd256;
parameter    ap_ST_fsm_state10 = 10'd512;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [16:0] training_set_address0;
output   training_set_ce0;
input  [63:0] training_set_q0;
output  [12:0] test_set_address0;
output   test_set_ce0;
input  [63:0] test_set_q0;
output  [10:0] results_address0;
output   results_ce0;
output   results_we0;
output  [7:0] results_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg results_ce0;
reg results_we0;

(* fsm_encoding = "none" *) reg   [9:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [10:0] t_fu_489_p2;
reg   [10:0] t_reg_765;
wire    ap_CS_fsm_state2;
wire   [1:0] i_fu_501_p2;
wire    ap_CS_fsm_state3;
wire   [31:0] dists_0_2_fu_507_p6;
wire   [0:0] icmp_ln99_fu_495_p2;
wire   [31:0] dists_1_2_fu_521_p6;
wire   [31:0] dists_2_2_fu_535_p6;
wire   [31:0] labels_0_2_fu_549_p6;
wire   [31:0] labels_1_2_fu_563_p6;
wire   [31:0] labels_2_2_fu_577_p6;
wire   [12:0] shl_ln_fu_591_p3;
reg   [12:0] shl_ln_reg_808;
wire   [14:0] i_1_fu_605_p2;
reg   [14:0] i_1_reg_816;
wire    ap_CS_fsm_state4;
wire   [16:0] shl_ln108_1_fu_611_p3;
reg   [16:0] shl_ln108_1_reg_821;
wire   [0:0] icmp_ln107_fu_599_p2;
wire   [29:0] add_ln108_fu_620_p2;
reg   [29:0] add_ln108_reg_826;
reg   [3:0] trunc_ln_reg_831;
wire    ap_CS_fsm_state5;
wire    grp_update_knn_fu_454_ap_ready;
wire    grp_update_knn_fu_454_ap_done;
wire   [3:0] add_ln67_fu_661_p2;
wire    ap_CS_fsm_state6;
wire   [1:0] i_2_fu_684_p2;
reg   [1:0] i_2_reg_877;
wire    ap_CS_fsm_state7;
reg   [3:0] votes_addr_1_reg_882;
wire   [0:0] icmp_ln69_fu_678_p2;
wire   [3:0] i_3_fu_720_p2;
reg   [3:0] i_3_reg_890;
wire    ap_CS_fsm_state9;
wire   [0:0] icmp_ln72_fu_714_p2;
wire   [7:0] select_ln74_fu_746_p3;
wire    ap_CS_fsm_state10;
wire   [31:0] select_ln74_1_fu_754_p3;
reg   [3:0] votes_address0;
reg    votes_ce0;
reg    votes_we0;
reg   [31:0] votes_d0;
wire   [31:0] votes_q0;
wire    grp_update_knn_fu_454_ap_start;
wire    grp_update_knn_fu_454_ap_idle;
wire   [16:0] grp_update_knn_fu_454_train_inst_address0;
wire    grp_update_knn_fu_454_train_inst_ce0;
wire   [12:0] grp_update_knn_fu_454_test_inst_address0;
wire    grp_update_knn_fu_454_test_inst_ce0;
wire   [31:0] grp_update_knn_fu_454_ap_return_0;
wire   [31:0] grp_update_knn_fu_454_ap_return_1;
wire   [31:0] grp_update_knn_fu_454_ap_return_2;
wire   [31:0] grp_update_knn_fu_454_ap_return_3;
wire   [31:0] grp_update_knn_fu_454_ap_return_4;
wire   [31:0] grp_update_knn_fu_454_ap_return_5;
reg   [31:0] labels_2_read_assig_reg_301;
reg   [31:0] labels_2_0_reg_140;
reg   [31:0] labels_1_read_assig_reg_313;
reg   [31:0] labels_1_0_reg_152;
reg   [31:0] labels_0_read_assig_reg_325;
reg   [31:0] labels_0_0_reg_164;
reg   [31:0] dists_2_3_reg_337;
reg   [31:0] dists_2_0_reg_176;
reg   [31:0] dists_1_3_reg_349;
reg   [31:0] dists_1_0_reg_188;
reg   [31:0] dists_0_3_reg_361;
reg   [31:0] dists_0_0_reg_200;
reg   [10:0] t_0_reg_212;
reg   [31:0] labels_2_112_reg_224;
wire   [0:0] icmp_ln96_fu_483_p2;
reg   [31:0] labels_1_111_reg_235;
reg   [31:0] labels_0_110_reg_246;
reg   [31:0] dists_2_1_reg_257;
reg   [31:0] dists_1_1_reg_268;
reg   [31:0] dists_0_1_reg_279;
reg   [1:0] i_0_reg_290;
reg   [14:0] i1_0_reg_373;
reg   [29:0] phi_mul_reg_384;
reg   [3:0] phi_ln67_i_reg_395;
wire   [0:0] icmp_ln67_fu_672_p2;
reg   [1:0] i_0_i_reg_406;
wire    ap_CS_fsm_state8;
reg   [7:0] max_vote_reg_417;
reg   [31:0] max_vote_0_i_reg_430;
reg   [3:0] i1_0_i_reg_442;
reg    grp_update_knn_fu_454_ap_start_reg;
wire   [63:0] zext_ln67_fu_667_p1;
wire  signed [63:0] sext_ln70_fu_702_p1;
wire   [63:0] zext_ln74_fu_726_p1;
wire   [63:0] zext_ln112_fu_731_p1;
wire   [31:0] add_ln70_fu_707_p2;
wire   [31:0] tmp_1_fu_690_p5;
wire   [0:0] icmp_ln74_fu_736_p2;
wire   [7:0] max_label_fu_742_p1;
reg   [9:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 10'd1;
#0 grp_update_knn_fu_454_ap_start_reg = 1'b0;
end

DigitRec_sw_votes #(
    .DataWidth( 32 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
votes_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(votes_address0),
    .ce0(votes_ce0),
    .we0(votes_we0),
    .d0(votes_d0),
    .q0(votes_q0)
);

update_knn grp_update_knn_fu_454(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_update_knn_fu_454_ap_start),
    .ap_done(grp_update_knn_fu_454_ap_done),
    .ap_idle(grp_update_knn_fu_454_ap_idle),
    .ap_ready(grp_update_knn_fu_454_ap_ready),
    .train_inst_address0(grp_update_knn_fu_454_train_inst_address0),
    .train_inst_ce0(grp_update_knn_fu_454_train_inst_ce0),
    .train_inst_q0(training_set_q0),
    .train_inst_offset(shl_ln108_1_reg_821),
    .test_inst_address0(grp_update_knn_fu_454_test_inst_address0),
    .test_inst_ce0(grp_update_knn_fu_454_test_inst_ce0),
    .test_inst_q0(test_set_q0),
    .test_inst_offset(shl_ln_reg_808),
    .dists_0_read_5(dists_0_3_reg_361),
    .dists_0_read(dists_0_3_reg_361),
    .dists_1_read_5(dists_1_3_reg_349),
    .dists_1_read(dists_1_3_reg_349),
    .dists_2_read_5(dists_2_3_reg_337),
    .dists_2_read(dists_2_3_reg_337),
    .labels_0_read(labels_0_read_assig_reg_325),
    .labels_1_read(labels_1_read_assig_reg_313),
    .labels_2_read(labels_2_read_assig_reg_301),
    .label_r(trunc_ln_reg_831),
    .ap_return_0(grp_update_knn_fu_454_ap_return_0),
    .ap_return_1(grp_update_knn_fu_454_ap_return_1),
    .ap_return_2(grp_update_knn_fu_454_ap_return_2),
    .ap_return_3(grp_update_knn_fu_454_ap_return_3),
    .ap_return_4(grp_update_knn_fu_454_ap_return_4),
    .ap_return_5(grp_update_knn_fu_454_ap_return_5)
);

DigitRec_sw_mux_42_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
DigitRec_sw_mux_42_32_1_1_U23(
    .din0(32'd256),
    .din1(dists_0_1_reg_279),
    .din2(dists_0_1_reg_279),
    .din3(dists_0_1_reg_279),
    .din4(i_0_reg_290),
    .dout(dists_0_2_fu_507_p6)
);

DigitRec_sw_mux_42_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
DigitRec_sw_mux_42_32_1_1_U24(
    .din0(dists_1_1_reg_268),
    .din1(32'd256),
    .din2(dists_1_1_reg_268),
    .din3(dists_1_1_reg_268),
    .din4(i_0_reg_290),
    .dout(dists_1_2_fu_521_p6)
);

DigitRec_sw_mux_42_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
DigitRec_sw_mux_42_32_1_1_U25(
    .din0(dists_2_1_reg_257),
    .din1(dists_2_1_reg_257),
    .din2(32'd256),
    .din3(32'd256),
    .din4(i_0_reg_290),
    .dout(dists_2_2_fu_535_p6)
);

DigitRec_sw_mux_42_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
DigitRec_sw_mux_42_32_1_1_U26(
    .din0(32'd0),
    .din1(labels_0_110_reg_246),
    .din2(labels_0_110_reg_246),
    .din3(labels_0_110_reg_246),
    .din4(i_0_reg_290),
    .dout(labels_0_2_fu_549_p6)
);

DigitRec_sw_mux_42_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
DigitRec_sw_mux_42_32_1_1_U27(
    .din0(labels_1_111_reg_235),
    .din1(32'd0),
    .din2(labels_1_111_reg_235),
    .din3(labels_1_111_reg_235),
    .din4(i_0_reg_290),
    .dout(labels_1_2_fu_563_p6)
);

DigitRec_sw_mux_42_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
DigitRec_sw_mux_42_32_1_1_U28(
    .din0(labels_2_112_reg_224),
    .din1(labels_2_112_reg_224),
    .din2(32'd0),
    .din3(32'd0),
    .din4(i_0_reg_290),
    .dout(labels_2_2_fu_577_p6)
);

DigitRec_sw_mux_32_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
DigitRec_sw_mux_32_32_1_1_U29(
    .din0(labels_0_read_assig_reg_325),
    .din1(labels_1_read_assig_reg_313),
    .din2(labels_2_read_assig_reg_301),
    .din3(i_0_i_reg_406),
    .dout(tmp_1_fu_690_p5)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_update_knn_fu_454_ap_start_reg <= 1'b0;
    end else begin
        if (((icmp_ln107_fu_599_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
            grp_update_knn_fu_454_ap_start_reg <= 1'b1;
        end else if ((grp_update_knn_fu_454_ap_ready == 1'b1)) begin
            grp_update_knn_fu_454_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln99_fu_495_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        dists_0_1_reg_279 <= dists_0_2_fu_507_p6;
    end else if (((icmp_ln96_fu_483_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        dists_0_1_reg_279 <= dists_0_0_reg_200;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (grp_update_knn_fu_454_ap_done == 1'b1))) begin
        dists_0_3_reg_361 <= grp_update_knn_fu_454_ap_return_3;
    end else if (((icmp_ln99_fu_495_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        dists_0_3_reg_361 <= dists_0_1_reg_279;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln99_fu_495_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        dists_1_1_reg_268 <= dists_1_2_fu_521_p6;
    end else if (((icmp_ln96_fu_483_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        dists_1_1_reg_268 <= dists_1_0_reg_188;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (grp_update_knn_fu_454_ap_done == 1'b1))) begin
        dists_1_3_reg_349 <= grp_update_knn_fu_454_ap_return_4;
    end else if (((icmp_ln99_fu_495_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        dists_1_3_reg_349 <= dists_1_1_reg_268;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln99_fu_495_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        dists_2_1_reg_257 <= dists_2_2_fu_535_p6;
    end else if (((icmp_ln96_fu_483_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        dists_2_1_reg_257 <= dists_2_0_reg_176;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (grp_update_knn_fu_454_ap_done == 1'b1))) begin
        dists_2_3_reg_337 <= grp_update_knn_fu_454_ap_return_5;
    end else if (((icmp_ln99_fu_495_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        dists_2_3_reg_337 <= dists_2_1_reg_257;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln69_fu_678_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state7))) begin
        i1_0_i_reg_442 <= 4'd0;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        i1_0_i_reg_442 <= i_3_reg_890;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (grp_update_knn_fu_454_ap_done == 1'b1))) begin
        i1_0_reg_373 <= i_1_reg_816;
    end else if (((icmp_ln99_fu_495_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        i1_0_reg_373 <= 15'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln67_fu_672_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
        i_0_i_reg_406 <= 2'd0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        i_0_i_reg_406 <= i_2_reg_877;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln99_fu_495_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        i_0_reg_290 <= i_fu_501_p2;
    end else if (((icmp_ln96_fu_483_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        i_0_reg_290 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln99_fu_495_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        labels_0_110_reg_246 <= labels_0_2_fu_549_p6;
    end else if (((icmp_ln96_fu_483_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        labels_0_110_reg_246 <= labels_0_0_reg_164;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (grp_update_knn_fu_454_ap_done == 1'b1))) begin
        labels_0_read_assig_reg_325 <= grp_update_knn_fu_454_ap_return_0;
    end else if (((icmp_ln99_fu_495_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        labels_0_read_assig_reg_325 <= labels_0_110_reg_246;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln99_fu_495_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        labels_1_111_reg_235 <= labels_1_2_fu_563_p6;
    end else if (((icmp_ln96_fu_483_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        labels_1_111_reg_235 <= labels_1_0_reg_152;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (grp_update_knn_fu_454_ap_done == 1'b1))) begin
        labels_1_read_assig_reg_313 <= grp_update_knn_fu_454_ap_return_1;
    end else if (((icmp_ln99_fu_495_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        labels_1_read_assig_reg_313 <= labels_1_111_reg_235;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln99_fu_495_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        labels_2_112_reg_224 <= labels_2_2_fu_577_p6;
    end else if (((icmp_ln96_fu_483_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        labels_2_112_reg_224 <= labels_2_0_reg_140;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (grp_update_knn_fu_454_ap_done == 1'b1))) begin
        labels_2_read_assig_reg_301 <= grp_update_knn_fu_454_ap_return_2;
    end else if (((icmp_ln99_fu_495_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        labels_2_read_assig_reg_301 <= labels_2_112_reg_224;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln69_fu_678_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state7))) begin
        max_vote_0_i_reg_430 <= 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        max_vote_0_i_reg_430 <= select_ln74_1_fu_754_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln69_fu_678_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state7))) begin
        max_vote_reg_417 <= 8'd0;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        max_vote_reg_417 <= select_ln74_fu_746_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln107_fu_599_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        phi_ln67_i_reg_395 <= 4'd0;
    end else if (((icmp_ln67_fu_672_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
        phi_ln67_i_reg_395 <= add_ln67_fu_661_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (grp_update_knn_fu_454_ap_done == 1'b1))) begin
        phi_mul_reg_384 <= add_ln108_reg_826;
    end else if (((icmp_ln99_fu_495_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        phi_mul_reg_384 <= 30'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln72_fu_714_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state9))) begin
        t_0_reg_212 <= t_reg_765;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        t_0_reg_212 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln107_fu_599_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        add_ln108_reg_826 <= add_ln108_fu_620_p2;
        shl_ln108_1_reg_821[16 : 2] <= shl_ln108_1_fu_611_p3[16 : 2];
        trunc_ln_reg_831 <= {{phi_mul_reg_384[29:26]}};
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln72_fu_714_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state9))) begin
        dists_0_0_reg_200 <= dists_0_3_reg_361;
        dists_1_0_reg_188 <= dists_1_3_reg_349;
        dists_2_0_reg_176 <= dists_2_3_reg_337;
        labels_0_0_reg_164 <= labels_0_read_assig_reg_325;
        labels_1_0_reg_152 <= labels_1_read_assig_reg_313;
        labels_2_0_reg_140 <= labels_2_read_assig_reg_301;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        i_1_reg_816 <= i_1_fu_605_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        i_2_reg_877 <= i_2_fu_684_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        i_3_reg_890 <= i_3_fu_720_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln99_fu_495_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        shl_ln_reg_808[12 : 2] <= shl_ln_fu_591_p3[12 : 2];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        t_reg_765 <= t_fu_489_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln69_fu_678_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7))) begin
        votes_addr_1_reg_882 <= sext_ln70_fu_702_p1;
    end
end

always @ (*) begin
    if (((icmp_ln96_fu_483_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln96_fu_483_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        results_ce0 = 1'b1;
    end else begin
        results_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln72_fu_714_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state9))) begin
        results_we0 = 1'b1;
    end else begin
        results_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        votes_address0 = zext_ln74_fu_726_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        votes_address0 = votes_addr_1_reg_882;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        votes_address0 = sext_ln70_fu_702_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        votes_address0 = zext_ln67_fu_667_p1;
    end else begin
        votes_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6))) begin
        votes_ce0 = 1'b1;
    end else begin
        votes_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        votes_d0 = add_ln70_fu_707_p2;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        votes_d0 = 32'd0;
    end else begin
        votes_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state6))) begin
        votes_we0 = 1'b1;
    end else begin
        votes_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln96_fu_483_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((icmp_ln99_fu_495_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((icmp_ln107_fu_599_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state5 : begin
            if (((1'b1 == ap_CS_fsm_state5) & (grp_update_knn_fu_454_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state6 : begin
            if (((icmp_ln67_fu_672_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state7 : begin
            if (((icmp_ln69_fu_678_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state7))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state9 : begin
            if (((icmp_ln72_fu_714_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state9))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln108_fu_620_p2 = (phi_mul_reg_384 + 30'd37283);

assign add_ln67_fu_661_p2 = (phi_ln67_i_reg_395 + 4'd1);

assign add_ln70_fu_707_p2 = (votes_q0 + 32'd1);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign grp_update_knn_fu_454_ap_start = grp_update_knn_fu_454_ap_start_reg;

assign i_1_fu_605_p2 = (i1_0_reg_373 + 15'd1);

assign i_2_fu_684_p2 = (i_0_i_reg_406 + 2'd1);

assign i_3_fu_720_p2 = (i1_0_i_reg_442 + 4'd1);

assign i_fu_501_p2 = (i_0_reg_290 + 2'd1);

assign icmp_ln107_fu_599_p2 = ((i1_0_reg_373 == 15'd18000) ? 1'b1 : 1'b0);

assign icmp_ln67_fu_672_p2 = ((phi_ln67_i_reg_395 == 4'd9) ? 1'b1 : 1'b0);

assign icmp_ln69_fu_678_p2 = ((i_0_i_reg_406 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln72_fu_714_p2 = ((i1_0_i_reg_442 == 4'd10) ? 1'b1 : 1'b0);

assign icmp_ln74_fu_736_p2 = (($signed(votes_q0) > $signed(max_vote_0_i_reg_430)) ? 1'b1 : 1'b0);

assign icmp_ln96_fu_483_p2 = ((t_0_reg_212 == 11'd2000) ? 1'b1 : 1'b0);

assign icmp_ln99_fu_495_p2 = ((i_0_reg_290 == 2'd3) ? 1'b1 : 1'b0);

assign max_label_fu_742_p1 = i1_0_i_reg_442;

assign results_address0 = zext_ln112_fu_731_p1;

assign results_d0 = max_vote_reg_417;

assign select_ln74_1_fu_754_p3 = ((icmp_ln74_fu_736_p2[0:0] === 1'b1) ? votes_q0 : max_vote_0_i_reg_430);

assign select_ln74_fu_746_p3 = ((icmp_ln74_fu_736_p2[0:0] === 1'b1) ? max_label_fu_742_p1 : max_vote_reg_417);

assign sext_ln70_fu_702_p1 = $signed(tmp_1_fu_690_p5);

assign shl_ln108_1_fu_611_p3 = {{i1_0_reg_373}, {2'd0}};

assign shl_ln_fu_591_p3 = {{t_0_reg_212}, {2'd0}};

assign t_fu_489_p2 = (t_0_reg_212 + 11'd1);

assign test_set_address0 = grp_update_knn_fu_454_test_inst_address0;

assign test_set_ce0 = grp_update_knn_fu_454_test_inst_ce0;

assign training_set_address0 = grp_update_knn_fu_454_train_inst_address0;

assign training_set_ce0 = grp_update_knn_fu_454_train_inst_ce0;

assign zext_ln112_fu_731_p1 = t_0_reg_212;

assign zext_ln67_fu_667_p1 = phi_ln67_i_reg_395;

assign zext_ln74_fu_726_p1 = i1_0_i_reg_442;

always @ (posedge ap_clk) begin
    shl_ln_reg_808[1:0] <= 2'b00;
    shl_ln108_1_reg_821[1:0] <= 2'b00;
end

endmodule //DigitRec_sw
