// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _imageScaler_HH_
#define _imageScaler_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "face_detect_sw_sdiv_27ns_32ns_32_31_seq_1.h"
#include "face_detect_sw_sdiv_26ns_32ns_32_30_seq_1.h"

namespace ap_rtl {

struct imageScaler : public sc_module {
    // Port declarations 15
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<17> > Data_address0;
    sc_out< sc_logic > Data_ce0;
    sc_in< sc_lv<8> > Data_q0;
    sc_in< sc_lv<32> > dest_height;
    sc_in< sc_lv<32> > dest_width;
    sc_out< sc_lv<17> > IMG1_data_address0;
    sc_out< sc_logic > IMG1_data_ce0;
    sc_out< sc_logic > IMG1_data_we0;
    sc_out< sc_lv<8> > IMG1_data_d0;
    sc_signal< sc_logic > ap_var_for_const0;


    // Module declarations
    imageScaler(sc_module_name name);
    SC_HAS_PROCESS(imageScaler);

    ~imageScaler();

    sc_trace_file* mVcdFile;

    face_detect_sw_sdiv_27ns_32ns_32_31_seq_1<1,31,27,32,32>* face_detect_sw_sdiv_27ns_32ns_32_31_seq_1_U1;
    face_detect_sw_sdiv_26ns_32ns_32_30_seq_1<1,30,26,32,32>* face_detect_sw_sdiv_26ns_32ns_32_30_seq_1_U2;
    sc_signal< sc_lv<34> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<32> > x_ratio_fu_167_p2;
    sc_signal< sc_lv<32> > x_ratio_reg_357;
    sc_signal< sc_logic > ap_CS_fsm_state31;
    sc_signal< sc_lv<32> > y_ratio_fu_173_p2;
    sc_signal< sc_lv<32> > y_ratio_reg_362;
    sc_signal< sc_lv<32> > add_ln400_fu_179_p2;
    sc_signal< sc_lv<32> > add_ln400_reg_367;
    sc_signal< sc_logic > ap_CS_fsm_state32;
    sc_signal< sc_lv<8> > i_fu_194_p2;
    sc_signal< sc_lv<8> > i_reg_375;
    sc_signal< sc_lv<1> > icmp_ln405_fu_200_p2;
    sc_signal< sc_lv<1> > icmp_ln405_reg_380;
    sc_signal< sc_lv<1> > icmp_ln400_fu_188_p2;
    sc_signal< sc_lv<18> > add_ln407_fu_241_p2;
    sc_signal< sc_lv<18> > add_ln407_reg_385;
    sc_signal< sc_lv<17> > add_ln407_1_fu_271_p2;
    sc_signal< sc_lv<17> > add_ln407_1_reg_390;
    sc_signal< sc_lv<9> > j_fu_287_p2;
    sc_signal< sc_lv<9> > j_reg_398;
    sc_signal< sc_logic > ap_CS_fsm_state33;
    sc_signal< sc_lv<1> > and_ln405_fu_298_p2;
    sc_signal< sc_lv<1> > and_ln405_reg_403;
    sc_signal< sc_lv<1> > icmp_ln403_fu_281_p2;
    sc_signal< sc_lv<32> > add_ln405_fu_303_p2;
    sc_signal< sc_lv<32> > add_ln405_reg_407;
    sc_signal< sc_lv<17> > add_ln407_3_fu_336_p2;
    sc_signal< sc_lv<17> > add_ln407_3_reg_417;
    sc_signal< sc_lv<8> > i_0_reg_111;
    sc_signal< sc_lv<32> > phi_mul5_reg_122;
    sc_signal< sc_lv<9> > j_0_reg_133;
    sc_signal< sc_logic > ap_CS_fsm_state34;
    sc_signal< sc_lv<32> > phi_mul_reg_144;
    sc_signal< sc_lv<64> > sext_ln407_1_fu_327_p1;
    sc_signal< sc_lv<64> > zext_ln407_3_fu_341_p1;
    sc_signal< sc_lv<27> > grp_fu_155_p0;
    sc_signal< sc_lv<26> > grp_fu_161_p0;
    sc_signal< sc_lv<32> > grp_fu_155_p2;
    sc_signal< sc_lv<32> > grp_fu_161_p2;
    sc_signal< sc_lv<32> > zext_ln400_fu_184_p1;
    sc_signal< sc_lv<10> > tmp_13_fu_205_p4;
    sc_signal< sc_lv<12> > tmp_14_fu_223_p4;
    sc_signal< sc_lv<18> > sext_ln407_cast_fu_215_p3;
    sc_signal< sc_lv<18> > sext_ln407_2_cast_fu_233_p3;
    sc_signal< sc_lv<16> > tmp_s_fu_247_p3;
    sc_signal< sc_lv<14> > tmp_8_fu_259_p3;
    sc_signal< sc_lv<17> > zext_ln407_fu_255_p1;
    sc_signal< sc_lv<17> > zext_ln407_1_fu_267_p1;
    sc_signal< sc_lv<32> > zext_ln403_fu_277_p1;
    sc_signal< sc_lv<1> > icmp_ln405_1_fu_293_p2;
    sc_signal< sc_lv<16> > tmp_15_fu_308_p4;
    sc_signal< sc_lv<18> > sext_ln407_fu_318_p1;
    sc_signal< sc_lv<18> > add_ln407_2_fu_322_p2;
    sc_signal< sc_lv<17> > zext_ln407_2_fu_332_p1;
    sc_signal< sc_logic > grp_fu_155_ap_start;
    sc_signal< sc_logic > grp_fu_155_ap_done;
    sc_signal< sc_logic > grp_fu_161_ap_start;
    sc_signal< sc_logic > grp_fu_161_ap_done;
    sc_signal< sc_lv<34> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<34> ap_ST_fsm_state1;
    static const sc_lv<34> ap_ST_fsm_state2;
    static const sc_lv<34> ap_ST_fsm_state3;
    static const sc_lv<34> ap_ST_fsm_state4;
    static const sc_lv<34> ap_ST_fsm_state5;
    static const sc_lv<34> ap_ST_fsm_state6;
    static const sc_lv<34> ap_ST_fsm_state7;
    static const sc_lv<34> ap_ST_fsm_state8;
    static const sc_lv<34> ap_ST_fsm_state9;
    static const sc_lv<34> ap_ST_fsm_state10;
    static const sc_lv<34> ap_ST_fsm_state11;
    static const sc_lv<34> ap_ST_fsm_state12;
    static const sc_lv<34> ap_ST_fsm_state13;
    static const sc_lv<34> ap_ST_fsm_state14;
    static const sc_lv<34> ap_ST_fsm_state15;
    static const sc_lv<34> ap_ST_fsm_state16;
    static const sc_lv<34> ap_ST_fsm_state17;
    static const sc_lv<34> ap_ST_fsm_state18;
    static const sc_lv<34> ap_ST_fsm_state19;
    static const sc_lv<34> ap_ST_fsm_state20;
    static const sc_lv<34> ap_ST_fsm_state21;
    static const sc_lv<34> ap_ST_fsm_state22;
    static const sc_lv<34> ap_ST_fsm_state23;
    static const sc_lv<34> ap_ST_fsm_state24;
    static const sc_lv<34> ap_ST_fsm_state25;
    static const sc_lv<34> ap_ST_fsm_state26;
    static const sc_lv<34> ap_ST_fsm_state27;
    static const sc_lv<34> ap_ST_fsm_state28;
    static const sc_lv<34> ap_ST_fsm_state29;
    static const sc_lv<34> ap_ST_fsm_state30;
    static const sc_lv<34> ap_ST_fsm_state31;
    static const sc_lv<34> ap_ST_fsm_state32;
    static const sc_lv<34> ap_ST_fsm_state33;
    static const sc_lv<34> ap_ST_fsm_state34;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_1E;
    static const sc_lv<32> ap_const_lv32_1F;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_20;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<9> ap_const_lv9_0;
    static const sc_lv<32> ap_const_lv32_21;
    static const sc_lv<32> ap_const_lv32_1400000;
    static const sc_lv<32> ap_const_lv32_F00000;
    static const sc_lv<8> ap_const_lv8_F0;
    static const sc_lv<8> ap_const_lv8_1;
    static const sc_lv<32> ap_const_lv32_10;
    static const sc_lv<32> ap_const_lv32_19;
    static const sc_lv<32> ap_const_lv32_1B;
    static const sc_lv<6> ap_const_lv6_0;
    static const sc_lv<9> ap_const_lv9_140;
    static const sc_lv<9> ap_const_lv9_1;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_Data_address0();
    void thread_Data_ce0();
    void thread_IMG1_data_address0();
    void thread_IMG1_data_ce0();
    void thread_IMG1_data_d0();
    void thread_IMG1_data_we0();
    void thread_add_ln400_fu_179_p2();
    void thread_add_ln405_fu_303_p2();
    void thread_add_ln407_1_fu_271_p2();
    void thread_add_ln407_2_fu_322_p2();
    void thread_add_ln407_3_fu_336_p2();
    void thread_add_ln407_fu_241_p2();
    void thread_and_ln405_fu_298_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state31();
    void thread_ap_CS_fsm_state32();
    void thread_ap_CS_fsm_state33();
    void thread_ap_CS_fsm_state34();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_grp_fu_155_ap_start();
    void thread_grp_fu_155_p0();
    void thread_grp_fu_161_ap_start();
    void thread_grp_fu_161_p0();
    void thread_i_fu_194_p2();
    void thread_icmp_ln400_fu_188_p2();
    void thread_icmp_ln403_fu_281_p2();
    void thread_icmp_ln405_1_fu_293_p2();
    void thread_icmp_ln405_fu_200_p2();
    void thread_j_fu_287_p2();
    void thread_sext_ln407_1_fu_327_p1();
    void thread_sext_ln407_2_cast_fu_233_p3();
    void thread_sext_ln407_cast_fu_215_p3();
    void thread_sext_ln407_fu_318_p1();
    void thread_tmp_13_fu_205_p4();
    void thread_tmp_14_fu_223_p4();
    void thread_tmp_15_fu_308_p4();
    void thread_tmp_8_fu_259_p3();
    void thread_tmp_s_fu_247_p3();
    void thread_x_ratio_fu_167_p2();
    void thread_y_ratio_fu_173_p2();
    void thread_zext_ln400_fu_184_p1();
    void thread_zext_ln403_fu_277_p1();
    void thread_zext_ln407_1_fu_267_p1();
    void thread_zext_ln407_2_fu_332_p1();
    void thread_zext_ln407_3_fu_341_p1();
    void thread_zext_ln407_fu_255_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
