// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module processImage (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        factor,
        sum_row,
        sum_col,
        AllCandidates_x_address0,
        AllCandidates_x_ce0,
        AllCandidates_x_we0,
        AllCandidates_x_d0,
        AllCandidates_y_address0,
        AllCandidates_y_ce0,
        AllCandidates_y_we0,
        AllCandidates_y_d0,
        AllCandidates_w_address0,
        AllCandidates_w_ce0,
        AllCandidates_w_we0,
        AllCandidates_w_d0,
        AllCandidates_h_address0,
        AllCandidates_h_ce0,
        AllCandidates_h_we0,
        AllCandidates_h_d0,
        AllCandidates_size_r,
        IMG1_data_address0,
        IMG1_data_ce0,
        IMG1_data_q0,
        winSize_width,
        winSize_height,
        ap_return
);

parameter    ap_ST_fsm_state1 = 36'd1;
parameter    ap_ST_fsm_state2 = 36'd2;
parameter    ap_ST_fsm_state3 = 36'd4;
parameter    ap_ST_fsm_state4 = 36'd8;
parameter    ap_ST_fsm_state5 = 36'd16;
parameter    ap_ST_fsm_state6 = 36'd32;
parameter    ap_ST_fsm_state7 = 36'd64;
parameter    ap_ST_fsm_state8 = 36'd128;
parameter    ap_ST_fsm_state9 = 36'd256;
parameter    ap_ST_fsm_state10 = 36'd512;
parameter    ap_ST_fsm_state11 = 36'd1024;
parameter    ap_ST_fsm_state12 = 36'd2048;
parameter    ap_ST_fsm_state13 = 36'd4096;
parameter    ap_ST_fsm_state14 = 36'd8192;
parameter    ap_ST_fsm_state15 = 36'd16384;
parameter    ap_ST_fsm_state16 = 36'd32768;
parameter    ap_ST_fsm_state17 = 36'd65536;
parameter    ap_ST_fsm_state18 = 36'd131072;
parameter    ap_ST_fsm_state19 = 36'd262144;
parameter    ap_ST_fsm_state20 = 36'd524288;
parameter    ap_ST_fsm_state21 = 36'd1048576;
parameter    ap_ST_fsm_state22 = 36'd2097152;
parameter    ap_ST_fsm_state23 = 36'd4194304;
parameter    ap_ST_fsm_state24 = 36'd8388608;
parameter    ap_ST_fsm_state25 = 36'd16777216;
parameter    ap_ST_fsm_state26 = 36'd33554432;
parameter    ap_ST_fsm_state27 = 36'd67108864;
parameter    ap_ST_fsm_state28 = 36'd134217728;
parameter    ap_ST_fsm_state29 = 36'd268435456;
parameter    ap_ST_fsm_state30 = 36'd536870912;
parameter    ap_ST_fsm_state31 = 36'd1073741824;
parameter    ap_ST_fsm_state32 = 36'd2147483648;
parameter    ap_ST_fsm_state33 = 36'd4294967296;
parameter    ap_ST_fsm_state34 = 36'd8589934592;
parameter    ap_ST_fsm_state35 = 36'd17179869184;
parameter    ap_ST_fsm_state36 = 36'd34359738368;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] factor;
input  [31:0] sum_row;
input  [31:0] sum_col;
output  [6:0] AllCandidates_x_address0;
output   AllCandidates_x_ce0;
output   AllCandidates_x_we0;
output  [31:0] AllCandidates_x_d0;
output  [6:0] AllCandidates_y_address0;
output   AllCandidates_y_ce0;
output   AllCandidates_y_we0;
output  [31:0] AllCandidates_y_d0;
output  [6:0] AllCandidates_w_address0;
output   AllCandidates_w_ce0;
output   AllCandidates_w_we0;
output  [31:0] AllCandidates_w_d0;
output  [6:0] AllCandidates_h_address0;
output   AllCandidates_h_ce0;
output   AllCandidates_h_we0;
output  [31:0] AllCandidates_h_d0;
input  [31:0] AllCandidates_size_r;
output  [16:0] IMG1_data_address0;
output   IMG1_data_ce0;
input  [7:0] IMG1_data_q0;
input  [31:0] winSize_width;
input  [31:0] winSize_height;
output  [31:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg AllCandidates_x_ce0;
reg AllCandidates_x_we0;
reg AllCandidates_y_ce0;
reg AllCandidates_y_we0;
reg AllCandidates_w_ce0;
reg AllCandidates_w_we0;
reg AllCandidates_h_ce0;
reg AllCandidates_h_we0;
reg IMG1_data_ce0;

(* fsm_encoding = "none" *) reg   [35:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [31:0] grp_fu_437_p1;
reg   [31:0] reg_455;
wire    ap_CS_fsm_state9;
wire    ap_CS_fsm_state24;
wire   [31:0] grp_fu_433_p2;
reg   [31:0] reg_460;
wire    ap_CS_fsm_state12;
wire    ap_CS_fsm_state27;
wire   [63:0] grp_fu_440_p1;
reg   [63:0] reg_466;
wire    ap_CS_fsm_state14;
wire    ap_CS_fsm_state29;
wire   [30:0] y_1_fu_480_p2;
reg   [30:0] y_1_reg_1127;
wire    ap_CS_fsm_state2;
wire   [17:0] add_ln349_fu_510_p2;
reg   [17:0] add_ln349_reg_1132;
wire   [0:0] icmp_ln342_fu_475_p2;
wire   [0:0] icmp_ln356_fu_516_p2;
reg   [0:0] icmp_ln356_reg_1137;
wire   [17:0] add_ln358_1_fu_552_p2;
reg   [17:0] add_ln358_1_reg_1143;
wire   [31:0] add_ln154_fu_558_p2;
reg   [31:0] add_ln154_reg_1155;
wire   [31:0] add_ln155_fu_563_p2;
reg   [31:0] add_ln155_reg_1160;
wire   [30:0] x_1_fu_581_p2;
reg   [30:0] x_1_reg_1168;
wire    ap_CS_fsm_state3;
wire   [63:0] zext_ln349_fu_596_p1;
reg   [63:0] zext_ln349_reg_1173;
wire   [0:0] icmp_ln347_fu_576_p2;
wire   [17:0] add_ln358_2_fu_601_p2;
reg   [17:0] add_ln358_2_reg_1184;
wire    ap_CS_fsm_state4;
wire   [31:0] s_fu_619_p2;
reg   [31:0] s_reg_1199;
wire   [31:0] grp_fu_1084_p3;
reg   [31:0] sq_reg_1206;
wire   [31:0] zext_ln154_fu_649_p1;
wire    ap_CS_fsm_state6;
wire   [30:0] y_fu_659_p2;
reg   [30:0] y_reg_1221;
wire   [0:0] icmp_ln57_fu_683_p2;
reg   [0:0] icmp_ln57_reg_1226;
wire    ap_CS_fsm_state13;
wire   [0:0] icmp_ln57_1_fu_689_p2;
reg   [0:0] icmp_ln57_1_reg_1231;
wire   [0:0] grp_fu_443_p2;
reg   [0:0] tmp_3_reg_1236;
wire   [63:0] select_ln57_fu_704_p3;
wire    ap_CS_fsm_state15;
wire   [63:0] p_Val2_5_fu_713_p1;
reg   [63:0] p_Val2_5_reg_1246;
wire    ap_CS_fsm_state19;
reg   [0:0] p_Result_1_reg_1252;
wire   [31:0] zext_ln155_fu_725_p1;
reg   [31:0] zext_ln155_reg_1257;
wire    ap_CS_fsm_state20;
wire   [30:0] x_fu_734_p2;
reg   [30:0] x_reg_1265;
wire   [0:0] icmp_ln165_fu_740_p2;
reg   [0:0] icmp_ln165_reg_1270;
wire    ap_CS_fsm_state21;
wire    grp_cascadeClassifier_fu_377_ap_ready;
wire    grp_cascadeClassifier_fu_377_ap_done;
wire   [31:0] p_Val2_13_fu_868_p3;
reg   [31:0] p_Val2_13_reg_1274;
wire  signed [63:0] sext_ln167_fu_875_p1;
reg  signed [63:0] sext_ln167_reg_1279;
wire    ap_CS_fsm_state22;
wire   [0:0] icmp_ln57_2_fu_911_p2;
reg   [0:0] icmp_ln57_2_reg_1284;
wire    ap_CS_fsm_state28;
wire   [0:0] icmp_ln57_3_fu_917_p2;
reg   [0:0] icmp_ln57_3_reg_1289;
reg   [0:0] tmp_6_reg_1294;
wire   [63:0] select_ln57_1_fu_932_p3;
wire    ap_CS_fsm_state30;
wire   [63:0] grp_fu_448_p2;
reg   [63:0] x_assign_reg_1304;
wire    ap_CS_fsm_state34;
wire   [31:0] p_Val2_11_fu_1076_p3;
reg   [31:0] p_Val2_11_reg_1309;
wire    ap_CS_fsm_state35;
reg   [16:0] SUM1_data_address0;
reg    SUM1_data_ce0;
reg    SUM1_data_we0;
wire   [31:0] SUM1_data_d0;
wire   [31:0] SUM1_data_q0;
reg    SUM1_data_ce1;
wire   [31:0] SUM1_data_q1;
reg   [16:0] SQSUM1_data_address0;
reg    SQSUM1_data_ce0;
reg    SQSUM1_data_we0;
wire   [31:0] SQSUM1_data_d0;
wire   [31:0] SQSUM1_data_q0;
reg    SQSUM1_data_ce1;
wire   [31:0] SQSUM1_data_q1;
wire    grp_cascadeClassifier_fu_377_ap_start;
wire    grp_cascadeClassifier_fu_377_ap_idle;
wire   [16:0] grp_cascadeClassifier_fu_377_SUM1_data_address0;
wire    grp_cascadeClassifier_fu_377_SUM1_data_ce0;
wire   [16:0] grp_cascadeClassifier_fu_377_SUM1_data_address1;
wire    grp_cascadeClassifier_fu_377_SUM1_data_ce1;
wire   [16:0] grp_cascadeClassifier_fu_377_SQSUM1_data_address0;
wire    grp_cascadeClassifier_fu_377_SQSUM1_data_ce0;
wire   [16:0] grp_cascadeClassifier_fu_377_SQSUM1_data_address1;
wire    grp_cascadeClassifier_fu_377_SQSUM1_data_ce1;
wire   [5:0] grp_cascadeClassifier_fu_377_ap_return;
reg   [30:0] y_0_i_reg_307;
reg   [30:0] x_0_i_reg_318;
wire    ap_CS_fsm_state5;
reg   [31:0] s_0_i_reg_329;
reg   [31:0] sq_0_i_reg_341;
reg   [30:0] p_y_reg_353;
wire   [0:0] icmp_ln155_fu_729_p2;
reg   [30:0] p_x_reg_365;
wire    ap_CS_fsm_state36;
reg    grp_cascadeClassifier_fu_377_ap_start_reg;
wire  signed [63:0] sext_ln358_fu_606_p1;
reg   [31:0] AllCandidates_size_0_fu_164;
wire   [31:0] add_ln171_fu_882_p2;
wire   [0:0] icmp_ln154_fu_654_p2;
wire    ap_CS_fsm_state10;
wire    ap_CS_fsm_state25;
reg   [31:0] grp_fu_437_p0;
reg   [63:0] grp_fu_448_p1;
wire   [31:0] zext_ln342_fu_471_p1;
wire   [9:0] trunc_ln349_fu_486_p1;
wire   [11:0] trunc_ln349_1_fu_498_p1;
wire   [17:0] zext_ln349_cast_fu_490_p3;
wire   [17:0] zext_ln349_2_cast_fu_502_p3;
wire   [31:0] add_ln358_fu_522_p2;
wire   [9:0] trunc_ln358_fu_528_p1;
wire   [11:0] trunc_ln358_1_fu_540_p1;
wire   [17:0] sext_ln358_cast_fu_532_p3;
wire   [17:0] sext_ln358_1_cast_fu_544_p3;
wire   [31:0] zext_ln347_fu_572_p1;
wire   [17:0] trunc_ln349_2_fu_587_p1;
wire   [17:0] add_ln349_1_fu_591_p2;
wire   [31:0] zext_ln351_fu_611_p1;
wire   [31:0] t_1_fu_625_p2;
(* use_dsp48 = "no" *) wire   [31:0] tq_1_fu_630_p2;
wire   [31:0] bitcast_ln57_fu_665_p1;
wire   [7:0] tmp_1_fu_669_p4;
wire   [22:0] trunc_ln57_fu_679_p1;
wire   [0:0] or_ln57_fu_695_p2;
wire   [0:0] and_ln57_fu_699_p2;
wire   [51:0] tmp_V_3_fu_755_p1;
wire   [53:0] mantissa_V_1_fu_758_p4;
wire   [10:0] tmp_V_2_fu_746_p4;
wire   [11:0] zext_ln502_1_fu_772_p1;
wire   [11:0] add_ln502_1_fu_776_p2;
wire   [10:0] sub_ln1311_1_fu_790_p2;
wire   [0:0] isNeg_1_fu_782_p3;
wire  signed [11:0] sext_ln1311_2_fu_796_p1;
wire   [11:0] ush_1_fu_800_p3;
wire  signed [31:0] sext_ln1311_3_fu_808_p1;
wire   [53:0] zext_ln1285_1_fu_816_p1;
wire   [136:0] zext_ln682_1_fu_768_p1;
wire   [136:0] zext_ln1287_1_fu_812_p1;
wire   [53:0] r_V_2_fu_820_p2;
wire   [0:0] tmp_12_fu_832_p3;
wire   [136:0] r_V_3_fu_826_p2;
wire   [31:0] zext_ln662_1_fu_840_p1;
wire   [31:0] tmp_7_fu_844_p4;
wire   [31:0] p_Val2_12_fu_854_p3;
wire   [31:0] result_V_3_fu_862_p2;
wire  signed [31:0] sext_ln167_fu_875_p0;
wire  signed [31:0] add_ln171_fu_882_p1;
wire   [31:0] bitcast_ln57_1_fu_893_p1;
wire   [7:0] tmp_5_fu_897_p4;
wire   [22:0] trunc_ln57_1_fu_907_p1;
wire   [0:0] or_ln57_1_fu_923_p2;
wire   [0:0] and_ln57_1_fu_927_p2;
wire   [63:0] p_Val2_s_fu_941_p1;
wire   [51:0] tmp_V_1_fu_962_p1;
wire   [53:0] mantissa_V_fu_966_p4;
wire   [10:0] tmp_V_fu_952_p4;
wire   [11:0] zext_ln502_fu_980_p1;
wire   [11:0] add_ln502_fu_984_p2;
wire   [10:0] sub_ln1311_fu_998_p2;
wire   [0:0] isNeg_fu_990_p3;
wire  signed [11:0] sext_ln1311_fu_1004_p1;
wire   [11:0] ush_fu_1008_p3;
wire  signed [31:0] sext_ln1311_1_fu_1016_p1;
wire   [53:0] zext_ln1285_fu_1024_p1;
wire   [136:0] zext_ln682_fu_976_p1;
wire   [136:0] zext_ln1287_fu_1020_p1;
wire   [53:0] r_V_fu_1028_p2;
wire   [0:0] tmp_10_fu_1040_p3;
wire   [136:0] r_V_1_fu_1034_p2;
wire   [31:0] zext_ln662_fu_1048_p1;
wire   [31:0] tmp_s_fu_1052_p4;
wire   [31:0] p_Val2_10_fu_1062_p3;
wire   [0:0] p_Result_s_fu_944_p3;
wire   [31:0] result_V_1_fu_1070_p2;
wire   [7:0] grp_fu_1084_p0;
wire   [15:0] zext_ln351_1_fu_615_p1;
wire   [7:0] grp_fu_1084_p1;
reg    grp_fu_437_ce;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state23;
reg   [35:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 36'd1;
#0 grp_cascadeClassifier_fu_377_ap_start_reg = 1'b0;
end

processImage_SUM1_data #(
    .DataWidth( 32 ),
    .AddressRange( 76800 ),
    .AddressWidth( 17 ))
SUM1_data_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(SUM1_data_address0),
    .ce0(SUM1_data_ce0),
    .we0(SUM1_data_we0),
    .d0(SUM1_data_d0),
    .q0(SUM1_data_q0),
    .address1(grp_cascadeClassifier_fu_377_SUM1_data_address1),
    .ce1(SUM1_data_ce1),
    .q1(SUM1_data_q1)
);

processImage_SUM1_data #(
    .DataWidth( 32 ),
    .AddressRange( 76800 ),
    .AddressWidth( 17 ))
SQSUM1_data_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(SQSUM1_data_address0),
    .ce0(SQSUM1_data_ce0),
    .we0(SQSUM1_data_we0),
    .d0(SQSUM1_data_d0),
    .q0(SQSUM1_data_q0),
    .address1(grp_cascadeClassifier_fu_377_SQSUM1_data_address1),
    .ce1(SQSUM1_data_ce1),
    .q1(SQSUM1_data_q1)
);

cascadeClassifier grp_cascadeClassifier_fu_377(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_cascadeClassifier_fu_377_ap_start),
    .ap_done(grp_cascadeClassifier_fu_377_ap_done),
    .ap_idle(grp_cascadeClassifier_fu_377_ap_idle),
    .ap_ready(grp_cascadeClassifier_fu_377_ap_ready),
    .SUM1_data_address0(grp_cascadeClassifier_fu_377_SUM1_data_address0),
    .SUM1_data_ce0(grp_cascadeClassifier_fu_377_SUM1_data_ce0),
    .SUM1_data_q0(SUM1_data_q0),
    .SUM1_data_address1(grp_cascadeClassifier_fu_377_SUM1_data_address1),
    .SUM1_data_ce1(grp_cascadeClassifier_fu_377_SUM1_data_ce1),
    .SUM1_data_q1(SUM1_data_q1),
    .SQSUM1_data_address0(grp_cascadeClassifier_fu_377_SQSUM1_data_address0),
    .SQSUM1_data_ce0(grp_cascadeClassifier_fu_377_SQSUM1_data_ce0),
    .SQSUM1_data_q0(SQSUM1_data_q0),
    .SQSUM1_data_address1(grp_cascadeClassifier_fu_377_SQSUM1_data_address1),
    .SQSUM1_data_ce1(grp_cascadeClassifier_fu_377_SQSUM1_data_ce1),
    .SQSUM1_data_q1(SQSUM1_data_q1),
    .pt_x(p_x_reg_365),
    .pt_y(p_y_reg_353),
    .ap_return(grp_cascadeClassifier_fu_377_ap_return)
);

face_detect_sw_fmul_32ns_32ns_32_3_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
face_detect_sw_fmul_32ns_32ns_32_3_max_dsp_1_U39(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_455),
    .din1(factor),
    .ce(1'b1),
    .dout(grp_fu_433_p2)
);

face_detect_sw_sitofp_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
face_detect_sw_sitofp_32ns_32_4_1_U40(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_437_p0),
    .ce(grp_fu_437_ce),
    .dout(grp_fu_437_p1)
);

face_detect_sw_fpext_32ns_64_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
face_detect_sw_fpext_32ns_64_2_1_U41(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_460),
    .ce(1'b1),
    .dout(grp_fu_440_p1)
);

face_detect_sw_fcmp_32ns_32ns_1_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
face_detect_sw_fcmp_32ns_32ns_1_2_1_U42(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_460),
    .din1(32'd0),
    .ce(1'b1),
    .opcode(5'd3),
    .dout(grp_fu_443_p2)
);

face_detect_sw_dadd_64ns_64ns_64_5_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
face_detect_sw_dadd_64ns_64ns_64_5_full_dsp_1_U43(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_466),
    .din1(grp_fu_448_p1),
    .ce(1'b1),
    .dout(grp_fu_448_p2)
);

face_detect_sw_mac_muladd_8ns_8ns_32ns_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
face_detect_sw_mac_muladd_8ns_8ns_32ns_32_1_1_U44(
    .din0(grp_fu_1084_p0),
    .din1(grp_fu_1084_p1),
    .din2(sq_0_i_reg_341),
    .dout(grp_fu_1084_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_cascadeClassifier_fu_377_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state20) & (icmp_ln155_fu_729_p2 == 1'd1))) begin
            grp_cascadeClassifier_fu_377_ap_start_reg <= 1'b1;
        end else if ((grp_cascadeClassifier_fu_377_ap_ready == 1'b1)) begin
            grp_cascadeClassifier_fu_377_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        AllCandidates_size_0_fu_164 <= add_ln171_fu_882_p2;
    end else if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln342_fu_475_p2 == 1'd0))) begin
        AllCandidates_size_0_fu_164 <= AllCandidates_size_r;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        p_x_reg_365 <= x_reg_1265;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        p_x_reg_365 <= 31'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state20) & (icmp_ln155_fu_729_p2 == 1'd0))) begin
        p_y_reg_353 <= y_reg_1221;
    end else if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln342_fu_475_p2 == 1'd0))) begin
        p_y_reg_353 <= 31'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln342_fu_475_p2 == 1'd1))) begin
        s_0_i_reg_329 <= 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        s_0_i_reg_329 <= s_reg_1199;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln342_fu_475_p2 == 1'd1))) begin
        sq_0_i_reg_341 <= 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        sq_0_i_reg_341 <= sq_reg_1206;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln342_fu_475_p2 == 1'd1))) begin
        x_0_i_reg_318 <= 31'd0;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        x_0_i_reg_318 <= x_1_reg_1168;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln347_fu_576_p2 == 1'd0))) begin
        y_0_i_reg_307 <= y_1_reg_1127;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        y_0_i_reg_307 <= 31'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln342_fu_475_p2 == 1'd0))) begin
        add_ln154_reg_1155 <= add_ln154_fu_558_p2;
        add_ln155_reg_1160 <= add_ln155_fu_563_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln342_fu_475_p2 == 1'd1))) begin
        add_ln349_reg_1132[17 : 6] <= add_ln349_fu_510_p2[17 : 6];
        add_ln358_1_reg_1143[17 : 6] <= add_ln358_1_fu_552_p2[17 : 6];
        icmp_ln356_reg_1137 <= icmp_ln356_fu_516_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln347_fu_576_p2 == 1'd1))) begin
        add_ln358_2_reg_1184 <= add_ln358_2_fu_601_p2;
        zext_ln349_reg_1173[17 : 0] <= zext_ln349_fu_596_p1[17 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((grp_cascadeClassifier_fu_377_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state21))) begin
        icmp_ln165_reg_1270 <= icmp_ln165_fu_740_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        icmp_ln57_1_reg_1231 <= icmp_ln57_1_fu_689_p2;
        icmp_ln57_reg_1226 <= icmp_ln57_fu_683_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        icmp_ln57_2_reg_1284 <= icmp_ln57_2_fu_911_p2;
        icmp_ln57_3_reg_1289 <= icmp_ln57_3_fu_917_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        p_Result_1_reg_1252 <= p_Val2_5_fu_713_p1[32'd63];
        p_Val2_5_reg_1246 <= p_Val2_5_fu_713_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        p_Val2_11_reg_1309 <= p_Val2_11_fu_1076_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_cascadeClassifier_fu_377_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state21) & (icmp_ln165_fu_740_p2 == 1'd1))) begin
        p_Val2_13_reg_1274 <= p_Val2_13_fu_868_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state9))) begin
        reg_455 <= grp_fu_437_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state12))) begin
        reg_460 <= grp_fu_433_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state14))) begin
        reg_466 <= grp_fu_440_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        s_reg_1199 <= s_fu_619_p2;
        sq_reg_1206 <= grp_fu_1084_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        sext_ln167_reg_1279 <= sext_ln167_fu_875_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        tmp_3_reg_1236 <= grp_fu_443_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        tmp_6_reg_1294 <= grp_fu_443_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        x_1_reg_1168 <= x_1_fu_581_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        x_assign_reg_1304 <= grp_fu_448_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        x_reg_1265 <= x_fu_734_p2;
        zext_ln155_reg_1257[30 : 0] <= zext_ln155_fu_725_p1[30 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        y_1_reg_1127 <= y_1_fu_480_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        y_reg_1221 <= y_fu_659_p2;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        AllCandidates_h_ce0 = 1'b1;
    end else begin
        AllCandidates_h_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        AllCandidates_h_we0 = 1'b1;
    end else begin
        AllCandidates_h_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        AllCandidates_w_ce0 = 1'b1;
    end else begin
        AllCandidates_w_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        AllCandidates_w_we0 = 1'b1;
    end else begin
        AllCandidates_w_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        AllCandidates_x_ce0 = 1'b1;
    end else begin
        AllCandidates_x_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state36) & (icmp_ln165_reg_1270 == 1'd1))) begin
        AllCandidates_x_we0 = 1'b1;
    end else begin
        AllCandidates_x_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        AllCandidates_y_ce0 = 1'b1;
    end else begin
        AllCandidates_y_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        AllCandidates_y_we0 = 1'b1;
    end else begin
        AllCandidates_y_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        IMG1_data_ce0 = 1'b1;
    end else begin
        IMG1_data_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        SQSUM1_data_address0 = zext_ln349_reg_1173;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        SQSUM1_data_address0 = sext_ln358_fu_606_p1;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        SQSUM1_data_address0 = grp_cascadeClassifier_fu_377_SQSUM1_data_address0;
    end else begin
        SQSUM1_data_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4))) begin
        SQSUM1_data_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        SQSUM1_data_ce0 = grp_cascadeClassifier_fu_377_SQSUM1_data_ce0;
    end else begin
        SQSUM1_data_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        SQSUM1_data_ce1 = grp_cascadeClassifier_fu_377_SQSUM1_data_ce1;
    end else begin
        SQSUM1_data_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        SQSUM1_data_we0 = 1'b1;
    end else begin
        SQSUM1_data_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        SUM1_data_address0 = zext_ln349_reg_1173;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        SUM1_data_address0 = sext_ln358_fu_606_p1;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        SUM1_data_address0 = grp_cascadeClassifier_fu_377_SUM1_data_address0;
    end else begin
        SUM1_data_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4))) begin
        SUM1_data_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        SUM1_data_ce0 = grp_cascadeClassifier_fu_377_SUM1_data_ce0;
    end else begin
        SUM1_data_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        SUM1_data_ce1 = grp_cascadeClassifier_fu_377_SUM1_data_ce1;
    end else begin
        SUM1_data_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        SUM1_data_we0 = 1'b1;
    end else begin
        SUM1_data_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) | ((1'b1 == ap_CS_fsm_state6) & (icmp_ln154_fu_654_p2 == 1'd0)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln154_fu_654_p2 == 1'd0))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state9) | ((grp_cascadeClassifier_fu_377_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state21)))) begin
        grp_fu_437_ce = 1'b1;
    end else begin
        grp_fu_437_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        grp_fu_437_p0 = zext_ln155_reg_1257;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_fu_437_p0 = zext_ln154_fu_649_p1;
    end else begin
        grp_fu_437_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        grp_fu_448_p1 = select_ln57_1_fu_932_p3;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        grp_fu_448_p1 = select_ln57_fu_704_p3;
    end else begin
        grp_fu_448_p1 = 'bx;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln342_fu_475_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln347_fu_576_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state6 : begin
            if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln154_fu_654_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            if (((1'b1 == ap_CS_fsm_state20) & (icmp_ln155_fu_729_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end
        end
        ap_ST_fsm_state21 : begin
            if (((grp_cascadeClassifier_fu_377_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state21) & (icmp_ln165_fu_740_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state36;
            end else if (((grp_cascadeClassifier_fu_377_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state21) & (icmp_ln165_fu_740_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign AllCandidates_h_address0 = sext_ln167_fu_875_p1;

assign AllCandidates_h_d0 = winSize_height;

assign AllCandidates_w_address0 = sext_ln167_fu_875_p1;

assign AllCandidates_w_d0 = winSize_width;

assign AllCandidates_x_address0 = sext_ln167_reg_1279;

assign AllCandidates_x_d0 = p_Val2_11_reg_1309;

assign AllCandidates_y_address0 = sext_ln167_fu_875_p1;

assign AllCandidates_y_d0 = p_Val2_13_reg_1274;

assign IMG1_data_address0 = zext_ln349_fu_596_p1;

assign SQSUM1_data_d0 = ((icmp_ln356_reg_1137[0:0] === 1'b1) ? sq_reg_1206 : tq_1_fu_630_p2);

assign SUM1_data_d0 = ((icmp_ln356_reg_1137[0:0] === 1'b1) ? s_reg_1199 : t_1_fu_625_p2);

assign add_ln154_fu_558_p2 = ($signed(sum_row) + $signed(32'd4294967272));

assign add_ln155_fu_563_p2 = ($signed(sum_col) + $signed(32'd4294967272));

assign add_ln171_fu_882_p1 = AllCandidates_size_0_fu_164;

assign add_ln171_fu_882_p2 = ($signed(32'd1) + $signed(add_ln171_fu_882_p1));

assign add_ln349_1_fu_591_p2 = (add_ln349_reg_1132 + trunc_ln349_2_fu_587_p1);

assign add_ln349_fu_510_p2 = (zext_ln349_cast_fu_490_p3 + zext_ln349_2_cast_fu_502_p3);

assign add_ln358_1_fu_552_p2 = (sext_ln358_cast_fu_532_p3 + sext_ln358_1_cast_fu_544_p3);

assign add_ln358_2_fu_601_p2 = (add_ln358_1_reg_1143 + trunc_ln349_2_fu_587_p1);

assign add_ln358_fu_522_p2 = ($signed(32'd4294967295) + $signed(zext_ln342_fu_471_p1));

assign add_ln502_1_fu_776_p2 = ($signed(12'd3073) + $signed(zext_ln502_1_fu_772_p1));

assign add_ln502_fu_984_p2 = ($signed(12'd3073) + $signed(zext_ln502_fu_980_p1));

assign and_ln57_1_fu_927_p2 = (tmp_6_reg_1294 & or_ln57_1_fu_923_p2);

assign and_ln57_fu_699_p2 = (tmp_3_reg_1236 & or_ln57_fu_695_p2);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_return = AllCandidates_size_0_fu_164;

assign bitcast_ln57_1_fu_893_p1 = reg_460;

assign bitcast_ln57_fu_665_p1 = reg_460;

assign grp_cascadeClassifier_fu_377_ap_start = grp_cascadeClassifier_fu_377_ap_start_reg;

assign grp_fu_1084_p0 = zext_ln351_1_fu_615_p1;

assign grp_fu_1084_p1 = zext_ln351_1_fu_615_p1;

assign icmp_ln154_fu_654_p2 = (($signed(zext_ln154_fu_649_p1) < $signed(add_ln154_reg_1155)) ? 1'b1 : 1'b0);

assign icmp_ln155_fu_729_p2 = (($signed(zext_ln155_fu_725_p1) < $signed(add_ln155_reg_1160)) ? 1'b1 : 1'b0);

assign icmp_ln165_fu_740_p2 = (($signed(grp_cascadeClassifier_fu_377_ap_return) > $signed(6'd0)) ? 1'b1 : 1'b0);

assign icmp_ln342_fu_475_p2 = (($signed(zext_ln342_fu_471_p1) < $signed(sum_row)) ? 1'b1 : 1'b0);

assign icmp_ln347_fu_576_p2 = (($signed(zext_ln347_fu_572_p1) < $signed(sum_col)) ? 1'b1 : 1'b0);

assign icmp_ln356_fu_516_p2 = ((y_0_i_reg_307 == 31'd0) ? 1'b1 : 1'b0);

assign icmp_ln57_1_fu_689_p2 = ((trunc_ln57_fu_679_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln57_2_fu_911_p2 = ((tmp_5_fu_897_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln57_3_fu_917_p2 = ((trunc_ln57_1_fu_907_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln57_fu_683_p2 = ((tmp_1_fu_669_p4 != 8'd255) ? 1'b1 : 1'b0);

assign isNeg_1_fu_782_p3 = add_ln502_1_fu_776_p2[32'd11];

assign isNeg_fu_990_p3 = add_ln502_fu_984_p2[32'd11];

assign mantissa_V_1_fu_758_p4 = {{{{1'd1}, {tmp_V_3_fu_755_p1}}}, {1'd0}};

assign mantissa_V_fu_966_p4 = {{{{1'd1}, {tmp_V_1_fu_962_p1}}}, {1'd0}};

assign or_ln57_1_fu_923_p2 = (icmp_ln57_3_reg_1289 | icmp_ln57_2_reg_1284);

assign or_ln57_fu_695_p2 = (icmp_ln57_reg_1226 | icmp_ln57_1_reg_1231);

assign p_Result_s_fu_944_p3 = p_Val2_s_fu_941_p1[32'd63];

assign p_Val2_10_fu_1062_p3 = ((isNeg_fu_990_p3[0:0] === 1'b1) ? zext_ln662_fu_1048_p1 : tmp_s_fu_1052_p4);

assign p_Val2_11_fu_1076_p3 = ((p_Result_s_fu_944_p3[0:0] === 1'b1) ? result_V_1_fu_1070_p2 : p_Val2_10_fu_1062_p3);

assign p_Val2_12_fu_854_p3 = ((isNeg_1_fu_782_p3[0:0] === 1'b1) ? zext_ln662_1_fu_840_p1 : tmp_7_fu_844_p4);

assign p_Val2_13_fu_868_p3 = ((p_Result_1_reg_1252[0:0] === 1'b1) ? result_V_3_fu_862_p2 : p_Val2_12_fu_854_p3);

assign p_Val2_5_fu_713_p1 = grp_fu_448_p2;

assign p_Val2_s_fu_941_p1 = x_assign_reg_1304;

assign r_V_1_fu_1034_p2 = zext_ln682_fu_976_p1 << zext_ln1287_fu_1020_p1;

assign r_V_2_fu_820_p2 = mantissa_V_1_fu_758_p4 >> zext_ln1285_1_fu_816_p1;

assign r_V_3_fu_826_p2 = zext_ln682_1_fu_768_p1 << zext_ln1287_1_fu_812_p1;

assign r_V_fu_1028_p2 = mantissa_V_fu_966_p4 >> zext_ln1285_fu_1024_p1;

assign result_V_1_fu_1070_p2 = (32'd0 - p_Val2_10_fu_1062_p3);

assign result_V_3_fu_862_p2 = (32'd0 - p_Val2_12_fu_854_p3);

assign s_fu_619_p2 = (s_0_i_reg_329 + zext_ln351_fu_611_p1);

assign select_ln57_1_fu_932_p3 = ((and_ln57_1_fu_927_p2[0:0] === 1'b1) ? 64'd4602678819172646912 : 64'd13826050856027422720);

assign select_ln57_fu_704_p3 = ((and_ln57_fu_699_p2[0:0] === 1'b1) ? 64'd4602678819172646912 : 64'd13826050856027422720);

assign sext_ln1311_1_fu_1016_p1 = $signed(ush_fu_1008_p3);

assign sext_ln1311_2_fu_796_p1 = $signed(sub_ln1311_1_fu_790_p2);

assign sext_ln1311_3_fu_808_p1 = $signed(ush_1_fu_800_p3);

assign sext_ln1311_fu_1004_p1 = $signed(sub_ln1311_fu_998_p2);

assign sext_ln167_fu_875_p0 = AllCandidates_size_0_fu_164;

assign sext_ln167_fu_875_p1 = sext_ln167_fu_875_p0;

assign sext_ln358_1_cast_fu_544_p3 = {{trunc_ln358_1_fu_540_p1}, {6'd0}};

assign sext_ln358_cast_fu_532_p3 = {{trunc_ln358_fu_528_p1}, {8'd0}};

assign sext_ln358_fu_606_p1 = $signed(add_ln358_2_reg_1184);

assign sub_ln1311_1_fu_790_p2 = (11'd1023 - tmp_V_2_fu_746_p4);

assign sub_ln1311_fu_998_p2 = (11'd1023 - tmp_V_fu_952_p4);

assign t_1_fu_625_p2 = (s_reg_1199 + SUM1_data_q0);

assign tmp_10_fu_1040_p3 = r_V_fu_1028_p2[32'd53];

assign tmp_12_fu_832_p3 = r_V_2_fu_820_p2[32'd53];

assign tmp_1_fu_669_p4 = {{bitcast_ln57_fu_665_p1[30:23]}};

assign tmp_5_fu_897_p4 = {{bitcast_ln57_1_fu_893_p1[30:23]}};

assign tmp_7_fu_844_p4 = {{r_V_3_fu_826_p2[84:53]}};

assign tmp_V_1_fu_962_p1 = p_Val2_s_fu_941_p1[51:0];

assign tmp_V_2_fu_746_p4 = {{p_Val2_5_reg_1246[62:52]}};

assign tmp_V_3_fu_755_p1 = p_Val2_5_reg_1246[51:0];

assign tmp_V_fu_952_p4 = {{p_Val2_s_fu_941_p1[62:52]}};

assign tmp_s_fu_1052_p4 = {{r_V_1_fu_1034_p2[84:53]}};

assign tq_1_fu_630_p2 = (sq_reg_1206 + SQSUM1_data_q0);

assign trunc_ln349_1_fu_498_p1 = y_0_i_reg_307[11:0];

assign trunc_ln349_2_fu_587_p1 = x_0_i_reg_318[17:0];

assign trunc_ln349_fu_486_p1 = y_0_i_reg_307[9:0];

assign trunc_ln358_1_fu_540_p1 = add_ln358_fu_522_p2[11:0];

assign trunc_ln358_fu_528_p1 = add_ln358_fu_522_p2[9:0];

assign trunc_ln57_1_fu_907_p1 = bitcast_ln57_1_fu_893_p1[22:0];

assign trunc_ln57_fu_679_p1 = bitcast_ln57_fu_665_p1[22:0];

assign ush_1_fu_800_p3 = ((isNeg_1_fu_782_p3[0:0] === 1'b1) ? sext_ln1311_2_fu_796_p1 : add_ln502_1_fu_776_p2);

assign ush_fu_1008_p3 = ((isNeg_fu_990_p3[0:0] === 1'b1) ? sext_ln1311_fu_1004_p1 : add_ln502_fu_984_p2);

assign x_1_fu_581_p2 = (x_0_i_reg_318 + 31'd1);

assign x_fu_734_p2 = (p_x_reg_365 + 31'd1);

assign y_1_fu_480_p2 = (y_0_i_reg_307 + 31'd1);

assign y_fu_659_p2 = (p_y_reg_353 + 31'd1);

assign zext_ln1285_1_fu_816_p1 = $unsigned(sext_ln1311_3_fu_808_p1);

assign zext_ln1285_fu_1024_p1 = $unsigned(sext_ln1311_1_fu_1016_p1);

assign zext_ln1287_1_fu_812_p1 = $unsigned(sext_ln1311_3_fu_808_p1);

assign zext_ln1287_fu_1020_p1 = $unsigned(sext_ln1311_1_fu_1016_p1);

assign zext_ln154_fu_649_p1 = p_y_reg_353;

assign zext_ln155_fu_725_p1 = p_x_reg_365;

assign zext_ln342_fu_471_p1 = y_0_i_reg_307;

assign zext_ln347_fu_572_p1 = x_0_i_reg_318;

assign zext_ln349_2_cast_fu_502_p3 = {{trunc_ln349_1_fu_498_p1}, {6'd0}};

assign zext_ln349_cast_fu_490_p3 = {{trunc_ln349_fu_486_p1}, {8'd0}};

assign zext_ln349_fu_596_p1 = add_ln349_1_fu_591_p2;

assign zext_ln351_1_fu_615_p1 = IMG1_data_q0;

assign zext_ln351_fu_611_p1 = IMG1_data_q0;

assign zext_ln502_1_fu_772_p1 = tmp_V_2_fu_746_p4;

assign zext_ln502_fu_980_p1 = tmp_V_fu_952_p4;

assign zext_ln662_1_fu_840_p1 = tmp_12_fu_832_p3;

assign zext_ln662_fu_1048_p1 = tmp_10_fu_1040_p3;

assign zext_ln682_1_fu_768_p1 = mantissa_V_1_fu_758_p4;

assign zext_ln682_fu_976_p1 = mantissa_V_fu_966_p4;

always @ (posedge ap_clk) begin
    add_ln349_reg_1132[5:0] <= 6'b000000;
    add_ln358_1_reg_1143[5:0] <= 6'b000000;
    zext_ln349_reg_1173[63:18] <= 46'b0000000000000000000000000000000000000000000000;
    zext_ln155_reg_1257[31] <= 1'b0;
end

endmodule //processImage
