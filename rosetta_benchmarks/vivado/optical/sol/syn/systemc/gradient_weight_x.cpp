// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "gradient_weight_x.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic gradient_weight_x::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic gradient_weight_x::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<12> gradient_weight_x::ap_ST_fsm_state1 = "1";
const sc_lv<12> gradient_weight_x::ap_ST_fsm_state2 = "10";
const sc_lv<12> gradient_weight_x::ap_ST_fsm_state3 = "100";
const sc_lv<12> gradient_weight_x::ap_ST_fsm_state4 = "1000";
const sc_lv<12> gradient_weight_x::ap_ST_fsm_state5 = "10000";
const sc_lv<12> gradient_weight_x::ap_ST_fsm_state6 = "100000";
const sc_lv<12> gradient_weight_x::ap_ST_fsm_state7 = "1000000";
const sc_lv<12> gradient_weight_x::ap_ST_fsm_state8 = "10000000";
const sc_lv<12> gradient_weight_x::ap_ST_fsm_state9 = "100000000";
const sc_lv<12> gradient_weight_x::ap_ST_fsm_state10 = "1000000000";
const sc_lv<12> gradient_weight_x::ap_ST_fsm_state11 = "10000000000";
const sc_lv<12> gradient_weight_x::ap_ST_fsm_state12 = "100000000000";
const sc_lv<32> gradient_weight_x::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> gradient_weight_x::ap_const_lv32_1 = "1";
const sc_lv<1> gradient_weight_x::ap_const_lv1_0 = "0";
const sc_lv<32> gradient_weight_x::ap_const_lv32_2 = "10";
const sc_lv<32> gradient_weight_x::ap_const_lv32_3 = "11";
const sc_lv<1> gradient_weight_x::ap_const_lv1_1 = "1";
const sc_lv<32> gradient_weight_x::ap_const_lv32_4 = "100";
const sc_lv<32> gradient_weight_x::ap_const_lv32_7 = "111";
const sc_lv<32> gradient_weight_x::ap_const_lv32_B = "1011";
const sc_lv<9> gradient_weight_x::ap_const_lv9_0 = "000000000";
const sc_lv<11> gradient_weight_x::ap_const_lv11_0 = "00000000000";
const sc_lv<3> gradient_weight_x::ap_const_lv3_0 = "000";
const sc_lv<32> gradient_weight_x::ap_const_lv32_8 = "1000";
const sc_lv<32> gradient_weight_x::ap_const_lv32_5 = "101";
const sc_lv<11> gradient_weight_x::ap_const_lv11_7FD = "11111111101";
const sc_lv<9> gradient_weight_x::ap_const_lv9_1B4 = "110110100";
const sc_lv<9> gradient_weight_x::ap_const_lv9_1 = "1";
const sc_lv<10> gradient_weight_x::ap_const_lv10_0 = "0000000000";
const sc_lv<11> gradient_weight_x::ap_const_lv11_403 = "10000000011";
const sc_lv<11> gradient_weight_x::ap_const_lv11_1 = "1";
const sc_lv<11> gradient_weight_x::ap_const_lv11_5 = "101";
const sc_lv<32> gradient_weight_x::ap_const_lv32_A = "1010";
const sc_lv<11> gradient_weight_x::ap_const_lv11_2 = "10";
const sc_lv<3> gradient_weight_x::ap_const_lv3_7 = "111";
const sc_lv<3> gradient_weight_x::ap_const_lv3_1 = "1";
const bool gradient_weight_x::ap_const_boolean_1 = true;

gradient_weight_x::gradient_weight_x(sc_module_name name) : sc_module(name), mVcdFile(0) {
    GRAD_FILTER_U = new gradient_weight_y_GRAD_FILTER("GRAD_FILTER_U");
    GRAD_FILTER_U->clk(ap_clk);
    GRAD_FILTER_U->reset(ap_rst);
    GRAD_FILTER_U->address0(GRAD_FILTER_address0);
    GRAD_FILTER_U->ce0(GRAD_FILTER_ce0);
    GRAD_FILTER_U->q0(GRAD_FILTER_q0);
    optical_flow_sw_fadd_32ns_32ns_32_4_full_dsp_1_U29 = new optical_flow_sw_fadd_32ns_32ns_32_4_full_dsp_1<1,4,32,32,32>("optical_flow_sw_fadd_32ns_32ns_32_4_full_dsp_1_U29");
    optical_flow_sw_fadd_32ns_32ns_32_4_full_dsp_1_U29->clk(ap_clk);
    optical_flow_sw_fadd_32ns_32ns_32_4_full_dsp_1_U29->reset(ap_rst);
    optical_flow_sw_fadd_32ns_32ns_32_4_full_dsp_1_U29->din0(acc_0_0_reg_227);
    optical_flow_sw_fadd_32ns_32ns_32_4_full_dsp_1_U29->din1(tmp_reg_508);
    optical_flow_sw_fadd_32ns_32ns_32_4_full_dsp_1_U29->ce(ap_var_for_const0);
    optical_flow_sw_fadd_32ns_32ns_32_4_full_dsp_1_U29->dout(grp_fu_251_p2);
    optical_flow_sw_fadd_32ns_32ns_32_4_full_dsp_1_U30 = new optical_flow_sw_fadd_32ns_32ns_32_4_full_dsp_1<1,4,32,32,32>("optical_flow_sw_fadd_32ns_32ns_32_4_full_dsp_1_U30");
    optical_flow_sw_fadd_32ns_32ns_32_4_full_dsp_1_U30->clk(ap_clk);
    optical_flow_sw_fadd_32ns_32ns_32_4_full_dsp_1_U30->reset(ap_rst);
    optical_flow_sw_fadd_32ns_32ns_32_4_full_dsp_1_U30->din0(acc_1_0_reg_214);
    optical_flow_sw_fadd_32ns_32ns_32_4_full_dsp_1_U30->din1(tmp_s_reg_513);
    optical_flow_sw_fadd_32ns_32ns_32_4_full_dsp_1_U30->ce(ap_var_for_const0);
    optical_flow_sw_fadd_32ns_32ns_32_4_full_dsp_1_U30->dout(grp_fu_256_p2);
    optical_flow_sw_fadd_32ns_32ns_32_4_full_dsp_1_U31 = new optical_flow_sw_fadd_32ns_32ns_32_4_full_dsp_1<1,4,32,32,32>("optical_flow_sw_fadd_32ns_32ns_32_4_full_dsp_1_U31");
    optical_flow_sw_fadd_32ns_32ns_32_4_full_dsp_1_U31->clk(ap_clk);
    optical_flow_sw_fadd_32ns_32ns_32_4_full_dsp_1_U31->reset(ap_rst);
    optical_flow_sw_fadd_32ns_32ns_32_4_full_dsp_1_U31->din0(acc_2_0_reg_201);
    optical_flow_sw_fadd_32ns_32ns_32_4_full_dsp_1_U31->din1(tmp_2_reg_518);
    optical_flow_sw_fadd_32ns_32ns_32_4_full_dsp_1_U31->ce(ap_var_for_const0);
    optical_flow_sw_fadd_32ns_32ns_32_4_full_dsp_1_U31->dout(grp_fu_261_p2);
    optical_flow_sw_fmul_32ns_32ns_32_3_max_dsp_1_U32 = new optical_flow_sw_fmul_32ns_32ns_32_3_max_dsp_1<1,3,32,32,32>("optical_flow_sw_fmul_32ns_32ns_32_3_max_dsp_1_U32");
    optical_flow_sw_fmul_32ns_32ns_32_3_max_dsp_1_U32->clk(ap_clk);
    optical_flow_sw_fmul_32ns_32ns_32_3_max_dsp_1_U32->reset(ap_rst);
    optical_flow_sw_fmul_32ns_32ns_32_3_max_dsp_1_U32->din0(y_filtered_x_load_reg_486);
    optical_flow_sw_fmul_32ns_32ns_32_3_max_dsp_1_U32->din1(GRAD_FILTER_load_reg_491);
    optical_flow_sw_fmul_32ns_32ns_32_3_max_dsp_1_U32->ce(ap_var_for_const0);
    optical_flow_sw_fmul_32ns_32ns_32_3_max_dsp_1_U32->dout(grp_fu_266_p2);
    optical_flow_sw_fmul_32ns_32ns_32_3_max_dsp_1_U33 = new optical_flow_sw_fmul_32ns_32ns_32_3_max_dsp_1<1,3,32,32,32>("optical_flow_sw_fmul_32ns_32ns_32_3_max_dsp_1_U33");
    optical_flow_sw_fmul_32ns_32ns_32_3_max_dsp_1_U33->clk(ap_clk);
    optical_flow_sw_fmul_32ns_32ns_32_3_max_dsp_1_U33->reset(ap_rst);
    optical_flow_sw_fmul_32ns_32ns_32_3_max_dsp_1_U33->din0(y_filtered_y_load_reg_498);
    optical_flow_sw_fmul_32ns_32ns_32_3_max_dsp_1_U33->din1(GRAD_FILTER_load_reg_491);
    optical_flow_sw_fmul_32ns_32ns_32_3_max_dsp_1_U33->ce(ap_var_for_const0);
    optical_flow_sw_fmul_32ns_32ns_32_3_max_dsp_1_U33->dout(grp_fu_270_p2);
    optical_flow_sw_fmul_32ns_32ns_32_3_max_dsp_1_U34 = new optical_flow_sw_fmul_32ns_32ns_32_3_max_dsp_1<1,3,32,32,32>("optical_flow_sw_fmul_32ns_32ns_32_3_max_dsp_1_U34");
    optical_flow_sw_fmul_32ns_32ns_32_3_max_dsp_1_U34->clk(ap_clk);
    optical_flow_sw_fmul_32ns_32ns_32_3_max_dsp_1_U34->reset(ap_rst);
    optical_flow_sw_fmul_32ns_32ns_32_3_max_dsp_1_U34->din0(y_filtered_z_load_reg_503);
    optical_flow_sw_fmul_32ns_32ns_32_3_max_dsp_1_U34->din1(GRAD_FILTER_load_reg_491);
    optical_flow_sw_fmul_32ns_32ns_32_3_max_dsp_1_U34->ce(ap_var_for_const0);
    optical_flow_sw_fmul_32ns_32ns_32_3_max_dsp_1_U34->dout(grp_fu_274_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_GRAD_FILTER_address0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( zext_ln114_1_fu_407_p1 );

    SC_METHOD(thread_GRAD_FILTER_ce0);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_add_ln114_fu_395_p2);
    sensitive << ( zext_ln104_reg_436 );
    sensitive << ( zext_ln114_fu_391_p1 );

    SC_METHOD(thread_add_ln118_1_fu_416_p2);
    sensitive << ( zext_ln104_reg_436 );
    sensitive << ( zext_ln118_fu_412_p1 );

    SC_METHOD(thread_add_ln122_1_fu_357_p2);
    sensitive << ( zext_ln104_reg_436 );
    sensitive << ( zext_ln122_fu_353_p1 );

    SC_METHOD(thread_and_ln110_fu_341_p2);
    sensitive << ( icmp_ln110_fu_321_p2 );
    sensitive << ( xor_ln110_fu_335_p2 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln102_fu_285_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_phi_mux_c_0_phi_fu_193_p4);
    sensitive << ( c_0_reg_189 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln102_fu_285_p2 );

    SC_METHOD(thread_c_fu_315_p2);
    sensitive << ( c_0_reg_189 );

    SC_METHOD(thread_filt_grad_x_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( zext_ln122_1_fu_362_p1 );
    sensitive << ( zext_ln118_1_fu_421_p1 );

    SC_METHOD(thread_filt_grad_x_ce0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_filt_grad_x_d0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( acc_0_0_reg_227 );

    SC_METHOD(thread_filt_grad_x_we0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( and_ln110_fu_341_p2 );
    sensitive << ( and_ln110_reg_451 );
    sensitive << ( icmp_ln104_fu_309_p2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( icmp_ln112_fu_373_p2 );
    sensitive << ( icmp_ln120_fu_347_p2 );

    SC_METHOD(thread_filt_grad_y_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( zext_ln122_1_fu_362_p1 );
    sensitive << ( zext_ln118_1_fu_421_p1 );

    SC_METHOD(thread_filt_grad_y_ce0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_filt_grad_y_d0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( acc_1_0_reg_214 );

    SC_METHOD(thread_filt_grad_y_we0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( and_ln110_fu_341_p2 );
    sensitive << ( and_ln110_reg_451 );
    sensitive << ( icmp_ln104_fu_309_p2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( icmp_ln112_fu_373_p2 );
    sensitive << ( icmp_ln120_fu_347_p2 );

    SC_METHOD(thread_filt_grad_z_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( zext_ln122_1_fu_362_p1 );
    sensitive << ( zext_ln118_1_fu_421_p1 );

    SC_METHOD(thread_filt_grad_z_ce0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_filt_grad_z_d0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( acc_2_0_reg_201 );

    SC_METHOD(thread_filt_grad_z_we0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( and_ln110_fu_341_p2 );
    sensitive << ( and_ln110_reg_451 );
    sensitive << ( icmp_ln104_fu_309_p2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( icmp_ln112_fu_373_p2 );
    sensitive << ( icmp_ln120_fu_347_p2 );

    SC_METHOD(thread_grp_fu_278_p0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_phi_mux_c_0_phi_fu_193_p4 );
    sensitive << ( c_0_reg_189 );

    SC_METHOD(thread_grp_fu_278_p2);
    sensitive << ( grp_fu_278_p0 );

    SC_METHOD(thread_i_fu_379_p2);
    sensitive << ( i_0_reg_240 );

    SC_METHOD(thread_icmp_ln102_fu_285_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( r_0_reg_178 );

    SC_METHOD(thread_icmp_ln104_fu_309_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( c_0_reg_189 );

    SC_METHOD(thread_icmp_ln110_fu_321_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( icmp_ln104_fu_309_p2 );
    sensitive << ( c_0_reg_189 );

    SC_METHOD(thread_icmp_ln112_fu_373_p2);
    sensitive << ( and_ln110_reg_451 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( i_0_reg_240 );

    SC_METHOD(thread_icmp_ln120_fu_347_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( and_ln110_fu_341_p2 );
    sensitive << ( icmp_ln104_fu_309_p2 );
    sensitive << ( c_0_reg_189 );

    SC_METHOD(thread_r_fu_291_p2);
    sensitive << ( r_0_reg_178 );

    SC_METHOD(thread_sub_ln114_fu_385_p2);
    sensitive << ( c_0_reg_189 );
    sensitive << ( zext_ln112_fu_369_p1 );

    SC_METHOD(thread_tmp_18_fu_327_p3);
    sensitive << ( c_0_reg_189 );

    SC_METHOD(thread_tmp_5_fu_297_p3);
    sensitive << ( r_0_reg_178 );

    SC_METHOD(thread_xor_ln110_fu_335_p2);
    sensitive << ( tmp_18_fu_327_p3 );

    SC_METHOD(thread_y_filtered_x_address0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( zext_ln114_2_fu_400_p1 );

    SC_METHOD(thread_y_filtered_x_ce0);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_y_filtered_y_address0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( zext_ln114_2_fu_400_p1 );

    SC_METHOD(thread_y_filtered_y_ce0);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_y_filtered_z_address0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( zext_ln114_2_fu_400_p1 );

    SC_METHOD(thread_y_filtered_z_ce0);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_zext_ln104_fu_305_p1);
    sensitive << ( tmp_5_fu_297_p3 );

    SC_METHOD(thread_zext_ln112_fu_369_p1);
    sensitive << ( i_0_reg_240 );

    SC_METHOD(thread_zext_ln114_1_fu_407_p1);
    sensitive << ( i_0_reg_240 );

    SC_METHOD(thread_zext_ln114_2_fu_400_p1);
    sensitive << ( add_ln114_fu_395_p2 );

    SC_METHOD(thread_zext_ln114_fu_391_p1);
    sensitive << ( sub_ln114_fu_385_p2 );

    SC_METHOD(thread_zext_ln118_1_fu_421_p1);
    sensitive << ( add_ln118_1_fu_416_p2 );

    SC_METHOD(thread_zext_ln118_fu_412_p1);
    sensitive << ( grp_fu_278_p2 );

    SC_METHOD(thread_zext_ln122_1_fu_362_p1);
    sensitive << ( add_ln122_1_fu_357_p2 );

    SC_METHOD(thread_zext_ln122_fu_353_p1);
    sensitive << ( grp_fu_278_p2 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln102_fu_285_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( and_ln110_reg_451 );
    sensitive << ( icmp_ln104_fu_309_p2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( icmp_ln112_fu_373_p2 );

    SC_THREAD(thread_ap_var_for_const0);

    ap_CS_fsm = "000000000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "gradient_weight_x_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, filt_grad_x_address0, "(port)filt_grad_x_address0");
    sc_trace(mVcdFile, filt_grad_x_ce0, "(port)filt_grad_x_ce0");
    sc_trace(mVcdFile, filt_grad_x_we0, "(port)filt_grad_x_we0");
    sc_trace(mVcdFile, filt_grad_x_d0, "(port)filt_grad_x_d0");
    sc_trace(mVcdFile, filt_grad_y_address0, "(port)filt_grad_y_address0");
    sc_trace(mVcdFile, filt_grad_y_ce0, "(port)filt_grad_y_ce0");
    sc_trace(mVcdFile, filt_grad_y_we0, "(port)filt_grad_y_we0");
    sc_trace(mVcdFile, filt_grad_y_d0, "(port)filt_grad_y_d0");
    sc_trace(mVcdFile, filt_grad_z_address0, "(port)filt_grad_z_address0");
    sc_trace(mVcdFile, filt_grad_z_ce0, "(port)filt_grad_z_ce0");
    sc_trace(mVcdFile, filt_grad_z_we0, "(port)filt_grad_z_we0");
    sc_trace(mVcdFile, filt_grad_z_d0, "(port)filt_grad_z_d0");
    sc_trace(mVcdFile, y_filtered_x_address0, "(port)y_filtered_x_address0");
    sc_trace(mVcdFile, y_filtered_x_ce0, "(port)y_filtered_x_ce0");
    sc_trace(mVcdFile, y_filtered_x_q0, "(port)y_filtered_x_q0");
    sc_trace(mVcdFile, y_filtered_y_address0, "(port)y_filtered_y_address0");
    sc_trace(mVcdFile, y_filtered_y_ce0, "(port)y_filtered_y_ce0");
    sc_trace(mVcdFile, y_filtered_y_q0, "(port)y_filtered_y_q0");
    sc_trace(mVcdFile, y_filtered_z_address0, "(port)y_filtered_z_address0");
    sc_trace(mVcdFile, y_filtered_z_ce0, "(port)y_filtered_z_ce0");
    sc_trace(mVcdFile, y_filtered_z_q0, "(port)y_filtered_z_q0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, GRAD_FILTER_address0, "GRAD_FILTER_address0");
    sc_trace(mVcdFile, GRAD_FILTER_ce0, "GRAD_FILTER_ce0");
    sc_trace(mVcdFile, GRAD_FILTER_q0, "GRAD_FILTER_q0");
    sc_trace(mVcdFile, r_fu_291_p2, "r_fu_291_p2");
    sc_trace(mVcdFile, r_reg_431, "r_reg_431");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, zext_ln104_fu_305_p1, "zext_ln104_fu_305_p1");
    sc_trace(mVcdFile, zext_ln104_reg_436, "zext_ln104_reg_436");
    sc_trace(mVcdFile, icmp_ln102_fu_285_p2, "icmp_ln102_fu_285_p2");
    sc_trace(mVcdFile, c_fu_315_p2, "c_fu_315_p2");
    sc_trace(mVcdFile, c_reg_446, "c_reg_446");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, and_ln110_fu_341_p2, "and_ln110_fu_341_p2");
    sc_trace(mVcdFile, and_ln110_reg_451, "and_ln110_reg_451");
    sc_trace(mVcdFile, icmp_ln104_fu_309_p2, "icmp_ln104_fu_309_p2");
    sc_trace(mVcdFile, i_fu_379_p2, "i_fu_379_p2");
    sc_trace(mVcdFile, i_reg_461, "i_reg_461");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, icmp_ln112_fu_373_p2, "icmp_ln112_fu_373_p2");
    sc_trace(mVcdFile, y_filtered_x_load_reg_486, "y_filtered_x_load_reg_486");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, GRAD_FILTER_load_reg_491, "GRAD_FILTER_load_reg_491");
    sc_trace(mVcdFile, y_filtered_y_load_reg_498, "y_filtered_y_load_reg_498");
    sc_trace(mVcdFile, y_filtered_z_load_reg_503, "y_filtered_z_load_reg_503");
    sc_trace(mVcdFile, grp_fu_266_p2, "grp_fu_266_p2");
    sc_trace(mVcdFile, tmp_reg_508, "tmp_reg_508");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, grp_fu_270_p2, "grp_fu_270_p2");
    sc_trace(mVcdFile, tmp_s_reg_513, "tmp_s_reg_513");
    sc_trace(mVcdFile, grp_fu_274_p2, "grp_fu_274_p2");
    sc_trace(mVcdFile, tmp_2_reg_518, "tmp_2_reg_518");
    sc_trace(mVcdFile, grp_fu_251_p2, "grp_fu_251_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, grp_fu_256_p2, "grp_fu_256_p2");
    sc_trace(mVcdFile, grp_fu_261_p2, "grp_fu_261_p2");
    sc_trace(mVcdFile, r_0_reg_178, "r_0_reg_178");
    sc_trace(mVcdFile, ap_phi_mux_c_0_phi_fu_193_p4, "ap_phi_mux_c_0_phi_fu_193_p4");
    sc_trace(mVcdFile, c_0_reg_189, "c_0_reg_189");
    sc_trace(mVcdFile, acc_2_0_reg_201, "acc_2_0_reg_201");
    sc_trace(mVcdFile, acc_1_0_reg_214, "acc_1_0_reg_214");
    sc_trace(mVcdFile, acc_0_0_reg_227, "acc_0_0_reg_227");
    sc_trace(mVcdFile, i_0_reg_240, "i_0_reg_240");
    sc_trace(mVcdFile, zext_ln122_1_fu_362_p1, "zext_ln122_1_fu_362_p1");
    sc_trace(mVcdFile, icmp_ln120_fu_347_p2, "icmp_ln120_fu_347_p2");
    sc_trace(mVcdFile, zext_ln114_2_fu_400_p1, "zext_ln114_2_fu_400_p1");
    sc_trace(mVcdFile, zext_ln114_1_fu_407_p1, "zext_ln114_1_fu_407_p1");
    sc_trace(mVcdFile, zext_ln118_1_fu_421_p1, "zext_ln118_1_fu_421_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, grp_fu_278_p0, "grp_fu_278_p0");
    sc_trace(mVcdFile, tmp_5_fu_297_p3, "tmp_5_fu_297_p3");
    sc_trace(mVcdFile, tmp_18_fu_327_p3, "tmp_18_fu_327_p3");
    sc_trace(mVcdFile, icmp_ln110_fu_321_p2, "icmp_ln110_fu_321_p2");
    sc_trace(mVcdFile, xor_ln110_fu_335_p2, "xor_ln110_fu_335_p2");
    sc_trace(mVcdFile, grp_fu_278_p2, "grp_fu_278_p2");
    sc_trace(mVcdFile, zext_ln122_fu_353_p1, "zext_ln122_fu_353_p1");
    sc_trace(mVcdFile, add_ln122_1_fu_357_p2, "add_ln122_1_fu_357_p2");
    sc_trace(mVcdFile, zext_ln112_fu_369_p1, "zext_ln112_fu_369_p1");
    sc_trace(mVcdFile, sub_ln114_fu_385_p2, "sub_ln114_fu_385_p2");
    sc_trace(mVcdFile, zext_ln114_fu_391_p1, "zext_ln114_fu_391_p1");
    sc_trace(mVcdFile, add_ln114_fu_395_p2, "add_ln114_fu_395_p2");
    sc_trace(mVcdFile, zext_ln118_fu_412_p1, "zext_ln118_fu_412_p1");
    sc_trace(mVcdFile, add_ln118_1_fu_416_p2, "add_ln118_1_fu_416_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

gradient_weight_x::~gradient_weight_x() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete GRAD_FILTER_U;
    delete optical_flow_sw_fadd_32ns_32ns_32_4_full_dsp_1_U29;
    delete optical_flow_sw_fadd_32ns_32ns_32_4_full_dsp_1_U30;
    delete optical_flow_sw_fadd_32ns_32ns_32_4_full_dsp_1_U31;
    delete optical_flow_sw_fmul_32ns_32ns_32_3_max_dsp_1_U32;
    delete optical_flow_sw_fmul_32ns_32ns_32_3_max_dsp_1_U33;
    delete optical_flow_sw_fmul_32ns_32ns_32_3_max_dsp_1_U34;
}

void gradient_weight_x::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void gradient_weight_x::thread_ap_clk_no_reset_() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln104_fu_309_p2.read()) && 
         esl_seteq<1,1,1>(and_ln110_fu_341_p2.read(), ap_const_lv1_1))) {
        acc_0_0_reg_227 = ap_const_lv32_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        acc_0_0_reg_227 = grp_fu_251_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln104_fu_309_p2.read()) && 
         esl_seteq<1,1,1>(and_ln110_fu_341_p2.read(), ap_const_lv1_1))) {
        acc_1_0_reg_214 = ap_const_lv32_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        acc_1_0_reg_214 = grp_fu_256_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln104_fu_309_p2.read()) && 
         esl_seteq<1,1,1>(and_ln110_fu_341_p2.read(), ap_const_lv1_1))) {
        acc_2_0_reg_201 = ap_const_lv32_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        acc_2_0_reg_201 = grp_fu_261_p2.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln102_fu_285_p2.read(), ap_const_lv1_0))) {
        c_0_reg_189 = ap_const_lv11_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                (esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln112_fu_373_p2.read()) || 
                 esl_seteq<1,1,1>(ap_const_lv1_0, and_ln110_reg_451.read())))) {
        c_0_reg_189 = c_reg_446.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln104_fu_309_p2.read()) && 
         esl_seteq<1,1,1>(and_ln110_fu_341_p2.read(), ap_const_lv1_1))) {
        i_0_reg_240 = ap_const_lv3_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        i_0_reg_240 = i_reg_461.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(icmp_ln104_fu_309_p2.read(), ap_const_lv1_1))) {
        r_0_reg_178 = r_reg_431.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        r_0_reg_178 = ap_const_lv9_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        GRAD_FILTER_load_reg_491 = GRAD_FILTER_q0.read();
        y_filtered_x_load_reg_486 = y_filtered_x_q0.read();
        y_filtered_y_load_reg_498 = y_filtered_y_q0.read();
        y_filtered_z_load_reg_503 = y_filtered_z_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln104_fu_309_p2.read()))) {
        and_ln110_reg_451 = and_ln110_fu_341_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        c_reg_446 = c_fu_315_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(and_ln110_reg_451.read(), ap_const_lv1_1))) {
        i_reg_461 = i_fu_379_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        r_reg_431 = r_fu_291_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        tmp_2_reg_518 = grp_fu_274_p2.read();
        tmp_reg_508 = grp_fu_266_p2.read();
        tmp_s_reg_513 = grp_fu_270_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln102_fu_285_p2.read(), ap_const_lv1_0))) {
        zext_ln104_reg_436 = zext_ln104_fu_305_p1.read();
    }
}

void gradient_weight_x::thread_GRAD_FILTER_address0() {
    GRAD_FILTER_address0 =  (sc_lv<3>) (zext_ln114_1_fu_407_p1.read());
}

void gradient_weight_x::thread_GRAD_FILTER_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        GRAD_FILTER_ce0 = ap_const_logic_1;
    } else {
        GRAD_FILTER_ce0 = ap_const_logic_0;
    }
}

void gradient_weight_x::thread_add_ln114_fu_395_p2() {
    add_ln114_fu_395_p2 = (!zext_ln104_reg_436.read().is_01() || !zext_ln114_fu_391_p1.read().is_01())? sc_lv<20>(): (sc_biguint<20>(zext_ln104_reg_436.read()) + sc_biguint<20>(zext_ln114_fu_391_p1.read()));
}

void gradient_weight_x::thread_add_ln118_1_fu_416_p2() {
    add_ln118_1_fu_416_p2 = (!zext_ln104_reg_436.read().is_01() || !zext_ln118_fu_412_p1.read().is_01())? sc_lv<20>(): (sc_biguint<20>(zext_ln104_reg_436.read()) + sc_biguint<20>(zext_ln118_fu_412_p1.read()));
}

void gradient_weight_x::thread_add_ln122_1_fu_357_p2() {
    add_ln122_1_fu_357_p2 = (!zext_ln104_reg_436.read().is_01() || !zext_ln122_fu_353_p1.read().is_01())? sc_lv<20>(): (sc_biguint<20>(zext_ln104_reg_436.read()) + sc_biguint<20>(zext_ln122_fu_353_p1.read()));
}

void gradient_weight_x::thread_and_ln110_fu_341_p2() {
    and_ln110_fu_341_p2 = (icmp_ln110_fu_321_p2.read() & xor_ln110_fu_335_p2.read());
}

void gradient_weight_x::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void gradient_weight_x::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[11];
}

void gradient_weight_x::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void gradient_weight_x::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void gradient_weight_x::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void gradient_weight_x::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void gradient_weight_x::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void gradient_weight_x::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void gradient_weight_x::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void gradient_weight_x::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(icmp_ln102_fu_285_p2.read(), ap_const_lv1_1)))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void gradient_weight_x::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void gradient_weight_x::thread_ap_phi_mux_c_0_phi_fu_193_p4() {
    ap_phi_mux_c_0_phi_fu_193_p4 = c_0_reg_189.read();
}

void gradient_weight_x::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln102_fu_285_p2.read(), ap_const_lv1_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void gradient_weight_x::thread_c_fu_315_p2() {
    c_fu_315_p2 = (!c_0_reg_189.read().is_01() || !ap_const_lv11_1.is_01())? sc_lv<11>(): (sc_biguint<11>(c_0_reg_189.read()) + sc_biguint<11>(ap_const_lv11_1));
}

void gradient_weight_x::thread_filt_grad_x_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        filt_grad_x_address0 =  (sc_lv<19>) (zext_ln118_1_fu_421_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        filt_grad_x_address0 =  (sc_lv<19>) (zext_ln122_1_fu_362_p1.read());
    } else {
        filt_grad_x_address0 = "XXXXXXXXXXXXXXXXXXX";
    }
}

void gradient_weight_x::thread_filt_grad_x_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()))) {
        filt_grad_x_ce0 = ap_const_logic_1;
    } else {
        filt_grad_x_ce0 = ap_const_logic_0;
    }
}

void gradient_weight_x::thread_filt_grad_x_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        filt_grad_x_d0 = acc_0_0_reg_227.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        filt_grad_x_d0 = ap_const_lv32_0;
    } else {
        filt_grad_x_d0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void gradient_weight_x::thread_filt_grad_x_we0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln104_fu_309_p2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, and_ln110_fu_341_p2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln120_fu_347_p2.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
          esl_seteq<1,1,1>(and_ln110_reg_451.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln112_fu_373_p2.read())))) {
        filt_grad_x_we0 = ap_const_logic_1;
    } else {
        filt_grad_x_we0 = ap_const_logic_0;
    }
}

void gradient_weight_x::thread_filt_grad_y_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        filt_grad_y_address0 =  (sc_lv<19>) (zext_ln118_1_fu_421_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        filt_grad_y_address0 =  (sc_lv<19>) (zext_ln122_1_fu_362_p1.read());
    } else {
        filt_grad_y_address0 = "XXXXXXXXXXXXXXXXXXX";
    }
}

void gradient_weight_x::thread_filt_grad_y_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()))) {
        filt_grad_y_ce0 = ap_const_logic_1;
    } else {
        filt_grad_y_ce0 = ap_const_logic_0;
    }
}

void gradient_weight_x::thread_filt_grad_y_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        filt_grad_y_d0 = acc_1_0_reg_214.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        filt_grad_y_d0 = ap_const_lv32_0;
    } else {
        filt_grad_y_d0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void gradient_weight_x::thread_filt_grad_y_we0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln104_fu_309_p2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, and_ln110_fu_341_p2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln120_fu_347_p2.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
          esl_seteq<1,1,1>(and_ln110_reg_451.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln112_fu_373_p2.read())))) {
        filt_grad_y_we0 = ap_const_logic_1;
    } else {
        filt_grad_y_we0 = ap_const_logic_0;
    }
}

void gradient_weight_x::thread_filt_grad_z_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        filt_grad_z_address0 =  (sc_lv<19>) (zext_ln118_1_fu_421_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        filt_grad_z_address0 =  (sc_lv<19>) (zext_ln122_1_fu_362_p1.read());
    } else {
        filt_grad_z_address0 = "XXXXXXXXXXXXXXXXXXX";
    }
}

void gradient_weight_x::thread_filt_grad_z_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()))) {
        filt_grad_z_ce0 = ap_const_logic_1;
    } else {
        filt_grad_z_ce0 = ap_const_logic_0;
    }
}

void gradient_weight_x::thread_filt_grad_z_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        filt_grad_z_d0 = acc_2_0_reg_201.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        filt_grad_z_d0 = ap_const_lv32_0;
    } else {
        filt_grad_z_d0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void gradient_weight_x::thread_filt_grad_z_we0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln104_fu_309_p2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, and_ln110_fu_341_p2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln120_fu_347_p2.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
          esl_seteq<1,1,1>(and_ln110_reg_451.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln112_fu_373_p2.read())))) {
        filt_grad_z_we0 = ap_const_logic_1;
    } else {
        filt_grad_z_we0 = ap_const_logic_0;
    }
}

void gradient_weight_x::thread_grp_fu_278_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        grp_fu_278_p0 = c_0_reg_189.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        grp_fu_278_p0 = ap_phi_mux_c_0_phi_fu_193_p4.read();
    } else {
        grp_fu_278_p0 =  (sc_lv<11>) ("XXXXXXXXXXX");
    }
}

void gradient_weight_x::thread_grp_fu_278_p2() {
    grp_fu_278_p2 = (!grp_fu_278_p0.read().is_01() || !ap_const_lv11_7FD.is_01())? sc_lv<11>(): (sc_biguint<11>(grp_fu_278_p0.read()) + sc_bigint<11>(ap_const_lv11_7FD));
}

void gradient_weight_x::thread_i_fu_379_p2() {
    i_fu_379_p2 = (!i_0_reg_240.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(i_0_reg_240.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void gradient_weight_x::thread_icmp_ln102_fu_285_p2() {
    icmp_ln102_fu_285_p2 = (!r_0_reg_178.read().is_01() || !ap_const_lv9_1B4.is_01())? sc_lv<1>(): sc_lv<1>(r_0_reg_178.read() == ap_const_lv9_1B4);
}

void gradient_weight_x::thread_icmp_ln104_fu_309_p2() {
    icmp_ln104_fu_309_p2 = (!c_0_reg_189.read().is_01() || !ap_const_lv11_403.is_01())? sc_lv<1>(): sc_lv<1>(c_0_reg_189.read() == ap_const_lv11_403);
}

void gradient_weight_x::thread_icmp_ln110_fu_321_p2() {
    icmp_ln110_fu_321_p2 = (!c_0_reg_189.read().is_01() || !ap_const_lv11_5.is_01())? sc_lv<1>(): (sc_biguint<11>(c_0_reg_189.read()) > sc_biguint<11>(ap_const_lv11_5));
}

void gradient_weight_x::thread_icmp_ln112_fu_373_p2() {
    icmp_ln112_fu_373_p2 = (!i_0_reg_240.read().is_01() || !ap_const_lv3_7.is_01())? sc_lv<1>(): sc_lv<1>(i_0_reg_240.read() == ap_const_lv3_7);
}

void gradient_weight_x::thread_icmp_ln120_fu_347_p2() {
    icmp_ln120_fu_347_p2 = (!c_0_reg_189.read().is_01() || !ap_const_lv11_2.is_01())? sc_lv<1>(): (sc_biguint<11>(c_0_reg_189.read()) > sc_biguint<11>(ap_const_lv11_2));
}

void gradient_weight_x::thread_r_fu_291_p2() {
    r_fu_291_p2 = (!r_0_reg_178.read().is_01() || !ap_const_lv9_1.is_01())? sc_lv<9>(): (sc_biguint<9>(r_0_reg_178.read()) + sc_biguint<9>(ap_const_lv9_1));
}

void gradient_weight_x::thread_sub_ln114_fu_385_p2() {
    sub_ln114_fu_385_p2 = (!c_0_reg_189.read().is_01() || !zext_ln112_fu_369_p1.read().is_01())? sc_lv<11>(): (sc_biguint<11>(c_0_reg_189.read()) - sc_biguint<11>(zext_ln112_fu_369_p1.read()));
}

void gradient_weight_x::thread_tmp_18_fu_327_p3() {
    tmp_18_fu_327_p3 = c_0_reg_189.read().range(10, 10);
}

void gradient_weight_x::thread_tmp_5_fu_297_p3() {
    tmp_5_fu_297_p3 = esl_concat<9,10>(r_0_reg_178.read(), ap_const_lv10_0);
}

void gradient_weight_x::thread_xor_ln110_fu_335_p2() {
    xor_ln110_fu_335_p2 = (tmp_18_fu_327_p3.read() ^ ap_const_lv1_1);
}

void gradient_weight_x::thread_y_filtered_x_address0() {
    y_filtered_x_address0 =  (sc_lv<19>) (zext_ln114_2_fu_400_p1.read());
}

void gradient_weight_x::thread_y_filtered_x_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        y_filtered_x_ce0 = ap_const_logic_1;
    } else {
        y_filtered_x_ce0 = ap_const_logic_0;
    }
}

void gradient_weight_x::thread_y_filtered_y_address0() {
    y_filtered_y_address0 =  (sc_lv<19>) (zext_ln114_2_fu_400_p1.read());
}

void gradient_weight_x::thread_y_filtered_y_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        y_filtered_y_ce0 = ap_const_logic_1;
    } else {
        y_filtered_y_ce0 = ap_const_logic_0;
    }
}

void gradient_weight_x::thread_y_filtered_z_address0() {
    y_filtered_z_address0 =  (sc_lv<19>) (zext_ln114_2_fu_400_p1.read());
}

void gradient_weight_x::thread_y_filtered_z_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        y_filtered_z_ce0 = ap_const_logic_1;
    } else {
        y_filtered_z_ce0 = ap_const_logic_0;
    }
}

void gradient_weight_x::thread_zext_ln104_fu_305_p1() {
    zext_ln104_fu_305_p1 = esl_zext<20,19>(tmp_5_fu_297_p3.read());
}

void gradient_weight_x::thread_zext_ln112_fu_369_p1() {
    zext_ln112_fu_369_p1 = esl_zext<11,3>(i_0_reg_240.read());
}

void gradient_weight_x::thread_zext_ln114_1_fu_407_p1() {
    zext_ln114_1_fu_407_p1 = esl_zext<64,3>(i_0_reg_240.read());
}

void gradient_weight_x::thread_zext_ln114_2_fu_400_p1() {
    zext_ln114_2_fu_400_p1 = esl_zext<64,20>(add_ln114_fu_395_p2.read());
}

void gradient_weight_x::thread_zext_ln114_fu_391_p1() {
    zext_ln114_fu_391_p1 = esl_zext<20,11>(sub_ln114_fu_385_p2.read());
}

void gradient_weight_x::thread_zext_ln118_1_fu_421_p1() {
    zext_ln118_1_fu_421_p1 = esl_zext<64,20>(add_ln118_1_fu_416_p2.read());
}

void gradient_weight_x::thread_zext_ln118_fu_412_p1() {
    zext_ln118_fu_412_p1 = esl_zext<20,11>(grp_fu_278_p2.read());
}

void gradient_weight_x::thread_zext_ln122_1_fu_362_p1() {
    zext_ln122_1_fu_362_p1 = esl_zext<64,20>(add_ln122_1_fu_357_p2.read());
}

void gradient_weight_x::thread_zext_ln122_fu_353_p1() {
    zext_ln122_fu_353_p1 = esl_zext<20,11>(grp_fu_278_p2.read());
}

void gradient_weight_x::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln102_fu_285_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(icmp_ln104_fu_309_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && (esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln112_fu_373_p2.read()) || 
  esl_seteq<1,1,1>(ap_const_lv1_0, and_ln110_reg_451.read())))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state12;
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<12>) ("XXXXXXXXXXXX");
            break;
    }
}

}

