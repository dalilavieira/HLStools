// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "gradient_weight_y.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic gradient_weight_y::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic gradient_weight_y::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<12> gradient_weight_y::ap_ST_fsm_state1 = "1";
const sc_lv<12> gradient_weight_y::ap_ST_fsm_state2 = "10";
const sc_lv<12> gradient_weight_y::ap_ST_fsm_state3 = "100";
const sc_lv<12> gradient_weight_y::ap_ST_fsm_state4 = "1000";
const sc_lv<12> gradient_weight_y::ap_ST_fsm_state5 = "10000";
const sc_lv<12> gradient_weight_y::ap_ST_fsm_state6 = "100000";
const sc_lv<12> gradient_weight_y::ap_ST_fsm_state7 = "1000000";
const sc_lv<12> gradient_weight_y::ap_ST_fsm_state8 = "10000000";
const sc_lv<12> gradient_weight_y::ap_ST_fsm_state9 = "100000000";
const sc_lv<12> gradient_weight_y::ap_ST_fsm_state10 = "1000000000";
const sc_lv<12> gradient_weight_y::ap_ST_fsm_state11 = "10000000000";
const sc_lv<12> gradient_weight_y::ap_ST_fsm_state12 = "100000000000";
const sc_lv<32> gradient_weight_y::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> gradient_weight_y::ap_const_lv32_1 = "1";
const sc_lv<1> gradient_weight_y::ap_const_lv1_0 = "0";
const sc_lv<32> gradient_weight_y::ap_const_lv32_2 = "10";
const sc_lv<1> gradient_weight_y::ap_const_lv1_1 = "1";
const sc_lv<32> gradient_weight_y::ap_const_lv32_3 = "11";
const sc_lv<32> gradient_weight_y::ap_const_lv32_4 = "100";
const sc_lv<32> gradient_weight_y::ap_const_lv32_7 = "111";
const sc_lv<32> gradient_weight_y::ap_const_lv32_B = "1011";
const sc_lv<9> gradient_weight_y::ap_const_lv9_0 = "000000000";
const sc_lv<11> gradient_weight_y::ap_const_lv11_0 = "00000000000";
const sc_lv<3> gradient_weight_y::ap_const_lv3_0 = "000";
const sc_lv<32> gradient_weight_y::ap_const_lv32_8 = "1000";
const sc_lv<32> gradient_weight_y::ap_const_lv32_5 = "101";
const sc_lv<9> gradient_weight_y::ap_const_lv9_1B7 = "110110111";
const sc_lv<9> gradient_weight_y::ap_const_lv9_1 = "1";
const sc_lv<9> gradient_weight_y::ap_const_lv9_5 = "101";
const sc_lv<9> gradient_weight_y::ap_const_lv9_1B4 = "110110100";
const sc_lv<9> gradient_weight_y::ap_const_lv9_2 = "10";
const sc_lv<10> gradient_weight_y::ap_const_lv10_3FD = "1111111101";
const sc_lv<10> gradient_weight_y::ap_const_lv10_0 = "0000000000";
const sc_lv<11> gradient_weight_y::ap_const_lv11_400 = "10000000000";
const sc_lv<11> gradient_weight_y::ap_const_lv11_1 = "1";
const sc_lv<3> gradient_weight_y::ap_const_lv3_7 = "111";
const sc_lv<3> gradient_weight_y::ap_const_lv3_1 = "1";
const bool gradient_weight_y::ap_const_boolean_1 = true;

gradient_weight_y::gradient_weight_y(sc_module_name name) : sc_module(name), mVcdFile(0) {
    GRAD_FILTER_U = new gradient_weight_y_GRAD_FILTER("GRAD_FILTER_U");
    GRAD_FILTER_U->clk(ap_clk);
    GRAD_FILTER_U->reset(ap_rst);
    GRAD_FILTER_U->address0(GRAD_FILTER_address0);
    GRAD_FILTER_U->ce0(GRAD_FILTER_ce0);
    GRAD_FILTER_U->q0(GRAD_FILTER_q0);
    optical_flow_sw_fadd_32ns_32ns_32_4_full_dsp_1_U16 = new optical_flow_sw_fadd_32ns_32ns_32_4_full_dsp_1<1,4,32,32,32>("optical_flow_sw_fadd_32ns_32ns_32_4_full_dsp_1_U16");
    optical_flow_sw_fadd_32ns_32ns_32_4_full_dsp_1_U16->clk(ap_clk);
    optical_flow_sw_fadd_32ns_32ns_32_4_full_dsp_1_U16->reset(ap_rst);
    optical_flow_sw_fadd_32ns_32ns_32_4_full_dsp_1_U16->din0(acc_0_0_reg_222);
    optical_flow_sw_fadd_32ns_32ns_32_4_full_dsp_1_U16->din1(tmp_reg_522);
    optical_flow_sw_fadd_32ns_32ns_32_4_full_dsp_1_U16->ce(ap_var_for_const0);
    optical_flow_sw_fadd_32ns_32ns_32_4_full_dsp_1_U16->dout(grp_fu_246_p2);
    optical_flow_sw_fadd_32ns_32ns_32_4_full_dsp_1_U17 = new optical_flow_sw_fadd_32ns_32ns_32_4_full_dsp_1<1,4,32,32,32>("optical_flow_sw_fadd_32ns_32ns_32_4_full_dsp_1_U17");
    optical_flow_sw_fadd_32ns_32ns_32_4_full_dsp_1_U17->clk(ap_clk);
    optical_flow_sw_fadd_32ns_32ns_32_4_full_dsp_1_U17->reset(ap_rst);
    optical_flow_sw_fadd_32ns_32ns_32_4_full_dsp_1_U17->din0(acc_1_0_reg_209);
    optical_flow_sw_fadd_32ns_32ns_32_4_full_dsp_1_U17->din1(tmp_s_reg_527);
    optical_flow_sw_fadd_32ns_32ns_32_4_full_dsp_1_U17->ce(ap_var_for_const0);
    optical_flow_sw_fadd_32ns_32ns_32_4_full_dsp_1_U17->dout(grp_fu_251_p2);
    optical_flow_sw_fadd_32ns_32ns_32_4_full_dsp_1_U18 = new optical_flow_sw_fadd_32ns_32ns_32_4_full_dsp_1<1,4,32,32,32>("optical_flow_sw_fadd_32ns_32ns_32_4_full_dsp_1_U18");
    optical_flow_sw_fadd_32ns_32ns_32_4_full_dsp_1_U18->clk(ap_clk);
    optical_flow_sw_fadd_32ns_32ns_32_4_full_dsp_1_U18->reset(ap_rst);
    optical_flow_sw_fadd_32ns_32ns_32_4_full_dsp_1_U18->din0(acc_2_0_reg_196);
    optical_flow_sw_fadd_32ns_32ns_32_4_full_dsp_1_U18->din1(tmp_1_reg_532);
    optical_flow_sw_fadd_32ns_32ns_32_4_full_dsp_1_U18->ce(ap_var_for_const0);
    optical_flow_sw_fadd_32ns_32ns_32_4_full_dsp_1_U18->dout(grp_fu_256_p2);
    optical_flow_sw_fmul_32ns_32ns_32_3_max_dsp_1_U19 = new optical_flow_sw_fmul_32ns_32ns_32_3_max_dsp_1<1,3,32,32,32>("optical_flow_sw_fmul_32ns_32ns_32_3_max_dsp_1_U19");
    optical_flow_sw_fmul_32ns_32ns_32_3_max_dsp_1_U19->clk(ap_clk);
    optical_flow_sw_fmul_32ns_32ns_32_3_max_dsp_1_U19->reset(ap_rst);
    optical_flow_sw_fmul_32ns_32ns_32_3_max_dsp_1_U19->din0(gradient_x_load_reg_500);
    optical_flow_sw_fmul_32ns_32ns_32_3_max_dsp_1_U19->din1(GRAD_FILTER_load_reg_505);
    optical_flow_sw_fmul_32ns_32ns_32_3_max_dsp_1_U19->ce(ap_var_for_const0);
    optical_flow_sw_fmul_32ns_32ns_32_3_max_dsp_1_U19->dout(grp_fu_261_p2);
    optical_flow_sw_fmul_32ns_32ns_32_3_max_dsp_1_U20 = new optical_flow_sw_fmul_32ns_32ns_32_3_max_dsp_1<1,3,32,32,32>("optical_flow_sw_fmul_32ns_32ns_32_3_max_dsp_1_U20");
    optical_flow_sw_fmul_32ns_32ns_32_3_max_dsp_1_U20->clk(ap_clk);
    optical_flow_sw_fmul_32ns_32ns_32_3_max_dsp_1_U20->reset(ap_rst);
    optical_flow_sw_fmul_32ns_32ns_32_3_max_dsp_1_U20->din0(gradient_y_load_reg_512);
    optical_flow_sw_fmul_32ns_32ns_32_3_max_dsp_1_U20->din1(GRAD_FILTER_load_reg_505);
    optical_flow_sw_fmul_32ns_32ns_32_3_max_dsp_1_U20->ce(ap_var_for_const0);
    optical_flow_sw_fmul_32ns_32ns_32_3_max_dsp_1_U20->dout(grp_fu_265_p2);
    optical_flow_sw_fmul_32ns_32ns_32_3_max_dsp_1_U21 = new optical_flow_sw_fmul_32ns_32ns_32_3_max_dsp_1<1,3,32,32,32>("optical_flow_sw_fmul_32ns_32ns_32_3_max_dsp_1_U21");
    optical_flow_sw_fmul_32ns_32ns_32_3_max_dsp_1_U21->clk(ap_clk);
    optical_flow_sw_fmul_32ns_32ns_32_3_max_dsp_1_U21->reset(ap_rst);
    optical_flow_sw_fmul_32ns_32ns_32_3_max_dsp_1_U21->din0(gradient_z_load_reg_517);
    optical_flow_sw_fmul_32ns_32ns_32_3_max_dsp_1_U21->din1(GRAD_FILTER_load_reg_505);
    optical_flow_sw_fmul_32ns_32ns_32_3_max_dsp_1_U21->ce(ap_var_for_const0);
    optical_flow_sw_fmul_32ns_32ns_32_3_max_dsp_1_U21->dout(grp_fu_269_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_GRAD_FILTER_address0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( zext_ln84_2_fu_417_p1 );

    SC_METHOD(thread_GRAD_FILTER_ce0);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_add_ln84_fu_405_p2);
    sensitive << ( zext_ln88_reg_452 );
    sensitive << ( zext_ln84_fu_401_p1 );

    SC_METHOD(thread_add_ln88_fu_359_p2);
    sensitive << ( tmp_3_reg_438 );
    sensitive << ( zext_ln88_fu_355_p1 );

    SC_METHOD(thread_add_ln92_1_fu_343_p2);
    sensitive << ( tmp_3_reg_438 );
    sensitive << ( zext_ln92_fu_339_p1 );

    SC_METHOD(thread_add_ln92_fu_313_p2);
    sensitive << ( zext_ln72_fu_273_p1 );

    SC_METHOD(thread_and_ln80_fu_301_p2);
    sensitive << ( icmp_ln80_fu_289_p2 );
    sensitive << ( icmp_ln80_1_fu_295_p2 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln72_fu_277_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln72_fu_277_p2 );

    SC_METHOD(thread_c_fu_333_p2);
    sensitive << ( c_0_reg_185 );

    SC_METHOD(thread_filt_grad_x_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( filt_grad_x_addr_1_reg_457 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( sext_ln92_fu_348_p1 );

    SC_METHOD(thread_filt_grad_x_ce0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_filt_grad_x_d0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( acc_0_0_reg_222 );

    SC_METHOD(thread_filt_grad_x_we0);
    sensitive << ( and_ln80_reg_430 );
    sensitive << ( icmp_ln90_reg_434 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( icmp_ln74_fu_327_p2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( icmp_ln82_fu_375_p2 );

    SC_METHOD(thread_filt_grad_y_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( filt_grad_y_addr_1_reg_462 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( sext_ln92_fu_348_p1 );

    SC_METHOD(thread_filt_grad_y_ce0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_filt_grad_y_d0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( acc_1_0_reg_209 );

    SC_METHOD(thread_filt_grad_y_we0);
    sensitive << ( and_ln80_reg_430 );
    sensitive << ( icmp_ln90_reg_434 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( icmp_ln74_fu_327_p2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( icmp_ln82_fu_375_p2 );

    SC_METHOD(thread_filt_grad_z_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( filt_grad_z_addr_1_reg_467 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( sext_ln92_fu_348_p1 );

    SC_METHOD(thread_filt_grad_z_ce0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_filt_grad_z_d0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( acc_2_0_reg_196 );

    SC_METHOD(thread_filt_grad_z_we0);
    sensitive << ( and_ln80_reg_430 );
    sensitive << ( icmp_ln90_reg_434 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( icmp_ln74_fu_327_p2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( icmp_ln82_fu_375_p2 );

    SC_METHOD(thread_gradient_x_address0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( zext_ln84_1_fu_410_p1 );

    SC_METHOD(thread_gradient_x_ce0);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_gradient_y_address0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( zext_ln84_1_fu_410_p1 );

    SC_METHOD(thread_gradient_y_ce0);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_gradient_z_address0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( zext_ln84_1_fu_410_p1 );

    SC_METHOD(thread_gradient_z_ce0);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_i_fu_381_p2);
    sensitive << ( i_0_reg_235 );

    SC_METHOD(thread_icmp_ln72_fu_277_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( r_0_reg_173 );

    SC_METHOD(thread_icmp_ln74_fu_327_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( c_0_reg_185 );

    SC_METHOD(thread_icmp_ln80_1_fu_295_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln72_fu_277_p2 );
    sensitive << ( r_0_reg_173 );

    SC_METHOD(thread_icmp_ln80_fu_289_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln72_fu_277_p2 );
    sensitive << ( r_0_reg_173 );

    SC_METHOD(thread_icmp_ln82_fu_375_p2);
    sensitive << ( and_ln80_reg_430 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( i_0_reg_235 );

    SC_METHOD(thread_icmp_ln90_fu_307_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln72_fu_277_p2 );
    sensitive << ( r_0_reg_173 );

    SC_METHOD(thread_r_fu_283_p2);
    sensitive << ( r_0_reg_173 );

    SC_METHOD(thread_sext_ln88_fu_364_p1);
    sensitive << ( add_ln88_fu_359_p2 );

    SC_METHOD(thread_sext_ln92_fu_348_p1);
    sensitive << ( add_ln92_1_fu_343_p2 );

    SC_METHOD(thread_sub_ln84_fu_387_p2);
    sensitive << ( r_0_reg_173 );
    sensitive << ( zext_ln82_fu_371_p1 );

    SC_METHOD(thread_tmp_3_fu_319_p3);
    sensitive << ( add_ln92_fu_313_p2 );

    SC_METHOD(thread_tmp_4_fu_393_p3);
    sensitive << ( sub_ln84_fu_387_p2 );

    SC_METHOD(thread_zext_ln72_fu_273_p1);
    sensitive << ( r_0_reg_173 );

    SC_METHOD(thread_zext_ln82_fu_371_p1);
    sensitive << ( i_0_reg_235 );

    SC_METHOD(thread_zext_ln84_1_fu_410_p1);
    sensitive << ( add_ln84_fu_405_p2 );

    SC_METHOD(thread_zext_ln84_2_fu_417_p1);
    sensitive << ( i_0_reg_235 );

    SC_METHOD(thread_zext_ln84_fu_401_p1);
    sensitive << ( tmp_4_fu_393_p3 );

    SC_METHOD(thread_zext_ln88_fu_355_p1);
    sensitive << ( c_0_reg_185 );

    SC_METHOD(thread_zext_ln92_fu_339_p1);
    sensitive << ( c_0_reg_185 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( and_ln80_reg_430 );
    sensitive << ( icmp_ln72_fu_277_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( icmp_ln74_fu_327_p2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( icmp_ln82_fu_375_p2 );

    SC_THREAD(thread_ap_var_for_const0);

    ap_CS_fsm = "000000000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "gradient_weight_y_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, filt_grad_x_address0, "(port)filt_grad_x_address0");
    sc_trace(mVcdFile, filt_grad_x_ce0, "(port)filt_grad_x_ce0");
    sc_trace(mVcdFile, filt_grad_x_we0, "(port)filt_grad_x_we0");
    sc_trace(mVcdFile, filt_grad_x_d0, "(port)filt_grad_x_d0");
    sc_trace(mVcdFile, filt_grad_y_address0, "(port)filt_grad_y_address0");
    sc_trace(mVcdFile, filt_grad_y_ce0, "(port)filt_grad_y_ce0");
    sc_trace(mVcdFile, filt_grad_y_we0, "(port)filt_grad_y_we0");
    sc_trace(mVcdFile, filt_grad_y_d0, "(port)filt_grad_y_d0");
    sc_trace(mVcdFile, filt_grad_z_address0, "(port)filt_grad_z_address0");
    sc_trace(mVcdFile, filt_grad_z_ce0, "(port)filt_grad_z_ce0");
    sc_trace(mVcdFile, filt_grad_z_we0, "(port)filt_grad_z_we0");
    sc_trace(mVcdFile, filt_grad_z_d0, "(port)filt_grad_z_d0");
    sc_trace(mVcdFile, gradient_x_address0, "(port)gradient_x_address0");
    sc_trace(mVcdFile, gradient_x_ce0, "(port)gradient_x_ce0");
    sc_trace(mVcdFile, gradient_x_q0, "(port)gradient_x_q0");
    sc_trace(mVcdFile, gradient_y_address0, "(port)gradient_y_address0");
    sc_trace(mVcdFile, gradient_y_ce0, "(port)gradient_y_ce0");
    sc_trace(mVcdFile, gradient_y_q0, "(port)gradient_y_q0");
    sc_trace(mVcdFile, gradient_z_address0, "(port)gradient_z_address0");
    sc_trace(mVcdFile, gradient_z_ce0, "(port)gradient_z_ce0");
    sc_trace(mVcdFile, gradient_z_q0, "(port)gradient_z_q0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, GRAD_FILTER_address0, "GRAD_FILTER_address0");
    sc_trace(mVcdFile, GRAD_FILTER_ce0, "GRAD_FILTER_ce0");
    sc_trace(mVcdFile, GRAD_FILTER_q0, "GRAD_FILTER_q0");
    sc_trace(mVcdFile, r_fu_283_p2, "r_fu_283_p2");
    sc_trace(mVcdFile, r_reg_425, "r_reg_425");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, and_ln80_fu_301_p2, "and_ln80_fu_301_p2");
    sc_trace(mVcdFile, and_ln80_reg_430, "and_ln80_reg_430");
    sc_trace(mVcdFile, icmp_ln72_fu_277_p2, "icmp_ln72_fu_277_p2");
    sc_trace(mVcdFile, icmp_ln90_fu_307_p2, "icmp_ln90_fu_307_p2");
    sc_trace(mVcdFile, icmp_ln90_reg_434, "icmp_ln90_reg_434");
    sc_trace(mVcdFile, tmp_3_fu_319_p3, "tmp_3_fu_319_p3");
    sc_trace(mVcdFile, tmp_3_reg_438, "tmp_3_reg_438");
    sc_trace(mVcdFile, c_fu_333_p2, "c_fu_333_p2");
    sc_trace(mVcdFile, c_reg_447, "c_reg_447");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, zext_ln88_fu_355_p1, "zext_ln88_fu_355_p1");
    sc_trace(mVcdFile, zext_ln88_reg_452, "zext_ln88_reg_452");
    sc_trace(mVcdFile, icmp_ln74_fu_327_p2, "icmp_ln74_fu_327_p2");
    sc_trace(mVcdFile, filt_grad_x_addr_1_reg_457, "filt_grad_x_addr_1_reg_457");
    sc_trace(mVcdFile, filt_grad_y_addr_1_reg_462, "filt_grad_y_addr_1_reg_462");
    sc_trace(mVcdFile, filt_grad_z_addr_1_reg_467, "filt_grad_z_addr_1_reg_467");
    sc_trace(mVcdFile, i_fu_381_p2, "i_fu_381_p2");
    sc_trace(mVcdFile, i_reg_475, "i_reg_475");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, icmp_ln82_fu_375_p2, "icmp_ln82_fu_375_p2");
    sc_trace(mVcdFile, gradient_x_load_reg_500, "gradient_x_load_reg_500");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, GRAD_FILTER_load_reg_505, "GRAD_FILTER_load_reg_505");
    sc_trace(mVcdFile, gradient_y_load_reg_512, "gradient_y_load_reg_512");
    sc_trace(mVcdFile, gradient_z_load_reg_517, "gradient_z_load_reg_517");
    sc_trace(mVcdFile, grp_fu_261_p2, "grp_fu_261_p2");
    sc_trace(mVcdFile, tmp_reg_522, "tmp_reg_522");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, grp_fu_265_p2, "grp_fu_265_p2");
    sc_trace(mVcdFile, tmp_s_reg_527, "tmp_s_reg_527");
    sc_trace(mVcdFile, grp_fu_269_p2, "grp_fu_269_p2");
    sc_trace(mVcdFile, tmp_1_reg_532, "tmp_1_reg_532");
    sc_trace(mVcdFile, grp_fu_246_p2, "grp_fu_246_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, grp_fu_251_p2, "grp_fu_251_p2");
    sc_trace(mVcdFile, grp_fu_256_p2, "grp_fu_256_p2");
    sc_trace(mVcdFile, r_0_reg_173, "r_0_reg_173");
    sc_trace(mVcdFile, c_0_reg_185, "c_0_reg_185");
    sc_trace(mVcdFile, acc_2_0_reg_196, "acc_2_0_reg_196");
    sc_trace(mVcdFile, acc_1_0_reg_209, "acc_1_0_reg_209");
    sc_trace(mVcdFile, acc_0_0_reg_222, "acc_0_0_reg_222");
    sc_trace(mVcdFile, i_0_reg_235, "i_0_reg_235");
    sc_trace(mVcdFile, sext_ln92_fu_348_p1, "sext_ln92_fu_348_p1");
    sc_trace(mVcdFile, sext_ln88_fu_364_p1, "sext_ln88_fu_364_p1");
    sc_trace(mVcdFile, zext_ln84_1_fu_410_p1, "zext_ln84_1_fu_410_p1");
    sc_trace(mVcdFile, zext_ln84_2_fu_417_p1, "zext_ln84_2_fu_417_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, icmp_ln80_fu_289_p2, "icmp_ln80_fu_289_p2");
    sc_trace(mVcdFile, icmp_ln80_1_fu_295_p2, "icmp_ln80_1_fu_295_p2");
    sc_trace(mVcdFile, zext_ln72_fu_273_p1, "zext_ln72_fu_273_p1");
    sc_trace(mVcdFile, add_ln92_fu_313_p2, "add_ln92_fu_313_p2");
    sc_trace(mVcdFile, zext_ln92_fu_339_p1, "zext_ln92_fu_339_p1");
    sc_trace(mVcdFile, add_ln92_1_fu_343_p2, "add_ln92_1_fu_343_p2");
    sc_trace(mVcdFile, add_ln88_fu_359_p2, "add_ln88_fu_359_p2");
    sc_trace(mVcdFile, zext_ln82_fu_371_p1, "zext_ln82_fu_371_p1");
    sc_trace(mVcdFile, sub_ln84_fu_387_p2, "sub_ln84_fu_387_p2");
    sc_trace(mVcdFile, tmp_4_fu_393_p3, "tmp_4_fu_393_p3");
    sc_trace(mVcdFile, zext_ln84_fu_401_p1, "zext_ln84_fu_401_p1");
    sc_trace(mVcdFile, add_ln84_fu_405_p2, "add_ln84_fu_405_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

gradient_weight_y::~gradient_weight_y() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete GRAD_FILTER_U;
    delete optical_flow_sw_fadd_32ns_32ns_32_4_full_dsp_1_U16;
    delete optical_flow_sw_fadd_32ns_32ns_32_4_full_dsp_1_U17;
    delete optical_flow_sw_fadd_32ns_32ns_32_4_full_dsp_1_U18;
    delete optical_flow_sw_fmul_32ns_32ns_32_3_max_dsp_1_U19;
    delete optical_flow_sw_fmul_32ns_32ns_32_3_max_dsp_1_U20;
    delete optical_flow_sw_fmul_32ns_32ns_32_3_max_dsp_1_U21;
}

void gradient_weight_y::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void gradient_weight_y::thread_ap_clk_no_reset_() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln74_fu_327_p2.read()) && 
         esl_seteq<1,1,1>(and_ln80_reg_430.read(), ap_const_lv1_1))) {
        acc_0_0_reg_222 = ap_const_lv32_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        acc_0_0_reg_222 = grp_fu_246_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln74_fu_327_p2.read()) && 
         esl_seteq<1,1,1>(and_ln80_reg_430.read(), ap_const_lv1_1))) {
        acc_1_0_reg_209 = ap_const_lv32_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        acc_1_0_reg_209 = grp_fu_251_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln74_fu_327_p2.read()) && 
         esl_seteq<1,1,1>(and_ln80_reg_430.read(), ap_const_lv1_1))) {
        acc_2_0_reg_196 = ap_const_lv32_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        acc_2_0_reg_196 = grp_fu_256_p2.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln72_fu_277_p2.read(), ap_const_lv1_0))) {
        c_0_reg_185 = ap_const_lv11_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                (esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln82_fu_375_p2.read()) || 
                 esl_seteq<1,1,1>(and_ln80_reg_430.read(), ap_const_lv1_0)))) {
        c_0_reg_185 = c_reg_447.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln74_fu_327_p2.read()) && 
         esl_seteq<1,1,1>(and_ln80_reg_430.read(), ap_const_lv1_1))) {
        i_0_reg_235 = ap_const_lv3_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        i_0_reg_235 = i_reg_475.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(icmp_ln74_fu_327_p2.read(), ap_const_lv1_1))) {
        r_0_reg_173 = r_reg_425.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        r_0_reg_173 = ap_const_lv9_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        GRAD_FILTER_load_reg_505 = GRAD_FILTER_q0.read();
        gradient_x_load_reg_500 = gradient_x_q0.read();
        gradient_y_load_reg_512 = gradient_y_q0.read();
        gradient_z_load_reg_517 = gradient_z_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln72_fu_277_p2.read(), ap_const_lv1_0))) {
        and_ln80_reg_430 = and_ln80_fu_301_p2.read();
        icmp_ln90_reg_434 = icmp_ln90_fu_307_p2.read();
        tmp_3_reg_438 = tmp_3_fu_319_p3.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        c_reg_447 = c_fu_333_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln74_fu_327_p2.read()) && esl_seteq<1,1,1>(and_ln80_reg_430.read(), ap_const_lv1_1))) {
        filt_grad_x_addr_1_reg_457 =  (sc_lv<19>) (sext_ln88_fu_364_p1.read());
        filt_grad_y_addr_1_reg_462 =  (sc_lv<19>) (sext_ln88_fu_364_p1.read());
        filt_grad_z_addr_1_reg_467 =  (sc_lv<19>) (sext_ln88_fu_364_p1.read());
        zext_ln88_reg_452 = zext_ln88_fu_355_p1.read();
    }
    if ((esl_seteq<1,1,1>(and_ln80_reg_430.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()))) {
        i_reg_475 = i_fu_381_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        r_reg_425 = r_fu_283_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        tmp_1_reg_532 = grp_fu_269_p2.read();
        tmp_reg_522 = grp_fu_261_p2.read();
        tmp_s_reg_527 = grp_fu_265_p2.read();
    }
}

void gradient_weight_y::thread_GRAD_FILTER_address0() {
    GRAD_FILTER_address0 =  (sc_lv<3>) (zext_ln84_2_fu_417_p1.read());
}

void gradient_weight_y::thread_GRAD_FILTER_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        GRAD_FILTER_ce0 = ap_const_logic_1;
    } else {
        GRAD_FILTER_ce0 = ap_const_logic_0;
    }
}

void gradient_weight_y::thread_add_ln84_fu_405_p2() {
    add_ln84_fu_405_p2 = (!zext_ln88_reg_452.read().is_01() || !zext_ln84_fu_401_p1.read().is_01())? sc_lv<20>(): (sc_biguint<20>(zext_ln88_reg_452.read()) + sc_biguint<20>(zext_ln84_fu_401_p1.read()));
}

void gradient_weight_y::thread_add_ln88_fu_359_p2() {
    add_ln88_fu_359_p2 = (!tmp_3_reg_438.read().is_01() || !zext_ln88_fu_355_p1.read().is_01())? sc_lv<20>(): (sc_biguint<20>(tmp_3_reg_438.read()) + sc_biguint<20>(zext_ln88_fu_355_p1.read()));
}

void gradient_weight_y::thread_add_ln92_1_fu_343_p2() {
    add_ln92_1_fu_343_p2 = (!tmp_3_reg_438.read().is_01() || !zext_ln92_fu_339_p1.read().is_01())? sc_lv<20>(): (sc_biguint<20>(tmp_3_reg_438.read()) + sc_biguint<20>(zext_ln92_fu_339_p1.read()));
}

void gradient_weight_y::thread_add_ln92_fu_313_p2() {
    add_ln92_fu_313_p2 = (!zext_ln72_fu_273_p1.read().is_01() || !ap_const_lv10_3FD.is_01())? sc_lv<10>(): (sc_biguint<10>(zext_ln72_fu_273_p1.read()) + sc_bigint<10>(ap_const_lv10_3FD));
}

void gradient_weight_y::thread_and_ln80_fu_301_p2() {
    and_ln80_fu_301_p2 = (icmp_ln80_fu_289_p2.read() & icmp_ln80_1_fu_295_p2.read());
}

void gradient_weight_y::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void gradient_weight_y::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[11];
}

void gradient_weight_y::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void gradient_weight_y::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void gradient_weight_y::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void gradient_weight_y::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void gradient_weight_y::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void gradient_weight_y::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void gradient_weight_y::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void gradient_weight_y::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(icmp_ln72_fu_277_p2.read(), ap_const_lv1_1)))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void gradient_weight_y::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void gradient_weight_y::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln72_fu_277_p2.read(), ap_const_lv1_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void gradient_weight_y::thread_c_fu_333_p2() {
    c_fu_333_p2 = (!c_0_reg_185.read().is_01() || !ap_const_lv11_1.is_01())? sc_lv<11>(): (sc_biguint<11>(c_0_reg_185.read()) + sc_biguint<11>(ap_const_lv11_1));
}

void gradient_weight_y::thread_filt_grad_x_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        filt_grad_x_address0 = filt_grad_x_addr_1_reg_457.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        filt_grad_x_address0 =  (sc_lv<19>) (sext_ln92_fu_348_p1.read());
    } else {
        filt_grad_x_address0 = "XXXXXXXXXXXXXXXXXXX";
    }
}

void gradient_weight_y::thread_filt_grad_x_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()))) {
        filt_grad_x_ce0 = ap_const_logic_1;
    } else {
        filt_grad_x_ce0 = ap_const_logic_0;
    }
}

void gradient_weight_y::thread_filt_grad_x_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        filt_grad_x_d0 = acc_0_0_reg_222.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        filt_grad_x_d0 = ap_const_lv32_0;
    } else {
        filt_grad_x_d0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void gradient_weight_y::thread_filt_grad_x_we0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln74_fu_327_p2.read()) && 
          esl_seteq<1,1,1>(and_ln80_reg_430.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(icmp_ln90_reg_434.read(), ap_const_lv1_1)) || 
         (esl_seteq<1,1,1>(and_ln80_reg_430.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln82_fu_375_p2.read())))) {
        filt_grad_x_we0 = ap_const_logic_1;
    } else {
        filt_grad_x_we0 = ap_const_logic_0;
    }
}

void gradient_weight_y::thread_filt_grad_y_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        filt_grad_y_address0 = filt_grad_y_addr_1_reg_462.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        filt_grad_y_address0 =  (sc_lv<19>) (sext_ln92_fu_348_p1.read());
    } else {
        filt_grad_y_address0 = "XXXXXXXXXXXXXXXXXXX";
    }
}

void gradient_weight_y::thread_filt_grad_y_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()))) {
        filt_grad_y_ce0 = ap_const_logic_1;
    } else {
        filt_grad_y_ce0 = ap_const_logic_0;
    }
}

void gradient_weight_y::thread_filt_grad_y_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        filt_grad_y_d0 = acc_1_0_reg_209.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        filt_grad_y_d0 = ap_const_lv32_0;
    } else {
        filt_grad_y_d0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void gradient_weight_y::thread_filt_grad_y_we0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln74_fu_327_p2.read()) && 
          esl_seteq<1,1,1>(and_ln80_reg_430.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(icmp_ln90_reg_434.read(), ap_const_lv1_1)) || 
         (esl_seteq<1,1,1>(and_ln80_reg_430.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln82_fu_375_p2.read())))) {
        filt_grad_y_we0 = ap_const_logic_1;
    } else {
        filt_grad_y_we0 = ap_const_logic_0;
    }
}

void gradient_weight_y::thread_filt_grad_z_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        filt_grad_z_address0 = filt_grad_z_addr_1_reg_467.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        filt_grad_z_address0 =  (sc_lv<19>) (sext_ln92_fu_348_p1.read());
    } else {
        filt_grad_z_address0 = "XXXXXXXXXXXXXXXXXXX";
    }
}

void gradient_weight_y::thread_filt_grad_z_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()))) {
        filt_grad_z_ce0 = ap_const_logic_1;
    } else {
        filt_grad_z_ce0 = ap_const_logic_0;
    }
}

void gradient_weight_y::thread_filt_grad_z_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        filt_grad_z_d0 = acc_2_0_reg_196.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        filt_grad_z_d0 = ap_const_lv32_0;
    } else {
        filt_grad_z_d0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void gradient_weight_y::thread_filt_grad_z_we0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln74_fu_327_p2.read()) && 
          esl_seteq<1,1,1>(and_ln80_reg_430.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(icmp_ln90_reg_434.read(), ap_const_lv1_1)) || 
         (esl_seteq<1,1,1>(and_ln80_reg_430.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln82_fu_375_p2.read())))) {
        filt_grad_z_we0 = ap_const_logic_1;
    } else {
        filt_grad_z_we0 = ap_const_logic_0;
    }
}

void gradient_weight_y::thread_gradient_x_address0() {
    gradient_x_address0 =  (sc_lv<19>) (zext_ln84_1_fu_410_p1.read());
}

void gradient_weight_y::thread_gradient_x_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        gradient_x_ce0 = ap_const_logic_1;
    } else {
        gradient_x_ce0 = ap_const_logic_0;
    }
}

void gradient_weight_y::thread_gradient_y_address0() {
    gradient_y_address0 =  (sc_lv<19>) (zext_ln84_1_fu_410_p1.read());
}

void gradient_weight_y::thread_gradient_y_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        gradient_y_ce0 = ap_const_logic_1;
    } else {
        gradient_y_ce0 = ap_const_logic_0;
    }
}

void gradient_weight_y::thread_gradient_z_address0() {
    gradient_z_address0 =  (sc_lv<19>) (zext_ln84_1_fu_410_p1.read());
}

void gradient_weight_y::thread_gradient_z_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        gradient_z_ce0 = ap_const_logic_1;
    } else {
        gradient_z_ce0 = ap_const_logic_0;
    }
}

void gradient_weight_y::thread_i_fu_381_p2() {
    i_fu_381_p2 = (!i_0_reg_235.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(i_0_reg_235.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void gradient_weight_y::thread_icmp_ln72_fu_277_p2() {
    icmp_ln72_fu_277_p2 = (!r_0_reg_173.read().is_01() || !ap_const_lv9_1B7.is_01())? sc_lv<1>(): sc_lv<1>(r_0_reg_173.read() == ap_const_lv9_1B7);
}

void gradient_weight_y::thread_icmp_ln74_fu_327_p2() {
    icmp_ln74_fu_327_p2 = (!c_0_reg_185.read().is_01() || !ap_const_lv11_400.is_01())? sc_lv<1>(): sc_lv<1>(c_0_reg_185.read() == ap_const_lv11_400);
}

void gradient_weight_y::thread_icmp_ln80_1_fu_295_p2() {
    icmp_ln80_1_fu_295_p2 = (!r_0_reg_173.read().is_01() || !ap_const_lv9_1B4.is_01())? sc_lv<1>(): (sc_biguint<9>(r_0_reg_173.read()) < sc_biguint<9>(ap_const_lv9_1B4));
}

void gradient_weight_y::thread_icmp_ln80_fu_289_p2() {
    icmp_ln80_fu_289_p2 = (!r_0_reg_173.read().is_01() || !ap_const_lv9_5.is_01())? sc_lv<1>(): (sc_biguint<9>(r_0_reg_173.read()) > sc_biguint<9>(ap_const_lv9_5));
}

void gradient_weight_y::thread_icmp_ln82_fu_375_p2() {
    icmp_ln82_fu_375_p2 = (!i_0_reg_235.read().is_01() || !ap_const_lv3_7.is_01())? sc_lv<1>(): sc_lv<1>(i_0_reg_235.read() == ap_const_lv3_7);
}

void gradient_weight_y::thread_icmp_ln90_fu_307_p2() {
    icmp_ln90_fu_307_p2 = (!r_0_reg_173.read().is_01() || !ap_const_lv9_2.is_01())? sc_lv<1>(): (sc_biguint<9>(r_0_reg_173.read()) > sc_biguint<9>(ap_const_lv9_2));
}

void gradient_weight_y::thread_r_fu_283_p2() {
    r_fu_283_p2 = (!r_0_reg_173.read().is_01() || !ap_const_lv9_1.is_01())? sc_lv<9>(): (sc_biguint<9>(r_0_reg_173.read()) + sc_biguint<9>(ap_const_lv9_1));
}

void gradient_weight_y::thread_sext_ln88_fu_364_p1() {
    sext_ln88_fu_364_p1 = esl_sext<64,20>(add_ln88_fu_359_p2.read());
}

void gradient_weight_y::thread_sext_ln92_fu_348_p1() {
    sext_ln92_fu_348_p1 = esl_sext<64,20>(add_ln92_1_fu_343_p2.read());
}

void gradient_weight_y::thread_sub_ln84_fu_387_p2() {
    sub_ln84_fu_387_p2 = (!r_0_reg_173.read().is_01() || !zext_ln82_fu_371_p1.read().is_01())? sc_lv<9>(): (sc_biguint<9>(r_0_reg_173.read()) - sc_biguint<9>(zext_ln82_fu_371_p1.read()));
}

void gradient_weight_y::thread_tmp_3_fu_319_p3() {
    tmp_3_fu_319_p3 = esl_concat<10,10>(add_ln92_fu_313_p2.read(), ap_const_lv10_0);
}

void gradient_weight_y::thread_tmp_4_fu_393_p3() {
    tmp_4_fu_393_p3 = esl_concat<9,10>(sub_ln84_fu_387_p2.read(), ap_const_lv10_0);
}

void gradient_weight_y::thread_zext_ln72_fu_273_p1() {
    zext_ln72_fu_273_p1 = esl_zext<10,9>(r_0_reg_173.read());
}

void gradient_weight_y::thread_zext_ln82_fu_371_p1() {
    zext_ln82_fu_371_p1 = esl_zext<9,3>(i_0_reg_235.read());
}

void gradient_weight_y::thread_zext_ln84_1_fu_410_p1() {
    zext_ln84_1_fu_410_p1 = esl_zext<64,20>(add_ln84_fu_405_p2.read());
}

void gradient_weight_y::thread_zext_ln84_2_fu_417_p1() {
    zext_ln84_2_fu_417_p1 = esl_zext<64,3>(i_0_reg_235.read());
}

void gradient_weight_y::thread_zext_ln84_fu_401_p1() {
    zext_ln84_fu_401_p1 = esl_zext<20,19>(tmp_4_fu_393_p3.read());
}

void gradient_weight_y::thread_zext_ln88_fu_355_p1() {
    zext_ln88_fu_355_p1 = esl_zext<20,11>(c_0_reg_185.read());
}

void gradient_weight_y::thread_zext_ln92_fu_339_p1() {
    zext_ln92_fu_339_p1 = esl_zext<20,11>(c_0_reg_185.read());
}

void gradient_weight_y::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln72_fu_277_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(icmp_ln74_fu_327_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && (esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln82_fu_375_p2.read()) || 
  esl_seteq<1,1,1>(and_ln80_reg_430.read(), ap_const_lv1_0)))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state12;
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<12>) ("XXXXXXXXXXXX");
            break;
    }
}

}

