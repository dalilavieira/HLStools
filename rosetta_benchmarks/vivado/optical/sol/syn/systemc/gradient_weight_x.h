// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _gradient_weight_x_HH_
#define _gradient_weight_x_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "optical_flow_sw_fadd_32ns_32ns_32_4_full_dsp_1.h"
#include "optical_flow_sw_fmul_32ns_32ns_32_3_max_dsp_1.h"
#include "gradient_weight_y_GRAD_FILTER.h"

namespace ap_rtl {

struct gradient_weight_x : public sc_module {
    // Port declarations 27
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<19> > filt_grad_x_address0;
    sc_out< sc_logic > filt_grad_x_ce0;
    sc_out< sc_logic > filt_grad_x_we0;
    sc_out< sc_lv<32> > filt_grad_x_d0;
    sc_out< sc_lv<19> > filt_grad_y_address0;
    sc_out< sc_logic > filt_grad_y_ce0;
    sc_out< sc_logic > filt_grad_y_we0;
    sc_out< sc_lv<32> > filt_grad_y_d0;
    sc_out< sc_lv<19> > filt_grad_z_address0;
    sc_out< sc_logic > filt_grad_z_ce0;
    sc_out< sc_logic > filt_grad_z_we0;
    sc_out< sc_lv<32> > filt_grad_z_d0;
    sc_out< sc_lv<19> > y_filtered_x_address0;
    sc_out< sc_logic > y_filtered_x_ce0;
    sc_in< sc_lv<32> > y_filtered_x_q0;
    sc_out< sc_lv<19> > y_filtered_y_address0;
    sc_out< sc_logic > y_filtered_y_ce0;
    sc_in< sc_lv<32> > y_filtered_y_q0;
    sc_out< sc_lv<19> > y_filtered_z_address0;
    sc_out< sc_logic > y_filtered_z_ce0;
    sc_in< sc_lv<32> > y_filtered_z_q0;
    sc_signal< sc_logic > ap_var_for_const0;


    // Module declarations
    gradient_weight_x(sc_module_name name);
    SC_HAS_PROCESS(gradient_weight_x);

    ~gradient_weight_x();

    sc_trace_file* mVcdFile;

    gradient_weight_y_GRAD_FILTER* GRAD_FILTER_U;
    optical_flow_sw_fadd_32ns_32ns_32_4_full_dsp_1<1,4,32,32,32>* optical_flow_sw_fadd_32ns_32ns_32_4_full_dsp_1_U29;
    optical_flow_sw_fadd_32ns_32ns_32_4_full_dsp_1<1,4,32,32,32>* optical_flow_sw_fadd_32ns_32ns_32_4_full_dsp_1_U30;
    optical_flow_sw_fadd_32ns_32ns_32_4_full_dsp_1<1,4,32,32,32>* optical_flow_sw_fadd_32ns_32ns_32_4_full_dsp_1_U31;
    optical_flow_sw_fmul_32ns_32ns_32_3_max_dsp_1<1,3,32,32,32>* optical_flow_sw_fmul_32ns_32ns_32_3_max_dsp_1_U32;
    optical_flow_sw_fmul_32ns_32ns_32_3_max_dsp_1<1,3,32,32,32>* optical_flow_sw_fmul_32ns_32ns_32_3_max_dsp_1_U33;
    optical_flow_sw_fmul_32ns_32ns_32_3_max_dsp_1<1,3,32,32,32>* optical_flow_sw_fmul_32ns_32ns_32_3_max_dsp_1_U34;
    sc_signal< sc_lv<12> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<3> > GRAD_FILTER_address0;
    sc_signal< sc_logic > GRAD_FILTER_ce0;
    sc_signal< sc_lv<32> > GRAD_FILTER_q0;
    sc_signal< sc_lv<9> > r_fu_291_p2;
    sc_signal< sc_lv<9> > r_reg_431;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<20> > zext_ln104_fu_305_p1;
    sc_signal< sc_lv<20> > zext_ln104_reg_436;
    sc_signal< sc_lv<1> > icmp_ln102_fu_285_p2;
    sc_signal< sc_lv<11> > c_fu_315_p2;
    sc_signal< sc_lv<11> > c_reg_446;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<1> > and_ln110_fu_341_p2;
    sc_signal< sc_lv<1> > and_ln110_reg_451;
    sc_signal< sc_lv<1> > icmp_ln104_fu_309_p2;
    sc_signal< sc_lv<3> > i_fu_379_p2;
    sc_signal< sc_lv<3> > i_reg_461;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<1> > icmp_ln112_fu_373_p2;
    sc_signal< sc_lv<32> > y_filtered_x_load_reg_486;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<32> > GRAD_FILTER_load_reg_491;
    sc_signal< sc_lv<32> > y_filtered_y_load_reg_498;
    sc_signal< sc_lv<32> > y_filtered_z_load_reg_503;
    sc_signal< sc_lv<32> > grp_fu_266_p2;
    sc_signal< sc_lv<32> > tmp_reg_508;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<32> > grp_fu_270_p2;
    sc_signal< sc_lv<32> > tmp_s_reg_513;
    sc_signal< sc_lv<32> > grp_fu_274_p2;
    sc_signal< sc_lv<32> > tmp_2_reg_518;
    sc_signal< sc_lv<32> > grp_fu_251_p2;
    sc_signal< sc_logic > ap_CS_fsm_state12;
    sc_signal< sc_lv<32> > grp_fu_256_p2;
    sc_signal< sc_lv<32> > grp_fu_261_p2;
    sc_signal< sc_lv<9> > r_0_reg_178;
    sc_signal< sc_lv<11> > ap_phi_mux_c_0_phi_fu_193_p4;
    sc_signal< sc_lv<11> > c_0_reg_189;
    sc_signal< sc_lv<32> > acc_2_0_reg_201;
    sc_signal< sc_lv<32> > acc_1_0_reg_214;
    sc_signal< sc_lv<32> > acc_0_0_reg_227;
    sc_signal< sc_lv<3> > i_0_reg_240;
    sc_signal< sc_lv<64> > zext_ln122_1_fu_362_p1;
    sc_signal< sc_lv<1> > icmp_ln120_fu_347_p2;
    sc_signal< sc_lv<64> > zext_ln114_2_fu_400_p1;
    sc_signal< sc_lv<64> > zext_ln114_1_fu_407_p1;
    sc_signal< sc_lv<64> > zext_ln118_1_fu_421_p1;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<11> > grp_fu_278_p0;
    sc_signal< sc_lv<19> > tmp_5_fu_297_p3;
    sc_signal< sc_lv<1> > tmp_18_fu_327_p3;
    sc_signal< sc_lv<1> > icmp_ln110_fu_321_p2;
    sc_signal< sc_lv<1> > xor_ln110_fu_335_p2;
    sc_signal< sc_lv<11> > grp_fu_278_p2;
    sc_signal< sc_lv<20> > zext_ln122_fu_353_p1;
    sc_signal< sc_lv<20> > add_ln122_1_fu_357_p2;
    sc_signal< sc_lv<11> > zext_ln112_fu_369_p1;
    sc_signal< sc_lv<11> > sub_ln114_fu_385_p2;
    sc_signal< sc_lv<20> > zext_ln114_fu_391_p1;
    sc_signal< sc_lv<20> > add_ln114_fu_395_p2;
    sc_signal< sc_lv<20> > zext_ln118_fu_412_p1;
    sc_signal< sc_lv<20> > add_ln118_1_fu_416_p2;
    sc_signal< sc_lv<12> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<12> ap_ST_fsm_state1;
    static const sc_lv<12> ap_ST_fsm_state2;
    static const sc_lv<12> ap_ST_fsm_state3;
    static const sc_lv<12> ap_ST_fsm_state4;
    static const sc_lv<12> ap_ST_fsm_state5;
    static const sc_lv<12> ap_ST_fsm_state6;
    static const sc_lv<12> ap_ST_fsm_state7;
    static const sc_lv<12> ap_ST_fsm_state8;
    static const sc_lv<12> ap_ST_fsm_state9;
    static const sc_lv<12> ap_ST_fsm_state10;
    static const sc_lv<12> ap_ST_fsm_state11;
    static const sc_lv<12> ap_ST_fsm_state12;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_B;
    static const sc_lv<9> ap_const_lv9_0;
    static const sc_lv<11> ap_const_lv11_0;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<11> ap_const_lv11_7FD;
    static const sc_lv<9> ap_const_lv9_1B4;
    static const sc_lv<9> ap_const_lv9_1;
    static const sc_lv<10> ap_const_lv10_0;
    static const sc_lv<11> ap_const_lv11_403;
    static const sc_lv<11> ap_const_lv11_1;
    static const sc_lv<11> ap_const_lv11_5;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<11> ap_const_lv11_2;
    static const sc_lv<3> ap_const_lv3_7;
    static const sc_lv<3> ap_const_lv3_1;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_GRAD_FILTER_address0();
    void thread_GRAD_FILTER_ce0();
    void thread_add_ln114_fu_395_p2();
    void thread_add_ln118_1_fu_416_p2();
    void thread_add_ln122_1_fu_357_p2();
    void thread_and_ln110_fu_341_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state12();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state9();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_phi_mux_c_0_phi_fu_193_p4();
    void thread_ap_ready();
    void thread_c_fu_315_p2();
    void thread_filt_grad_x_address0();
    void thread_filt_grad_x_ce0();
    void thread_filt_grad_x_d0();
    void thread_filt_grad_x_we0();
    void thread_filt_grad_y_address0();
    void thread_filt_grad_y_ce0();
    void thread_filt_grad_y_d0();
    void thread_filt_grad_y_we0();
    void thread_filt_grad_z_address0();
    void thread_filt_grad_z_ce0();
    void thread_filt_grad_z_d0();
    void thread_filt_grad_z_we0();
    void thread_grp_fu_278_p0();
    void thread_grp_fu_278_p2();
    void thread_i_fu_379_p2();
    void thread_icmp_ln102_fu_285_p2();
    void thread_icmp_ln104_fu_309_p2();
    void thread_icmp_ln110_fu_321_p2();
    void thread_icmp_ln112_fu_373_p2();
    void thread_icmp_ln120_fu_347_p2();
    void thread_r_fu_291_p2();
    void thread_sub_ln114_fu_385_p2();
    void thread_tmp_18_fu_327_p3();
    void thread_tmp_5_fu_297_p3();
    void thread_xor_ln110_fu_335_p2();
    void thread_y_filtered_x_address0();
    void thread_y_filtered_x_ce0();
    void thread_y_filtered_y_address0();
    void thread_y_filtered_y_ce0();
    void thread_y_filtered_z_address0();
    void thread_y_filtered_z_ce0();
    void thread_zext_ln104_fu_305_p1();
    void thread_zext_ln112_fu_369_p1();
    void thread_zext_ln114_1_fu_407_p1();
    void thread_zext_ln114_2_fu_400_p1();
    void thread_zext_ln114_fu_391_p1();
    void thread_zext_ln118_1_fu_421_p1();
    void thread_zext_ln118_fu_412_p1();
    void thread_zext_ln122_1_fu_362_p1();
    void thread_zext_ln122_fu_353_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
