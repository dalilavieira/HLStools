// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _flow_calc_HH_
#define _flow_calc_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "optical_flow_sw_fsub_32ns_32ns_32_4_full_dsp_1.h"
#include "optical_flow_sw_fmul_32ns_32ns_32_3_max_dsp_1.h"
#include "optical_flow_sw_fdiv_32ns_32ns_32_9_1.h"

namespace ap_rtl {

struct flow_calc : public sc_module {
    // Port declarations 29
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<19> > output_x_address0;
    sc_out< sc_logic > output_x_ce0;
    sc_out< sc_logic > output_x_we0;
    sc_out< sc_lv<32> > output_x_d0;
    sc_out< sc_lv<19> > output_y_address0;
    sc_out< sc_logic > output_y_ce0;
    sc_out< sc_logic > output_y_we0;
    sc_out< sc_lv<32> > output_y_d0;
    sc_out< sc_lv<19> > tensor_val_0_address0;
    sc_out< sc_logic > tensor_val_0_ce0;
    sc_in< sc_lv<32> > tensor_val_0_q0;
    sc_out< sc_lv<19> > tensor_val_1_address0;
    sc_out< sc_logic > tensor_val_1_ce0;
    sc_in< sc_lv<32> > tensor_val_1_q0;
    sc_out< sc_lv<19> > tensor_val_3_address0;
    sc_out< sc_logic > tensor_val_3_ce0;
    sc_in< sc_lv<32> > tensor_val_3_q0;
    sc_out< sc_lv<19> > tensor_val_5_address0;
    sc_out< sc_logic > tensor_val_5_ce0;
    sc_in< sc_lv<32> > tensor_val_5_q0;
    sc_out< sc_lv<19> > tensor_val_4_address0;
    sc_out< sc_logic > tensor_val_4_ce0;
    sc_in< sc_lv<32> > tensor_val_4_q0;
    sc_signal< sc_logic > ap_var_for_const0;


    // Module declarations
    flow_calc(sc_module_name name);
    SC_HAS_PROCESS(flow_calc);

    ~flow_calc();

    sc_trace_file* mVcdFile;

    optical_flow_sw_fsub_32ns_32ns_32_4_full_dsp_1<1,4,32,32,32>* optical_flow_sw_fsub_32ns_32ns_32_4_full_dsp_1_U54;
    optical_flow_sw_fsub_32ns_32ns_32_4_full_dsp_1<1,4,32,32,32>* optical_flow_sw_fsub_32ns_32ns_32_4_full_dsp_1_U55;
    optical_flow_sw_fsub_32ns_32ns_32_4_full_dsp_1<1,4,32,32,32>* optical_flow_sw_fsub_32ns_32ns_32_4_full_dsp_1_U56;
    optical_flow_sw_fmul_32ns_32ns_32_3_max_dsp_1<1,3,32,32,32>* optical_flow_sw_fmul_32ns_32ns_32_3_max_dsp_1_U57;
    optical_flow_sw_fmul_32ns_32ns_32_3_max_dsp_1<1,3,32,32,32>* optical_flow_sw_fmul_32ns_32ns_32_3_max_dsp_1_U58;
    optical_flow_sw_fmul_32ns_32ns_32_3_max_dsp_1<1,3,32,32,32>* optical_flow_sw_fmul_32ns_32ns_32_3_max_dsp_1_U59;
    optical_flow_sw_fmul_32ns_32ns_32_3_max_dsp_1<1,3,32,32,32>* optical_flow_sw_fmul_32ns_32ns_32_3_max_dsp_1_U60;
    optical_flow_sw_fmul_32ns_32ns_32_3_max_dsp_1<1,3,32,32,32>* optical_flow_sw_fmul_32ns_32ns_32_3_max_dsp_1_U61;
    optical_flow_sw_fmul_32ns_32ns_32_3_max_dsp_1<1,3,32,32,32>* optical_flow_sw_fmul_32ns_32ns_32_3_max_dsp_1_U62;
    optical_flow_sw_fdiv_32ns_32ns_32_9_1<1,9,32,32,32>* optical_flow_sw_fdiv_32ns_32ns_32_9_1_U63;
    optical_flow_sw_fdiv_32ns_32ns_32_9_1<1,9,32,32,32>* optical_flow_sw_fdiv_32ns_32ns_32_9_1_U64;
    sc_signal< sc_lv<21> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<9> > r_fu_231_p2;
    sc_signal< sc_lv<9> > r_reg_345;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<20> > zext_ln220_fu_267_p1;
    sc_signal< sc_lv<20> > zext_ln220_reg_350;
    sc_signal< sc_lv<1> > icmp_ln216_fu_225_p2;
    sc_signal< sc_lv<1> > and_ln220_fu_271_p2;
    sc_signal< sc_lv<1> > and_ln220_reg_355;
    sc_signal< sc_lv<11> > c_fu_283_p2;
    sc_signal< sc_lv<11> > c_reg_363;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<1> > and_ln220_2_fu_317_p2;
    sc_signal< sc_lv<1> > and_ln220_2_reg_368;
    sc_signal< sc_lv<1> > icmp_ln218_fu_277_p2;
    sc_signal< sc_lv<19> > output_x_addr_reg_397;
    sc_signal< sc_lv<19> > output_y_addr_reg_402;
    sc_signal< sc_lv<32> > tensor_val_0_load_reg_407;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<32> > tensor_val_1_load_reg_413;
    sc_signal< sc_lv<32> > tensor_val_3_load_reg_419;
    sc_signal< sc_lv<32> > tensor_val_5_load_reg_427;
    sc_signal< sc_lv<32> > tensor_val_4_load_reg_433;
    sc_signal< sc_lv<32> > grp_fu_193_p2;
    sc_signal< sc_lv<32> > tmp_reg_439;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<32> > grp_fu_197_p2;
    sc_signal< sc_lv<32> > tmp_s_reg_444;
    sc_signal< sc_lv<32> > grp_fu_201_p2;
    sc_signal< sc_lv<32> > tmp_3_reg_449;
    sc_signal< sc_lv<32> > grp_fu_205_p2;
    sc_signal< sc_lv<32> > tmp_4_reg_454;
    sc_signal< sc_lv<32> > grp_fu_209_p2;
    sc_signal< sc_lv<32> > tmp_7_reg_459;
    sc_signal< sc_lv<32> > grp_fu_213_p2;
    sc_signal< sc_lv<32> > tmp_8_reg_464;
    sc_signal< sc_lv<32> > grp_fu_181_p2;
    sc_signal< sc_lv<32> > denom_reg_469;
    sc_signal< sc_logic > ap_CS_fsm_state11;
    sc_signal< sc_lv<32> > grp_fu_185_p2;
    sc_signal< sc_lv<32> > tmp_5_reg_475;
    sc_signal< sc_lv<32> > grp_fu_189_p2;
    sc_signal< sc_lv<32> > tmp_9_reg_480;
    sc_signal< sc_lv<32> > grp_fu_217_p2;
    sc_signal< sc_lv<32> > tmp_6_reg_485;
    sc_signal< sc_logic > ap_CS_fsm_state20;
    sc_signal< sc_lv<32> > grp_fu_221_p2;
    sc_signal< sc_lv<32> > tmp_1_reg_490;
    sc_signal< sc_lv<9> > r_0_reg_147;
    sc_signal< sc_lv<11> > c_0_reg_158;
    sc_signal< sc_logic > ap_CS_fsm_state21;
    sc_signal< sc_lv<32> > ap_phi_mux_storemerge_phi_fu_173_p4;
    sc_signal< sc_lv<32> > storemerge_reg_169;
    sc_signal< sc_lv<64> > zext_ln223_1_fu_331_p1;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_logic > ap_CS_fsm_state12;
    sc_signal< sc_lv<8> > tmp_20_fu_237_p4;
    sc_signal< sc_lv<19> > tmp_10_fu_259_p3;
    sc_signal< sc_lv<1> > icmp_ln220_fu_247_p2;
    sc_signal< sc_lv<1> > icmp_ln220_1_fu_253_p2;
    sc_signal< sc_lv<10> > tmp_21_fu_289_p4;
    sc_signal< sc_lv<1> > icmp_ln220_2_fu_299_p2;
    sc_signal< sc_lv<1> > icmp_ln220_3_fu_305_p2;
    sc_signal< sc_lv<1> > and_ln220_1_fu_311_p2;
    sc_signal< sc_lv<20> > zext_ln223_fu_322_p1;
    sc_signal< sc_lv<20> > add_ln223_fu_326_p2;
    sc_signal< sc_lv<21> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<21> ap_ST_fsm_state1;
    static const sc_lv<21> ap_ST_fsm_state2;
    static const sc_lv<21> ap_ST_fsm_state3;
    static const sc_lv<21> ap_ST_fsm_state4;
    static const sc_lv<21> ap_ST_fsm_state5;
    static const sc_lv<21> ap_ST_fsm_state6;
    static const sc_lv<21> ap_ST_fsm_state7;
    static const sc_lv<21> ap_ST_fsm_state8;
    static const sc_lv<21> ap_ST_fsm_state9;
    static const sc_lv<21> ap_ST_fsm_state10;
    static const sc_lv<21> ap_ST_fsm_state11;
    static const sc_lv<21> ap_ST_fsm_state12;
    static const sc_lv<21> ap_ST_fsm_state13;
    static const sc_lv<21> ap_ST_fsm_state14;
    static const sc_lv<21> ap_ST_fsm_state15;
    static const sc_lv<21> ap_ST_fsm_state16;
    static const sc_lv<21> ap_ST_fsm_state17;
    static const sc_lv<21> ap_ST_fsm_state18;
    static const sc_lv<21> ap_ST_fsm_state19;
    static const sc_lv<21> ap_ST_fsm_state20;
    static const sc_lv<21> ap_ST_fsm_state21;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<32> ap_const_lv32_13;
    static const sc_lv<9> ap_const_lv9_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_14;
    static const sc_lv<11> ap_const_lv11_0;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_B;
    static const sc_lv<9> ap_const_lv9_1B4;
    static const sc_lv<9> ap_const_lv9_1;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<9> ap_const_lv9_1B2;
    static const sc_lv<10> ap_const_lv10_0;
    static const sc_lv<11> ap_const_lv11_400;
    static const sc_lv<11> ap_const_lv11_1;
    static const sc_lv<11> ap_const_lv11_3FE;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_add_ln223_fu_326_p2();
    void thread_and_ln220_1_fu_311_p2();
    void thread_and_ln220_2_fu_317_p2();
    void thread_and_ln220_fu_271_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state11();
    void thread_ap_CS_fsm_state12();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state20();
    void thread_ap_CS_fsm_state21();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_phi_mux_storemerge_phi_fu_173_p4();
    void thread_ap_ready();
    void thread_c_fu_283_p2();
    void thread_icmp_ln216_fu_225_p2();
    void thread_icmp_ln218_fu_277_p2();
    void thread_icmp_ln220_1_fu_253_p2();
    void thread_icmp_ln220_2_fu_299_p2();
    void thread_icmp_ln220_3_fu_305_p2();
    void thread_icmp_ln220_fu_247_p2();
    void thread_output_x_address0();
    void thread_output_x_ce0();
    void thread_output_x_d0();
    void thread_output_x_we0();
    void thread_output_y_address0();
    void thread_output_y_ce0();
    void thread_output_y_d0();
    void thread_output_y_we0();
    void thread_r_fu_231_p2();
    void thread_tensor_val_0_address0();
    void thread_tensor_val_0_ce0();
    void thread_tensor_val_1_address0();
    void thread_tensor_val_1_ce0();
    void thread_tensor_val_3_address0();
    void thread_tensor_val_3_ce0();
    void thread_tensor_val_4_address0();
    void thread_tensor_val_4_ce0();
    void thread_tensor_val_5_address0();
    void thread_tensor_val_5_ce0();
    void thread_tmp_10_fu_259_p3();
    void thread_tmp_20_fu_237_p4();
    void thread_tmp_21_fu_289_p4();
    void thread_zext_ln220_fu_267_p1();
    void thread_zext_ln223_1_fu_331_p1();
    void thread_zext_ln223_fu_322_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
