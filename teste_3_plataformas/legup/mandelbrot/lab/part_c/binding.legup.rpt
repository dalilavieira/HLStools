//----------------------------------------------------------------------------//
// Generated by LegUp High-Level Synthesis Tool Version 3.0 (http://legup.org)
// Compiled: Tue Jul 15 15:43:09 2014
// University of Toronto
// For research and academic purposes only. Commercial use is prohibited.
// Please send bugs to: legup@eecg.toronto.edu
// Date: Thu Feb 13 11:08:49 2020
//----------------------------------------------------------------------------//

--------------------------------------------------------------------------------
Function: main
--------------------------------------------------------------------------------
Function unit type:           Number Required               
mem_dual_port                 2                             
--------------------------------------------------------------------------------
Function: legup_pthreadpoll
--------------------------------------------------------------------------------
Function unit type:           Number Required               
--------------------------------------------------------------------------------
Function: mandelbrot
--------------------------------------------------------------------------------
Function unit type:           Number Required               
mem_dual_port                 2                             
--------------------------------------------------------------------------------
Function: legup_pthreadcall_mandelbrot
--------------------------------------------------------------------------------
Function unit type:           Number Required               
mem_dual_port                 2                             

Running Bipartite Weighted Matching on function: mandelbrot
State: LEGUP_F_mandelbrot_BB_entry
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  mandelbrot_mem_dual_port_0    mandelbrot_mem_dual_port_1    
  %1 = load i32* %0, align 4 (idx: 0)             10                            10                            
  %4 = load i32* %3, align 4 (idx: 1)             10                            10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  mandelbrot_mem_dual_port_0    mandelbrot_mem_dual_port_1    
  %1 = load i32* %0, align 4 (idx: 0)             1                             0                             
  %4 = load i32* %3, align 4 (idx: 1)             0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %1 = load i32* %0, align 4 (idx: 0) -> mandelbrot_mem_dual_port_0 (mux inputs: 1)
  %4 = load i32* %3, align 4 (idx: 1) -> mandelbrot_mem_dual_port_1 (mux inputs: 1)
State: LEGUP_F_mandelbrot_BB_bb4
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  mandelbrot_mem_dual_port_0    mandelbrot_mem_dual_port_1    
  volatile store i8 %21, i8* %... (idx: 0)        21                            21                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  mandelbrot_mem_dual_port_0    mandelbrot_mem_dual_port_1    
  volatile store i8 %21, i8* %... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  volatile store i8 %21, i8* %... (idx: 0) -> mandelbrot_mem_dual_port_0 (mux inputs: 3)

Running Bipartite Weighted Matching on function: legup_pthreadcall_mandelbrot
State: LEGUP_F_legup_pthreadcall_mandelbrot_BB_0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  legup_pthreadcall_mandelbrot_mem_dual_port_0legup_pthreadcall_mandelbrot_mem_dual_port_1
  store i32 %threadIDValue, i3... (idx: 0)        0                             0                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  legup_pthreadcall_mandelbrot_mem_dual_port_0legup_pthreadcall_mandelbrot_mem_dual_port_1
  store i32 %threadIDValue, i3... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %threadIDValue, i3... (idx: 0) -> legup_pthreadcall_mandelbrot_mem_dual_port_0 (mux inputs: 0)
State: LEGUP_F_legup_pthreadcall_mandelbrot_BB_0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  legup_pthreadcall_mandelbrot_mem_dual_port_0legup_pthreadcall_mandelbrot_mem_dual_port_1
  %2 = load i32* %1, align 4 (idx: 0)             10                            10                            
  %5 = load i32* %4, align 4 (idx: 1)             10                            10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  legup_pthreadcall_mandelbrot_mem_dual_port_0legup_pthreadcall_mandelbrot_mem_dual_port_1
  %2 = load i32* %1, align 4 (idx: 0)             1                             0                             
  %5 = load i32* %4, align 4 (idx: 1)             0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %2 = load i32* %1, align 4 (idx: 0) -> legup_pthreadcall_mandelbrot_mem_dual_port_0 (mux inputs: 1)
  %5 = load i32* %4, align 4 (idx: 1) -> legup_pthreadcall_mandelbrot_mem_dual_port_1 (mux inputs: 1)
State: LEGUP_F_legup_pthreadcall_mandelbrot_BB_bb4_i
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  volatile store i8 %22, i8* %... can share an output register with another operation already assigned to legup_pthreadcall_mandelbrot_mem_dual_port_0
                                                  legup_pthreadcall_mandelbrot_mem_dual_port_0legup_pthreadcall_mandelbrot_mem_dual_port_1
  volatile store i8 %22, i8* %... (idx: 0)        16                            21                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  legup_pthreadcall_mandelbrot_mem_dual_port_0legup_pthreadcall_mandelbrot_mem_dual_port_1
  volatile store i8 %22, i8* %... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  volatile store i8 %22, i8* %... (idx: 0) -> legup_pthreadcall_mandelbrot_mem_dual_port_0 (mux inputs: 3)

Running Bipartite Weighted Matching on function: legup_pthreadpoll

Running Bipartite Weighted Matching on function: main
State: LEGUP_F_main_BB_bb3_3
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* %scevgep31... (idx: 0)        10                            10                            
  store i32 16, i32* %scevgep3... (idx: 1)        10                            10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* %scevgep31... (idx: 0)        1                             0                             
  store i32 16, i32* %scevgep3... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 0, i32* %scevgep31... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 1)
  store i32 16, i32* %scevgep3... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 1)
State: LEGUP_F_main_BB_bb3_3
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 16, i32* %scevgep3... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 16, i32* %scevgep3... can share an output register with another operation already assigned to main_mem_dual_port_1
  store i32 32, i32* %scevgep3... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 32, i32* %scevgep3... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 16, i32* %scevgep3... (idx: 0)        6                             6                             
  store i32 32, i32* %scevgep3... (idx: 1)        6                             6                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 16, i32* %scevgep3... (idx: 0)        1                             0                             
  store i32 32, i32* %scevgep3... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 16, i32* %scevgep3... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 2)
  store i32 32, i32* %scevgep3... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 2)
State: LEGUP_F_main_BB_bb3_3
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 32, i32* %scevgep3... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 32, i32* %scevgep3... can share an output register with another operation already assigned to main_mem_dual_port_1
  store i32 48, i32* %scevgep3... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 48, i32* %scevgep3... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 32, i32* %scevgep3... (idx: 0)        7                             7                             
  store i32 48, i32* %scevgep3... (idx: 1)        7                             7                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 32, i32* %scevgep3... (idx: 0)        1                             0                             
  store i32 48, i32* %scevgep3... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 32, i32* %scevgep3... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 3)
  store i32 48, i32* %scevgep3... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 3)
State: LEGUP_F_main_BB_bb3_3
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 48, i32* %scevgep3... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 48, i32* %scevgep3... can share an output register with another operation already assigned to main_mem_dual_port_1
  store i32 64, i32* %scevgep3... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 64, i32* %scevgep3... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 48, i32* %scevgep3... (idx: 0)        8                             8                             
  store i32 64, i32* %scevgep3... (idx: 1)        8                             8                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 48, i32* %scevgep3... (idx: 0)        1                             0                             
  store i32 64, i32* %scevgep3... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 48, i32* %scevgep3... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 4)
  store i32 64, i32* %scevgep3... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 4)
State: LEGUP_F_main_BB_bb3_3
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %0 = load i32* %scevgep29, a... (idx: 0)        14                            14                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %0 = load i32* %scevgep29, a... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %0 = load i32* %scevgep29, a... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 5)
State: LEGUP_F_main_BB_bb3_3
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %2 = load i32* %scevgep29.1,... can share an output register with another operation already assigned to main_mem_dual_port_0
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %2 = load i32* %scevgep29.1,... (idx: 0)        10                            14                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %2 = load i32* %scevgep29.1,... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %2 = load i32* %scevgep29.1,... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 6)
State: LEGUP_F_main_BB_bb3_3
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %4 = load i32* %scevgep29.2,... can share an output register with another operation already assigned to main_mem_dual_port_0
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %4 = load i32* %scevgep29.2,... (idx: 0)        11                            14                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %4 = load i32* %scevgep29.2,... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %4 = load i32* %scevgep29.2,... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 7)
State: LEGUP_F_main_BB_bb3_3
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %6 = load i32* %scevgep29.3,... can share an output register with another operation already assigned to main_mem_dual_port_0
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %6 = load i32* %scevgep29.3,... (idx: 0)        12                            14                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %6 = load i32* %scevgep29.3,... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %6 = load i32* %scevgep29.3,... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 8)

