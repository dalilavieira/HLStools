

================================================================
== Vivado HLS Report for 'prod_matrix'
================================================================
* Date:           Mon Apr  6 17:17:17 2020

* Version:        2019.1 (Build 2552052 on Fri May 24 15:28:33 MDT 2019)
* Project:        prod_matrix
* Solution:       sol
* Product family: kintex7
* Target device:  xc7k160t-fbg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|     6.580|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |    ?|    ?|    ?|    ?|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-----------------+-----+-----+----------+-----------+-----------+------+----------+
        |                 |  Latency  | Iteration|  Initiation Interval  | Trip |          |
        |    Loop Name    | min | max |  Latency |  achieved |   target  | Count| Pipelined|
        +-----------------+-----+-----+----------+-----------+-----------+------+----------+
        |- Loop 1         |    ?|    ?|         ?|          -|          -|     ?|    no    |
        | + Loop 1.1      |    ?|    ?|         ?|          -|          -|     ?|    no    |
        |  ++ Loop 1.1.1  |    ?|    ?|         4|          -|          -|     ?|    no    |
        +-----------------+-----+-----+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 7
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 2 
4 --> 5 3 
5 --> 6 
6 --> 7 
7 --> 4 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.06>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([10000 x i32]* %v) nounwind, !map !13"   --->   Operation 8 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([10000 x i32]* %r) nounwind, !map !19"   --->   Operation 9 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32 %row) nounwind, !map !23"   --->   Operation 10 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32 %col) nounwind, !map !29"   --->   Operation 11 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecTopModule([12 x i8]* @prod_matrix_str) nounwind"   --->   Operation 12 'spectopmodule' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%col_read = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %col) nounwind" [prod_matrix.c:5]   --->   Operation 13 'read' 'col_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%row_read = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %row) nounwind" [prod_matrix.c:5]   --->   Operation 14 'read' 'row_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (1.06ns)   --->   "br label %.loopexit" [prod_matrix.c:7]   --->   Operation 15 'br' <Predicate = true> <Delay = 1.06>

State 2 <SV = 1> <Delay = 1.76>
ST_2 : Operation 16 [1/1] (0.00ns)   --->   "%i_0 = phi i31 [ 0, %0 ], [ %i, %.loopexit.loopexit ]"   --->   Operation 16 'phi' 'i_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 17 [1/1] (0.00ns)   --->   "%phi_mul1 = phi i38 [ 0, %0 ], [ %add_ln7, %.loopexit.loopexit ]" [prod_matrix.c:7]   --->   Operation 17 'phi' 'phi_mul1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 18 [1/1] (0.00ns)   --->   "%trunc_ln7 = trunc i38 %phi_mul1 to i15" [prod_matrix.c:7]   --->   Operation 18 'trunc' 'trunc_ln7' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 19 [1/1] (1.71ns)   --->   "%add_ln7 = add i38 100, %phi_mul1" [prod_matrix.c:7]   --->   Operation 19 'add' 'add_ln7' <Predicate = true> <Delay = 1.71> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.47> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 20 [1/1] (0.00ns)   --->   "%zext_ln7 = zext i31 %i_0 to i32" [prod_matrix.c:7]   --->   Operation 20 'zext' 'zext_ln7' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 21 [1/1] (1.54ns)   --->   "%icmp_ln7 = icmp slt i32 %zext_ln7, %row_read" [prod_matrix.c:7]   --->   Operation 21 'icmp' 'icmp_ln7' <Predicate = true> <Delay = 1.54> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 22 [1/1] (1.76ns)   --->   "%i = add i31 1, %i_0" [prod_matrix.c:7]   --->   Operation 22 'add' 'i' <Predicate = true> <Delay = 1.76> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.47> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 23 [1/1] (0.00ns)   --->   "br i1 %icmp_ln7, label %.preheader1.preheader, label %2" [prod_matrix.c:7]   --->   Operation 23 'br' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 24 [1/1] (1.06ns)   --->   "br label %.preheader1" [prod_matrix.c:8]   --->   Operation 24 'br' <Predicate = (icmp_ln7)> <Delay = 1.06>
ST_2 : Operation 25 [1/1] (0.00ns)   --->   "ret void" [prod_matrix.c:13]   --->   Operation 25 'ret' <Predicate = (!icmp_ln7)> <Delay = 0.00>

State 3 <SV = 2> <Delay = 1.76>
ST_3 : Operation 26 [1/1] (0.00ns)   --->   "%j_0 = phi i31 [ %j, %.preheader1.loopexit ], [ 0, %.preheader1.preheader ]"   --->   Operation 26 'phi' 'j_0' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 27 [1/1] (0.00ns)   --->   "%zext_ln8 = zext i31 %j_0 to i32" [prod_matrix.c:8]   --->   Operation 27 'zext' 'zext_ln8' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 28 [1/1] (1.54ns)   --->   "%icmp_ln8 = icmp slt i32 %zext_ln8, %col_read" [prod_matrix.c:8]   --->   Operation 28 'icmp' 'icmp_ln8' <Predicate = true> <Delay = 1.54> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 29 [1/1] (1.76ns)   --->   "%j = add i31 %j_0, 1" [prod_matrix.c:8]   --->   Operation 29 'add' 'j' <Predicate = true> <Delay = 1.76> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.47> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 30 [1/1] (0.00ns)   --->   "br i1 %icmp_ln8, label %.preheader.preheader, label %.loopexit.loopexit" [prod_matrix.c:8]   --->   Operation 30 'br' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 31 [1/1] (0.00ns)   --->   "%trunc_ln10 = trunc i31 %j_0 to i15" [prod_matrix.c:10]   --->   Operation 31 'trunc' 'trunc_ln10' <Predicate = (icmp_ln8)> <Delay = 0.00>
ST_3 : Operation 32 [1/1] (1.47ns)   --->   "%add_ln10 = add i15 %trunc_ln7, %trunc_ln10" [prod_matrix.c:10]   --->   Operation 32 'add' 'add_ln10' <Predicate = (icmp_ln8)> <Delay = 1.47> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.47> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 33 [1/1] (0.00ns)   --->   "%zext_ln10 = zext i15 %add_ln10 to i64" [prod_matrix.c:10]   --->   Operation 33 'zext' 'zext_ln10' <Predicate = (icmp_ln8)> <Delay = 0.00>
ST_3 : Operation 34 [1/1] (0.00ns)   --->   "%r_addr = getelementptr [10000 x i32]* %r, i64 0, i64 %zext_ln10" [prod_matrix.c:10]   --->   Operation 34 'getelementptr' 'r_addr' <Predicate = (icmp_ln8)> <Delay = 0.00>
ST_3 : Operation 35 [1/1] (1.06ns)   --->   "br label %.preheader" [prod_matrix.c:9]   --->   Operation 35 'br' <Predicate = (icmp_ln8)> <Delay = 1.06>
ST_3 : Operation 36 [1/1] (0.00ns)   --->   "br label %.loopexit"   --->   Operation 36 'br' <Predicate = (!icmp_ln8)> <Delay = 0.00>

State 4 <SV = 3> <Delay = 4.14>
ST_4 : Operation 37 [1/1] (0.00ns)   --->   "%k_0 = phi i32 [ %k, %1 ], [ 0, %.preheader.preheader ]"   --->   Operation 37 'phi' 'k_0' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 38 [1/1] (0.00ns)   --->   "%phi_mul = phi i39 [ %add_ln10_3, %1 ], [ 0, %.preheader.preheader ]" [prod_matrix.c:10]   --->   Operation 38 'phi' 'phi_mul' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 39 [1/1] (0.00ns)   --->   "%trunc_ln9 = trunc i39 %phi_mul to i15" [prod_matrix.c:9]   --->   Operation 39 'trunc' 'trunc_ln9' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 40 [1/1] (1.54ns)   --->   "%icmp_ln9 = icmp eq i32 %k_0, %row_read" [prod_matrix.c:9]   --->   Operation 40 'icmp' 'icmp_ln9' <Predicate = true> <Delay = 1.54> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 41 [1/1] (1.78ns)   --->   "%k = add nsw i32 1, %k_0" [prod_matrix.c:9]   --->   Operation 41 'add' 'k' <Predicate = true> <Delay = 1.78> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.47> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 42 [1/1] (0.00ns)   --->   "br i1 %icmp_ln9, label %.preheader1.loopexit, label %1" [prod_matrix.c:9]   --->   Operation 42 'br' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 43 [1/1] (0.00ns)   --->   "%trunc_ln10_1 = trunc i32 %k_0 to i15" [prod_matrix.c:10]   --->   Operation 43 'trunc' 'trunc_ln10_1' <Predicate = (!icmp_ln9)> <Delay = 0.00>
ST_4 : Operation 44 [1/1] (1.47ns)   --->   "%add_ln10_1 = add i15 %trunc_ln7, %trunc_ln10_1" [prod_matrix.c:10]   --->   Operation 44 'add' 'add_ln10_1' <Predicate = (!icmp_ln9)> <Delay = 1.47> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.47> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 45 [1/1] (0.00ns)   --->   "%zext_ln10_1 = zext i15 %add_ln10_1 to i64" [prod_matrix.c:10]   --->   Operation 45 'zext' 'zext_ln10_1' <Predicate = (!icmp_ln9)> <Delay = 0.00>
ST_4 : Operation 46 [1/1] (0.00ns)   --->   "%v_addr = getelementptr [10000 x i32]* %v, i64 0, i64 %zext_ln10_1" [prod_matrix.c:10]   --->   Operation 46 'getelementptr' 'v_addr' <Predicate = (!icmp_ln9)> <Delay = 0.00>
ST_4 : Operation 47 [1/1] (1.70ns)   --->   "%add_ln10_3 = add i39 100, %phi_mul" [prod_matrix.c:10]   --->   Operation 47 'add' 'add_ln10_3' <Predicate = (!icmp_ln9)> <Delay = 1.70> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.47> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 48 [1/1] (1.47ns)   --->   "%add_ln10_2 = add i15 %trunc_ln9, %trunc_ln10" [prod_matrix.c:10]   --->   Operation 48 'add' 'add_ln10_2' <Predicate = (!icmp_ln9)> <Delay = 1.47> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.47> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 49 [1/1] (0.00ns)   --->   "%zext_ln10_2 = zext i15 %add_ln10_2 to i64" [prod_matrix.c:10]   --->   Operation 49 'zext' 'zext_ln10_2' <Predicate = (!icmp_ln9)> <Delay = 0.00>
ST_4 : Operation 50 [1/1] (0.00ns)   --->   "%v_addr_1 = getelementptr [10000 x i32]* %v, i64 0, i64 %zext_ln10_2" [prod_matrix.c:10]   --->   Operation 50 'getelementptr' 'v_addr_1' <Predicate = (!icmp_ln9)> <Delay = 0.00>
ST_4 : Operation 51 [2/2] (2.66ns)   --->   "%v_load = load i32* %v_addr, align 4" [prod_matrix.c:10]   --->   Operation 51 'load' 'v_load' <Predicate = (!icmp_ln9)> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10000> <RAM>
ST_4 : Operation 52 [2/2] (2.66ns)   --->   "%v_load_1 = load i32* %v_addr_1, align 4" [prod_matrix.c:10]   --->   Operation 52 'load' 'v_load_1' <Predicate = (!icmp_ln9)> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10000> <RAM>
ST_4 : Operation 53 [1/1] (0.00ns)   --->   "br label %.preheader1"   --->   Operation 53 'br' <Predicate = (icmp_ln9)> <Delay = 0.00>

State 5 <SV = 4> <Delay = 2.66>
ST_5 : Operation 54 [1/2] (2.66ns)   --->   "%v_load = load i32* %v_addr, align 4" [prod_matrix.c:10]   --->   Operation 54 'load' 'v_load' <Predicate = true> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10000> <RAM>
ST_5 : Operation 55 [1/2] (2.66ns)   --->   "%v_load_1 = load i32* %v_addr_1, align 4" [prod_matrix.c:10]   --->   Operation 55 'load' 'v_load_1' <Predicate = true> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10000> <RAM>

State 6 <SV = 5> <Delay = 6.58>
ST_6 : Operation 56 [1/1] (6.58ns)   --->   "%mul_ln10 = mul nsw i32 %v_load, %v_load_1" [prod_matrix.c:10]   --->   Operation 56 'mul' 'mul_ln10' <Predicate = true> <Delay = 6.58> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 6.58> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>

State 7 <SV = 6> <Delay = 2.66>
ST_7 : Operation 57 [1/1] (2.66ns)   --->   "store i32 %mul_ln10, i32* %r_addr, align 4" [prod_matrix.c:10]   --->   Operation 57 'store' <Predicate = true> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10000> <RAM>
ST_7 : Operation 58 [1/1] (0.00ns)   --->   "br label %.preheader" [prod_matrix.c:9]   --->   Operation 58 'br' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 1.06ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('i') with incoming values : ('i', prod_matrix.c:7) [14]  (1.06 ns)

 <State 2>: 1.77ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', prod_matrix.c:7) [14]  (0 ns)
	'add' operation ('i', prod_matrix.c:7) [20]  (1.77 ns)

 <State 3>: 1.77ns
The critical path consists of the following:
	'phi' operation ('j') with incoming values : ('j', prod_matrix.c:8) [25]  (0 ns)
	'add' operation ('j', prod_matrix.c:8) [28]  (1.77 ns)

 <State 4>: 4.14ns
The critical path consists of the following:
	'phi' operation ('k') with incoming values : ('k', prod_matrix.c:9) [37]  (0 ns)
	'add' operation ('add_ln10_1', prod_matrix.c:10) [45]  (1.48 ns)
	'getelementptr' operation ('v_addr', prod_matrix.c:10) [47]  (0 ns)
	'load' operation ('v_load', prod_matrix.c:10) on array 'v' [52]  (2.66 ns)

 <State 5>: 2.66ns
The critical path consists of the following:
	'load' operation ('v_load', prod_matrix.c:10) on array 'v' [52]  (2.66 ns)

 <State 6>: 6.58ns
The critical path consists of the following:
	'mul' operation ('mul_ln10', prod_matrix.c:10) [54]  (6.58 ns)

 <State 7>: 2.66ns
The critical path consists of the following:
	'store' operation ('store_ln10', prod_matrix.c:10) of variable 'mul_ln10', prod_matrix.c:10 on array 'r' [55]  (2.66 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
