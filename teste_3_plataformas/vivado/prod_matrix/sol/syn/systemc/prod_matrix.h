// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _prod_matrix_HH_
#define _prod_matrix_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct prod_matrix : public sc_module {
    // Port declarations 18
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<14> > v_address0;
    sc_out< sc_logic > v_ce0;
    sc_in< sc_lv<32> > v_q0;
    sc_out< sc_lv<14> > v_address1;
    sc_out< sc_logic > v_ce1;
    sc_in< sc_lv<32> > v_q1;
    sc_out< sc_lv<14> > r_address0;
    sc_out< sc_logic > r_ce0;
    sc_out< sc_logic > r_we0;
    sc_out< sc_lv<32> > r_d0;
    sc_in< sc_lv<32> > row;
    sc_in< sc_lv<32> > col;


    // Module declarations
    prod_matrix(sc_module_name name);
    SC_HAS_PROCESS(prod_matrix);

    ~prod_matrix();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    sc_signal< sc_lv<7> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<15> > trunc_ln7_fu_138_p1;
    sc_signal< sc_lv<15> > trunc_ln7_reg_252;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<38> > add_ln7_fu_142_p2;
    sc_signal< sc_lv<38> > add_ln7_reg_258;
    sc_signal< sc_lv<31> > i_fu_157_p2;
    sc_signal< sc_lv<31> > i_reg_266;
    sc_signal< sc_lv<31> > j_fu_172_p2;
    sc_signal< sc_lv<31> > j_reg_274;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<15> > trunc_ln10_fu_178_p1;
    sc_signal< sc_lv<15> > trunc_ln10_reg_279;
    sc_signal< sc_lv<1> > icmp_ln8_fu_167_p2;
    sc_signal< sc_lv<14> > r_addr_reg_284;
    sc_signal< sc_lv<32> > k_fu_201_p2;
    sc_signal< sc_lv<32> > k_reg_292;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<1> > icmp_ln9_fu_196_p2;
    sc_signal< sc_lv<39> > add_ln10_3_fu_221_p2;
    sc_signal< sc_lv<39> > add_ln10_3_reg_302;
    sc_signal< sc_lv<32> > v_load_reg_312;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<32> > v_load_1_reg_317;
    sc_signal< sc_lv<32> > mul_ln10_fu_237_p2;
    sc_signal< sc_lv<32> > mul_ln10_reg_322;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<31> > i_0_reg_83;
    sc_signal< sc_lv<38> > phi_mul1_reg_94;
    sc_signal< sc_lv<31> > j_0_reg_105;
    sc_signal< sc_lv<1> > icmp_ln7_fu_152_p2;
    sc_signal< sc_lv<32> > k_0_reg_116;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<39> > phi_mul_reg_127;
    sc_signal< sc_lv<64> > zext_ln10_fu_187_p1;
    sc_signal< sc_lv<64> > zext_ln10_1_fu_216_p1;
    sc_signal< sc_lv<64> > zext_ln10_2_fu_232_p1;
    sc_signal< sc_lv<32> > zext_ln7_fu_148_p1;
    sc_signal< sc_lv<32> > zext_ln8_fu_163_p1;
    sc_signal< sc_lv<15> > add_ln10_fu_182_p2;
    sc_signal< sc_lv<15> > trunc_ln10_1_fu_207_p1;
    sc_signal< sc_lv<15> > add_ln10_1_fu_211_p2;
    sc_signal< sc_lv<15> > trunc_ln9_fu_192_p1;
    sc_signal< sc_lv<15> > add_ln10_2_fu_227_p2;
    sc_signal< sc_lv<7> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<7> ap_ST_fsm_state1;
    static const sc_lv<7> ap_ST_fsm_state2;
    static const sc_lv<7> ap_ST_fsm_state3;
    static const sc_lv<7> ap_ST_fsm_state4;
    static const sc_lv<7> ap_ST_fsm_state5;
    static const sc_lv<7> ap_ST_fsm_state6;
    static const sc_lv<7> ap_ST_fsm_state7;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<31> ap_const_lv31_0;
    static const sc_lv<38> ap_const_lv38_0;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<39> ap_const_lv39_0;
    static const sc_lv<38> ap_const_lv38_64;
    static const sc_lv<31> ap_const_lv31_1;
    static const sc_lv<39> ap_const_lv39_64;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_add_ln10_1_fu_211_p2();
    void thread_add_ln10_2_fu_227_p2();
    void thread_add_ln10_3_fu_221_p2();
    void thread_add_ln10_fu_182_p2();
    void thread_add_ln7_fu_142_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_i_fu_157_p2();
    void thread_icmp_ln7_fu_152_p2();
    void thread_icmp_ln8_fu_167_p2();
    void thread_icmp_ln9_fu_196_p2();
    void thread_j_fu_172_p2();
    void thread_k_fu_201_p2();
    void thread_mul_ln10_fu_237_p2();
    void thread_r_address0();
    void thread_r_ce0();
    void thread_r_d0();
    void thread_r_we0();
    void thread_trunc_ln10_1_fu_207_p1();
    void thread_trunc_ln10_fu_178_p1();
    void thread_trunc_ln7_fu_138_p1();
    void thread_trunc_ln9_fu_192_p1();
    void thread_v_address0();
    void thread_v_address1();
    void thread_v_ce0();
    void thread_v_ce1();
    void thread_zext_ln10_1_fu_216_p1();
    void thread_zext_ln10_2_fu_232_p1();
    void thread_zext_ln10_fu_187_p1();
    void thread_zext_ln7_fu_148_p1();
    void thread_zext_ln8_fu_163_p1();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
