// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _euler_HH_
#define _euler_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "euler_dadd_64ns_64ns_64_5_full_dsp_1.h"
#include "euler_ddiv_64ns_64ns_64_22_1.h"
#include "euler_sitodp_64ns_64_4_1.h"
#include "euler_mul_31ns_64s_64_2_1.h"

namespace ap_rtl {

struct euler : public sc_module {
    // Port declarations 8
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<32> > n;
    sc_out< sc_lv<64> > ap_return;
    sc_signal< sc_logic > ap_var_for_const0;
    sc_signal< sc_lv<64> > ap_var_for_const1;


    // Module declarations
    euler(sc_module_name name);
    SC_HAS_PROCESS(euler);

    ~euler();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    euler_dadd_64ns_64ns_64_5_full_dsp_1<1,5,64,64,64>* euler_dadd_64ns_64ns_64_5_full_dsp_1_U1;
    euler_ddiv_64ns_64ns_64_22_1<1,22,64,64,64>* euler_ddiv_64ns_64ns_64_22_1_U2;
    euler_sitodp_64ns_64_4_1<1,4,64,64>* euler_sitodp_64ns_64_4_1_U3;
    euler_mul_31ns_64s_64_2_1<1,2,31,64,64>* euler_mul_31ns_64s_64_2_1_U4;
    sc_signal< sc_lv<34> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<31> > i_1_fu_128_p2;
    sc_signal< sc_lv<31> > i_1_reg_180;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<1> > icmp_ln6_fu_134_p2;
    sc_signal< sc_lv<1> > icmp_ln6_reg_185;
    sc_signal< sc_lv<1> > icmp_ln22_fu_123_p2;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<1> > icmp_ln11_fu_144_p2;
    sc_signal< sc_lv<31> > i_fu_160_p2;
    sc_signal< sc_lv<31> > i_reg_197;
    sc_signal< sc_lv<32> > add_ln22_fu_166_p2;
    sc_signal< sc_lv<32> > add_ln22_reg_202;
    sc_signal< sc_lv<64> > grp_fu_154_p2;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<64> > grp_fu_115_p1;
    sc_signal< sc_lv<64> > tmp_1_reg_212;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<64> > grp_fu_110_p2;
    sc_signal< sc_lv<64> > tmp_2_reg_217;
    sc_signal< sc_logic > ap_CS_fsm_state29;
    sc_signal< sc_lv<64> > grp_fu_105_p2;
    sc_signal< sc_logic > ap_CS_fsm_state34;
    sc_signal< sc_lv<32> > indvars_iv_reg_34;
    sc_signal< sc_lv<64> > soma_0_reg_46;
    sc_signal< sc_lv<31> > n_assign_reg_58;
    sc_signal< sc_lv<64> > y_0_i_reg_69;
    sc_signal< sc_lv<31> > i_0_i_reg_81;
    sc_signal< sc_lv<64> > ap_phi_mux_p_0_i_phi_fu_96_p4;
    sc_signal< sc_lv<64> > p_0_i_reg_92;
    sc_signal< sc_logic > ap_CS_fsm_state30;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<32> > zext_ln22_fu_119_p1;
    sc_signal< sc_lv<32> > i_0_i_cast_fu_140_p1;
    sc_signal< sc_lv<31> > grp_fu_154_p0;
    sc_signal< sc_lv<34> > ap_NS_fsm;
    sc_signal< sc_lv<64> > grp_fu_154_p00;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<34> ap_ST_fsm_state1;
    static const sc_lv<34> ap_ST_fsm_state2;
    static const sc_lv<34> ap_ST_fsm_state3;
    static const sc_lv<34> ap_ST_fsm_state4;
    static const sc_lv<34> ap_ST_fsm_state5;
    static const sc_lv<34> ap_ST_fsm_state6;
    static const sc_lv<34> ap_ST_fsm_state7;
    static const sc_lv<34> ap_ST_fsm_state8;
    static const sc_lv<34> ap_ST_fsm_state9;
    static const sc_lv<34> ap_ST_fsm_state10;
    static const sc_lv<34> ap_ST_fsm_state11;
    static const sc_lv<34> ap_ST_fsm_state12;
    static const sc_lv<34> ap_ST_fsm_state13;
    static const sc_lv<34> ap_ST_fsm_state14;
    static const sc_lv<34> ap_ST_fsm_state15;
    static const sc_lv<34> ap_ST_fsm_state16;
    static const sc_lv<34> ap_ST_fsm_state17;
    static const sc_lv<34> ap_ST_fsm_state18;
    static const sc_lv<34> ap_ST_fsm_state19;
    static const sc_lv<34> ap_ST_fsm_state20;
    static const sc_lv<34> ap_ST_fsm_state21;
    static const sc_lv<34> ap_ST_fsm_state22;
    static const sc_lv<34> ap_ST_fsm_state23;
    static const sc_lv<34> ap_ST_fsm_state24;
    static const sc_lv<34> ap_ST_fsm_state25;
    static const sc_lv<34> ap_ST_fsm_state26;
    static const sc_lv<34> ap_ST_fsm_state27;
    static const sc_lv<34> ap_ST_fsm_state28;
    static const sc_lv<34> ap_ST_fsm_state29;
    static const sc_lv<34> ap_ST_fsm_state30;
    static const sc_lv<34> ap_ST_fsm_state31;
    static const sc_lv<34> ap_ST_fsm_state32;
    static const sc_lv<34> ap_ST_fsm_state33;
    static const sc_lv<34> ap_ST_fsm_state34;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_1C;
    static const sc_lv<32> ap_const_lv32_21;
    static const sc_lv<64> ap_const_lv64_0;
    static const sc_lv<31> ap_const_lv31_0;
    static const sc_lv<64> ap_const_lv64_1;
    static const sc_lv<31> ap_const_lv31_1;
    static const sc_lv<32> ap_const_lv32_1D;
    static const sc_lv<64> ap_const_lv64_3FF0000000000000;
    static const sc_lv<32> ap_const_lv32_7;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_var_for_const1();
    void thread_ap_clk_no_reset_();
    void thread_add_ln22_fu_166_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state29();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state30();
    void thread_ap_CS_fsm_state34();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_phi_mux_p_0_i_phi_fu_96_p4();
    void thread_ap_ready();
    void thread_ap_return();
    void thread_grp_fu_154_p0();
    void thread_grp_fu_154_p00();
    void thread_i_0_i_cast_fu_140_p1();
    void thread_i_1_fu_128_p2();
    void thread_i_fu_160_p2();
    void thread_icmp_ln11_fu_144_p2();
    void thread_icmp_ln22_fu_123_p2();
    void thread_icmp_ln6_fu_134_p2();
    void thread_zext_ln22_fu_119_p1();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
