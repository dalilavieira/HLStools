

================================================================
== Vivado HLS Report for 'sobel'
================================================================
* Date:           Mon Apr  6 16:49:35 2020

* Version:        2019.1 (Build 2552052 on Fri May 24 15:28:33 MDT 2019)
* Project:        sobel
* Solution:       sol
* Product family: kintex7
* Target device:  xc7k160t-fbg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|     8.365|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +--------+--------+--------+--------+---------+
    |     Latency     |     Interval    | Pipeline|
    |   min  |   max  |   min  |   max  |   Type  |
    +--------+--------+--------+--------+---------+
    |  317129|  317129|  317129|  317129|   none  |
    +--------+--------+--------+--------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------+--------+--------+----------+-----------+-----------+------+----------+
        |             |     Latency     | Iteration|  Initiation Interval  | Trip |          |
        |  Loop Name  |   min  |   max  |  Latency |  achieved |   target  | Count| Pipelined|
        +-------------+--------+--------+----------+-----------+-----------+------+----------+
        |- Loop 1     |  317128|  317128|      3236|          -|          -|    98|    no    |
        | + Loop 1.1  |    3234|    3234|        33|          -|          -|    98|    no    |
        +-------------+--------+--------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 35
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 2 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 9 
9 --> 10 
10 --> 11 
11 --> 12 
12 --> 13 
13 --> 14 
14 --> 15 
15 --> 16 
16 --> 17 
17 --> 18 
18 --> 19 
19 --> 20 
20 --> 21 
21 --> 22 
22 --> 23 
23 --> 24 
24 --> 25 
25 --> 26 
26 --> 27 
27 --> 28 
28 --> 29 
29 --> 30 
30 --> 31 
31 --> 32 
32 --> 33 
33 --> 34 
34 --> 35 
35 --> 3 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.06>
ST_1 : Operation 36 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([10000 x i32]* %image1) nounwind, !map !13"   --->   Operation 36 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 37 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([10000 x i32]* %image2) nounwind, !map !19"   --->   Operation 37 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 38 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecTopModule([6 x i8]* @sobel_str) nounwind"   --->   Operation 38 'spectopmodule' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 39 [1/1] (1.06ns)   --->   "br label %.loopexit" [Sobel.c:8]   --->   Operation 39 'br' <Predicate = true> <Delay = 1.06>

State 2 <SV = 1> <Delay = 4.66>
ST_2 : Operation 40 [1/1] (0.00ns)   --->   "%j_0 = phi i7 [ 1, %0 ], [ %j, %.loopexit.loopexit ]"   --->   Operation 40 'phi' 'j_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 41 [1/1] (1.18ns)   --->   "%icmp_ln8 = icmp eq i7 %j_0, -29" [Sobel.c:8]   --->   Operation 41 'icmp' 'icmp_ln8' <Predicate = true> <Delay = 1.18> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 42 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 98, i64 98, i64 98) nounwind"   --->   Operation 42 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 43 [1/1] (0.00ns)   --->   "br i1 %icmp_ln8, label %2, label %.preheader.preheader" [Sobel.c:8]   --->   Operation 43 'br' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 44 [1/1] (1.37ns)   --->   "%add_ln11 = add i7 %j_0, -1" [Sobel.c:11]   --->   Operation 44 'add' 'add_ln11' <Predicate = (!icmp_ln8)> <Delay = 1.37> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 45 [1/1] (0.00ns)   --->   "%zext_ln11 = zext i7 %add_ln11 to i14" [Sobel.c:11]   --->   Operation 45 'zext' 'zext_ln11' <Predicate = (!icmp_ln8)> <Delay = 0.00>
ST_2 : Operation 46 [1/1] (3.29ns)   --->   "%mul_ln11_2 = mul i14 %zext_ln11, 100" [Sobel.c:11]   --->   Operation 46 'mul' 'mul_ln11_2' <Predicate = (!icmp_ln8)> <Delay = 3.29> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 6.58> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 47 [1/1] (0.00ns)   --->   "%zext_ln11_1 = zext i7 %j_0 to i14" [Sobel.c:11]   --->   Operation 47 'zext' 'zext_ln11_1' <Predicate = (!icmp_ln8)> <Delay = 0.00>
ST_2 : Operation 48 [1/1] (3.29ns)   --->   "%mul_ln11_3 = mul i14 %zext_ln11_1, 100" [Sobel.c:11]   --->   Operation 48 'mul' 'mul_ln11_3' <Predicate = (!icmp_ln8)> <Delay = 3.29> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 6.58> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 49 [1/1] (1.37ns)   --->   "%j = add i7 %j_0, 1" [Sobel.c:11]   --->   Operation 49 'add' 'j' <Predicate = (!icmp_ln8)> <Delay = 1.37> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 50 [1/1] (0.00ns)   --->   "%zext_ln11_2 = zext i7 %j to i14" [Sobel.c:11]   --->   Operation 50 'zext' 'zext_ln11_2' <Predicate = (!icmp_ln8)> <Delay = 0.00>
ST_2 : Operation 51 [1/1] (3.29ns)   --->   "%mul_ln11_4 = mul i14 %zext_ln11_2, 100" [Sobel.c:11]   --->   Operation 51 'mul' 'mul_ln11_4' <Predicate = (!icmp_ln8)> <Delay = 3.29> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 6.58> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 52 [1/1] (1.06ns)   --->   "br label %.preheader" [Sobel.c:9]   --->   Operation 52 'br' <Predicate = (!icmp_ln8)> <Delay = 1.06>
ST_2 : Operation 53 [1/1] (0.00ns)   --->   "ret void" [Sobel.c:18]   --->   Operation 53 'ret' <Predicate = (icmp_ln8)> <Delay = 0.00>

State 3 <SV = 2> <Delay = 5.50>
ST_3 : Operation 54 [1/1] (0.00ns)   --->   "%i_0 = phi i7 [ %i, %1 ], [ 1, %.preheader.preheader ]"   --->   Operation 54 'phi' 'i_0' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 55 [1/1] (1.18ns)   --->   "%icmp_ln9 = icmp eq i7 %i_0, -29" [Sobel.c:9]   --->   Operation 55 'icmp' 'icmp_ln9' <Predicate = true> <Delay = 1.18> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 56 [1/1] (0.00ns)   --->   "%empty_6 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 98, i64 98, i64 98) nounwind"   --->   Operation 56 'speclooptripcount' 'empty_6' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 57 [1/1] (0.00ns)   --->   "br i1 %icmp_ln9, label %.loopexit.loopexit, label %1" [Sobel.c:9]   --->   Operation 57 'br' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 58 [1/1] (1.37ns)   --->   "%add_ln11_2 = add i7 -1, %i_0" [Sobel.c:11]   --->   Operation 58 'add' 'add_ln11_2' <Predicate = (!icmp_ln9)> <Delay = 1.37> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 59 [1/1] (0.00ns)   --->   "%zext_ln11_3 = zext i7 %add_ln11_2 to i14" [Sobel.c:11]   --->   Operation 59 'zext' 'zext_ln11_3' <Predicate = (!icmp_ln9)> <Delay = 0.00>
ST_3 : Operation 60 [1/1] (1.46ns)   --->   "%add_ln11_3 = add i14 %mul_ln11_2, %zext_ln11_3" [Sobel.c:11]   --->   Operation 60 'add' 'add_ln11_3' <Predicate = (!icmp_ln9)> <Delay = 1.46> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 61 [1/1] (0.00ns)   --->   "%zext_ln11_4 = zext i14 %add_ln11_3 to i64" [Sobel.c:11]   --->   Operation 61 'zext' 'zext_ln11_4' <Predicate = (!icmp_ln9)> <Delay = 0.00>
ST_3 : Operation 62 [1/1] (0.00ns)   --->   "%image1_addr = getelementptr [10000 x i32]* %image1, i64 0, i64 %zext_ln11_4" [Sobel.c:11]   --->   Operation 62 'getelementptr' 'image1_addr' <Predicate = (!icmp_ln9)> <Delay = 0.00>
ST_3 : Operation 63 [1/1] (1.46ns)   --->   "%add_ln11_9 = add i14 %mul_ln11_3, %zext_ln11_3" [Sobel.c:11]   --->   Operation 63 'add' 'add_ln11_9' <Predicate = (!icmp_ln9)> <Delay = 1.46> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 64 [1/1] (0.00ns)   --->   "%zext_ln11_5 = zext i14 %add_ln11_9 to i64" [Sobel.c:11]   --->   Operation 64 'zext' 'zext_ln11_5' <Predicate = (!icmp_ln9)> <Delay = 0.00>
ST_3 : Operation 65 [1/1] (0.00ns)   --->   "%image1_addr_1 = getelementptr [10000 x i32]* %image1, i64 0, i64 %zext_ln11_5" [Sobel.c:11]   --->   Operation 65 'getelementptr' 'image1_addr_1' <Predicate = (!icmp_ln9)> <Delay = 0.00>
ST_3 : Operation 66 [2/2] (2.66ns)   --->   "%image1_load = load i32* %image1_addr, align 4" [Sobel.c:11]   --->   Operation 66 'load' 'image1_load' <Predicate = (!icmp_ln9)> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10000> <RAM>
ST_3 : Operation 67 [2/2] (2.66ns)   --->   "%image1_load_1 = load i32* %image1_addr_1, align 4" [Sobel.c:11]   --->   Operation 67 'load' 'image1_load_1' <Predicate = (!icmp_ln9)> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10000> <RAM>
ST_3 : Operation 68 [1/1] (0.00ns)   --->   "br label %.loopexit"   --->   Operation 68 'br' <Predicate = (icmp_ln9)> <Delay = 0.00>

State 4 <SV = 3> <Delay = 5.50>
ST_4 : Operation 69 [1/1] (1.46ns)   --->   "%add_ln11_10 = add i14 %mul_ln11_4, %zext_ln11_3" [Sobel.c:11]   --->   Operation 69 'add' 'add_ln11_10' <Predicate = true> <Delay = 1.46> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 70 [1/1] (0.00ns)   --->   "%zext_ln11_6 = zext i14 %add_ln11_10 to i64" [Sobel.c:11]   --->   Operation 70 'zext' 'zext_ln11_6' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 71 [1/1] (0.00ns)   --->   "%image1_addr_2 = getelementptr [10000 x i32]* %image1, i64 0, i64 %zext_ln11_6" [Sobel.c:11]   --->   Operation 71 'getelementptr' 'image1_addr_2' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 72 [1/2] (2.66ns)   --->   "%image1_load = load i32* %image1_addr, align 4" [Sobel.c:11]   --->   Operation 72 'load' 'image1_load' <Predicate = true> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10000> <RAM>
ST_4 : Operation 73 [1/2] (2.66ns)   --->   "%image1_load_1 = load i32* %image1_addr_1, align 4" [Sobel.c:11]   --->   Operation 73 'load' 'image1_load_1' <Predicate = true> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10000> <RAM>
ST_4 : Operation 74 [2/2] (2.66ns)   --->   "%image1_load_2 = load i32* %image1_addr_2, align 4" [Sobel.c:11]   --->   Operation 74 'load' 'image1_load_2' <Predicate = true> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10000> <RAM>
ST_4 : Operation 75 [1/1] (1.37ns)   --->   "%i = add i7 1, %i_0" [Sobel.c:11]   --->   Operation 75 'add' 'i' <Predicate = true> <Delay = 1.37> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 76 [1/1] (0.00ns)   --->   "%zext_ln11_7 = zext i7 %i to i14" [Sobel.c:11]   --->   Operation 76 'zext' 'zext_ln11_7' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 77 [1/1] (1.46ns)   --->   "%add_ln11_12 = add i14 %mul_ln11_2, %zext_ln11_7" [Sobel.c:11]   --->   Operation 77 'add' 'add_ln11_12' <Predicate = true> <Delay = 1.46> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 78 [1/1] (0.00ns)   --->   "%zext_ln11_8 = zext i14 %add_ln11_12 to i64" [Sobel.c:11]   --->   Operation 78 'zext' 'zext_ln11_8' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 79 [1/1] (0.00ns)   --->   "%image1_addr_3 = getelementptr [10000 x i32]* %image1, i64 0, i64 %zext_ln11_8" [Sobel.c:11]   --->   Operation 79 'getelementptr' 'image1_addr_3' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 80 [2/2] (2.66ns)   --->   "%image1_load_3 = load i32* %image1_addr_3, align 4" [Sobel.c:11]   --->   Operation 80 'load' 'image1_load_3' <Predicate = true> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10000> <RAM>

State 5 <SV = 4> <Delay = 7.22>
ST_5 : Operation 81 [1/1] (0.00ns) (grouped into LUT with out node add_ln11_4)   --->   "%shl_ln11 = shl i32 %image1_load_1, 1" [Sobel.c:11]   --->   Operation 81 'shl' 'shl_ln11' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 82 [1/2] (2.66ns)   --->   "%image1_load_2 = load i32* %image1_addr_2, align 4" [Sobel.c:11]   --->   Operation 82 'load' 'image1_load_2' <Predicate = true> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10000> <RAM>
ST_5 : Operation 83 [1/1] (1.46ns)   --->   "%add_ln11_13 = add i14 %mul_ln11_3, %zext_ln11_7" [Sobel.c:11]   --->   Operation 83 'add' 'add_ln11_13' <Predicate = true> <Delay = 1.46> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 84 [1/1] (0.00ns)   --->   "%zext_ln11_9 = zext i14 %add_ln11_13 to i64" [Sobel.c:11]   --->   Operation 84 'zext' 'zext_ln11_9' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 85 [1/1] (0.00ns)   --->   "%image1_addr_4 = getelementptr [10000 x i32]* %image1, i64 0, i64 %zext_ln11_9" [Sobel.c:11]   --->   Operation 85 'getelementptr' 'image1_addr_4' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 86 [1/1] (1.46ns)   --->   "%add_ln11_14 = add i14 %mul_ln11_4, %zext_ln11_7" [Sobel.c:11]   --->   Operation 86 'add' 'add_ln11_14' <Predicate = true> <Delay = 1.46> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 87 [1/1] (0.00ns)   --->   "%zext_ln11_10 = zext i14 %add_ln11_14 to i64" [Sobel.c:11]   --->   Operation 87 'zext' 'zext_ln11_10' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 88 [1/1] (0.00ns)   --->   "%image1_addr_5 = getelementptr [10000 x i32]* %image1, i64 0, i64 %zext_ln11_10" [Sobel.c:11]   --->   Operation 88 'getelementptr' 'image1_addr_5' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 89 [1/2] (2.66ns)   --->   "%image1_load_3 = load i32* %image1_addr_3, align 4" [Sobel.c:11]   --->   Operation 89 'load' 'image1_load_3' <Predicate = true> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10000> <RAM>
ST_5 : Operation 90 [2/2] (2.66ns)   --->   "%image1_load_4 = load i32* %image1_addr_4, align 4" [Sobel.c:11]   --->   Operation 90 'load' 'image1_load_4' <Predicate = true> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10000> <RAM>
ST_5 : Operation 91 [2/2] (2.66ns)   --->   "%image1_load_5 = load i32* %image1_addr_5, align 4" [Sobel.c:11]   --->   Operation 91 'load' 'image1_load_5' <Predicate = true> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10000> <RAM>
ST_5 : Operation 92 [1/1] (1.78ns) (out node of the LUT)   --->   "%add_ln11_4 = add i32 %shl_ln11, %image1_load_2" [Sobel.c:11]   --->   Operation 92 'add' 'add_ln11_4' <Predicate = true> <Delay = 1.78> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 93 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln11_5 = add i32 %image1_load, %add_ln11_4" [Sobel.c:11]   --->   Operation 93 'add' 'add_ln11_5' <Predicate = true> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.38> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_5 : Operation 94 [1/1] (2.77ns) (root node of TernaryAdder)   --->   "%sub_ln11 = sub i32 %add_ln11_5, %image1_load_3" [Sobel.c:11]   --->   Operation 94 'sub' 'sub_ln11' <Predicate = true> <Delay = 2.77> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.38> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_5 : Operation 95 [1/1] (0.00ns)   --->   "%zext_ln11_11 = zext i7 %i_0 to i14" [Sobel.c:11]   --->   Operation 95 'zext' 'zext_ln11_11' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 96 [1/1] (1.46ns)   --->   "%add_ln11_15 = add i14 %mul_ln11_2, %zext_ln11_11" [Sobel.c:11]   --->   Operation 96 'add' 'add_ln11_15' <Predicate = true> <Delay = 1.46> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 97 [1/1] (1.46ns)   --->   "%add_ln11_16 = add i14 %mul_ln11_4, %zext_ln11_11" [Sobel.c:11]   --->   Operation 97 'add' 'add_ln11_16' <Predicate = true> <Delay = 1.46> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 98 [1/1] (1.46ns)   --->   "%add_ln11_17 = add i14 %mul_ln11_3, %zext_ln11_11" [Sobel.c:11]   --->   Operation 98 'add' 'add_ln11_17' <Predicate = true> <Delay = 1.46> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 99 [1/1] (1.78ns)   --->   "%sub_ln11_3 = sub i32 %image1_load, %image1_load_2" [Sobel.c:11]   --->   Operation 99 'sub' 'sub_ln11_3' <Predicate = true> <Delay = 1.78> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 6 <SV = 5> <Delay = 5.44>
ST_6 : Operation 100 [1/2] (2.66ns)   --->   "%image1_load_4 = load i32* %image1_addr_4, align 4" [Sobel.c:11]   --->   Operation 100 'load' 'image1_load_4' <Predicate = true> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10000> <RAM>
ST_6 : Operation 101 [1/1] (0.00ns)   --->   "%shl_ln11_1 = shl i32 %image1_load_4, 1" [Sobel.c:11]   --->   Operation 101 'shl' 'shl_ln11_1' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 102 [1/2] (2.66ns)   --->   "%image1_load_5 = load i32* %image1_addr_5, align 4" [Sobel.c:11]   --->   Operation 102 'load' 'image1_load_5' <Predicate = true> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10000> <RAM>
ST_6 : Operation 103 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%sub_ln11_1 = sub i32 %sub_ln11, %shl_ln11_1" [Sobel.c:11]   --->   Operation 103 'sub' 'sub_ln11_1' <Predicate = true> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.38> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_6 : Operation 104 [1/1] (2.77ns) (root node of TernaryAdder)   --->   "%sub_ln11_2 = sub i32 %sub_ln11_1, %image1_load_5" [Sobel.c:11]   --->   Operation 104 'sub' 'sub_ln11_2' <Predicate = true> <Delay = 2.77> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.38> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_6 : Operation 105 [1/1] (0.00ns)   --->   "%zext_ln11_12 = zext i14 %add_ln11_15 to i64" [Sobel.c:11]   --->   Operation 105 'zext' 'zext_ln11_12' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 106 [1/1] (0.00ns)   --->   "%image1_addr_6 = getelementptr [10000 x i32]* %image1, i64 0, i64 %zext_ln11_12" [Sobel.c:11]   --->   Operation 106 'getelementptr' 'image1_addr_6' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 107 [1/1] (0.00ns)   --->   "%zext_ln11_13 = zext i14 %add_ln11_16 to i64" [Sobel.c:11]   --->   Operation 107 'zext' 'zext_ln11_13' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 108 [1/1] (0.00ns)   --->   "%image1_addr_7 = getelementptr [10000 x i32]* %image1, i64 0, i64 %zext_ln11_13" [Sobel.c:11]   --->   Operation 108 'getelementptr' 'image1_addr_7' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 109 [2/2] (2.66ns)   --->   "%image1_load_6 = load i32* %image1_addr_6, align 4" [Sobel.c:11]   --->   Operation 109 'load' 'image1_load_6' <Predicate = true> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10000> <RAM>
ST_6 : Operation 110 [2/2] (2.66ns)   --->   "%image1_load_7 = load i32* %image1_addr_7, align 4" [Sobel.c:11]   --->   Operation 110 'load' 'image1_load_7' <Predicate = true> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10000> <RAM>
ST_6 : Operation 111 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln11_6 = add i32 %sub_ln11_3, %image1_load_3" [Sobel.c:11]   --->   Operation 111 'add' 'add_ln11_6' <Predicate = true> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.38> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_6 : Operation 112 [1/1] (2.77ns) (root node of TernaryAdder)   --->   "%sub_ln11_4 = sub i32 %add_ln11_6, %image1_load_5" [Sobel.c:11]   --->   Operation 112 'sub' 'sub_ln11_4' <Predicate = true> <Delay = 2.77> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.38> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>

State 7 <SV = 6> <Delay = 5.44>
ST_7 : Operation 113 [1/2] (2.66ns)   --->   "%image1_load_6 = load i32* %image1_addr_6, align 4" [Sobel.c:11]   --->   Operation 113 'load' 'image1_load_6' <Predicate = true> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10000> <RAM>
ST_7 : Operation 114 [1/1] (0.00ns)   --->   "%shl_ln11_2 = shl i32 %image1_load_6, 1" [Sobel.c:11]   --->   Operation 114 'shl' 'shl_ln11_2' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 115 [1/2] (2.66ns)   --->   "%image1_load_7 = load i32* %image1_addr_7, align 4" [Sobel.c:11]   --->   Operation 115 'load' 'image1_load_7' <Predicate = true> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10000> <RAM>
ST_7 : Operation 116 [1/1] (0.00ns)   --->   "%shl_ln11_3 = shl i32 %image1_load_7, 1" [Sobel.c:11]   --->   Operation 116 'shl' 'shl_ln11_3' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 117 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln11_7 = add i32 %sub_ln11_4, %shl_ln11_2" [Sobel.c:11]   --->   Operation 117 'add' 'add_ln11_7' <Predicate = true> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.38> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_7 : Operation 118 [1/1] (2.77ns) (root node of TernaryAdder)   --->   "%sub_ln11_5 = sub i32 %add_ln11_7, %shl_ln11_3" [Sobel.c:11]   --->   Operation 118 'sub' 'sub_ln11_5' <Predicate = true> <Delay = 2.77> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.38> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>

State 8 <SV = 7> <Delay = 8.36>
ST_8 : Operation 119 [1/1] (6.58ns)   --->   "%mul_ln11 = mul nsw i32 %sub_ln11_2, %sub_ln11_2" [Sobel.c:11]   --->   Operation 119 'mul' 'mul_ln11' <Predicate = true> <Delay = 6.58> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 6.58> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 120 [1/1] (6.58ns)   --->   "%mul_ln11_1 = mul nsw i32 %sub_ln11_5, %sub_ln11_5" [Sobel.c:11]   --->   Operation 120 'mul' 'mul_ln11_1' <Predicate = true> <Delay = 6.58> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 6.58> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 121 [1/1] (1.78ns)   --->   "%add_ln11_8 = add nsw i32 %mul_ln11_1, %mul_ln11" [Sobel.c:11]   --->   Operation 121 'add' 'add_ln11_8' <Predicate = true> <Delay = 1.78> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 9 <SV = 8> <Delay = 7.09>
ST_9 : Operation 122 [4/4] (7.09ns)   --->   "%tmp = sitofp i32 %add_ln11_8 to double" [Sobel.c:11]   --->   Operation 122 'sitodp' 'tmp' <Predicate = true> <Delay = 7.09> <Core = "Int2Double">   --->   Core 122 'Int2Double' <Latency = 3> <II = 1> <Delay = 7.09> <FuncUnit> <Opcode : 'sitodp' 'uitodp'> <InPorts = 1> <OutPorts = 1>

State 10 <SV = 9> <Delay = 7.09>
ST_10 : Operation 123 [3/4] (7.09ns)   --->   "%tmp = sitofp i32 %add_ln11_8 to double" [Sobel.c:11]   --->   Operation 123 'sitodp' 'tmp' <Predicate = true> <Delay = 7.09> <Core = "Int2Double">   --->   Core 122 'Int2Double' <Latency = 3> <II = 1> <Delay = 7.09> <FuncUnit> <Opcode : 'sitodp' 'uitodp'> <InPorts = 1> <OutPorts = 1>

State 11 <SV = 10> <Delay = 7.09>
ST_11 : Operation 124 [2/4] (7.09ns)   --->   "%tmp = sitofp i32 %add_ln11_8 to double" [Sobel.c:11]   --->   Operation 124 'sitodp' 'tmp' <Predicate = true> <Delay = 7.09> <Core = "Int2Double">   --->   Core 122 'Int2Double' <Latency = 3> <II = 1> <Delay = 7.09> <FuncUnit> <Opcode : 'sitodp' 'uitodp'> <InPorts = 1> <OutPorts = 1>

State 12 <SV = 11> <Delay = 7.09>
ST_12 : Operation 125 [1/4] (7.09ns)   --->   "%tmp = sitofp i32 %add_ln11_8 to double" [Sobel.c:11]   --->   Operation 125 'sitodp' 'tmp' <Predicate = true> <Delay = 7.09> <Core = "Int2Double">   --->   Core 122 'Int2Double' <Latency = 3> <II = 1> <Delay = 7.09> <FuncUnit> <Opcode : 'sitodp' 'uitodp'> <InPorts = 1> <OutPorts = 1>

State 13 <SV = 12> <Delay = 7.88>
ST_13 : Operation 126 [21/21] (7.88ns)   --->   "%x_assign = call double @llvm.sqrt.f64(double %tmp)" [Sobel.c:11]   --->   Operation 126 'dsqrt' 'x_assign' <Predicate = true> <Delay = 7.88> <Core = "DSqrt">   --->   Core 118 'DSqrt' <Latency = 20> <II = 1> <Delay = 7.88> <FuncUnit> <Opcode : 'dsqrt'> <InPorts = 1> <OutPorts = 1>

State 14 <SV = 13> <Delay = 7.88>
ST_14 : Operation 127 [20/21] (7.88ns)   --->   "%x_assign = call double @llvm.sqrt.f64(double %tmp)" [Sobel.c:11]   --->   Operation 127 'dsqrt' 'x_assign' <Predicate = true> <Delay = 7.88> <Core = "DSqrt">   --->   Core 118 'DSqrt' <Latency = 20> <II = 1> <Delay = 7.88> <FuncUnit> <Opcode : 'dsqrt'> <InPorts = 1> <OutPorts = 1>

State 15 <SV = 14> <Delay = 7.88>
ST_15 : Operation 128 [19/21] (7.88ns)   --->   "%x_assign = call double @llvm.sqrt.f64(double %tmp)" [Sobel.c:11]   --->   Operation 128 'dsqrt' 'x_assign' <Predicate = true> <Delay = 7.88> <Core = "DSqrt">   --->   Core 118 'DSqrt' <Latency = 20> <II = 1> <Delay = 7.88> <FuncUnit> <Opcode : 'dsqrt'> <InPorts = 1> <OutPorts = 1>

State 16 <SV = 15> <Delay = 7.88>
ST_16 : Operation 129 [18/21] (7.88ns)   --->   "%x_assign = call double @llvm.sqrt.f64(double %tmp)" [Sobel.c:11]   --->   Operation 129 'dsqrt' 'x_assign' <Predicate = true> <Delay = 7.88> <Core = "DSqrt">   --->   Core 118 'DSqrt' <Latency = 20> <II = 1> <Delay = 7.88> <FuncUnit> <Opcode : 'dsqrt'> <InPorts = 1> <OutPorts = 1>

State 17 <SV = 16> <Delay = 7.88>
ST_17 : Operation 130 [17/21] (7.88ns)   --->   "%x_assign = call double @llvm.sqrt.f64(double %tmp)" [Sobel.c:11]   --->   Operation 130 'dsqrt' 'x_assign' <Predicate = true> <Delay = 7.88> <Core = "DSqrt">   --->   Core 118 'DSqrt' <Latency = 20> <II = 1> <Delay = 7.88> <FuncUnit> <Opcode : 'dsqrt'> <InPorts = 1> <OutPorts = 1>

State 18 <SV = 17> <Delay = 7.88>
ST_18 : Operation 131 [16/21] (7.88ns)   --->   "%x_assign = call double @llvm.sqrt.f64(double %tmp)" [Sobel.c:11]   --->   Operation 131 'dsqrt' 'x_assign' <Predicate = true> <Delay = 7.88> <Core = "DSqrt">   --->   Core 118 'DSqrt' <Latency = 20> <II = 1> <Delay = 7.88> <FuncUnit> <Opcode : 'dsqrt'> <InPorts = 1> <OutPorts = 1>

State 19 <SV = 18> <Delay = 7.88>
ST_19 : Operation 132 [15/21] (7.88ns)   --->   "%x_assign = call double @llvm.sqrt.f64(double %tmp)" [Sobel.c:11]   --->   Operation 132 'dsqrt' 'x_assign' <Predicate = true> <Delay = 7.88> <Core = "DSqrt">   --->   Core 118 'DSqrt' <Latency = 20> <II = 1> <Delay = 7.88> <FuncUnit> <Opcode : 'dsqrt'> <InPorts = 1> <OutPorts = 1>

State 20 <SV = 19> <Delay = 7.88>
ST_20 : Operation 133 [14/21] (7.88ns)   --->   "%x_assign = call double @llvm.sqrt.f64(double %tmp)" [Sobel.c:11]   --->   Operation 133 'dsqrt' 'x_assign' <Predicate = true> <Delay = 7.88> <Core = "DSqrt">   --->   Core 118 'DSqrt' <Latency = 20> <II = 1> <Delay = 7.88> <FuncUnit> <Opcode : 'dsqrt'> <InPorts = 1> <OutPorts = 1>

State 21 <SV = 20> <Delay = 7.88>
ST_21 : Operation 134 [13/21] (7.88ns)   --->   "%x_assign = call double @llvm.sqrt.f64(double %tmp)" [Sobel.c:11]   --->   Operation 134 'dsqrt' 'x_assign' <Predicate = true> <Delay = 7.88> <Core = "DSqrt">   --->   Core 118 'DSqrt' <Latency = 20> <II = 1> <Delay = 7.88> <FuncUnit> <Opcode : 'dsqrt'> <InPorts = 1> <OutPorts = 1>

State 22 <SV = 21> <Delay = 7.88>
ST_22 : Operation 135 [12/21] (7.88ns)   --->   "%x_assign = call double @llvm.sqrt.f64(double %tmp)" [Sobel.c:11]   --->   Operation 135 'dsqrt' 'x_assign' <Predicate = true> <Delay = 7.88> <Core = "DSqrt">   --->   Core 118 'DSqrt' <Latency = 20> <II = 1> <Delay = 7.88> <FuncUnit> <Opcode : 'dsqrt'> <InPorts = 1> <OutPorts = 1>

State 23 <SV = 22> <Delay = 7.88>
ST_23 : Operation 136 [11/21] (7.88ns)   --->   "%x_assign = call double @llvm.sqrt.f64(double %tmp)" [Sobel.c:11]   --->   Operation 136 'dsqrt' 'x_assign' <Predicate = true> <Delay = 7.88> <Core = "DSqrt">   --->   Core 118 'DSqrt' <Latency = 20> <II = 1> <Delay = 7.88> <FuncUnit> <Opcode : 'dsqrt'> <InPorts = 1> <OutPorts = 1>

State 24 <SV = 23> <Delay = 7.88>
ST_24 : Operation 137 [10/21] (7.88ns)   --->   "%x_assign = call double @llvm.sqrt.f64(double %tmp)" [Sobel.c:11]   --->   Operation 137 'dsqrt' 'x_assign' <Predicate = true> <Delay = 7.88> <Core = "DSqrt">   --->   Core 118 'DSqrt' <Latency = 20> <II = 1> <Delay = 7.88> <FuncUnit> <Opcode : 'dsqrt'> <InPorts = 1> <OutPorts = 1>

State 25 <SV = 24> <Delay = 7.88>
ST_25 : Operation 138 [9/21] (7.88ns)   --->   "%x_assign = call double @llvm.sqrt.f64(double %tmp)" [Sobel.c:11]   --->   Operation 138 'dsqrt' 'x_assign' <Predicate = true> <Delay = 7.88> <Core = "DSqrt">   --->   Core 118 'DSqrt' <Latency = 20> <II = 1> <Delay = 7.88> <FuncUnit> <Opcode : 'dsqrt'> <InPorts = 1> <OutPorts = 1>

State 26 <SV = 25> <Delay = 7.88>
ST_26 : Operation 139 [8/21] (7.88ns)   --->   "%x_assign = call double @llvm.sqrt.f64(double %tmp)" [Sobel.c:11]   --->   Operation 139 'dsqrt' 'x_assign' <Predicate = true> <Delay = 7.88> <Core = "DSqrt">   --->   Core 118 'DSqrt' <Latency = 20> <II = 1> <Delay = 7.88> <FuncUnit> <Opcode : 'dsqrt'> <InPorts = 1> <OutPorts = 1>

State 27 <SV = 26> <Delay = 7.88>
ST_27 : Operation 140 [7/21] (7.88ns)   --->   "%x_assign = call double @llvm.sqrt.f64(double %tmp)" [Sobel.c:11]   --->   Operation 140 'dsqrt' 'x_assign' <Predicate = true> <Delay = 7.88> <Core = "DSqrt">   --->   Core 118 'DSqrt' <Latency = 20> <II = 1> <Delay = 7.88> <FuncUnit> <Opcode : 'dsqrt'> <InPorts = 1> <OutPorts = 1>

State 28 <SV = 27> <Delay = 7.88>
ST_28 : Operation 141 [6/21] (7.88ns)   --->   "%x_assign = call double @llvm.sqrt.f64(double %tmp)" [Sobel.c:11]   --->   Operation 141 'dsqrt' 'x_assign' <Predicate = true> <Delay = 7.88> <Core = "DSqrt">   --->   Core 118 'DSqrt' <Latency = 20> <II = 1> <Delay = 7.88> <FuncUnit> <Opcode : 'dsqrt'> <InPorts = 1> <OutPorts = 1>

State 29 <SV = 28> <Delay = 7.88>
ST_29 : Operation 142 [5/21] (7.88ns)   --->   "%x_assign = call double @llvm.sqrt.f64(double %tmp)" [Sobel.c:11]   --->   Operation 142 'dsqrt' 'x_assign' <Predicate = true> <Delay = 7.88> <Core = "DSqrt">   --->   Core 118 'DSqrt' <Latency = 20> <II = 1> <Delay = 7.88> <FuncUnit> <Opcode : 'dsqrt'> <InPorts = 1> <OutPorts = 1>

State 30 <SV = 29> <Delay = 7.88>
ST_30 : Operation 143 [4/21] (7.88ns)   --->   "%x_assign = call double @llvm.sqrt.f64(double %tmp)" [Sobel.c:11]   --->   Operation 143 'dsqrt' 'x_assign' <Predicate = true> <Delay = 7.88> <Core = "DSqrt">   --->   Core 118 'DSqrt' <Latency = 20> <II = 1> <Delay = 7.88> <FuncUnit> <Opcode : 'dsqrt'> <InPorts = 1> <OutPorts = 1>

State 31 <SV = 30> <Delay = 7.88>
ST_31 : Operation 144 [3/21] (7.88ns)   --->   "%x_assign = call double @llvm.sqrt.f64(double %tmp)" [Sobel.c:11]   --->   Operation 144 'dsqrt' 'x_assign' <Predicate = true> <Delay = 7.88> <Core = "DSqrt">   --->   Core 118 'DSqrt' <Latency = 20> <II = 1> <Delay = 7.88> <FuncUnit> <Opcode : 'dsqrt'> <InPorts = 1> <OutPorts = 1>

State 32 <SV = 31> <Delay = 7.88>
ST_32 : Operation 145 [2/21] (7.88ns)   --->   "%x_assign = call double @llvm.sqrt.f64(double %tmp)" [Sobel.c:11]   --->   Operation 145 'dsqrt' 'x_assign' <Predicate = true> <Delay = 7.88> <Core = "DSqrt">   --->   Core 118 'DSqrt' <Latency = 20> <II = 1> <Delay = 7.88> <FuncUnit> <Opcode : 'dsqrt'> <InPorts = 1> <OutPorts = 1>

State 33 <SV = 32> <Delay = 7.88>
ST_33 : Operation 146 [1/21] (7.88ns)   --->   "%x_assign = call double @llvm.sqrt.f64(double %tmp)" [Sobel.c:11]   --->   Operation 146 'dsqrt' 'x_assign' <Predicate = true> <Delay = 7.88> <Core = "DSqrt">   --->   Core 118 'DSqrt' <Latency = 20> <II = 1> <Delay = 7.88> <FuncUnit> <Opcode : 'dsqrt'> <InPorts = 1> <OutPorts = 1>

State 34 <SV = 33> <Delay = 7.58>
ST_34 : Operation 147 [1/1] (0.00ns)   --->   "%p_Val2_s = bitcast double %x_assign to i64" [/wrk/2019.1/continuous/2019_05_24_2552052/src/products/hls/hls_lib/src/hls/utils/x_hls_utils.h:475->/wrk/2019.1/continuous/2019_05_24_2552052/src/products/hls/hls_lib/src/hls/utils/x_hls_utils.h:479->/wrk/2019.1/continuous/2019_05_24_2552052/src/products/hls/hls_lib/hlsmath/include/FloatingPoint/hls_case_IEEE754.h:13->/wrk/2019.1/continuous/2019_05_24_2552052/src/products/hls/hls_lib/hlsmath/include/FloatingPoint/hls_case_IEEE754.h:117->/wrk/2019.1/continuous/2019_05_24_2552052/src/products/hls/hls_lib/hlsmath/src/lib_floatconversion.cpp:55->Sobel.c:11]   --->   Operation 147 'bitcast' 'p_Val2_s' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 148 [1/1] (0.00ns)   --->   "%p_Result_s = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %p_Val2_s, i32 63)" [/wrk/2019.1/continuous/2019_05_24_2552052/src/products/hls/hls_lib/src/hls/utils/x_hls_utils.h:476->/wrk/2019.1/continuous/2019_05_24_2552052/src/products/hls/hls_lib/src/hls/utils/x_hls_utils.h:479->/wrk/2019.1/continuous/2019_05_24_2552052/src/products/hls/hls_lib/hlsmath/include/FloatingPoint/hls_case_IEEE754.h:13->/wrk/2019.1/continuous/2019_05_24_2552052/src/products/hls/hls_lib/hlsmath/include/FloatingPoint/hls_case_IEEE754.h:117->/wrk/2019.1/continuous/2019_05_24_2552052/src/products/hls/hls_lib/hlsmath/src/lib_floatconversion.cpp:55->Sobel.c:11]   --->   Operation 148 'bitselect' 'p_Result_s' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 149 [1/1] (0.00ns)   --->   "%tmp_V = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %p_Val2_s, i32 52, i32 62) nounwind" [/wrk/2019.1/continuous/2019_05_24_2552052/src/products/hls/hls_lib/src/hls/utils/x_hls_utils.h:477->/wrk/2019.1/continuous/2019_05_24_2552052/src/products/hls/hls_lib/src/hls/utils/x_hls_utils.h:479->/wrk/2019.1/continuous/2019_05_24_2552052/src/products/hls/hls_lib/hlsmath/include/FloatingPoint/hls_case_IEEE754.h:13->/wrk/2019.1/continuous/2019_05_24_2552052/src/products/hls/hls_lib/hlsmath/include/FloatingPoint/hls_case_IEEE754.h:117->/wrk/2019.1/continuous/2019_05_24_2552052/src/products/hls/hls_lib/hlsmath/src/lib_floatconversion.cpp:55->Sobel.c:11]   --->   Operation 149 'partselect' 'tmp_V' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 150 [1/1] (0.00ns)   --->   "%tmp_V_1 = trunc i64 %p_Val2_s to i52" [/wrk/2019.1/continuous/2019_05_24_2552052/src/products/hls/hls_lib/src/hls/utils/x_hls_utils.h:478->/wrk/2019.1/continuous/2019_05_24_2552052/src/products/hls/hls_lib/src/hls/utils/x_hls_utils.h:479->/wrk/2019.1/continuous/2019_05_24_2552052/src/products/hls/hls_lib/hlsmath/include/FloatingPoint/hls_case_IEEE754.h:13->/wrk/2019.1/continuous/2019_05_24_2552052/src/products/hls/hls_lib/hlsmath/include/FloatingPoint/hls_case_IEEE754.h:117->/wrk/2019.1/continuous/2019_05_24_2552052/src/products/hls/hls_lib/hlsmath/src/lib_floatconversion.cpp:55->Sobel.c:11]   --->   Operation 150 'trunc' 'tmp_V_1' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 151 [1/1] (0.00ns)   --->   "%mantissa_V = call i54 @_ssdm_op_BitConcatenate.i54.i1.i52.i1(i1 true, i52 %tmp_V_1, i1 false)" [/wrk/2019.1/continuous/2019_05_24_2552052/src/products/hls/hls_lib/hlsmath/include/FloatingPoint/hls_case_IEEE754.h:15->/wrk/2019.1/continuous/2019_05_24_2552052/src/products/hls/hls_lib/hlsmath/include/FloatingPoint/hls_case_IEEE754.h:117->/wrk/2019.1/continuous/2019_05_24_2552052/src/products/hls/hls_lib/hlsmath/src/lib_floatconversion.cpp:55->Sobel.c:11]   --->   Operation 151 'bitconcatenate' 'mantissa_V' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 152 [1/1] (0.00ns) (grouped into LUT with out node p_Val2_5)   --->   "%zext_ln682 = zext i54 %mantissa_V to i137" [/wrk/2019.1/continuous/2019_05_24_2552052/src/products/hls/hls_lib/hlsmath/include/FloatingPoint/hls_case_IEEE754.h:15->/wrk/2019.1/continuous/2019_05_24_2552052/src/products/hls/hls_lib/hlsmath/include/FloatingPoint/hls_case_IEEE754.h:117->/wrk/2019.1/continuous/2019_05_24_2552052/src/products/hls/hls_lib/hlsmath/src/lib_floatconversion.cpp:55->Sobel.c:11]   --->   Operation 152 'zext' 'zext_ln682' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 153 [1/1] (0.00ns)   --->   "%zext_ln502 = zext i11 %tmp_V to i12" [/wrk/2019.1/continuous/2019_05_24_2552052/src/products/hls/hls_lib/src/hls/utils/x_hls_utils.h:502->/wrk/2019.1/continuous/2019_05_24_2552052/src/products/hls/hls_lib/hlsmath/include/FloatingPoint/hls_case_IEEE754.h:18->/wrk/2019.1/continuous/2019_05_24_2552052/src/products/hls/hls_lib/hlsmath/include/FloatingPoint/hls_case_IEEE754.h:117->/wrk/2019.1/continuous/2019_05_24_2552052/src/products/hls/hls_lib/hlsmath/src/lib_floatconversion.cpp:55->Sobel.c:11]   --->   Operation 153 'zext' 'zext_ln502' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 154 [1/1] (1.42ns)   --->   "%add_ln502 = add i12 -1023, %zext_ln502" [/wrk/2019.1/continuous/2019_05_24_2552052/src/products/hls/hls_lib/src/hls/utils/x_hls_utils.h:502->/wrk/2019.1/continuous/2019_05_24_2552052/src/products/hls/hls_lib/hlsmath/include/FloatingPoint/hls_case_IEEE754.h:18->/wrk/2019.1/continuous/2019_05_24_2552052/src/products/hls/hls_lib/hlsmath/include/FloatingPoint/hls_case_IEEE754.h:117->/wrk/2019.1/continuous/2019_05_24_2552052/src/products/hls/hls_lib/hlsmath/src/lib_floatconversion.cpp:55->Sobel.c:11]   --->   Operation 154 'add' 'add_ln502' <Predicate = true> <Delay = 1.42> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_34 : Operation 155 [1/1] (0.00ns)   --->   "%isNeg = call i1 @_ssdm_op_BitSelect.i1.i12.i32(i12 %add_ln502, i32 11)" [/wrk/2019.1/continuous/2019_05_24_2552052/src/products/hls/hls_lib/hlsmath/include/FloatingPoint/hls_case_IEEE754.h:18->/wrk/2019.1/continuous/2019_05_24_2552052/src/products/hls/hls_lib/hlsmath/include/FloatingPoint/hls_case_IEEE754.h:117->/wrk/2019.1/continuous/2019_05_24_2552052/src/products/hls/hls_lib/hlsmath/src/lib_floatconversion.cpp:55->Sobel.c:11]   --->   Operation 155 'bitselect' 'isNeg' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 156 [1/1] (1.42ns)   --->   "%sub_ln1311 = sub i11 1023, %tmp_V" [/wrk/2019.1/continuous/2019_05_24_2552052/src/products/hls/hls_lib/hlsmath/include/FloatingPoint/hls_case_IEEE754.h:18->/wrk/2019.1/continuous/2019_05_24_2552052/src/products/hls/hls_lib/hlsmath/include/FloatingPoint/hls_case_IEEE754.h:117->/wrk/2019.1/continuous/2019_05_24_2552052/src/products/hls/hls_lib/hlsmath/src/lib_floatconversion.cpp:55->Sobel.c:11]   --->   Operation 156 'sub' 'sub_ln1311' <Predicate = true> <Delay = 1.42> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_34 : Operation 157 [1/1] (0.00ns)   --->   "%sext_ln1311 = sext i11 %sub_ln1311 to i12" [/wrk/2019.1/continuous/2019_05_24_2552052/src/products/hls/hls_lib/hlsmath/include/FloatingPoint/hls_case_IEEE754.h:18->/wrk/2019.1/continuous/2019_05_24_2552052/src/products/hls/hls_lib/hlsmath/include/FloatingPoint/hls_case_IEEE754.h:117->/wrk/2019.1/continuous/2019_05_24_2552052/src/products/hls/hls_lib/hlsmath/src/lib_floatconversion.cpp:55->Sobel.c:11]   --->   Operation 157 'sext' 'sext_ln1311' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 158 [1/1] (0.80ns)   --->   "%ush = select i1 %isNeg, i12 %sext_ln1311, i12 %add_ln502" [/wrk/2019.1/continuous/2019_05_24_2552052/src/products/hls/hls_lib/hlsmath/include/FloatingPoint/hls_case_IEEE754.h:18->/wrk/2019.1/continuous/2019_05_24_2552052/src/products/hls/hls_lib/hlsmath/include/FloatingPoint/hls_case_IEEE754.h:117->/wrk/2019.1/continuous/2019_05_24_2552052/src/products/hls/hls_lib/hlsmath/src/lib_floatconversion.cpp:55->Sobel.c:11]   --->   Operation 158 'select' 'ush' <Predicate = true> <Delay = 0.80> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.63> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_34 : Operation 159 [1/1] (0.00ns)   --->   "%sext_ln1311_1 = sext i12 %ush to i32" [/wrk/2019.1/continuous/2019_05_24_2552052/src/products/hls/hls_lib/hlsmath/include/FloatingPoint/hls_case_IEEE754.h:18->/wrk/2019.1/continuous/2019_05_24_2552052/src/products/hls/hls_lib/hlsmath/include/FloatingPoint/hls_case_IEEE754.h:117->/wrk/2019.1/continuous/2019_05_24_2552052/src/products/hls/hls_lib/hlsmath/src/lib_floatconversion.cpp:55->Sobel.c:11]   --->   Operation 159 'sext' 'sext_ln1311_1' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 160 [1/1] (0.00ns) (grouped into LUT with out node p_Val2_5)   --->   "%zext_ln1287 = zext i32 %sext_ln1311_1 to i137" [/wrk/2019.1/continuous/2019_05_24_2552052/src/products/hls/hls_lib/hlsmath/include/FloatingPoint/hls_case_IEEE754.h:18->/wrk/2019.1/continuous/2019_05_24_2552052/src/products/hls/hls_lib/hlsmath/include/FloatingPoint/hls_case_IEEE754.h:117->/wrk/2019.1/continuous/2019_05_24_2552052/src/products/hls/hls_lib/hlsmath/src/lib_floatconversion.cpp:55->Sobel.c:11]   --->   Operation 160 'zext' 'zext_ln1287' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 161 [1/1] (0.00ns) (grouped into LUT with out node p_Val2_5)   --->   "%zext_ln1285 = zext i32 %sext_ln1311_1 to i54" [/wrk/2019.1/continuous/2019_05_24_2552052/src/products/hls/hls_lib/hlsmath/include/FloatingPoint/hls_case_IEEE754.h:18->/wrk/2019.1/continuous/2019_05_24_2552052/src/products/hls/hls_lib/hlsmath/include/FloatingPoint/hls_case_IEEE754.h:117->/wrk/2019.1/continuous/2019_05_24_2552052/src/products/hls/hls_lib/hlsmath/src/lib_floatconversion.cpp:55->Sobel.c:11]   --->   Operation 161 'zext' 'zext_ln1285' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 162 [1/1] (0.00ns) (grouped into LUT with out node p_Val2_5)   --->   "%r_V = lshr i54 %mantissa_V, %zext_ln1285" [/wrk/2019.1/continuous/2019_05_24_2552052/src/products/hls/hls_lib/hlsmath/include/FloatingPoint/hls_case_IEEE754.h:18->/wrk/2019.1/continuous/2019_05_24_2552052/src/products/hls/hls_lib/hlsmath/include/FloatingPoint/hls_case_IEEE754.h:117->/wrk/2019.1/continuous/2019_05_24_2552052/src/products/hls/hls_lib/hlsmath/src/lib_floatconversion.cpp:55->Sobel.c:11]   --->   Operation 162 'lshr' 'r_V' <Predicate = true> <Delay = 0.00> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 2.93> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_34 : Operation 163 [1/1] (0.00ns) (grouped into LUT with out node p_Val2_5)   --->   "%r_V_1 = shl i137 %zext_ln682, %zext_ln1287" [/wrk/2019.1/continuous/2019_05_24_2552052/src/products/hls/hls_lib/hlsmath/include/FloatingPoint/hls_case_IEEE754.h:18->/wrk/2019.1/continuous/2019_05_24_2552052/src/products/hls/hls_lib/hlsmath/include/FloatingPoint/hls_case_IEEE754.h:117->/wrk/2019.1/continuous/2019_05_24_2552052/src/products/hls/hls_lib/hlsmath/src/lib_floatconversion.cpp:55->Sobel.c:11]   --->   Operation 163 'shl' 'r_V_1' <Predicate = true> <Delay = 0.00> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 2.93> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_34 : Operation 164 [1/1] (0.00ns) (grouped into LUT with out node p_Val2_5)   --->   "%tmp_3 = call i1 @_ssdm_op_BitSelect.i1.i54.i32(i54 %r_V, i32 53)" [/wrk/2019.1/continuous/2019_05_24_2552052/src/products/hls/hls_lib/hlsmath/include/FloatingPoint/hls_case_IEEE754.h:21->/wrk/2019.1/continuous/2019_05_24_2552052/src/products/hls/hls_lib/hlsmath/include/FloatingPoint/hls_case_IEEE754.h:117->/wrk/2019.1/continuous/2019_05_24_2552052/src/products/hls/hls_lib/hlsmath/src/lib_floatconversion.cpp:55->Sobel.c:11]   --->   Operation 164 'bitselect' 'tmp_3' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 165 [1/1] (0.00ns) (grouped into LUT with out node p_Val2_5)   --->   "%zext_ln662 = zext i1 %tmp_3 to i32" [/wrk/2019.1/continuous/2019_05_24_2552052/src/products/hls/hls_lib/hlsmath/include/FloatingPoint/hls_case_IEEE754.h:21->/wrk/2019.1/continuous/2019_05_24_2552052/src/products/hls/hls_lib/hlsmath/include/FloatingPoint/hls_case_IEEE754.h:117->/wrk/2019.1/continuous/2019_05_24_2552052/src/products/hls/hls_lib/hlsmath/src/lib_floatconversion.cpp:55->Sobel.c:11]   --->   Operation 165 'zext' 'zext_ln662' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 166 [1/1] (0.00ns) (grouped into LUT with out node p_Val2_5)   --->   "%tmp_6 = call i32 @_ssdm_op_PartSelect.i32.i137.i32.i32(i137 %r_V_1, i32 53, i32 84)" [/wrk/2019.1/continuous/2019_05_24_2552052/src/products/hls/hls_lib/hlsmath/include/FloatingPoint/hls_case_IEEE754.h:21->/wrk/2019.1/continuous/2019_05_24_2552052/src/products/hls/hls_lib/hlsmath/include/FloatingPoint/hls_case_IEEE754.h:117->/wrk/2019.1/continuous/2019_05_24_2552052/src/products/hls/hls_lib/hlsmath/src/lib_floatconversion.cpp:55->Sobel.c:11]   --->   Operation 166 'partselect' 'tmp_6' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 167 [1/1] (2.93ns) (out node of the LUT)   --->   "%p_Val2_5 = select i1 %isNeg, i32 %zext_ln662, i32 %tmp_6" [/wrk/2019.1/continuous/2019_05_24_2552052/src/products/hls/hls_lib/hlsmath/include/FloatingPoint/hls_case_IEEE754.h:18->/wrk/2019.1/continuous/2019_05_24_2552052/src/products/hls/hls_lib/hlsmath/include/FloatingPoint/hls_case_IEEE754.h:117->/wrk/2019.1/continuous/2019_05_24_2552052/src/products/hls/hls_lib/hlsmath/src/lib_floatconversion.cpp:55->Sobel.c:11]   --->   Operation 167 'select' 'p_Val2_5' <Predicate = true> <Delay = 2.93> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.63> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_34 : Operation 168 [1/1] (1.78ns)   --->   "%result_V_1 = sub i32 0, %p_Val2_5" [/wrk/2019.1/continuous/2019_05_24_2552052/src/products/hls/hls_lib/hlsmath/include/FloatingPoint/hls_case_IEEE754.h:59->/wrk/2019.1/continuous/2019_05_24_2552052/src/products/hls/hls_lib/hlsmath/include/FloatingPoint/hls_case_IEEE754.h:117->/wrk/2019.1/continuous/2019_05_24_2552052/src/products/hls/hls_lib/hlsmath/src/lib_floatconversion.cpp:55->Sobel.c:11]   --->   Operation 168 'sub' 'result_V_1' <Predicate = true> <Delay = 1.78> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_34 : Operation 169 [1/1] (0.63ns)   --->   "%p_Val2_6 = select i1 %p_Result_s, i32 %result_V_1, i32 %p_Val2_5" [/wrk/2019.1/continuous/2019_05_24_2552052/src/products/hls/hls_lib/hlsmath/include/FloatingPoint/hls_case_IEEE754.h:59->/wrk/2019.1/continuous/2019_05_24_2552052/src/products/hls/hls_lib/hlsmath/include/FloatingPoint/hls_case_IEEE754.h:117->/wrk/2019.1/continuous/2019_05_24_2552052/src/products/hls/hls_lib/hlsmath/src/lib_floatconversion.cpp:55->Sobel.c:11]   --->   Operation 169 'select' 'p_Val2_6' <Predicate = true> <Delay = 0.63> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.63> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>

State 35 <SV = 34> <Delay = 2.66>
ST_35 : Operation 170 [1/1] (0.00ns)   --->   "%zext_ln11_14 = zext i14 %add_ln11_17 to i64" [Sobel.c:11]   --->   Operation 170 'zext' 'zext_ln11_14' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 171 [1/1] (0.00ns)   --->   "%image2_addr = getelementptr [10000 x i32]* %image2, i64 0, i64 %zext_ln11_14" [Sobel.c:11]   --->   Operation 171 'getelementptr' 'image2_addr' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 172 [1/1] (2.66ns)   --->   "store i32 %p_Val2_6, i32* %image2_addr, align 4" [Sobel.c:11]   --->   Operation 172 'store' <Predicate = true> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10000> <RAM>
ST_35 : Operation 173 [1/1] (0.00ns)   --->   "br label %.preheader" [Sobel.c:9]   --->   Operation 173 'br' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 1.06ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('j') with incoming values : ('j', Sobel.c:11) [8]  (1.06 ns)

 <State 2>: 4.66ns
The critical path consists of the following:
	'phi' operation ('j') with incoming values : ('j', Sobel.c:11) [8]  (0 ns)
	'add' operation ('add_ln11', Sobel.c:11) [13]  (1.37 ns)
	'mul' operation ('mul_ln11_2', Sobel.c:11) [15]  (3.29 ns)

 <State 3>: 5.5ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', Sobel.c:11) [23]  (0 ns)
	'add' operation ('add_ln11_2', Sobel.c:11) [28]  (1.37 ns)
	'add' operation ('add_ln11_3', Sobel.c:11) [30]  (1.46 ns)
	'getelementptr' operation ('image1_addr', Sobel.c:11) [32]  (0 ns)
	'load' operation ('image1_load', Sobel.c:11) on array 'image1' [39]  (2.66 ns)

 <State 4>: 5.5ns
The critical path consists of the following:
	'add' operation ('i', Sobel.c:11) [43]  (1.37 ns)
	'add' operation ('add_ln11_12', Sobel.c:11) [45]  (1.46 ns)
	'getelementptr' operation ('image1_addr_3', Sobel.c:11) [47]  (0 ns)
	'load' operation ('image1_load_3', Sobel.c:11) on array 'image1' [54]  (2.66 ns)

 <State 5>: 7.22ns
The critical path consists of the following:
	'load' operation ('image1_load_2', Sobel.c:11) on array 'image1' [42]  (2.66 ns)
	'add' operation ('add_ln11_4', Sobel.c:11) [58]  (1.78 ns)
	'add' operation ('add_ln11_5', Sobel.c:11) [59]  (0 ns)
	'sub' operation ('sub_ln11', Sobel.c:11) [60]  (2.78 ns)

 <State 6>: 5.44ns
The critical path consists of the following:
	'load' operation ('image1_load_4', Sobel.c:11) on array 'image1' [55]  (2.66 ns)
	'shl' operation ('shl_ln11_1', Sobel.c:11) [56]  (0 ns)
	'sub' operation ('sub_ln11_1', Sobel.c:11) [61]  (0 ns)
	'sub' operation ('sub_ln11_2', Sobel.c:11) [62]  (2.78 ns)

 <State 7>: 5.44ns
The critical path consists of the following:
	'load' operation ('image1_load_6', Sobel.c:11) on array 'image1' [74]  (2.66 ns)
	'shl' operation ('shl_ln11_2', Sobel.c:11) [75]  (0 ns)
	'add' operation ('add_ln11_7', Sobel.c:11) [81]  (0 ns)
	'sub' operation ('sub_ln11_5', Sobel.c:11) [82]  (2.78 ns)

 <State 8>: 8.37ns
The critical path consists of the following:
	'mul' operation ('mul_ln11', Sobel.c:11) [63]  (6.58 ns)
	'add' operation ('add_ln11_8', Sobel.c:11) [84]  (1.78 ns)

 <State 9>: 7.1ns
The critical path consists of the following:
	'sitodp' operation ('tmp', Sobel.c:11) [85]  (7.1 ns)

 <State 10>: 7.1ns
The critical path consists of the following:
	'sitodp' operation ('tmp', Sobel.c:11) [85]  (7.1 ns)

 <State 11>: 7.1ns
The critical path consists of the following:
	'sitodp' operation ('tmp', Sobel.c:11) [85]  (7.1 ns)

 <State 12>: 7.1ns
The critical path consists of the following:
	'sitodp' operation ('tmp', Sobel.c:11) [85]  (7.1 ns)

 <State 13>: 7.89ns
The critical path consists of the following:
	'dsqrt' operation ('x', Sobel.c:11) [86]  (7.89 ns)

 <State 14>: 7.89ns
The critical path consists of the following:
	'dsqrt' operation ('x', Sobel.c:11) [86]  (7.89 ns)

 <State 15>: 7.89ns
The critical path consists of the following:
	'dsqrt' operation ('x', Sobel.c:11) [86]  (7.89 ns)

 <State 16>: 7.89ns
The critical path consists of the following:
	'dsqrt' operation ('x', Sobel.c:11) [86]  (7.89 ns)

 <State 17>: 7.89ns
The critical path consists of the following:
	'dsqrt' operation ('x', Sobel.c:11) [86]  (7.89 ns)

 <State 18>: 7.89ns
The critical path consists of the following:
	'dsqrt' operation ('x', Sobel.c:11) [86]  (7.89 ns)

 <State 19>: 7.89ns
The critical path consists of the following:
	'dsqrt' operation ('x', Sobel.c:11) [86]  (7.89 ns)

 <State 20>: 7.89ns
The critical path consists of the following:
	'dsqrt' operation ('x', Sobel.c:11) [86]  (7.89 ns)

 <State 21>: 7.89ns
The critical path consists of the following:
	'dsqrt' operation ('x', Sobel.c:11) [86]  (7.89 ns)

 <State 22>: 7.89ns
The critical path consists of the following:
	'dsqrt' operation ('x', Sobel.c:11) [86]  (7.89 ns)

 <State 23>: 7.89ns
The critical path consists of the following:
	'dsqrt' operation ('x', Sobel.c:11) [86]  (7.89 ns)

 <State 24>: 7.89ns
The critical path consists of the following:
	'dsqrt' operation ('x', Sobel.c:11) [86]  (7.89 ns)

 <State 25>: 7.89ns
The critical path consists of the following:
	'dsqrt' operation ('x', Sobel.c:11) [86]  (7.89 ns)

 <State 26>: 7.89ns
The critical path consists of the following:
	'dsqrt' operation ('x', Sobel.c:11) [86]  (7.89 ns)

 <State 27>: 7.89ns
The critical path consists of the following:
	'dsqrt' operation ('x', Sobel.c:11) [86]  (7.89 ns)

 <State 28>: 7.89ns
The critical path consists of the following:
	'dsqrt' operation ('x', Sobel.c:11) [86]  (7.89 ns)

 <State 29>: 7.89ns
The critical path consists of the following:
	'dsqrt' operation ('x', Sobel.c:11) [86]  (7.89 ns)

 <State 30>: 7.89ns
The critical path consists of the following:
	'dsqrt' operation ('x', Sobel.c:11) [86]  (7.89 ns)

 <State 31>: 7.89ns
The critical path consists of the following:
	'dsqrt' operation ('x', Sobel.c:11) [86]  (7.89 ns)

 <State 32>: 7.89ns
The critical path consists of the following:
	'dsqrt' operation ('x', Sobel.c:11) [86]  (7.89 ns)

 <State 33>: 7.89ns
The critical path consists of the following:
	'dsqrt' operation ('x', Sobel.c:11) [86]  (7.89 ns)

 <State 34>: 7.59ns
The critical path consists of the following:
	'add' operation ('sh', /wrk/2019.1/continuous/2019_05_24_2552052/src/products/hls/hls_lib/src/hls/utils/x_hls_utils.h:502->/wrk/2019.1/continuous/2019_05_24_2552052/src/products/hls/hls_lib/hlsmath/include/FloatingPoint/hls_case_IEEE754.h:18->/wrk/2019.1/continuous/2019_05_24_2552052/src/products/hls/hls_lib/hlsmath/include/FloatingPoint/hls_case_IEEE754.h:117->/wrk/2019.1/continuous/2019_05_24_2552052/src/products/hls/hls_lib/hlsmath/src/lib_floatconversion.cpp:55->Sobel.c:11) [94]  (1.43 ns)
	'select' operation ('sh', /wrk/2019.1/continuous/2019_05_24_2552052/src/products/hls/hls_lib/hlsmath/include/FloatingPoint/hls_case_IEEE754.h:18->/wrk/2019.1/continuous/2019_05_24_2552052/src/products/hls/hls_lib/hlsmath/include/FloatingPoint/hls_case_IEEE754.h:117->/wrk/2019.1/continuous/2019_05_24_2552052/src/products/hls/hls_lib/hlsmath/src/lib_floatconversion.cpp:55->Sobel.c:11) [98]  (0.808 ns)
	'lshr' operation ('r.V', /wrk/2019.1/continuous/2019_05_24_2552052/src/products/hls/hls_lib/hlsmath/include/FloatingPoint/hls_case_IEEE754.h:18->/wrk/2019.1/continuous/2019_05_24_2552052/src/products/hls/hls_lib/hlsmath/include/FloatingPoint/hls_case_IEEE754.h:117->/wrk/2019.1/continuous/2019_05_24_2552052/src/products/hls/hls_lib/hlsmath/src/lib_floatconversion.cpp:55->Sobel.c:11) [102]  (0 ns)
	'select' operation ('__Val2__', /wrk/2019.1/continuous/2019_05_24_2552052/src/products/hls/hls_lib/hlsmath/include/FloatingPoint/hls_case_IEEE754.h:18->/wrk/2019.1/continuous/2019_05_24_2552052/src/products/hls/hls_lib/hlsmath/include/FloatingPoint/hls_case_IEEE754.h:117->/wrk/2019.1/continuous/2019_05_24_2552052/src/products/hls/hls_lib/hlsmath/src/lib_floatconversion.cpp:55->Sobel.c:11) [107]  (2.93 ns)
	'sub' operation ('result.V', /wrk/2019.1/continuous/2019_05_24_2552052/src/products/hls/hls_lib/hlsmath/include/FloatingPoint/hls_case_IEEE754.h:59->/wrk/2019.1/continuous/2019_05_24_2552052/src/products/hls/hls_lib/hlsmath/include/FloatingPoint/hls_case_IEEE754.h:117->/wrk/2019.1/continuous/2019_05_24_2552052/src/products/hls/hls_lib/hlsmath/src/lib_floatconversion.cpp:55->Sobel.c:11) [108]  (1.78 ns)
	'select' operation ('__Val2__', /wrk/2019.1/continuous/2019_05_24_2552052/src/products/hls/hls_lib/hlsmath/include/FloatingPoint/hls_case_IEEE754.h:59->/wrk/2019.1/continuous/2019_05_24_2552052/src/products/hls/hls_lib/hlsmath/include/FloatingPoint/hls_case_IEEE754.h:117->/wrk/2019.1/continuous/2019_05_24_2552052/src/products/hls/hls_lib/hlsmath/src/lib_floatconversion.cpp:55->Sobel.c:11) [109]  (0.631 ns)

 <State 35>: 2.66ns
The critical path consists of the following:
	'getelementptr' operation ('image2_addr', Sobel.c:11) [73]  (0 ns)
	'store' operation ('store_ln11', Sobel.c:11) of variable '__Val2__', /wrk/2019.1/continuous/2019_05_24_2552052/src/products/hls/hls_lib/hlsmath/include/FloatingPoint/hls_case_IEEE754.h:59->/wrk/2019.1/continuous/2019_05_24_2552052/src/products/hls/hls_lib/hlsmath/include/FloatingPoint/hls_case_IEEE754.h:117->/wrk/2019.1/continuous/2019_05_24_2552052/src/products/hls/hls_lib/hlsmath/src/lib_floatconversion.cpp:55->Sobel.c:11 on array 'image2' [110]  (2.66 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25
	State 26
	State 27
	State 28
	State 29
	State 30
	State 31
	State 32
	State 33
	State 34
	State 35


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
