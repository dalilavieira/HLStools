// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _mandelbrot_HH_
#define _mandelbrot_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "mandelbrot_dadddsub_64ns_64ns_64_5_full_dsp_1.h"
#include "mandelbrot_dadd_64ns_64ns_64_5_full_dsp_1.h"
#include "mandelbrot_dmul_64ns_64ns_64_5_max_dsp_1.h"
#include "mandelbrot_dcmp_64ns_64ns_1_2_1.h"
#include "mandelbrot_sitodp_32ns_64_4_1.h"

namespace ap_rtl {

struct mandelbrot : public sc_module {
    // Port declarations 23
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<3> > color_address0;
    sc_out< sc_logic > color_ce0;
    sc_out< sc_logic > color_we0;
    sc_out< sc_lv<8> > color_d0;
    sc_out< sc_lv<3> > color_address1;
    sc_out< sc_logic > color_ce1;
    sc_out< sc_logic > color_we1;
    sc_out< sc_lv<8> > color_d1;
    sc_in< sc_lv<32> > xmax;
    sc_in< sc_lv<32> > xmin;
    sc_in< sc_lv<32> > ymax;
    sc_in< sc_lv<32> > ymin;
    sc_in< sc_lv<32> > maxiter;
    sc_in< sc_lv<32> > xres;
    sc_in< sc_lv<32> > yres;
    sc_in< sc_lv<32> > dx;
    sc_in< sc_lv<32> > dy;
    sc_signal< sc_logic > ap_var_for_const0;
    sc_signal< sc_lv<64> > ap_var_for_const1;
    sc_signal< sc_lv<64> > ap_var_for_const2;
    sc_signal< sc_lv<5> > ap_var_for_const3;


    // Module declarations
    mandelbrot(sc_module_name name);
    SC_HAS_PROCESS(mandelbrot);

    ~mandelbrot();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    mandelbrot_dadddsub_64ns_64ns_64_5_full_dsp_1<1,5,64,64,64>* mandelbrot_dadddsub_64ns_64ns_64_5_full_dsp_1_U1;
    mandelbrot_dadd_64ns_64ns_64_5_full_dsp_1<1,5,64,64,64>* mandelbrot_dadd_64ns_64ns_64_5_full_dsp_1_U2;
    mandelbrot_dmul_64ns_64ns_64_5_max_dsp_1<1,5,64,64,64>* mandelbrot_dmul_64ns_64ns_64_5_max_dsp_1_U3;
    mandelbrot_dmul_64ns_64ns_64_5_max_dsp_1<1,5,64,64,64>* mandelbrot_dmul_64ns_64ns_64_5_max_dsp_1_U4;
    mandelbrot_dmul_64ns_64ns_64_5_max_dsp_1<1,5,64,64,64>* mandelbrot_dmul_64ns_64ns_64_5_max_dsp_1_U5;
    mandelbrot_dcmp_64ns_64ns_1_2_1<1,2,64,64,1>* mandelbrot_dcmp_64ns_64ns_1_2_1_U6;
    mandelbrot_sitodp_32ns_64_4_1<1,4,32,64>* mandelbrot_sitodp_32ns_64_4_1_U7;
    sc_signal< sc_lv<34> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<64> > grp_fu_271_p2;
    sc_signal< sc_lv<64> > reg_306;
    sc_signal< sc_logic > ap_CS_fsm_state16;
    sc_signal< sc_logic > ap_CS_fsm_state22;
    sc_signal< sc_lv<32> > add_ln12_fu_312_p2;
    sc_signal< sc_lv<32> > add_ln12_reg_498;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<31> > j_fu_326_p2;
    sc_signal< sc_lv<31> > j_reg_506;
    sc_signal< sc_lv<32> > sub_ln13_fu_332_p2;
    sc_signal< sc_lv<32> > sub_ln13_reg_511;
    sc_signal< sc_lv<1> > icmp_ln12_fu_321_p2;
    sc_signal< sc_lv<64> > grp_fu_303_p1;
    sc_signal< sc_lv<64> > y_reg_516;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<32> > add_ln14_fu_337_p2;
    sc_signal< sc_lv<32> > add_ln14_reg_521;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<31> > i_fu_351_p2;
    sc_signal< sc_lv<31> > i_reg_529;
    sc_signal< sc_lv<32> > add_ln19_fu_357_p2;
    sc_signal< sc_lv<32> > add_ln19_reg_534;
    sc_signal< sc_lv<1> > icmp_ln14_fu_346_p2;
    sc_signal< sc_lv<64> > x_reg_539;
    sc_signal< sc_logic > ap_CS_fsm_state11;
    sc_signal< sc_lv<1> > icmp_ln21_fu_366_p2;
    sc_signal< sc_lv<1> > icmp_ln21_reg_544;
    sc_signal< sc_logic > ap_CS_fsm_state12;
    sc_signal< sc_lv<1> > icmp_ln21_1_fu_389_p2;
    sc_signal< sc_lv<1> > icmp_ln21_1_reg_548;
    sc_signal< sc_logic > ap_CS_fsm_state17;
    sc_signal< sc_lv<1> > icmp_ln21_2_fu_395_p2;
    sc_signal< sc_lv<1> > icmp_ln21_2_reg_553;
    sc_signal< sc_lv<31> > add_ln21_fu_411_p2;
    sc_signal< sc_lv<31> > add_ln21_reg_561;
    sc_signal< sc_logic > ap_CS_fsm_state18;
    sc_signal< sc_lv<1> > and_ln21_fu_405_p2;
    sc_signal< sc_lv<8> > trunc_ln_reg_566;
    sc_signal< sc_lv<8> > trunc_ln35_fu_428_p1;
    sc_signal< sc_lv<8> > trunc_ln35_reg_571;
    sc_signal< sc_lv<64> > grp_fu_283_p2;
    sc_signal< sc_lv<64> > tmp_2_reg_576;
    sc_signal< sc_lv<64> > v_reg_581;
    sc_signal< sc_logic > ap_CS_fsm_state27;
    sc_signal< sc_lv<64> > grp_fu_279_p2;
    sc_signal< sc_lv<64> > u_reg_588;
    sc_signal< sc_logic > ap_CS_fsm_state32;
    sc_signal< sc_lv<64> > grp_fu_289_p2;
    sc_signal< sc_lv<64> > grp_fu_293_p2;
    sc_signal< sc_lv<31> > j_0_reg_167;
    sc_signal< sc_lv<32> > phi_mul2_reg_178;
    sc_signal< sc_lv<31> > i_0_reg_189;
    sc_signal< sc_logic > ap_CS_fsm_state34;
    sc_signal< sc_lv<32> > phi_mul_reg_200;
    sc_signal< sc_lv<31> > k_0_reg_211;
    sc_signal< sc_lv<64> > phi_ln22_reg_223;
    sc_signal< sc_lv<64> > v2_0_reg_235;
    sc_signal< sc_lv<64> > ap_phi_mux_u2_0_phi_fu_251_p4;
    sc_signal< sc_lv<64> > u2_0_reg_247;
    sc_signal< sc_lv<64> > ap_phi_mux_v23_0_phi_fu_263_p4;
    sc_signal< sc_lv<64> > v23_0_reg_259;
    sc_signal< sc_logic > ap_CS_fsm_state33;
    sc_signal< sc_lv<64> > grp_fu_271_p0;
    sc_signal< sc_lv<64> > grp_fu_271_p1;
    sc_signal< sc_logic > ap_CS_fsm_state23;
    sc_signal< sc_lv<64> > grp_fu_283_p0;
    sc_signal< sc_lv<64> > grp_fu_283_p1;
    sc_signal< sc_logic > ap_CS_fsm_state28;
    sc_signal< sc_lv<32> > grp_fu_303_p0;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<32> > zext_ln12_fu_317_p1;
    sc_signal< sc_lv<32> > zext_ln14_fu_342_p1;
    sc_signal< sc_lv<32> > zext_ln21_fu_362_p1;
    sc_signal< sc_lv<64> > bitcast_ln21_fu_371_p1;
    sc_signal< sc_lv<11> > tmp_1_fu_375_p4;
    sc_signal< sc_lv<52> > trunc_ln21_fu_385_p1;
    sc_signal< sc_lv<1> > or_ln21_fu_401_p2;
    sc_signal< sc_lv<1> > grp_fu_298_p2;
    sc_signal< sc_lv<2> > grp_fu_271_opcode;
    sc_signal< sc_lv<34> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<34> ap_ST_fsm_state1;
    static const sc_lv<34> ap_ST_fsm_state2;
    static const sc_lv<34> ap_ST_fsm_state3;
    static const sc_lv<34> ap_ST_fsm_state4;
    static const sc_lv<34> ap_ST_fsm_state5;
    static const sc_lv<34> ap_ST_fsm_state6;
    static const sc_lv<34> ap_ST_fsm_state7;
    static const sc_lv<34> ap_ST_fsm_state8;
    static const sc_lv<34> ap_ST_fsm_state9;
    static const sc_lv<34> ap_ST_fsm_state10;
    static const sc_lv<34> ap_ST_fsm_state11;
    static const sc_lv<34> ap_ST_fsm_state12;
    static const sc_lv<34> ap_ST_fsm_state13;
    static const sc_lv<34> ap_ST_fsm_state14;
    static const sc_lv<34> ap_ST_fsm_state15;
    static const sc_lv<34> ap_ST_fsm_state16;
    static const sc_lv<34> ap_ST_fsm_state17;
    static const sc_lv<34> ap_ST_fsm_state18;
    static const sc_lv<34> ap_ST_fsm_state19;
    static const sc_lv<34> ap_ST_fsm_state20;
    static const sc_lv<34> ap_ST_fsm_state21;
    static const sc_lv<34> ap_ST_fsm_state22;
    static const sc_lv<34> ap_ST_fsm_state23;
    static const sc_lv<34> ap_ST_fsm_state24;
    static const sc_lv<34> ap_ST_fsm_state25;
    static const sc_lv<34> ap_ST_fsm_state26;
    static const sc_lv<34> ap_ST_fsm_state27;
    static const sc_lv<34> ap_ST_fsm_state28;
    static const sc_lv<34> ap_ST_fsm_state29;
    static const sc_lv<34> ap_ST_fsm_state30;
    static const sc_lv<34> ap_ST_fsm_state31;
    static const sc_lv<34> ap_ST_fsm_state32;
    static const sc_lv<34> ap_ST_fsm_state33;
    static const sc_lv<34> ap_ST_fsm_state34;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_F;
    static const sc_lv<32> ap_const_lv32_15;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<32> ap_const_lv32_B;
    static const sc_lv<32> ap_const_lv32_10;
    static const sc_lv<32> ap_const_lv32_11;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_1A;
    static const sc_lv<32> ap_const_lv32_1F;
    static const sc_lv<31> ap_const_lv31_0;
    static const sc_lv<32> ap_const_lv32_21;
    static const sc_lv<31> ap_const_lv31_1;
    static const sc_lv<64> ap_const_lv64_0;
    static const sc_lv<64> ap_const_lv64_1;
    static const sc_lv<64> ap_const_lv64_2;
    static const sc_lv<64> ap_const_lv64_3;
    static const sc_lv<64> ap_const_lv64_4;
    static const sc_lv<64> ap_const_lv64_5;
    static const sc_lv<32> ap_const_lv32_20;
    static const sc_lv<32> ap_const_lv32_16;
    static const sc_lv<32> ap_const_lv32_1B;
    static const sc_lv<64> ap_const_lv64_4000000000000000;
    static const sc_lv<64> ap_const_lv64_4010000000000000;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_34;
    static const sc_lv<32> ap_const_lv32_3E;
    static const sc_lv<11> ap_const_lv11_7FF;
    static const sc_lv<52> ap_const_lv52_0;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<5> ap_const_lv5_4;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_var_for_const1();
    void thread_ap_var_for_const2();
    void thread_ap_var_for_const3();
    void thread_ap_clk_no_reset_();
    void thread_add_ln12_fu_312_p2();
    void thread_add_ln14_fu_337_p2();
    void thread_add_ln19_fu_357_p2();
    void thread_add_ln21_fu_411_p2();
    void thread_and_ln21_fu_405_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state11();
    void thread_ap_CS_fsm_state12();
    void thread_ap_CS_fsm_state16();
    void thread_ap_CS_fsm_state17();
    void thread_ap_CS_fsm_state18();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state22();
    void thread_ap_CS_fsm_state23();
    void thread_ap_CS_fsm_state27();
    void thread_ap_CS_fsm_state28();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state32();
    void thread_ap_CS_fsm_state33();
    void thread_ap_CS_fsm_state34();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_phi_mux_u2_0_phi_fu_251_p4();
    void thread_ap_phi_mux_v23_0_phi_fu_263_p4();
    void thread_ap_ready();
    void thread_bitcast_ln21_fu_371_p1();
    void thread_color_address0();
    void thread_color_address1();
    void thread_color_ce0();
    void thread_color_ce1();
    void thread_color_d0();
    void thread_color_d1();
    void thread_color_we0();
    void thread_color_we1();
    void thread_grp_fu_271_opcode();
    void thread_grp_fu_271_p0();
    void thread_grp_fu_271_p1();
    void thread_grp_fu_283_p0();
    void thread_grp_fu_283_p1();
    void thread_grp_fu_303_p0();
    void thread_i_fu_351_p2();
    void thread_icmp_ln12_fu_321_p2();
    void thread_icmp_ln14_fu_346_p2();
    void thread_icmp_ln21_1_fu_389_p2();
    void thread_icmp_ln21_2_fu_395_p2();
    void thread_icmp_ln21_fu_366_p2();
    void thread_j_fu_326_p2();
    void thread_or_ln21_fu_401_p2();
    void thread_sub_ln13_fu_332_p2();
    void thread_tmp_1_fu_375_p4();
    void thread_trunc_ln21_fu_385_p1();
    void thread_trunc_ln35_fu_428_p1();
    void thread_zext_ln12_fu_317_p1();
    void thread_zext_ln14_fu_342_p1();
    void thread_zext_ln21_fu_362_p1();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
