

================================================================
== Vivado HLS Report for 'mandelbrot'
================================================================
* Date:           Mon Apr  6 17:25:04 2020

* Version:        2019.1 (Build 2552052 on Fri May 24 15:28:33 MDT 2019)
* Project:        mandelbrot
* Solution:       sol
* Product family: kintex7
* Target device:  xc7k160t-fbg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|     8.334|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |    ?|    ?|    ?|    ?|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-----------------+-----+-----+----------+-----------+-----------+------+----------+
        |                 |  Latency  | Iteration|  Initiation Interval  | Trip |          |
        |    Loop Name    | min | max |  Latency |  achieved |   target  | Count| Pipelined|
        +-----------------+-----+-----+----------+-----------+-----------+------+----------+
        |- Loop 1         |    ?|    ?|         ?|          -|          -|     ?|    no    |
        | + Loop 1.1      |    ?|    ?|         ?|          -|          -|     ?|    no    |
        |  ++ Loop 1.1.1  |    ?|    ?|        21|          -|          -|     ?|    no    |
        +-----------------+-----+-----+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 34
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 2 
8 --> 9 
9 --> 10 
10 --> 11 
11 --> 12 
12 --> 13 34 
13 --> 14 
14 --> 15 
15 --> 16 
16 --> 17 
17 --> 18 
18 --> 19 33 
19 --> 20 
20 --> 21 
21 --> 22 
22 --> 23 
23 --> 24 
24 --> 25 
25 --> 26 
26 --> 27 
27 --> 28 
28 --> 29 
29 --> 30 
30 --> 31 
31 --> 32 
32 --> 12 
33 --> 34 
34 --> 7 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.06>
ST_1 : Operation 35 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([6 x i8]* %color) nounwind, !map !13"   --->   Operation 35 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 36 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32 %xmax) nounwind, !map !19"   --->   Operation 36 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 37 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32 %xmin) nounwind, !map !25"   --->   Operation 37 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 38 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32 %ymax) nounwind, !map !29"   --->   Operation 38 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 39 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32 %ymin) nounwind, !map !33"   --->   Operation 39 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 40 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32 %maxiter) nounwind, !map !37"   --->   Operation 40 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 41 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32 %xres) nounwind, !map !41"   --->   Operation 41 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 42 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32 %yres) nounwind, !map !45"   --->   Operation 42 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 43 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32 %dx) nounwind, !map !49"   --->   Operation 43 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 44 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32 %dy) nounwind, !map !53"   --->   Operation 44 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 45 [1/1] (0.00ns)   --->   "%dy_read = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %dy) nounwind" [mandelbrot.c:6]   --->   Operation 45 'read' 'dy_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 46 [1/1] (0.00ns)   --->   "%dx_read = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %dx) nounwind" [mandelbrot.c:6]   --->   Operation 46 'read' 'dx_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 47 [1/1] (0.00ns)   --->   "%yres_read = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %yres) nounwind" [mandelbrot.c:6]   --->   Operation 47 'read' 'yres_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 48 [1/1] (0.00ns)   --->   "%xres_read = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %xres) nounwind" [mandelbrot.c:6]   --->   Operation 48 'read' 'xres_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 49 [1/1] (0.00ns)   --->   "%maxiter_read = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %maxiter) nounwind" [mandelbrot.c:6]   --->   Operation 49 'read' 'maxiter_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 50 [1/1] (0.00ns)   --->   "%ymax_read = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %ymax) nounwind" [mandelbrot.c:6]   --->   Operation 50 'read' 'ymax_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 51 [1/1] (0.00ns)   --->   "%xmin_read = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %xmin) nounwind" [mandelbrot.c:6]   --->   Operation 51 'read' 'xmin_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 52 [1/1] (0.00ns)   --->   "%color_addr = getelementptr [6 x i8]* %color, i64 0, i64 0" [mandelbrot.c:6]   --->   Operation 52 'getelementptr' 'color_addr' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 53 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecTopModule([11 x i8]* @mandelbrot_str) nounwind"   --->   Operation 53 'spectopmodule' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 54 [1/1] (0.00ns)   --->   "%color_addr_1 = getelementptr [6 x i8]* %color, i64 0, i64 1" [mandelbrot.c:35]   --->   Operation 54 'getelementptr' 'color_addr_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 55 [1/1] (0.00ns)   --->   "%color_addr_2 = getelementptr [6 x i8]* %color, i64 0, i64 2" [mandelbrot.c:36]   --->   Operation 55 'getelementptr' 'color_addr_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 56 [1/1] (0.00ns)   --->   "%color_addr_3 = getelementptr [6 x i8]* %color, i64 0, i64 3" [mandelbrot.c:37]   --->   Operation 56 'getelementptr' 'color_addr_3' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 57 [1/1] (0.00ns)   --->   "%color_addr_4 = getelementptr [6 x i8]* %color, i64 0, i64 4" [mandelbrot.c:38]   --->   Operation 57 'getelementptr' 'color_addr_4' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 58 [1/1] (0.00ns)   --->   "%color_addr_5 = getelementptr [6 x i8]* %color, i64 0, i64 5" [mandelbrot.c:39]   --->   Operation 58 'getelementptr' 'color_addr_5' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 59 [1/1] (1.06ns)   --->   "br label %.loopexit" [mandelbrot.c:12]   --->   Operation 59 'br' <Predicate = true> <Delay = 1.06>

State 2 <SV = 1> <Delay = 1.78>
ST_2 : Operation 60 [1/1] (0.00ns)   --->   "%j_0 = phi i31 [ 0, %0 ], [ %j, %.loopexit.loopexit ]"   --->   Operation 60 'phi' 'j_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 61 [1/1] (0.00ns)   --->   "%phi_mul2 = phi i32 [ 0, %0 ], [ %add_ln12, %.loopexit.loopexit ]" [mandelbrot.c:12]   --->   Operation 61 'phi' 'phi_mul2' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 62 [1/1] (1.78ns)   --->   "%add_ln12 = add i32 %phi_mul2, %dy_read" [mandelbrot.c:12]   --->   Operation 62 'add' 'add_ln12' <Predicate = true> <Delay = 1.78> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.76> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 63 [1/1] (0.00ns)   --->   "%zext_ln12 = zext i31 %j_0 to i32" [mandelbrot.c:12]   --->   Operation 63 'zext' 'zext_ln12' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 64 [1/1] (1.54ns)   --->   "%icmp_ln12 = icmp slt i32 %zext_ln12, %yres_read" [mandelbrot.c:12]   --->   Operation 64 'icmp' 'icmp_ln12' <Predicate = true> <Delay = 1.54> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.74> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 65 [1/1] (1.76ns)   --->   "%j = add i31 %j_0, 1" [mandelbrot.c:12]   --->   Operation 65 'add' 'j' <Predicate = true> <Delay = 1.76> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.76> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 66 [1/1] (0.00ns)   --->   "br i1 %icmp_ln12, label %1, label %7" [mandelbrot.c:12]   --->   Operation 66 'br' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 67 [1/1] (1.78ns)   --->   "%sub_ln13 = sub nsw i32 %ymax_read, %phi_mul2" [mandelbrot.c:13]   --->   Operation 67 'sub' 'sub_ln13' <Predicate = (icmp_ln12)> <Delay = 1.78> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.76> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 68 [1/1] (0.00ns)   --->   "ret void" [mandelbrot.c:43]   --->   Operation 68 'ret' <Predicate = (!icmp_ln12)> <Delay = 0.00>

State 3 <SV = 2> <Delay = 7.09>
ST_3 : Operation 69 [4/4] (7.09ns)   --->   "%y = sitofp i32 %sub_ln13 to double" [mandelbrot.c:13]   --->   Operation 69 'sitodp' 'y' <Predicate = true> <Delay = 7.09> <Core = "Int2Double">   --->   Core 122 'Int2Double' <Latency = 3> <II = 1> <Delay = 7.09> <FuncUnit> <Opcode : 'sitodp' 'uitodp'> <InPorts = 1> <OutPorts = 1>

State 4 <SV = 3> <Delay = 7.09>
ST_4 : Operation 70 [3/4] (7.09ns)   --->   "%y = sitofp i32 %sub_ln13 to double" [mandelbrot.c:13]   --->   Operation 70 'sitodp' 'y' <Predicate = true> <Delay = 7.09> <Core = "Int2Double">   --->   Core 122 'Int2Double' <Latency = 3> <II = 1> <Delay = 7.09> <FuncUnit> <Opcode : 'sitodp' 'uitodp'> <InPorts = 1> <OutPorts = 1>

State 5 <SV = 4> <Delay = 7.09>
ST_5 : Operation 71 [2/4] (7.09ns)   --->   "%y = sitofp i32 %sub_ln13 to double" [mandelbrot.c:13]   --->   Operation 71 'sitodp' 'y' <Predicate = true> <Delay = 7.09> <Core = "Int2Double">   --->   Core 122 'Int2Double' <Latency = 3> <II = 1> <Delay = 7.09> <FuncUnit> <Opcode : 'sitodp' 'uitodp'> <InPorts = 1> <OutPorts = 1>

State 6 <SV = 5> <Delay = 7.09>
ST_6 : Operation 72 [1/4] (7.09ns)   --->   "%y = sitofp i32 %sub_ln13 to double" [mandelbrot.c:13]   --->   Operation 72 'sitodp' 'y' <Predicate = true> <Delay = 7.09> <Core = "Int2Double">   --->   Core 122 'Int2Double' <Latency = 3> <II = 1> <Delay = 7.09> <FuncUnit> <Opcode : 'sitodp' 'uitodp'> <InPorts = 1> <OutPorts = 1>
ST_6 : Operation 73 [1/1] (1.06ns)   --->   "br label %2" [mandelbrot.c:14]   --->   Operation 73 'br' <Predicate = true> <Delay = 1.06>

State 7 <SV = 6> <Delay = 1.78>
ST_7 : Operation 74 [1/1] (0.00ns)   --->   "%i_0 = phi i31 [ 0, %1 ], [ %i, %.critedge2 ]"   --->   Operation 74 'phi' 'i_0' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 75 [1/1] (0.00ns)   --->   "%phi_mul = phi i32 [ 0, %1 ], [ %add_ln14, %.critedge2 ]" [mandelbrot.c:14]   --->   Operation 75 'phi' 'phi_mul' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 76 [1/1] (1.78ns)   --->   "%add_ln14 = add i32 %phi_mul, %dx_read" [mandelbrot.c:14]   --->   Operation 76 'add' 'add_ln14' <Predicate = true> <Delay = 1.78> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.76> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 77 [1/1] (0.00ns)   --->   "%zext_ln14 = zext i31 %i_0 to i32" [mandelbrot.c:14]   --->   Operation 77 'zext' 'zext_ln14' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 78 [1/1] (1.54ns)   --->   "%icmp_ln14 = icmp slt i32 %zext_ln14, %xres_read" [mandelbrot.c:14]   --->   Operation 78 'icmp' 'icmp_ln14' <Predicate = true> <Delay = 1.54> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.74> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 79 [1/1] (1.76ns)   --->   "%i = add i31 %i_0, 1" [mandelbrot.c:14]   --->   Operation 79 'add' 'i' <Predicate = true> <Delay = 1.76> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.76> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 80 [1/1] (0.00ns)   --->   "br i1 %icmp_ln14, label %3, label %.loopexit.loopexit" [mandelbrot.c:14]   --->   Operation 80 'br' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 81 [1/1] (1.78ns)   --->   "%add_ln19 = add nsw i32 %phi_mul, %xmin_read" [mandelbrot.c:19]   --->   Operation 81 'add' 'add_ln19' <Predicate = (icmp_ln14)> <Delay = 1.78> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.76> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 82 [1/1] (0.00ns)   --->   "br label %.loopexit"   --->   Operation 82 'br' <Predicate = (!icmp_ln14)> <Delay = 0.00>

State 8 <SV = 7> <Delay = 7.09>
ST_8 : Operation 83 [4/4] (7.09ns)   --->   "%x = sitofp i32 %add_ln19 to double" [mandelbrot.c:19]   --->   Operation 83 'sitodp' 'x' <Predicate = true> <Delay = 7.09> <Core = "Int2Double">   --->   Core 122 'Int2Double' <Latency = 3> <II = 1> <Delay = 7.09> <FuncUnit> <Opcode : 'sitodp' 'uitodp'> <InPorts = 1> <OutPorts = 1>

State 9 <SV = 8> <Delay = 7.09>
ST_9 : Operation 84 [3/4] (7.09ns)   --->   "%x = sitofp i32 %add_ln19 to double" [mandelbrot.c:19]   --->   Operation 84 'sitodp' 'x' <Predicate = true> <Delay = 7.09> <Core = "Int2Double">   --->   Core 122 'Int2Double' <Latency = 3> <II = 1> <Delay = 7.09> <FuncUnit> <Opcode : 'sitodp' 'uitodp'> <InPorts = 1> <OutPorts = 1>

State 10 <SV = 9> <Delay = 7.09>
ST_10 : Operation 85 [2/4] (7.09ns)   --->   "%x = sitofp i32 %add_ln19 to double" [mandelbrot.c:19]   --->   Operation 85 'sitodp' 'x' <Predicate = true> <Delay = 7.09> <Core = "Int2Double">   --->   Core 122 'Int2Double' <Latency = 3> <II = 1> <Delay = 7.09> <FuncUnit> <Opcode : 'sitodp' 'uitodp'> <InPorts = 1> <OutPorts = 1>

State 11 <SV = 10> <Delay = 7.09>
ST_11 : Operation 86 [1/4] (7.09ns)   --->   "%x = sitofp i32 %add_ln19 to double" [mandelbrot.c:19]   --->   Operation 86 'sitodp' 'x' <Predicate = true> <Delay = 7.09> <Core = "Int2Double">   --->   Core 122 'Int2Double' <Latency = 3> <II = 1> <Delay = 7.09> <FuncUnit> <Opcode : 'sitodp' 'uitodp'> <InPorts = 1> <OutPorts = 1>
ST_11 : Operation 87 [1/1] (1.06ns)   --->   "br label %4" [mandelbrot.c:21]   --->   Operation 87 'br' <Predicate = true> <Delay = 1.06>

State 12 <SV = 11> <Delay = 6.91>
ST_12 : Operation 88 [1/1] (0.00ns)   --->   "%k_0 = phi i31 [ 1, %3 ], [ %add_ln21, %6 ]" [mandelbrot.c:21]   --->   Operation 88 'phi' 'k_0' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 89 [1/1] (0.00ns)   --->   "%phi_ln22 = phi double [ 0.000000e+00, %3 ], [ %phitmp, %6 ]" [mandelbrot.c:22]   --->   Operation 89 'phi' 'phi_ln22' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 90 [1/1] (0.00ns)   --->   "%v2_0 = phi double [ 0.000000e+00, %3 ], [ %v, %6 ]"   --->   Operation 90 'phi' 'v2_0' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 91 [1/1] (0.00ns)   --->   "%u2_0 = phi double [ 0.000000e+00, %3 ], [ %u2, %6 ]"   --->   Operation 91 'phi' 'u2_0' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 92 [1/1] (0.00ns)   --->   "%v23_0 = phi double [ 0.000000e+00, %3 ], [ %v2, %6 ]"   --->   Operation 92 'phi' 'v23_0' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 93 [1/1] (0.00ns)   --->   "%zext_ln21 = zext i31 %k_0 to i32" [mandelbrot.c:21]   --->   Operation 93 'zext' 'zext_ln21' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 94 [1/1] (1.54ns)   --->   "%icmp_ln21 = icmp slt i32 %zext_ln21, %maxiter_read" [mandelbrot.c:21]   --->   Operation 94 'icmp' 'icmp_ln21' <Predicate = true> <Delay = 1.54> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.74> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 95 [1/1] (0.00ns)   --->   "br i1 %icmp_ln21, label %5, label %.critedge2.loopexit" [mandelbrot.c:21]   --->   Operation 95 'br' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 96 [5/5] (6.91ns)   --->   "%tmp = fadd double %u2_0, %v23_0" [mandelbrot.c:21]   --->   Operation 96 'dadd' 'tmp' <Predicate = (icmp_ln21)> <Delay = 6.91> <Core = "DAddSub">   --->   Core 115 'DAddSub' <Latency = 4> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 97 [1/1] (0.00ns)   --->   "br label %.critedge2"   --->   Operation 97 'br' <Predicate = (!icmp_ln21)> <Delay = 0.00>

State 13 <SV = 12> <Delay = 6.91>
ST_13 : Operation 98 [4/5] (6.91ns)   --->   "%tmp = fadd double %u2_0, %v23_0" [mandelbrot.c:21]   --->   Operation 98 'dadd' 'tmp' <Predicate = true> <Delay = 6.91> <Core = "DAddSub">   --->   Core 115 'DAddSub' <Latency = 4> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>

State 14 <SV = 13> <Delay = 6.91>
ST_14 : Operation 99 [3/5] (6.91ns)   --->   "%tmp = fadd double %u2_0, %v23_0" [mandelbrot.c:21]   --->   Operation 99 'dadd' 'tmp' <Predicate = true> <Delay = 6.91> <Core = "DAddSub">   --->   Core 115 'DAddSub' <Latency = 4> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>

State 15 <SV = 14> <Delay = 6.91>
ST_15 : Operation 100 [2/5] (6.91ns)   --->   "%tmp = fadd double %u2_0, %v23_0" [mandelbrot.c:21]   --->   Operation 100 'dadd' 'tmp' <Predicate = true> <Delay = 6.91> <Core = "DAddSub">   --->   Core 115 'DAddSub' <Latency = 4> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>

State 16 <SV = 15> <Delay = 6.91>
ST_16 : Operation 101 [1/5] (6.91ns)   --->   "%tmp = fadd double %u2_0, %v23_0" [mandelbrot.c:21]   --->   Operation 101 'dadd' 'tmp' <Predicate = true> <Delay = 6.91> <Core = "DAddSub">   --->   Core 115 'DAddSub' <Latency = 4> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>

State 17 <SV = 16> <Delay = 3.61>
ST_17 : Operation 102 [1/1] (0.00ns)   --->   "%bitcast_ln21 = bitcast double %tmp to i64" [mandelbrot.c:21]   --->   Operation 102 'bitcast' 'bitcast_ln21' <Predicate = true> <Delay = 0.00>
ST_17 : Operation 103 [1/1] (0.00ns)   --->   "%tmp_1 = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %bitcast_ln21, i32 52, i32 62)" [mandelbrot.c:21]   --->   Operation 103 'partselect' 'tmp_1' <Predicate = true> <Delay = 0.00>
ST_17 : Operation 104 [1/1] (0.00ns)   --->   "%trunc_ln21 = trunc i64 %bitcast_ln21 to i52" [mandelbrot.c:21]   --->   Operation 104 'trunc' 'trunc_ln21' <Predicate = true> <Delay = 0.00>
ST_17 : Operation 105 [1/1] (1.32ns)   --->   "%icmp_ln21_1 = icmp ne i11 %tmp_1, -1" [mandelbrot.c:21]   --->   Operation 105 'icmp' 'icmp_ln21_1' <Predicate = true> <Delay = 1.32> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.74> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 106 [1/1] (1.74ns)   --->   "%icmp_ln21_2 = icmp eq i52 %trunc_ln21, 0" [mandelbrot.c:21]   --->   Operation 106 'icmp' 'icmp_ln21_2' <Predicate = true> <Delay = 1.74> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.74> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 107 [2/2] (3.61ns)   --->   "%tmp_3 = fcmp olt double %tmp, 4.000000e+00" [mandelbrot.c:21]   --->   Operation 107 'dcmp' 'tmp_3' <Predicate = true> <Delay = 3.61> <Core = "DCmp">   --->   Core 120 'DCmp' <Latency = 1> <II = 1> <Delay = 3.61> <FuncUnit> <Opcode : 'dcmp'> <InPorts = 2> <OutPorts = 1>

State 18 <SV = 17> <Delay = 8.33>
ST_18 : Operation 108 [1/1] (0.00ns) (grouped into LUT with out node and_ln21)   --->   "%or_ln21 = or i1 %icmp_ln21_2, %icmp_ln21_1" [mandelbrot.c:21]   --->   Operation 108 'or' 'or_ln21' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 109 [1/2] (3.61ns)   --->   "%tmp_3 = fcmp olt double %tmp, 4.000000e+00" [mandelbrot.c:21]   --->   Operation 109 'dcmp' 'tmp_3' <Predicate = true> <Delay = 3.61> <Core = "DCmp">   --->   Core 120 'DCmp' <Latency = 1> <II = 1> <Delay = 3.61> <FuncUnit> <Opcode : 'dcmp'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 110 [1/1] (0.61ns) (out node of the LUT)   --->   "%and_ln21 = and i1 %or_ln21, %tmp_3" [mandelbrot.c:21]   --->   Operation 110 'and' 'and_ln21' <Predicate = true> <Delay = 0.61> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 111 [1/1] (0.00ns)   --->   "br i1 %and_ln21, label %6, label %.critedge" [mandelbrot.c:21]   --->   Operation 111 'br' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 112 [5/5] (8.33ns)   --->   "%tmp_2 = fmul double %phi_ln22, %v2_0" [mandelbrot.c:22]   --->   Operation 112 'dmul' 'tmp_2' <Predicate = (and_ln21)> <Delay = 8.33> <Core = "DMul">   --->   Core 116 'DMul' <Latency = 4> <II = 1> <Delay = 8.33> <FuncUnit> <Opcode : 'dmul'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 113 [5/5] (6.91ns)   --->   "%tmp_4 = fsub double %u2_0, %v23_0" [mandelbrot.c:23]   --->   Operation 113 'dsub' 'tmp_4' <Predicate = (and_ln21)> <Delay = 6.91> <Core = "DAddSub">   --->   Core 115 'DAddSub' <Latency = 4> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 114 [1/1] (1.76ns)   --->   "%add_ln21 = add i31 %k_0, 1" [mandelbrot.c:21]   --->   Operation 114 'add' 'add_ln21' <Predicate = (and_ln21)> <Delay = 1.76> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.76> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 115 [1/1] (0.00ns)   --->   "%trunc_ln = call i8 @_ssdm_op_PartSelect.i8.i31.i32.i32(i31 %k_0, i32 8, i32 15)" [mandelbrot.c:34]   --->   Operation 115 'partselect' 'trunc_ln' <Predicate = (!and_ln21)> <Delay = 0.00>
ST_18 : Operation 116 [1/1] (1.42ns)   --->   "store i8 %trunc_ln, i8* %color_addr, align 1" [mandelbrot.c:34]   --->   Operation 116 'store' <Predicate = (!and_ln21)> <Delay = 1.42> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.42> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 6> <RAM>
ST_18 : Operation 117 [1/1] (0.00ns)   --->   "%trunc_ln35 = trunc i31 %k_0 to i8" [mandelbrot.c:35]   --->   Operation 117 'trunc' 'trunc_ln35' <Predicate = (!and_ln21)> <Delay = 0.00>
ST_18 : Operation 118 [1/1] (1.42ns)   --->   "store i8 %trunc_ln35, i8* %color_addr_1, align 1" [mandelbrot.c:35]   --->   Operation 118 'store' <Predicate = (!and_ln21)> <Delay = 1.42> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.42> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 6> <RAM>

State 19 <SV = 18> <Delay = 8.33>
ST_19 : Operation 119 [4/5] (8.33ns)   --->   "%tmp_2 = fmul double %phi_ln22, %v2_0" [mandelbrot.c:22]   --->   Operation 119 'dmul' 'tmp_2' <Predicate = true> <Delay = 8.33> <Core = "DMul">   --->   Core 116 'DMul' <Latency = 4> <II = 1> <Delay = 8.33> <FuncUnit> <Opcode : 'dmul'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 120 [4/5] (6.91ns)   --->   "%tmp_4 = fsub double %u2_0, %v23_0" [mandelbrot.c:23]   --->   Operation 120 'dsub' 'tmp_4' <Predicate = true> <Delay = 6.91> <Core = "DAddSub">   --->   Core 115 'DAddSub' <Latency = 4> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>

State 20 <SV = 19> <Delay = 8.33>
ST_20 : Operation 121 [3/5] (8.33ns)   --->   "%tmp_2 = fmul double %phi_ln22, %v2_0" [mandelbrot.c:22]   --->   Operation 121 'dmul' 'tmp_2' <Predicate = true> <Delay = 8.33> <Core = "DMul">   --->   Core 116 'DMul' <Latency = 4> <II = 1> <Delay = 8.33> <FuncUnit> <Opcode : 'dmul'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 122 [3/5] (6.91ns)   --->   "%tmp_4 = fsub double %u2_0, %v23_0" [mandelbrot.c:23]   --->   Operation 122 'dsub' 'tmp_4' <Predicate = true> <Delay = 6.91> <Core = "DAddSub">   --->   Core 115 'DAddSub' <Latency = 4> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>

State 21 <SV = 20> <Delay = 8.33>
ST_21 : Operation 123 [2/5] (8.33ns)   --->   "%tmp_2 = fmul double %phi_ln22, %v2_0" [mandelbrot.c:22]   --->   Operation 123 'dmul' 'tmp_2' <Predicate = true> <Delay = 8.33> <Core = "DMul">   --->   Core 116 'DMul' <Latency = 4> <II = 1> <Delay = 8.33> <FuncUnit> <Opcode : 'dmul'> <InPorts = 2> <OutPorts = 1>
ST_21 : Operation 124 [2/5] (6.91ns)   --->   "%tmp_4 = fsub double %u2_0, %v23_0" [mandelbrot.c:23]   --->   Operation 124 'dsub' 'tmp_4' <Predicate = true> <Delay = 6.91> <Core = "DAddSub">   --->   Core 115 'DAddSub' <Latency = 4> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>

State 22 <SV = 21> <Delay = 8.33>
ST_22 : Operation 125 [1/5] (8.33ns)   --->   "%tmp_2 = fmul double %phi_ln22, %v2_0" [mandelbrot.c:22]   --->   Operation 125 'dmul' 'tmp_2' <Predicate = true> <Delay = 8.33> <Core = "DMul">   --->   Core 116 'DMul' <Latency = 4> <II = 1> <Delay = 8.33> <FuncUnit> <Opcode : 'dmul'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 126 [1/5] (6.91ns)   --->   "%tmp_4 = fsub double %u2_0, %v23_0" [mandelbrot.c:23]   --->   Operation 126 'dsub' 'tmp_4' <Predicate = true> <Delay = 6.91> <Core = "DAddSub">   --->   Core 115 'DAddSub' <Latency = 4> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>

State 23 <SV = 22> <Delay = 6.91>
ST_23 : Operation 127 [5/5] (6.91ns)   --->   "%v = fadd double %tmp_2, %y" [mandelbrot.c:22]   --->   Operation 127 'dadd' 'v' <Predicate = true> <Delay = 6.91> <Core = "DAddSub">   --->   Core 115 'DAddSub' <Latency = 4> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 128 [5/5] (6.91ns)   --->   "%u = fadd double %tmp_4, %x" [mandelbrot.c:23]   --->   Operation 128 'dadd' 'u' <Predicate = true> <Delay = 6.91> <Core = "DAddSub">   --->   Core 115 'DAddSub' <Latency = 4> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>

State 24 <SV = 23> <Delay = 6.91>
ST_24 : Operation 129 [4/5] (6.91ns)   --->   "%v = fadd double %tmp_2, %y" [mandelbrot.c:22]   --->   Operation 129 'dadd' 'v' <Predicate = true> <Delay = 6.91> <Core = "DAddSub">   --->   Core 115 'DAddSub' <Latency = 4> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 130 [4/5] (6.91ns)   --->   "%u = fadd double %tmp_4, %x" [mandelbrot.c:23]   --->   Operation 130 'dadd' 'u' <Predicate = true> <Delay = 6.91> <Core = "DAddSub">   --->   Core 115 'DAddSub' <Latency = 4> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>

State 25 <SV = 24> <Delay = 6.91>
ST_25 : Operation 131 [3/5] (6.91ns)   --->   "%v = fadd double %tmp_2, %y" [mandelbrot.c:22]   --->   Operation 131 'dadd' 'v' <Predicate = true> <Delay = 6.91> <Core = "DAddSub">   --->   Core 115 'DAddSub' <Latency = 4> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 132 [3/5] (6.91ns)   --->   "%u = fadd double %tmp_4, %x" [mandelbrot.c:23]   --->   Operation 132 'dadd' 'u' <Predicate = true> <Delay = 6.91> <Core = "DAddSub">   --->   Core 115 'DAddSub' <Latency = 4> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>

State 26 <SV = 25> <Delay = 6.91>
ST_26 : Operation 133 [2/5] (6.91ns)   --->   "%v = fadd double %tmp_2, %y" [mandelbrot.c:22]   --->   Operation 133 'dadd' 'v' <Predicate = true> <Delay = 6.91> <Core = "DAddSub">   --->   Core 115 'DAddSub' <Latency = 4> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 134 [2/5] (6.91ns)   --->   "%u = fadd double %tmp_4, %x" [mandelbrot.c:23]   --->   Operation 134 'dadd' 'u' <Predicate = true> <Delay = 6.91> <Core = "DAddSub">   --->   Core 115 'DAddSub' <Latency = 4> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>

State 27 <SV = 26> <Delay = 6.91>
ST_27 : Operation 135 [1/5] (6.91ns)   --->   "%v = fadd double %tmp_2, %y" [mandelbrot.c:22]   --->   Operation 135 'dadd' 'v' <Predicate = true> <Delay = 6.91> <Core = "DAddSub">   --->   Core 115 'DAddSub' <Latency = 4> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 136 [1/5] (6.91ns)   --->   "%u = fadd double %tmp_4, %x" [mandelbrot.c:23]   --->   Operation 136 'dadd' 'u' <Predicate = true> <Delay = 6.91> <Core = "DAddSub">   --->   Core 115 'DAddSub' <Latency = 4> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>

State 28 <SV = 27> <Delay = 8.33>
ST_28 : Operation 137 [5/5] (8.33ns)   --->   "%u2 = fmul double %u, %u" [mandelbrot.c:24]   --->   Operation 137 'dmul' 'u2' <Predicate = true> <Delay = 8.33> <Core = "DMul">   --->   Core 116 'DMul' <Latency = 4> <II = 1> <Delay = 8.33> <FuncUnit> <Opcode : 'dmul'> <InPorts = 2> <OutPorts = 1>
ST_28 : Operation 138 [5/5] (8.33ns)   --->   "%v2 = fmul double %v, %v" [mandelbrot.c:25]   --->   Operation 138 'dmul' 'v2' <Predicate = true> <Delay = 8.33> <Core = "DMul">   --->   Core 116 'DMul' <Latency = 4> <II = 1> <Delay = 8.33> <FuncUnit> <Opcode : 'dmul'> <InPorts = 2> <OutPorts = 1>
ST_28 : Operation 139 [5/5] (8.33ns)   --->   "%phitmp = fmul double %u, 2.000000e+00" [mandelbrot.c:21]   --->   Operation 139 'dmul' 'phitmp' <Predicate = true> <Delay = 8.33> <Core = "DMul">   --->   Core 116 'DMul' <Latency = 4> <II = 1> <Delay = 8.33> <FuncUnit> <Opcode : 'dmul'> <InPorts = 2> <OutPorts = 1>

State 29 <SV = 28> <Delay = 8.33>
ST_29 : Operation 140 [4/5] (8.33ns)   --->   "%u2 = fmul double %u, %u" [mandelbrot.c:24]   --->   Operation 140 'dmul' 'u2' <Predicate = true> <Delay = 8.33> <Core = "DMul">   --->   Core 116 'DMul' <Latency = 4> <II = 1> <Delay = 8.33> <FuncUnit> <Opcode : 'dmul'> <InPorts = 2> <OutPorts = 1>
ST_29 : Operation 141 [4/5] (8.33ns)   --->   "%v2 = fmul double %v, %v" [mandelbrot.c:25]   --->   Operation 141 'dmul' 'v2' <Predicate = true> <Delay = 8.33> <Core = "DMul">   --->   Core 116 'DMul' <Latency = 4> <II = 1> <Delay = 8.33> <FuncUnit> <Opcode : 'dmul'> <InPorts = 2> <OutPorts = 1>
ST_29 : Operation 142 [4/5] (8.33ns)   --->   "%phitmp = fmul double %u, 2.000000e+00" [mandelbrot.c:21]   --->   Operation 142 'dmul' 'phitmp' <Predicate = true> <Delay = 8.33> <Core = "DMul">   --->   Core 116 'DMul' <Latency = 4> <II = 1> <Delay = 8.33> <FuncUnit> <Opcode : 'dmul'> <InPorts = 2> <OutPorts = 1>

State 30 <SV = 29> <Delay = 8.33>
ST_30 : Operation 143 [3/5] (8.33ns)   --->   "%u2 = fmul double %u, %u" [mandelbrot.c:24]   --->   Operation 143 'dmul' 'u2' <Predicate = true> <Delay = 8.33> <Core = "DMul">   --->   Core 116 'DMul' <Latency = 4> <II = 1> <Delay = 8.33> <FuncUnit> <Opcode : 'dmul'> <InPorts = 2> <OutPorts = 1>
ST_30 : Operation 144 [3/5] (8.33ns)   --->   "%v2 = fmul double %v, %v" [mandelbrot.c:25]   --->   Operation 144 'dmul' 'v2' <Predicate = true> <Delay = 8.33> <Core = "DMul">   --->   Core 116 'DMul' <Latency = 4> <II = 1> <Delay = 8.33> <FuncUnit> <Opcode : 'dmul'> <InPorts = 2> <OutPorts = 1>
ST_30 : Operation 145 [3/5] (8.33ns)   --->   "%phitmp = fmul double %u, 2.000000e+00" [mandelbrot.c:21]   --->   Operation 145 'dmul' 'phitmp' <Predicate = true> <Delay = 8.33> <Core = "DMul">   --->   Core 116 'DMul' <Latency = 4> <II = 1> <Delay = 8.33> <FuncUnit> <Opcode : 'dmul'> <InPorts = 2> <OutPorts = 1>

State 31 <SV = 30> <Delay = 8.33>
ST_31 : Operation 146 [2/5] (8.33ns)   --->   "%u2 = fmul double %u, %u" [mandelbrot.c:24]   --->   Operation 146 'dmul' 'u2' <Predicate = true> <Delay = 8.33> <Core = "DMul">   --->   Core 116 'DMul' <Latency = 4> <II = 1> <Delay = 8.33> <FuncUnit> <Opcode : 'dmul'> <InPorts = 2> <OutPorts = 1>
ST_31 : Operation 147 [2/5] (8.33ns)   --->   "%v2 = fmul double %v, %v" [mandelbrot.c:25]   --->   Operation 147 'dmul' 'v2' <Predicate = true> <Delay = 8.33> <Core = "DMul">   --->   Core 116 'DMul' <Latency = 4> <II = 1> <Delay = 8.33> <FuncUnit> <Opcode : 'dmul'> <InPorts = 2> <OutPorts = 1>
ST_31 : Operation 148 [2/5] (8.33ns)   --->   "%phitmp = fmul double %u, 2.000000e+00" [mandelbrot.c:21]   --->   Operation 148 'dmul' 'phitmp' <Predicate = true> <Delay = 8.33> <Core = "DMul">   --->   Core 116 'DMul' <Latency = 4> <II = 1> <Delay = 8.33> <FuncUnit> <Opcode : 'dmul'> <InPorts = 2> <OutPorts = 1>

State 32 <SV = 31> <Delay = 8.33>
ST_32 : Operation 149 [1/5] (8.33ns)   --->   "%u2 = fmul double %u, %u" [mandelbrot.c:24]   --->   Operation 149 'dmul' 'u2' <Predicate = true> <Delay = 8.33> <Core = "DMul">   --->   Core 116 'DMul' <Latency = 4> <II = 1> <Delay = 8.33> <FuncUnit> <Opcode : 'dmul'> <InPorts = 2> <OutPorts = 1>
ST_32 : Operation 150 [1/5] (8.33ns)   --->   "%v2 = fmul double %v, %v" [mandelbrot.c:25]   --->   Operation 150 'dmul' 'v2' <Predicate = true> <Delay = 8.33> <Core = "DMul">   --->   Core 116 'DMul' <Latency = 4> <II = 1> <Delay = 8.33> <FuncUnit> <Opcode : 'dmul'> <InPorts = 2> <OutPorts = 1>
ST_32 : Operation 151 [1/5] (8.33ns)   --->   "%phitmp = fmul double %u, 2.000000e+00" [mandelbrot.c:21]   --->   Operation 151 'dmul' 'phitmp' <Predicate = true> <Delay = 8.33> <Core = "DMul">   --->   Core 116 'DMul' <Latency = 4> <II = 1> <Delay = 8.33> <FuncUnit> <Opcode : 'dmul'> <InPorts = 2> <OutPorts = 1>
ST_32 : Operation 152 [1/1] (0.00ns)   --->   "br label %4" [mandelbrot.c:21]   --->   Operation 152 'br' <Predicate = true> <Delay = 0.00>

State 33 <SV = 18> <Delay = 1.42>
ST_33 : Operation 153 [1/1] (1.42ns)   --->   "store i8 %trunc_ln, i8* %color_addr_2, align 1" [mandelbrot.c:36]   --->   Operation 153 'store' <Predicate = true> <Delay = 1.42> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.42> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 6> <RAM>
ST_33 : Operation 154 [1/1] (1.42ns)   --->   "store i8 %trunc_ln35, i8* %color_addr_3, align 1" [mandelbrot.c:37]   --->   Operation 154 'store' <Predicate = true> <Delay = 1.42> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.42> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 6> <RAM>

State 34 <SV = 19> <Delay = 1.42>
ST_34 : Operation 155 [1/1] (1.42ns)   --->   "store i8 %trunc_ln, i8* %color_addr_4, align 1" [mandelbrot.c:38]   --->   Operation 155 'store' <Predicate = (icmp_ln21)> <Delay = 1.42> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.42> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 6> <RAM>
ST_34 : Operation 156 [1/1] (1.42ns)   --->   "store i8 %trunc_ln35, i8* %color_addr_5, align 1" [mandelbrot.c:39]   --->   Operation 156 'store' <Predicate = (icmp_ln21)> <Delay = 1.42> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.42> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 6> <RAM>
ST_34 : Operation 157 [1/1] (0.00ns)   --->   "br label %.critedge2"   --->   Operation 157 'br' <Predicate = (icmp_ln21)> <Delay = 0.00>
ST_34 : Operation 158 [1/1] (0.00ns)   --->   "br label %2" [mandelbrot.c:14]   --->   Operation 158 'br' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 1.06ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('j') with incoming values : ('j', mandelbrot.c:12) [37]  (1.06 ns)

 <State 2>: 1.78ns
The critical path consists of the following:
	'phi' operation ('phi_mul2', mandelbrot.c:12) with incoming values : ('add_ln12', mandelbrot.c:12) [38]  (0 ns)
	'sub' operation ('sub_ln13', mandelbrot.c:13) [45]  (1.78 ns)

 <State 3>: 7.1ns
The critical path consists of the following:
	'sitodp' operation ('y', mandelbrot.c:13) [46]  (7.1 ns)

 <State 4>: 7.1ns
The critical path consists of the following:
	'sitodp' operation ('y', mandelbrot.c:13) [46]  (7.1 ns)

 <State 5>: 7.1ns
The critical path consists of the following:
	'sitodp' operation ('y', mandelbrot.c:13) [46]  (7.1 ns)

 <State 6>: 7.1ns
The critical path consists of the following:
	'sitodp' operation ('y', mandelbrot.c:13) [46]  (7.1 ns)

 <State 7>: 1.78ns
The critical path consists of the following:
	'phi' operation ('phi_mul', mandelbrot.c:14) with incoming values : ('add_ln14', mandelbrot.c:14) [50]  (0 ns)
	'add' operation ('add_ln19', mandelbrot.c:19) [57]  (1.78 ns)

 <State 8>: 7.1ns
The critical path consists of the following:
	'sitodp' operation ('x', mandelbrot.c:19) [58]  (7.1 ns)

 <State 9>: 7.1ns
The critical path consists of the following:
	'sitodp' operation ('x', mandelbrot.c:19) [58]  (7.1 ns)

 <State 10>: 7.1ns
The critical path consists of the following:
	'sitodp' operation ('x', mandelbrot.c:19) [58]  (7.1 ns)

 <State 11>: 7.1ns
The critical path consists of the following:
	'sitodp' operation ('x', mandelbrot.c:19) [58]  (7.1 ns)

 <State 12>: 6.92ns
The critical path consists of the following:
	'phi' operation ('u2') with incoming values : ('u2', mandelbrot.c:24) [64]  (0 ns)
	'dadd' operation ('tmp', mandelbrot.c:21) [70]  (6.92 ns)

 <State 13>: 6.92ns
The critical path consists of the following:
	'dadd' operation ('tmp', mandelbrot.c:21) [70]  (6.92 ns)

 <State 14>: 6.92ns
The critical path consists of the following:
	'dadd' operation ('tmp', mandelbrot.c:21) [70]  (6.92 ns)

 <State 15>: 6.92ns
The critical path consists of the following:
	'dadd' operation ('tmp', mandelbrot.c:21) [70]  (6.92 ns)

 <State 16>: 6.92ns
The critical path consists of the following:
	'dadd' operation ('tmp', mandelbrot.c:21) [70]  (6.92 ns)

 <State 17>: 3.61ns
The critical path consists of the following:
	'dcmp' operation ('tmp_3', mandelbrot.c:21) [77]  (3.61 ns)

 <State 18>: 8.33ns
The critical path consists of the following:
	'dmul' operation ('tmp_2', mandelbrot.c:22) [81]  (8.33 ns)

 <State 19>: 8.33ns
The critical path consists of the following:
	'dmul' operation ('tmp_2', mandelbrot.c:22) [81]  (8.33 ns)

 <State 20>: 8.33ns
The critical path consists of the following:
	'dmul' operation ('tmp_2', mandelbrot.c:22) [81]  (8.33 ns)

 <State 21>: 8.33ns
The critical path consists of the following:
	'dmul' operation ('tmp_2', mandelbrot.c:22) [81]  (8.33 ns)

 <State 22>: 8.33ns
The critical path consists of the following:
	'dmul' operation ('tmp_2', mandelbrot.c:22) [81]  (8.33 ns)

 <State 23>: 6.92ns
The critical path consists of the following:
	'dadd' operation ('v', mandelbrot.c:22) [82]  (6.92 ns)

 <State 24>: 6.92ns
The critical path consists of the following:
	'dadd' operation ('v', mandelbrot.c:22) [82]  (6.92 ns)

 <State 25>: 6.92ns
The critical path consists of the following:
	'dadd' operation ('v', mandelbrot.c:22) [82]  (6.92 ns)

 <State 26>: 6.92ns
The critical path consists of the following:
	'dadd' operation ('v', mandelbrot.c:22) [82]  (6.92 ns)

 <State 27>: 6.92ns
The critical path consists of the following:
	'dadd' operation ('v', mandelbrot.c:22) [82]  (6.92 ns)

 <State 28>: 8.33ns
The critical path consists of the following:
	'dmul' operation ('u2', mandelbrot.c:24) [85]  (8.33 ns)

 <State 29>: 8.33ns
The critical path consists of the following:
	'dmul' operation ('u2', mandelbrot.c:24) [85]  (8.33 ns)

 <State 30>: 8.33ns
The critical path consists of the following:
	'dmul' operation ('u2', mandelbrot.c:24) [85]  (8.33 ns)

 <State 31>: 8.33ns
The critical path consists of the following:
	'dmul' operation ('u2', mandelbrot.c:24) [85]  (8.33 ns)

 <State 32>: 8.33ns
The critical path consists of the following:
	'dmul' operation ('u2', mandelbrot.c:24) [85]  (8.33 ns)

 <State 33>: 1.43ns
The critical path consists of the following:
	'store' operation ('store_ln36', mandelbrot.c:36) of variable 'trunc_ln', mandelbrot.c:34 on array 'color' [95]  (1.43 ns)

 <State 34>: 1.43ns
The critical path consists of the following:
	'store' operation ('store_ln38', mandelbrot.c:38) of variable 'trunc_ln', mandelbrot.c:34 on array 'color' [97]  (1.43 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25
	State 26
	State 27
	State 28
	State 29
	State 30
	State 31
	State 32
	State 33
	State 34


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
