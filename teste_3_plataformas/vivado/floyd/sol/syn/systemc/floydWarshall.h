// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _floydWarshall_HH_
#define _floydWarshall_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "floydWarshall_A.h"

namespace ap_rtl {

struct floydWarshall : public sc_module {
    // Port declarations 9
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<4> > graph_address0;
    sc_out< sc_logic > graph_ce0;
    sc_in< sc_lv<32> > graph_q0;


    // Module declarations
    floydWarshall(sc_module_name name);
    SC_HAS_PROCESS(floydWarshall);

    ~floydWarshall();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    floydWarshall_A* A_U;
    sc_signal< sc_lv<9> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<3> > i_fu_140_p2;
    sc_signal< sc_lv<3> > i_reg_296;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<6> > zext_ln17_fu_154_p1;
    sc_signal< sc_lv<6> > zext_ln17_reg_301;
    sc_signal< sc_lv<1> > icmp_ln16_fu_134_p2;
    sc_signal< sc_lv<3> > j_fu_164_p2;
    sc_signal< sc_lv<3> > j_reg_309;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<64> > zext_ln18_1_fu_179_p1;
    sc_signal< sc_lv<64> > zext_ln18_1_reg_314;
    sc_signal< sc_lv<1> > icmp_ln17_fu_158_p2;
    sc_signal< sc_lv<3> > k_fu_190_p2;
    sc_signal< sc_lv<3> > k_reg_327;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<6> > zext_ln26_fu_196_p1;
    sc_signal< sc_lv<6> > zext_ln26_reg_332;
    sc_signal< sc_lv<1> > icmp_ln20_fu_184_p2;
    sc_signal< sc_lv<6> > zext_ln22_fu_208_p1;
    sc_signal< sc_lv<6> > zext_ln22_reg_337;
    sc_signal< sc_lv<3> > i_2_fu_218_p2;
    sc_signal< sc_lv<3> > i_2_reg_345;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<6> > zext_ln26_1_fu_232_p1;
    sc_signal< sc_lv<6> > zext_ln26_1_reg_350;
    sc_signal< sc_lv<1> > icmp_ln22_fu_212_p2;
    sc_signal< sc_lv<4> > A_addr_1_reg_355;
    sc_signal< sc_lv<3> > j_2_fu_252_p2;
    sc_signal< sc_lv<3> > j_2_reg_363;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<1> > icmp_ln24_fu_246_p2;
    sc_signal< sc_lv<4> > A_addr_3_reg_373;
    sc_signal< sc_lv<32> > add_ln26_fu_282_p2;
    sc_signal< sc_lv<32> > add_ln26_reg_379;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<4> > A_address0;
    sc_signal< sc_logic > A_ce0;
    sc_signal< sc_logic > A_we0;
    sc_signal< sc_lv<32> > A_d0;
    sc_signal< sc_lv<32> > A_q0;
    sc_signal< sc_lv<4> > A_address1;
    sc_signal< sc_logic > A_ce1;
    sc_signal< sc_lv<32> > A_q1;
    sc_signal< sc_lv<3> > i_0_reg_79;
    sc_signal< sc_lv<3> > j_0_reg_90;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<3> > k_0_reg_101;
    sc_signal< sc_lv<3> > i_1_reg_112;
    sc_signal< sc_lv<3> > j_1_reg_123;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_lv<64> > zext_ln26_2_fu_241_p1;
    sc_signal< sc_lv<64> > zext_ln26_4_fu_267_p1;
    sc_signal< sc_lv<64> > zext_ln26_5_fu_277_p1;
    sc_signal< sc_lv<1> > icmp_ln26_fu_288_p2;
    sc_signal< sc_lv<5> > tmp_fu_146_p3;
    sc_signal< sc_lv<6> > zext_ln18_fu_170_p1;
    sc_signal< sc_lv<6> > add_ln18_fu_174_p2;
    sc_signal< sc_lv<5> > tmp_1_fu_200_p3;
    sc_signal< sc_lv<5> > tmp_2_fu_224_p3;
    sc_signal< sc_lv<6> > add_ln26_1_fu_236_p2;
    sc_signal< sc_lv<6> > zext_ln26_3_fu_258_p1;
    sc_signal< sc_lv<6> > add_ln26_2_fu_262_p2;
    sc_signal< sc_lv<6> > add_ln26_3_fu_272_p2;
    sc_signal< sc_lv<9> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<9> ap_ST_fsm_state1;
    static const sc_lv<9> ap_ST_fsm_state2;
    static const sc_lv<9> ap_ST_fsm_state3;
    static const sc_lv<9> ap_ST_fsm_state4;
    static const sc_lv<9> ap_ST_fsm_state5;
    static const sc_lv<9> ap_ST_fsm_state6;
    static const sc_lv<9> ap_ST_fsm_state7;
    static const sc_lv<9> ap_ST_fsm_state8;
    static const sc_lv<9> ap_ST_fsm_state9;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<3> ap_const_lv3_4;
    static const sc_lv<3> ap_const_lv3_1;
    static const sc_lv<2> ap_const_lv2_0;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_A_address0();
    void thread_A_address1();
    void thread_A_ce0();
    void thread_A_ce1();
    void thread_A_d0();
    void thread_A_we0();
    void thread_add_ln18_fu_174_p2();
    void thread_add_ln26_1_fu_236_p2();
    void thread_add_ln26_2_fu_262_p2();
    void thread_add_ln26_3_fu_272_p2();
    void thread_add_ln26_fu_282_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state9();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_graph_address0();
    void thread_graph_ce0();
    void thread_i_2_fu_218_p2();
    void thread_i_fu_140_p2();
    void thread_icmp_ln16_fu_134_p2();
    void thread_icmp_ln17_fu_158_p2();
    void thread_icmp_ln20_fu_184_p2();
    void thread_icmp_ln22_fu_212_p2();
    void thread_icmp_ln24_fu_246_p2();
    void thread_icmp_ln26_fu_288_p2();
    void thread_j_2_fu_252_p2();
    void thread_j_fu_164_p2();
    void thread_k_fu_190_p2();
    void thread_tmp_1_fu_200_p3();
    void thread_tmp_2_fu_224_p3();
    void thread_tmp_fu_146_p3();
    void thread_zext_ln17_fu_154_p1();
    void thread_zext_ln18_1_fu_179_p1();
    void thread_zext_ln18_fu_170_p1();
    void thread_zext_ln22_fu_208_p1();
    void thread_zext_ln26_1_fu_232_p1();
    void thread_zext_ln26_2_fu_241_p1();
    void thread_zext_ln26_3_fu_258_p1();
    void thread_zext_ln26_4_fu_267_p1();
    void thread_zext_ln26_5_fu_277_p1();
    void thread_zext_ln26_fu_196_p1();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
