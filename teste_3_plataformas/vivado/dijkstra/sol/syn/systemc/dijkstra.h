// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _dijkstra_HH_
#define _dijkstra_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "dijkstra_dist.h"
#include "dijkstra_sptSet.h"

namespace ap_rtl {

struct dijkstra : public sc_module {
    // Port declarations 10
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<7> > graph_address0;
    sc_out< sc_logic > graph_ce0;
    sc_in< sc_lv<32> > graph_q0;
    sc_in< sc_lv<32> > src;


    // Module declarations
    dijkstra(sc_module_name name);
    SC_HAS_PROCESS(dijkstra);

    ~dijkstra();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    dijkstra_dist* dist_U;
    dijkstra_sptSet* sptSet_U;
    sc_signal< sc_lv<10> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<4> > i_fu_215_p2;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<4> > count_fu_237_p2;
    sc_signal< sc_lv<4> > count_reg_404;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<32> > zext_ln18_fu_243_p1;
    sc_signal< sc_lv<32> > zext_ln18_reg_415;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<4> > v_1_fu_253_p2;
    sc_signal< sc_lv<4> > v_1_reg_423;
    sc_signal< sc_lv<1> > icmp_ln16_fu_247_p2;
    sc_signal< sc_lv<8> > add_ln63_1_fu_287_p2;
    sc_signal< sc_lv<8> > add_ln63_1_reg_438;
    sc_signal< sc_lv<4> > dist_addr_2_reg_443;
    sc_signal< sc_lv<32> > select_ln17_2_fu_314_p3;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<4> > v_fu_341_p2;
    sc_signal< sc_lv<4> > v_reg_456;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<64> > zext_ln63_fu_347_p1;
    sc_signal< sc_lv<64> > zext_ln63_reg_461;
    sc_signal< sc_lv<1> > icmp_ln58_fu_335_p2;
    sc_signal< sc_lv<7> > graph_addr_reg_466;
    sc_signal< sc_lv<1> > sptSet_q0;
    sc_signal< sc_lv<1> > sptSet_load_1_reg_476;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<32> > graph_load_reg_480;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<1> > icmp_ln63_fu_366_p2;
    sc_signal< sc_lv<1> > icmp_ln63_reg_485;
    sc_signal< sc_lv<1> > icmp_ln63_1_fu_372_p2;
    sc_signal< sc_lv<1> > icmp_ln63_1_reg_489;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_lv<32> > add_ln63_fu_378_p2;
    sc_signal< sc_lv<32> > add_ln63_reg_493;
    sc_signal< sc_lv<4> > dist_addr_3_reg_499;
    sc_signal< sc_lv<4> > dist_address0;
    sc_signal< sc_logic > dist_ce0;
    sc_signal< sc_logic > dist_we0;
    sc_signal< sc_lv<32> > dist_d0;
    sc_signal< sc_lv<32> > dist_q0;
    sc_signal< sc_lv<4> > sptSet_address0;
    sc_signal< sc_logic > sptSet_ce0;
    sc_signal< sc_logic > sptSet_we0;
    sc_signal< sc_lv<1> > sptSet_d0;
    sc_signal< sc_lv<4> > i_0_reg_150;
    sc_signal< sc_lv<1> > icmp_ln42_fu_209_p2;
    sc_signal< sc_lv<4> > count_0_reg_161;
    sc_signal< sc_lv<32> > min_0_i_reg_172;
    sc_signal< sc_lv<1> > icmp_ln49_fu_231_p2;
    sc_signal< sc_lv<4> > min_index_reg_184;
    sc_signal< sc_lv<4> > v_0_reg_195;
    sc_signal< sc_logic > ap_CS_fsm_state10;
    sc_signal< sc_lv<64> > zext_ln43_fu_221_p1;
    sc_signal< sc_lv<64> > sext_ln46_fu_227_p1;
    sc_signal< sc_lv<64> > zext_ln17_fu_259_p1;
    sc_signal< sc_lv<64> > sext_ln55_fu_265_p1;
    sc_signal< sc_lv<64> > sext_ln63_fu_361_p1;
    sc_signal< sc_lv<32> > u_fu_52;
    sc_signal< sc_lv<32> > select_ln17_3_fu_322_p3;
    sc_signal< sc_lv<1> > icmp_ln63_2_fu_383_p2;
    sc_signal< sc_lv<32> > sext_ln55_fu_265_p0;
    sc_signal< sc_lv<32> > trunc_ln63_fu_271_p0;
    sc_signal< sc_lv<32> > trunc_ln63_1_fu_275_p0;
    sc_signal< sc_lv<5> > trunc_ln63_1_fu_275_p1;
    sc_signal< sc_lv<8> > sext_ln63_cast_fu_279_p3;
    sc_signal< sc_lv<8> > trunc_ln63_fu_271_p1;
    sc_signal< sc_lv<1> > icmp_ln17_fu_293_p2;
    sc_signal< sc_lv<32> > select_ln17_fu_299_p3;
    sc_signal< sc_lv<32> > select_ln17_1_fu_307_p3;
    sc_signal< sc_lv<8> > zext_ln63_1_fu_352_p1;
    sc_signal< sc_lv<8> > add_ln63_2_fu_356_p2;
    sc_signal< sc_lv<10> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<10> ap_ST_fsm_state1;
    static const sc_lv<10> ap_ST_fsm_state2;
    static const sc_lv<10> ap_ST_fsm_state3;
    static const sc_lv<10> ap_ST_fsm_state4;
    static const sc_lv<10> ap_ST_fsm_state5;
    static const sc_lv<10> ap_ST_fsm_state6;
    static const sc_lv<10> ap_ST_fsm_state7;
    static const sc_lv<10> ap_ST_fsm_state8;
    static const sc_lv<10> ap_ST_fsm_state9;
    static const sc_lv<10> ap_ST_fsm_state10;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<32> ap_const_lv32_7FFFFFFF;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<4> ap_const_lv4_9;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<4> ap_const_lv4_8;
    static const sc_lv<3> ap_const_lv3_0;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_add_ln63_1_fu_287_p2();
    void thread_add_ln63_2_fu_356_p2();
    void thread_add_ln63_fu_378_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state9();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_count_fu_237_p2();
    void thread_dist_address0();
    void thread_dist_ce0();
    void thread_dist_d0();
    void thread_dist_we0();
    void thread_graph_address0();
    void thread_graph_ce0();
    void thread_i_fu_215_p2();
    void thread_icmp_ln16_fu_247_p2();
    void thread_icmp_ln17_fu_293_p2();
    void thread_icmp_ln42_fu_209_p2();
    void thread_icmp_ln49_fu_231_p2();
    void thread_icmp_ln58_fu_335_p2();
    void thread_icmp_ln63_1_fu_372_p2();
    void thread_icmp_ln63_2_fu_383_p2();
    void thread_icmp_ln63_fu_366_p2();
    void thread_select_ln17_1_fu_307_p3();
    void thread_select_ln17_2_fu_314_p3();
    void thread_select_ln17_3_fu_322_p3();
    void thread_select_ln17_fu_299_p3();
    void thread_sext_ln46_fu_227_p1();
    void thread_sext_ln55_fu_265_p0();
    void thread_sext_ln55_fu_265_p1();
    void thread_sext_ln63_cast_fu_279_p3();
    void thread_sext_ln63_fu_361_p1();
    void thread_sptSet_address0();
    void thread_sptSet_ce0();
    void thread_sptSet_d0();
    void thread_sptSet_we0();
    void thread_trunc_ln63_1_fu_275_p0();
    void thread_trunc_ln63_1_fu_275_p1();
    void thread_trunc_ln63_fu_271_p0();
    void thread_trunc_ln63_fu_271_p1();
    void thread_v_1_fu_253_p2();
    void thread_v_fu_341_p2();
    void thread_zext_ln17_fu_259_p1();
    void thread_zext_ln18_fu_243_p1();
    void thread_zext_ln43_fu_221_p1();
    void thread_zext_ln63_1_fu_352_p1();
    void thread_zext_ln63_fu_347_p1();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
