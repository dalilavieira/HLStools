// mandelbrot.v

// Generated using ACDS version 19.4 64

`timescale 1 ps / 1 ps
module mandelbrot (
		input  wire        clock,   //   clock.clk
		input  wire        resetn,  //   reset.reset_n
		input  wire        start,   //    call.valid
		output wire        busy,    //        .stall
		output wire        done,    //  return.valid
		input  wire        stall,   //        .stall
		input  wire [31:0] xmax,    //    xmax.data
		input  wire [31:0] xmin,    //    xmin.data
		input  wire [31:0] ymax,    //    ymax.data
		input  wire [31:0] ymin,    //    ymin.data
		input  wire [31:0] maxiter, // maxiter.data
		input  wire [31:0] xres,    //    xres.data
		input  wire [31:0] yres,    //    yres.data
		input  wire [31:0] dx,      //      dx.data
		input  wire [31:0] dy       //      dy.data
	);

	mandelbrot_internal mandelbrot_internal_inst (
		.clock   (clock),   //   input,   width = 1,   clock.clk
		.resetn  (resetn),  //   input,   width = 1,   reset.reset_n
		.start   (start),   //   input,   width = 1,    call.valid
		.busy    (busy),    //  output,   width = 1,        .stall
		.done    (done),    //  output,   width = 1,  return.valid
		.stall   (stall),   //   input,   width = 1,        .stall
		.xmax    (xmax),    //   input,  width = 32,    xmax.data
		.xmin    (xmin),    //   input,  width = 32,    xmin.data
		.ymax    (ymax),    //   input,  width = 32,    ymax.data
		.ymin    (ymin),    //   input,  width = 32,    ymin.data
		.maxiter (maxiter), //   input,  width = 32, maxiter.data
		.xres    (xres),    //   input,  width = 32,    xres.data
		.yres    (yres),    //   input,  width = 32,    yres.data
		.dx      (dx),      //   input,  width = 32,      dx.data
		.dy      (dy)       //   input,  width = 32,      dy.data
	);

endmodule
