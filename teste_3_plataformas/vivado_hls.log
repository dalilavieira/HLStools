
****** Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.1 (64-bit)
  **** SW Build 2552052 on Fri May 24 14:47:09 MDT 2019
  **** IP Build 2548770 on Fri May 24 18:01:18 MDT 2019
    ** Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.

source /opt/xilinx/Vivado/2019.1/scripts/vivado_hls/hls.tcl -notrace
INFO: [HLS 200-10] Running '/opt/xilinx/Vivado/2019.1/bin/unwrapped/lnx64.o/vivado_hls'
INFO: [HLS 200-10] For user 'vivado' on host 'lesc-server' (Linux_x86_64 version 4.15.0-88-generic) on Mon Apr 06 17:35:12 UTC 2020
INFO: [HLS 200-10] On os Ubuntu 18.04.2 LTS
INFO: [HLS 200-10] In directory '/home/vivado/HLStools/teste_3_plataformas'
[2Kvivado_hls> [12C[2Kvivado_hls> o[13C[2Kvivado_hls> op[14C[2Kvivado_hls> ope[15C[2Kvivado_hls> open[16C[2Kvivado_hls> open_[17C[2Kvivado_hls> open[16C[2Kvivado_hls> open_[17C[2Kvivado_hls> open_p[18C[2Kvivado_hls> open_project[24C[2Kvivado_hls> open_project [25C[2Kvivado_hls> open_project f[26C[2Kvivado_hls> open_project fl[27C[2Kvivado_hls> open_project floyd/[31C
ERROR: [HLS 200-70] The name 'floyd/' contains illegal character '/' 
[2Kvivado_hls> [12C[2Kvivado_hls> c[13C[2Kvivado_hls> cd[14C[2Kvivado_hls> c[13C[2Kvivado_hls> [12C[2Kvivado_hls> open_project floyd/[31C[2Kvivado_hls> open_project floyd[30C
INFO: [HLS 200-10] Opening project '/home/vivado/HLStools/teste_3_plataformas/floyd'.
0
[2Kvivado_hls> [12C[2Kvivado_hls> c[13C[2Kvivado_hls> cd[14C[2Kvivado_hls> cd [15C[2Kvivado_hls> cd f[16C[2Kvivado_hls> cd floyd/[21C
[2Kvivado_hls> [12C[2Kvivado_hls> a[13C[2Kvivado_hls> ad[14C[2Kvivado_hls> add[15C[2Kvivado_hls> add_[16C[2Kvivado_hls> add_f[17C[2Kvivado_hls> add_files[21C[2Kvivado_hls> add_files [22C[2Kvivado_hls> add_files f[23C[2Kvivado_hls> add_files fl[24C[2Kvivado_hls> add_files floydWarshall.c[37C
INFO: [HLS 200-10] Adding design file 'floydWarshall.c' to the project
[2Kvivado_hls> [12C[2Kvivado_hls> c[13C[2Kvivado_hls> ca[14C[2Kvivado_hls> cat[15C[2Kvivado_hls> cat [16C[2Kvivado_hls> cat f[17C[2Kvivado_hls> cat floydWarshall.c[31C
// Floyd-Warshall Algorithm in C

#include <stdio.h>

// defining the number of vertices 
#define nV 4

#define INF 999

void printMatrix(__int32_t A[nV][nV]);

void floydWarshall(__int32_t graph[nV][nV])
{
  int A[nV][nV], i, j, k;

  for (i = 0; i < nV; i++)
    for (j = 0; j < nV; j++)
      A[i][j] = graph[i][j];

  for (k = 0; k < nV; k++)
  {
    for (i = 0; i < nV; i++)
    {
      for (j = 0; j < nV; j++)
      {
        if (A[i][k] + A[k][j] < A[i][j])
          A[i][j] = A[i][k] + A[k][j];
      }
    }
  }
  //printMatrix(A);
}

/*
void printMatrix(int A[][nV])
{
  for (int i = 0; i < nV; i++)
  {
    for (int j = 0; j < nV; j++)
    {
      if (A[i][j] == INF)
        printf("%4s", "INF");
      else
        printf("%4d", A[i][j]);
    }
    printf("\n");
  }
}
*/
int main()
{
  int graph[nV][nV] = {{0, 3, INF, 5},
             {2, 0, INF, 4},
             {INF, 1, 0, INF},
             {INF, INF, 2, 0}};
  floydWarshall(graph);
}
[2Kvivado_hls> [12C[2Kvivado_hls> s[13C[2Kvivado_hls> se[14C[2Kvivado_hls> set[15C[2Kvivado_hls> set_[16C[2Kvivado_hls> set_t[17C[2Kvivado_hls> set_[16C[2Kvivado_hls> set_t[17C[2Kvivado_hls> set_to[18C[2Kvivado_hls> set_top[19C[2Kvivado_hls> set_top [20C[2Kvivado_hls> set_top f[21C[2Kvivado_hls> set_top fl[22C[2Kvivado_hls> set_top floydWarshall.c[35C
[2Kvivado_hls> [12C
[2Kvivado_hls> [12C
[2Kvivado_hls> [12C[2Kvivado_hls> รง[13C[2Kvivado_hls> รงs[14C[2Kvivado_hls> รง[13C[2Kvivado_hls> [12C[2Kvivado_hls> [12C[2Kvivado_hls> l[13C[2Kvivado_hls> ls[14C
floydWarshall.c
vivado_hls.app
[2Kvivado_hls> [12C[2Kvivado_hls> o[13C[2Kvivado_hls> op[14C[2Kvivado_hls> opr[15C[2Kvivado_hls> oprn[16C[2Kvivado_hls> oprn_[17C[2Kvivado_hls> oprn_s[18C[2Kvivado_hls> oprn_[17C[2Kvivado_hls> oprn[16C[2Kvivado_hls> opr[15C[2Kvivado_hls> op[14C[2Kvivado_hls> ope[15C[2Kvivado_hls> open[16C[2Kvivado_hls> open_[17C[2Kvivado_hls> open_s[18C[2Kvivado_hls> open_solution[25C[2Kvivado_hls> open_solution [26C[2Kvivado_hls> open_solution s[27C[2Kvivado_hls> open_solution so[28C[2Kvivado_hls> open_solution sol[29C
INFO: [HLS 200-10] Creating and opening solution '/home/vivado/HLStools/teste_3_plataformas/floyd/sol'.
/home/vivado/HLStools/teste_3_plataformas/floyd/vivado_hls.app
[2Kvivado_hls> [12C[2Kvivado_hls> set_part {xc7k160t-fbg484-1}[40C
INFO: [HLS 200-10] Setting target device to 'xc7k160t-fbg484-1'
[2Kvivado_hls> [12C[2Kvivado_hls> create_clock -period 5 -name default[48C
INFO: [SYN 201-201] Setting up clock 'default' with a period of 5ns.
[2Kvivado_hls> [12C[2Kvivado_hls> create_clock -period 10ns -name default[51C
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
[2Kvivado_hls> [12C[2Kvivado_hls> c[13C[2Kvivado_hls> cs[14C[2Kvivado_hls> csy[15C[2Kvivado_hls> csynth_design[25C
INFO: [SCHED 204-61] Option 'relax_ii_for_timing' is enabled, will increase II to preserve clock frequency constraints.
INFO: [HLS 200-10] Analyzing design file 'floydWarshall.c' ... 
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:00:13 ; elapsed = 00:01:42 . Memory (MB): peak = 832.453 ; gain = 132.133 ; free physical = 13290 ; free virtual = 43714
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:00:13 ; elapsed = 00:01:42 . Memory (MB): peak = 832.453 ; gain = 132.133 ; free physical = 13290 ; free virtual = 43714
INFO: [HLS 200-10] Starting code transformations ...
ERROR: [SYNCHK 200-79] Cannot find the top function 'floydWarshall.c' in the design. Possible causes are: (1) the top function name is misspelled; (2) the top function is nonexistent or declared as static.
ERROR: [HLS 200-70] Synthesizability check failed.
[2Kvivado_hls> [12C[2Kvivado_hls> c[13C[2Kvivado_hls> ca[14C[2Kvivado_hls> cat[15C[2Kvivado_hls> cat [16C[2Kvivado_hls> cat s[17C[2Kvivado_hls> cat [16C[2Kvivado_hls> cat f[17C[2Kvivado_hls> cat floydWarshall.c[31C
// Floyd-Warshall Algorithm in C

#include <stdio.h>

// defining the number of vertices 
#define nV 4

#define INF 999

void printMatrix(__int32_t A[nV][nV]);

void floydWarshall(__int32_t graph[nV][nV])
{
  int A[nV][nV], i, j, k;

  for (i = 0; i < nV; i++)
    for (j = 0; j < nV; j++)
      A[i][j] = graph[i][j];

  for (k = 0; k < nV; k++)
  {
    for (i = 0; i < nV; i++)
    {
      for (j = 0; j < nV; j++)
      {
        if (A[i][k] + A[k][j] < A[i][j])
          A[i][j] = A[i][k] + A[k][j];
      }
    }
  }
  //printMatrix(A);
}

/*
void printMatrix(int A[][nV])
{
  for (int i = 0; i < nV; i++)
  {
    for (int j = 0; j < nV; j++)
    {
      if (A[i][j] == INF)
        printf("%4s", "INF");
      else
        printf("%4d", A[i][j]);
    }
    printf("\n");
  }
}
*/
int main()
{
  int graph[nV][nV] = {{0, 3, INF, 5},
             {2, 0, INF, 4},
             {INF, 1, 0, INF},
             {INF, INF, 2, 0}};
  floydWarshall(graph);
}
[2Kvivado_hls> [12C[2Kvivado_hls> a[13C[2Kvivado_hls> ad[14C[2Kvivado_hls> add[15C[2Kvivado_hls> add_[16C[2Kvivado_hls> add_f[17C[2Kvivado_hls> add_files[21C[2Kvivado_hls> add_files [22C[2Kvivado_hls> add_files f[23C[2Kvivado_hls> add_files fl[24C[2Kvivado_hls> add_files floydWarshall.c[37C
INFO: [HLS 200-10] Adding design file 'floydWarshall.c' to the project
[2Kvivado_hls> [12C[2Kvivado_hls> s[13C[2Kvivado_hls> se[14C[2Kvivado_hls> set[15C[2Kvivado_hls> set_[16C[2Kvivado_hls> set_t[17C[2Kvivado_hls> set_to[18C[2Kvivado_hls> set_top[19C[2Kvivado_hls> set_top [20C[2Kvivado_hls> set_top floydWarshall[33C
[2Kvivado_hls> [12C[2Kvivado_hls> set_top floydWarshall[33C[2Kvivado_hls> add_files floydWarshall.c[37C[2Kvivado_hls> cat floydWarshall.c[31C[2Kvivado_hls> csynth_design[25C
INFO: [SCHED 204-61] Option 'relax_ii_for_timing' is enabled, will increase II to preserve clock frequency constraints.
INFO: [HLS 200-10] Analyzing design file 'floydWarshall.c' ... 
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:00:27 ; elapsed = 00:02:33 . Memory (MB): peak = 832.453 ; gain = 132.133 ; free physical = 13288 ; free virtual = 43712
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:00:27 ; elapsed = 00:02:33 . Memory (MB): peak = 832.453 ; gain = 132.133 ; free physical = 13288 ; free virtual = 43712
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:00:28 ; elapsed = 00:02:34 . Memory (MB): peak = 832.453 ; gain = 132.133 ; free physical = 13288 ; free virtual = 43712
INFO: [HLS 200-10] Checking synthesizability ...
WARNING: [SYNCHK 200-77] The top function 'floydWarshall' (floydWarshall.c:12) has no outputs. Possible cause(s) are: (1) Output parameters are passed by value; (2) intended outputs (parameters or global variables) are never written; (3) there are infinite loops.
INFO: [SYNCHK 200-10] 0 error(s), 1 warning(s).
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:00:28 ; elapsed = 00:02:34 . Memory (MB): peak = 832.453 ; gain = 132.133 ; free physical = 13288 ; free virtual = 43712
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:00:28 ; elapsed = 00:02:34 . Memory (MB): peak = 832.453 ; gain = 132.133 ; free physical = 13270 ; free virtual = 43694
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:00:29 ; elapsed = 00:02:35 . Memory (MB): peak = 832.453 ; gain = 132.133 ; free physical = 13270 ; free virtual = 43693
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'floydWarshall' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'floydWarshall' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 154.58 seconds; current allocated memory: 97.429 MB.
INFO: [HLS 200-434] Only 0 loops out of a total 5 loops have been pipelined in this design.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.08 seconds; current allocated memory: 97.815 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'floydWarshall' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-500] Setting interface mode on port 'floydWarshall/graph' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on function 'floydWarshall' to 'ap_ctrl_hs'.
INFO: [RTGEN 206-100] Finished creating RTL model for 'floydWarshall'.
INFO: [HLS 200-111]  Elapsed time: 0.1 seconds; current allocated memory: 98.252 MB.
INFO: [RTMG 210-278] Implementing memory 'floydWarshall_A_ram (RAM)' using distributed RAMs.
INFO: [HLS 200-111] Finished generating all RTL models Time (s): cpu = 00:00:30 ; elapsed = 00:02:36 . Memory (MB): peak = 832.453 ; gain = 132.133 ; free physical = 13267 ; free virtual = 43692
INFO: [VHDL 208-304] Generating VHDL RTL for floydWarshall.
INFO: [VLOG 209-307] Generating Verilog RTL for floydWarshall.
[2Kvivado_hls> [12CINFO: [HLS 200-112] Total elapsed time: 157.2 seconds; peak allocated memory: 98.252 MB.
INFO: [Common 17-206] Exiting vivado_hls at Mon Apr  6 17:37:49 2020...
