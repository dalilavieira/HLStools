// (C) 1992-2019 Intel Corporation.                            
// Intel, the Intel logo, Intel, MegaCore, NIOS II, Quartus and TalkBack words    
// and logos are trademarks of Intel Corporation or its subsidiaries in the U.S.  
// and/or other countries. Other marks and brands may be claimed as the property  
// of others. See Trademarks on intel.com for full list of Intel trademarks or    
// the Trademarks & Brands Names Database (if Intel) or See www.Intel.com/legal (if Altera) 
// Your use of Intel Corporation's design tools, logic functions and other        
// software and tools, and its AMPP partner logic functions, and any output       
// files any of the foregoing (including device programming or simulation         
// files), and any associated documentation or information are expressly subject  
// to the terms and conditions of the Altera Program License Subscription         
// Agreement, Intel MegaCore Function License Agreement, or other applicable      
// license agreement, including, without limitation, that your use is for the     
// sole purpose of programming logic devices manufactured by Intel and sold by    
// Intel or its authorized distributors.  Please refer to the applicable          
// agreement for further details.                                                 

// Generated by Intel(R) HLS Compiler, Version 19.4.0 Build 64

/////////////////////////////////////////////////////////////////
// MODULE c2c_decode_stats_internal
/////////////////////////////////////////////////////////////////
module c2c_decode_stats_internal
(
   input logic clock,
   input logic resetn,
   input logic [63:0] stats,
   input logic [63:0] mi,
   input logic [63:0] PERF_MEM_LOCK_LOCKED,
   input logic [63:0] PERF_MEM_LVL_HIT,
   input logic [63:0] PERF_MEM_LVL_IO,
   input logic [63:0] PERF_MEM_LVL_L1,
   input logic [63:0] PERF_MEM_LVL_L2,
   input logic [63:0] PERF_MEM_LVL_L3,
   input logic [63:0] PERF_MEM_LVL_LFB,
   input logic [63:0] PERF_MEM_LVL_LOC_RAM,
   input logic [63:0] PERF_MEM_LVL_MISS,
   input logic [63:0] PERF_MEM_LVL_UNC,
   input logic [63:0] PERF_MEM_OP_LOAD,
   input logic [63:0] PERF_MEM_OP_STORE,
   input logic [63:0] PERF_MEM_SNOOP_HIT,
   input logic [63:0] PERF_MEM_SNOOP_HITM,
   input logic start,
   output logic busy,
   output logic done,
   input logic stall,
   output logic [31:0] returndata,
   // AVM avmm_0_rw
   output logic avmm_0_rw_enable,
   output logic avmm_0_rw_read,
   output logic avmm_0_rw_write,
   output logic [63:0] avmm_0_rw_address,
   output logic [63:0] avmm_0_rw_writedata,
   output logic [7:0] avmm_0_rw_byteenable,
   input logic [63:0] avmm_0_rw_readdata,
   input logic avmm_0_rw_readdatavalid,
   output logic avmm_0_rw_burstcount,
   input logic avmm_0_rw_writeack
);
   genvar __i;
   logic avmm_0_global_avm_enable [56];
   logic avmm_0_global_avm_read [56];
   logic avmm_0_global_avm_write [56];
   logic [63:0] avmm_0_global_avm_address [56];
   logic [63:0] avmm_0_global_avm_writedata [56];
   logic [7:0] avmm_0_global_avm_byteenable [56];
   logic avmm_0_global_avm_waitrequest [56];
   logic [63:0] avmm_0_global_avm_readdata [56];
   logic avmm_0_global_avm_readdatavalid [56];
   logic avmm_0_global_avm_burstcount [56];
   logic avmm_0_global_avm_writeack [56];

   // INST c2c_decode_stats_internal of c2c_decode_stats_function_wrapper
   c2c_decode_stats_function_wrapper c2c_decode_stats_internal
   (
      .clock(clock),
      .resetn(resetn),
      .stats(stats),
      .mi(mi),
      .PERF_MEM_LOCK_LOCKED(PERF_MEM_LOCK_LOCKED),
      .PERF_MEM_LVL_HIT(PERF_MEM_LVL_HIT),
      .PERF_MEM_LVL_IO(PERF_MEM_LVL_IO),
      .PERF_MEM_LVL_L1(PERF_MEM_LVL_L1),
      .PERF_MEM_LVL_L2(PERF_MEM_LVL_L2),
      .PERF_MEM_LVL_L3(PERF_MEM_LVL_L3),
      .PERF_MEM_LVL_LFB(PERF_MEM_LVL_LFB),
      .PERF_MEM_LVL_LOC_RAM(PERF_MEM_LVL_LOC_RAM),
      .PERF_MEM_LVL_MISS(PERF_MEM_LVL_MISS),
      .PERF_MEM_LVL_UNC(PERF_MEM_LVL_UNC),
      .PERF_MEM_OP_LOAD(PERF_MEM_OP_LOAD),
      .PERF_MEM_OP_STORE(PERF_MEM_OP_STORE),
      .PERF_MEM_SNOOP_HIT(PERF_MEM_SNOOP_HIT),
      .PERF_MEM_SNOOP_HITM(PERF_MEM_SNOOP_HITM),
      .start(start),
      .busy(busy),
      .done(done),
      .stall(stall),
      .returndata(returndata),
      // AVM avm_lm10432_c2c_decode_stats
      .avm_lm10432_c2c_decode_stats_enable(avmm_0_global_avm_enable[0]),
      .avm_lm10432_c2c_decode_stats_read(avmm_0_global_avm_read[0]),
      .avm_lm10432_c2c_decode_stats_write(avmm_0_global_avm_write[0]),
      .avm_lm10432_c2c_decode_stats_address(avmm_0_global_avm_address[0]),
      .avm_lm10432_c2c_decode_stats_writedata(avmm_0_global_avm_writedata[0]),
      .avm_lm10432_c2c_decode_stats_byteenable(avmm_0_global_avm_byteenable[0]),
      .avm_lm10432_c2c_decode_stats_waitrequest(avmm_0_global_avm_waitrequest[0]),
      .avm_lm10432_c2c_decode_stats_readdata(avmm_0_global_avm_readdata[0]),
      .avm_lm10432_c2c_decode_stats_readdatavalid(avmm_0_global_avm_readdatavalid[0]),
      .avm_lm10432_c2c_decode_stats_burstcount(avmm_0_global_avm_burstcount[0]),
      .avm_lm10432_c2c_decode_stats_writeack(avmm_0_global_avm_writeack[0]),
      // AVM avm_lm10633_c2c_decode_stats
      .avm_lm10633_c2c_decode_stats_enable(avmm_0_global_avm_enable[1]),
      .avm_lm10633_c2c_decode_stats_read(avmm_0_global_avm_read[1]),
      .avm_lm10633_c2c_decode_stats_write(avmm_0_global_avm_write[1]),
      .avm_lm10633_c2c_decode_stats_address(avmm_0_global_avm_address[1]),
      .avm_lm10633_c2c_decode_stats_writedata(avmm_0_global_avm_writedata[1]),
      .avm_lm10633_c2c_decode_stats_byteenable(avmm_0_global_avm_byteenable[1]),
      .avm_lm10633_c2c_decode_stats_waitrequest(avmm_0_global_avm_waitrequest[1]),
      .avm_lm10633_c2c_decode_stats_readdata(avmm_0_global_avm_readdata[1]),
      .avm_lm10633_c2c_decode_stats_readdatavalid(avmm_0_global_avm_readdatavalid[1]),
      .avm_lm10633_c2c_decode_stats_burstcount(avmm_0_global_avm_burstcount[1]),
      .avm_lm10633_c2c_decode_stats_writeack(avmm_0_global_avm_writeack[1]),
      // AVM avm_lm11134_c2c_decode_stats
      .avm_lm11134_c2c_decode_stats_enable(avmm_0_global_avm_enable[2]),
      .avm_lm11134_c2c_decode_stats_read(avmm_0_global_avm_read[2]),
      .avm_lm11134_c2c_decode_stats_write(avmm_0_global_avm_write[2]),
      .avm_lm11134_c2c_decode_stats_address(avmm_0_global_avm_address[2]),
      .avm_lm11134_c2c_decode_stats_writedata(avmm_0_global_avm_writedata[2]),
      .avm_lm11134_c2c_decode_stats_byteenable(avmm_0_global_avm_byteenable[2]),
      .avm_lm11134_c2c_decode_stats_waitrequest(avmm_0_global_avm_waitrequest[2]),
      .avm_lm11134_c2c_decode_stats_readdata(avmm_0_global_avm_readdata[2]),
      .avm_lm11134_c2c_decode_stats_readdatavalid(avmm_0_global_avm_readdatavalid[2]),
      .avm_lm11134_c2c_decode_stats_burstcount(avmm_0_global_avm_burstcount[2]),
      .avm_lm11134_c2c_decode_stats_writeack(avmm_0_global_avm_writeack[2]),
      // AVM avm_lm12335_c2c_decode_stats
      .avm_lm12335_c2c_decode_stats_enable(avmm_0_global_avm_enable[3]),
      .avm_lm12335_c2c_decode_stats_read(avmm_0_global_avm_read[3]),
      .avm_lm12335_c2c_decode_stats_write(avmm_0_global_avm_write[3]),
      .avm_lm12335_c2c_decode_stats_address(avmm_0_global_avm_address[3]),
      .avm_lm12335_c2c_decode_stats_writedata(avmm_0_global_avm_writedata[3]),
      .avm_lm12335_c2c_decode_stats_byteenable(avmm_0_global_avm_byteenable[3]),
      .avm_lm12335_c2c_decode_stats_waitrequest(avmm_0_global_avm_waitrequest[3]),
      .avm_lm12335_c2c_decode_stats_readdata(avmm_0_global_avm_readdata[3]),
      .avm_lm12335_c2c_decode_stats_readdatavalid(avmm_0_global_avm_readdatavalid[3]),
      .avm_lm12335_c2c_decode_stats_burstcount(avmm_0_global_avm_burstcount[3]),
      .avm_lm12335_c2c_decode_stats_writeack(avmm_0_global_avm_writeack[3]),
      // AVM avm_lm12737_c2c_decode_stats
      .avm_lm12737_c2c_decode_stats_enable(avmm_0_global_avm_enable[4]),
      .avm_lm12737_c2c_decode_stats_read(avmm_0_global_avm_read[4]),
      .avm_lm12737_c2c_decode_stats_write(avmm_0_global_avm_write[4]),
      .avm_lm12737_c2c_decode_stats_address(avmm_0_global_avm_address[4]),
      .avm_lm12737_c2c_decode_stats_writedata(avmm_0_global_avm_writedata[4]),
      .avm_lm12737_c2c_decode_stats_byteenable(avmm_0_global_avm_byteenable[4]),
      .avm_lm12737_c2c_decode_stats_waitrequest(avmm_0_global_avm_waitrequest[4]),
      .avm_lm12737_c2c_decode_stats_readdata(avmm_0_global_avm_readdata[4]),
      .avm_lm12737_c2c_decode_stats_readdatavalid(avmm_0_global_avm_readdatavalid[4]),
      .avm_lm12737_c2c_decode_stats_burstcount(avmm_0_global_avm_burstcount[4]),
      .avm_lm12737_c2c_decode_stats_writeack(avmm_0_global_avm_writeack[4]),
      // AVM avm_lm13238_c2c_decode_stats
      .avm_lm13238_c2c_decode_stats_enable(avmm_0_global_avm_enable[5]),
      .avm_lm13238_c2c_decode_stats_read(avmm_0_global_avm_read[5]),
      .avm_lm13238_c2c_decode_stats_write(avmm_0_global_avm_write[5]),
      .avm_lm13238_c2c_decode_stats_address(avmm_0_global_avm_address[5]),
      .avm_lm13238_c2c_decode_stats_writedata(avmm_0_global_avm_writedata[5]),
      .avm_lm13238_c2c_decode_stats_byteenable(avmm_0_global_avm_byteenable[5]),
      .avm_lm13238_c2c_decode_stats_waitrequest(avmm_0_global_avm_waitrequest[5]),
      .avm_lm13238_c2c_decode_stats_readdata(avmm_0_global_avm_readdata[5]),
      .avm_lm13238_c2c_decode_stats_readdatavalid(avmm_0_global_avm_readdatavalid[5]),
      .avm_lm13238_c2c_decode_stats_burstcount(avmm_0_global_avm_burstcount[5]),
      .avm_lm13238_c2c_decode_stats_writeack(avmm_0_global_avm_writeack[5]),
      // AVM avm_lm1521_c2c_decode_stats
      .avm_lm1521_c2c_decode_stats_enable(avmm_0_global_avm_enable[6]),
      .avm_lm1521_c2c_decode_stats_read(avmm_0_global_avm_read[6]),
      .avm_lm1521_c2c_decode_stats_write(avmm_0_global_avm_write[6]),
      .avm_lm1521_c2c_decode_stats_address(avmm_0_global_avm_address[6]),
      .avm_lm1521_c2c_decode_stats_writedata(avmm_0_global_avm_writedata[6]),
      .avm_lm1521_c2c_decode_stats_byteenable(avmm_0_global_avm_byteenable[6]),
      .avm_lm1521_c2c_decode_stats_waitrequest(avmm_0_global_avm_waitrequest[6]),
      .avm_lm1521_c2c_decode_stats_readdata(avmm_0_global_avm_readdata[6]),
      .avm_lm1521_c2c_decode_stats_readdatavalid(avmm_0_global_avm_readdatavalid[6]),
      .avm_lm1521_c2c_decode_stats_burstcount(avmm_0_global_avm_burstcount[6]),
      .avm_lm1521_c2c_decode_stats_writeack(avmm_0_global_avm_writeack[6]),
      // AVM avm_lm17044_c2c_decode_stats
      .avm_lm17044_c2c_decode_stats_enable(avmm_0_global_avm_enable[7]),
      .avm_lm17044_c2c_decode_stats_read(avmm_0_global_avm_read[7]),
      .avm_lm17044_c2c_decode_stats_write(avmm_0_global_avm_write[7]),
      .avm_lm17044_c2c_decode_stats_address(avmm_0_global_avm_address[7]),
      .avm_lm17044_c2c_decode_stats_writedata(avmm_0_global_avm_writedata[7]),
      .avm_lm17044_c2c_decode_stats_byteenable(avmm_0_global_avm_byteenable[7]),
      .avm_lm17044_c2c_decode_stats_waitrequest(avmm_0_global_avm_waitrequest[7]),
      .avm_lm17044_c2c_decode_stats_readdata(avmm_0_global_avm_readdata[7]),
      .avm_lm17044_c2c_decode_stats_readdatavalid(avmm_0_global_avm_readdatavalid[7]),
      .avm_lm17044_c2c_decode_stats_burstcount(avmm_0_global_avm_burstcount[7]),
      .avm_lm17044_c2c_decode_stats_writeack(avmm_0_global_avm_writeack[7]),
      // AVM avm_lm19750_c2c_decode_stats
      .avm_lm19750_c2c_decode_stats_enable(avmm_0_global_avm_enable[8]),
      .avm_lm19750_c2c_decode_stats_read(avmm_0_global_avm_read[8]),
      .avm_lm19750_c2c_decode_stats_write(avmm_0_global_avm_write[8]),
      .avm_lm19750_c2c_decode_stats_address(avmm_0_global_avm_address[8]),
      .avm_lm19750_c2c_decode_stats_writedata(avmm_0_global_avm_writedata[8]),
      .avm_lm19750_c2c_decode_stats_byteenable(avmm_0_global_avm_byteenable[8]),
      .avm_lm19750_c2c_decode_stats_waitrequest(avmm_0_global_avm_waitrequest[8]),
      .avm_lm19750_c2c_decode_stats_readdata(avmm_0_global_avm_readdata[8]),
      .avm_lm19750_c2c_decode_stats_readdatavalid(avmm_0_global_avm_readdatavalid[8]),
      .avm_lm19750_c2c_decode_stats_burstcount(avmm_0_global_avm_burstcount[8]),
      .avm_lm19750_c2c_decode_stats_writeack(avmm_0_global_avm_writeack[8]),
      // AVM avm_lm20351_c2c_decode_stats
      .avm_lm20351_c2c_decode_stats_enable(avmm_0_global_avm_enable[9]),
      .avm_lm20351_c2c_decode_stats_read(avmm_0_global_avm_read[9]),
      .avm_lm20351_c2c_decode_stats_write(avmm_0_global_avm_write[9]),
      .avm_lm20351_c2c_decode_stats_address(avmm_0_global_avm_address[9]),
      .avm_lm20351_c2c_decode_stats_writedata(avmm_0_global_avm_writedata[9]),
      .avm_lm20351_c2c_decode_stats_byteenable(avmm_0_global_avm_byteenable[9]),
      .avm_lm20351_c2c_decode_stats_waitrequest(avmm_0_global_avm_waitrequest[9]),
      .avm_lm20351_c2c_decode_stats_readdata(avmm_0_global_avm_readdata[9]),
      .avm_lm20351_c2c_decode_stats_readdatavalid(avmm_0_global_avm_readdatavalid[9]),
      .avm_lm20351_c2c_decode_stats_burstcount(avmm_0_global_avm_burstcount[9]),
      .avm_lm20351_c2c_decode_stats_writeack(avmm_0_global_avm_writeack[9]),
      // AVM avm_lm20_c2c_decode_stats
      .avm_lm20_c2c_decode_stats_enable(avmm_0_global_avm_enable[10]),
      .avm_lm20_c2c_decode_stats_read(avmm_0_global_avm_read[10]),
      .avm_lm20_c2c_decode_stats_write(avmm_0_global_avm_write[10]),
      .avm_lm20_c2c_decode_stats_address(avmm_0_global_avm_address[10]),
      .avm_lm20_c2c_decode_stats_writedata(avmm_0_global_avm_writedata[10]),
      .avm_lm20_c2c_decode_stats_byteenable(avmm_0_global_avm_byteenable[10]),
      .avm_lm20_c2c_decode_stats_waitrequest(avmm_0_global_avm_waitrequest[10]),
      .avm_lm20_c2c_decode_stats_readdata(avmm_0_global_avm_readdata[10]),
      .avm_lm20_c2c_decode_stats_readdatavalid(avmm_0_global_avm_readdatavalid[10]),
      .avm_lm20_c2c_decode_stats_burstcount(avmm_0_global_avm_burstcount[10]),
      .avm_lm20_c2c_decode_stats_writeack(avmm_0_global_avm_writeack[10]),
      // AVM avm_lm2722_c2c_decode_stats
      .avm_lm2722_c2c_decode_stats_enable(avmm_0_global_avm_enable[11]),
      .avm_lm2722_c2c_decode_stats_read(avmm_0_global_avm_read[11]),
      .avm_lm2722_c2c_decode_stats_write(avmm_0_global_avm_write[11]),
      .avm_lm2722_c2c_decode_stats_address(avmm_0_global_avm_address[11]),
      .avm_lm2722_c2c_decode_stats_writedata(avmm_0_global_avm_writedata[11]),
      .avm_lm2722_c2c_decode_stats_byteenable(avmm_0_global_avm_byteenable[11]),
      .avm_lm2722_c2c_decode_stats_waitrequest(avmm_0_global_avm_waitrequest[11]),
      .avm_lm2722_c2c_decode_stats_readdata(avmm_0_global_avm_readdata[11]),
      .avm_lm2722_c2c_decode_stats_readdatavalid(avmm_0_global_avm_readdatavalid[11]),
      .avm_lm2722_c2c_decode_stats_burstcount(avmm_0_global_avm_burstcount[11]),
      .avm_lm2722_c2c_decode_stats_writeack(avmm_0_global_avm_writeack[11]),
      // AVM avm_lm3923_c2c_decode_stats
      .avm_lm3923_c2c_decode_stats_enable(avmm_0_global_avm_enable[12]),
      .avm_lm3923_c2c_decode_stats_read(avmm_0_global_avm_read[12]),
      .avm_lm3923_c2c_decode_stats_write(avmm_0_global_avm_write[12]),
      .avm_lm3923_c2c_decode_stats_address(avmm_0_global_avm_address[12]),
      .avm_lm3923_c2c_decode_stats_writedata(avmm_0_global_avm_writedata[12]),
      .avm_lm3923_c2c_decode_stats_byteenable(avmm_0_global_avm_byteenable[12]),
      .avm_lm3923_c2c_decode_stats_waitrequest(avmm_0_global_avm_waitrequest[12]),
      .avm_lm3923_c2c_decode_stats_readdata(avmm_0_global_avm_readdata[12]),
      .avm_lm3923_c2c_decode_stats_readdatavalid(avmm_0_global_avm_readdatavalid[12]),
      .avm_lm3923_c2c_decode_stats_burstcount(avmm_0_global_avm_burstcount[12]),
      .avm_lm3923_c2c_decode_stats_writeack(avmm_0_global_avm_writeack[12]),
      // AVM avm_lm4924_c2c_decode_stats
      .avm_lm4924_c2c_decode_stats_enable(avmm_0_global_avm_enable[13]),
      .avm_lm4924_c2c_decode_stats_read(avmm_0_global_avm_read[13]),
      .avm_lm4924_c2c_decode_stats_write(avmm_0_global_avm_write[13]),
      .avm_lm4924_c2c_decode_stats_address(avmm_0_global_avm_address[13]),
      .avm_lm4924_c2c_decode_stats_writedata(avmm_0_global_avm_writedata[13]),
      .avm_lm4924_c2c_decode_stats_byteenable(avmm_0_global_avm_byteenable[13]),
      .avm_lm4924_c2c_decode_stats_waitrequest(avmm_0_global_avm_waitrequest[13]),
      .avm_lm4924_c2c_decode_stats_readdata(avmm_0_global_avm_readdata[13]),
      .avm_lm4924_c2c_decode_stats_readdatavalid(avmm_0_global_avm_readdatavalid[13]),
      .avm_lm4924_c2c_decode_stats_burstcount(avmm_0_global_avm_burstcount[13]),
      .avm_lm4924_c2c_decode_stats_writeack(avmm_0_global_avm_writeack[13]),
      // AVM avm_lm5725_c2c_decode_stats
      .avm_lm5725_c2c_decode_stats_enable(avmm_0_global_avm_enable[14]),
      .avm_lm5725_c2c_decode_stats_read(avmm_0_global_avm_read[14]),
      .avm_lm5725_c2c_decode_stats_write(avmm_0_global_avm_write[14]),
      .avm_lm5725_c2c_decode_stats_address(avmm_0_global_avm_address[14]),
      .avm_lm5725_c2c_decode_stats_writedata(avmm_0_global_avm_writedata[14]),
      .avm_lm5725_c2c_decode_stats_byteenable(avmm_0_global_avm_byteenable[14]),
      .avm_lm5725_c2c_decode_stats_waitrequest(avmm_0_global_avm_waitrequest[14]),
      .avm_lm5725_c2c_decode_stats_readdata(avmm_0_global_avm_readdata[14]),
      .avm_lm5725_c2c_decode_stats_readdatavalid(avmm_0_global_avm_readdatavalid[14]),
      .avm_lm5725_c2c_decode_stats_burstcount(avmm_0_global_avm_burstcount[14]),
      .avm_lm5725_c2c_decode_stats_writeack(avmm_0_global_avm_writeack[14]),
      // AVM avm_lm6426_c2c_decode_stats
      .avm_lm6426_c2c_decode_stats_enable(avmm_0_global_avm_enable[15]),
      .avm_lm6426_c2c_decode_stats_read(avmm_0_global_avm_read[15]),
      .avm_lm6426_c2c_decode_stats_write(avmm_0_global_avm_write[15]),
      .avm_lm6426_c2c_decode_stats_address(avmm_0_global_avm_address[15]),
      .avm_lm6426_c2c_decode_stats_writedata(avmm_0_global_avm_writedata[15]),
      .avm_lm6426_c2c_decode_stats_byteenable(avmm_0_global_avm_byteenable[15]),
      .avm_lm6426_c2c_decode_stats_waitrequest(avmm_0_global_avm_waitrequest[15]),
      .avm_lm6426_c2c_decode_stats_readdata(avmm_0_global_avm_readdata[15]),
      .avm_lm6426_c2c_decode_stats_readdatavalid(avmm_0_global_avm_readdatavalid[15]),
      .avm_lm6426_c2c_decode_stats_burstcount(avmm_0_global_avm_burstcount[15]),
      .avm_lm6426_c2c_decode_stats_writeack(avmm_0_global_avm_writeack[15]),
      // AVM avm_lm7227_c2c_decode_stats
      .avm_lm7227_c2c_decode_stats_enable(avmm_0_global_avm_enable[16]),
      .avm_lm7227_c2c_decode_stats_read(avmm_0_global_avm_read[16]),
      .avm_lm7227_c2c_decode_stats_write(avmm_0_global_avm_write[16]),
      .avm_lm7227_c2c_decode_stats_address(avmm_0_global_avm_address[16]),
      .avm_lm7227_c2c_decode_stats_writedata(avmm_0_global_avm_writedata[16]),
      .avm_lm7227_c2c_decode_stats_byteenable(avmm_0_global_avm_byteenable[16]),
      .avm_lm7227_c2c_decode_stats_waitrequest(avmm_0_global_avm_waitrequest[16]),
      .avm_lm7227_c2c_decode_stats_readdata(avmm_0_global_avm_readdata[16]),
      .avm_lm7227_c2c_decode_stats_readdatavalid(avmm_0_global_avm_readdatavalid[16]),
      .avm_lm7227_c2c_decode_stats_burstcount(avmm_0_global_avm_burstcount[16]),
      .avm_lm7227_c2c_decode_stats_writeack(avmm_0_global_avm_writeack[16]),
      // AVM avm_lm7928_c2c_decode_stats
      .avm_lm7928_c2c_decode_stats_enable(avmm_0_global_avm_enable[17]),
      .avm_lm7928_c2c_decode_stats_read(avmm_0_global_avm_read[17]),
      .avm_lm7928_c2c_decode_stats_write(avmm_0_global_avm_write[17]),
      .avm_lm7928_c2c_decode_stats_address(avmm_0_global_avm_address[17]),
      .avm_lm7928_c2c_decode_stats_writedata(avmm_0_global_avm_writedata[17]),
      .avm_lm7928_c2c_decode_stats_byteenable(avmm_0_global_avm_byteenable[17]),
      .avm_lm7928_c2c_decode_stats_waitrequest(avmm_0_global_avm_waitrequest[17]),
      .avm_lm7928_c2c_decode_stats_readdata(avmm_0_global_avm_readdata[17]),
      .avm_lm7928_c2c_decode_stats_readdatavalid(avmm_0_global_avm_readdatavalid[17]),
      .avm_lm7928_c2c_decode_stats_burstcount(avmm_0_global_avm_burstcount[17]),
      .avm_lm7928_c2c_decode_stats_writeack(avmm_0_global_avm_writeack[17]),
      // AVM avm_lm8629_c2c_decode_stats
      .avm_lm8629_c2c_decode_stats_enable(avmm_0_global_avm_enable[18]),
      .avm_lm8629_c2c_decode_stats_read(avmm_0_global_avm_read[18]),
      .avm_lm8629_c2c_decode_stats_write(avmm_0_global_avm_write[18]),
      .avm_lm8629_c2c_decode_stats_address(avmm_0_global_avm_address[18]),
      .avm_lm8629_c2c_decode_stats_writedata(avmm_0_global_avm_writedata[18]),
      .avm_lm8629_c2c_decode_stats_byteenable(avmm_0_global_avm_byteenable[18]),
      .avm_lm8629_c2c_decode_stats_waitrequest(avmm_0_global_avm_waitrequest[18]),
      .avm_lm8629_c2c_decode_stats_readdata(avmm_0_global_avm_readdata[18]),
      .avm_lm8629_c2c_decode_stats_readdatavalid(avmm_0_global_avm_readdatavalid[18]),
      .avm_lm8629_c2c_decode_stats_burstcount(avmm_0_global_avm_burstcount[18]),
      .avm_lm8629_c2c_decode_stats_writeack(avmm_0_global_avm_writeack[18]),
      // AVM avm_lm9730_c2c_decode_stats
      .avm_lm9730_c2c_decode_stats_enable(avmm_0_global_avm_enable[19]),
      .avm_lm9730_c2c_decode_stats_read(avmm_0_global_avm_read[19]),
      .avm_lm9730_c2c_decode_stats_write(avmm_0_global_avm_write[19]),
      .avm_lm9730_c2c_decode_stats_address(avmm_0_global_avm_address[19]),
      .avm_lm9730_c2c_decode_stats_writedata(avmm_0_global_avm_writedata[19]),
      .avm_lm9730_c2c_decode_stats_byteenable(avmm_0_global_avm_byteenable[19]),
      .avm_lm9730_c2c_decode_stats_waitrequest(avmm_0_global_avm_waitrequest[19]),
      .avm_lm9730_c2c_decode_stats_readdata(avmm_0_global_avm_readdata[19]),
      .avm_lm9730_c2c_decode_stats_readdatavalid(avmm_0_global_avm_readdatavalid[19]),
      .avm_lm9730_c2c_decode_stats_burstcount(avmm_0_global_avm_burstcount[19]),
      .avm_lm9730_c2c_decode_stats_writeack(avmm_0_global_avm_writeack[19]),
      // AVM avm_lm9931_c2c_decode_stats
      .avm_lm9931_c2c_decode_stats_enable(avmm_0_global_avm_enable[20]),
      .avm_lm9931_c2c_decode_stats_read(avmm_0_global_avm_read[20]),
      .avm_lm9931_c2c_decode_stats_write(avmm_0_global_avm_write[20]),
      .avm_lm9931_c2c_decode_stats_address(avmm_0_global_avm_address[20]),
      .avm_lm9931_c2c_decode_stats_writedata(avmm_0_global_avm_writedata[20]),
      .avm_lm9931_c2c_decode_stats_byteenable(avmm_0_global_avm_byteenable[20]),
      .avm_lm9931_c2c_decode_stats_waitrequest(avmm_0_global_avm_waitrequest[20]),
      .avm_lm9931_c2c_decode_stats_readdata(avmm_0_global_avm_readdata[20]),
      .avm_lm9931_c2c_decode_stats_readdatavalid(avmm_0_global_avm_readdatavalid[20]),
      .avm_lm9931_c2c_decode_stats_burstcount(avmm_0_global_avm_burstcount[20]),
      .avm_lm9931_c2c_decode_stats_writeack(avmm_0_global_avm_writeack[20]),
      // AVM avm_memdep_19_c2c_decode_stats
      .avm_memdep_19_c2c_decode_stats_enable(avmm_0_global_avm_enable[21]),
      .avm_memdep_19_c2c_decode_stats_read(avmm_0_global_avm_read[21]),
      .avm_memdep_19_c2c_decode_stats_write(avmm_0_global_avm_write[21]),
      .avm_memdep_19_c2c_decode_stats_address(avmm_0_global_avm_address[21]),
      .avm_memdep_19_c2c_decode_stats_writedata(avmm_0_global_avm_writedata[21]),
      .avm_memdep_19_c2c_decode_stats_byteenable(avmm_0_global_avm_byteenable[21]),
      .avm_memdep_19_c2c_decode_stats_waitrequest(avmm_0_global_avm_waitrequest[21]),
      .avm_memdep_19_c2c_decode_stats_readdata(avmm_0_global_avm_readdata[21]),
      .avm_memdep_19_c2c_decode_stats_readdatavalid(avmm_0_global_avm_readdatavalid[21]),
      .avm_memdep_19_c2c_decode_stats_burstcount(avmm_0_global_avm_burstcount[21]),
      .avm_memdep_19_c2c_decode_stats_writeack(avmm_0_global_avm_writeack[21]),
      // AVM avm_memdep_42818_c2c_decode_stats
      .avm_memdep_42818_c2c_decode_stats_enable(avmm_0_global_avm_enable[22]),
      .avm_memdep_42818_c2c_decode_stats_read(avmm_0_global_avm_read[22]),
      .avm_memdep_42818_c2c_decode_stats_write(avmm_0_global_avm_write[22]),
      .avm_memdep_42818_c2c_decode_stats_address(avmm_0_global_avm_address[22]),
      .avm_memdep_42818_c2c_decode_stats_writedata(avmm_0_global_avm_writedata[22]),
      .avm_memdep_42818_c2c_decode_stats_byteenable(avmm_0_global_avm_byteenable[22]),
      .avm_memdep_42818_c2c_decode_stats_waitrequest(avmm_0_global_avm_waitrequest[22]),
      .avm_memdep_42818_c2c_decode_stats_readdata(avmm_0_global_avm_readdata[22]),
      .avm_memdep_42818_c2c_decode_stats_readdatavalid(avmm_0_global_avm_readdatavalid[22]),
      .avm_memdep_42818_c2c_decode_stats_burstcount(avmm_0_global_avm_burstcount[22]),
      .avm_memdep_42818_c2c_decode_stats_writeack(avmm_0_global_avm_writeack[22]),
      // AVM avm_memdep_42917_c2c_decode_stats
      .avm_memdep_42917_c2c_decode_stats_enable(avmm_0_global_avm_enable[23]),
      .avm_memdep_42917_c2c_decode_stats_read(avmm_0_global_avm_read[23]),
      .avm_memdep_42917_c2c_decode_stats_write(avmm_0_global_avm_write[23]),
      .avm_memdep_42917_c2c_decode_stats_address(avmm_0_global_avm_address[23]),
      .avm_memdep_42917_c2c_decode_stats_writedata(avmm_0_global_avm_writedata[23]),
      .avm_memdep_42917_c2c_decode_stats_byteenable(avmm_0_global_avm_byteenable[23]),
      .avm_memdep_42917_c2c_decode_stats_waitrequest(avmm_0_global_avm_waitrequest[23]),
      .avm_memdep_42917_c2c_decode_stats_readdata(avmm_0_global_avm_readdata[23]),
      .avm_memdep_42917_c2c_decode_stats_readdatavalid(avmm_0_global_avm_readdatavalid[23]),
      .avm_memdep_42917_c2c_decode_stats_burstcount(avmm_0_global_avm_burstcount[23]),
      .avm_memdep_42917_c2c_decode_stats_writeack(avmm_0_global_avm_writeack[23]),
      // AVM avm_memdep_43016_c2c_decode_stats
      .avm_memdep_43016_c2c_decode_stats_enable(avmm_0_global_avm_enable[24]),
      .avm_memdep_43016_c2c_decode_stats_read(avmm_0_global_avm_read[24]),
      .avm_memdep_43016_c2c_decode_stats_write(avmm_0_global_avm_write[24]),
      .avm_memdep_43016_c2c_decode_stats_address(avmm_0_global_avm_address[24]),
      .avm_memdep_43016_c2c_decode_stats_writedata(avmm_0_global_avm_writedata[24]),
      .avm_memdep_43016_c2c_decode_stats_byteenable(avmm_0_global_avm_byteenable[24]),
      .avm_memdep_43016_c2c_decode_stats_waitrequest(avmm_0_global_avm_waitrequest[24]),
      .avm_memdep_43016_c2c_decode_stats_readdata(avmm_0_global_avm_readdata[24]),
      .avm_memdep_43016_c2c_decode_stats_readdatavalid(avmm_0_global_avm_readdatavalid[24]),
      .avm_memdep_43016_c2c_decode_stats_burstcount(avmm_0_global_avm_burstcount[24]),
      .avm_memdep_43016_c2c_decode_stats_writeack(avmm_0_global_avm_writeack[24]),
      // AVM avm_memdep_43115_c2c_decode_stats
      .avm_memdep_43115_c2c_decode_stats_enable(avmm_0_global_avm_enable[25]),
      .avm_memdep_43115_c2c_decode_stats_read(avmm_0_global_avm_read[25]),
      .avm_memdep_43115_c2c_decode_stats_write(avmm_0_global_avm_write[25]),
      .avm_memdep_43115_c2c_decode_stats_address(avmm_0_global_avm_address[25]),
      .avm_memdep_43115_c2c_decode_stats_writedata(avmm_0_global_avm_writedata[25]),
      .avm_memdep_43115_c2c_decode_stats_byteenable(avmm_0_global_avm_byteenable[25]),
      .avm_memdep_43115_c2c_decode_stats_waitrequest(avmm_0_global_avm_waitrequest[25]),
      .avm_memdep_43115_c2c_decode_stats_readdata(avmm_0_global_avm_readdata[25]),
      .avm_memdep_43115_c2c_decode_stats_readdatavalid(avmm_0_global_avm_readdatavalid[25]),
      .avm_memdep_43115_c2c_decode_stats_burstcount(avmm_0_global_avm_burstcount[25]),
      .avm_memdep_43115_c2c_decode_stats_writeack(avmm_0_global_avm_writeack[25]),
      // AVM avm_memdep_43214_c2c_decode_stats
      .avm_memdep_43214_c2c_decode_stats_enable(avmm_0_global_avm_enable[26]),
      .avm_memdep_43214_c2c_decode_stats_read(avmm_0_global_avm_read[26]),
      .avm_memdep_43214_c2c_decode_stats_write(avmm_0_global_avm_write[26]),
      .avm_memdep_43214_c2c_decode_stats_address(avmm_0_global_avm_address[26]),
      .avm_memdep_43214_c2c_decode_stats_writedata(avmm_0_global_avm_writedata[26]),
      .avm_memdep_43214_c2c_decode_stats_byteenable(avmm_0_global_avm_byteenable[26]),
      .avm_memdep_43214_c2c_decode_stats_waitrequest(avmm_0_global_avm_waitrequest[26]),
      .avm_memdep_43214_c2c_decode_stats_readdata(avmm_0_global_avm_readdata[26]),
      .avm_memdep_43214_c2c_decode_stats_readdatavalid(avmm_0_global_avm_readdatavalid[26]),
      .avm_memdep_43214_c2c_decode_stats_burstcount(avmm_0_global_avm_burstcount[26]),
      .avm_memdep_43214_c2c_decode_stats_writeack(avmm_0_global_avm_writeack[26]),
      // AVM avm_memdep_43313_c2c_decode_stats
      .avm_memdep_43313_c2c_decode_stats_enable(avmm_0_global_avm_enable[27]),
      .avm_memdep_43313_c2c_decode_stats_read(avmm_0_global_avm_read[27]),
      .avm_memdep_43313_c2c_decode_stats_write(avmm_0_global_avm_write[27]),
      .avm_memdep_43313_c2c_decode_stats_address(avmm_0_global_avm_address[27]),
      .avm_memdep_43313_c2c_decode_stats_writedata(avmm_0_global_avm_writedata[27]),
      .avm_memdep_43313_c2c_decode_stats_byteenable(avmm_0_global_avm_byteenable[27]),
      .avm_memdep_43313_c2c_decode_stats_waitrequest(avmm_0_global_avm_waitrequest[27]),
      .avm_memdep_43313_c2c_decode_stats_readdata(avmm_0_global_avm_readdata[27]),
      .avm_memdep_43313_c2c_decode_stats_readdatavalid(avmm_0_global_avm_readdatavalid[27]),
      .avm_memdep_43313_c2c_decode_stats_burstcount(avmm_0_global_avm_burstcount[27]),
      .avm_memdep_43313_c2c_decode_stats_writeack(avmm_0_global_avm_writeack[27]),
      // AVM avm_memdep_43412_c2c_decode_stats
      .avm_memdep_43412_c2c_decode_stats_enable(avmm_0_global_avm_enable[28]),
      .avm_memdep_43412_c2c_decode_stats_read(avmm_0_global_avm_read[28]),
      .avm_memdep_43412_c2c_decode_stats_write(avmm_0_global_avm_write[28]),
      .avm_memdep_43412_c2c_decode_stats_address(avmm_0_global_avm_address[28]),
      .avm_memdep_43412_c2c_decode_stats_writedata(avmm_0_global_avm_writedata[28]),
      .avm_memdep_43412_c2c_decode_stats_byteenable(avmm_0_global_avm_byteenable[28]),
      .avm_memdep_43412_c2c_decode_stats_waitrequest(avmm_0_global_avm_waitrequest[28]),
      .avm_memdep_43412_c2c_decode_stats_readdata(avmm_0_global_avm_readdata[28]),
      .avm_memdep_43412_c2c_decode_stats_readdatavalid(avmm_0_global_avm_readdatavalid[28]),
      .avm_memdep_43412_c2c_decode_stats_burstcount(avmm_0_global_avm_burstcount[28]),
      .avm_memdep_43412_c2c_decode_stats_writeack(avmm_0_global_avm_writeack[28]),
      // AVM avm_memdep_43511_c2c_decode_stats
      .avm_memdep_43511_c2c_decode_stats_enable(avmm_0_global_avm_enable[29]),
      .avm_memdep_43511_c2c_decode_stats_read(avmm_0_global_avm_read[29]),
      .avm_memdep_43511_c2c_decode_stats_write(avmm_0_global_avm_write[29]),
      .avm_memdep_43511_c2c_decode_stats_address(avmm_0_global_avm_address[29]),
      .avm_memdep_43511_c2c_decode_stats_writedata(avmm_0_global_avm_writedata[29]),
      .avm_memdep_43511_c2c_decode_stats_byteenable(avmm_0_global_avm_byteenable[29]),
      .avm_memdep_43511_c2c_decode_stats_waitrequest(avmm_0_global_avm_waitrequest[29]),
      .avm_memdep_43511_c2c_decode_stats_readdata(avmm_0_global_avm_readdata[29]),
      .avm_memdep_43511_c2c_decode_stats_readdatavalid(avmm_0_global_avm_readdatavalid[29]),
      .avm_memdep_43511_c2c_decode_stats_burstcount(avmm_0_global_avm_burstcount[29]),
      .avm_memdep_43511_c2c_decode_stats_writeack(avmm_0_global_avm_writeack[29]),
      // AVM avm_memdep_43610_c2c_decode_stats
      .avm_memdep_43610_c2c_decode_stats_enable(avmm_0_global_avm_enable[30]),
      .avm_memdep_43610_c2c_decode_stats_read(avmm_0_global_avm_read[30]),
      .avm_memdep_43610_c2c_decode_stats_write(avmm_0_global_avm_write[30]),
      .avm_memdep_43610_c2c_decode_stats_address(avmm_0_global_avm_address[30]),
      .avm_memdep_43610_c2c_decode_stats_writedata(avmm_0_global_avm_writedata[30]),
      .avm_memdep_43610_c2c_decode_stats_byteenable(avmm_0_global_avm_byteenable[30]),
      .avm_memdep_43610_c2c_decode_stats_waitrequest(avmm_0_global_avm_waitrequest[30]),
      .avm_memdep_43610_c2c_decode_stats_readdata(avmm_0_global_avm_readdata[30]),
      .avm_memdep_43610_c2c_decode_stats_readdatavalid(avmm_0_global_avm_readdatavalid[30]),
      .avm_memdep_43610_c2c_decode_stats_burstcount(avmm_0_global_avm_burstcount[30]),
      .avm_memdep_43610_c2c_decode_stats_writeack(avmm_0_global_avm_writeack[30]),
      // AVM avm_memdep_4379_c2c_decode_stats
      .avm_memdep_4379_c2c_decode_stats_enable(avmm_0_global_avm_enable[31]),
      .avm_memdep_4379_c2c_decode_stats_read(avmm_0_global_avm_read[31]),
      .avm_memdep_4379_c2c_decode_stats_write(avmm_0_global_avm_write[31]),
      .avm_memdep_4379_c2c_decode_stats_address(avmm_0_global_avm_address[31]),
      .avm_memdep_4379_c2c_decode_stats_writedata(avmm_0_global_avm_writedata[31]),
      .avm_memdep_4379_c2c_decode_stats_byteenable(avmm_0_global_avm_byteenable[31]),
      .avm_memdep_4379_c2c_decode_stats_waitrequest(avmm_0_global_avm_waitrequest[31]),
      .avm_memdep_4379_c2c_decode_stats_readdata(avmm_0_global_avm_readdata[31]),
      .avm_memdep_4379_c2c_decode_stats_readdatavalid(avmm_0_global_avm_readdatavalid[31]),
      .avm_memdep_4379_c2c_decode_stats_burstcount(avmm_0_global_avm_burstcount[31]),
      .avm_memdep_4379_c2c_decode_stats_writeack(avmm_0_global_avm_writeack[31]),
      // AVM avm_memdep_4388_c2c_decode_stats
      .avm_memdep_4388_c2c_decode_stats_enable(avmm_0_global_avm_enable[32]),
      .avm_memdep_4388_c2c_decode_stats_read(avmm_0_global_avm_read[32]),
      .avm_memdep_4388_c2c_decode_stats_write(avmm_0_global_avm_write[32]),
      .avm_memdep_4388_c2c_decode_stats_address(avmm_0_global_avm_address[32]),
      .avm_memdep_4388_c2c_decode_stats_writedata(avmm_0_global_avm_writedata[32]),
      .avm_memdep_4388_c2c_decode_stats_byteenable(avmm_0_global_avm_byteenable[32]),
      .avm_memdep_4388_c2c_decode_stats_waitrequest(avmm_0_global_avm_waitrequest[32]),
      .avm_memdep_4388_c2c_decode_stats_readdata(avmm_0_global_avm_readdata[32]),
      .avm_memdep_4388_c2c_decode_stats_readdatavalid(avmm_0_global_avm_readdatavalid[32]),
      .avm_memdep_4388_c2c_decode_stats_burstcount(avmm_0_global_avm_burstcount[32]),
      .avm_memdep_4388_c2c_decode_stats_writeack(avmm_0_global_avm_writeack[32]),
      // AVM avm_memdep_4397_c2c_decode_stats
      .avm_memdep_4397_c2c_decode_stats_enable(avmm_0_global_avm_enable[33]),
      .avm_memdep_4397_c2c_decode_stats_read(avmm_0_global_avm_read[33]),
      .avm_memdep_4397_c2c_decode_stats_write(avmm_0_global_avm_write[33]),
      .avm_memdep_4397_c2c_decode_stats_address(avmm_0_global_avm_address[33]),
      .avm_memdep_4397_c2c_decode_stats_writedata(avmm_0_global_avm_writedata[33]),
      .avm_memdep_4397_c2c_decode_stats_byteenable(avmm_0_global_avm_byteenable[33]),
      .avm_memdep_4397_c2c_decode_stats_waitrequest(avmm_0_global_avm_waitrequest[33]),
      .avm_memdep_4397_c2c_decode_stats_readdata(avmm_0_global_avm_readdata[33]),
      .avm_memdep_4397_c2c_decode_stats_readdatavalid(avmm_0_global_avm_readdatavalid[33]),
      .avm_memdep_4397_c2c_decode_stats_burstcount(avmm_0_global_avm_burstcount[33]),
      .avm_memdep_4397_c2c_decode_stats_writeack(avmm_0_global_avm_writeack[33]),
      // AVM avm_memdep_4406_c2c_decode_stats
      .avm_memdep_4406_c2c_decode_stats_enable(avmm_0_global_avm_enable[34]),
      .avm_memdep_4406_c2c_decode_stats_read(avmm_0_global_avm_read[34]),
      .avm_memdep_4406_c2c_decode_stats_write(avmm_0_global_avm_write[34]),
      .avm_memdep_4406_c2c_decode_stats_address(avmm_0_global_avm_address[34]),
      .avm_memdep_4406_c2c_decode_stats_writedata(avmm_0_global_avm_writedata[34]),
      .avm_memdep_4406_c2c_decode_stats_byteenable(avmm_0_global_avm_byteenable[34]),
      .avm_memdep_4406_c2c_decode_stats_waitrequest(avmm_0_global_avm_waitrequest[34]),
      .avm_memdep_4406_c2c_decode_stats_readdata(avmm_0_global_avm_readdata[34]),
      .avm_memdep_4406_c2c_decode_stats_readdatavalid(avmm_0_global_avm_readdatavalid[34]),
      .avm_memdep_4406_c2c_decode_stats_burstcount(avmm_0_global_avm_burstcount[34]),
      .avm_memdep_4406_c2c_decode_stats_writeack(avmm_0_global_avm_writeack[34]),
      // AVM avm_memdep_4415_c2c_decode_stats
      .avm_memdep_4415_c2c_decode_stats_enable(avmm_0_global_avm_enable[35]),
      .avm_memdep_4415_c2c_decode_stats_read(avmm_0_global_avm_read[35]),
      .avm_memdep_4415_c2c_decode_stats_write(avmm_0_global_avm_write[35]),
      .avm_memdep_4415_c2c_decode_stats_address(avmm_0_global_avm_address[35]),
      .avm_memdep_4415_c2c_decode_stats_writedata(avmm_0_global_avm_writedata[35]),
      .avm_memdep_4415_c2c_decode_stats_byteenable(avmm_0_global_avm_byteenable[35]),
      .avm_memdep_4415_c2c_decode_stats_waitrequest(avmm_0_global_avm_waitrequest[35]),
      .avm_memdep_4415_c2c_decode_stats_readdata(avmm_0_global_avm_readdata[35]),
      .avm_memdep_4415_c2c_decode_stats_readdatavalid(avmm_0_global_avm_readdatavalid[35]),
      .avm_memdep_4415_c2c_decode_stats_burstcount(avmm_0_global_avm_burstcount[35]),
      .avm_memdep_4415_c2c_decode_stats_writeack(avmm_0_global_avm_writeack[35]),
      // AVM avm_memdep_4424_c2c_decode_stats
      .avm_memdep_4424_c2c_decode_stats_enable(avmm_0_global_avm_enable[36]),
      .avm_memdep_4424_c2c_decode_stats_read(avmm_0_global_avm_read[36]),
      .avm_memdep_4424_c2c_decode_stats_write(avmm_0_global_avm_write[36]),
      .avm_memdep_4424_c2c_decode_stats_address(avmm_0_global_avm_address[36]),
      .avm_memdep_4424_c2c_decode_stats_writedata(avmm_0_global_avm_writedata[36]),
      .avm_memdep_4424_c2c_decode_stats_byteenable(avmm_0_global_avm_byteenable[36]),
      .avm_memdep_4424_c2c_decode_stats_waitrequest(avmm_0_global_avm_waitrequest[36]),
      .avm_memdep_4424_c2c_decode_stats_readdata(avmm_0_global_avm_readdata[36]),
      .avm_memdep_4424_c2c_decode_stats_readdatavalid(avmm_0_global_avm_readdatavalid[36]),
      .avm_memdep_4424_c2c_decode_stats_burstcount(avmm_0_global_avm_burstcount[36]),
      .avm_memdep_4424_c2c_decode_stats_writeack(avmm_0_global_avm_writeack[36]),
      // AVM avm_memdep_4433_c2c_decode_stats
      .avm_memdep_4433_c2c_decode_stats_enable(avmm_0_global_avm_enable[37]),
      .avm_memdep_4433_c2c_decode_stats_read(avmm_0_global_avm_read[37]),
      .avm_memdep_4433_c2c_decode_stats_write(avmm_0_global_avm_write[37]),
      .avm_memdep_4433_c2c_decode_stats_address(avmm_0_global_avm_address[37]),
      .avm_memdep_4433_c2c_decode_stats_writedata(avmm_0_global_avm_writedata[37]),
      .avm_memdep_4433_c2c_decode_stats_byteenable(avmm_0_global_avm_byteenable[37]),
      .avm_memdep_4433_c2c_decode_stats_waitrequest(avmm_0_global_avm_waitrequest[37]),
      .avm_memdep_4433_c2c_decode_stats_readdata(avmm_0_global_avm_readdata[37]),
      .avm_memdep_4433_c2c_decode_stats_readdatavalid(avmm_0_global_avm_readdatavalid[37]),
      .avm_memdep_4433_c2c_decode_stats_burstcount(avmm_0_global_avm_burstcount[37]),
      .avm_memdep_4433_c2c_decode_stats_writeack(avmm_0_global_avm_writeack[37]),
      // AVM avm_memdep_4442_c2c_decode_stats
      .avm_memdep_4442_c2c_decode_stats_enable(avmm_0_global_avm_enable[38]),
      .avm_memdep_4442_c2c_decode_stats_read(avmm_0_global_avm_read[38]),
      .avm_memdep_4442_c2c_decode_stats_write(avmm_0_global_avm_write[38]),
      .avm_memdep_4442_c2c_decode_stats_address(avmm_0_global_avm_address[38]),
      .avm_memdep_4442_c2c_decode_stats_writedata(avmm_0_global_avm_writedata[38]),
      .avm_memdep_4442_c2c_decode_stats_byteenable(avmm_0_global_avm_byteenable[38]),
      .avm_memdep_4442_c2c_decode_stats_waitrequest(avmm_0_global_avm_waitrequest[38]),
      .avm_memdep_4442_c2c_decode_stats_readdata(avmm_0_global_avm_readdata[38]),
      .avm_memdep_4442_c2c_decode_stats_readdatavalid(avmm_0_global_avm_readdatavalid[38]),
      .avm_memdep_4442_c2c_decode_stats_burstcount(avmm_0_global_avm_burstcount[38]),
      .avm_memdep_4442_c2c_decode_stats_writeack(avmm_0_global_avm_writeack[38]),
      // AVM avm_ml23049_c2c_decode_stats
      .avm_ml23049_c2c_decode_stats_enable(avmm_0_global_avm_enable[39]),
      .avm_ml23049_c2c_decode_stats_read(avmm_0_global_avm_read[39]),
      .avm_ml23049_c2c_decode_stats_write(avmm_0_global_avm_write[39]),
      .avm_ml23049_c2c_decode_stats_address(avmm_0_global_avm_address[39]),
      .avm_ml23049_c2c_decode_stats_writedata(avmm_0_global_avm_writedata[39]),
      .avm_ml23049_c2c_decode_stats_byteenable(avmm_0_global_avm_byteenable[39]),
      .avm_ml23049_c2c_decode_stats_waitrequest(avmm_0_global_avm_waitrequest[39]),
      .avm_ml23049_c2c_decode_stats_readdata(avmm_0_global_avm_readdata[39]),
      .avm_ml23049_c2c_decode_stats_readdatavalid(avmm_0_global_avm_readdatavalid[39]),
      .avm_ml23049_c2c_decode_stats_burstcount(avmm_0_global_avm_burstcount[39]),
      .avm_ml23049_c2c_decode_stats_writeack(avmm_0_global_avm_writeack[39]),
      // AVM avm_ml23348_c2c_decode_stats
      .avm_ml23348_c2c_decode_stats_enable(avmm_0_global_avm_enable[40]),
      .avm_ml23348_c2c_decode_stats_read(avmm_0_global_avm_read[40]),
      .avm_ml23348_c2c_decode_stats_write(avmm_0_global_avm_write[40]),
      .avm_ml23348_c2c_decode_stats_address(avmm_0_global_avm_address[40]),
      .avm_ml23348_c2c_decode_stats_writedata(avmm_0_global_avm_writedata[40]),
      .avm_ml23348_c2c_decode_stats_byteenable(avmm_0_global_avm_byteenable[40]),
      .avm_ml23348_c2c_decode_stats_waitrequest(avmm_0_global_avm_waitrequest[40]),
      .avm_ml23348_c2c_decode_stats_readdata(avmm_0_global_avm_readdata[40]),
      .avm_ml23348_c2c_decode_stats_readdatavalid(avmm_0_global_avm_readdatavalid[40]),
      .avm_ml23348_c2c_decode_stats_burstcount(avmm_0_global_avm_burstcount[40]),
      .avm_ml23348_c2c_decode_stats_writeack(avmm_0_global_avm_writeack[40]),
      // AVM avm_ml24247_c2c_decode_stats
      .avm_ml24247_c2c_decode_stats_enable(avmm_0_global_avm_enable[41]),
      .avm_ml24247_c2c_decode_stats_read(avmm_0_global_avm_read[41]),
      .avm_ml24247_c2c_decode_stats_write(avmm_0_global_avm_write[41]),
      .avm_ml24247_c2c_decode_stats_address(avmm_0_global_avm_address[41]),
      .avm_ml24247_c2c_decode_stats_writedata(avmm_0_global_avm_writedata[41]),
      .avm_ml24247_c2c_decode_stats_byteenable(avmm_0_global_avm_byteenable[41]),
      .avm_ml24247_c2c_decode_stats_waitrequest(avmm_0_global_avm_waitrequest[41]),
      .avm_ml24247_c2c_decode_stats_readdata(avmm_0_global_avm_readdata[41]),
      .avm_ml24247_c2c_decode_stats_readdatavalid(avmm_0_global_avm_readdatavalid[41]),
      .avm_ml24247_c2c_decode_stats_burstcount(avmm_0_global_avm_burstcount[41]),
      .avm_ml24247_c2c_decode_stats_writeack(avmm_0_global_avm_writeack[41]),
      // AVM avm_ml24846_c2c_decode_stats
      .avm_ml24846_c2c_decode_stats_enable(avmm_0_global_avm_enable[42]),
      .avm_ml24846_c2c_decode_stats_read(avmm_0_global_avm_read[42]),
      .avm_ml24846_c2c_decode_stats_write(avmm_0_global_avm_write[42]),
      .avm_ml24846_c2c_decode_stats_address(avmm_0_global_avm_address[42]),
      .avm_ml24846_c2c_decode_stats_writedata(avmm_0_global_avm_writedata[42]),
      .avm_ml24846_c2c_decode_stats_byteenable(avmm_0_global_avm_byteenable[42]),
      .avm_ml24846_c2c_decode_stats_waitrequest(avmm_0_global_avm_waitrequest[42]),
      .avm_ml24846_c2c_decode_stats_readdata(avmm_0_global_avm_readdata[42]),
      .avm_ml24846_c2c_decode_stats_readdatavalid(avmm_0_global_avm_readdatavalid[42]),
      .avm_ml24846_c2c_decode_stats_burstcount(avmm_0_global_avm_burstcount[42]),
      .avm_ml24846_c2c_decode_stats_writeack(avmm_0_global_avm_writeack[42]),
      // AVM avm_ml25145_c2c_decode_stats
      .avm_ml25145_c2c_decode_stats_enable(avmm_0_global_avm_enable[43]),
      .avm_ml25145_c2c_decode_stats_read(avmm_0_global_avm_read[43]),
      .avm_ml25145_c2c_decode_stats_write(avmm_0_global_avm_write[43]),
      .avm_ml25145_c2c_decode_stats_address(avmm_0_global_avm_address[43]),
      .avm_ml25145_c2c_decode_stats_writedata(avmm_0_global_avm_writedata[43]),
      .avm_ml25145_c2c_decode_stats_byteenable(avmm_0_global_avm_byteenable[43]),
      .avm_ml25145_c2c_decode_stats_waitrequest(avmm_0_global_avm_waitrequest[43]),
      .avm_ml25145_c2c_decode_stats_readdata(avmm_0_global_avm_readdata[43]),
      .avm_ml25145_c2c_decode_stats_readdatavalid(avmm_0_global_avm_readdatavalid[43]),
      .avm_ml25145_c2c_decode_stats_burstcount(avmm_0_global_avm_burstcount[43]),
      .avm_ml25145_c2c_decode_stats_writeack(avmm_0_global_avm_writeack[43]),
      // AVM avm_ml26343_c2c_decode_stats
      .avm_ml26343_c2c_decode_stats_enable(avmm_0_global_avm_enable[44]),
      .avm_ml26343_c2c_decode_stats_read(avmm_0_global_avm_read[44]),
      .avm_ml26343_c2c_decode_stats_write(avmm_0_global_avm_write[44]),
      .avm_ml26343_c2c_decode_stats_address(avmm_0_global_avm_address[44]),
      .avm_ml26343_c2c_decode_stats_writedata(avmm_0_global_avm_writedata[44]),
      .avm_ml26343_c2c_decode_stats_byteenable(avmm_0_global_avm_byteenable[44]),
      .avm_ml26343_c2c_decode_stats_waitrequest(avmm_0_global_avm_waitrequest[44]),
      .avm_ml26343_c2c_decode_stats_readdata(avmm_0_global_avm_readdata[44]),
      .avm_ml26343_c2c_decode_stats_readdatavalid(avmm_0_global_avm_readdatavalid[44]),
      .avm_ml26343_c2c_decode_stats_burstcount(avmm_0_global_avm_burstcount[44]),
      .avm_ml26343_c2c_decode_stats_writeack(avmm_0_global_avm_writeack[44]),
      // AVM avm_ml26642_c2c_decode_stats
      .avm_ml26642_c2c_decode_stats_enable(avmm_0_global_avm_enable[45]),
      .avm_ml26642_c2c_decode_stats_read(avmm_0_global_avm_read[45]),
      .avm_ml26642_c2c_decode_stats_write(avmm_0_global_avm_write[45]),
      .avm_ml26642_c2c_decode_stats_address(avmm_0_global_avm_address[45]),
      .avm_ml26642_c2c_decode_stats_writedata(avmm_0_global_avm_writedata[45]),
      .avm_ml26642_c2c_decode_stats_byteenable(avmm_0_global_avm_byteenable[45]),
      .avm_ml26642_c2c_decode_stats_waitrequest(avmm_0_global_avm_waitrequest[45]),
      .avm_ml26642_c2c_decode_stats_readdata(avmm_0_global_avm_readdata[45]),
      .avm_ml26642_c2c_decode_stats_readdatavalid(avmm_0_global_avm_readdatavalid[45]),
      .avm_ml26642_c2c_decode_stats_burstcount(avmm_0_global_avm_burstcount[45]),
      .avm_ml26642_c2c_decode_stats_writeack(avmm_0_global_avm_writeack[45]),
      // AVM avm_ml26941_c2c_decode_stats
      .avm_ml26941_c2c_decode_stats_enable(avmm_0_global_avm_enable[46]),
      .avm_ml26941_c2c_decode_stats_read(avmm_0_global_avm_read[46]),
      .avm_ml26941_c2c_decode_stats_write(avmm_0_global_avm_write[46]),
      .avm_ml26941_c2c_decode_stats_address(avmm_0_global_avm_address[46]),
      .avm_ml26941_c2c_decode_stats_writedata(avmm_0_global_avm_writedata[46]),
      .avm_ml26941_c2c_decode_stats_byteenable(avmm_0_global_avm_byteenable[46]),
      .avm_ml26941_c2c_decode_stats_waitrequest(avmm_0_global_avm_waitrequest[46]),
      .avm_ml26941_c2c_decode_stats_readdata(avmm_0_global_avm_readdata[46]),
      .avm_ml26941_c2c_decode_stats_readdatavalid(avmm_0_global_avm_readdatavalid[46]),
      .avm_ml26941_c2c_decode_stats_burstcount(avmm_0_global_avm_burstcount[46]),
      .avm_ml26941_c2c_decode_stats_writeack(avmm_0_global_avm_writeack[46]),
      // AVM avm_ml28140_c2c_decode_stats
      .avm_ml28140_c2c_decode_stats_enable(avmm_0_global_avm_enable[47]),
      .avm_ml28140_c2c_decode_stats_read(avmm_0_global_avm_read[47]),
      .avm_ml28140_c2c_decode_stats_write(avmm_0_global_avm_write[47]),
      .avm_ml28140_c2c_decode_stats_address(avmm_0_global_avm_address[47]),
      .avm_ml28140_c2c_decode_stats_writedata(avmm_0_global_avm_writedata[47]),
      .avm_ml28140_c2c_decode_stats_byteenable(avmm_0_global_avm_byteenable[47]),
      .avm_ml28140_c2c_decode_stats_waitrequest(avmm_0_global_avm_waitrequest[47]),
      .avm_ml28140_c2c_decode_stats_readdata(avmm_0_global_avm_readdata[47]),
      .avm_ml28140_c2c_decode_stats_readdatavalid(avmm_0_global_avm_readdatavalid[47]),
      .avm_ml28140_c2c_decode_stats_burstcount(avmm_0_global_avm_burstcount[47]),
      .avm_ml28140_c2c_decode_stats_writeack(avmm_0_global_avm_writeack[47]),
      // AVM avm_ml28439_c2c_decode_stats
      .avm_ml28439_c2c_decode_stats_enable(avmm_0_global_avm_enable[48]),
      .avm_ml28439_c2c_decode_stats_read(avmm_0_global_avm_read[48]),
      .avm_ml28439_c2c_decode_stats_write(avmm_0_global_avm_write[48]),
      .avm_ml28439_c2c_decode_stats_address(avmm_0_global_avm_address[48]),
      .avm_ml28439_c2c_decode_stats_writedata(avmm_0_global_avm_writedata[48]),
      .avm_ml28439_c2c_decode_stats_byteenable(avmm_0_global_avm_byteenable[48]),
      .avm_ml28439_c2c_decode_stats_waitrequest(avmm_0_global_avm_waitrequest[48]),
      .avm_ml28439_c2c_decode_stats_readdata(avmm_0_global_avm_readdata[48]),
      .avm_ml28439_c2c_decode_stats_readdatavalid(avmm_0_global_avm_readdatavalid[48]),
      .avm_ml28439_c2c_decode_stats_burstcount(avmm_0_global_avm_burstcount[48]),
      .avm_ml28439_c2c_decode_stats_writeack(avmm_0_global_avm_writeack[48]),
      // AVM avm_ml29036_c2c_decode_stats
      .avm_ml29036_c2c_decode_stats_enable(avmm_0_global_avm_enable[49]),
      .avm_ml29036_c2c_decode_stats_read(avmm_0_global_avm_read[49]),
      .avm_ml29036_c2c_decode_stats_write(avmm_0_global_avm_write[49]),
      .avm_ml29036_c2c_decode_stats_address(avmm_0_global_avm_address[49]),
      .avm_ml29036_c2c_decode_stats_writedata(avmm_0_global_avm_writedata[49]),
      .avm_ml29036_c2c_decode_stats_byteenable(avmm_0_global_avm_byteenable[49]),
      .avm_ml29036_c2c_decode_stats_waitrequest(avmm_0_global_avm_waitrequest[49]),
      .avm_ml29036_c2c_decode_stats_readdata(avmm_0_global_avm_readdata[49]),
      .avm_ml29036_c2c_decode_stats_readdatavalid(avmm_0_global_avm_readdatavalid[49]),
      .avm_ml29036_c2c_decode_stats_burstcount(avmm_0_global_avm_burstcount[49]),
      .avm_ml29036_c2c_decode_stats_writeack(avmm_0_global_avm_writeack[49]),
      // AVM avm_ml52_c2c_decode_stats
      .avm_ml52_c2c_decode_stats_enable(avmm_0_global_avm_enable[50]),
      .avm_ml52_c2c_decode_stats_read(avmm_0_global_avm_read[50]),
      .avm_ml52_c2c_decode_stats_write(avmm_0_global_avm_write[50]),
      .avm_ml52_c2c_decode_stats_address(avmm_0_global_avm_address[50]),
      .avm_ml52_c2c_decode_stats_writedata(avmm_0_global_avm_writedata[50]),
      .avm_ml52_c2c_decode_stats_byteenable(avmm_0_global_avm_byteenable[50]),
      .avm_ml52_c2c_decode_stats_waitrequest(avmm_0_global_avm_waitrequest[50]),
      .avm_ml52_c2c_decode_stats_readdata(avmm_0_global_avm_readdata[50]),
      .avm_ml52_c2c_decode_stats_readdatavalid(avmm_0_global_avm_readdatavalid[50]),
      .avm_ml52_c2c_decode_stats_burstcount(avmm_0_global_avm_burstcount[50]),
      .avm_ml52_c2c_decode_stats_writeack(avmm_0_global_avm_writeack[50]),
      // AVM avm_unnamed_c2c_decode_stats1_c2c_decode_stats
      .avm_unnamed_c2c_decode_stats1_c2c_decode_stats_enable(avmm_0_global_avm_enable[51]),
      .avm_unnamed_c2c_decode_stats1_c2c_decode_stats_read(avmm_0_global_avm_read[51]),
      .avm_unnamed_c2c_decode_stats1_c2c_decode_stats_write(avmm_0_global_avm_write[51]),
      .avm_unnamed_c2c_decode_stats1_c2c_decode_stats_address(avmm_0_global_avm_address[51]),
      .avm_unnamed_c2c_decode_stats1_c2c_decode_stats_writedata(avmm_0_global_avm_writedata[51]),
      .avm_unnamed_c2c_decode_stats1_c2c_decode_stats_byteenable(avmm_0_global_avm_byteenable[51]),
      .avm_unnamed_c2c_decode_stats1_c2c_decode_stats_waitrequest(avmm_0_global_avm_waitrequest[51]),
      .avm_unnamed_c2c_decode_stats1_c2c_decode_stats_readdata(avmm_0_global_avm_readdata[51]),
      .avm_unnamed_c2c_decode_stats1_c2c_decode_stats_readdatavalid(avmm_0_global_avm_readdatavalid[51]),
      .avm_unnamed_c2c_decode_stats1_c2c_decode_stats_burstcount(avmm_0_global_avm_burstcount[51]),
      .avm_unnamed_c2c_decode_stats1_c2c_decode_stats_writeack(avmm_0_global_avm_writeack[51]),
      // AVM avm_unnamed_c2c_decode_stats2_c2c_decode_stats
      .avm_unnamed_c2c_decode_stats2_c2c_decode_stats_enable(avmm_0_global_avm_enable[52]),
      .avm_unnamed_c2c_decode_stats2_c2c_decode_stats_read(avmm_0_global_avm_read[52]),
      .avm_unnamed_c2c_decode_stats2_c2c_decode_stats_write(avmm_0_global_avm_write[52]),
      .avm_unnamed_c2c_decode_stats2_c2c_decode_stats_address(avmm_0_global_avm_address[52]),
      .avm_unnamed_c2c_decode_stats2_c2c_decode_stats_writedata(avmm_0_global_avm_writedata[52]),
      .avm_unnamed_c2c_decode_stats2_c2c_decode_stats_byteenable(avmm_0_global_avm_byteenable[52]),
      .avm_unnamed_c2c_decode_stats2_c2c_decode_stats_waitrequest(avmm_0_global_avm_waitrequest[52]),
      .avm_unnamed_c2c_decode_stats2_c2c_decode_stats_readdata(avmm_0_global_avm_readdata[52]),
      .avm_unnamed_c2c_decode_stats2_c2c_decode_stats_readdatavalid(avmm_0_global_avm_readdatavalid[52]),
      .avm_unnamed_c2c_decode_stats2_c2c_decode_stats_burstcount(avmm_0_global_avm_burstcount[52]),
      .avm_unnamed_c2c_decode_stats2_c2c_decode_stats_writeack(avmm_0_global_avm_writeack[52]),
      // AVM avm_unnamed_c2c_decode_stats3_c2c_decode_stats
      .avm_unnamed_c2c_decode_stats3_c2c_decode_stats_enable(avmm_0_global_avm_enable[53]),
      .avm_unnamed_c2c_decode_stats3_c2c_decode_stats_read(avmm_0_global_avm_read[53]),
      .avm_unnamed_c2c_decode_stats3_c2c_decode_stats_write(avmm_0_global_avm_write[53]),
      .avm_unnamed_c2c_decode_stats3_c2c_decode_stats_address(avmm_0_global_avm_address[53]),
      .avm_unnamed_c2c_decode_stats3_c2c_decode_stats_writedata(avmm_0_global_avm_writedata[53]),
      .avm_unnamed_c2c_decode_stats3_c2c_decode_stats_byteenable(avmm_0_global_avm_byteenable[53]),
      .avm_unnamed_c2c_decode_stats3_c2c_decode_stats_waitrequest(avmm_0_global_avm_waitrequest[53]),
      .avm_unnamed_c2c_decode_stats3_c2c_decode_stats_readdata(avmm_0_global_avm_readdata[53]),
      .avm_unnamed_c2c_decode_stats3_c2c_decode_stats_readdatavalid(avmm_0_global_avm_readdatavalid[53]),
      .avm_unnamed_c2c_decode_stats3_c2c_decode_stats_burstcount(avmm_0_global_avm_burstcount[53]),
      .avm_unnamed_c2c_decode_stats3_c2c_decode_stats_writeack(avmm_0_global_avm_writeack[53]),
      // AVM avm_unnamed_c2c_decode_stats4_c2c_decode_stats
      .avm_unnamed_c2c_decode_stats4_c2c_decode_stats_enable(avmm_0_global_avm_enable[54]),
      .avm_unnamed_c2c_decode_stats4_c2c_decode_stats_read(avmm_0_global_avm_read[54]),
      .avm_unnamed_c2c_decode_stats4_c2c_decode_stats_write(avmm_0_global_avm_write[54]),
      .avm_unnamed_c2c_decode_stats4_c2c_decode_stats_address(avmm_0_global_avm_address[54]),
      .avm_unnamed_c2c_decode_stats4_c2c_decode_stats_writedata(avmm_0_global_avm_writedata[54]),
      .avm_unnamed_c2c_decode_stats4_c2c_decode_stats_byteenable(avmm_0_global_avm_byteenable[54]),
      .avm_unnamed_c2c_decode_stats4_c2c_decode_stats_waitrequest(avmm_0_global_avm_waitrequest[54]),
      .avm_unnamed_c2c_decode_stats4_c2c_decode_stats_readdata(avmm_0_global_avm_readdata[54]),
      .avm_unnamed_c2c_decode_stats4_c2c_decode_stats_readdatavalid(avmm_0_global_avm_readdatavalid[54]),
      .avm_unnamed_c2c_decode_stats4_c2c_decode_stats_burstcount(avmm_0_global_avm_burstcount[54]),
      .avm_unnamed_c2c_decode_stats4_c2c_decode_stats_writeack(avmm_0_global_avm_writeack[54]),
      // AVM avm_unnamed_c2c_decode_stats5_c2c_decode_stats
      .avm_unnamed_c2c_decode_stats5_c2c_decode_stats_enable(avmm_0_global_avm_enable[55]),
      .avm_unnamed_c2c_decode_stats5_c2c_decode_stats_read(avmm_0_global_avm_read[55]),
      .avm_unnamed_c2c_decode_stats5_c2c_decode_stats_write(avmm_0_global_avm_write[55]),
      .avm_unnamed_c2c_decode_stats5_c2c_decode_stats_address(avmm_0_global_avm_address[55]),
      .avm_unnamed_c2c_decode_stats5_c2c_decode_stats_writedata(avmm_0_global_avm_writedata[55]),
      .avm_unnamed_c2c_decode_stats5_c2c_decode_stats_byteenable(avmm_0_global_avm_byteenable[55]),
      .avm_unnamed_c2c_decode_stats5_c2c_decode_stats_waitrequest(avmm_0_global_avm_waitrequest[55]),
      .avm_unnamed_c2c_decode_stats5_c2c_decode_stats_readdata(avmm_0_global_avm_readdata[55]),
      .avm_unnamed_c2c_decode_stats5_c2c_decode_stats_readdatavalid(avmm_0_global_avm_readdatavalid[55]),
      .avm_unnamed_c2c_decode_stats5_c2c_decode_stats_burstcount(avmm_0_global_avm_burstcount[55]),
      .avm_unnamed_c2c_decode_stats5_c2c_decode_stats_writeack(avmm_0_global_avm_writeack[55])
   );

   generate
   begin:avmm_0_
      logic avmm_0_icm_in_arb_request [56];
      logic avmm_0_icm_in_arb_enable [56];
      logic avmm_0_icm_in_arb_read [56];
      logic avmm_0_icm_in_arb_write [56];
      logic avmm_0_icm_in_arb_burstcount [56];
      logic [60:0] avmm_0_icm_in_arb_address [56];
      logic [63:0] avmm_0_icm_in_arb_writedata [56];
      logic [7:0] avmm_0_icm_in_arb_byteenable [56];
      logic avmm_0_icm_in_arb_stall [56];
      logic avmm_0_icm_in_wrp_ack [56];
      logic avmm_0_icm_in_rrp_datavalid [56];
      logic [63:0] avmm_0_icm_in_rrp_data [56];
      logic icm_out_0_rw_arb_request [1];
      logic icm_out_0_rw_arb_enable [1];
      logic icm_out_0_rw_arb_read [1];
      logic icm_out_0_rw_arb_write [1];
      logic icm_out_0_rw_arb_burstcount [1];
      logic [60:0] icm_out_0_rw_arb_address [1];
      logic [63:0] icm_out_0_rw_arb_writedata [1];
      logic [7:0] icm_out_0_rw_arb_byteenable [1];
      logic [5:0] icm_out_0_rw_arb_id [1];
      logic icm_out_0_rw_arb_stall [1];
      logic icm_out_0_rw_wrp_ack [1];
      logic icm_out_0_rw_rrp_datavalid [1];
      logic [63:0] icm_out_0_rw_rrp_data [1];
      logic icm_routedavmm_0_rw_arb_request [56];
      logic icm_routedavmm_0_rw_arb_enable [56];
      logic icm_routedavmm_0_rw_arb_read [56];
      logic icm_routedavmm_0_rw_arb_write [56];
      logic icm_routedavmm_0_rw_arb_burstcount [56];
      logic [60:0] icm_routedavmm_0_rw_arb_address [56];
      logic [63:0] icm_routedavmm_0_rw_arb_writedata [56];
      logic [7:0] icm_routedavmm_0_rw_arb_byteenable [56];
      logic icm_routedavmm_0_rw_arb_stall [56];
      logic icm_routedavmm_0_rw_wrp_ack [56];
      logic icm_routedavmm_0_rw_rrp_datavalid [56];
      logic [63:0] icm_routedavmm_0_rw_rrp_data [56];

      for( __i = 0; __i < 56; __i = __i + 1 )
      begin:t
         // INST avmm_0_avm_to_ic of acl_avm_to_ic
         acl_avm_to_ic
         #(
            .DATA_W(64),
            .WRITEDATA_W(64),
            .BURSTCOUNT_W(1),
            .ADDRESS_W(64),
            .BYTEENA_W(8)
         )
         avmm_0_avm_to_ic
         (
            // AVM avm
            .avm_enable(avmm_0_global_avm_enable[__i]),
            .avm_read(avmm_0_global_avm_read[__i]),
            .avm_write(avmm_0_global_avm_write[__i]),
            .avm_address(avmm_0_global_avm_address[__i]),
            .avm_writedata(avmm_0_global_avm_writedata[__i]),
            .avm_byteenable(avmm_0_global_avm_byteenable[__i]),
            .avm_waitrequest(avmm_0_global_avm_waitrequest[__i]),
            .avm_readdata(avmm_0_global_avm_readdata[__i]),
            .avm_readdatavalid(avmm_0_global_avm_readdatavalid[__i]),
            .avm_burstcount(avmm_0_global_avm_burstcount[__i]),
            .avm_writeack(avmm_0_global_avm_writeack[__i]),
            // ICM ic
            .ic_arb_request(avmm_0_icm_in_arb_request[__i]),
            .ic_arb_enable(avmm_0_icm_in_arb_enable[__i]),
            .ic_arb_read(avmm_0_icm_in_arb_read[__i]),
            .ic_arb_write(avmm_0_icm_in_arb_write[__i]),
            .ic_arb_burstcount(avmm_0_icm_in_arb_burstcount[__i]),
            .ic_arb_address(avmm_0_icm_in_arb_address[__i]),
            .ic_arb_writedata(avmm_0_icm_in_arb_writedata[__i]),
            .ic_arb_byteenable(avmm_0_icm_in_arb_byteenable[__i]),
            .ic_arb_stall(avmm_0_icm_in_arb_stall[__i]),
            .ic_wrp_ack(avmm_0_icm_in_wrp_ack[__i]),
            .ic_rrp_datavalid(avmm_0_icm_in_rrp_datavalid[__i]),
            .ic_rrp_data(avmm_0_icm_in_rrp_data[__i])
         );

      end

      // INST global_icavmm_0_rw of c2c_decode_stats_internal_ic_8505176739752124378
      c2c_decode_stats_internal_ic_8505176739752124378 global_icavmm_0_rw
      (
         .clock(clock),
         .resetn(resetn),
         // ICM m
         .m_arb_request(icm_routedavmm_0_rw_arb_request),
         .m_arb_enable(icm_routedavmm_0_rw_arb_enable),
         .m_arb_read(icm_routedavmm_0_rw_arb_read),
         .m_arb_write(icm_routedavmm_0_rw_arb_write),
         .m_arb_burstcount(icm_routedavmm_0_rw_arb_burstcount),
         .m_arb_address(icm_routedavmm_0_rw_arb_address),
         .m_arb_writedata(icm_routedavmm_0_rw_arb_writedata),
         .m_arb_byteenable(icm_routedavmm_0_rw_arb_byteenable),
         .m_arb_stall(icm_routedavmm_0_rw_arb_stall),
         .m_wrp_ack(icm_routedavmm_0_rw_wrp_ack),
         .m_rrp_datavalid(icm_routedavmm_0_rw_rrp_datavalid),
         .m_rrp_data(icm_routedavmm_0_rw_rrp_data),
         // ICM mout
         .mout_arb_request(icm_out_0_rw_arb_request[0]),
         .mout_arb_enable(icm_out_0_rw_arb_enable[0]),
         .mout_arb_read(icm_out_0_rw_arb_read[0]),
         .mout_arb_write(icm_out_0_rw_arb_write[0]),
         .mout_arb_burstcount(icm_out_0_rw_arb_burstcount[0]),
         .mout_arb_address(icm_out_0_rw_arb_address[0]),
         .mout_arb_writedata(icm_out_0_rw_arb_writedata[0]),
         .mout_arb_byteenable(icm_out_0_rw_arb_byteenable[0]),
         .mout_arb_id(icm_out_0_rw_arb_id[0]),
         .mout_arb_stall(icm_out_0_rw_arb_stall[0]),
         .mout_wrp_ack(icm_out_0_rw_wrp_ack[0]),
         .mout_rrp_datavalid(icm_out_0_rw_rrp_datavalid[0]),
         .mout_rrp_data(icm_out_0_rw_rrp_data[0])
      );

      for( __i = 0; __i < 56; __i = __i + 1 )
      begin:mavmm_0_rw
         assign icm_routedavmm_0_rw_arb_request[__i] = avmm_0_icm_in_arb_request[__i];
         assign icm_routedavmm_0_rw_arb_enable[__i] = avmm_0_icm_in_arb_enable[__i];
         assign icm_routedavmm_0_rw_arb_read[__i] = avmm_0_icm_in_arb_read[__i];
         assign icm_routedavmm_0_rw_arb_write[__i] = avmm_0_icm_in_arb_write[__i];
         assign icm_routedavmm_0_rw_arb_burstcount[__i] = avmm_0_icm_in_arb_burstcount[__i];
         assign icm_routedavmm_0_rw_arb_address[__i] = avmm_0_icm_in_arb_address[__i];
         assign icm_routedavmm_0_rw_arb_writedata[__i] = avmm_0_icm_in_arb_writedata[__i];
         assign icm_routedavmm_0_rw_arb_byteenable[__i] = avmm_0_icm_in_arb_byteenable[__i];
         assign avmm_0_icm_in_arb_stall[__i] = icm_routedavmm_0_rw_arb_stall[__i];
         assign avmm_0_icm_in_wrp_ack[__i] = icm_routedavmm_0_rw_wrp_ack[__i];
         assign avmm_0_icm_in_rrp_datavalid[__i] = icm_routedavmm_0_rw_rrp_datavalid[__i];
         assign avmm_0_icm_in_rrp_data[__i] = icm_routedavmm_0_rw_rrp_data[__i];
      end

      // INST global_out_ic_to_avmavmm_0_rw of acl_ic_to_avm
      acl_ic_to_avm
      #(
         .DATA_W(64),
         .BURSTCOUNT_W(1),
         .ADDRESS_W(64),
         .BYTEENA_W(8),
         .LATENCY(1),
         .USE_WRITE_ACK(0),
         .NO_IDLE_STALL(0),
         .ENABLE_WAITREQUEST_ALLOWANCE(0),
         .ID_W(6),
         .ASYNC_RESET(1),
         .SYNCHRONIZE_RESET(0)
      )
      global_out_ic_to_avmavmm_0_rw
      (
         // ICM ic
         .ic_arb_request(icm_out_0_rw_arb_request[0]),
         .ic_arb_enable(icm_out_0_rw_arb_enable[0]),
         .ic_arb_read(icm_out_0_rw_arb_read[0]),
         .ic_arb_write(icm_out_0_rw_arb_write[0]),
         .ic_arb_burstcount(icm_out_0_rw_arb_burstcount[0]),
         .ic_arb_address(icm_out_0_rw_arb_address[0]),
         .ic_arb_writedata(icm_out_0_rw_arb_writedata[0]),
         .ic_arb_byteenable(icm_out_0_rw_arb_byteenable[0]),
         .ic_arb_id(icm_out_0_rw_arb_id[0]),
         .ic_arb_stall(icm_out_0_rw_arb_stall[0]),
         .ic_wrp_ack(icm_out_0_rw_wrp_ack[0]),
         .ic_rrp_datavalid(icm_out_0_rw_rrp_datavalid[0]),
         .ic_rrp_data(icm_out_0_rw_rrp_data[0]),
         // AVM avm
         .avm_enable(avmm_0_rw_enable),
         .avm_read(avmm_0_rw_read),
         .avm_write(avmm_0_rw_write),
         .avm_address(avmm_0_rw_address),
         .avm_writedata(avmm_0_rw_writedata),
         .avm_byteenable(avmm_0_rw_byteenable),
         .avm_readdata(avmm_0_rw_readdata),
         .avm_readdatavalid(avmm_0_rw_readdatavalid),
         .avm_burstcount(avmm_0_rw_burstcount),
         .avm_writeack(avmm_0_rw_writeack),
         .clock(clock),
         .resetn(resetn),
         .avm_waitrequest(1'b0)
      );

   end
   endgenerate

endmodule

/////////////////////////////////////////////////////////////////
// MODULE c2c_decode_stats_internal_ic_8505176739752124378
/////////////////////////////////////////////////////////////////
module c2c_decode_stats_internal_ic_8505176739752124378
(
   input logic clock,
   input logic resetn,
   // ICM m
   input logic m_arb_request [56],
   input logic m_arb_enable [56],
   input logic m_arb_read [56],
   input logic m_arb_write [56],
   input logic m_arb_burstcount [56],
   input logic [60:0] m_arb_address [56],
   input logic [63:0] m_arb_writedata [56],
   input logic [7:0] m_arb_byteenable [56],
   output logic m_arb_stall [56],
   output logic m_wrp_ack [56],
   output logic m_rrp_datavalid [56],
   output logic [63:0] m_rrp_data [56],
   // ICM mout
   output logic mout_arb_request,
   output logic mout_arb_enable,
   output logic mout_arb_read,
   output logic mout_arb_write,
   output logic mout_arb_burstcount,
   output logic [60:0] mout_arb_address,
   output logic [63:0] mout_arb_writedata,
   output logic [7:0] mout_arb_byteenable,
   output logic [5:0] mout_arb_id,
   input logic mout_arb_stall,
   input logic mout_wrp_ack,
   input logic mout_rrp_datavalid,
   input logic [63:0] mout_rrp_data
);
   genvar __i;
   generate
      for( __i = 0; __i < 56; __i = __i + 1 )
      begin:m
         logic [5:0] id;
         acl_ic_master_intf
         #(
            .DATA_W(64),
            .BURSTCOUNT_W(1),
            .ADDRESS_W(61),
            .BYTEENA_W(8),
            .ID_W(6)
         ) m_intf();
         acl_arb_intf
         #(
            .DATA_W(64),
            .BURSTCOUNT_W(1),
            .ADDRESS_W(61),
            .BYTEENA_W(8),
            .ID_W(6)
         ) arb_intf();
         acl_ic_wrp_intf
         #(
            .ID_W(6)
         ) wrp_intf();
         acl_ic_rrp_intf
         #(
            .DATA_W(64),
            .ID_W(6)
         ) rrp_intf();

         assign id = __i;
         // INST m_endp of acl_ic_master_endpoint
         acl_ic_master_endpoint
         #(
            .DATA_W(64),
            .BURSTCOUNT_W(1),
            .ADDRESS_W(61),
            .BYTEENA_W(8),
            .ID_W(6),
            .NUM_READ_MASTERS(56),
            .NUM_WRITE_MASTERS(56),
            .ID(__i)
         )
         m_endp
         (
            .clock(clock),
            .resetn(resetn),
            .m_intf(m_intf),
            .arb_intf(arb_intf),
            .wrp_intf(wrp_intf),
            .rrp_intf(rrp_intf)
         );

         assign m_intf.arb.req.request = m_arb_request[__i];
         assign m_intf.arb.req.enable = m_arb_enable[__i];
         assign m_intf.arb.req.read = m_arb_read[__i];
         assign m_intf.arb.req.write = m_arb_write[__i];
         assign m_intf.arb.req.burstcount = m_arb_burstcount[__i];
         assign m_intf.arb.req.address = m_arb_address[__i];
         assign m_intf.arb.req.writedata = m_arb_writedata[__i];
         assign m_intf.arb.req.byteenable = m_arb_byteenable[__i];
         assign m_arb_stall[__i] = m_intf.arb.stall;
         assign m_wrp_ack[__i] = m_intf.wrp.ack;
         assign m_rrp_datavalid[__i] = m_intf.rrp.datavalid;
         assign m_rrp_data[__i] = m_intf.rrp.data;
         assign m_intf.arb.req.id = id;
      end

   endgenerate

   generate
   begin:s
      acl_arb_intf
      #(
         .DATA_W(64),
         .BURSTCOUNT_W(1),
         .ADDRESS_W(61),
         .BYTEENA_W(8),
         .ID_W(6)
      ) in_arb_intf();
      acl_arb_intf
      #(
         .DATA_W(64),
         .BURSTCOUNT_W(1),
         .ADDRESS_W(61),
         .BYTEENA_W(8),
         .ID_W(6)
      ) out_arb_intf();
      acl_ic_wrp_intf
      #(
         .ID_W(6)
      ) wrp_intf();
      acl_ic_rrp_intf
      #(
         .DATA_W(64),
         .ID_W(6)
      ) rrp_intf();

      // INST s_endp of acl_ic_slave_endpoint
      acl_ic_slave_endpoint
      #(
         .DATA_W(64),
         .BURSTCOUNT_W(1),
         .ADDRESS_W(61),
         .BYTEENA_W(8),
         .ID_W(6),
         .NUM_READ_MASTERS(56),
         .NUM_WRITE_MASTERS(56),
         .PIPELINE_RETURN_PATHS(1),
         .WRP_FIFO_DEPTH(0),
         .RRP_FIFO_DEPTH(64),
         .RRP_USE_LL_FIFO(1),
         .SLAVE_FIXED_LATENCY(3),
         .SEPARATE_READ_WRITE_STALLS(0),
         .ASYNC_RESET(1),
         .SYNCHRONIZE_RESET(0)
      )
      s_endp
      (
         .clock(clock),
         .resetn(resetn),
         .m_intf(in_arb_intf),
         .s_intf(out_arb_intf),
         .s_readdatavalid(mout_rrp_datavalid),
         .s_readdata(mout_rrp_data),
         .s_writeack(mout_wrp_ack),
         .wrp_intf(wrp_intf),
         .rrp_intf(rrp_intf)
      );

   end
   endgenerate

   generate
   begin:wrp
      assign m[0].wrp_intf.ack = s.wrp_intf.ack;
      assign m[0].wrp_intf.id = s.wrp_intf.id;
      assign m[1].wrp_intf.ack = s.wrp_intf.ack;
      assign m[1].wrp_intf.id = s.wrp_intf.id;
      assign m[2].wrp_intf.ack = s.wrp_intf.ack;
      assign m[2].wrp_intf.id = s.wrp_intf.id;
      assign m[3].wrp_intf.ack = s.wrp_intf.ack;
      assign m[3].wrp_intf.id = s.wrp_intf.id;
      assign m[4].wrp_intf.ack = s.wrp_intf.ack;
      assign m[4].wrp_intf.id = s.wrp_intf.id;
      assign m[5].wrp_intf.ack = s.wrp_intf.ack;
      assign m[5].wrp_intf.id = s.wrp_intf.id;
      assign m[6].wrp_intf.ack = s.wrp_intf.ack;
      assign m[6].wrp_intf.id = s.wrp_intf.id;
      assign m[7].wrp_intf.ack = s.wrp_intf.ack;
      assign m[7].wrp_intf.id = s.wrp_intf.id;
      assign m[8].wrp_intf.ack = s.wrp_intf.ack;
      assign m[8].wrp_intf.id = s.wrp_intf.id;
      assign m[9].wrp_intf.ack = s.wrp_intf.ack;
      assign m[9].wrp_intf.id = s.wrp_intf.id;
      assign m[10].wrp_intf.ack = s.wrp_intf.ack;
      assign m[10].wrp_intf.id = s.wrp_intf.id;
      assign m[11].wrp_intf.ack = s.wrp_intf.ack;
      assign m[11].wrp_intf.id = s.wrp_intf.id;
      assign m[12].wrp_intf.ack = s.wrp_intf.ack;
      assign m[12].wrp_intf.id = s.wrp_intf.id;
      assign m[13].wrp_intf.ack = s.wrp_intf.ack;
      assign m[13].wrp_intf.id = s.wrp_intf.id;
      assign m[14].wrp_intf.ack = s.wrp_intf.ack;
      assign m[14].wrp_intf.id = s.wrp_intf.id;
      assign m[15].wrp_intf.ack = s.wrp_intf.ack;
      assign m[15].wrp_intf.id = s.wrp_intf.id;
      assign m[16].wrp_intf.ack = s.wrp_intf.ack;
      assign m[16].wrp_intf.id = s.wrp_intf.id;
      assign m[17].wrp_intf.ack = s.wrp_intf.ack;
      assign m[17].wrp_intf.id = s.wrp_intf.id;
      assign m[18].wrp_intf.ack = s.wrp_intf.ack;
      assign m[18].wrp_intf.id = s.wrp_intf.id;
      assign m[19].wrp_intf.ack = s.wrp_intf.ack;
      assign m[19].wrp_intf.id = s.wrp_intf.id;
      assign m[20].wrp_intf.ack = s.wrp_intf.ack;
      assign m[20].wrp_intf.id = s.wrp_intf.id;
      assign m[21].wrp_intf.ack = s.wrp_intf.ack;
      assign m[21].wrp_intf.id = s.wrp_intf.id;
      assign m[22].wrp_intf.ack = s.wrp_intf.ack;
      assign m[22].wrp_intf.id = s.wrp_intf.id;
      assign m[23].wrp_intf.ack = s.wrp_intf.ack;
      assign m[23].wrp_intf.id = s.wrp_intf.id;
      assign m[24].wrp_intf.ack = s.wrp_intf.ack;
      assign m[24].wrp_intf.id = s.wrp_intf.id;
      assign m[25].wrp_intf.ack = s.wrp_intf.ack;
      assign m[25].wrp_intf.id = s.wrp_intf.id;
      assign m[26].wrp_intf.ack = s.wrp_intf.ack;
      assign m[26].wrp_intf.id = s.wrp_intf.id;
      assign m[27].wrp_intf.ack = s.wrp_intf.ack;
      assign m[27].wrp_intf.id = s.wrp_intf.id;
      assign m[28].wrp_intf.ack = s.wrp_intf.ack;
      assign m[28].wrp_intf.id = s.wrp_intf.id;
      assign m[29].wrp_intf.ack = s.wrp_intf.ack;
      assign m[29].wrp_intf.id = s.wrp_intf.id;
      assign m[30].wrp_intf.ack = s.wrp_intf.ack;
      assign m[30].wrp_intf.id = s.wrp_intf.id;
      assign m[31].wrp_intf.ack = s.wrp_intf.ack;
      assign m[31].wrp_intf.id = s.wrp_intf.id;
      assign m[32].wrp_intf.ack = s.wrp_intf.ack;
      assign m[32].wrp_intf.id = s.wrp_intf.id;
      assign m[33].wrp_intf.ack = s.wrp_intf.ack;
      assign m[33].wrp_intf.id = s.wrp_intf.id;
      assign m[34].wrp_intf.ack = s.wrp_intf.ack;
      assign m[34].wrp_intf.id = s.wrp_intf.id;
      assign m[35].wrp_intf.ack = s.wrp_intf.ack;
      assign m[35].wrp_intf.id = s.wrp_intf.id;
      assign m[36].wrp_intf.ack = s.wrp_intf.ack;
      assign m[36].wrp_intf.id = s.wrp_intf.id;
      assign m[37].wrp_intf.ack = s.wrp_intf.ack;
      assign m[37].wrp_intf.id = s.wrp_intf.id;
      assign m[38].wrp_intf.ack = s.wrp_intf.ack;
      assign m[38].wrp_intf.id = s.wrp_intf.id;
      assign m[39].wrp_intf.ack = s.wrp_intf.ack;
      assign m[39].wrp_intf.id = s.wrp_intf.id;
      assign m[40].wrp_intf.ack = s.wrp_intf.ack;
      assign m[40].wrp_intf.id = s.wrp_intf.id;
      assign m[41].wrp_intf.ack = s.wrp_intf.ack;
      assign m[41].wrp_intf.id = s.wrp_intf.id;
      assign m[42].wrp_intf.ack = s.wrp_intf.ack;
      assign m[42].wrp_intf.id = s.wrp_intf.id;
      assign m[43].wrp_intf.ack = s.wrp_intf.ack;
      assign m[43].wrp_intf.id = s.wrp_intf.id;
      assign m[44].wrp_intf.ack = s.wrp_intf.ack;
      assign m[44].wrp_intf.id = s.wrp_intf.id;
      assign m[45].wrp_intf.ack = s.wrp_intf.ack;
      assign m[45].wrp_intf.id = s.wrp_intf.id;
      assign m[46].wrp_intf.ack = s.wrp_intf.ack;
      assign m[46].wrp_intf.id = s.wrp_intf.id;
      assign m[47].wrp_intf.ack = s.wrp_intf.ack;
      assign m[47].wrp_intf.id = s.wrp_intf.id;
      assign m[48].wrp_intf.ack = s.wrp_intf.ack;
      assign m[48].wrp_intf.id = s.wrp_intf.id;
      assign m[49].wrp_intf.ack = s.wrp_intf.ack;
      assign m[49].wrp_intf.id = s.wrp_intf.id;
      assign m[50].wrp_intf.ack = s.wrp_intf.ack;
      assign m[50].wrp_intf.id = s.wrp_intf.id;
      assign m[51].wrp_intf.ack = s.wrp_intf.ack;
      assign m[51].wrp_intf.id = s.wrp_intf.id;
      assign m[52].wrp_intf.ack = s.wrp_intf.ack;
      assign m[52].wrp_intf.id = s.wrp_intf.id;
      assign m[53].wrp_intf.ack = s.wrp_intf.ack;
      assign m[53].wrp_intf.id = s.wrp_intf.id;
      assign m[54].wrp_intf.ack = s.wrp_intf.ack;
      assign m[54].wrp_intf.id = s.wrp_intf.id;
      assign m[55].wrp_intf.ack = s.wrp_intf.ack;
      assign m[55].wrp_intf.id = s.wrp_intf.id;
   end
   endgenerate

   generate
   begin:rrp
      assign m[0].rrp_intf.datavalid = s.rrp_intf.datavalid;
      assign m[0].rrp_intf.data = s.rrp_intf.data;
      assign m[0].rrp_intf.id = s.rrp_intf.id;
      assign m[1].rrp_intf.datavalid = s.rrp_intf.datavalid;
      assign m[1].rrp_intf.data = s.rrp_intf.data;
      assign m[1].rrp_intf.id = s.rrp_intf.id;
      assign m[2].rrp_intf.datavalid = s.rrp_intf.datavalid;
      assign m[2].rrp_intf.data = s.rrp_intf.data;
      assign m[2].rrp_intf.id = s.rrp_intf.id;
      assign m[3].rrp_intf.datavalid = s.rrp_intf.datavalid;
      assign m[3].rrp_intf.data = s.rrp_intf.data;
      assign m[3].rrp_intf.id = s.rrp_intf.id;
      assign m[4].rrp_intf.datavalid = s.rrp_intf.datavalid;
      assign m[4].rrp_intf.data = s.rrp_intf.data;
      assign m[4].rrp_intf.id = s.rrp_intf.id;
      assign m[5].rrp_intf.datavalid = s.rrp_intf.datavalid;
      assign m[5].rrp_intf.data = s.rrp_intf.data;
      assign m[5].rrp_intf.id = s.rrp_intf.id;
      assign m[6].rrp_intf.datavalid = s.rrp_intf.datavalid;
      assign m[6].rrp_intf.data = s.rrp_intf.data;
      assign m[6].rrp_intf.id = s.rrp_intf.id;
      assign m[7].rrp_intf.datavalid = s.rrp_intf.datavalid;
      assign m[7].rrp_intf.data = s.rrp_intf.data;
      assign m[7].rrp_intf.id = s.rrp_intf.id;
      assign m[8].rrp_intf.datavalid = s.rrp_intf.datavalid;
      assign m[8].rrp_intf.data = s.rrp_intf.data;
      assign m[8].rrp_intf.id = s.rrp_intf.id;
      assign m[9].rrp_intf.datavalid = s.rrp_intf.datavalid;
      assign m[9].rrp_intf.data = s.rrp_intf.data;
      assign m[9].rrp_intf.id = s.rrp_intf.id;
      assign m[10].rrp_intf.datavalid = s.rrp_intf.datavalid;
      assign m[10].rrp_intf.data = s.rrp_intf.data;
      assign m[10].rrp_intf.id = s.rrp_intf.id;
      assign m[11].rrp_intf.datavalid = s.rrp_intf.datavalid;
      assign m[11].rrp_intf.data = s.rrp_intf.data;
      assign m[11].rrp_intf.id = s.rrp_intf.id;
      assign m[12].rrp_intf.datavalid = s.rrp_intf.datavalid;
      assign m[12].rrp_intf.data = s.rrp_intf.data;
      assign m[12].rrp_intf.id = s.rrp_intf.id;
      assign m[13].rrp_intf.datavalid = s.rrp_intf.datavalid;
      assign m[13].rrp_intf.data = s.rrp_intf.data;
      assign m[13].rrp_intf.id = s.rrp_intf.id;
      assign m[14].rrp_intf.datavalid = s.rrp_intf.datavalid;
      assign m[14].rrp_intf.data = s.rrp_intf.data;
      assign m[14].rrp_intf.id = s.rrp_intf.id;
      assign m[15].rrp_intf.datavalid = s.rrp_intf.datavalid;
      assign m[15].rrp_intf.data = s.rrp_intf.data;
      assign m[15].rrp_intf.id = s.rrp_intf.id;
      assign m[16].rrp_intf.datavalid = s.rrp_intf.datavalid;
      assign m[16].rrp_intf.data = s.rrp_intf.data;
      assign m[16].rrp_intf.id = s.rrp_intf.id;
      assign m[17].rrp_intf.datavalid = s.rrp_intf.datavalid;
      assign m[17].rrp_intf.data = s.rrp_intf.data;
      assign m[17].rrp_intf.id = s.rrp_intf.id;
      assign m[18].rrp_intf.datavalid = s.rrp_intf.datavalid;
      assign m[18].rrp_intf.data = s.rrp_intf.data;
      assign m[18].rrp_intf.id = s.rrp_intf.id;
      assign m[19].rrp_intf.datavalid = s.rrp_intf.datavalid;
      assign m[19].rrp_intf.data = s.rrp_intf.data;
      assign m[19].rrp_intf.id = s.rrp_intf.id;
      assign m[20].rrp_intf.datavalid = s.rrp_intf.datavalid;
      assign m[20].rrp_intf.data = s.rrp_intf.data;
      assign m[20].rrp_intf.id = s.rrp_intf.id;
      assign m[21].rrp_intf.datavalid = s.rrp_intf.datavalid;
      assign m[21].rrp_intf.data = s.rrp_intf.data;
      assign m[21].rrp_intf.id = s.rrp_intf.id;
      assign m[22].rrp_intf.datavalid = s.rrp_intf.datavalid;
      assign m[22].rrp_intf.data = s.rrp_intf.data;
      assign m[22].rrp_intf.id = s.rrp_intf.id;
      assign m[23].rrp_intf.datavalid = s.rrp_intf.datavalid;
      assign m[23].rrp_intf.data = s.rrp_intf.data;
      assign m[23].rrp_intf.id = s.rrp_intf.id;
      assign m[24].rrp_intf.datavalid = s.rrp_intf.datavalid;
      assign m[24].rrp_intf.data = s.rrp_intf.data;
      assign m[24].rrp_intf.id = s.rrp_intf.id;
      assign m[25].rrp_intf.datavalid = s.rrp_intf.datavalid;
      assign m[25].rrp_intf.data = s.rrp_intf.data;
      assign m[25].rrp_intf.id = s.rrp_intf.id;
      assign m[26].rrp_intf.datavalid = s.rrp_intf.datavalid;
      assign m[26].rrp_intf.data = s.rrp_intf.data;
      assign m[26].rrp_intf.id = s.rrp_intf.id;
      assign m[27].rrp_intf.datavalid = s.rrp_intf.datavalid;
      assign m[27].rrp_intf.data = s.rrp_intf.data;
      assign m[27].rrp_intf.id = s.rrp_intf.id;
      assign m[28].rrp_intf.datavalid = s.rrp_intf.datavalid;
      assign m[28].rrp_intf.data = s.rrp_intf.data;
      assign m[28].rrp_intf.id = s.rrp_intf.id;
      assign m[29].rrp_intf.datavalid = s.rrp_intf.datavalid;
      assign m[29].rrp_intf.data = s.rrp_intf.data;
      assign m[29].rrp_intf.id = s.rrp_intf.id;
      assign m[30].rrp_intf.datavalid = s.rrp_intf.datavalid;
      assign m[30].rrp_intf.data = s.rrp_intf.data;
      assign m[30].rrp_intf.id = s.rrp_intf.id;
      assign m[31].rrp_intf.datavalid = s.rrp_intf.datavalid;
      assign m[31].rrp_intf.data = s.rrp_intf.data;
      assign m[31].rrp_intf.id = s.rrp_intf.id;
      assign m[32].rrp_intf.datavalid = s.rrp_intf.datavalid;
      assign m[32].rrp_intf.data = s.rrp_intf.data;
      assign m[32].rrp_intf.id = s.rrp_intf.id;
      assign m[33].rrp_intf.datavalid = s.rrp_intf.datavalid;
      assign m[33].rrp_intf.data = s.rrp_intf.data;
      assign m[33].rrp_intf.id = s.rrp_intf.id;
      assign m[34].rrp_intf.datavalid = s.rrp_intf.datavalid;
      assign m[34].rrp_intf.data = s.rrp_intf.data;
      assign m[34].rrp_intf.id = s.rrp_intf.id;
      assign m[35].rrp_intf.datavalid = s.rrp_intf.datavalid;
      assign m[35].rrp_intf.data = s.rrp_intf.data;
      assign m[35].rrp_intf.id = s.rrp_intf.id;
      assign m[36].rrp_intf.datavalid = s.rrp_intf.datavalid;
      assign m[36].rrp_intf.data = s.rrp_intf.data;
      assign m[36].rrp_intf.id = s.rrp_intf.id;
      assign m[37].rrp_intf.datavalid = s.rrp_intf.datavalid;
      assign m[37].rrp_intf.data = s.rrp_intf.data;
      assign m[37].rrp_intf.id = s.rrp_intf.id;
      assign m[38].rrp_intf.datavalid = s.rrp_intf.datavalid;
      assign m[38].rrp_intf.data = s.rrp_intf.data;
      assign m[38].rrp_intf.id = s.rrp_intf.id;
      assign m[39].rrp_intf.datavalid = s.rrp_intf.datavalid;
      assign m[39].rrp_intf.data = s.rrp_intf.data;
      assign m[39].rrp_intf.id = s.rrp_intf.id;
      assign m[40].rrp_intf.datavalid = s.rrp_intf.datavalid;
      assign m[40].rrp_intf.data = s.rrp_intf.data;
      assign m[40].rrp_intf.id = s.rrp_intf.id;
      assign m[41].rrp_intf.datavalid = s.rrp_intf.datavalid;
      assign m[41].rrp_intf.data = s.rrp_intf.data;
      assign m[41].rrp_intf.id = s.rrp_intf.id;
      assign m[42].rrp_intf.datavalid = s.rrp_intf.datavalid;
      assign m[42].rrp_intf.data = s.rrp_intf.data;
      assign m[42].rrp_intf.id = s.rrp_intf.id;
      assign m[43].rrp_intf.datavalid = s.rrp_intf.datavalid;
      assign m[43].rrp_intf.data = s.rrp_intf.data;
      assign m[43].rrp_intf.id = s.rrp_intf.id;
      assign m[44].rrp_intf.datavalid = s.rrp_intf.datavalid;
      assign m[44].rrp_intf.data = s.rrp_intf.data;
      assign m[44].rrp_intf.id = s.rrp_intf.id;
      assign m[45].rrp_intf.datavalid = s.rrp_intf.datavalid;
      assign m[45].rrp_intf.data = s.rrp_intf.data;
      assign m[45].rrp_intf.id = s.rrp_intf.id;
      assign m[46].rrp_intf.datavalid = s.rrp_intf.datavalid;
      assign m[46].rrp_intf.data = s.rrp_intf.data;
      assign m[46].rrp_intf.id = s.rrp_intf.id;
      assign m[47].rrp_intf.datavalid = s.rrp_intf.datavalid;
      assign m[47].rrp_intf.data = s.rrp_intf.data;
      assign m[47].rrp_intf.id = s.rrp_intf.id;
      assign m[48].rrp_intf.datavalid = s.rrp_intf.datavalid;
      assign m[48].rrp_intf.data = s.rrp_intf.data;
      assign m[48].rrp_intf.id = s.rrp_intf.id;
      assign m[49].rrp_intf.datavalid = s.rrp_intf.datavalid;
      assign m[49].rrp_intf.data = s.rrp_intf.data;
      assign m[49].rrp_intf.id = s.rrp_intf.id;
      assign m[50].rrp_intf.datavalid = s.rrp_intf.datavalid;
      assign m[50].rrp_intf.data = s.rrp_intf.data;
      assign m[50].rrp_intf.id = s.rrp_intf.id;
      assign m[51].rrp_intf.datavalid = s.rrp_intf.datavalid;
      assign m[51].rrp_intf.data = s.rrp_intf.data;
      assign m[51].rrp_intf.id = s.rrp_intf.id;
      assign m[52].rrp_intf.datavalid = s.rrp_intf.datavalid;
      assign m[52].rrp_intf.data = s.rrp_intf.data;
      assign m[52].rrp_intf.id = s.rrp_intf.id;
      assign m[53].rrp_intf.datavalid = s.rrp_intf.datavalid;
      assign m[53].rrp_intf.data = s.rrp_intf.data;
      assign m[53].rrp_intf.id = s.rrp_intf.id;
      assign m[54].rrp_intf.datavalid = s.rrp_intf.datavalid;
      assign m[54].rrp_intf.data = s.rrp_intf.data;
      assign m[54].rrp_intf.id = s.rrp_intf.id;
      assign m[55].rrp_intf.datavalid = s.rrp_intf.datavalid;
      assign m[55].rrp_intf.data = s.rrp_intf.data;
      assign m[55].rrp_intf.id = s.rrp_intf.id;
   end
   endgenerate

   generate
      for( __i = 0; __i < 55; __i = __i + 1 )
      begin:a
         acl_arb_intf
         #(
            .DATA_W(64),
            .BURSTCOUNT_W(1),
            .ADDRESS_W(61),
            .BYTEENA_W(8),
            .ID_W(6)
         ) m0_intf();
         acl_arb_intf
         #(
            .DATA_W(64),
            .BURSTCOUNT_W(1),
            .ADDRESS_W(61),
            .BYTEENA_W(8),
            .ID_W(6)
         ) m1_intf();
         acl_arb_intf
         #(
            .DATA_W(64),
            .BURSTCOUNT_W(1),
            .ADDRESS_W(61),
            .BYTEENA_W(8),
            .ID_W(6)
         ) mout_intf();

         // INST a of acl_arb2
         acl_arb2
         #(
            .DATA_W(64),
            .BURSTCOUNT_W(1),
            .ADDRESS_W(61),
            .BYTEENA_W(8),
            .ID_W(6),
            .PIPELINE("none"),
            .KEEP_LAST_GRANT(1),
            .NO_STALL_NETWORK(0),
            .ASYNC_RESET(1),
            .SYNCHRONIZE_RESET(0)
         )
         a
         (
            .clock(clock),
            .resetn(resetn),
            .m0_intf(m0_intf),
            .m1_intf(m1_intf),
            .mout_intf(mout_intf)
         );

      end

   endgenerate

   generate
      for( __i = 0; __i < 86; __i = __i + 1 )
      begin:dp
         acl_arb_intf
         #(
            .DATA_W(64),
            .BURSTCOUNT_W(1),
            .ADDRESS_W(61),
            .BYTEENA_W(8),
            .ID_W(6)
         ) in_intf();
         acl_arb_intf
         #(
            .DATA_W(64),
            .BURSTCOUNT_W(1),
            .ADDRESS_W(61),
            .BYTEENA_W(8),
            .ID_W(6)
         ) out_intf();

         // INST dp of acl_arb_pipeline_reg
         acl_arb_pipeline_reg
         #(
            .DATA_W(64),
            .BURSTCOUNT_W(1),
            .ADDRESS_W(61),
            .BYTEENA_W(8),
            .ID_W(6),
            .ASYNC_RESET(1),
            .SYNCHRONIZE_RESET(0)
         )
         dp
         (
            .clock(clock),
            .resetn(resetn),
            .in_intf(in_intf),
            .out_intf(out_intf)
         );

      end

   endgenerate

   generate
      for( __i = 0; __i < 9; __i = __i + 1 )
      begin:sp
         acl_arb_intf
         #(
            .DATA_W(64),
            .BURSTCOUNT_W(1),
            .ADDRESS_W(61),
            .BYTEENA_W(8),
            .ID_W(6)
         ) in_intf();
         acl_arb_intf
         #(
            .DATA_W(64),
            .BURSTCOUNT_W(1),
            .ADDRESS_W(61),
            .BYTEENA_W(8),
            .ID_W(6)
         ) out_intf();

         // INST sp of acl_arb_staging_reg
         acl_arb_staging_reg
         #(
            .DATA_W(64),
            .BURSTCOUNT_W(1),
            .ADDRESS_W(61),
            .BYTEENA_W(8),
            .ID_W(6),
            .ASYNC_RESET(1),
            .SYNCHRONIZE_RESET(0)
         )
         sp
         (
            .clock(clock),
            .resetn(resetn),
            .in_intf(in_intf),
            .out_intf(out_intf)
         );

      end

   endgenerate

   assign mout_arb_request = dp[0].out_intf.req.request;
   assign mout_arb_enable = dp[0].out_intf.req.enable;
   assign mout_arb_read = dp[0].out_intf.req.read;
   assign mout_arb_write = dp[0].out_intf.req.write;
   assign mout_arb_burstcount = dp[0].out_intf.req.burstcount;
   assign mout_arb_address = dp[0].out_intf.req.address;
   assign mout_arb_writedata = dp[0].out_intf.req.writedata;
   assign mout_arb_byteenable = dp[0].out_intf.req.byteenable;
   assign mout_arb_id = dp[0].out_intf.req.id;
   assign dp[0].out_intf.stall = mout_arb_stall;
   assign dp[0].in_intf.req = sp[0].out_intf.req;
   assign sp[0].out_intf.stall = dp[0].in_intf.stall;
   assign sp[0].in_intf.req = s.out_arb_intf.req;
   assign s.out_arb_intf.stall = sp[0].in_intf.stall;
   assign s.in_arb_intf.req = sp[1].out_intf.req;
   assign sp[1].out_intf.stall = s.in_arb_intf.stall;
   assign sp[1].in_intf.req = dp[1].out_intf.req;
   assign dp[1].out_intf.stall = sp[1].in_intf.stall;
   assign dp[1].in_intf.req = a[54].mout_intf.req;
   assign a[54].mout_intf.stall = dp[1].in_intf.stall;
   assign a[54].m0_intf.req = a[52].mout_intf.req;
   assign a[52].mout_intf.stall = a[54].m0_intf.stall;
   assign a[54].m1_intf.req = a[53].mout_intf.req;
   assign a[53].mout_intf.stall = a[54].m1_intf.stall;
   assign a[52].m0_intf.req = a[49].mout_intf.req;
   assign a[49].mout_intf.stall = a[52].m0_intf.stall;
   assign a[52].m1_intf.req = a[50].mout_intf.req;
   assign a[50].mout_intf.stall = a[52].m1_intf.stall;
   assign a[53].m0_intf.req = a[51].mout_intf.req;
   assign a[51].mout_intf.stall = a[53].m0_intf.stall;
   assign a[53].m1_intf.req = sp[2].out_intf.req;
   assign sp[2].out_intf.stall = a[53].m1_intf.stall;
   assign a[49].m0_intf.req = sp[3].out_intf.req;
   assign sp[3].out_intf.stall = a[49].m0_intf.stall;
   assign a[49].m1_intf.req = sp[4].out_intf.req;
   assign sp[4].out_intf.stall = a[49].m1_intf.stall;
   assign a[50].m0_intf.req = sp[5].out_intf.req;
   assign sp[5].out_intf.stall = a[50].m0_intf.stall;
   assign a[50].m1_intf.req = sp[6].out_intf.req;
   assign sp[6].out_intf.stall = a[50].m1_intf.stall;
   assign a[51].m0_intf.req = sp[7].out_intf.req;
   assign sp[7].out_intf.stall = a[51].m0_intf.stall;
   assign a[51].m1_intf.req = sp[8].out_intf.req;
   assign sp[8].out_intf.stall = a[51].m1_intf.stall;
   assign sp[2].in_intf.req = a[48].mout_intf.req;
   assign a[48].mout_intf.stall = sp[2].in_intf.stall;
   assign sp[3].in_intf.req = a[42].mout_intf.req;
   assign a[42].mout_intf.stall = sp[3].in_intf.stall;
   assign sp[4].in_intf.req = a[43].mout_intf.req;
   assign a[43].mout_intf.stall = sp[4].in_intf.stall;
   assign sp[5].in_intf.req = a[44].mout_intf.req;
   assign a[44].mout_intf.stall = sp[5].in_intf.stall;
   assign sp[6].in_intf.req = a[45].mout_intf.req;
   assign a[45].mout_intf.stall = sp[6].in_intf.stall;
   assign sp[7].in_intf.req = a[46].mout_intf.req;
   assign a[46].mout_intf.stall = sp[7].in_intf.stall;
   assign sp[8].in_intf.req = a[47].mout_intf.req;
   assign a[47].mout_intf.stall = sp[8].in_intf.stall;
   assign a[48].m0_intf.req = a[40].mout_intf.req;
   assign a[40].mout_intf.stall = a[48].m0_intf.stall;
   assign a[48].m1_intf.req = a[41].mout_intf.req;
   assign a[41].mout_intf.stall = a[48].m1_intf.stall;
   assign a[42].m0_intf.req = a[28].mout_intf.req;
   assign a[28].mout_intf.stall = a[42].m0_intf.stall;
   assign a[42].m1_intf.req = a[29].mout_intf.req;
   assign a[29].mout_intf.stall = a[42].m1_intf.stall;
   assign a[43].m0_intf.req = a[30].mout_intf.req;
   assign a[30].mout_intf.stall = a[43].m0_intf.stall;
   assign a[43].m1_intf.req = a[31].mout_intf.req;
   assign a[31].mout_intf.stall = a[43].m1_intf.stall;
   assign a[44].m0_intf.req = a[32].mout_intf.req;
   assign a[32].mout_intf.stall = a[44].m0_intf.stall;
   assign a[44].m1_intf.req = a[33].mout_intf.req;
   assign a[33].mout_intf.stall = a[44].m1_intf.stall;
   assign a[45].m0_intf.req = a[34].mout_intf.req;
   assign a[34].mout_intf.stall = a[45].m0_intf.stall;
   assign a[45].m1_intf.req = a[35].mout_intf.req;
   assign a[35].mout_intf.stall = a[45].m1_intf.stall;
   assign a[46].m0_intf.req = a[36].mout_intf.req;
   assign a[36].mout_intf.stall = a[46].m0_intf.stall;
   assign a[46].m1_intf.req = a[37].mout_intf.req;
   assign a[37].mout_intf.stall = a[46].m1_intf.stall;
   assign a[47].m0_intf.req = a[38].mout_intf.req;
   assign a[38].mout_intf.stall = a[47].m0_intf.stall;
   assign a[47].m1_intf.req = a[39].mout_intf.req;
   assign a[39].mout_intf.stall = a[47].m1_intf.stall;
   assign a[40].m0_intf.req = dp[2].out_intf.req;
   assign dp[2].out_intf.stall = a[40].m0_intf.stall;
   assign a[40].m1_intf.req = dp[3].out_intf.req;
   assign dp[3].out_intf.stall = a[40].m1_intf.stall;
   assign a[41].m0_intf.req = dp[4].out_intf.req;
   assign dp[4].out_intf.stall = a[41].m0_intf.stall;
   assign a[41].m1_intf.req = dp[5].out_intf.req;
   assign dp[5].out_intf.stall = a[41].m1_intf.stall;
   assign a[28].m0_intf.req = dp[6].out_intf.req;
   assign dp[6].out_intf.stall = a[28].m0_intf.stall;
   assign a[28].m1_intf.req = dp[7].out_intf.req;
   assign dp[7].out_intf.stall = a[28].m1_intf.stall;
   assign a[29].m0_intf.req = dp[8].out_intf.req;
   assign dp[8].out_intf.stall = a[29].m0_intf.stall;
   assign a[29].m1_intf.req = dp[9].out_intf.req;
   assign dp[9].out_intf.stall = a[29].m1_intf.stall;
   assign a[30].m0_intf.req = dp[10].out_intf.req;
   assign dp[10].out_intf.stall = a[30].m0_intf.stall;
   assign a[30].m1_intf.req = dp[11].out_intf.req;
   assign dp[11].out_intf.stall = a[30].m1_intf.stall;
   assign a[31].m0_intf.req = dp[12].out_intf.req;
   assign dp[12].out_intf.stall = a[31].m0_intf.stall;
   assign a[31].m1_intf.req = dp[13].out_intf.req;
   assign dp[13].out_intf.stall = a[31].m1_intf.stall;
   assign a[32].m0_intf.req = dp[14].out_intf.req;
   assign dp[14].out_intf.stall = a[32].m0_intf.stall;
   assign a[32].m1_intf.req = dp[15].out_intf.req;
   assign dp[15].out_intf.stall = a[32].m1_intf.stall;
   assign a[33].m0_intf.req = dp[16].out_intf.req;
   assign dp[16].out_intf.stall = a[33].m0_intf.stall;
   assign a[33].m1_intf.req = dp[17].out_intf.req;
   assign dp[17].out_intf.stall = a[33].m1_intf.stall;
   assign a[34].m0_intf.req = dp[18].out_intf.req;
   assign dp[18].out_intf.stall = a[34].m0_intf.stall;
   assign a[34].m1_intf.req = dp[19].out_intf.req;
   assign dp[19].out_intf.stall = a[34].m1_intf.stall;
   assign a[35].m0_intf.req = dp[20].out_intf.req;
   assign dp[20].out_intf.stall = a[35].m0_intf.stall;
   assign a[35].m1_intf.req = dp[21].out_intf.req;
   assign dp[21].out_intf.stall = a[35].m1_intf.stall;
   assign a[36].m0_intf.req = dp[22].out_intf.req;
   assign dp[22].out_intf.stall = a[36].m0_intf.stall;
   assign a[36].m1_intf.req = dp[23].out_intf.req;
   assign dp[23].out_intf.stall = a[36].m1_intf.stall;
   assign a[37].m0_intf.req = dp[24].out_intf.req;
   assign dp[24].out_intf.stall = a[37].m0_intf.stall;
   assign a[37].m1_intf.req = dp[25].out_intf.req;
   assign dp[25].out_intf.stall = a[37].m1_intf.stall;
   assign a[38].m0_intf.req = dp[26].out_intf.req;
   assign dp[26].out_intf.stall = a[38].m0_intf.stall;
   assign a[38].m1_intf.req = dp[27].out_intf.req;
   assign dp[27].out_intf.stall = a[38].m1_intf.stall;
   assign a[39].m0_intf.req = dp[28].out_intf.req;
   assign dp[28].out_intf.stall = a[39].m0_intf.stall;
   assign a[39].m1_intf.req = dp[29].out_intf.req;
   assign dp[29].out_intf.stall = a[39].m1_intf.stall;
   assign dp[2].in_intf.req = a[24].mout_intf.req;
   assign a[24].mout_intf.stall = dp[2].in_intf.stall;
   assign dp[3].in_intf.req = a[25].mout_intf.req;
   assign a[25].mout_intf.stall = dp[3].in_intf.stall;
   assign dp[4].in_intf.req = a[26].mout_intf.req;
   assign a[26].mout_intf.stall = dp[4].in_intf.stall;
   assign dp[5].in_intf.req = a[27].mout_intf.req;
   assign a[27].mout_intf.stall = dp[5].in_intf.stall;
   assign dp[6].in_intf.req = a[0].mout_intf.req;
   assign a[0].mout_intf.stall = dp[6].in_intf.stall;
   assign dp[7].in_intf.req = a[1].mout_intf.req;
   assign a[1].mout_intf.stall = dp[7].in_intf.stall;
   assign dp[8].in_intf.req = a[2].mout_intf.req;
   assign a[2].mout_intf.stall = dp[8].in_intf.stall;
   assign dp[9].in_intf.req = a[3].mout_intf.req;
   assign a[3].mout_intf.stall = dp[9].in_intf.stall;
   assign dp[10].in_intf.req = a[4].mout_intf.req;
   assign a[4].mout_intf.stall = dp[10].in_intf.stall;
   assign dp[11].in_intf.req = a[5].mout_intf.req;
   assign a[5].mout_intf.stall = dp[11].in_intf.stall;
   assign dp[12].in_intf.req = a[6].mout_intf.req;
   assign a[6].mout_intf.stall = dp[12].in_intf.stall;
   assign dp[13].in_intf.req = a[7].mout_intf.req;
   assign a[7].mout_intf.stall = dp[13].in_intf.stall;
   assign dp[14].in_intf.req = a[8].mout_intf.req;
   assign a[8].mout_intf.stall = dp[14].in_intf.stall;
   assign dp[15].in_intf.req = a[9].mout_intf.req;
   assign a[9].mout_intf.stall = dp[15].in_intf.stall;
   assign dp[16].in_intf.req = a[10].mout_intf.req;
   assign a[10].mout_intf.stall = dp[16].in_intf.stall;
   assign dp[17].in_intf.req = a[11].mout_intf.req;
   assign a[11].mout_intf.stall = dp[17].in_intf.stall;
   assign dp[18].in_intf.req = a[12].mout_intf.req;
   assign a[12].mout_intf.stall = dp[18].in_intf.stall;
   assign dp[19].in_intf.req = a[13].mout_intf.req;
   assign a[13].mout_intf.stall = dp[19].in_intf.stall;
   assign dp[20].in_intf.req = a[14].mout_intf.req;
   assign a[14].mout_intf.stall = dp[20].in_intf.stall;
   assign dp[21].in_intf.req = a[15].mout_intf.req;
   assign a[15].mout_intf.stall = dp[21].in_intf.stall;
   assign dp[22].in_intf.req = a[16].mout_intf.req;
   assign a[16].mout_intf.stall = dp[22].in_intf.stall;
   assign dp[23].in_intf.req = a[17].mout_intf.req;
   assign a[17].mout_intf.stall = dp[23].in_intf.stall;
   assign dp[24].in_intf.req = a[18].mout_intf.req;
   assign a[18].mout_intf.stall = dp[24].in_intf.stall;
   assign dp[25].in_intf.req = a[19].mout_intf.req;
   assign a[19].mout_intf.stall = dp[25].in_intf.stall;
   assign dp[26].in_intf.req = a[20].mout_intf.req;
   assign a[20].mout_intf.stall = dp[26].in_intf.stall;
   assign dp[27].in_intf.req = a[21].mout_intf.req;
   assign a[21].mout_intf.stall = dp[27].in_intf.stall;
   assign dp[28].in_intf.req = a[22].mout_intf.req;
   assign a[22].mout_intf.stall = dp[28].in_intf.stall;
   assign dp[29].in_intf.req = a[23].mout_intf.req;
   assign a[23].mout_intf.stall = dp[29].in_intf.stall;
   assign a[24].m0_intf.req = dp[30].out_intf.req;
   assign dp[30].out_intf.stall = a[24].m0_intf.stall;
   assign a[24].m1_intf.req = dp[31].out_intf.req;
   assign dp[31].out_intf.stall = a[24].m1_intf.stall;
   assign a[25].m0_intf.req = dp[32].out_intf.req;
   assign dp[32].out_intf.stall = a[25].m0_intf.stall;
   assign a[25].m1_intf.req = dp[33].out_intf.req;
   assign dp[33].out_intf.stall = a[25].m1_intf.stall;
   assign a[26].m0_intf.req = dp[34].out_intf.req;
   assign dp[34].out_intf.stall = a[26].m0_intf.stall;
   assign a[26].m1_intf.req = dp[35].out_intf.req;
   assign dp[35].out_intf.stall = a[26].m1_intf.stall;
   assign a[27].m0_intf.req = dp[36].out_intf.req;
   assign dp[36].out_intf.stall = a[27].m0_intf.stall;
   assign a[27].m1_intf.req = dp[37].out_intf.req;
   assign dp[37].out_intf.stall = a[27].m1_intf.stall;
   assign a[0].m0_intf.req = dp[38].out_intf.req;
   assign dp[38].out_intf.stall = a[0].m0_intf.stall;
   assign a[0].m1_intf.req = dp[39].out_intf.req;
   assign dp[39].out_intf.stall = a[0].m1_intf.stall;
   assign a[1].m0_intf.req = dp[40].out_intf.req;
   assign dp[40].out_intf.stall = a[1].m0_intf.stall;
   assign a[1].m1_intf.req = dp[41].out_intf.req;
   assign dp[41].out_intf.stall = a[1].m1_intf.stall;
   assign a[2].m0_intf.req = dp[42].out_intf.req;
   assign dp[42].out_intf.stall = a[2].m0_intf.stall;
   assign a[2].m1_intf.req = dp[43].out_intf.req;
   assign dp[43].out_intf.stall = a[2].m1_intf.stall;
   assign a[3].m0_intf.req = dp[44].out_intf.req;
   assign dp[44].out_intf.stall = a[3].m0_intf.stall;
   assign a[3].m1_intf.req = dp[45].out_intf.req;
   assign dp[45].out_intf.stall = a[3].m1_intf.stall;
   assign a[4].m0_intf.req = dp[46].out_intf.req;
   assign dp[46].out_intf.stall = a[4].m0_intf.stall;
   assign a[4].m1_intf.req = dp[47].out_intf.req;
   assign dp[47].out_intf.stall = a[4].m1_intf.stall;
   assign a[5].m0_intf.req = dp[48].out_intf.req;
   assign dp[48].out_intf.stall = a[5].m0_intf.stall;
   assign a[5].m1_intf.req = dp[49].out_intf.req;
   assign dp[49].out_intf.stall = a[5].m1_intf.stall;
   assign a[6].m0_intf.req = dp[50].out_intf.req;
   assign dp[50].out_intf.stall = a[6].m0_intf.stall;
   assign a[6].m1_intf.req = dp[51].out_intf.req;
   assign dp[51].out_intf.stall = a[6].m1_intf.stall;
   assign a[7].m0_intf.req = dp[52].out_intf.req;
   assign dp[52].out_intf.stall = a[7].m0_intf.stall;
   assign a[7].m1_intf.req = dp[53].out_intf.req;
   assign dp[53].out_intf.stall = a[7].m1_intf.stall;
   assign a[8].m0_intf.req = dp[54].out_intf.req;
   assign dp[54].out_intf.stall = a[8].m0_intf.stall;
   assign a[8].m1_intf.req = dp[55].out_intf.req;
   assign dp[55].out_intf.stall = a[8].m1_intf.stall;
   assign a[9].m0_intf.req = dp[56].out_intf.req;
   assign dp[56].out_intf.stall = a[9].m0_intf.stall;
   assign a[9].m1_intf.req = dp[57].out_intf.req;
   assign dp[57].out_intf.stall = a[9].m1_intf.stall;
   assign a[10].m0_intf.req = dp[58].out_intf.req;
   assign dp[58].out_intf.stall = a[10].m0_intf.stall;
   assign a[10].m1_intf.req = dp[59].out_intf.req;
   assign dp[59].out_intf.stall = a[10].m1_intf.stall;
   assign a[11].m0_intf.req = dp[60].out_intf.req;
   assign dp[60].out_intf.stall = a[11].m0_intf.stall;
   assign a[11].m1_intf.req = dp[61].out_intf.req;
   assign dp[61].out_intf.stall = a[11].m1_intf.stall;
   assign a[12].m0_intf.req = dp[62].out_intf.req;
   assign dp[62].out_intf.stall = a[12].m0_intf.stall;
   assign a[12].m1_intf.req = dp[63].out_intf.req;
   assign dp[63].out_intf.stall = a[12].m1_intf.stall;
   assign a[13].m0_intf.req = dp[64].out_intf.req;
   assign dp[64].out_intf.stall = a[13].m0_intf.stall;
   assign a[13].m1_intf.req = dp[65].out_intf.req;
   assign dp[65].out_intf.stall = a[13].m1_intf.stall;
   assign a[14].m0_intf.req = dp[66].out_intf.req;
   assign dp[66].out_intf.stall = a[14].m0_intf.stall;
   assign a[14].m1_intf.req = dp[67].out_intf.req;
   assign dp[67].out_intf.stall = a[14].m1_intf.stall;
   assign a[15].m0_intf.req = dp[68].out_intf.req;
   assign dp[68].out_intf.stall = a[15].m0_intf.stall;
   assign a[15].m1_intf.req = dp[69].out_intf.req;
   assign dp[69].out_intf.stall = a[15].m1_intf.stall;
   assign a[16].m0_intf.req = dp[70].out_intf.req;
   assign dp[70].out_intf.stall = a[16].m0_intf.stall;
   assign a[16].m1_intf.req = dp[71].out_intf.req;
   assign dp[71].out_intf.stall = a[16].m1_intf.stall;
   assign a[17].m0_intf.req = dp[72].out_intf.req;
   assign dp[72].out_intf.stall = a[17].m0_intf.stall;
   assign a[17].m1_intf.req = dp[73].out_intf.req;
   assign dp[73].out_intf.stall = a[17].m1_intf.stall;
   assign a[18].m0_intf.req = dp[74].out_intf.req;
   assign dp[74].out_intf.stall = a[18].m0_intf.stall;
   assign a[18].m1_intf.req = dp[75].out_intf.req;
   assign dp[75].out_intf.stall = a[18].m1_intf.stall;
   assign a[19].m0_intf.req = dp[76].out_intf.req;
   assign dp[76].out_intf.stall = a[19].m0_intf.stall;
   assign a[19].m1_intf.req = dp[77].out_intf.req;
   assign dp[77].out_intf.stall = a[19].m1_intf.stall;
   assign a[20].m0_intf.req = dp[78].out_intf.req;
   assign dp[78].out_intf.stall = a[20].m0_intf.stall;
   assign a[20].m1_intf.req = dp[79].out_intf.req;
   assign dp[79].out_intf.stall = a[20].m1_intf.stall;
   assign a[21].m0_intf.req = dp[80].out_intf.req;
   assign dp[80].out_intf.stall = a[21].m0_intf.stall;
   assign a[21].m1_intf.req = dp[81].out_intf.req;
   assign dp[81].out_intf.stall = a[21].m1_intf.stall;
   assign a[22].m0_intf.req = dp[82].out_intf.req;
   assign dp[82].out_intf.stall = a[22].m0_intf.stall;
   assign a[22].m1_intf.req = dp[83].out_intf.req;
   assign dp[83].out_intf.stall = a[22].m1_intf.stall;
   assign a[23].m0_intf.req = dp[84].out_intf.req;
   assign dp[84].out_intf.stall = a[23].m0_intf.stall;
   assign a[23].m1_intf.req = dp[85].out_intf.req;
   assign dp[85].out_intf.stall = a[23].m1_intf.stall;
   assign dp[30].in_intf.req = m[48].arb_intf.req;
   assign m[48].arb_intf.stall = dp[30].in_intf.stall;
   assign dp[31].in_intf.req = m[49].arb_intf.req;
   assign m[49].arb_intf.stall = dp[31].in_intf.stall;
   assign dp[32].in_intf.req = m[50].arb_intf.req;
   assign m[50].arb_intf.stall = dp[32].in_intf.stall;
   assign dp[33].in_intf.req = m[51].arb_intf.req;
   assign m[51].arb_intf.stall = dp[33].in_intf.stall;
   assign dp[34].in_intf.req = m[52].arb_intf.req;
   assign m[52].arb_intf.stall = dp[34].in_intf.stall;
   assign dp[35].in_intf.req = m[53].arb_intf.req;
   assign m[53].arb_intf.stall = dp[35].in_intf.stall;
   assign dp[36].in_intf.req = m[54].arb_intf.req;
   assign m[54].arb_intf.stall = dp[36].in_intf.stall;
   assign dp[37].in_intf.req = m[55].arb_intf.req;
   assign m[55].arb_intf.stall = dp[37].in_intf.stall;
   assign dp[38].in_intf.req = m[0].arb_intf.req;
   assign m[0].arb_intf.stall = dp[38].in_intf.stall;
   assign dp[39].in_intf.req = m[1].arb_intf.req;
   assign m[1].arb_intf.stall = dp[39].in_intf.stall;
   assign dp[40].in_intf.req = m[2].arb_intf.req;
   assign m[2].arb_intf.stall = dp[40].in_intf.stall;
   assign dp[41].in_intf.req = m[3].arb_intf.req;
   assign m[3].arb_intf.stall = dp[41].in_intf.stall;
   assign dp[42].in_intf.req = m[4].arb_intf.req;
   assign m[4].arb_intf.stall = dp[42].in_intf.stall;
   assign dp[43].in_intf.req = m[5].arb_intf.req;
   assign m[5].arb_intf.stall = dp[43].in_intf.stall;
   assign dp[44].in_intf.req = m[6].arb_intf.req;
   assign m[6].arb_intf.stall = dp[44].in_intf.stall;
   assign dp[45].in_intf.req = m[7].arb_intf.req;
   assign m[7].arb_intf.stall = dp[45].in_intf.stall;
   assign dp[46].in_intf.req = m[8].arb_intf.req;
   assign m[8].arb_intf.stall = dp[46].in_intf.stall;
   assign dp[47].in_intf.req = m[9].arb_intf.req;
   assign m[9].arb_intf.stall = dp[47].in_intf.stall;
   assign dp[48].in_intf.req = m[10].arb_intf.req;
   assign m[10].arb_intf.stall = dp[48].in_intf.stall;
   assign dp[49].in_intf.req = m[11].arb_intf.req;
   assign m[11].arb_intf.stall = dp[49].in_intf.stall;
   assign dp[50].in_intf.req = m[12].arb_intf.req;
   assign m[12].arb_intf.stall = dp[50].in_intf.stall;
   assign dp[51].in_intf.req = m[13].arb_intf.req;
   assign m[13].arb_intf.stall = dp[51].in_intf.stall;
   assign dp[52].in_intf.req = m[14].arb_intf.req;
   assign m[14].arb_intf.stall = dp[52].in_intf.stall;
   assign dp[53].in_intf.req = m[15].arb_intf.req;
   assign m[15].arb_intf.stall = dp[53].in_intf.stall;
   assign dp[54].in_intf.req = m[16].arb_intf.req;
   assign m[16].arb_intf.stall = dp[54].in_intf.stall;
   assign dp[55].in_intf.req = m[17].arb_intf.req;
   assign m[17].arb_intf.stall = dp[55].in_intf.stall;
   assign dp[56].in_intf.req = m[18].arb_intf.req;
   assign m[18].arb_intf.stall = dp[56].in_intf.stall;
   assign dp[57].in_intf.req = m[19].arb_intf.req;
   assign m[19].arb_intf.stall = dp[57].in_intf.stall;
   assign dp[58].in_intf.req = m[20].arb_intf.req;
   assign m[20].arb_intf.stall = dp[58].in_intf.stall;
   assign dp[59].in_intf.req = m[21].arb_intf.req;
   assign m[21].arb_intf.stall = dp[59].in_intf.stall;
   assign dp[60].in_intf.req = m[22].arb_intf.req;
   assign m[22].arb_intf.stall = dp[60].in_intf.stall;
   assign dp[61].in_intf.req = m[23].arb_intf.req;
   assign m[23].arb_intf.stall = dp[61].in_intf.stall;
   assign dp[62].in_intf.req = m[24].arb_intf.req;
   assign m[24].arb_intf.stall = dp[62].in_intf.stall;
   assign dp[63].in_intf.req = m[25].arb_intf.req;
   assign m[25].arb_intf.stall = dp[63].in_intf.stall;
   assign dp[64].in_intf.req = m[26].arb_intf.req;
   assign m[26].arb_intf.stall = dp[64].in_intf.stall;
   assign dp[65].in_intf.req = m[27].arb_intf.req;
   assign m[27].arb_intf.stall = dp[65].in_intf.stall;
   assign dp[66].in_intf.req = m[28].arb_intf.req;
   assign m[28].arb_intf.stall = dp[66].in_intf.stall;
   assign dp[67].in_intf.req = m[29].arb_intf.req;
   assign m[29].arb_intf.stall = dp[67].in_intf.stall;
   assign dp[68].in_intf.req = m[30].arb_intf.req;
   assign m[30].arb_intf.stall = dp[68].in_intf.stall;
   assign dp[69].in_intf.req = m[31].arb_intf.req;
   assign m[31].arb_intf.stall = dp[69].in_intf.stall;
   assign dp[70].in_intf.req = m[32].arb_intf.req;
   assign m[32].arb_intf.stall = dp[70].in_intf.stall;
   assign dp[71].in_intf.req = m[33].arb_intf.req;
   assign m[33].arb_intf.stall = dp[71].in_intf.stall;
   assign dp[72].in_intf.req = m[34].arb_intf.req;
   assign m[34].arb_intf.stall = dp[72].in_intf.stall;
   assign dp[73].in_intf.req = m[35].arb_intf.req;
   assign m[35].arb_intf.stall = dp[73].in_intf.stall;
   assign dp[74].in_intf.req = m[36].arb_intf.req;
   assign m[36].arb_intf.stall = dp[74].in_intf.stall;
   assign dp[75].in_intf.req = m[37].arb_intf.req;
   assign m[37].arb_intf.stall = dp[75].in_intf.stall;
   assign dp[76].in_intf.req = m[38].arb_intf.req;
   assign m[38].arb_intf.stall = dp[76].in_intf.stall;
   assign dp[77].in_intf.req = m[39].arb_intf.req;
   assign m[39].arb_intf.stall = dp[77].in_intf.stall;
   assign dp[78].in_intf.req = m[40].arb_intf.req;
   assign m[40].arb_intf.stall = dp[78].in_intf.stall;
   assign dp[79].in_intf.req = m[41].arb_intf.req;
   assign m[41].arb_intf.stall = dp[79].in_intf.stall;
   assign dp[80].in_intf.req = m[42].arb_intf.req;
   assign m[42].arb_intf.stall = dp[80].in_intf.stall;
   assign dp[81].in_intf.req = m[43].arb_intf.req;
   assign m[43].arb_intf.stall = dp[81].in_intf.stall;
   assign dp[82].in_intf.req = m[44].arb_intf.req;
   assign m[44].arb_intf.stall = dp[82].in_intf.stall;
   assign dp[83].in_intf.req = m[45].arb_intf.req;
   assign m[45].arb_intf.stall = dp[83].in_intf.stall;
   assign dp[84].in_intf.req = m[46].arb_intf.req;
   assign m[46].arb_intf.stall = dp[84].in_intf.stall;
   assign dp[85].in_intf.req = m[47].arb_intf.req;
   assign m[47].arb_intf.stall = dp[85].in_intf.stall;
endmodule

