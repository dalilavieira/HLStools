	v4l2_detect_cvt u0 (
		.clock                       (_connected_to_clock_),                       //   input,   width = 1,                       clock.clk
		.resetn                      (_connected_to_resetn_),                      //   input,   width = 1,                       reset.reset_n
		.start                       (_connected_to_start_),                       //   input,   width = 1,                        call.valid
		.busy                        (_connected_to_busy_),                        //  output,   width = 1,                            .stall
		.done                        (_connected_to_done_),                        //  output,   width = 1,                      return.valid
		.stall                       (_connected_to_stall_),                       //   input,   width = 1,                            .stall
		.returndata                  (_connected_to_returndata_),                  //  output,   width = 1,                  returndata.data
		.frame_height                (_connected_to_frame_height_),                //   input,  width = 32,                frame_height.data
		.hfreq                       (_connected_to_hfreq_),                       //   input,  width = 32,                       hfreq.data
		.vsync                       (_connected_to_vsync_),                       //   input,  width = 32,                       vsync.data
		.active_width                (_connected_to_active_width_),                //   input,  width = 32,                active_width.data
		.polarities                  (_connected_to_polarities_),                  //   input,  width = 32,                  polarities.data
		.interlaced                  (_connected_to_interlaced_),                  //   input,   width = 1,                  interlaced.data
		.fmt                         (_connected_to_fmt_),                         //   input,  width = 64,                         fmt.data
		.CVT_CELL_GRAN               (_connected_to_CVT_CELL_GRAN_),               //   input,  width = 64,               CVT_CELL_GRAN.data
		.CVT_C_PRIME                 (_connected_to_CVT_C_PRIME_),                 //   input,  width = 64,                 CVT_C_PRIME.data
		.CVT_HSYNC_PERCENT           (_connected_to_CVT_HSYNC_PERCENT_),           //   input,  width = 64,           CVT_HSYNC_PERCENT.data
		.CVT_MIN_VSYNC_BP            (_connected_to_CVT_MIN_VSYNC_BP_),            //   input,  width = 64,            CVT_MIN_VSYNC_BP.data
		.CVT_MIN_V_BPORCH            (_connected_to_CVT_MIN_V_BPORCH_),            //   input,  width = 64,            CVT_MIN_V_BPORCH.data
		.CVT_MIN_V_PORCH_RND         (_connected_to_CVT_MIN_V_PORCH_RND_),         //   input,  width = 64,         CVT_MIN_V_PORCH_RND.data
		.CVT_M_PRIME                 (_connected_to_CVT_M_PRIME_),                 //   input,  width = 64,                 CVT_M_PRIME.data
		.CVT_PXL_CLK_GRAN            (_connected_to_CVT_PXL_CLK_GRAN_),            //   input,  width = 64,            CVT_PXL_CLK_GRAN.data
		.CVT_PXL_CLK_GRAN_RB_V2      (_connected_to_CVT_PXL_CLK_GRAN_RB_V2_),      //   input,  width = 64,      CVT_PXL_CLK_GRAN_RB_V2.data
		.CVT_RB_H_BLANK              (_connected_to_CVT_RB_H_BLANK_),              //   input,  width = 64,              CVT_RB_H_BLANK.data
		.CVT_RB_H_SYNC               (_connected_to_CVT_RB_H_SYNC_),               //   input,  width = 64,               CVT_RB_H_SYNC.data
		.CVT_RB_MIN_V_BLANK          (_connected_to_CVT_RB_MIN_V_BLANK_),          //   input,  width = 64,          CVT_RB_MIN_V_BLANK.data
		.CVT_RB_MIN_V_BPORCH         (_connected_to_CVT_RB_MIN_V_BPORCH_),         //   input,  width = 64,         CVT_RB_MIN_V_BPORCH.data
		.CVT_RB_V2_H_BLANK           (_connected_to_CVT_RB_V2_H_BLANK_),           //   input,  width = 64,           CVT_RB_V2_H_BLANK.data
		.CVT_RB_V2_MIN_V_FPORCH      (_connected_to_CVT_RB_V2_MIN_V_FPORCH_),      //   input,  width = 64,      CVT_RB_V2_MIN_V_FPORCH.data
		.CVT_RB_V_BPORCH             (_connected_to_CVT_RB_V_BPORCH_),             //   input,  width = 64,             CVT_RB_V_BPORCH.data
		.CVT_RB_V_FPORCH             (_connected_to_CVT_RB_V_FPORCH_),             //   input,  width = 64,             CVT_RB_V_FPORCH.data
		.V4L2_DV_BT_656_1120         (_connected_to_V4L2_DV_BT_656_1120_),         //   input,  width = 64,         V4L2_DV_BT_656_1120.data
		.V4L2_DV_BT_STD_CVT          (_connected_to_V4L2_DV_BT_STD_CVT_),          //   input,  width = 64,          V4L2_DV_BT_STD_CVT.data
		.V4L2_DV_FL_HALF_LINE        (_connected_to_V4L2_DV_FL_HALF_LINE_),        //   input,  width = 64,        V4L2_DV_FL_HALF_LINE.data
		.V4L2_DV_FL_REDUCED_BLANKING (_connected_to_V4L2_DV_FL_REDUCED_BLANKING_), //   input,  width = 64, V4L2_DV_FL_REDUCED_BLANKING.data
		.V4L2_DV_HSYNC_POS_POL       (_connected_to_V4L2_DV_HSYNC_POS_POL_),       //   input,  width = 64,       V4L2_DV_HSYNC_POS_POL.data
		.V4L2_DV_INTERLACED          (_connected_to_V4L2_DV_INTERLACED_),          //   input,  width = 64,          V4L2_DV_INTERLACED.data
		.V4L2_DV_PROGRESSIVE         (_connected_to_V4L2_DV_PROGRESSIVE_),         //   input,  width = 64,         V4L2_DV_PROGRESSIVE.data
		.V4L2_DV_VSYNC_POS_POL       (_connected_to_V4L2_DV_VSYNC_POS_POL_),       //   input,  width = 64,       V4L2_DV_VSYNC_POS_POL.data
		.avmm_0_rw_address           (_connected_to_avmm_0_rw_address_),           //  output,  width = 64,                   avmm_0_rw.address
		.avmm_0_rw_byteenable        (_connected_to_avmm_0_rw_byteenable_),        //  output,   width = 8,                            .byteenable
		.avmm_0_rw_read              (_connected_to_avmm_0_rw_read_),              //  output,   width = 1,                            .read
		.avmm_0_rw_readdata          (_connected_to_avmm_0_rw_readdata_),          //   input,  width = 64,                            .readdata
		.avmm_0_rw_write             (_connected_to_avmm_0_rw_write_),             //  output,   width = 1,                            .write
		.avmm_0_rw_writedata         (_connected_to_avmm_0_rw_writedata_)          //  output,  width = 64,                            .writedata
	);

