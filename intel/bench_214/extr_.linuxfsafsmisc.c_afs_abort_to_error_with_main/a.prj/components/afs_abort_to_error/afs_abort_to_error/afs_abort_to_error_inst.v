	afs_abort_to_error u0 (
		.clock                (_connected_to_clock_),                //   input,   width = 1,        clock.clk
		.resetn               (_connected_to_resetn_),               //   input,   width = 1,        reset.reset_n
		.start                (_connected_to_start_),                //   input,   width = 1,         call.valid
		.busy                 (_connected_to_busy_),                 //  output,   width = 1,             .stall
		.done                 (_connected_to_done_),                 //  output,   width = 1,       return.valid
		.stall                (_connected_to_stall_),                //   input,   width = 1,             .stall
		.returndata           (_connected_to_returndata_),           //  output,  width = 32,   returndata.data
		.abort_code           (_connected_to_abort_code_),           //   input,  width = 32,   abort_code.data
		.EACCES               (_connected_to_EACCES_),               //   input,  width = 64,       EACCES.data
		.EAGAIN               (_connected_to_EAGAIN_),               //   input,  width = 64,       EAGAIN.data
		.EBADRQC              (_connected_to_EBADRQC_),              //   input,  width = 64,      EBADRQC.data
		.EBUSY                (_connected_to_EBUSY_),                //   input,  width = 64,        EBUSY.data
		.EDEADLK              (_connected_to_EDEADLK_),              //   input,  width = 64,      EDEADLK.data
		.EDOM                 (_connected_to_EDOM_),                 //   input,  width = 64,         EDOM.data
		.EDQUOT               (_connected_to_EDQUOT_),               //   input,  width = 64,       EDQUOT.data
		.EEXIST               (_connected_to_EEXIST_),               //   input,  width = 64,       EEXIST.data
		.EFBIG                (_connected_to_EFBIG_),                //   input,  width = 64,        EFBIG.data
		.EINVAL               (_connected_to_EINVAL_),               //   input,  width = 64,       EINVAL.data
		.EIO                  (_connected_to_EIO_),                  //   input,  width = 64,          EIO.data
		.EISDIR               (_connected_to_EISDIR_),               //   input,  width = 64,       EISDIR.data
		.EKEYEXPIRED          (_connected_to_EKEYEXPIRED_),          //   input,  width = 64,  EKEYEXPIRED.data
		.EKEYREJECTED         (_connected_to_EKEYREJECTED_),         //   input,  width = 64, EKEYREJECTED.data
		.EMLINK               (_connected_to_EMLINK_),               //   input,  width = 64,       EMLINK.data
		.ENAMETOOLONG         (_connected_to_ENAMETOOLONG_),         //   input,  width = 64, ENAMETOOLONG.data
		.ENODEV               (_connected_to_ENODEV_),               //   input,  width = 64,       ENODEV.data
		.ENOENT               (_connected_to_ENOENT_),               //   input,  width = 64,       ENOENT.data
		.ENOLCK               (_connected_to_ENOLCK_),               //   input,  width = 64,       ENOLCK.data
		.ENOMEDIUM            (_connected_to_ENOMEDIUM_),            //   input,  width = 64,    ENOMEDIUM.data
		.ENOMEM               (_connected_to_ENOMEM_),               //   input,  width = 64,       ENOMEM.data
		.ENOSPC               (_connected_to_ENOSPC_),               //   input,  width = 64,       ENOSPC.data
		.ENOTCONN             (_connected_to_ENOTCONN_),             //   input,  width = 64,     ENOTCONN.data
		.ENOTDIR              (_connected_to_ENOTDIR_),              //   input,  width = 64,      ENOTDIR.data
		.ENOTEMPTY            (_connected_to_ENOTEMPTY_),            //   input,  width = 64,    ENOTEMPTY.data
		.ENOTSUPP             (_connected_to_ENOTSUPP_),             //   input,  width = 64,     ENOTSUPP.data
		.ENXIO                (_connected_to_ENXIO_),                //   input,  width = 64,        ENXIO.data
		.EPERM                (_connected_to_EPERM_),                //   input,  width = 64,        EPERM.data
		.EPROTO               (_connected_to_EPROTO_),               //   input,  width = 64,       EPROTO.data
		.ERANGE               (_connected_to_ERANGE_),               //   input,  width = 64,       ERANGE.data
		.EREMOTEIO            (_connected_to_EREMOTEIO_),            //   input,  width = 64,    EREMOTEIO.data
		.EROFS                (_connected_to_EROFS_),                //   input,  width = 64,        EROFS.data
		.ETIMEDOUT            (_connected_to_ETIMEDOUT_),            //   input,  width = 64,    ETIMEDOUT.data
		.EWOULDBLOCK          (_connected_to_EWOULDBLOCK_),          //   input,  width = 64,  EWOULDBLOCK.data
		.EXDEV                (_connected_to_EXDEV_),                //   input,  width = 64,        EXDEV.data
		.avmm_0_rw_address    (_connected_to_avmm_0_rw_address_),    //  output,  width = 64,    avmm_0_rw.address
		.avmm_0_rw_byteenable (_connected_to_avmm_0_rw_byteenable_), //  output,   width = 8,             .byteenable
		.avmm_0_rw_read       (_connected_to_avmm_0_rw_read_),       //  output,   width = 1,             .read
		.avmm_0_rw_readdata   (_connected_to_avmm_0_rw_readdata_),   //   input,  width = 64,             .readdata
		.avmm_0_rw_write      (_connected_to_avmm_0_rw_write_),      //  output,   width = 1,             .write
		.avmm_0_rw_writedata  (_connected_to_avmm_0_rw_writedata_)   //  output,  width = 64,             .writedata
	);

