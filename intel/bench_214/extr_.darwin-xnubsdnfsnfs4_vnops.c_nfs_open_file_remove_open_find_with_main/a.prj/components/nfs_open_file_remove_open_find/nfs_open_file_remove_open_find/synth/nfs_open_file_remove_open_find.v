// nfs_open_file_remove_open_find.v

// Generated using ACDS version 19.4 64

`timescale 1 ps / 1 ps
module nfs_open_file_remove_open_find (
		input  wire        clock,                       //                       clock.clk
		input  wire        resetn,                      //                       reset.reset_n
		input  wire        start,                       //                        call.valid
		output wire        busy,                        //                            .stall
		output wire        done,                        //                      return.valid
		input  wire        stall,                       //                            .stall
		input  wire [63:0] nofp,                        //                        nofp.data
		input  wire [31:0] accessMode,                  //                  accessMode.data
		input  wire [31:0] denyMode,                    //                    denyMode.data
		input  wire [63:0] newAccessMode,               //               newAccessMode.data
		input  wire [63:0] newDenyMode,                 //                 newDenyMode.data
		input  wire [63:0] delegated,                   //                   delegated.data
		input  wire [63:0] NFS_OPEN_SHARE_ACCESS_BOTH,  //  NFS_OPEN_SHARE_ACCESS_BOTH.data
		input  wire [63:0] NFS_OPEN_SHARE_ACCESS_READ,  //  NFS_OPEN_SHARE_ACCESS_READ.data
		input  wire [63:0] NFS_OPEN_SHARE_ACCESS_WRITE, // NFS_OPEN_SHARE_ACCESS_WRITE.data
		input  wire [63:0] NFS_OPEN_SHARE_DENY_NONE,    //    NFS_OPEN_SHARE_DENY_NONE.data
		input  wire [63:0] NFS_OPEN_SHARE_DENY_READ,    //    NFS_OPEN_SHARE_DENY_READ.data
		input  wire [63:0] NFS_OPEN_SHARE_DENY_WRITE,   //   NFS_OPEN_SHARE_DENY_WRITE.data
		output wire [63:0] avmm_0_rw_address,           //                   avmm_0_rw.address
		output wire [7:0]  avmm_0_rw_byteenable,        //                            .byteenable
		output wire        avmm_0_rw_read,              //                            .read
		input  wire [63:0] avmm_0_rw_readdata,          //                            .readdata
		output wire        avmm_0_rw_write,             //                            .write
		output wire [63:0] avmm_0_rw_writedata          //                            .writedata
	);

	nfs_open_file_remove_open_find_internal nfs_open_file_remove_open_find_internal_inst (
		.clock                       (clock),                       //   input,   width = 1,                       clock.clk
		.resetn                      (resetn),                      //   input,   width = 1,                       reset.reset_n
		.start                       (start),                       //   input,   width = 1,                        call.valid
		.busy                        (busy),                        //  output,   width = 1,                            .stall
		.done                        (done),                        //  output,   width = 1,                      return.valid
		.stall                       (stall),                       //   input,   width = 1,                            .stall
		.nofp                        (nofp),                        //   input,  width = 64,                        nofp.data
		.accessMode                  (accessMode),                  //   input,  width = 32,                  accessMode.data
		.denyMode                    (denyMode),                    //   input,  width = 32,                    denyMode.data
		.newAccessMode               (newAccessMode),               //   input,  width = 64,               newAccessMode.data
		.newDenyMode                 (newDenyMode),                 //   input,  width = 64,                 newDenyMode.data
		.delegated                   (delegated),                   //   input,  width = 64,                   delegated.data
		.NFS_OPEN_SHARE_ACCESS_BOTH  (NFS_OPEN_SHARE_ACCESS_BOTH),  //   input,  width = 64,  NFS_OPEN_SHARE_ACCESS_BOTH.data
		.NFS_OPEN_SHARE_ACCESS_READ  (NFS_OPEN_SHARE_ACCESS_READ),  //   input,  width = 64,  NFS_OPEN_SHARE_ACCESS_READ.data
		.NFS_OPEN_SHARE_ACCESS_WRITE (NFS_OPEN_SHARE_ACCESS_WRITE), //   input,  width = 64, NFS_OPEN_SHARE_ACCESS_WRITE.data
		.NFS_OPEN_SHARE_DENY_NONE    (NFS_OPEN_SHARE_DENY_NONE),    //   input,  width = 64,    NFS_OPEN_SHARE_DENY_NONE.data
		.NFS_OPEN_SHARE_DENY_READ    (NFS_OPEN_SHARE_DENY_READ),    //   input,  width = 64,    NFS_OPEN_SHARE_DENY_READ.data
		.NFS_OPEN_SHARE_DENY_WRITE   (NFS_OPEN_SHARE_DENY_WRITE),   //   input,  width = 64,   NFS_OPEN_SHARE_DENY_WRITE.data
		.avmm_0_rw_address           (avmm_0_rw_address),           //  output,  width = 64,                   avmm_0_rw.address
		.avmm_0_rw_byteenable        (avmm_0_rw_byteenable),        //  output,   width = 8,                            .byteenable
		.avmm_0_rw_read              (avmm_0_rw_read),              //  output,   width = 1,                            .read
		.avmm_0_rw_readdata          (avmm_0_rw_readdata),          //   input,  width = 64,                            .readdata
		.avmm_0_rw_write             (avmm_0_rw_write),             //  output,   width = 1,                            .write
		.avmm_0_rw_writedata         (avmm_0_rw_writedata)          //  output,  width = 64,                            .writedata
	);

endmodule
