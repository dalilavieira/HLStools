// (C) 1992-2019 Intel Corporation.                            
// Intel, the Intel logo, Intel, MegaCore, NIOS II, Quartus and TalkBack words    
// and logos are trademarks of Intel Corporation or its subsidiaries in the U.S.  
// and/or other countries. Other marks and brands may be claimed as the property  
// of others. See Trademarks on intel.com for full list of Intel trademarks or    
// the Trademarks & Brands Names Database (if Intel) or See www.Intel.com/legal (if Altera) 
// Your use of Intel Corporation's design tools, logic functions and other        
// software and tools, and its AMPP partner logic functions, and any output       
// files any of the foregoing (including device programming or simulation         
// files), and any associated documentation or information are expressly subject  
// to the terms and conditions of the Altera Program License Subscription         
// Agreement, Intel MegaCore Function License Agreement, or other applicable      
// license agreement, including, without limitation, that your use is for the     
// sole purpose of programming logic devices manufactured by Intel and sold by    
// Intel or its authorized distributors.  Please refer to the applicable          
// agreement for further details.                                                 

// Generated by Intel(R) HLS Compiler, Version 19.4.0 Build 64

typedef struct packed {
 logic [63:0] kVK_UpArrow;
 logic [63:0] kVK_Tab;
 logic [63:0] kVK_Space;
 logic [63:0] kVK_Shift;
 logic [63:0] kVK_RightArrow;
 logic [63:0] kVK_Return;
 logic [63:0] kVK_PageUp;
 logic [63:0] kVK_PageDown;
 logic [63:0] kVK_Option;
 logic [63:0] kVK_LeftArrow;
 logic [63:0] kVK_ISO_Section;
 logic [63:0] kVK_Home;
 logic [63:0] kVK_Help;
 logic [63:0] kVK_ForwardDelete;
 logic [63:0] kVK_F9;
 logic [63:0] kVK_F8;
 logic [63:0] kVK_F7;
 logic [63:0] kVK_F6;
 logic [63:0] kVK_F5;
 logic [63:0] kVK_F4;
 logic [63:0] kVK_F3;
 logic [63:0] kVK_F20;
 logic [63:0] kVK_F2;
 logic [63:0] kVK_F19;
 logic [63:0] kVK_F18;
 logic [63:0] kVK_F17;
 logic [63:0] kVK_F16;
 logic [63:0] kVK_F15;
 logic [63:0] kVK_F14;
 logic [63:0] kVK_F13;
 logic [63:0] kVK_F12;
 logic [63:0] kVK_F11;
 logic [63:0] kVK_F10;
 logic [63:0] kVK_F1;
 logic [63:0] kVK_Escape;
 logic [63:0] kVK_End;
 logic [63:0] kVK_DownArrow;
 logic [63:0] kVK_Delete;
 logic [63:0] kVK_Control;
 logic [63:0] kVK_Command;
 logic [63:0] kVK_CapsLock;
 logic [63:0] kVK_ANSI_Z;
 logic [63:0] kVK_ANSI_Y;
 logic [63:0] kVK_ANSI_X;
 logic [63:0] kVK_ANSI_W;
 logic [63:0] kVK_ANSI_V;
 logic [63:0] kVK_ANSI_U;
 logic [63:0] kVK_ANSI_T;
 logic [63:0] kVK_ANSI_Slash;
 logic [63:0] kVK_ANSI_Semicolon;
 logic [63:0] kVK_ANSI_S;
 logic [63:0] kVK_ANSI_RightBracket;
 logic [63:0] kVK_ANSI_R;
 logic [63:0] kVK_ANSI_Quote;
 logic [63:0] kVK_ANSI_Q;
 logic [63:0] kVK_ANSI_Period;
 logic [63:0] kVK_ANSI_P;
 logic [63:0] kVK_ANSI_O;
 logic [63:0] kVK_ANSI_N;
 logic [63:0] kVK_ANSI_Minus;
 logic [63:0] kVK_ANSI_M;
 logic [63:0] kVK_ANSI_LeftBracket;
 logic [63:0] kVK_ANSI_L;
 logic [63:0] kVK_ANSI_KeypadPlus;
 logic [63:0] kVK_ANSI_KeypadMultiply;
 logic [63:0] kVK_ANSI_KeypadMinus;
 logic [63:0] kVK_ANSI_KeypadEquals;
 logic [63:0] kVK_ANSI_KeypadEnter;
 logic [63:0] kVK_ANSI_KeypadDivide;
 logic [63:0] kVK_ANSI_KeypadDecimal;
 logic [63:0] kVK_ANSI_KeypadClear;
 logic [63:0] kVK_ANSI_Keypad9;
 logic [63:0] kVK_ANSI_Keypad8;
 logic [63:0] kVK_ANSI_Keypad7;
 logic [63:0] kVK_ANSI_Keypad6;
 logic [63:0] kVK_ANSI_Keypad5;
 logic [63:0] kVK_ANSI_Keypad4;
 logic [63:0] kVK_ANSI_Keypad3;
 logic [63:0] kVK_ANSI_Keypad2;
 logic [63:0] kVK_ANSI_Keypad1;
 logic [63:0] kVK_ANSI_Keypad0;
 logic [63:0] kVK_ANSI_K;
 logic [63:0] kVK_ANSI_J;
 logic [63:0] kVK_ANSI_I;
 logic [63:0] kVK_ANSI_H;
 logic [63:0] kVK_ANSI_Grave;
 logic [63:0] kVK_ANSI_G;
 logic [63:0] kVK_ANSI_F;
 logic [63:0] kVK_ANSI_Equal;
 logic [63:0] kVK_ANSI_E;
 logic [63:0] kVK_ANSI_D;
 logic [63:0] kVK_ANSI_Comma;
 logic [63:0] kVK_ANSI_C;
 logic [63:0] kVK_ANSI_Backslash;
 logic [63:0] kVK_ANSI_B;
 logic [63:0] kVK_ANSI_A;
 logic [63:0] kVK_ANSI_9;
 logic [63:0] kVK_ANSI_8;
 logic [63:0] kVK_ANSI_7;
 logic [63:0] kVK_ANSI_6;
 logic [63:0] kVK_ANSI_5;
 logic [63:0] kVK_ANSI_4;
 logic [63:0] kVK_ANSI_3;
 logic [63:0] kVK_ANSI_2;
 logic [63:0] kVK_ANSI_1;
 logic [63:0] kVK_ANSI_0;
 logic [63:0] INVALID_KEY;
 logic [31:0] __padding$0;
 logic [31:0] code;
} struct_obs_key_to_virtual_key_inputs;



