// obs_key_to_virtual_key.v

// Generated using ACDS version 19.4 64

`timescale 1 ps / 1 ps
module obs_key_to_virtual_key (
		input  wire        clock,                   //                   clock.clk
		input  wire        resetn,                  //                   reset.reset_n
		input  wire        start,                   //                    call.valid
		output wire        busy,                    //                        .stall
		output wire        done,                    //                  return.valid
		input  wire        stall,                   //                        .stall
		output wire [31:0] returndata,              //              returndata.data
		input  wire [31:0] code,                    //                    code.data
		input  wire [63:0] INVALID_KEY,             //             INVALID_KEY.data
		input  wire [63:0] kVK_ANSI_0,              //              kVK_ANSI_0.data
		input  wire [63:0] kVK_ANSI_1,              //              kVK_ANSI_1.data
		input  wire [63:0] kVK_ANSI_2,              //              kVK_ANSI_2.data
		input  wire [63:0] kVK_ANSI_3,              //              kVK_ANSI_3.data
		input  wire [63:0] kVK_ANSI_4,              //              kVK_ANSI_4.data
		input  wire [63:0] kVK_ANSI_5,              //              kVK_ANSI_5.data
		input  wire [63:0] kVK_ANSI_6,              //              kVK_ANSI_6.data
		input  wire [63:0] kVK_ANSI_7,              //              kVK_ANSI_7.data
		input  wire [63:0] kVK_ANSI_8,              //              kVK_ANSI_8.data
		input  wire [63:0] kVK_ANSI_9,              //              kVK_ANSI_9.data
		input  wire [63:0] kVK_ANSI_A,              //              kVK_ANSI_A.data
		input  wire [63:0] kVK_ANSI_B,              //              kVK_ANSI_B.data
		input  wire [63:0] kVK_ANSI_Backslash,      //      kVK_ANSI_Backslash.data
		input  wire [63:0] kVK_ANSI_C,              //              kVK_ANSI_C.data
		input  wire [63:0] kVK_ANSI_Comma,          //          kVK_ANSI_Comma.data
		input  wire [63:0] kVK_ANSI_D,              //              kVK_ANSI_D.data
		input  wire [63:0] kVK_ANSI_E,              //              kVK_ANSI_E.data
		input  wire [63:0] kVK_ANSI_Equal,          //          kVK_ANSI_Equal.data
		input  wire [63:0] kVK_ANSI_F,              //              kVK_ANSI_F.data
		input  wire [63:0] kVK_ANSI_G,              //              kVK_ANSI_G.data
		input  wire [63:0] kVK_ANSI_Grave,          //          kVK_ANSI_Grave.data
		input  wire [63:0] kVK_ANSI_H,              //              kVK_ANSI_H.data
		input  wire [63:0] kVK_ANSI_I,              //              kVK_ANSI_I.data
		input  wire [63:0] kVK_ANSI_J,              //              kVK_ANSI_J.data
		input  wire [63:0] kVK_ANSI_K,              //              kVK_ANSI_K.data
		input  wire [63:0] kVK_ANSI_Keypad0,        //        kVK_ANSI_Keypad0.data
		input  wire [63:0] kVK_ANSI_Keypad1,        //        kVK_ANSI_Keypad1.data
		input  wire [63:0] kVK_ANSI_Keypad2,        //        kVK_ANSI_Keypad2.data
		input  wire [63:0] kVK_ANSI_Keypad3,        //        kVK_ANSI_Keypad3.data
		input  wire [63:0] kVK_ANSI_Keypad4,        //        kVK_ANSI_Keypad4.data
		input  wire [63:0] kVK_ANSI_Keypad5,        //        kVK_ANSI_Keypad5.data
		input  wire [63:0] kVK_ANSI_Keypad6,        //        kVK_ANSI_Keypad6.data
		input  wire [63:0] kVK_ANSI_Keypad7,        //        kVK_ANSI_Keypad7.data
		input  wire [63:0] kVK_ANSI_Keypad8,        //        kVK_ANSI_Keypad8.data
		input  wire [63:0] kVK_ANSI_Keypad9,        //        kVK_ANSI_Keypad9.data
		input  wire [63:0] kVK_ANSI_KeypadClear,    //    kVK_ANSI_KeypadClear.data
		input  wire [63:0] kVK_ANSI_KeypadDecimal,  //  kVK_ANSI_KeypadDecimal.data
		input  wire [63:0] kVK_ANSI_KeypadDivide,   //   kVK_ANSI_KeypadDivide.data
		input  wire [63:0] kVK_ANSI_KeypadEnter,    //    kVK_ANSI_KeypadEnter.data
		input  wire [63:0] kVK_ANSI_KeypadEquals,   //   kVK_ANSI_KeypadEquals.data
		input  wire [63:0] kVK_ANSI_KeypadMinus,    //    kVK_ANSI_KeypadMinus.data
		input  wire [63:0] kVK_ANSI_KeypadMultiply, // kVK_ANSI_KeypadMultiply.data
		input  wire [63:0] kVK_ANSI_KeypadPlus,     //     kVK_ANSI_KeypadPlus.data
		input  wire [63:0] kVK_ANSI_L,              //              kVK_ANSI_L.data
		input  wire [63:0] kVK_ANSI_LeftBracket,    //    kVK_ANSI_LeftBracket.data
		input  wire [63:0] kVK_ANSI_M,              //              kVK_ANSI_M.data
		input  wire [63:0] kVK_ANSI_Minus,          //          kVK_ANSI_Minus.data
		input  wire [63:0] kVK_ANSI_N,              //              kVK_ANSI_N.data
		input  wire [63:0] kVK_ANSI_O,              //              kVK_ANSI_O.data
		input  wire [63:0] kVK_ANSI_P,              //              kVK_ANSI_P.data
		input  wire [63:0] kVK_ANSI_Period,         //         kVK_ANSI_Period.data
		input  wire [63:0] kVK_ANSI_Q,              //              kVK_ANSI_Q.data
		input  wire [63:0] kVK_ANSI_Quote,          //          kVK_ANSI_Quote.data
		input  wire [63:0] kVK_ANSI_R,              //              kVK_ANSI_R.data
		input  wire [63:0] kVK_ANSI_RightBracket,   //   kVK_ANSI_RightBracket.data
		input  wire [63:0] kVK_ANSI_S,              //              kVK_ANSI_S.data
		input  wire [63:0] kVK_ANSI_Semicolon,      //      kVK_ANSI_Semicolon.data
		input  wire [63:0] kVK_ANSI_Slash,          //          kVK_ANSI_Slash.data
		input  wire [63:0] kVK_ANSI_T,              //              kVK_ANSI_T.data
		input  wire [63:0] kVK_ANSI_U,              //              kVK_ANSI_U.data
		input  wire [63:0] kVK_ANSI_V,              //              kVK_ANSI_V.data
		input  wire [63:0] kVK_ANSI_W,              //              kVK_ANSI_W.data
		input  wire [63:0] kVK_ANSI_X,              //              kVK_ANSI_X.data
		input  wire [63:0] kVK_ANSI_Y,              //              kVK_ANSI_Y.data
		input  wire [63:0] kVK_ANSI_Z,              //              kVK_ANSI_Z.data
		input  wire [63:0] kVK_CapsLock,            //            kVK_CapsLock.data
		input  wire [63:0] kVK_Command,             //             kVK_Command.data
		input  wire [63:0] kVK_Control,             //             kVK_Control.data
		input  wire [63:0] kVK_Delete,              //              kVK_Delete.data
		input  wire [63:0] kVK_DownArrow,           //           kVK_DownArrow.data
		input  wire [63:0] kVK_End,                 //                 kVK_End.data
		input  wire [63:0] kVK_Escape,              //              kVK_Escape.data
		input  wire [63:0] kVK_F1,                  //                  kVK_F1.data
		input  wire [63:0] kVK_F10,                 //                 kVK_F10.data
		input  wire [63:0] kVK_F11,                 //                 kVK_F11.data
		input  wire [63:0] kVK_F12,                 //                 kVK_F12.data
		input  wire [63:0] kVK_F13,                 //                 kVK_F13.data
		input  wire [63:0] kVK_F14,                 //                 kVK_F14.data
		input  wire [63:0] kVK_F15,                 //                 kVK_F15.data
		input  wire [63:0] kVK_F16,                 //                 kVK_F16.data
		input  wire [63:0] kVK_F17,                 //                 kVK_F17.data
		input  wire [63:0] kVK_F18,                 //                 kVK_F18.data
		input  wire [63:0] kVK_F19,                 //                 kVK_F19.data
		input  wire [63:0] kVK_F2,                  //                  kVK_F2.data
		input  wire [63:0] kVK_F20,                 //                 kVK_F20.data
		input  wire [63:0] kVK_F3,                  //                  kVK_F3.data
		input  wire [63:0] kVK_F4,                  //                  kVK_F4.data
		input  wire [63:0] kVK_F5,                  //                  kVK_F5.data
		input  wire [63:0] kVK_F6,                  //                  kVK_F6.data
		input  wire [63:0] kVK_F7,                  //                  kVK_F7.data
		input  wire [63:0] kVK_F8,                  //                  kVK_F8.data
		input  wire [63:0] kVK_F9,                  //                  kVK_F9.data
		input  wire [63:0] kVK_ForwardDelete,       //       kVK_ForwardDelete.data
		input  wire [63:0] kVK_Help,                //                kVK_Help.data
		input  wire [63:0] kVK_Home,                //                kVK_Home.data
		input  wire [63:0] kVK_ISO_Section,         //         kVK_ISO_Section.data
		input  wire [63:0] kVK_LeftArrow,           //           kVK_LeftArrow.data
		input  wire [63:0] kVK_Option,              //              kVK_Option.data
		input  wire [63:0] kVK_PageDown,            //            kVK_PageDown.data
		input  wire [63:0] kVK_PageUp,              //              kVK_PageUp.data
		input  wire [63:0] kVK_Return,              //              kVK_Return.data
		input  wire [63:0] kVK_RightArrow,          //          kVK_RightArrow.data
		input  wire [63:0] kVK_Shift,               //               kVK_Shift.data
		input  wire [63:0] kVK_Space,               //               kVK_Space.data
		input  wire [63:0] kVK_Tab,                 //                 kVK_Tab.data
		input  wire [63:0] kVK_UpArrow,             //             kVK_UpArrow.data
		output wire [63:0] avmm_0_rw_address,       //               avmm_0_rw.address
		output wire [7:0]  avmm_0_rw_byteenable,    //                        .byteenable
		output wire        avmm_0_rw_read,          //                        .read
		input  wire [63:0] avmm_0_rw_readdata,      //                        .readdata
		output wire        avmm_0_rw_write,         //                        .write
		output wire [63:0] avmm_0_rw_writedata      //                        .writedata
	);

	obs_key_to_virtual_key_internal obs_key_to_virtual_key_internal_inst (
		.clock                   (clock),                   //   input,   width = 1,                   clock.clk
		.resetn                  (resetn),                  //   input,   width = 1,                   reset.reset_n
		.start                   (start),                   //   input,   width = 1,                    call.valid
		.busy                    (busy),                    //  output,   width = 1,                        .stall
		.done                    (done),                    //  output,   width = 1,                  return.valid
		.stall                   (stall),                   //   input,   width = 1,                        .stall
		.returndata              (returndata),              //  output,  width = 32,              returndata.data
		.code                    (code),                    //   input,  width = 32,                    code.data
		.INVALID_KEY             (INVALID_KEY),             //   input,  width = 64,             INVALID_KEY.data
		.kVK_ANSI_0              (kVK_ANSI_0),              //   input,  width = 64,              kVK_ANSI_0.data
		.kVK_ANSI_1              (kVK_ANSI_1),              //   input,  width = 64,              kVK_ANSI_1.data
		.kVK_ANSI_2              (kVK_ANSI_2),              //   input,  width = 64,              kVK_ANSI_2.data
		.kVK_ANSI_3              (kVK_ANSI_3),              //   input,  width = 64,              kVK_ANSI_3.data
		.kVK_ANSI_4              (kVK_ANSI_4),              //   input,  width = 64,              kVK_ANSI_4.data
		.kVK_ANSI_5              (kVK_ANSI_5),              //   input,  width = 64,              kVK_ANSI_5.data
		.kVK_ANSI_6              (kVK_ANSI_6),              //   input,  width = 64,              kVK_ANSI_6.data
		.kVK_ANSI_7              (kVK_ANSI_7),              //   input,  width = 64,              kVK_ANSI_7.data
		.kVK_ANSI_8              (kVK_ANSI_8),              //   input,  width = 64,              kVK_ANSI_8.data
		.kVK_ANSI_9              (kVK_ANSI_9),              //   input,  width = 64,              kVK_ANSI_9.data
		.kVK_ANSI_A              (kVK_ANSI_A),              //   input,  width = 64,              kVK_ANSI_A.data
		.kVK_ANSI_B              (kVK_ANSI_B),              //   input,  width = 64,              kVK_ANSI_B.data
		.kVK_ANSI_Backslash      (kVK_ANSI_Backslash),      //   input,  width = 64,      kVK_ANSI_Backslash.data
		.kVK_ANSI_C              (kVK_ANSI_C),              //   input,  width = 64,              kVK_ANSI_C.data
		.kVK_ANSI_Comma          (kVK_ANSI_Comma),          //   input,  width = 64,          kVK_ANSI_Comma.data
		.kVK_ANSI_D              (kVK_ANSI_D),              //   input,  width = 64,              kVK_ANSI_D.data
		.kVK_ANSI_E              (kVK_ANSI_E),              //   input,  width = 64,              kVK_ANSI_E.data
		.kVK_ANSI_Equal          (kVK_ANSI_Equal),          //   input,  width = 64,          kVK_ANSI_Equal.data
		.kVK_ANSI_F              (kVK_ANSI_F),              //   input,  width = 64,              kVK_ANSI_F.data
		.kVK_ANSI_G              (kVK_ANSI_G),              //   input,  width = 64,              kVK_ANSI_G.data
		.kVK_ANSI_Grave          (kVK_ANSI_Grave),          //   input,  width = 64,          kVK_ANSI_Grave.data
		.kVK_ANSI_H              (kVK_ANSI_H),              //   input,  width = 64,              kVK_ANSI_H.data
		.kVK_ANSI_I              (kVK_ANSI_I),              //   input,  width = 64,              kVK_ANSI_I.data
		.kVK_ANSI_J              (kVK_ANSI_J),              //   input,  width = 64,              kVK_ANSI_J.data
		.kVK_ANSI_K              (kVK_ANSI_K),              //   input,  width = 64,              kVK_ANSI_K.data
		.kVK_ANSI_Keypad0        (kVK_ANSI_Keypad0),        //   input,  width = 64,        kVK_ANSI_Keypad0.data
		.kVK_ANSI_Keypad1        (kVK_ANSI_Keypad1),        //   input,  width = 64,        kVK_ANSI_Keypad1.data
		.kVK_ANSI_Keypad2        (kVK_ANSI_Keypad2),        //   input,  width = 64,        kVK_ANSI_Keypad2.data
		.kVK_ANSI_Keypad3        (kVK_ANSI_Keypad3),        //   input,  width = 64,        kVK_ANSI_Keypad3.data
		.kVK_ANSI_Keypad4        (kVK_ANSI_Keypad4),        //   input,  width = 64,        kVK_ANSI_Keypad4.data
		.kVK_ANSI_Keypad5        (kVK_ANSI_Keypad5),        //   input,  width = 64,        kVK_ANSI_Keypad5.data
		.kVK_ANSI_Keypad6        (kVK_ANSI_Keypad6),        //   input,  width = 64,        kVK_ANSI_Keypad6.data
		.kVK_ANSI_Keypad7        (kVK_ANSI_Keypad7),        //   input,  width = 64,        kVK_ANSI_Keypad7.data
		.kVK_ANSI_Keypad8        (kVK_ANSI_Keypad8),        //   input,  width = 64,        kVK_ANSI_Keypad8.data
		.kVK_ANSI_Keypad9        (kVK_ANSI_Keypad9),        //   input,  width = 64,        kVK_ANSI_Keypad9.data
		.kVK_ANSI_KeypadClear    (kVK_ANSI_KeypadClear),    //   input,  width = 64,    kVK_ANSI_KeypadClear.data
		.kVK_ANSI_KeypadDecimal  (kVK_ANSI_KeypadDecimal),  //   input,  width = 64,  kVK_ANSI_KeypadDecimal.data
		.kVK_ANSI_KeypadDivide   (kVK_ANSI_KeypadDivide),   //   input,  width = 64,   kVK_ANSI_KeypadDivide.data
		.kVK_ANSI_KeypadEnter    (kVK_ANSI_KeypadEnter),    //   input,  width = 64,    kVK_ANSI_KeypadEnter.data
		.kVK_ANSI_KeypadEquals   (kVK_ANSI_KeypadEquals),   //   input,  width = 64,   kVK_ANSI_KeypadEquals.data
		.kVK_ANSI_KeypadMinus    (kVK_ANSI_KeypadMinus),    //   input,  width = 64,    kVK_ANSI_KeypadMinus.data
		.kVK_ANSI_KeypadMultiply (kVK_ANSI_KeypadMultiply), //   input,  width = 64, kVK_ANSI_KeypadMultiply.data
		.kVK_ANSI_KeypadPlus     (kVK_ANSI_KeypadPlus),     //   input,  width = 64,     kVK_ANSI_KeypadPlus.data
		.kVK_ANSI_L              (kVK_ANSI_L),              //   input,  width = 64,              kVK_ANSI_L.data
		.kVK_ANSI_LeftBracket    (kVK_ANSI_LeftBracket),    //   input,  width = 64,    kVK_ANSI_LeftBracket.data
		.kVK_ANSI_M              (kVK_ANSI_M),              //   input,  width = 64,              kVK_ANSI_M.data
		.kVK_ANSI_Minus          (kVK_ANSI_Minus),          //   input,  width = 64,          kVK_ANSI_Minus.data
		.kVK_ANSI_N              (kVK_ANSI_N),              //   input,  width = 64,              kVK_ANSI_N.data
		.kVK_ANSI_O              (kVK_ANSI_O),              //   input,  width = 64,              kVK_ANSI_O.data
		.kVK_ANSI_P              (kVK_ANSI_P),              //   input,  width = 64,              kVK_ANSI_P.data
		.kVK_ANSI_Period         (kVK_ANSI_Period),         //   input,  width = 64,         kVK_ANSI_Period.data
		.kVK_ANSI_Q              (kVK_ANSI_Q),              //   input,  width = 64,              kVK_ANSI_Q.data
		.kVK_ANSI_Quote          (kVK_ANSI_Quote),          //   input,  width = 64,          kVK_ANSI_Quote.data
		.kVK_ANSI_R              (kVK_ANSI_R),              //   input,  width = 64,              kVK_ANSI_R.data
		.kVK_ANSI_RightBracket   (kVK_ANSI_RightBracket),   //   input,  width = 64,   kVK_ANSI_RightBracket.data
		.kVK_ANSI_S              (kVK_ANSI_S),              //   input,  width = 64,              kVK_ANSI_S.data
		.kVK_ANSI_Semicolon      (kVK_ANSI_Semicolon),      //   input,  width = 64,      kVK_ANSI_Semicolon.data
		.kVK_ANSI_Slash          (kVK_ANSI_Slash),          //   input,  width = 64,          kVK_ANSI_Slash.data
		.kVK_ANSI_T              (kVK_ANSI_T),              //   input,  width = 64,              kVK_ANSI_T.data
		.kVK_ANSI_U              (kVK_ANSI_U),              //   input,  width = 64,              kVK_ANSI_U.data
		.kVK_ANSI_V              (kVK_ANSI_V),              //   input,  width = 64,              kVK_ANSI_V.data
		.kVK_ANSI_W              (kVK_ANSI_W),              //   input,  width = 64,              kVK_ANSI_W.data
		.kVK_ANSI_X              (kVK_ANSI_X),              //   input,  width = 64,              kVK_ANSI_X.data
		.kVK_ANSI_Y              (kVK_ANSI_Y),              //   input,  width = 64,              kVK_ANSI_Y.data
		.kVK_ANSI_Z              (kVK_ANSI_Z),              //   input,  width = 64,              kVK_ANSI_Z.data
		.kVK_CapsLock            (kVK_CapsLock),            //   input,  width = 64,            kVK_CapsLock.data
		.kVK_Command             (kVK_Command),             //   input,  width = 64,             kVK_Command.data
		.kVK_Control             (kVK_Control),             //   input,  width = 64,             kVK_Control.data
		.kVK_Delete              (kVK_Delete),              //   input,  width = 64,              kVK_Delete.data
		.kVK_DownArrow           (kVK_DownArrow),           //   input,  width = 64,           kVK_DownArrow.data
		.kVK_End                 (kVK_End),                 //   input,  width = 64,                 kVK_End.data
		.kVK_Escape              (kVK_Escape),              //   input,  width = 64,              kVK_Escape.data
		.kVK_F1                  (kVK_F1),                  //   input,  width = 64,                  kVK_F1.data
		.kVK_F10                 (kVK_F10),                 //   input,  width = 64,                 kVK_F10.data
		.kVK_F11                 (kVK_F11),                 //   input,  width = 64,                 kVK_F11.data
		.kVK_F12                 (kVK_F12),                 //   input,  width = 64,                 kVK_F12.data
		.kVK_F13                 (kVK_F13),                 //   input,  width = 64,                 kVK_F13.data
		.kVK_F14                 (kVK_F14),                 //   input,  width = 64,                 kVK_F14.data
		.kVK_F15                 (kVK_F15),                 //   input,  width = 64,                 kVK_F15.data
		.kVK_F16                 (kVK_F16),                 //   input,  width = 64,                 kVK_F16.data
		.kVK_F17                 (kVK_F17),                 //   input,  width = 64,                 kVK_F17.data
		.kVK_F18                 (kVK_F18),                 //   input,  width = 64,                 kVK_F18.data
		.kVK_F19                 (kVK_F19),                 //   input,  width = 64,                 kVK_F19.data
		.kVK_F2                  (kVK_F2),                  //   input,  width = 64,                  kVK_F2.data
		.kVK_F20                 (kVK_F20),                 //   input,  width = 64,                 kVK_F20.data
		.kVK_F3                  (kVK_F3),                  //   input,  width = 64,                  kVK_F3.data
		.kVK_F4                  (kVK_F4),                  //   input,  width = 64,                  kVK_F4.data
		.kVK_F5                  (kVK_F5),                  //   input,  width = 64,                  kVK_F5.data
		.kVK_F6                  (kVK_F6),                  //   input,  width = 64,                  kVK_F6.data
		.kVK_F7                  (kVK_F7),                  //   input,  width = 64,                  kVK_F7.data
		.kVK_F8                  (kVK_F8),                  //   input,  width = 64,                  kVK_F8.data
		.kVK_F9                  (kVK_F9),                  //   input,  width = 64,                  kVK_F9.data
		.kVK_ForwardDelete       (kVK_ForwardDelete),       //   input,  width = 64,       kVK_ForwardDelete.data
		.kVK_Help                (kVK_Help),                //   input,  width = 64,                kVK_Help.data
		.kVK_Home                (kVK_Home),                //   input,  width = 64,                kVK_Home.data
		.kVK_ISO_Section         (kVK_ISO_Section),         //   input,  width = 64,         kVK_ISO_Section.data
		.kVK_LeftArrow           (kVK_LeftArrow),           //   input,  width = 64,           kVK_LeftArrow.data
		.kVK_Option              (kVK_Option),              //   input,  width = 64,              kVK_Option.data
		.kVK_PageDown            (kVK_PageDown),            //   input,  width = 64,            kVK_PageDown.data
		.kVK_PageUp              (kVK_PageUp),              //   input,  width = 64,              kVK_PageUp.data
		.kVK_Return              (kVK_Return),              //   input,  width = 64,              kVK_Return.data
		.kVK_RightArrow          (kVK_RightArrow),          //   input,  width = 64,          kVK_RightArrow.data
		.kVK_Shift               (kVK_Shift),               //   input,  width = 64,               kVK_Shift.data
		.kVK_Space               (kVK_Space),               //   input,  width = 64,               kVK_Space.data
		.kVK_Tab                 (kVK_Tab),                 //   input,  width = 64,                 kVK_Tab.data
		.kVK_UpArrow             (kVK_UpArrow),             //   input,  width = 64,             kVK_UpArrow.data
		.avmm_0_rw_address       (avmm_0_rw_address),       //  output,  width = 64,               avmm_0_rw.address
		.avmm_0_rw_byteenable    (avmm_0_rw_byteenable),    //  output,   width = 8,                        .byteenable
		.avmm_0_rw_read          (avmm_0_rw_read),          //  output,   width = 1,                        .read
		.avmm_0_rw_readdata      (avmm_0_rw_readdata),      //   input,  width = 64,                        .readdata
		.avmm_0_rw_write         (avmm_0_rw_write),         //  output,   width = 1,                        .write
		.avmm_0_rw_writedata     (avmm_0_rw_writedata)      //  output,  width = 64,                        .writedata
	);

endmodule
