// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _capidtmf_goertzel_result_HH_
#define _capidtmf_goertzel_result_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct capidtmf_goertzel_result : public sc_module {
    // Port declarations 24
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<10> > buffer_r_address0;
    sc_out< sc_logic > buffer_r_ce0;
    sc_out< sc_logic > buffer_r_we0;
    sc_out< sc_lv<64> > buffer_r_d0;
    sc_in< sc_lv<64> > buffer_r_q0;
    sc_out< sc_lv<10> > buffer_r_address1;
    sc_out< sc_logic > buffer_r_ce1;
    sc_out< sc_logic > buffer_r_we1;
    sc_out< sc_lv<64> > buffer_r_d1;
    sc_in< sc_lv<64> > buffer_r_q1;
    sc_out< sc_lv<10> > coeffs_address0;
    sc_out< sc_logic > coeffs_ce0;
    sc_out< sc_logic > coeffs_we0;
    sc_out< sc_lv<64> > coeffs_d0;
    sc_in< sc_lv<64> > coeffs_q0;
    sc_out< sc_lv<10> > coeffs_address1;
    sc_out< sc_logic > coeffs_ce1;
    sc_out< sc_logic > coeffs_we1;
    sc_out< sc_lv<64> > coeffs_d1;
    sc_in< sc_lv<64> > coeffs_q1;
    // Port declarations for the virtual clock. 
    sc_in_clk ap_virtual_clock;


    // Module declarations
    capidtmf_goertzel_result(sc_module_name name);
    SC_HAS_PROCESS(capidtmf_goertzel_result);

    ~capidtmf_goertzel_result();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    static const sc_logic ap_const_logic_1;
    static const sc_lv<10> ap_const_lv10_0;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<64> ap_const_lv64_0;
    // Thread declarations
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_buffer_r_address0();
    void thread_buffer_r_address1();
    void thread_buffer_r_ce0();
    void thread_buffer_r_ce1();
    void thread_buffer_r_d0();
    void thread_buffer_r_d1();
    void thread_buffer_r_we0();
    void thread_buffer_r_we1();
    void thread_coeffs_address0();
    void thread_coeffs_address1();
    void thread_coeffs_ce0();
    void thread_coeffs_ce1();
    void thread_coeffs_d0();
    void thread_coeffs_d1();
    void thread_coeffs_we0();
    void thread_coeffs_we1();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
