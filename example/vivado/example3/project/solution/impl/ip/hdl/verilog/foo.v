// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="foo,hls_ip_2019_1,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7k160t-fbg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=2.199000,HLS_SYN_LAT=0,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=0,HLS_SYN_LUT=23,HLS_VERSION=2019_1}" *)

module foo (
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        t,
        ap_return
);


input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] t;
output  [31:0] ap_return;

wire   [30:0] tmp_fu_30_p4;
wire   [0:0] icmp_ln15_fu_40_p2;

assign ap_done = ap_start;

assign ap_idle = 1'b1;

assign ap_ready = ap_start;

assign ap_return = ((icmp_ln15_fu_40_p2[0:0] === 1'b1) ? 32'd17 : 32'd13);

assign icmp_ln15_fu_40_p2 = (($signed(tmp_fu_30_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign tmp_fu_30_p4 = {{t[31:1]}};

endmodule //foo
